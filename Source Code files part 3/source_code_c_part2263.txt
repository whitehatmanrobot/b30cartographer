 DISPID_EVPROP_ONROWEXIT             (DISPID_EVENTS + 18)
#define DISPID_EVMETH_ONROWEXIT              STDDISPID_XOBJ_ONROWEXIT
#define DISPID_EVPROP_ONROWENTER            (DISPID_EVENTS + 19)
#define DISPID_EVMETH_ONROWENTER             STDDISPID_XOBJ_ONROWENTER
#define DISPID_EVPROP_ONBOUNCE              (DISPID_EVENTS + 20)
#define DISPID_EVMETH_ONBOUNCE               DISPID_ONBOUNCE
#define DISPID_EVPROP_ONBEFOREUPDATE        (DISPID_EVENTS + 21)
#define DISPID_EVMETH_ONBEFOREUPDATE         STDDISPID_XOBJ_BEFOREUPDATE
#define DISPID_EVPROP_ONAFTERUPDATE         (DISPID_EVENTS + 22)
#define DISPID_EVMETH_ONAFTERUPDATE          STDDISPID_XOBJ_AFTERUPDATE
#define DISPID_EVPROP_ONBEFOREDRAGOVER      (DISPID_EVENTS + 23)
#define DISPID_EVMETH_ONBEFOREDRAGOVER       EVENTID_CommonCtrlEvent_BeforeDragOver
#define DISPID_EVPROP_ONBEFOREDROPORPASTE   (DISPID_EVENTS + 24)
#define DISPID_EVMETH_ONBEFOREDROPORPASTE    EVENTID_CommonCtrlEvent_BeforeDropOrPaste
#define DISPID_EVPROP_ONREADYSTATECHANGE    (DISPID_EVENTS + 25)
#define DISPID_EVMETH_ONREADYSTATECHANGE     DISPID_READYSTATECHANGE
#define DISPID_EVPROP_ONFINISH              (DISPID_EVENTS + 26)
#define DISPID_EVMETH_ONFINISH               DISPID_ONFINISH
#define DISPID_EVPROP_ONSTART               (DISPID_EVENTS + 27)
#define DISPID_EVMETH_ONSTART                DISPID_ONSTART
#define DISPID_EVPROP_ONABORT               (DISPID_EVENTS + 28)
#define DISPID_EVMETH_ONABORT                DISPID_ONABORT
#define DISPID_EVPROP_ONERROR               (DISPID_EVENTS + 29)
#define DISPID_EVMETH_ONERROR                DISPID_ONERROR
#define DISPID_EVPROP_ONCHANGE              (DISPID_EVENTS + 30)
#define DISPID_EVMETH_ONCHANGE               DISPID_ONCHANGE
#define DISPID_EVPROP_ONSCROLL              (DISPID_EVENTS + 31)
#define DISPID_EVMETH_ONSCROLL               DISPID_ONSCROLL
#define DISPID_EVPROP_ONLOAD                (DISPID_EVENTS + 32)
#define DISPID_EVMETH_ONLOAD                 DISPID_ONLOAD
#define DISPID_EVPROP_ONUNLOAD              (DISPID_EVENTS + 33)
#define DISPID_EVMETH_ONUNLOAD               DISPID_ONUNLOAD
#define DISPID_EVPROP_ONLAYOUT              (DISPID_EVENTS + 34)
#define DISPID_EVMETH_ONLAYOUT               DISPID_ONLAYOUT
#define DISPID_EVPROP_ONDRAGSTART           (DISPID_EVENTS + 35)
#define DISPID_EVMETH_ONDRAGSTART            STDDISPID_XOBJ_ONDRAGSTART
#define DISPID_EVPROP_ONRESIZE              (DISPID_EVENTS + 36)
#define DISPID_EVMETH_ONRESIZE               DISPID_ONRESIZE
#define DISPID_EVPROP_ONSELECTSTART         (DISPID_EVENTS + 37)
#define DISPID_EVMETH_ONSELECTSTART          STDDISPID_XOBJ_ONSELECTSTART
#define DISPID_EVPROP_ONERRORUPDATE         (DISPID_EVENTS + 38)
#define DISPID_EVMETH_ONERRORUPDATE          STDDISPID_XOBJ_ERRORUPDATE
#define DISPID_EVPROP_ONBEFOREUNLOAD        (DISPID_EVENTS + 39)
#define DISPID_EVMETH_ONBEFOREUNLOAD         DISPID_ONBEFOREUNLOAD
#define DISPID_EVPROP_ONDATASETCHANGED      (DISPID_EVENTS + 40)
#define DISPID_EVMETH_ONDATASETCHANGED       STDDISPID_XOBJ_ONDATASETCHANGED
#define DISPID_EVPROP_ONDATAAVAILABLE       (DISPID_EVENTS + 41)
#define DISPID_EVMETH_ONDATAAVAILABLE        STDDISPID_XOBJ_ONDATAAVAILABLE
#define DISPID_EVPROP_ONDATASETCOMPLETE     (DISPID_EVENTS + 42)
#define DISPID_EVMETH_ONDATASETCOMPLETE      STDDISPID_XOBJ_ONDATASETCOMPLETE
#define DISPID_EVPROP_ONFILTER              (DISPID_EVENTS + 43)
#define DISPID_EVMETH_ONFILTER               STDDISPID_XOBJ_ONFILTER
#define DISPID_EVPROP_ONCHANGEFOCUS         (DISPID_EVENTS + 44)
#define DISPID_EVMETH_ONCHANGEFOCUS          DISPID_ONCHANGEFOCUS
#define DISPID_EVPROP_ONCHANGEBLUR          (DISPID_EVENTS + 45)
#define DISPID_EVMETH_ONCHANGEBLUR           DISPID_ONCHANGEBLUR
#define DISPID_EVPROP_ONLOSECAPTURE         (DISPID_EVENTS + 46)
#define DISPID_EVMETH_ONLOSECAPTURE          STDDISPID_XOBJ_ONLOSECAPTURE
#define DISPID_EVPROP_ONPROPERTYCHANGE      (DISPID_EVENTS + 47)
#define DISPID_EVMETH_ONPROPERTYCHANGE       STDDISPID_XOBJ_ONPROPERTYCHANGE
#define DISPID_EVPROP_ONPERSISTSAVE         (DISPID_EVENTS + 48)
#define DISPID_EVMETH_ONPERSISTSAVE          DISPID_ONPERSISTSAVE
#define DISPID_EVPROP_ONDRAG                (DISPID_EVENTS + 49)
#define DISPID_EVMETH_ONDRAG                 STDDISPID_XOBJ_ONDRAG
#define DISPID_EVPROP_ONDRAGEND             (DISPID_EVENTS + 50)
#define DISPID_EVMETH_ONDRAGEND              STDDISPID_XOBJ_ONDRAGEND
#define DISPID_EVPROP_ONDRAGENTER           (DISPID_EVENTS + 51)
#define DISPID_EVMETH_ONDRAGENTER            STDDISPID_XOBJ_ONDRAGENTER
#define DISPID_EVPROP_ONDRAGOVER            (DISPID_EVENTS + 52)
#define DISPID_EVMETH_ONDRAGOVER             STDDISPID_XOBJ_ONDRAGOVER
#define DISPID_EVPROP_ONDRAGLEAVE           (DISPID_EVENTS + 53)
#define DISPID_EVMETH_ONDRAGLEAVE            STDDISPID_XOBJ_ONDRAGLEAVE
#define DISPID_EVPROP_ONDROP                (DISPID_EVENTS + 54)
#define DISPID_EVMETH_ONDROP                 STDDISPID_XOBJ_ONDROP
#define DISPID_EVPROP_ONCUT                 (DISPID_EVENTS + 55)
#define DISPID_EVMETH_ONCUT                  STDDISPID_XOBJ_ONCUT
#define DISPID_EVPROP_ONCOPY                (DISPID_EVENTS + 56)
#define DISPID_EVMETH_ONCOPY                 STDDISPID_XOBJ_ONCOPY
#define DISPID_EVPROP_ONPASTE               (DISPID_EVENTS + 57)
#define DISPID_EVMETH_ONPASTE                STDDISPID_XOBJ_ONPASTE
#define DISPID_EVPROP_ONBEFORECUT           (DISPID_EVENTS + 58)
#define DISPID_EVMETH_ONBEFORECUT            STDDISPID_XOBJ_ONBEFORECUT
#define DISPID_EVPROP_ONBEFORECOPY          (DISPID_EVENTS + 59)
#define DISPID_EVMETH_ONBEFORECOPY           STDDISPID_XOBJ_ONBEFORECOPY
#define DISPID_EVPROP_ONBEFOREPASTE         (DISPID_EVENTS + 60)
#define DISPID_EVMETH_ONBEFOREPASTE          STDDISPID_XOBJ_ONBEFOREPASTE
#define DISPID_EVPROP_ONPERSISTLOAD         (DISPID_EVENTS + 61)
#define DISPID_EVMETH_ONPERSISTLOAD          DISPID_ONPERSISTLOAD
#define DISPID_EVPROP_ONROWSDELETE          (DISPID_EVENTS + 62)
#define DISPID_EVMETH_ONROWSDELETE           STDDISPID_XOBJ_ONROWSDELETE
#define DISPID_EVPROP_ONROWSINSERTED        (DISPID_EVENTS + 63)
#define DISPID_EVMETH_ONROWSINSERTED         STDDISPID_XOBJ_ONROWSINSERTED
#define DISPID_EVPROP_ONCELLCHANGE          (DISPID_EVENTS + 64)
#define DISPID_EVMETH_ONCELLCHANGE           STDDISPID_XOBJ_ONCELLCHANGE
#define DISPID_EVPROP_ONCONTEXTMENU         (DISPID_EVENTS + 65)
#define DISPID_EVMETH_ONCONTEXTMENU          DISPID_ONCONTEXTMENU
#define DISPID_EVPROP_ONBEFOREPRINT         (DISPID_EVENTS + 66)
#define DISPID_EVMETH_ONBEFOREPRINT          DISPID_ONBEFOREPRINT
#define DISPID_EVPROP_ONAFTERPRINT          (DISPID_EVENTS + 67)
#define DISPID_EVMETH_ONAFTERPRINT           DISPID_ONAFTERPRINT
#define DISPID_EVPROP_ONSTOP                (DISPID_EVENTS + 68)
#define DISPID_EVMETH_ONSTOP                DISPID_ONSTOP
#define DISPID_EVPROP_ONBEFOREEDITFOCUS     (DISPID_EVENTS + 69)
#define DISPID_EVMETH_ONBEFOREEDITFOCUS      DISPID_ONBEFOREEDITFOCUS
#define DISPID_EVPROP_ONATTACHEVENT         (DISPID_EVENTS + 70)
#define DISPID_EVPROP_ONMOUSEHOVER          (DISPID_EVENTS + 71)
#define DISPID_EVMETH_ONMOUSEHOVER           DISPID_ONMOUSEHOVER
#define DISPID_EVPROP_ONCONTENTREADY        (DISPID_EVENTS + 72)
#define DISPID_EVMETH_ONCONTENTREADY         DISPID_ONCONTENTREADY
#define DISPID_EVPROP_ONLAYOUTCOMPLETE      (DISPID_EVENTS + 73)
#define DISPID_EVMETH_ONLAYOUTCOMPLETE       DISPID_ONLAYOUTCOMPLETE
#define DISPID_EVPROP_ONPAGE                (DISPID_EVENTS + 74)
#define DISPID_EVMETH_ONPAGE                 DISPID_ONPAGE
#define DISPID_EVPROP_ONLINKEDOVERFLOW      (DISPID_EVENTS + 75)
#define DISPID_EVMETH_ONLINKEDOVERFLOW       DISPID_ONLINKEDOVERFLOW
#define DISPID_EVPROP_ONMOUSEWHEEL          (DISPID_EVENTS + 76)
#define DISPID_EVMETH_ONMOUSEWHEEL           DISPID_ONMOUSEWHEEL
#define DISPID_EVPROP_ONBEFOREDEACTIVATE    (DISPID_EVENTS + 77)
#define DISPID_EVMETH_ONBEFOREDEACTIVATE     DISPID_ONBEFOREDEACTIVATE
#define DISPID_EVPROP_ONMOVE                (DISPID_EVENTS + 78)
#define DISPID_EVMETH_ONMOVE                 DISPID_ONMOVE
#define DISPID_EVPROP_ONCONTROLSELECT       (DISPID_EVENTS + 79)
#define DISPID_EVMETH_ONCONTROLSELECT        DISPID_ONCONTROLSELECT
#define DISPID_EVPROP_ONSELECTIONCHANGE     (DISPID_EVENTS + 80)
#define DISPID_EVMETH_ONSELECTIONCHANGE      DISPID_ONSELECTIONCHANGE
#define DISPID_EVPROP_ONMOVESTART           (DISPID_EVENTS + 81)
#define DISPID_EVMETH_ONMOVESTART            DISPID_ONMOVESTART
#define DISPID_EVPROP_ONMOVEEND             (DISPID_EVENTS + 82)
#define DISPID_EVMETH_ONMOVEEND              DISPID_ONMOVEEND
#define DISPID_EVPROP_ONRESIZESTART         (DISPID_EVENTS + 83)
#define DISPID_EVMETH_ONRESIZESTART          DISPID_ONRESIZESTART
#define DISPID_EVPROP_ONRESIZEEND           (DISPID_EVENTS + 84)
#define DISPID_EVMETH_ONRESIZEEND            DISPID_ONRESIZEEND
#define DISPID_EVPROP_ONMOUSEENTER          (DISPID_EVENTS + 85)
#define DISPID_EVMETH_ONMOUSEENTER           DISPID_ONMOUSEENTER
#define DISPID_EVPROP_ONMOUSELEAVE          (DISPID_EVENTS + 86)
#define DISPID_EVMETH_ONMOUSELEAVE           DISPID_ONMOUSELEAVE
#define DISPID_EVPROP_ONACTIVATE            (DISPID_EVENTS + 87)
#define DISPID_EVMETH_ONACTIVATE             DISPID_ONACTIVATE
#define DISPID_EVPROP_ONDEACTIVATE          (DISPID_EVENTS + 88)
#define DISPID_EVMETH_ONDEACTIVATE           DISPID_ONDEACTIVATE
#define DISPID_EVPROP_ONMULTILAYOUTCLEANUP  (DISPID_EVENTS + 89)
#define DISPID_EVMETH_ONMULTILAYOUTCLEANUP   DISPID_ONMULTILAYOUTCLEANUP
#define DISPID_EVPROP_ONBEFOREACTIVATE      (DISPID_EVENTS + 90)
#define DISPID_EVMETH_ONBEFOREACTIVATE       DISPID_ONBEFOREACTIVATE
#define DISPID_EVPROP_ONFOCUSIN             (DISPID_EVENTS + 91)
#define DISPID_EVMETH_ONFOCUSIN              DISPID_ONFOCUSIN
#define DISPID_EVPROP_ONFOCUSOUT            (DISPID_EVENTS + 92)
#define DISPID_EVMETH_ONFOCUSOUT             DISPID_ONFOCUSOUT
#define DISPID_EVPROP_ONVALUECHANGE         (DISPID_EVENTS + 93)
#define DISPID_EVMETH_ONVALUECHANGE          DISPID_ONVALUECHANGE
#define DISPID_EVPROP_ONSELECTADD           (DISPID_EVENTS + 94)
#define DISPID_EVMETH_ONSELECTADD            DISPID_ONSELECTADD
#define DISPID_EVPROP_ONSELECTREMOVE        (DISPID_EVENTS + 95)
#define DISPID_EVMETH_ONSELECTREMOVE         DISPID_ONSELECTREMOVE
#define DISPID_EVPROP_ONSELECTWITHIN        (DISPID_EVENTS + 96)
#define DISPID_EVMETH_ONSELECTWITHIN         DISPID_ONSELECTWITHIN
#define DISPID_EVPROP_ONSYSTEMSCROLLINGSTART (DISPID_EVENTS + 97)
#define DISPID_EVMETH_ONSYSTEMSCROLLINGSTART DISPID_ONSYSTEMSCROLLINGSTART
#define DISPID_EVPROP_ONSYSTEMSCROLLINGEND   (DISPID_EVENTS + 98)
#define DISPID_EVMETH_ONSYSTEMSCROLLINGEND   DISPID_ONSYSTEMSCROLLINGEND
#define DISPID_EVPROP_ONOBJECTCONTENTSCROLLED   (DISPID_EVENTS + 99)
#define DISPID_EVMETH_ONOBJECTCONTENTSCROLLED   DISPID_ONOBJECTCONTENTSCROLLED
#define DISPID_EVPROPS_COUNT                (                100)


//;begin_internal
#endif // __COREDISP_H__
//;end_internal

//    DISPIDs for interface IHTMLFiltersCollection

#define DISPID_IHTMLFILTERSCOLLECTION_LENGTH                      DISPID_FILTERS+1
#define DISPID_IHTMLFILTERSCOLLECTION__NEWENUM                    DISPID_NEWENUM
#define DISPID_IHTMLFILTERSCOLLECTION_ITEM                        DISPID_VALUE

//    DISPIDs for interface IDispatchEx

#define DISPID_IDISPATCHEX_GETDISPID                              
#define DISPID_IDISPATCHEX_INVOKEEX                               
#define DISPID_IDISPATCHEX_DELETEMEMBERBYNAME                     
#define DISPID_IDISPATCHEX_DELETEMEMBERBYDISPID                   
#define DISPID_IDISPATCHEX_GETMEMBERPROPERTIES                    
#define DISPID_IDISPATCHEX_GETMEMBERNAME                          
#define DISPID_IDISPATCHEX_GETNEXTDISPID                          
#define DISPID_IDISPATCHEX_GETNAMESPACEPARENT                     

//    DISPIDs for interface IObjectIdentity

#define DISPID_IOBJECTIDENTITY_ISEQUALOBJECT                      

//    DISPIDs for interface IPerPropertyBrowsing

#define DISPID_IPERPROPERTYBROWSING_GETDISPLAYSTRING              
#define DISPID_IPERPROPERTYBROWSING_MAPPROPERTYTOPAGE             
#define DISPID_IPERPROPERTYBROWSING_GETPREDEFINEDSTRINGS          
#define DISPID_IPERPROPERTYBROWSING_GETPREDEFINEDVALUE            

//    DISPIDs for interface IHTMLStyle

#define DISPID_IHTMLSTYLE_FONTFAMILY                              DISPID_A_FONTFACE
#define DISPID_IHTMLSTYLE_FONTSTYLE                               DISPID_A_FONTSTYLE
#define DISPID_IHTMLSTYLE_FONTVARIANT                             DISPID_A_FONTVARIANT
#define DISPID_IHTMLSTYLE_FONTWEIGHT                              DISPID_A_FONTWEIGHT
#define DISPID_IHTMLSTYLE_FONTSIZE                                DISPID_A_FONTSIZE
#define DISPID_IHTMLSTYLE_FONT                                    DISPID_A_FONT
#define DISPID_IHTMLSTYLE_COLOR                                   DISPID_A_COLOR
#define DISPID_IHTMLSTYLE_BACKGROUND                              DISPID_A_BACKGROUND
#define DISPID_IHTMLSTYLE_BACKGROUNDCOLOR                         DISPID_BACKCOLOR
#define DISPID_IHTMLSTYLE_BACKGROUNDIMAGE                         DISPID_A_BACKGROUNDIMAGE
#define DISPID_IHTMLSTYLE_BACKGROUNDREPEAT                        DISPID_A_BACKGROUNDREPEAT
#define DISPID_IHTMLSTYLE_BACKGROUNDATTACHMENT                    DISPID_A_BACKGROUNDATTACHMENT
#define DISPID_IHTMLSTYLE_BACKGROUNDPOSITION                      DISPID_A_BACKGROUNDPOSITION
#define DISPID_IHTMLSTYLE_BACKGROUNDPOSITIONX                     DISPID_A_BACKGROUNDPOSX
#define DISPID_IHTMLSTYLE_BACKGROUNDPOSITIONY                     DISPID_A_BACKGROUNDPOSY
#define DISPID_IHTMLSTYLE_WORDSPACING                             DISPID_A_WORDSPACING
#define DISPID_IHTMLSTYLE_LETTERSPACING                           DISPID_A_LETTERSPACING
#define DISPID_IHTMLSTYLE_TEXTDECORATION                          DISPID_A_TEXTDECORATION
#define DISPID_IHTMLSTYLE_TEXTDECORATIONNONE                      DISPID_A_TEXTDECORATIONNONE
#define DISPID_IHTMLSTYLE_TEXTDECORATIONUNDERLINE                 DISPID_A_TEXTDECORATIONUNDERLINE
#define DISPID_IHTMLSTYLE_TEXTDECORATIONOVERLINE                  DISPID_A_TEXTDECORATIONOVERLINE
#define DISPID_IHTMLSTYLE_TEXTDECORATIONLINETHROUGH               DISPID_A_TEXTDECORATIONLINETHROUGH
#define DISPID_IHTMLSTYLE_TEXTDECORATIONBLINK                     DISPID_A_TEXTDECORATIONBLINK
#define DISPID_IHTMLSTYLE_VERTICALALIGN                           DISPID_A_VERTICALALIGN
#define DISPID_IHTMLSTYLE_TEXTTRANSFORM                           DISPID_A_TEXTTRANSFORM
#define DISPID_IHTMLSTYLE_TEXTALIGN                               STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLSTYLE_TEXTINDENT                              DISPID_A_TEXTINDENT
#define DISPID_IHTMLSTYLE_LINEHEIGHT                              DISPID_A_LINEHEIGHT
#define DISPID_IHTMLSTYLE_MARGINTOP                               DISPID_A_MARGINTOP
#define DISPID_IHTMLSTYLE_MARGINRIGHT                             DISPID_A_MARGINRIGHT
#define DISPID_IHTMLSTYLE_MARGINBOTTOM                            DISPID_A_MARGINBOTTOM
#define DISPID_IHTMLSTYLE_MARGINLEFT                              DISPID_A_MARGINLEFT
#define DISPID_IHTMLSTYLE_MARGIN                                  DISPID_A_MARGIN
#define DISPID_IHTMLSTYLE_PADDINGTOP                              DISPID_A_PADDINGTOP
#define DISPID_IHTMLSTYLE_PADDINGRIGHT                            DISPID_A_PADDINGRIGHT
#define DISPID_IHTMLSTYLE_PADDINGBOTTOM                           DISPID_A_PADDINGBOTTOM
#define DISPID_IHTMLSTYLE_PADDINGLEFT                             DISPID_A_PADDINGLEFT
#define DISPID_IHTMLSTYLE_PADDING                                 DISPID_A_PADDING
#define DISPID_IHTMLSTYLE_BORDER                                  DISPID_A_BORDER
#define DISPID_IHTMLSTYLE_BORDERTOP                               DISPID_A_BORDERTOP
#define DISPID_IHTMLSTYLE_BORDERRIGHT                             DISPID_A_BORDERRIGHT
#define DISPID_IHTMLSTYLE_BORDERBOTTOM                            DISPID_A_BORDERBOTTOM
#define DISPID_IHTMLSTYLE_BORDERLEFT                              DISPID_A_BORDERLEFT
#define DISPID_IHTMLSTYLE_BORDERCOLOR                             DISPID_A_BORDERCOLOR
#define DISPID_IHTMLSTYLE_BORDERTOPCOLOR                          DISPID_A_BORDERTOPCOLOR
#define DISPID_IHTMLSTYLE_BORDERRIGHTCOLOR                        DISPID_A_BORDERRIGHTCOLOR
#define DISPID_IHTMLSTYLE_BORDERBOTTOMCOLOR                       DISPID_A_BORDERBOTTOMCOLOR
#define DISPID_IHTMLSTYLE_BORDERLEFTCOLOR                         DISPID_A_BORDERLEFTCOLOR
#define DISPID_IHTMLSTYLE_BORDERWIDTH                             DISPID_A_BORDERWIDTH
#define DISPID_IHTMLSTYLE_BORDERTOPWIDTH                          DISPID_A_BORDERTOPWIDTH
#define DISPID_IHTMLSTYLE_BORDERRIGHTWIDTH                        DISPID_A_BORDERRIGHTWIDTH
#define DISPID_IHTMLSTYLE_BORDERBOTTOMWIDTH                       DISPID_A_BORDERBOTTOMWIDTH
#define DISPID_IHTMLSTYLE_BORDERLEFTWIDTH                         DISPID_A_BORDERLEFTWIDTH
#define DISPID_IHTMLSTYLE_BORDERSTYLE                             DISPID_A_BORDERSTYLE
#define DISPID_IHTMLSTYLE_BORDERTOPSTYLE                          DISPID_A_BORDERTOPSTYLE
#define DISPID_IHTMLSTYLE_BORDERRIGHTSTYLE                        DISPID_A_BORDERRIGHTSTYLE
#define DISPID_IHTMLSTYLE_BORDERBOTTOMSTYLE                       DISPID_A_BORDERBOTTOMSTYLE
#define DISPID_IHTMLSTYLE_BORDERLEFTSTYLE                         DISPID_A_BORDERLEFTSTYLE
#define DISPID_IHTMLSTYLE_WIDTH                                   STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLSTYLE_HEIGHT                                  STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLSTYLE_STYLEFLOAT                              DISPID_A_FLOAT
#define DISPID_IHTMLSTYLE_CLEAR                                   DISPID_A_CLEAR
#define DISPID_IHTMLSTYLE_DISPLAY                                 DISPID_A_DISPLAY
#define DISPID_IHTMLSTYLE_VISIBILITY                              DISPID_A_VISIBILITY
#define DISPID_IHTMLSTYLE_LISTSTYLETYPE                           DISPID_A_LISTSTYLETYPE
#define DISPID_IHTMLSTYLE_LISTSTYLEPOSITION                       DISPID_A_LISTSTYLEPOSITION
#define DISPID_IHTMLSTYLE_LISTSTYLEIMAGE                          DISPID_A_LISTSTYLEIMAGE
#define DISPID_IHTMLSTYLE_LISTSTYLE                               DISPID_A_LISTSTYLE
#define DISPID_IHTMLSTYLE_WHITESPACE                              DISPID_A_WHITESPACE
#define DISPID_IHTMLSTYLE_TOP                                     STDPROPID_XOBJ_TOP
#define DISPID_IHTMLSTYLE_LEFT                                    STDPROPID_XOBJ_LEFT
#define DISPID_IHTMLSTYLE_POSITION                                DISPID_A_POSITION
#define DISPID_IHTMLSTYLE_ZINDEX                                  DISPID_A_ZINDEX
#define DISPID_IHTMLSTYLE_OVERFLOW                                DISPID_A_OVERFLOW
#define DISPID_IHTMLSTYLE_PAGEBREAKBEFORE                         DISPID_A_PAGEBREAKBEFORE
#define DISPID_IHTMLSTYLE_PAGEBREAKAFTER                          DISPID_A_PAGEBREAKAFTER
#define DISPID_IHTMLSTYLE_CSSTEXT                                 DISPID_A_STYLETEXT
#define DISPID_IHTMLSTYLE_PIXELTOP                                DISPID_STYLE+0
#define DISPID_IHTMLSTYLE_PIXELLEFT                               DISPID_STYLE+1
#define DISPID_IHTMLSTYLE_PIXELWIDTH                              DISPID_STYLE+2
#define DISPID_IHTMLSTYLE_PIXELHEIGHT                             DISPID_STYLE+3
#define DISPID_IHTMLSTYLE_POSTOP                                  DISPID_STYLE+4
#define DISPID_IHTMLSTYLE_POSLEFT                                 DISPID_STYLE+5
#define DISPID_IHTMLSTYLE_POSWIDTH                                DISPID_STYLE+6
#define DISPID_IHTMLSTYLE_POSHEIGHT                               DISPID_STYLE+7
#define DISPID_IHTMLSTYLE_CURSOR                                  DISPID_A_CURSOR
#define DISPID_IHTMLSTYLE_CLIP                                    DISPID_A_CLIP
#define DISPID_IHTMLSTYLE_FILTER                                  DISPID_A_FILTER
#define DISPID_IHTMLSTYLE_SETATTRIBUTE                            DISPID_HTMLOBJECT+1
#define DISPID_IHTMLSTYLE_GETATTRIBUTE                            DISPID_HTMLOBJECT+2
#define DISPID_IHTMLSTYLE_REMOVEATTRIBUTE                         DISPID_HTMLOBJECT+3
#define DISPID_IHTMLSTYLE_TOSTRING                                DISPID_STYLE+8

//    DISPIDs for interface IHTMLStyle2

#define DISPID_IHTMLSTYLE2_TABLELAYOUT                            DISPID_A_TABLELAYOUT
#define DISPID_IHTMLSTYLE2_BORDERCOLLAPSE                         DISPID_A_BORDERCOLLAPSE
#define DISPID_IHTMLSTYLE2_DIRECTION                              DISPID_A_DIRECTION
#define DISPID_IHTMLSTYLE2_BEHAVIOR                               DISPID_A_BEHAVIOR
#define DISPID_IHTMLSTYLE2_SETEXPRESSION                          DISPID_HTMLOBJECT+4
#define DISPID_IHTMLSTYLE2_GETEXPRESSION                          DISPID_HTMLOBJECT+5
#define DISPID_IHTMLSTYLE2_REMOVEEXPRESSION                       DISPID_HTMLOBJECT+6
#define DISPID_IHTMLSTYLE2_POSITION                               DISPID_A_POSITION
#define DISPID_IHTMLSTYLE2_UNICODEBIDI                            DISPID_A_UNICODEBIDI
#define DISPID_IHTMLSTYLE2_BOTTOM                                 STDPROPID_XOBJ_BOTTOM
#define DISPID_IHTMLSTYLE2_RIGHT                                  STDPROPID_XOBJ_RIGHT
#define DISPID_IHTMLSTYLE2_PIXELBOTTOM                            DISPID_STYLE+9
#define DISPID_IHTMLSTYLE2_PIXELRIGHT                             DISPID_STYLE+10
#define DISPID_IHTMLSTYLE2_POSBOTTOM                              DISPID_STYLE+11
#define DISPID_IHTMLSTYLE2_POSRIGHT                               DISPID_STYLE+12
#define DISPID_IHTMLSTYLE2_IMEMODE                                DISPID_A_IMEMODE
#define DISPID_IHTMLSTYLE2_RUBYALIGN                              DISPID_A_RUBYALIGN
#define DISPID_IHTMLSTYLE2_RUBYPOSITION                           DISPID_A_RUBYPOSITION
#define DISPID_IHTMLSTYLE2_RUBYOVERHANG                           DISPID_A_RUBYOVERHANG
#define DISPID_IHTMLSTYLE2_LAYOUTGRIDCHAR                         DISPID_A_LAYOUTGRIDCHAR
#define DISPID_IHTMLSTYLE2_LAYOUTGRIDLINE                         DISPID_A_LAYOUTGRIDLINE
#define DISPID_IHTMLSTYLE2_LAYOUTGRIDMODE                         DISPID_A_LAYOUTGRIDMODE
#define DISPID_IHTMLSTYLE2_LAYOUTGRIDTYPE                         DISPID_A_LAYOUTGRIDTYPE
#define DISPID_IHTMLSTYLE2_LAYOUTGRID                             DISPID_A_LAYOUTGRID
#define DISPID_IHTMLSTYLE2_WORDBREAK                              DISPID_A_WORDBREAK
#define DISPID_IHTMLSTYLE2_LINEBREAK                              DISPID_A_LINEBREAK
#define DISPID_IHTMLSTYLE2_TEXTJUSTIFY                            DISPID_A_TEXTJUSTIFY
#define DISPID_IHTMLSTYLE2_TEXTJUSTIFYTRIM                        DISPID_A_TEXTJUSTIFYTRIM
#define DISPID_IHTMLSTYLE2_TEXTKASHIDA                            DISPID_A_TEXTKASHIDA
#define DISPID_IHTMLSTYLE2_TEXTAUTOSPACE                          DISPID_A_TEXTAUTOSPACE
#define DISPID_IHTMLSTYLE2_OVERFLOWX                              DISPID_A_OVERFLOWX
#define DISPID_IHTMLSTYLE2_OVERFLOWY                              DISPID_A_OVERFLOWY
#define DISPID_IHTMLSTYLE2_ACCELERATOR                            DISPID_A_ACCELERATOR

//    DISPIDs for interface IHTMLStyle3

#define DISPID_IHTMLSTYLE3_LAYOUTFLOW                             DISPID_A_LAYOUTFLOW
#define DISPID_IHTMLSTYLE3_ZOOM                                   DISPID_A_ZOOM
#define DISPID_IHTMLSTYLE3_WORDWRAP                               DISPID_A_WORDWRAP
#define DISPID_IHTMLSTYLE3_TEXTUNDERLINEPOSITION                  DISPID_A_TEXTUNDERLINEPOSITION
#define DISPID_IHTMLSTYLE3_SCROLLBARBASECOLOR                     DISPID_A_SCROLLBARBASECOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBARFACECOLOR                     DISPID_A_SCROLLBARFACECOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBAR3DLIGHTCOLOR                  DISPID_A_SCROLLBAR3DLIGHTCOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBARSHADOWCOLOR                   DISPID_A_SCROLLBARSHADOWCOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBARHIGHLIGHTCOLOR                DISPID_A_SCROLLBARHIGHLIGHTCOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBARDARKSHADOWCOLOR               DISPID_A_SCROLLBARDARKSHADOWCOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBARARROWCOLOR                    DISPID_A_SCROLLBARARROWCOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBARTRACKCOLOR                    DISPID_A_SCROLLBARTRACKCOLOR
#define DISPID_IHTMLSTYLE3_WRITINGMODE                            DISPID_A_WRITINGMODE
#define DISPID_IHTMLSTYLE3_TEXTALIGNLAST                          DISPID_A_TEXTALIGNLAST
#define DISPID_IHTMLSTYLE3_TEXTKASHIDASPACE                       DISPID_A_TEXTKASHIDASPACE

//    DISPIDs for interface IHTMLStyle4

#define DISPID_IHTMLSTYLE4_TEXTOVERFLOW                           DISPID_A_TEXTOVERFLOW
#define DISPID_IHTMLSTYLE4_MINHEIGHT                              DISPID_A_MINHEIGHT

//    DISPIDs for interface IHTMLStyle5

#define DISPID_IHTMLSTYLE5_MSINTERPOLATIONMODE                    DISPID_A_INTERPOLATION
#define DISPID_IHTMLSTYLE5_MAXHEIGHT                              DISPID_A_MAXHEIGHT
#define DISPID_IHTMLSTYLE5_MINWIDTH                               DISPID_A_MINWIDTH
#define DISPID_IHTMLSTYLE5_MAXWIDTH                               DISPID_A_MAXWIDTH

//    DISPIDs for interface IHTMLRuleStyle

#define DISPID_IHTMLRULESTYLE_FONTFAMILY                          DISPID_A_FONTFACE
#define DISPID_IHTMLRULESTYLE_FONTSTYLE                           DISPID_A_FONTSTYLE
#define DISPID_IHTMLRULESTYLE_FONTVARIANT                         DISPID_A_FONTVARIANT
#define DISPID_IHTMLRULESTYLE_FONTWEIGHT                          DISPID_A_FONTWEIGHT
#define DISPID_IHTMLRULESTYLE_FONTSIZE                            DISPID_A_FONTSIZE
#define DISPID_IHTMLRULESTYLE_FONT                                DISPID_A_FONT
#define DISPID_IHTMLRULESTYLE_COLOR                               DISPID_A_COLOR
#define DISPID_IHTMLRULESTYLE_BACKGROUND                          DISPID_A_BACKGROUND
#define DISPID_IHTMLRULESTYLE_BACKGROUNDCOLOR                     DISPID_BACKCOLOR
#define DISPID_IHTMLRULESTYLE_BACKGROUNDIMAGE                     DISPID_A_BACKGROUNDIMAGE
#define DISPID_IHTMLRULESTYLE_BACKGROUNDREPEAT                    DISPID_A_BACKGROUNDREPEAT
#define DISPID_IHTMLRULESTYLE_BACKGROUNDATTACHMENT                DISPID_A_BACKGROUNDATTACHMENT
#define DISPID_IHTMLRULESTYLE_BACKGROUNDPOSITION                  DISPID_A_BACKGROUNDPOSITION
#define DISPID_IHTMLRULESTYLE_BACKGROUNDPOSITIONX                 DISPID_A_BACKGROUNDPOSX
#define DISPID_IHTMLRULESTYLE_BACKGROUNDPOSITIONY                 DISPID_A_BACKGROUNDPOSY
#define DISPID_IHTMLRULESTYLE_WORDSPACING                         DISPID_A_WORDSPACING
#define DISPID_IHTMLRULESTYLE_LETTERSPACING                       DISPID_A_LETTERSPACING
#define DISPID_IHTMLRULESTYLE_TEXTDECORATION                      DISPID_A_TEXTDECORATION
#define DISPID_IHTMLRULESTYLE_TEXTDECORATIONNONE                  DISPID_A_TEXTDECORATIONNONE
#define DISPID_IHTMLRULESTYLE_TEXTDECORATIONUNDERLINE             DISPID_A_TEXTDECORATIONUNDERLINE
#define DISPID_IHTMLRULESTYLE_TEXTDECORATIONOVERLINE              DISPID_A_TEXTDECORATIONOVERLINE
#define DISPID_IHTMLRULESTYLE_TEXTDECORATIONLINETHROUGH           DISPID_A_TEXTDECORATIONLINETHROUGH
#define DISPID_IHTMLRULESTYLE_TEXTDECORATIONBLINK                 DISPID_A_TEXTDECORATIONBLINK
#define DISPID_IHTMLRULESTYLE_VERTICALALIGN                       DISPID_A_VERTICALALIGN
#define DISPID_IHTMLRULESTYLE_TEXTTRANSFORM                       DISPID_A_TEXTTRANSFORM
#define DISPID_IHTMLRULESTYLE_TEXTALIGN                           STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLRULESTYLE_TEXTINDENT                          DISPID_A_TEXTINDENT
#define DISPID_IHTMLRULESTYLE_LINEHEIGHT                          DISPID_A_LINEHEIGHT
#define DISPID_IHTMLRULESTYLE_MARGINTOP                           DISPID_A_MARGINTOP
#define DISPID_IHTMLRULESTYLE_MARGINRIGHT                         DISPID_A_MARGINRIGHT
#define DISPID_IHTMLRULESTYLE_MARGINBOTTOM                        DISPID_A_MARGINBOTTOM
#define DISPID_IHTMLRULESTYLE_MARGINLEFT                          DISPID_A_MARGINLEFT
#define DISPID_IHTMLRULESTYLE_MARGIN                              DISPID_A_MARGIN
#define DISPID_IHTMLRULESTYLE_PADDINGTOP                          DISPID_A_PADDINGTOP
#define DISPID_IHTMLRULESTYLE_PADDINGRIGHT                        DISPID_A_PADDINGRIGHT
#define DISPID_IHTMLRULESTYLE_PADDINGBOTTOM                       DISPID_A_PADDINGBOTTOM
#define DISPID_IHTMLRULESTYLE_PADDINGLEFT                         DISPID_A_PADDINGLEFT
#define DISPID_IHTMLRULESTYLE_PADDING                             DISPID_A_PADDING
#define DISPID_IHTMLRULESTYLE_BORDER                              DISPID_A_BORDER
#define DISPID_IHTMLRULESTYLE_BORDERTOP                           DISPID_A_BORDERTOP
#define DISPID_IHTMLRULESTYLE_BORDERRIGHT                         DISPID_A_BORDERRIGHT
#define DISPID_IHTMLRULESTYLE_BORDERBOTTOM                        DISPID_A_BORDERBOTTOM
#define DISPID_IHTMLRULESTYLE_BORDERLEFT                          DISPID_A_BORDERLEFT
#define DISPID_IHTMLRULESTYLE_BORDERCOLOR                         DISPID_A_BORDERCOLOR
#define DISPID_IHTMLRULESTYLE_BORDERTOPCOLOR                      DISPID_A_BORDERTOPCOLOR
#define DISPID_IHTMLRULESTYLE_BORDERRIGHTCOLOR                    DISPID_A_BORDERRIGHTCOLOR
#define DISPID_IHTMLRULESTYLE_BORDERBOTTOMCOLOR                   DISPID_A_BORDERBOTTOMCOLOR
#define DISPID_IHTMLRULESTYLE_BORDERLEFTCOLOR                     DISPID_A_BORDERLEFTCOLOR
#define DISPID_IHTMLRULESTYLE_BORDERWIDTH                         DISPID_A_BORDERWIDTH
#define DISPID_IHTMLRULESTYLE_BORDERTOPWIDTH                      DISPID_A_BORDERTOPWIDTH
#define DISPID_IHTMLRULESTYLE_BORDERRIGHTWIDTH                    DISPID_A_BORDERRIGHTWIDTH
#define DISPID_IHTMLRULESTYLE_BORDERBOTTOMWIDTH                   DISPID_A_BORDERBOTTOMWIDTH
#define DISPID_IHTMLRULESTYLE_BORDERLEFTWIDTH                     DISPID_A_BORDERLEFTWIDTH
#define DISPID_IHTMLRULESTYLE_BORDERSTYLE                         DISPID_A_BORDERSTYLE
#define DISPID_IHTMLRULESTYLE_BORDERTOPSTYLE                      DISPID_A_BORDERTOPSTYLE
#define DISPID_IHTMLRULESTYLE_BORDERRIGHTSTYLE                    DISPID_A_BORDERRIGHTSTYLE
#define DISPID_IHTMLRULESTYLE_BORDERBOTTOMSTYLE                   DISPID_A_BORDERBOTTOMSTYLE
#define DISPID_IHTMLRULESTYLE_BORDERLEFTSTYLE                     DISPID_A_BORDERLEFTSTYLE
#define DISPID_IHTMLRULESTYLE_WIDTH                               STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLRULESTYLE_HEIGHT                              STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLRULESTYLE_STYLEFLOAT                          DISPID_A_FLOAT
#define DISPID_IHTMLRULESTYLE_CLEAR                               DISPID_A_CLEAR
#define DISPID_IHTMLRULESTYLE_DISPLAY                             DISPID_A_DISPLAY
#define DISPID_IHTMLRULESTYLE_VISIBILITY                          DISPID_A_VISIBILITY
#define DISPID_IHTMLRULESTYLE_LISTSTYLETYPE                       DISPID_A_LISTSTYLETYPE
#define DISPID_IHTMLRULESTYLE_LISTSTYLEPOSITION                   DISPID_A_LISTSTYLEPOSITION
#define DISPID_IHTMLRULESTYLE_LISTSTYLEIMAGE                      DISPID_A_LISTSTYLEIMAGE
#define DISPID_IHTMLRULESTYLE_LISTSTYLE                           DISPID_A_LISTSTYLE
#define DISPID_IHTMLRULESTYLE_WHITESPACE                          DISPID_A_WHITESPACE
#define DISPID_IHTMLRULESTYLE_TOP                                 STDPROPID_XOBJ_TOP
#define DISPID_IHTMLRULESTYLE_LEFT                                STDPROPID_XOBJ_LEFT
#define DISPID_IHTMLRULESTYLE_POSITION                            DISPID_A_POSITION
#define DISPID_IHTMLRULESTYLE_ZINDEX                              DISPID_A_ZINDEX
#define DISPID_IHTMLRULESTYLE_OVERFLOW                            DISPID_A_OVERFLOW
#define DISPID_IHTMLRULESTYLE_PAGEBREAKBEFORE                     DISPID_A_PAGEBREAKBEFORE
#define DISPID_IHTMLRULESTYLE_PAGEBREAKAFTER                      DISPID_A_PAGEBREAKAFTER
#define DISPID_IHTMLRULESTYLE_CSSTEXT                             DISPID_A_STYLETEXT
#define DISPID_IHTMLRULESTYLE_CURSOR                              DISPID_A_CURSOR
#define DISPID_IHTMLRULESTYLE_CLIP                                DISPID_A_CLIP
#define DISPID_IHTMLRULESTYLE_FILTER                              DISPID_A_FILTER
#define DISPID_IHTMLRULESTYLE_SETATTRIBUTE                        DISPID_HTMLOBJECT+1
#define DISPID_IHTMLRULESTYLE_GETATTRIBUTE                        DISPID_HTMLOBJECT+2
#define DISPID_IHTMLRULESTYLE_REMOVEATTRIBUTE                     DISPID_HTMLOBJECT+3

//    DISPIDs for interface IHTMLRuleStyle2

#define DISPID_IHTMLRULESTYLE2_TABLELAYOUT                        DISPID_A_TABLELAYOUT
#define DISPID_IHTMLRULESTYLE2_BORDERCOLLAPSE                     DISPID_A_BORDERCOLLAPSE
#define DISPID_IHTMLRULESTYLE2_DIRECTION                          DISPID_A_DIRECTION
#define DISPID_IHTMLRULESTYLE2_BEHAVIOR                           DISPID_A_BEHAVIOR
#define DISPID_IHTMLRULESTYLE2_POSITION                           DISPID_A_POSITION
#define DISPID_IHTMLRULESTYLE2_UNICODEBIDI                        DISPID_A_UNICODEBIDI
#define DISPID_IHTMLRULESTYLE2_BOTTOM                             STDPROPID_XOBJ_BOTTOM
#define DISPID_IHTMLRULESTYLE2_RIGHT                              STDPROPID_XOBJ_RIGHT
#define DISPID_IHTMLRULESTYLE2_PIXELBOTTOM                        DISPID_STYLE+9
#define DISPID_IHTMLRULESTYLE2_PIXELRIGHT                         DISPID_STYLE+10
#define DISPID_IHTMLRULESTYLE2_POSBOTTOM                          DISPID_STYLE+11
#define DISPID_IHTMLRULESTYLE2_POSRIGHT                           DISPID_STYLE+12
#define DISPID_IHTMLRULESTYLE2_IMEMODE                            DISPID_A_IMEMODE
#define DISPID_IHTMLRULESTYLE2_RUBYALIGN                          DISPID_A_RUBYALIGN
#define DISPID_IHTMLRULESTYLE2_RUBYPOSITION                       DISPID_A_RUBYPOSITION
#define DISPID_IHTMLRULESTYLE2_RUBYOVERHANG                       DISPID_A_RUBYOVERHANG
#define DISPID_IHTMLRULESTYLE2_LAYOUTGRIDCHAR                     DISPID_A_LAYOUTGRIDCHAR
#define DISPID_IHTMLRULESTYLE2_LAYOUTGRIDLINE                     DISPID_A_LAYOUTGRIDLINE
#define DISPID_IHTMLRULESTYLE2_LAYOUTGRIDMODE                     DISPID_A_LAYOUTGRIDMODE
#define DISPID_IHTMLRULESTYLE2_LAYOUTGRIDTYPE                     DISPID_A_LAYOUTGRIDTYPE
#define DISPID_IHTMLRULESTYLE2_LAYOUTGRID                         DISPID_A_LAYOUTGRID
#define DISPID_IHTMLRULESTYLE2_TEXTAUTOSPACE                      DISPID_A_TEXTAUTOSPACE
#define DISPID_IHTMLRULESTYLE2_WORDBREAK                          DISPID_A_WORDBREAK
#define DISPID_IHTMLRULESTYLE2_LINEBREAK                          DISPID_A_LINEBREAK
#define DISPID_IHTMLRULESTYLE2_TEXTJUSTIFY                        DISPID_A_TEXTJUSTIFY
#define DISPID_IHTMLRULESTYLE2_TEXTJUSTIFYTRIM                    DISPID_A_TEXTJUSTIFYTRIM
#define DISPID_IHTMLRULESTYLE2_TEXTKASHIDA                        DISPID_A_TEXTKASHIDA
#define DISPID_IHTMLRULESTYLE2_OVERFLOWX                          DISPID_A_OVERFLOWX
#define DISPID_IHTMLRULESTYLE2_OVERFLOWY                          DISPID_A_OVERFLOWY
#define DISPID_IHTMLRULESTYLE2_ACCELERATOR                        DISPID_A_ACCELERATOR

//    DISPIDs for interface IHTMLRuleStyle3

#define DISPID_IHTMLRULESTYLE3_LAYOUTFLOW                         DISPID_A_LAYOUTFLOW
#define DISPID_IHTMLRULESTYLE3_ZOOM                               DISPID_A_ZOOM
#define DISPID_IHTMLRULESTYLE3_WORDWRAP                           DISPID_A_WORDWRAP
#define DISPID_IHTMLRULESTYLE3_TEXTUNDERLINEPOSITION              DISPID_A_TEXTUNDERLINEPOSITION
#define DISPID_IHTMLRULESTYLE3_SCROLLBARBASECOLOR                 DISPID_A_SCROLLBARBASECOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBARFACECOLOR                 DISPID_A_SCROLLBARFACECOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBAR3DLIGHTCOLOR              DISPID_A_SCROLLBAR3DLIGHTCOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBARSHADOWCOLOR               DISPID_A_SCROLLBARSHADOWCOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBARHIGHLIGHTCOLOR            DISPID_A_SCROLLBARHIGHLIGHTCOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBARDARKSHADOWCOLOR           DISPID_A_SCROLLBARDARKSHADOWCOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBARARROWCOLOR                DISPID_A_SCROLLBARARROWCOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBARTRACKCOLOR                DISPID_A_SCROLLBARTRACKCOLOR
#define DISPID_IHTMLRULESTYLE3_WRITINGMODE                        DISPID_A_WRITINGMODE
#define DISPID_IHTMLRULESTYLE3_TEXTALIGNLAST                      DISPID_A_TEXTALIGNLAST
#define DISPID_IHTMLRULESTYLE3_TEXTKASHIDASPACE                   DISPID_A_TEXTKASHIDASPACE

//    DISPIDs for interface IHTMLRuleStyle4

#define DISPID_IHTMLRULESTYLE4_TEXTOVERFLOW                       DISPID_A_TEXTOVERFLOW
#define DISPID_IHTMLRULESTYLE4_MINHEIGHT                          DISPID_A_MINHEIGHT

//    DISPIDs for interface IHTMLRuleStyle5

#define DISPID_IHTMLRULESTYLE5_MSINTERPOLATIONMODE                DISPID_A_INTERPOLATION
#define DISPID_IHTMLRULESTYLE5_MAXHEIGHT                          DISPID_A_MAXHEIGHT
#define DISPID_IHTMLRULESTYLE5_MINWIDTH                           DISPID_A_MINWIDTH
#define DISPID_IHTMLRULESTYLE5_MAXWIDTH                           DISPID_A_MAXWIDTH

//    DISPIDs for interface IHTMLRenderStyle

#define DISPID_IHTMLRENDERSTYLE_TEXTLINETHROUGHSTYLE              DISPID_A_TEXTLINETHROUGHSTYLE
#define DISPID_IHTMLRENDERSTYLE_TEXTUNDERLINESTYLE                DISPID_A_TEXTUNDERLINESTYLE
#define DISPID_IHTMLRENDERSTYLE_TEXTEFFECT                        DISPID_A_TEXTEFFECT
#define DISPID_IHTMLRENDERSTYLE_TEXTCOLOR                         DISPID_A_TEXTCOLOR
#define DISPID_IHTMLRENDERSTYLE_TEXTBACKGROUNDCOLOR               DISPID_A_TEXTBACKGROUNDCOLOR
#define DISPID_IHTMLRENDERSTYLE_TEXTDECORATIONCOLOR               DISPID_A_TEXTDECORATIONCOLOR
#define DISPID_IHTMLRENDERSTYLE_RENDERINGPRIORITY                 DISPID_A_RENDERINGPRIORITY
#define DISPID_IHTMLRENDERSTYLE_DEFAULTTEXTSELECTION              DISPID_A_DEFAULTTEXTSELECTION
#define DISPID_IHTMLRENDERSTYLE_TEXTDECORATION                    DISPID_A_STYLETEXTDECORATION

//    DISPIDs for interface IHTMLCurrentStyle

#define DISPID_IHTMLCURRENTSTYLE_POSITION                         DISPID_A_POSITION
#define DISPID_IHTMLCURRENTSTYLE_STYLEFLOAT                       DISPID_A_FLOAT
#define DISPID_IHTMLCURRENTSTYLE_COLOR                            DISPID_A_COLOR
#define DISPID_IHTMLCURRENTSTYLE_BACKGROUNDCOLOR                  DISPID_BACKCOLOR
#define DISPID_IHTMLCURRENTSTYLE_FONTFAMILY                       DISPID_A_FONTFACE
#define DISPID_IHTMLCURRENTSTYLE_FONTSTYLE                        DISPID_A_FONTSTYLE
#define DISPID_IHTMLCURRENTSTYLE_FONTVARIANT                      DISPID_A_FONTVARIANT
#define DISPID_IHTMLCURRENTSTYLE_FONTWEIGHT                       DISPID_A_FONTWEIGHT
#define DISPID_IHTMLCURRENTSTYLE_FONTSIZE                         DISPID_A_FONTSIZE
#define DISPID_IHTMLCURRENTSTYLE_BACKGROUNDIMAGE                  DISPID_A_BACKGROUNDIMAGE
#define DISPID_IHTMLCURRENTSTYLE_BACKGROUNDPOSITIONX              DISPID_A_BACKGROUNDPOSX
#define DISPID_IHTMLCURRENTSTYLE_BACKGROUNDPOSITIONY              DISPID_A_BACKGROUNDPOSY
#define DISPID_IHTMLCURRENTSTYLE_BACKGROUNDREPEAT                 DISPID_A_BACKGROUNDREPEAT
#define DISPID_IHTMLCURRENTSTYLE_BORDERLEFTCOLOR                  DISPID_A_BORDERLEFTCOLOR
#define DISPID_IHTMLCURRENTSTYLE_BORDERTOPCOLOR                   DISPID_A_BORDERTOPCOLOR
#define DISPID_IHTMLCURRENTSTYLE_BORDERRIGHTCOLOR                 DISPID_A_BORDERRIGHTCOLOR
#define DISPID_IHTMLCURRENTSTYLE_BORDERBOTTOMCOLOR                DISPID_A_BORDERBOTTOMCOLOR
#define DISPID_IHTMLCURRENTSTYLE_BORDERTOPSTYLE                   DISPID_A_BORDERTOPSTYLE
#define DISPID_IHTMLCURRENTSTYLE_BORDERRIGHTSTYLE                 DISPID_A_BORDERRIGHTSTYLE
#define DISPID_IHTMLCURRENTSTYLE_BORDERBOTTOMSTYLE                DISPID_A_BORDERBOTTOMSTYLE
#define DISPID_IHTMLCURRENTSTYLE_BORDERLEFTSTYLE                  DISPID_A_BORDERLEFTSTYLE
#define DISPID_IHTMLCURRENTSTYLE_BORDERTOPWIDTH                   DISPID_A_BORDERTOPWIDTH
#define DISPID_IHTMLCURRENTSTYLE_BORDERRIGHTWIDTH                 DISPID_A_BORDERRIGHTWIDTH
#define DISPID_IHTMLCURRENTSTYLE_BORDERBOTTOMWIDTH                DISPID_A_BORDERBOTTOMWIDTH
#define DISPID_IHTMLCURRENTSTYLE_BORDERLEFTWIDTH                  DISPID_A_BORDERLEFTWIDTH
#define DISPID_IHTMLCURRENTSTYLE_LEFT                             STDPROPID_XOBJ_LEFT
#define DISPID_IHTMLCURRENTSTYLE_TOP                              STDPROPID_XOBJ_TOP
#define DISPID_IHTMLCURRENTSTYLE_WIDTH                            STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLCURRENTSTYLE_HEIGHT                           STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLCURRENTSTYLE_PADDINGLEFT                      DISPID_A_PADDINGLEFT
#define DISPID_IHTMLCURRENTSTYLE_PADDINGTOP                       DISPID_A_PADDINGTOP
#define DISPID_IHTMLCURRENTSTYLE_PADDINGRIGHT                     DISPID_A_PADDINGRIGHT
#define DISPID_IHTMLCURRENTSTYLE_PADDINGBOTTOM                    DISPID_A_PADDINGBOTTOM
#define DISPID_IHTMLCURRENTSTYLE_TEXTALIGN                        STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLCURRENTSTYLE_TEXTDECORATION                   DISPID_A_TEXTDECORATION
#define DISPID_IHTMLCURRENTSTYLE_DISPLAY                          DISPID_A_DISPLAY
#define DISPID_IHTMLCURRENTSTYLE_VISIBILITY                       DISPID_A_VISIBILITY
#define DISPID_IHTMLCURRENTSTYLE_ZINDEX                           DISPID_A_ZINDEX
#define DISPID_IHTMLCURRENTSTYLE_LETTERSPACING                    DISPID_A_LETTERSPACING
#define DISPID_IHTMLCURRENTSTYLE_LINEHEIGHT                       DISPID_A_LINEHEIGHT
#define DISPID_IHTMLCURRENTSTYLE_TEXTINDENT                       DISPID_A_TEXTINDENT
#define DISPID_IHTMLCURRENTSTYLE_VERTICALALIGN                    DISPID_A_VERTICALALIGN
#define DISPID_IHTMLCURRENTSTYLE_BACKGROUNDATTACHMENT             DISPID_A_BACKGROUNDATTACHMENT
#define DISPID_IHTMLCURRENTSTYLE_MARGINTOP                        DISPID_A_MARGINTOP
#define DISPID_IHTMLCURRENTSTYLE_MARGINRIGHT                      DISPID_A_MARGINRIGHT
#define DISPID_IHTMLCURRENTSTYLE_MARGINBOTTOM                     DISPID_A_MARGINBOTTOM
#define DISPID_IHTMLCURRENTSTYLE_MARGINLEFT                       DISPID_A_MARGINLEFT
#define DISPID_IHTMLCURRENTSTYLE_CLEAR                            DISPID_A_CLEAR
#define DISPID_IHTMLCURRENTSTYLE_LISTSTYLETYPE                    DISPID_A_LISTSTYLETYPE
#define DISPID_IHTMLCURRENTSTYLE_LISTSTYLEPOSITION                DISPID_A_LISTSTYLEPOSITION
#define DISPID_IHTMLCURRENTSTYLE_LISTSTYLEIMAGE                   DISPID_A_LISTSTYLEIMAGE
#define DISPID_IHTMLCURRENTSTYLE_CLIPTOP                          DISPID_A_CLIPRECTTOP
#define DISPID_IHTMLCURRENTSTYLE_CLIPRIGHT                        DISPID_A_CLIPRECTRIGHT
#define DISPID_IHTMLCURRENTSTYLE_CLIPBOTTOM                       DISPID_A_CLIPRECTBOTTOM
#define DISPID_IHTMLCURRENTSTYLE_CLIPLEFT                         DISPID_A_CLIPRECTLEFT
#define DISPID_IHTMLCURRENTSTYLE_OVERFLOW                         DISPID_A_OVERFLOW
#define DISPID_IHTMLCURRENTSTYLE_PAGEBREAKBEFORE                  DISPID_A_PAGEBREAKBEFORE
#define DISPID_IHTMLCURRENTSTYLE_PAGEBREAKAFTER                   DISPID_A_PAGEBREAKAFTER
#define DISPID_IHTMLCURRENTSTYLE_CURSOR                           DISPID_A_CURSOR
#define DISPID_IHTMLCURRENTSTYLE_TABLELAYOUT                      DISPID_A_TABLELAYOUT
#define DISPID_IHTMLCURRENTSTYLE_BORDERCOLLAPSE                   DISPID_A_BORDERCOLLAPSE
#define DISPID_IHTMLCURRENTSTYLE_DIRECTION                        DISPID_A_DIRECTION
#define DISPID_IHTMLCURRENTSTYLE_BEHAVIOR                         DISPID_A_BEHAVIOR
#define DISPID_IHTMLCURRENTSTYLE_GETATTRIBUTE                     DISPID_HTMLOBJECT+2
#define DISPID_IHTMLCURRENTSTYLE_UNICODEBIDI                      DISPID_A_UNICODEBIDI
#define DISPID_IHTMLCURRENTSTYLE_RIGHT                            STDPROPID_XOBJ_RIGHT
#define DISPID_IHTMLCURRENTSTYLE_BOTTOM                           STDPROPID_XOBJ_BOTTOM
#define DISPID_IHTMLCURRENTSTYLE_IMEMODE                          DISPID_A_IMEMODE
#define DISPID_IHTMLCURRENTSTYLE_RUBYALIGN                        DISPID_A_RUBYALIGN
#define DISPID_IHTMLCURRENTSTYLE_RUBYPOSITION                     DISPID_A_RUBYPOSITION
#define DISPID_IHTMLCURRENTSTYLE_RUBYOVERHANG                     DISPID_A_RUBYOVERHANG
#define DISPID_IHTMLCURRENTSTYLE_TEXTAUTOSPACE                    DISPID_A_TEXTAUTOSPACE
#define DISPID_IHTMLCURRENTSTYLE_LINEBREAK                        DISPID_A_LINEBREAK
#define DISPID_IHTMLCURRENTSTYLE_WORDBREAK                        DISPID_A_WORDBREAK
#define DISPID_IHTMLCURRENTSTYLE_TEXTJUSTIFY                      DISPID_A_TEXTJUSTIFY
#define DISPID_IHTMLCURRENTSTYLE_TEXTJUSTIFYTRIM                  DISPID_A_TEXTJUSTIFYTRIM
#define DISPID_IHTMLCURRENTSTYLE_TEXTKASHIDA                      DISPID_A_TEXTKASHIDA
#define DISPID_IHTMLCURRENTSTYLE_BLOCKDIRECTION                   DISPID_A_DIR
#define DISPID_IHTMLCURRENTSTYLE_LAYOUTGRIDCHAR                   DISPID_A_LAYOUTGRIDCHAR
#define DISPID_IHTMLCURRENTSTYLE_LAYOUTGRIDLINE                   DISPID_A_LAYOUTGRIDLINE
#define DISPID_IHTMLCURRENTSTYLE_LAYOUTGRIDMODE                   DISPID_A_LAYOUTGRIDMODE
#define DISPID_IHTMLCURRENTSTYLE_LAYOUTGRIDTYPE                   DISPID_A_LAYOUTGRIDTYPE
#define DISPID_IHTMLCURRENTSTYLE_BORDERSTYLE                      DISPID_A_BORDERSTYLE
#define DISPID_IHTMLCURRENTSTYLE_BORDERCOLOR                      DISPID_A_BORDERCOLOR
#define DISPID_IHTMLCURRENTSTYLE_BORDERWIDTH                      DISPID_A_BORDERWIDTH
#define DISPID_IHTMLCURRENTSTYLE_PADDING                          DISPID_A_PADDING
#define DISPID_IHTMLCURRENTSTYLE_MARGIN                           DISPID_A_MARGIN
#define DISPID_IHTMLCURRENTSTYLE_ACCELERATOR                      DISPID_A_ACCELERATOR
#define DISPID_IHTMLCURRENTSTYLE_OVERFLOWX                        DISPID_A_OVERFLOWX
#define DISPID_IHTMLCURRENTSTYLE_OVERFLOWY                        DISPID_A_OVERFLOWY
#define DISPID_IHTMLCURRENTSTYLE_TEXTTRANSFORM                    DISPID_A_TEXTTRANSFORM

//    DISPIDs for interface IHTMLCurrentStyle2

#define DISPID_IHTMLCURRENTSTYLE2_LAYOUTFLOW                      DISPID_A_LAYOUTFLOW
#define DISPID_IHTMLCURRENTSTYLE2_WORDWRAP                        DISPID_A_WORDWRAP
#define DISPID_IHTMLCURRENTSTYLE2_TEXTUNDERLINEPOSITION           DISPID_A_TEXTUNDERLINEPOSITION
#define DISPID_IHTMLCURRENTSTYLE2_HASLAYOUT                       DISPID_A_HASLAYOUT
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARBASECOLOR              DISPID_A_SCROLLBARBASECOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARFACECOLOR              DISPID_A_SCROLLBARFACECOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBAR3DLIGHTCOLOR           DISPID_A_SCROLLBAR3DLIGHTCOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARSHADOWCOLOR            DISPID_A_SCROLLBARSHADOWCOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARHIGHLIGHTCOLOR         DISPID_A_SCROLLBARHIGHLIGHTCOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARDARKSHADOWCOLOR        DISPID_A_SCROLLBARDARKSHADOWCOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARARROWCOLOR             DISPID_A_SCROLLBARARROWCOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARTRACKCOLOR             DISPID_A_SCROLLBARTRACKCOLOR
#define DISPID_IHTMLCURRENTSTYLE2_WRITINGMODE                     DISPID_A_WRITINGMODE
#define DISPID_IHTMLCURRENTSTYLE2_ZOOM                            DISPID_A_ZOOM
#define DISPID_IHTMLCURRENTSTYLE2_FILTER                          DISPID_A_FILTER
#define DISPID_IHTMLCURRENTSTYLE2_TEXTALIGNLAST                   DISPID_A_TEXTALIGNLAST
#define DISPID_IHTMLCURRENTSTYLE2_TEXTKASHIDASPACE                DISPID_A_TEXTKASHIDASPACE
#define DISPID_IHTMLCURRENTSTYLE2_ISBLOCK                         DISPID_A_ISBLOCK

//    DISPIDs for interface IHTMLCurrentStyle3

#define DISPID_IHTMLCURRENTSTYLE3_TEXTOVERFLOW                    DISPID_A_TEXTOVERFLOW
#define DISPID_IHTMLCURRENTSTYLE3_MINHEIGHT                       DISPID_A_MINHEIGHT
#define DISPID_IHTMLCURRENTSTYLE3_WORDSPACING                     DISPID_A_WORDSPACING
#define DISPID_IHTMLCURRENTSTYLE3_WHITESPACE                      DISPID_A_WHITESPACE

//    DISPIDs for interface IHTMLCurrentStyle4

#define DISPID_IHTMLCURRENTSTYLE4_MSINTERPOLATIONMODE             DISPID_A_INTERPOLATION
#define DISPID_IHTMLCURRENTSTYLE4_MAXHEIGHT                       DISPID_A_MAXHEIGHT
#define DISPID_IHTMLCURRENTSTYLE4_MINWIDTH                        DISPID_A_MINWIDTH
#define DISPID_IHTMLCURRENTSTYLE4_MAXWIDTH                        DISPID_A_MAXWIDTH

//    DISPIDs for interface IHTMLRect

#define DISPID_IHTMLRECT_LEFT                                     DISPID_OMRECT+1
#define DISPID_IHTMLRECT_TOP                                      DISPID_OMRECT+2
#define DISPID_IHTMLRECT_RIGHT                                    DISPID_OMRECT+3
#define DISPID_IHTMLRECT_BOTTOM                                   DISPID_OMRECT+4

//    DISPIDs for interface IHTMLRectCollection

#define DISPID_IHTMLRECTCOLLECTION_LENGTH                         DISPID_COLLECTION
#define DISPID_IHTMLRECTCOLLECTION__NEWENUM                       DISPID_NEWENUM
#define DISPID_IHTMLRECTCOLLECTION_ITEM                           DISPID_VALUE

//    DISPIDs for interface IHTMLDOMNode

#define DISPID_IHTMLDOMNODE_NODETYPE                              DISPID_ELEMENT+46
#define DISPID_IHTMLDOMNODE_PARENTNODE                            DISPID_ELEMENT+47
#define DISPID_IHTMLDOMNODE_HASCHILDNODES                         DISPID_ELEMENT+48
#define DISPID_IHTMLDOMNODE_CHILDNODES                            DISPID_ELEMENT+49
#define DISPID_IHTMLDOMNODE_ATTRIBUTES                            DISPID_ELEMENT+50
#define DISPID_IHTMLDOMNODE_INSERTBEFORE                          DISPID_ELEMENT+51
#define DISPID_IHTMLDOMNODE_REMOVECHILD                           DISPID_ELEMENT+52
#define DISPID_IHTMLDOMNODE_REPLACECHILD                          DISPID_ELEMENT+53
#define DISPID_IHTMLDOMNODE_CLONENODE                             DISPID_ELEMENT+61
#define DISPID_IHTMLDOMNODE_REMOVENODE                            DISPID_ELEMENT+66
#define DISPID_IHTMLDOMNODE_SWAPNODE                              DISPID_ELEMENT+68
#define DISPID_IHTMLDOMNODE_REPLACENODE                           DISPID_ELEMENT+67
#define DISPID_IHTMLDOMNODE_APPENDCHILD                           DISPID_ELEMENT+73
#define DISPID_IHTMLDOMNODE_NODENAME                              DISPID_ELEMENT+74
#define DISPID_IHTMLDOMNODE_NODEVALUE                             DISPID_ELEMENT+75
#define DISPID_IHTMLDOMNODE_FIRSTCHILD                            DISPID_ELEMENT+76
#define DISPID_IHTMLDOMNODE_LASTCHILD                             DISPID_ELEMENT+77
#define DISPID_IHTMLDOMNODE_PREVIOUSSIBLING                       DISPID_ELEMENT+78
#define DISPID_IHTMLDOMNODE_NEXTSIBLING                           DISPID_ELEMENT+79

//    DISPIDs for interface IHTMLDOMNode2

#define DISPID_IHTMLDOMNODE2_OWNERDOCUMENT                        DISPID_ELEMENT+113

//    DISPIDs for interface IHTMLDOMAttribute

#define DISPID_IHTMLDOMATTRIBUTE_NODENAME                         DISPID_DOMATTRIBUTE
#define DISPID_IHTMLDOMATTRIBUTE_NODEVALUE                        DISPID_DOMATTRIBUTE+2
#define DISPID_IHTMLDOMATTRIBUTE_SPECIFIED                        DISPID_DOMATTRIBUTE+1

//    DISPIDs for interface IHTMLDOMAttribute2

#define DISPID_IHTMLDOMATTRIBUTE2_NAME                            DISPID_DOMATTRIBUTE+3
#define DISPID_IHTMLDOMATTRIBUTE2_VALUE                           DISPID_DOMATTRIBUTE+4
#define DISPID_IHTMLDOMATTRIBUTE2_EXPANDO                         DISPID_DOMATTRIBUTE+5
#define DISPID_IHTMLDOMATTRIBUTE2_NODETYPE                        DISPID_DOMATTRIBUTE+6
#define DISPID_IHTMLDOMATTRIBUTE2_PARENTNODE                      DISPID_DOMATTRIBUTE+7
#define DISPID_IHTMLDOMATTRIBUTE2_CHILDNODES                      DISPID_DOMATTRIBUTE+8
#define DISPID_IHTMLDOMATTRIBUTE2_FIRSTCHILD                      DISPID_DOMATTRIBUTE+9
#define DISPID_IHTMLDOMATTRIBUTE2_LASTCHILD                       DISPID_DOMATTRIBUTE+10
#define DISPID_IHTMLDOMATTRIBUTE2_PREVIOUSSIBLING                 DISPID_DOMATTRIBUTE+11
#define DISPID_IHTMLDOMATTRIBUTE2_NEXTSIBLING                     DISPID_DOMATTRIBUTE+12
#define DISPID_IHTMLDOMATTRIBUTE2_ATTRIBUTES                      DISPID_DOMATTRIBUTE+13
#define DISPID_IHTMLDOMATTRIBUTE2_OWNERDOCUMENT                   DISPID_DOMATTRIBUTE+14
#define DISPID_IHTMLDOMATTRIBUTE2_INSERTBEFORE                    DISPID_DOMATTRIBUTE+15
#define DISPID_IHTMLDOMATTRIBUTE2_REPLACECHILD                    DISPID_DOMATTRIBUTE+16
#define DISPID_IHTMLDOMATTRIBUTE2_REMOVECHILD                     DISPID_DOMATTRIBUTE+17
#define DISPID_IHTMLDOMATTRIBUTE2_APPENDCHILD                     DISPID_DOMATTRIBUTE+18
#define DISPID_IHTMLDOMATTRIBUTE2_HASCHILDNODES                   DISPID_DOMATTRIBUTE+19
#define DISPID_IHTMLDOMATTRIBUTE2_CLONENODE                       DISPID_DOMATTRIBUTE+20

//    DISPIDs for interface IHTMLDOMTextNode

#define DISPID_IHTMLDOMTEXTNODE_DATA                              DISPID_DOMTEXTNODE
#define DISPID_IHTMLDOMTEXTNODE_TOSTRING                          DISPID_DOMTEXTNODE+1
#define DISPID_IHTMLDOMTEXTNODE_LENGTH                            DISPID_DOMTEXTNODE+2
#define DISPID_IHTMLDOMTEXTNODE_SPLITTEXT                         DISPID_DOMTEXTNODE+3

//    DISPIDs for interface IHTMLDOMTextNode2

#define DISPID_IHTMLDOMTEXTNODE2_SUBSTRINGDATA                    DISPID_DOMTEXTNODE+4
#define DISPID_IHTMLDOMTEXTNODE2_APPENDDATA                       DISPID_DOMTEXTNODE+5
#define DISPID_IHTMLDOMTEXTNODE2_INSERTDATA                       DISPID_DOMTEXTNODE+6
#define DISPID_IHTMLDOMTEXTNODE2_DELETEDATA                       DISPID_DOMTEXTNODE+7
#define DISPID_IHTMLDOMTEXTNODE2_REPLACEDATA                      DISPID_DOMTEXTNODE+8

//    DISPIDs for interface IHTMLDOMImplementation

#define DISPID_IHTMLDOMIMPLEMENTATION_HASFEATURE                  DISPID_DOMIMPLEMENTATION

//    DISPIDs for interface IHTMLAttributeCollection

#define DISPID_IHTMLATTRIBUTECOLLECTION_LENGTH                    DISPID_COLLECTION
#define DISPID_IHTMLATTRIBUTECOLLECTION__NEWENUM                  DISPID_NEWENUM
#define DISPID_IHTMLATTRIBUTECOLLECTION_ITEM                      DISPID_VALUE

//    DISPIDs for interface IHTMLAttributeCollection2

#define DISPID_IHTMLATTRIBUTECOLLECTION2_GETNAMEDITEM             DISPID_COLLECTION+1
#define DISPID_IHTMLATTRIBUTECOLLECTION2_SETNAMEDITEM             DISPID_COLLECTION+2
#define DISPID_IHTMLATTRIBUTECOLLECTION2_REMOVENAMEDITEM          DISPID_COLLECTION+3

//    DISPIDs for interface IHTMLDOMChildrenCollection

#define DISPID_IHTMLDOMCHILDRENCOLLECTION_LENGTH                  DISPID_COLLECTION
#define DISPID_IHTMLDOMCHILDRENCOLLECTION__NEWENUM                DISPID_NEWENUM
#define DISPID_IHTMLDOMCHILDRENCOLLECTION_ITEM                    DISPID_VALUE

//    DISPIDs for interface IHTMLElement

#define DISPID_IHTMLELEMENT_SETATTRIBUTE                          DISPID_HTMLOBJECT+1
#define DISPID_IHTMLELEMENT_GETATTRIBUTE                          DISPID_HTMLOBJECT+2
#define DISPID_IHTMLELEMENT_REMOVEATTRIBUTE                       DISPID_HTMLOBJECT+3
#define DISPID_IHTMLELEMENT_CLASSNAME                             DISPID_ELEMENT+1
#define DISPID_IHTMLELEMENT_ID                                    DISPID_ELEMENT+2
#define DISPID_IHTMLELEMENT_TAGNAME                               DISPID_ELEMENT+4
#define DISPID_IHTMLELEMENT_PARENTELEMENT                         STDPROPID_XOBJ_PARENT
#define DISPID_IHTMLELEMENT_STYLE                                 STDPROPID_XOBJ_STYLE
#define DISPID_IHTMLELEMENT_ONHELP                                DISPID_EVPROP_ONHELP
#define DISPID_IHTMLELEMENT_ONCLICK                               DISPID_EVPROP_ONCLICK
#define DISPID_IHTMLELEMENT_ONDBLCLICK                            DISPID_EVPROP_ONDBLCLICK
#define DISPID_IHTMLELEMENT_ONKEYDOWN                             DISPID_EVPROP_ONKEYDOWN
#define DISPID_IHTMLELEMENT_ONKEYUP                               DISPID_EVPROP_ONKEYUP
#define DISPID_IHTMLELEMENT_ONKEYPRESS                            DISPID_EVPROP_ONKEYPRESS
#define DISPID_IHTMLELEMENT_ONMOUSEOUT                            DISPID_EVPROP_ONMOUSEOUT
#define DISPID_IHTMLELEMENT_ONMOUSEOVER                           DISPID_EVPROP_ONMOUSEOVER
#define DISPID_IHTMLELEMENT_ONMOUSEMOVE                           DISPID_EVPROP_ONMOUSEMOVE
#define DISPID_IHTMLELEMENT_ONMOUSEDOWN                           DISPID_EVPROP_ONMOUSEDOWN
#define DISPID_IHTMLELEMENT_ONMOUSEUP                             DISPID_EVPROP_ONMOUSEUP
#define DISPID_IHTMLELEMENT_DOCUMENT                              DISPID_ELEMENT+18
#define DISPID_IHTMLELEMENT_TITLE                                 STDPROPID_XOBJ_CONTROLTIPTEXT
#define DISPID_IHTMLELEMENT_LANGUAGE                              DISPID_A_LANGUAGE
#define DISPID_IHTMLELEMENT_ONSELECTSTART                         DISPID_EVPROP_ONSELECTSTART
#define DISPID_IHTMLELEMENT_SCROLLINTOVIEW                        DISPID_ELEMENT+19
#define DISPID_IHTMLELEMENT_CONTAINS                              DISPID_ELEMENT+20
#define DISPID_IHTMLELEMENT_SOURCEINDEX                           DISPID_ELEMENT+24
#define DISPID_IHTMLELEMENT_RECORDNUMBER                          DISPID_ELEMENT+25
#define DISPID_IHTMLELEMENT_LANG                                  DISPID_A_LANG
#define DISPID_IHTMLELEMENT_OFFSETLEFT                            DISPID_ELEMENT+8
#define DISPID_IHTMLELEMENT_OFFSETTOP                             DISPID_ELEMENT+9
#define DISPID_IHTMLELEMENT_OFFSETWIDTH                           DISPID_ELEMENT+10
#define DISPID_IHTMLELEMENT_OFFSETHEIGHT                          DISPID_ELEMENT+11
#define DISPID_IHTMLELEMENT_OFFSETPARENT                          DISPID_ELEMENT+12
#define DISPID_IHTMLELEMENT_INNERHTML                             DISPID_ELEMENT+26
#define DISPID_IHTMLELEMENT_INNERTEXT                             DISPID_ELEMENT+27
#define DISPID_IHTMLELEMENT_OUTERHTML                             DISPID_ELEMENT+28
#define DISPID_IHTMLELEMENT_OUTERTEXT                             DISPID_ELEMENT+29
#define DISPID_IHTMLELEMENT_INSERTADJACENTHTML                    DISPID_ELEMENT+30
#define DISPID_IHTMLELEMENT_INSERTADJACENTTEXT                    DISPID_ELEMENT+31
#define DISPID_IHTMLELEMENT_PARENTTEXTEDIT                        DISPID_ELEMENT+32
#define DISPID_IHTMLELEMENT_ISTEXTEDIT                            DISPID_ELEMENT+34
#define DISPID_IHTMLELEMENT_CLICK                                 DISPID_ELEMENT+33
#define DISPID_IHTMLELEMENT_FILTERS                               DISPID_ELEMENT+35
#define DISPID_IHTMLELEMENT_ONDRAGSTART                           DISPID_EVPROP_ONDRAGSTART
#define DISPID_IHTMLELEMENT_TOSTRING                              DISPID_ELEMENT+36
#define DISPID_IHTMLELEMENT_ONBEFOREUPDATE                        DISPID_EVPROP_ONBEFOREUPDATE
#define DISPID_IHTMLELEMENT_ONAFTERUPDATE                         DISPID_EVPROP_ONAFTERUPDATE
#define DISPID_IHTMLELEMENT_ONERRORUPDATE                         DISPID_EVPROP_ONERRORUPDATE
#define DISPID_IHTMLELEMENT_ONROWEXIT                             DISPID_EVPROP_ONROWEXIT
#define DISPID_IHTMLELEMENT_ONROWENTER                            DISPID_EVPROP_ONROWENTER
#define DISPID_IHTMLELEMENT_ONDATASETCHANGED                      DISPID_EVPROP_ONDATASETCHANGED
#define DISPID_IHTMLELEMENT_ONDATAAVAILABLE                       DISPID_EVPROP_ONDATAAVAILABLE
#define DISPID_IHTMLELEMENT_ONDATASETCOMPLETE                     DISPID_EVPROP_ONDATASETCOMPLETE
#define DISPID_IHTMLELEMENT_ONFILTERCHANGE                        DISPID_EVPROP_ONFILTER
#define DISPID_IHTMLELEMENT_CHILDREN                              DISPID_ELEMENT+37
#define DISPID_IHTMLELEMENT_ALL                                   DISPID_ELEMENT+38

//    DISPIDs for interface IHTMLElement2

#define DISPID_IHTMLELEMENT2_SCOPENAME                            DISPID_ELEMENT+39
#define DISPID_IHTMLELEMENT2_SETCAPTURE                           DISPID_ELEMENT+40
#define DISPID_IHTMLELEMENT2_RELEASECAPTURE                       DISPID_ELEMENT+41
#define DISPID_IHTMLELEMENT2_ONLOSECAPTURE                        DISPID_EVPROP_ONLOSECAPTURE
#define DISPID_IHTMLELEMENT2_COMPONENTFROMPOINT                   DISPID_ELEMENT+42
#define DISPID_IHTMLELEMENT2_DOSCROLL                             DISPID_ELEMENT+43
#define DISPID_IHTMLELEMENT2_ONSCROLL                             DISPID_EVPROP_ONSCROLL
#define DISPID_IHTMLELEMENT2_ONDRAG                               DISPID_EVPROP_ONDRAG
#define DISPID_IHTMLELEMENT2_ONDRAGEND                            DISPID_EVPROP_ONDRAGEND
#define DISPID_IHTMLELEMENT2_ONDRAGENTER                          DISPID_EVPROP_ONDRAGENTER
#define DISPID_IHTMLELEMENT2_ONDRAGOVER                           DISPID_EVPROP_ONDRAGOVER
#define DISPID_IHTMLELEMENT2_ONDRAGLEAVE                          DISPID_EVPROP_ONDRAGLEAVE
#define DISPID_IHTMLELEMENT2_ONDROP                               DISPID_EVPROP_ONDROP
#define DISPID_IHTMLELEMENT2_ONBEFORECUT                          DISPID_EVPROP_ONBEFORECUT
#define DISPID_IHTMLELEMENT2_ONCUT                                DISPID_EVPROP_ONCUT
#define DISPID_IHTMLELEMENT2_ONBEFORECOPY                         DISPID_EVPROP_ONBEFORECOPY
#define DISPID_IHTMLELEMENT2_ONCOPY                               DISPID_EVPROP_ONCOPY
#define DISPID_IHTMLELEMENT2_ONBEFOREPASTE                        DISPID_EVPROP_ONBEFOREPASTE
#define DISPID_IHTMLELEMENT2_ONPASTE                              DISPID_EVPROP_ONPASTE
#define DISPID_IHTMLELEMENT2_CURRENTSTYLE                         DISPID_ELEMENT+7
#define DISPID_IHTMLELEMENT2_ONPROPERTYCHANGE                     DISPID_EVPROP_ONPROPERTYCHANGE
#define DISPID_IHTMLELEMENT2_GETCLIENTRECTS                       DISPID_ELEMENT+44
#define DISPID_IHTMLELEMENT2_GETBOUNDINGCLIENTRECT                DISPID_ELEMENT+45
#define DISPID_IHTMLELEMENT2_SETEXPRESSION                        DISPID_HTMLOBJECT+4
#define DISPID_IHTMLELEMENT2_GETEXPRESSION                        DISPID_HTMLOBJECT+5
#define DISPID_IHTMLELEMENT2_REMOVEEXPRESSION                     DISPID_HTMLOBJECT+6
#define DISPID_IHTMLELEMENT2_TABINDEX                             STDPROPID_XOBJ_TABINDEX
#define DISPID_IHTMLELEMENT2_FOCUS                                DISPID_SITE+0
#define DISPID_IHTMLELEMENT2_ACCESSKEY                            DISPID_SITE+5
#define DISPID_IHTMLELEMENT2_ONBLUR                               DISPID_EVPROP_ONBLUR
#define DISPID_IHTMLELEMENT2_ONFOCUS                              DISPID_EVPROP_ONFOCUS
#define DISPID_IHTMLELEMENT2_ONRESIZE                             DISPID_EVPROP_ONRESIZE
#define DISPID_IHTMLELEMENT2_BLUR                                 DISPID_SITE+2
#define DISPID_IHTMLELEMENT2_ADDFILTER                            DISPID_SITE+17
#define DISPID_IHTMLELEMENT2_REMOVEFILTER                         DISPID_SITE+18
#define DISPID_IHTMLELEMENT2_CLIENTHEIGHT                         DISPID_SITE+19
#define DISPID_IHTMLELEMENT2_CLIENTWIDTH                          DISPID_SITE+20
#define DISPID_IHTMLELEMENT2_CLIENTTOP                            DISPID_SITE+21
#define DISPID_IHTMLELEMENT2_CLIENTLEFT                           DISPID_SITE+22
#define DISPID_IHTMLELEMENT2_ATTACHEVENT                          DISPID_HTMLOBJECT+7
#define DISPID_IHTMLELEMENT2_DETACHEVENT                          DISPID_HTMLOBJECT+8
#define DISPID_IHTMLELEMENT2_READYSTATE                           DISPID_A_READYSTATE
#define DISPID_IHTMLELEMENT2_ONREADYSTATECHANGE                   DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLELEMENT2_ONROWSDELETE                         DISPID_EVPROP_ONROWSDELETE
#define DISPID_IHTMLELEMENT2_ONROWSINSERTED                       DISPID_EVPROP_ONROWSINSERTED
#define DISPID_IHTMLELEMENT2_ONCELLCHANGE                         DISPID_EVPROP_ONCELLCHANGE
#define DISPID_IHTMLELEMENT2_DIR                                  DISPID_A_DIR
#define DISPID_IHTMLELEMENT2_CREATECONTROLRANGE                   DISPID_ELEMENT+56
#define DISPID_IHTMLELEMENT2_SCROLLHEIGHT                         DISPID_ELEMENT+57
#define DISPID_IHTMLELEMENT2_SCROLLWIDTH                          DISPID_ELEMENT+58
#define DISPID_IHTMLELEMENT2_SCROLLTOP                            DISPID_ELEMENT+59
#define DISPID_IHTMLELEMENT2_SCROLLLEFT                           DISPID_ELEMENT+60
#define DISPID_IHTMLELEMENT2_CLEARATTRIBUTES                      DISPID_ELEMENT+62
#define DISPID_IHTMLELEMENT2_MERGEATTRIBUTES                      DISPID_ELEMENT+63
#define DISPID_IHTMLELEMENT2_ONCONTEXTMENU                        DISPID_EVPROP_ONCONTEXTMENU
#define DISPID_IHTMLELEMENT2_INSERTADJACENTELEMENT                DISPID_ELEMENT+69
#define DISPID_IHTMLELEMENT2_APPLYELEMENT                         DISPID_ELEMENT+65
#define DISPID_IHTMLELEMENT2_GETADJACENTTEXT                      DISPID_ELEMENT+70
#define DISPID_IHTMLELEMENT2_REPLACEADJACENTTEXT                  DISPID_ELEMENT+71
#define DISPID_IHTMLELEMENT2_CANHAVECHILDREN                      DISPID_ELEMENT+72
#define DISPID_IHTMLELEMENT2_ADDBEHAVIOR                          DISPID_ELEMENT+80
#define DISPID_IHTMLELEMENT2_REMOVEBEHAVIOR                       DISPID_ELEMENT+81
#define DISPID_IHTMLELEMENT2_RUNTIMESTYLE                         DISPID_ELEMENT+64
#define DISPID_IHTMLELEMENT2_BEHAVIORURNS                         DISPID_ELEMENT+82
#define DISPID_IHTMLELEMENT2_TAGURN                               DISPID_ELEMENT+83
#define DISPID_IHTMLELEMENT2_ONBEFOREEDITFOCUS                    DISPID_EVPROP_ONBEFOREEDITFOCUS
#define DISPID_IHTMLELEMENT2_READYSTATEVALUE                      DISPID_ELEMENT+84
#define DISPID_IHTMLELEMENT2_GETELEMENTSBYTAGNAME                 DISPID_ELEMENT+85

//    DISPIDs for interface IHTMLElement3

#define DISPID_IHTMLELEMENT3_MERGEATTRIBUTES                      DISPID_ELEMENT+96
#define DISPID_IHTMLELEMENT3_ISMULTILINE                          DISPID_ELEMENT+97
#define DISPID_IHTMLELEMENT3_CANHAVEHTML                          DISPID_ELEMENT+98
#define DISPID_IHTMLELEMENT3_ONLAYOUTCOMPLETE                     DISPID_EVPROP_ONLAYOUTCOMPLETE
#define DISPID_IHTMLELEMENT3_ONPAGE                               DISPID_EVPROP_ONPAGE
#define DISPID_IHTMLELEMENT3_INFLATEBLOCK                         DISPID_ELEMENT+100
#define DISPID_IHTMLELEMENT3_ONBEFOREDEACTIVATE                   DISPID_EVPROP_ONBEFOREDEACTIVATE
#define DISPID_IHTMLELEMENT3_SETACTIVE                            DISPID_ELEMENT+101
#define DISPID_IHTMLELEMENT3_CONTENTEDITABLE                      DISPID_A_EDITABLE
#define DISPID_IHTMLELEMENT3_ISCONTENTEDITABLE                    DISPID_ELEMENT+102
#define DISPID_IHTMLELEMENT3_HIDEFOCUS                            DISPID_A_HIDEFOCUS
#define DISPID_IHTMLELEMENT3_DISABLED                             STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLELEMENT3_ISDISABLED                           DISPID_ELEMENT+105
#define DISPID_IHTMLELEMENT3_ONMOVE                               DISPID_EVPROP_ONMOVE
#define DISPID_IHTMLELEMENT3_ONCONTROLSELECT                      DISPID_EVPROP_ONCONTROLSELECT
#define DISPID_IHTMLELEMENT3_FIREEVENT                            DISPID_ELEMENT+106
#define DISPID_IHTMLELEMENT3_ONRESIZESTART                        DISPID_EVPROP_ONRESIZESTART
#define DISPID_IHTMLELEMENT3_ONRESIZEEND                          DISPID_EVPROP_ONRESIZEEND
#define DISPID_IHTMLELEMENT3_ONMOVESTART                          DISPID_EVPROP_ONMOVESTART
#define DISPID_IHTMLELEMENT3_ONMOVEEND                            DISPID_EVPROP_ONMOVEEND
#define DISPID_IHTMLELEMENT3_ONMOUSEENTER                         DISPID_EVPROP_ONMOUSEENTER
#define DISPID_IHTMLELEMENT3_ONMOUSELEAVE                         DISPID_EVPROP_ONMOUSELEAVE
#define DISPID_IHTMLELEMENT3_ONACTIVATE                           DISPID_EVPROP_ONACTIVATE
#define DISPID_IHTMLELEMENT3_ONDEACTIVATE                         DISPID_EVPROP_ONDEACTIVATE
#define DISPID_IHTMLELEMENT3_DRAGDROP                             DISPID_ELEMENT+107
#define DISPID_IHTMLELEMENT3_GLYPHMODE                            DISPID_ELEMENT+108

//    DISPIDs for interface IHTMLElement4

#define DISPID_IHTMLELEMENT4_ONMOUSEWHEEL                         DISPID_EVPROP_ONMOUSEWHEEL
#define DISPID_IHTMLELEMENT4_NORMALIZE                            DISPID_ELEMENT+112
#define DISPID_IHTMLELEMENT4_GETATTRIBUTENODE                     DISPID_ELEMENT+109
#define DISPID_IHTMLELEMENT4_SETATTRIBUTENODE                     DISPID_ELEMENT+110
#define DISPID_IHTMLELEMENT4_REMOVEATTRIBUTENODE                  DISPID_ELEMENT+111
#define DISPID_IHTMLELEMENT4_ONBEFOREACTIVATE                     DISPID_EVPROP_ONBEFOREACTIVATE
#define DISPID_IHTMLELEMENT4_ONFOCUSIN                            DISPID_EVPROP_ONFOCUSIN
#define DISPID_IHTMLELEMENT4_ONFOCUSOUT                           DISPID_EVPROP_ONFOCUSOUT

//    DISPIDs for interface IHTMLElementRender

#define DISPID_IHTMLELEMENTRENDER_DRAWTODC                        
#define DISPID_IHTMLELEMENTRENDER_SETDOCUMENTPRINTER              

//    DISPIDs for interface IHTMLUniqueName

#define DISPID_IHTMLUNIQUENAME_UNIQUENUMBER                       DISPID_ELEMENT+54
#define DISPID_IHTMLUNIQUENAME_UNIQUEID                           DISPID_ELEMENT+55

//    DISPIDs for interface IHTMLDatabinding

#define DISPID_IHTMLDATABINDING_DATAFLD                           DISPID_ELEMENT+21
#define DISPID_IHTMLDATABINDING_DATASRC                           DISPID_ELEMENT+22
#define DISPID_IHTMLDATABINDING_DATAFORMATAS                      DISPID_ELEMENT+23

//    DISPIDs for event set HTMLElementEvents2

#define DISPID_HTMLELEMENTEVENTS2_ONHELP                          DISPID_EVMETH_ONHELP
#define DISPID_HTMLELEMENTEVENTS2_ONCLICK                         DISPID_EVMETH_ONCLICK
#define DISPID_HTMLELEMENTEVENTS2_ONDBLCLICK                      DISPID_EVMETH_ONDBLCLICK
#define DISPID_HTMLELEMENTEVENTS2_ONKEYPRESS                      DISPID_EVMETH_ONKEYPRESS
#define DISPID_HTMLELEMENTEVENTS2_ONKEYDOWN                       DISPID_EVMETH_ONKEYDOWN
#define DISPID_HTMLELEMENTEVENTS2_ONKEYUP                         DISPID_EVMETH_ONKEYUP
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEOUT                      DISPID_EVMETH_ONMOUSEOUT
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEOVER                     DISPID_EVMETH_ONMOUSEOVER
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEMOVE                     DISPID_EVMETH_ONMOUSEMOVE
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEDOWN                     DISPID_EVMETH_ONMOUSEDOWN
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEUP                       DISPID_EVMETH_ONMOUSEUP
#define DISPID_HTMLELEMENTEVENTS2_ONSELECTSTART                   DISPID_EVMETH_ONSELECTSTART
#define DISPID_HTMLELEMENTEVENTS2_ONFILTERCHANGE                  DISPID_EVMETH_ONFILTER
#define DISPID_HTMLELEMENTEVENTS2_ONDRAGSTART                     DISPID_EVMETH_ONDRAGSTART
#define DISPID_HTMLELEMENTEVENTS2_ONBEFOREUPDATE                  DISPID_EVMETH_ONBEFOREUPDATE
#define DISPID_HTMLELEMENTEVENTS2_ONAFTERUPDATE                   DISPID_EVMETH_ONAFTERUPDATE
#define DISPID_HTMLELEMENTEVENTS2_ONERRORUPDATE                   DISPID_EVMETH_ONERRORUPDATE
#define DISPID_HTMLELEMENTEVENTS2_ONROWEXIT                       DISPID_EVMETH_ONROWEXIT
#define DISPID_HTMLELEMENTEVENTS2_ONROWENTER                      DISPID_EVMETH_ONROWENTER
#define DISPID_HTMLELEMENTEVENTS2_ONDATASETCHANGED                DISPID_EVMETH_ONDATASETCHANGED
#define DISPID_HTMLELEMENTEVENTS2_ONDATAAVAILABLE                 DISPID_EVMETH_ONDATAAVAILABLE
#define DISPID_HTMLELEMENTEVENTS2_ONDATASETCOMPLETE               DISPID_EVMETH_ONDATASETCOMPLETE
#define DISPID_HTMLELEMENTEVENTS2_ONLOSECAPTURE                   DISPID_EVMETH_ONLOSECAPTURE
#define DISPID_HTMLELEMENTEVENTS2_ONPROPERTYCHANGE                DISPID_EVMETH_ONPROPERTYCHANGE
#define DISPID_HTMLELEMENTEVENTS2_ONSCROLL                        DISPID_EVMETH_ONSCROLL
#define DISPID_HTMLELEMENTEVENTS2_ONFOCUS                         DISPID_EVMETH_ONFOCUS
#define DISPID_HTMLELEMENTEVENTS2_ONBLUR                          DISPID_EVMETH_ONBLUR
#define DISPID_HTMLELEMENTEVENTS2_ONRESIZE                        DISPID_EVMETH_ONRESIZE
#define DISPID_HTMLELEMENTEVENTS2_ONDRAG                          DISPID_EVMETH_ONDRAG
#define DISPID_HTMLELEMENTEVENTS2_ONDRAGEND                       DISPID_EVMETH_ONDRAGEND
#define DISPID_HTMLELEMENTEVENTS2_ONDRAGENTER                     DISPID_EVMETH_ONDRAGENTER
#define DISPID_HTMLELEMENTEVENTS2_ONDRAGOVER                      DISPID_EVMETH_ONDRAGOVER
#define DISPID_HTMLELEMENTEVENTS2_ONDRAGLEAVE                     DISPID_EVMETH_ONDRAGLEAVE
#define DISPID_HTMLELEMENTEVENTS2_ONDROP                          DISPID_EVMETH_ONDROP
#define DISPID_HTMLELEMENTEVENTS2_ONBEFORECUT                     DISPID_EVMETH_ONBEFORECUT
#define DISPID_HTMLELEMENTEVENTS2_ONCUT                           DISPID_EVMETH_ONCUT
#define DISPID_HTMLELEMENTEVENTS2_ONBEFORECOPY                    DISPID_EVMETH_ONBEFORECOPY
#define DISPID_HTMLELEMENTEVENTS2_ONCOPY                          DISPID_EVMETH_ONCOPY
#define DISPID_HTMLELEMENTEVENTS2_ONBEFOREPASTE                   DISPID_EVMETH_ONBEFOREPASTE
#define DISPID_HTMLELEMENTEVENTS2_ONPASTE                         DISPID_EVMETH_ONPASTE
#define DISPID_HTMLELEMENTEVENTS2_ONCONTEXTMENU                   DISPID_EVMETH_ONCONTEXTMENU
#define DISPID_HTMLELEMENTEVENTS2_ONROWSDELETE                    DISPID_EVMETH_ONROWSDELETE
#define DISPID_HTMLELEMENTEVENTS2_ONROWSINSERTED                  DISPID_EVMETH_ONROWSINSERTED
#define DISPID_HTMLELEMENTEVENTS2_ONCELLCHANGE                    DISPID_EVMETH_ONCELLCHANGE
#define DISPID_HTMLELEMENTEVENTS2_ONREADYSTATECHANGE              DISPID_EVMETH_ONREADYSTATECHANGE
#define DISPID_HTMLELEMENTEVENTS2_ONLAYOUTCOMPLETE                DISPID_EVMETH_ONLAYOUTCOMPLETE
#define DISPID_HTMLELEMENTEVENTS2_ONPAGE                          DISPID_EVMETH_ONPAGE
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEENTER                    DISPID_EVMETH_ONMOUSEENTER
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSELEAVE                    DISPID_EVMETH_ONMOUSELEAVE
#define DISPID_HTMLELEMENTEVENTS2_ONACTIVATE                      DISPID_EVMETH_ONACTIVATE
#define DISPID_HTMLELEMENTEVENTS2_ONDEACTIVATE                    DISPID_EVMETH_ONDEACTIVATE
#define DISPID_HTMLELEMENTEVENTS2_ONBEFOREDEACTIVATE              DISPID_EVMETH_ONBEFOREDEACTIVATE
#define DISPID_HTMLELEMENTEVENTS2_ONBEFOREACTIVATE                DISPID_EVMETH_ONBEFOREACTIVATE
#define DISPID_HTMLELEMENTEVENTS2_ONFOCUSIN                       DISPID_EVMETH_ONFOCUSIN
#define DISPID_HTMLELEMENTEVENTS2_ONFOCUSOUT                      DISPID_EVMETH_ONFOCUSOUT
#define DISPID_HTMLELEMENTEVENTS2_ONMOVE                          DISPID_EVMETH_ONMOVE
#define DISPID_HTMLELEMENTEVENTS2_ONCONTROLSELECT                 DISPID_EVMETH_ONCONTROLSELECT
#define DISPID_HTMLELEMENTEVENTS2_ONMOVESTART                     DISPID_EVMETH_ONMOVESTART
#define DISPID_HTMLELEMENTEVENTS2_ONMOVEEND                       DISPID_EVMETH_ONMOVEEND
#define DISPID_HTMLELEMENTEVENTS2_ONRESIZESTART                   DISPID_EVMETH_ONRESIZESTART
#define DISPID_HTMLELEMENTEVENTS2_ONRESIZEEND                     DISPID_EVMETH_ONRESIZEEND
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEWHEEL                    DISPID_EVMETH_ONMOUSEWHEEL

//    DISPIDs for event set HTMLElementEvents

#define DISPID_HTMLELEMENTEVENTS_ONHELP                           DISPID_EVMETH_ONHELP
#define DISPID_HTMLELEMENTEVENTS_ONCLICK                          DISPID_EVMETH_ONCLICK
#define DISPID_HTMLELEMENTEVENTS_ONDBLCLICK                       DISPID_EVMETH_ONDBLCLICK
#define DISPID_HTMLELEMENTEVENTS_ONKEYPRESS                       DISPID_EVMETH_ONKEYPRESS
#define DISPID_HTMLELEMENTEVENTS_ONKEYDOWN                        DISPID_EVMETH_ONKEYDOWN
#define DISPID_HTMLELEMENTEVENTS_ONKEYUP                          DISPID_EVMETH_ONKEYUP
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEOUT                       DISPID_EVMETH_ONMOUSEOUT
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEOVER                      DISPID_EVMETH_ONMOUSEOVER
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEMOVE                      DISPID_EVMETH_ONMOUSEMOVE
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEDOWN                      DISPID_EVMETH_ONMOUSEDOWN
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEUP                        DISPID_EVMETH_ONMOUSEUP
#define DISPID_HTMLELEMENTEVENTS_ONSELECTSTART                    DISPID_EVMETH_ONSELECTSTART
#define DISPID_HTMLELEMENTEVENTS_ONFILTERCHANGE                   DISPID_EVMETH_ONFILTER
#define DISPID_HTMLELEMENTEVENTS_ONDRAGSTART                      DISPID_EVMETH_ONDRAGSTART
#define DISPID_HTMLELEMENTEVENTS_ONBEFOREUPDATE                   DISPID_EVMETH_ONBEFOREUPDATE
#define DISPID_HTMLELEMENTEVENTS_ONAFTERUPDATE                    DISPID_EVMETH_ONAFTERUPDATE
#define DISPID_HTMLELEMENTEVENTS_ONERRORUPDATE                    DISPID_EVMETH_ONERRORUPDATE
#define DISPID_HTMLELEMENTEVENTS_ONROWEXIT                        DISPID_EVMETH_ONROWEXIT
#define DISPID_HTMLELEMENTEVENTS_ONROWENTER                       DISPID_EVMETH_ONROWENTER
#define DISPID_HTMLELEMENTEVENTS_ONDATASETCHANGED                 DISPID_EVMETH_ONDATASETCHANGED
#define DISPID_HTMLELEMENTEVENTS_ONDATAAVAILABLE                  DISPID_EVMETH_ONDATAAVAILABLE
#define DISPID_HTMLELEMENTEVENTS_ONDATASETCOMPLETE                DISPID_EVMETH_ONDATASETCOMPLETE
#define DISPID_HTMLELEMENTEVENTS_ONLOSECAPTURE                    DISPID_EVMETH_ONLOSECAPTURE
#define DISPID_HTMLELEMENTEVENTS_ONPROPERTYCHANGE                 DISPID_EVMETH_ONPROPERTYCHANGE
#define DISPID_HTMLELEMENTEVENTS_ONSCROLL                         DISPID_EVMETH_ONSCROLL
#define DISPID_HTMLELEMENTEVENTS_ONFOCUS                          DISPID_EVMETH_ONFOCUS
#define DISPID_HTMLELEMENTEVENTS_ONBLUR                           DISPID_EVMETH_ONBLUR
#define DISPID_HTMLELEMENTEVENTS_ONRESIZE                         DISPID_EVMETH_ONRESIZE
#define DISPID_HTMLELEMENTEVENTS_ONDRAG                           DISPID_EVMETH_ONDRAG
#define DISPID_HTMLELEMENTEVENTS_ONDRAGEND                        DISPID_EVMETH_ONDRAGEND
#define DISPID_HTMLELEMENTEVENTS_ONDRAGENTER                      DISPID_EVMETH_ONDRAGENTER
#define DISPID_HTMLELEMENTEVENTS_ONDRAGOVER                       DISPID_EVMETH_ONDRAGOVER
#define DISPID_HTMLELEMENTEVENTS_ONDRAGLEAVE                      DISPID_EVMETH_ONDRAGLEAVE
#define DISPID_HTMLELEMENTEVENTS_ONDROP                           DISPID_EVMETH_ONDROP
#define DISPID_HTMLELEMENTEVENTS_ONBEFORECUT                      DISPID_EVMETH_ONBEFORECUT
#define DISPID_HTMLELEMENTEVENTS_ONCUT                            DISPID_EVMETH_ONCUT
#define DISPID_HTMLELEMENTEVENTS_ONBEFORECOPY                     DISPID_EVMETH_ONBEFORECOPY
#define DISPID_HTMLELEMENTEVENTS_ONCOPY                           DISPID_EVMETH_ONCOPY
#define DISPID_HTMLELEMENTEVENTS_ONBEFOREPASTE                    DISPID_EVMETH_ONBEFOREPASTE
#define DISPID_HTMLELEMENTEVENTS_ONPASTE                          DISPID_EVMETH_ONPASTE
#define DISPID_HTMLELEMENTEVENTS_ONCONTEXTMENU                    DISPID_EVMETH_ONCONTEXTMENU
#define DISPID_HTMLELEMENTEVENTS_ONROWSDELETE                     DISPID_EVMETH_ONROWSDELETE
#define DISPID_HTMLELEMENTEVENTS_ONROWSINSERTED                   DISPID_EVMETH_ONROWSINSERTED
#define DISPID_HTMLELEMENTEVENTS_ONCELLCHANGE                     DISPID_EVMETH_ONCELLCHANGE
#define DISPID_HTMLELEMENTEVENTS_ONREADYSTATECHANGE               DISPID_EVMETH_ONREADYSTATECHANGE
#define DISPID_HTMLELEMENTEVENTS_ONBEFOREEDITFOCUS                DISPID_EVMETH_ONBEFOREEDITFOCUS
#define DISPID_HTMLELEMENTEVENTS_ONLAYOUTCOMPLETE                 DISPID_EVMETH_ONLAYOUTCOMPLETE
#define DISPID_HTMLELEMENTEVENTS_ONPAGE                           DISPID_EVMETH_ONPAGE
#define DISPID_HTMLELEMENTEVENTS_ONBEFOREDEACTIVATE               DISPID_EVMETH_ONBEFOREDEACTIVATE
#define DISPID_HTMLELEMENTEVENTS_ONBEFOREACTIVATE                 DISPID_EVMETH_ONBEFOREACTIVATE
#define DISPID_HTMLELEMENTEVENTS_ONMOVE                           DISPID_EVMETH_ONMOVE
#define DISPID_HTMLELEMENTEVENTS_ONCONTROLSELECT                  DISPID_EVMETH_ONCONTROLSELECT
#define DISPID_HTMLELEMENTEVENTS_ONMOVESTART                      DISPID_EVMETH_ONMOVESTART
#define DISPID_HTMLELEMENTEVENTS_ONMOVEEND                        DISPID_EVMETH_ONMOVEEND
#define DISPID_HTMLELEMENTEVENTS_ONRESIZESTART                    DISPID_EVMETH_ONRESIZESTART
#define DISPID_HTMLELEMENTEVENTS_ONRESIZEEND                      DISPID_EVMETH_ONRESIZEEND
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEENTER                     DISPID_EVMETH_ONMOUSEENTER
#define DISPID_HTMLELEMENTEVENTS_ONMOUSELEAVE                     DISPID_EVMETH_ONMOUSELEAVE
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEWHEEL                     DISPID_EVMETH_ONMOUSEWHEEL
#define DISPID_HTMLELEMENTEVENTS_ONACTIVATE                       DISPID_EVMETH_ONACTIVATE
#define DISPID_HTMLELEMENTEVENTS_ONDEACTIVATE                     DISPID_EVMETH_ONDEACTIVATE
#define DISPID_HTMLELEMENTEVENTS_ONFOCUSIN                        DISPID_EVMETH_ONFOCUSIN
#define DISPID_HTMLELEMENTEVENTS_ONFOCUSOUT                       DISPID_EVMETH_ONFOCUSOUT

//    DISPIDs for interface IHTMLElementDefaults

#define DISPID_IHTMLELEMENTDEFAULTS_STYLE                         DISPID_DEFAULTS+1
#define DISPID_IHTMLELEMENTDEFAULTS_TABSTOP                       DISPID_DEFAULTS+2
#define DISPID_IHTMLELEMENTDEFAULTS_VIEWINHERITSTYLE              DISPID_A_VIEWINHERITSTYLE
#define DISPID_IHTMLELEMENTDEFAULTS_VIEWMASTERTAB                 DISPID_DEFAULTS+6
#define DISPID_IHTMLELEMENTDEFAULTS_SCROLLSEGMENTX                DISPID_DEFAULTS+3
#define DISPID_IHTMLELEMENTDEFAULTS_SCROLLSEGMENTY                DISPID_DEFAULTS+4
#define DISPID_IHTMLELEMENTDEFAULTS_ISMULTILINE                   DISPID_DEFAULTS+8
#define DISPID_IHTMLELEMENTDEFAULTS_CONTENTEDITABLE               DISPID_A_EDITABLE
#define DISPID_IHTMLELEMENTDEFAULTS_CANHAVEHTML                   DISPID_DEFAULTS+9
#define DISPID_IHTMLELEMENTDEFAULTS_VIEWLINK                      DISPID_DEFAULTS+11
#define DISPID_IHTMLELEMENTDEFAULTS_FROZEN                        DISPID_A_FROZEN

//    DISPIDs for interface IHTCDefaultDispatch

#define DISPID_IHTCDEFAULTDISPATCH_ELEMENT                        DISPID_A_HTCDD_ELEMENT
#define DISPID_IHTCDEFAULTDISPATCH_CREATEEVENTOBJECT              DISPID_A_HTCDD_CREATEEVENTOBJECT
#define DISPID_IHTCDEFAULTDISPATCH_DEFAULTS                       DISPID_A_HTCDD_DEFAULTS
#define DISPID_IHTCDEFAULTDISPATCH_DOCUMENT                       DISPID_A_DOCFRAGMENT

//    DISPIDs for interface IHTCPropertyBehavior

#define DISPID_IHTCPROPERTYBEHAVIOR_FIRECHANGE                    DISPID_HTMLOBJECT+0
#define DISPID_IHTCPROPERTYBEHAVIOR_VALUE                         DISPID_A_HTCDISPATCHITEM_VALUE

//    DISPIDs for interface IHTCEventBehavior

#define DISPID_IHTCEVENTBEHAVIOR_FIRE                             DISPID_HTMLOBJECT+0

//    DISPIDs for interface IHTCAttachBehavior

#define DISPID_IHTCATTACHBEHAVIOR_FIREEVENT                       DISPID_VALUE
#define DISPID_IHTCATTACHBEHAVIOR_DETACHEVENT                     DISPID_HTMLOBJECT+0

//    DISPIDs for interface IHTCAttachBehavior2

#define DISPID_IHTCATTACHBEHAVIOR2_FIREEVENT                      DISPID_VALUE

//    DISPIDs for interface IHTCDescBehavior

#define DISPID_IHTCDESCBEHAVIOR_URN                               DISPID_HTMLOBJECT+0
#define DISPID_IHTCDESCBEHAVIOR_NAME                              DISPID_HTMLOBJECT+1

//    DISPIDs for interface IHTMLUrnCollection

#define DISPID_IHTMLURNCOLLECTION_LENGTH                          DISPID_URN_COLL+1
#define DISPID_IHTMLURNCOLLECTION_ITEM                            DISPID_VALUE

//    DISPIDs for interface IHTMLGenericElement

#define DISPID_IHTMLGENERICELEMENT_RECORDSET                      DISPID_GENERIC+1
#define DISPID_IHTMLGENERICELEMENT_NAMEDRECORDSET                 DISPID_GENERIC+2

//    DISPIDs for interface IHTMLStyleSheetRule

#define DISPID_IHTMLSTYLESHEETRULE_SELECTORTEXT                   DISPID_STYLERULE+1
#define DISPID_IHTMLSTYLESHEETRULE_STYLE                          STDPROPID_XOBJ_STYLE
#define DISPID_IHTMLSTYLESHEETRULE_READONLY                       DISPID_STYLERULE+2

//    DISPIDs for interface IHTMLStyleSheetRulesCollection

#define DISPID_IHTMLSTYLESHEETRULESCOLLECTION_LENGTH              DISPID_STYLERULES_COL+1
#define DISPID_IHTMLSTYLESHEETRULESCOLLECTION_ITEM                DISPID_VALUE

//    DISPIDs for interface IHTMLStyleSheetPage

#define DISPID_IHTMLSTYLESHEETPAGE_SELECTOR                       DISPID_STYLEPAGE+1
#define DISPID_IHTMLSTYLESHEETPAGE_PSEUDOCLASS                    DISPID_STYLEPAGE+2

//    DISPIDs for interface IHTMLStyleSheetPagesCollection

#define DISPID_IHTMLSTYLESHEETPAGESCOLLECTION_LENGTH              DISPID_STYLEPAGES_COL+1
#define DISPID_IHTMLSTYLESHEETPAGESCOLLECTION_ITEM                DISPID_VALUE

//    DISPIDs for interface IHTMLStyleSheet

#define DISPID_IHTMLSTYLESHEET_TITLE                              DISPID_STYLESHEET+1
#define DISPID_IHTMLSTYLESHEET_PARENTSTYLESHEET                   DISPID_STYLESHEET+2
#define DISPID_IHTMLSTYLESHEET_OWNINGELEMENT                      DISPID_STYLESHEET+3
#define DISPID_IHTMLSTYLESHEET_DISABLED                           STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLSTYLESHEET_READONLY                           DISPID_STYLESHEET+4
#define DISPID_IHTMLSTYLESHEET_IMPORTS                            DISPID_STYLESHEET+5
#define DISPID_IHTMLSTYLESHEET_HREF                               DISPID_STYLESHEET+6
#define DISPID_IHTMLSTYLESHEET_TYPE                               DISPID_STYLESHEET+7
#define DISPID_IHTMLSTYLESHEET_ID                                 DISPID_STYLESHEET+8
#define DISPID_IHTMLSTYLESHEET_ADDIMPORT                          DISPID_STYLESHEET+9
#define DISPID_IHTMLSTYLESHEET_ADDRULE                            DISPID_STYLESHEET+10
#define DISPID_IHTMLSTYLESHEET_REMOVEIMPORT                       DISPID_STYLESHEET+11
#define DISPID_IHTMLSTYLESHEET_REMOVERULE                         DISPID_STYLESHEET+12
#define DISPID_IHTMLSTYLESHEET_MEDIA                              DISPID_STYLESHEET+13
#define DISPID_IHTMLSTYLESHEET_CSSTEXT                            DISPID_STYLESHEET+14
#define DISPID_IHTMLSTYLESHEET_RULES                              DISPID_STYLESHEET+15

//    DISPIDs for interface IHTMLStyleSheet2

#define DISPID_IHTMLSTYLESHEET2_PAGES                             DISPID_STYLESHEET+16
#define DISPID_IHTMLSTYLESHEET2_ADDPAGERULE                       DISPID_STYLESHEET+17

//    DISPIDs for interface IHTMLStyleSheetsCollection

#define DISPID_IHTMLSTYLESHEETSCOLLECTION_LENGTH                  DISPID_STYLESHEETS_COL+1
#define DISPID_IHTMLSTYLESHEETSCOLLECTION__NEWENUM                DISPID_NEWENUM
#define DISPID_IHTMLSTYLESHEETSCOLLECTION_ITEM                    DISPID_VALUE

//    DISPIDs for interface IHTMLLinkElement

#define DISPID_IHTMLLINKELEMENT_HREF                              DISPID_HEDELEMS+5
#define DISPID_IHTMLLINKELEMENT_REL                               DISPID_HEDELEMS+6
#define DISPID_IHTMLLINKELEMENT_REV                               DISPID_HEDELEMS+7
#define DISPID_IHTMLLINKELEMENT_TYPE                              DISPID_HEDELEMS+8
#define DISPID_IHTMLLINKELEMENT_READYSTATE                        DISPID_A_READYSTATE
#define DISPID_IHTMLLINKELEMENT_ONREADYSTATECHANGE                DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLLINKELEMENT_ONLOAD                            DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLLINKELEMENT_ONERROR                           DISPID_EVPROP_ONERROR
#define DISPID_IHTMLLINKELEMENT_STYLESHEET                        DISPID_HEDELEMS+14
#define DISPID_IHTMLLINKELEMENT_DISABLED                          STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLLINKELEMENT_MEDIA                             DISPID_HEDELEMS+16

//    DISPIDs for interface IHTMLLinkElement2

#define DISPID_IHTMLLINKELEMENT2_TARGET                           DISPID_HEDELEMS+17

//    DISPIDs for interface IHTMLLinkElement3

#define DISPID_IHTMLLINKELEMENT3_CHARSET                          DISPID_HEDELEMS+18
#define DISPID_IHTMLLINKELEMENT3_HREFLANG                         DISPID_HEDELEMS+19

//    DISPIDs for event set HTMLLinkElementEvents2

#define DISPID_HTMLLINKELEMENTEVENTS2_ONLOAD                      DISPID_EVMETH_ONLOAD
#define DISPID_HTMLLINKELEMENTEVENTS2_ONERROR                     DISPID_EVMETH_ONERROR

//    DISPIDs for event set HTMLLinkElementEvents

#define DISPID_HTMLLINKELEMENTEVENTS_ONLOAD                       DISPID_EVMETH_ONLOAD
#define DISPID_HTMLLINKELEMENTEVENTS_ONERROR                      DISPID_EVMETH_ONERROR

//    DISPIDs for interface IHTMLTxtRange

#define DISPID_IHTMLTXTRANGE_HTMLTEXT                             DISPID_RANGE+3
#define DISPID_IHTMLTXTRANGE_TEXT                                 DISPID_RANGE+4
#define DISPID_IHTMLTXTRANGE_PARENTELEMENT                        DISPID_RANGE+6
#define DISPID_IHTMLTXTRANGE_DUPLICATE                            DISPID_RANGE+8
#define DISPID_IHTMLTXTRANGE_INRANGE                              DISPID_RANGE+10
#define DISPID_IHTMLTXTRANGE_ISEQUAL                              DISPID_RANGE+11
#define DISPID_IHTMLTXTRANGE_SCROLLINTOVIEW                       DISPID_RANGE+12
#define DISPID_IHTMLTXTRANGE_COLLAPSE                             DISPID_RANGE+13
#define DISPID_IHTMLTXTRANGE_EXPAND                               DISPID_RANGE+14
#define DISPID_IHTMLTXTRANGE_MOVE                                 DISPID_RANGE+15
#define DISPID_IHTMLTXTRANGE_MOVESTART                            DISPID_RANGE+16
#define DISPID_IHTMLTXTRANGE_MOVEEND                              DISPID_RANGE+17
#define DISPID_IHTMLTXTRANGE_SELECT                               DISPID_RANGE+24
#define DISPID_IHTMLTXTRANGE_PASTEHTML                            DISPID_RANGE+26
#define DISPID_IHTMLTXTRANGE_MOVETOELEMENTTEXT                    DISPID_RANGE+1
#define DISPID_IHTMLTXTRANGE_SETENDPOINT                          DISPID_RANGE+25
#define DISPID_IHTMLTXTRANGE_COMPAREENDPOINTS                     DISPID_RANGE+18
#define DISPID_IHTMLTXTRANGE_FINDTEXT                             DISPID_RANGE+19
#define DISPID_IHTMLTXTRANGE_MOVETOPOINT                          DISPID_RANGE+20
#define DISPID_IHTMLTXTRANGE_GETBOOKMARK                          DISPID_RANGE+21
#define DISPID_IHTMLTXTRANGE_MOVETOBOOKMARK                       DISPID_RANGE+9
#define DISPID_IHTMLTXTRANGE_QUERYCOMMANDSUPPORTED                DISPID_RANGE+27
#define DISPID_IHTMLTXTRANGE_QUERYCOMMANDENABLED                  DISPID_RANGE+28
#define DISPID_IHTMLTXTRANGE_QUERYCOMMANDSTATE                    DISPID_RANGE+29
#define DISPID_IHTMLTXTRANGE_QUERYCOMMANDINDETERM                 DISPID_RANGE+30
#define DISPID_IHTMLTXTRANGE_QUERYCOMMANDTEXT                     DISPID_RANGE+31
#define DISPID_IHTMLTXTRANGE_QUERYCOMMANDVALUE                    DISPID_RANGE+32
#define DISPID_IHTMLTXTRANGE_EXECCOMMAND                          DISPID_RANGE+33
#define DISPID_IHTMLTXTRANGE_EXECCOMMANDSHOWHELP                  DISPID_RANGE+34

//    DISPIDs for interface IHTMLTextRangeMetrics

#define DISPID_IHTMLTEXTRANGEMETRICS_OFFSETTOP                    DISPID_RANGE+35
#define DISPID_IHTMLTEXTRANGEMETRICS_OFFSETLEFT                   DISPID_RANGE+36
#define DISPID_IHTMLTEXTRANGEMETRICS_BOUNDINGTOP                  DISPID_RANGE+37
#define DISPID_IHTMLTEXTRANGEMETRICS_BOUNDINGLEFT                 DISPID_RANGE+38
#define DISPID_IHTMLTEXTRANGEMETRICS_BOUNDINGWIDTH                DISPID_RANGE+39
#define DISPID_IHTMLTEXTRANGEMETRICS_BOUNDINGHEIGHT               DISPID_RANGE+40

//    DISPIDs for interface IHTMLTextRangeMetrics2

#define DISPID_IHTMLTEXTRANGEMETRICS2_GETCLIENTRECTS              DISPID_RANGE+41
#define DISPID_IHTMLTEXTRANGEMETRICS2_GETBOUNDINGCLIENTRECT       DISPID_RANGE+42

//    DISPIDs for interface IHTMLTxtRangeCollection

#define DISPID_IHTMLTXTRANGECOLLECTION_LENGTH                     DISPID_COLLECTION
#define DISPID_IHTMLTXTRANGECOLLECTION__NEWENUM                   DISPID_NEWENUM
#define DISPID_IHTMLTXTRANGECOLLECTION_ITEM                       DISPID_VALUE

//    DISPIDs for interface IHTMLFormElement

#define DISPID_IHTMLFORMELEMENT_ACTION                            DISPID_FORM+1
#define DISPID_IHTMLFORMELEMENT_DIR                               DISPID_A_DIR
#define DISPID_IHTMLFORMELEMENT_ENCODING                          DISPID_FORM+3
#define DISPID_IHTMLFORMELEMENT_METHOD                            DISPID_FORM+4
#define DISPID_IHTMLFORMELEMENT_ELEMENTS                          DISPID_FORM+5
#define DISPID_IHTMLFORMELEMENT_TARGET                            DISPID_FORM+6
#define DISPID_IHTMLFORMELEMENT_NAME                              STDPROPID_XOBJ_NAME
#define DISPID_IHTMLFORMELEMENT_ONSUBMIT                          DISPID_EVPROP_ONSUBMIT
#define DISPID_IHTMLFORMELEMENT_ONRESET                           DISPID_EVPROP_ONRESET
#define DISPID_IHTMLFORMELEMENT_SUBMIT                            DISPID_FORM+9
#define DISPID_IHTMLFORMELEMENT_RESET                             DISPID_FORM+10
#define DISPID_IHTMLFORMELEMENT_LENGTH                            DISPID_COLLECTION
#define DISPID_IHTMLFORMELEMENT__NEWENUM                          DISPID_NEWENUM
#define DISPID_IHTMLFORMELEMENT_ITEM                              DISPID_VALUE
#define DISPID_IHTMLFORMELEMENT_TAGS                              DISPID_COLLECTION+2

//    DISPIDs for interface IHTMLFormElement2

#define DISPID_IHTMLFORMELEMENT2_ACCEPTCHARSET                    DISPID_FORM+11
#define DISPID_IHTMLFORMELEMENT2_URNS                             DISPID_COLLECTION+5

//    DISPIDs for interface IHTMLFormElement3

#define DISPID_IHTMLFORMELEMENT3_NAMEDITEM                        DISPID_COLLECTION+6

//    DISPIDs for interface IHTMLSubmitData

#define DISPID_IHTMLSUBMITDATA_APPENDNAMEVALUEPAIR                DISPID_FORM+12
#define DISPID_IHTMLSUBMITDATA_APPENDNAMEFILEPAIR                 DISPID_FORM+13
#define DISPID_IHTMLSUBMITDATA_APPENDITEMSEPARATOR                DISPID_FORM+14

//    DISPIDs for event set HTMLFormElementEvents2

#define DISPID_HTMLFORMELEMENTEVENTS2_ONSUBMIT                    DISPID_EVMETH_ONSUBMIT
#define DISPID_HTMLFORMELEMENTEVENTS2_ONRESET                     DISPID_EVMETH_ONRESET

//    DISPIDs for event set HTMLFormElementEvents

#define DISPID_HTMLFORMELEMENTEVENTS_ONSUBMIT                     DISPID_EVMETH_ONSUBMIT
#define DISPID_HTMLFORMELEMENTEVENTS_ONRESET                      DISPID_EVMETH_ONRESET

//    DISPIDs for interface IHTMLControlElement

#define DISPID_IHTMLCONTROLELEMENT_TABINDEX                       STDPROPID_XOBJ_TABINDEX
#define DISPID_IHTMLCONTROLELEMENT_FOCUS                          DISPID_SITE+0
#define DISPID_IHTMLCONTROLELEMENT_ACCESSKEY                      DISPID_SITE+5
#define DISPID_IHTMLCONTROLELEMENT_ONBLUR                         DISPID_EVPROP_ONBLUR
#define DISPID_IHTMLCONTROLELEMENT_ONFOCUS                        DISPID_EVPROP_ONFOCUS
#define DISPID_IHTMLCONTROLELEMENT_ONRESIZE                       DISPID_EVPROP_ONRESIZE
#define DISPID_IHTMLCONTROLELEMENT_BLUR                           DISPID_SITE+2
#define DISPID_IHTMLCONTROLELEMENT_ADDFILTER                      DISPID_SITE+17
#define DISPID_IHTMLCONTROLELEMENT_REMOVEFILTER                   DISPID_SITE+18
#define DISPID_IHTMLCONTROLELEMENT_CLIENTHEIGHT                   DISPID_SITE+19
#define DISPID_IHTMLCONTROLELEMENT_CLIENTWIDTH                    DISPID_SITE+20
#define DISPID_IHTMLCONTROLELEMENT_CLIENTTOP                      DISPID_SITE+21
#define DISPID_IHTMLCONTROLELEMENT_CLIENTLEFT                     DISPID_SITE+22

//    DISPIDs for interface IHTMLTextContainer

#define DISPID_IHTMLTEXTCONTAINER_CREATECONTROLRANGE              DISPID_TEXTSITE+1
#define DISPID_IHTMLTEXTCONTAINER_SCROLLHEIGHT                    DISPID_TEXTSITE+2
#define DISPID_IHTMLTEXTCONTAINER_SCROLLWIDTH                     DISPID_TEXTSITE+3
#define DISPID_IHTMLTEXTCONTAINER_SCROLLTOP                       DISPID_TEXTSITE+4
#define DISPID_IHTMLTEXTCONTAINER_SCROLLLEFT                      DISPID_TEXTSITE+5
#define DISPID_IHTMLTEXTCONTAINER_ONSCROLL                        DISPID_EVPROP_ONSCROLL

//    DISPIDs for event set HTMLTextContainerEvents2

#define DISPID_HTMLTEXTCONTAINEREVENTS2_ONCHANGE                  DISPID_EVMETH_ONCHANGE
#define DISPID_HTMLTEXTCONTAINEREVENTS2_ONSELECT                  DISPID_EVMETH_ONSELECT

//    DISPIDs for event set HTMLTextContainerEvents

#define DISPID_HTMLTEXTCONTAINEREVENTS_ONCHANGE                   DISPID_EVMETH_ONCHANGE
#define DISPID_HTMLTEXTCONTAINEREVENTS_ONSELECT                   DISPID_EVMETH_ONSELECT

//    DISPIDs for interface IHTMLControlRange

#define DISPID_IHTMLCONTROLRANGE_SELECT                           DISPID_RANGE+2
#define DISPID_IHTMLCONTROLRANGE_ADD                              DISPID_RANGE+3
#define DISPID_IHTMLCONTROLRANGE_REMOVE                           DISPID_RANGE+4
#define DISPID_IHTMLCONTROLRANGE_ITEM                             DISPID_VALUE
#define DISPID_IHTMLCONTROLRANGE_SCROLLINTOVIEW                   DISPID_RANGE+6
#define DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDSUPPORTED            DISPID_RANGE+7
#define DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDENABLED              DISPID_RANGE+8
#define DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDSTATE                DISPID_RANGE+9
#define DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDINDETERM             DISPID_RANGE+10
#define DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDTEXT                 DISPID_RANGE+11
#define DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDVALUE                DISPID_RANGE+12
#define DISPID_IHTMLCONTROLRANGE_EXECCOMMAND                      DISPID_RANGE+13
#define DISPID_IHTMLCONTROLRANGE_EXECCOMMANDSHOWHELP              DISPID_RANGE+14
#define DISPID_IHTMLCONTROLRANGE_COMMONPARENTELEMENT              DISPID_RANGE+15
#define DISPID_IHTMLCONTROLRANGE_LENGTH                           DISPID_RANGE+5

//    DISPIDs for interface IHTMLControlRange2

#define DISPID_IHTMLCONTROLRANGE2_ADDELEMENT                      DISPID_RANGE+16

//    DISPIDs for interface IHTMLImgElement

#define DISPID_IHTMLIMGELEMENT_ISMAP                              DISPID_IMG+2
#define DISPID_IHTMLIMGELEMENT_USEMAP                             DISPID_IMG+8
#define DISPID_IHTMLIMGELEMENT_MIMETYPE                           DISPID_IMG+10
#define DISPID_IHTMLIMGELEMENT_FILESIZE                           DISPID_IMG+11
#define DISPID_IHTMLIMGELEMENT_FILECREATEDDATE                    DISPID_IMG+12
#define DISPID_IHTMLIMGELEMENT_FILEMODIFIEDDATE                   DISPID_IMG+13
#define DISPID_IHTMLIMGELEMENT_FILEUPDATEDDATE                    DISPID_IMG+14
#define DISPID_IHTMLIMGELEMENT_PROTOCOL                           DISPID_IMG+15
#define DISPID_IHTMLIMGELEMENT_HREF                               DISPID_IMG+16
#define DISPID_IHTMLIMGELEMENT_NAMEPROP                           DISPID_IMG+17
#define DISPID_IHTMLIMGELEMENT_BORDER                             DISPID_IMGBASE+4
#define DISPID_IHTMLIMGELEMENT_VSPACE                             DISPID_IMGBASE+5
#define DISPID_IHTMLIMGELEMENT_HSPACE                             DISPID_IMGBASE+6
#define DISPID_IHTMLIMGELEMENT_ALT                                DISPID_IMGBASE+2
#define DISPID_IHTMLIMGELEMENT_SRC                                DISPID_IMGBASE+3
#define DISPID_IHTMLIMGELEMENT_LOWSRC                             DISPID_IMGBASE+7
#define DISPID_IHTMLIMGELEMENT_VRML                               DISPID_IMGBASE+8
#define DISPID_IHTMLIMGELEMENT_DYNSRC                             DISPID_IMGBASE+9
#define DISPID_IHTMLIMGELEMENT_READYSTATE                         DISPID_A_READYSTATE
#define DISPID_IHTMLIMGELEMENT_COMPLETE                           DISPID_IMGBASE+10
#define DISPID_IHTMLIMGELEMENT_LOOP                               DISPID_IMGBASE+11
#define DISPID_IHTMLIMGELEMENT_ALIGN                              STDPROPID_XOBJ_CONTROLALIGN
#define DISPID_IHTMLIMGELEMENT_ONLOAD                             DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLIMGELEMENT_ONERROR                            DISPID_EVPROP_ONERROR
#define DISPID_IHTMLIMGELEMENT_ONABORT                            DISPID_EVPROP_ONABORT
#define DISPID_IHTMLIMGELEMENT_NAME                               STDPROPID_XOBJ_NAME
#define DISPID_IHTMLIMGELEMENT_WIDTH                              STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLIMGELEMENT_HEIGHT                             STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLIMGELEMENT_START                              DISPID_IMGBASE+13

//    DISPIDs for interface IHTMLImgElement2

#define DISPID_IHTMLIMGELEMENT2_LONGDESC                          DISPID_IMG+19

//    DISPIDs for interface IHTMLImageElementFactory

#define DISPID_IHTMLIMAGEELEMENTFACTORY_CREATE                    DISPID_VALUE

//    DISPIDs for event set HTMLImgEvents2

#define DISPID_HTMLIMGEVENTS2_ONLOAD                              DISPID_EVMETH_ONLOAD
#define DISPID_HTMLIMGEVENTS2_ONERROR                             DISPID_EVMETH_ONERROR
#define DISPID_HTMLIMGEVENTS2_ONABORT                             DISPID_EVMETH_ONABORT

//    DISPIDs for event set HTMLImgEvents

#define DISPID_HTMLIMGEVENTS_ONLOAD                               DISPID_EVMETH_ONLOAD
#define DISPID_HTMLIMGEVENTS_ONERROR                              DISPID_EVMETH_ONERROR
#define DISPID_HTMLIMGEVENTS_ONABORT                              DISPID_EVMETH_ONABORT

//    DISPIDs for interface IHTMLXMLHttpRequest

#define DISPID_IHTMLXMLHTTPREQUEST_READYSTATE                     DISPID_XMLHTTPREQUEST+2
#define DISPID_IHTMLXMLHTTPREQUEST_RESPONSEBODY                   DISPID_XMLHTTPREQUEST+3
#define DISPID_IHTMLXMLHTTPREQUEST_RESPONSETEXT                   DISPID_XMLHTTPREQUEST+4
#define DISPID_IHTMLXMLHTTPREQUEST_RESPONSEXML                    DISPID_XMLHTTPREQUEST+5
#define DISPID_IHTMLXMLHTTPREQUEST_STATUS                         DISPID_XMLHTTPREQUEST+6
#define DISPID_IHTMLXMLHTTPREQUEST_STATUSTEXT                     DISPID_XMLHTTPREQUEST+7
#define DISPID_IHTMLXMLHTTPREQUEST_ONREADYSTATECHANGE             DISPID_XMLHTTPREQUEST+8
#define DISPID_IHTMLXMLHTTPREQUEST_ABORT                          DISPID_XMLHTTPREQUEST+9
#define DISPID_IHTMLXMLHTTPREQUEST_OPEN                           DISPID_XMLHTTPREQUEST+10
#define DISPID_IHTMLXMLHTTPREQUEST_SEND                           DISPID_XMLHTTPREQUEST+11
#define DISPID_IHTMLXMLHTTPREQUEST_GETALLRESPONSEHEADERS          DISPID_XMLHTTPREQUEST+12
#define DISPID_IHTMLXMLHTTPREQUEST_GETRESPONSEHEADER              DISPID_XMLHTTPREQUEST+13
#define DISPID_IHTMLXMLHTTPREQUEST_SETREQUESTHEADER               DISPID_XMLHTTPREQUEST+14

//    DISPIDs for interface IHTMLXMLHttpRequestFactory

#define DISPID_IHTMLXMLHTTPREQUESTFACTORY_CREATE                  DISPID_VALUE

//    DISPIDs for interface IHTMLBodyElement

#define DISPID_IHTMLBODYELEMENT_BACKGROUND                        DISPID_A_BACKGROUNDIMAGE
#define DISPID_IHTMLBODYELEMENT_BGPROPERTIES                      DISPID_A_BACKGROUNDATTACHMENT
#define DISPID_IHTMLBODYELEMENT_LEFTMARGIN                        DISPID_A_MARGINLEFT
#define DISPID_IHTMLBODYELEMENT_TOPMARGIN                         DISPID_A_MARGINTOP
#define DISPID_IHTMLBODYELEMENT_RIGHTMARGIN                       DISPID_A_MARGINRIGHT
#define DISPID_IHTMLBODYELEMENT_BOTTOMMARGIN                      DISPID_A_MARGINBOTTOM
#define DISPID_IHTMLBODYELEMENT_NOWRAP                            DISPID_A_NOWRAP
#define DISPID_IHTMLBODYELEMENT_BGCOLOR                           DISPID_BACKCOLOR
#define DISPID_IHTMLBODYELEMENT_TEXT                              DISPID_A_COLOR
#define DISPID_IHTMLBODYELEMENT_LINK                              DISPID_BODY+10
#define DISPID_IHTMLBODYELEMENT_VLINK                             DISPID_BODY+12
#define DISPID_IHTMLBODYELEMENT_ALINK                             DISPID_BODY+11
#define DISPID_IHTMLBODYELEMENT_ONLOAD                            DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLBODYELEMENT_ONUNLOAD                          DISPID_EVPROP_ONUNLOAD
#define DISPID_IHTMLBODYELEMENT_SCROLL                            DISPID_A_SCROLL
#define DISPID_IHTMLBODYELEMENT_ONSELECT                          DISPID_EVPROP_ONSELECT
#define DISPID_IHTMLBODYELEMENT_ONBEFOREUNLOAD                    DISPID_EVPROP_ONBEFOREUNLOAD
#define DISPID_IHTMLBODYELEMENT_CREATETEXTRANGE                   DISPID_BODY+13

//    DISPIDs for interface IHTMLBodyElement2

#define DISPID_IHTMLBODYELEMENT2_ONBEFOREPRINT                    DISPID_EVPROP_ONBEFOREPRINT
#define DISPID_IHTMLBODYELEMENT2_ONAFTERPRINT                     DISPID_EVPROP_ONAFTERPRINT

//    DISPIDs for interface IHTMLFontElement

#define DISPID_IHTMLFONTELEMENT_COLOR                             DISPID_A_COLOR
#define DISPID_IHTMLFONTELEMENT_FACE                              DISPID_A_FONTFACE
#define DISPID_IHTMLFONTELEMENT_SIZE                              DISPID_A_FONTSIZE

//    DISPIDs for interface IHTMLAnchorElement

#define DISPID_IHTMLANCHORELEMENT_HREF                            DISPID_VALUE
#define DISPID_IHTMLANCHORELEMENT_TARGET                          DISPID_ANCHOR+3
#define DISPID_IHTMLANCHORELEMENT_REL                             DISPID_ANCHOR+5
#define DISPID_IHTMLANCHORELEMENT_REV                             DISPID_ANCHOR+6
#define DISPID_IHTMLANCHORELEMENT_URN                             DISPID_ANCHOR+7
#define DISPID_IHTMLANCHORELEMENT_METHODS                         DISPID_ANCHOR+8
#define DISPID_IHTMLANCHORELEMENT_NAME                            STDPROPID_XOBJ_NAME
#define DISPID_IHTMLANCHORELEMENT_HOST                            DISPID_ANCHOR+12
#define DISPID_IHTMLANCHORELEMENT_HOSTNAME                        DISPID_ANCHOR+13
#define DISPID_IHTMLANCHORELEMENT_PATHNAME                        DISPID_ANCHOR+14
#define DISPID_IHTMLANCHORELEMENT_PORT                            DISPID_ANCHOR+15
#define DISPID_IHTMLANCHORELEMENT_PROTOCOL                        DISPID_ANCHOR+16
#define DISPID_IHTMLANCHORELEMENT_SEARCH                          DISPID_ANCHOR+17
#define DISPID_IHTMLANCHORELEMENT_HASH                            DISPID_ANCHOR+18
#define DISPID_IHTMLANCHORELEMENT_ONBLUR                          DISPID_EVPROP_ONBLUR
#define DISPID_IHTMLANCHORELEMENT_ONFOCUS                         DISPID_EVPROP_ONFOCUS
#define DISPID_IHTMLANCHORELEMENT_ACCESSKEY                       DISPID_SITE+5
#define DISPID_IHTMLANCHORELEMENT_PROTOCOLLONG                    DISPID_ANCHOR+31
#define DISPID_IHTMLANCHORELEMENT_MIMETYPE                        DISPID_ANCHOR+30
#define DISPID_IHTMLANCHORELEMENT_NAMEPROP                        DISPID_ANCHOR+32
#define DISPID_IHTMLANCHORELEMENT_TABINDEX                        STDPROPID_XOBJ_TABINDEX
#define DISPID_IHTMLANCHORELEMENT_FOCUS                           DISPID_SITE+0
#define DISPID_IHTMLANCHORELEMENT_BLUR                            DISPID_SITE+2

//    DISPIDs for interface IHTMLAnchorElement2

#define DISPID_IHTMLANCHORELEMENT2_CHARSET                        DISPID_ANCHOR+23
#define DISPID_IHTMLANCHORELEMENT2_COORDS                         DISPID_ANCHOR+24
#define DISPID_IHTMLANCHORELEMENT2_HREFLANG                       DISPID_ANCHOR+25
#define DISPID_IHTMLANCHORELEMENT2_SHAPE                          DISPID_ANCHOR+26
#define DISPID_IHTMLANCHORELEMENT2_TYPE                           DISPID_ANCHOR+27

//    DISPIDs for interface IHTMLLabelElement

#define DISPID_IHTMLLABELELEMENT_HTMLFOR                          DISPID_LABEL
#define DISPID_IHTMLLABELELEMENT_ACCESSKEY                        DISPID_SITE+5

//    DISPIDs for interface IHTMLLabelElement2

#define DISPID_IHTMLLABELELEMENT2_FORM                            DISPID_LABEL+2

//    DISPIDs for interface IHTMLListElement2

#define DISPID_IHTMLLISTELEMENT2_COMPACT                          DISPID_DIR+1

//    DISPIDs for interface IHTMLUListElement

#define DISPID_IHTMLULISTELEMENT_COMPACT                          DISPID_DIR+1
#define DISPID_IHTMLULISTELEMENT_TYPE                             DISPID_A_LISTTYPE

//    DISPIDs for interface IHTMLOListElement

#define DISPID_IHTMLOLISTELEMENT_COMPACT                          DISPID_DIR+1
#define DISPID_IHTMLOLISTELEMENT_START                            DISPID_OL+3
#define DISPID_IHTMLOLISTELEMENT_TYPE                             DISPID_A_LISTTYPE

//    DISPIDs for interface IHTMLLIElement

#define DISPID_IHTMLLIELEMENT_TYPE                                DISPID_A_LISTTYPE
#define DISPID_IHTMLLIELEMENT_VALUE                               DISPID_LI+1

//    DISPIDs for interface IHTMLBlockElement

#define DISPID_IHTMLBLOCKELEMENT_CLEAR                            DISPID_A_CLEAR

//    DISPIDs for interface IHTMLBlockElement2

#define DISPID_IHTMLBLOCKELEMENT2_CITE                            DISPID_BLOCK+1
#define DISPID_IHTMLBLOCKELEMENT2_WIDTH                           DISPID_BLOCK+2

//    DISPIDs for interface IHTMLDivElement

#define DISPID_IHTMLDIVELEMENT_ALIGN                              STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLDIVELEMENT_NOWRAP                             DISPID_A_NOWRAP

//    DISPIDs for interface IHTMLDDElement

#define DISPID_IHTMLDDELEMENT_NOWRAP                              DISPID_A_NOWRAP

//    DISPIDs for interface IHTMLDTElement

#define DISPID_IHTMLDTELEMENT_NOWRAP                              DISPID_A_NOWRAP

//    DISPIDs for interface IHTMLBRElement

#define DISPID_IHTMLBRELEMENT_CLEAR                               DISPID_A_CLEAR

//    DISPIDs for interface IHTMLDListElement

#define DISPID_IHTMLDLISTELEMENT_COMPACT                          DISPID_DIR+1

//    DISPIDs for interface IHTMLHRElement

#define DISPID_IHTMLHRELEMENT_ALIGN                               STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLHRELEMENT_COLOR                               DISPID_A_COLOR
#define DISPID_IHTMLHRELEMENT_NOSHADE                             DISPID_HR+1
#define DISPID_IHTMLHRELEMENT_WIDTH                               STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLHRELEMENT_SIZE                                STDPROPID_XOBJ_HEIGHT

//    DISPIDs for interface IHTMLParaElement

#define DISPID_IHTMLPARAELEMENT_ALIGN                             STDPROPID_XOBJ_BLOCKALIGN

//    DISPIDs for interface IHTMLElementCollection

#define DISPID_IHTMLELEMENTCOLLECTION_TOSTRING                    DISPID_COLLECTION+1
#define DISPID_IHTMLELEMENTCOLLECTION_LENGTH                      DISPID_COLLECTION
#define DISPID_IHTMLELEMENTCOLLECTION__NEWENUM                    DISPID_NEWENUM
#define DISPID_IHTMLELEMENTCOLLECTION_ITEM                        DISPID_VALUE
#define DISPID_IHTMLELEMENTCOLLECTION_TAGS                        DISPID_COLLECTION+2

//    DISPIDs for interface IHTMLElementCollection2

#define DISPID_IHTMLELEMENTCOLLECTION2_URNS                       DISPID_COLLECTION+5

//    DISPIDs for interface IHTMLElementCollection3

#define DISPID_IHTMLELEMENTCOLLECTION3_NAMEDITEM                  DISPID_COLLECTION+6

//    DISPIDs for interface IHTMLHeaderElement

#define DISPID_IHTMLHEADERELEMENT_ALIGN                           STDPROPID_XOBJ_BLOCKALIGN

//    DISPIDs for interface IHTMLSelectElementEx

#define DISPID_IHTMLSELECTELEMENTEX_SHOWDROPDOWN                  
#define DISPID_IHTMLSELECTELEMENTEX_SETSELECTEXFLAGS              
#define DISPID_IHTMLSELECTELEMENTEX_GETSELECTEXFLAGS              
#define DISPID_IHTMLSELECTELEMENTEX_GETDROPDOWNOPEN               

//    DISPIDs for interface IHTMLSelectElement

#define DISPID_IHTMLSELECTELEMENT_SIZE                            DISPID_SELECT+2
#define DISPID_IHTMLSELECTELEMENT_MULTIPLE                        DISPID_SELECT+3
#define DISPID_IHTMLSELECTELEMENT_NAME                            STDPROPID_XOBJ_NAME
#define DISPID_IHTMLSELECTELEMENT_OPTIONS                         DISPID_SELECT+5
#define DISPID_IHTMLSELECTELEMENT_ONCHANGE                        DISPID_EVPROP_ONCHANGE
#define DISPID_IHTMLSELECTELEMENT_SELECTEDINDEX                   DISPID_SELECT+10
#define DISPID_IHTMLSELECTELEMENT_TYPE                            DISPID_SELECT+12
#define DISPID_IHTMLSELECTELEMENT_VALUE                           DISPID_SELECT+11
#define DISPID_IHTMLSELECTELEMENT_DISABLED                        STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLSELECTELEMENT_FORM                            DISPID_SITE+4
#define DISPID_IHTMLSELECTELEMENT_ADD                             DISPID_COLLECTION+3
#define DISPID_IHTMLSELECTELEMENT_REMOVE                          DISPID_COLLECTION+4
#define DISPID_IHTMLSELECTELEMENT_LENGTH                          DISPID_COLLECTION
#define DISPID_IHTMLSELECTELEMENT__NEWENUM                        DISPID_NEWENUM
#define DISPID_IHTMLSELECTELEMENT_ITEM                            DISPID_VALUE
#define DISPID_IHTMLSELECTELEMENT_TAGS                            DISPID_COLLECTION+2

//    DISPIDs for interface IHTMLSelectElement2

#define DISPID_IHTMLSELECTELEMENT2_URNS                           DISPID_COLLECTION+5

//    DISPIDs for interface IHTMLSelectElement4

#define DISPID_IHTMLSELECTELEMENT4_NAMEDITEM                      DISPID_COLLECTION+6

//    DISPIDs for event set HTMLSelectElementEvents2

#define DISPID_HTMLSELECTELEMENTEVENTS2_ONCHANGE                  DISPID_EVMETH_ONCHANGE

//    DISPIDs for event set HTMLSelectElementEvents

#define DISPID_HTMLSELECTELEMENTEVENTS_ONCHANGE                   DISPID_EVMETH_ONCHANGE

//    DISPIDs for interface IHTMLSelectionObject

#define DISPID_IHTMLSELECTIONOBJECT_CREATERANGE                   DISPID_SELECTOBJ+1
#define DISPID_IHTMLSELECTIONOBJECT_EMPTY                         DISPID_SELECTOBJ+2
#define DISPID_IHTMLSELECTIONOBJECT_CLEAR                         DISPID_SELECTOBJ+3
#define DISPID_IHTMLSELECTIONOBJECT_TYPE                          DISPID_SELECTOBJ+4

//    DISPIDs for interface IHTMLSelectionObject2

#define DISPID_IHTMLSELECTIONOBJECT2_CREATERANGECOLLECTION        DISPID_SELECTOBJ+5
#define DISPID_IHTMLSELECTIONOBJECT2_TYPEDETAIL                   DISPID_SELECTOBJ+6

//    DISPIDs for interface IHTMLOptionElement

#define DISPID_IHTMLOPTIONELEMENT_SELECTED                        DISPID_OPTION+1
#define DISPID_IHTMLOPTIONELEMENT_VALUE                           DISPID_OPTION+2
#define DISPID_IHTMLOPTIONELEMENT_DEFAULTSELECTED                 DISPID_OPTION+3
#define DISPID_IHTMLOPTIONELEMENT_INDEX                           DISPID_OPTION+5
#define DISPID_IHTMLOPTIONELEMENT_TEXT                            DISPID_OPTION+4
#define DISPID_IHTMLOPTIONELEMENT_FORM                            DISPID_OPTION+6

//    DISPIDs for interface IHTMLOptionElement3

#define DISPID_IHTMLOPTIONELEMENT3_LABEL                          DISPID_OPTION+7

//    DISPIDs for interface IHTMLOptionElementFactory

#define DISPID_IHTMLOPTIONELEMENTFACTORY_CREATE                   DISPID_VALUE

//    DISPIDs for interface IHTMLInputElement

#define DISPID_IHTMLINPUTELEMENT_TYPE                             DISPID_INPUT
#define DISPID_IHTMLINPUTELEMENT_VALUE                            DISPID_A_VALUE
#define DISPID_IHTMLINPUTELEMENT_NAME                             STDPROPID_XOBJ_NAME
#define DISPID_IHTMLINPUTELEMENT_STATUS                           DISPID_INPUT+1
#define DISPID_IHTMLINPUTELEMENT_DISABLED                         STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLINPUTELEMENT_FORM                             DISPID_SITE+4
#define DISPID_IHTMLINPUTELEMENT_SIZE                             DISPID_INPUT+2
#define DISPID_IHTMLINPUTELEMENT_MAXLENGTH                        DISPID_INPUT+3
#define DISPID_IHTMLINPUTELEMENT_SELECT                           DISPID_INPUT+4
#define DISPID_IHTMLINPUTELEMENT_ONCHANGE                         DISPID_EVPROP_ONCHANGE
#define DISPID_IHTMLINPUTELEMENT_ONSELECT                         DISPID_EVPROP_ONSELECT
#define DISPID_IHTMLINPUTELEMENT_DEFAULTVALUE                     DISPID_DEFAULTVALUE
#define DISPID_IHTMLINPUTELEMENT_READONLY                         DISPID_INPUT+5
#define DISPID_IHTMLINPUTELEMENT_CREATETEXTRANGE                  DISPID_INPUT+6
#define DISPID_IHTMLINPUTELEMENT_INDETERMINATE                    DISPID_INPUT+7
#define DISPID_IHTMLINPUTELEMENT_DEFAULTCHECKED                   DISPID_INPUT+8
#define DISPID_IHTMLINPUTELEMENT_CHECKED                          DISPID_INPUT+9
#define DISPID_IHTMLINPUTELEMENT_BORDER                           DISPID_INPUT+12
#define DISPID_IHTMLINPUTELEMENT_VSPACE                           DISPID_INPUT+13
#define DISPID_IHTMLINPUTELEMENT_HSPACE                           DISPID_INPUT+14
#define DISPID_IHTMLINPUTELEMENT_ALT                              DISPID_INPUT+10
#define DISPID_IHTMLINPUTELEMENT_SRC                              DISPID_INPUT+11
#define DISPID_IHTMLINPUTELEMENT_LOWSRC                           DISPID_INPUT+15
#define DISPID_IHTMLINPUTELEMENT_VRML                             DISPID_INPUT+16
#define DISPID_IHTMLINPUTELEMENT_DYNSRC                           DISPID_INPUT+17
#define DISPID_IHTMLINPUTELEMENT_READYSTATE                       DISPID_A_READYSTATE
#define DISPID_IHTMLINPUTELEMENT_COMPLETE                         DISPID_INPUT+18
#define DISPID_IHTMLINPUTELEMENT_LOOP                             DISPID_INPUT+19
#define DISPID_IHTMLINPUTELEMENT_ALIGN                            STDPROPID_XOBJ_CONTROLALIGN
#define DISPID_IHTMLINPUTELEMENT_ONLOAD                           DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLINPUTELEMENT_ONERROR                          DISPID_EVPROP_ONERROR
#define DISPID_IHTMLINPUTELEMENT_ONABORT                          DISPID_EVPROP_ONABORT
#define DISPID_IHTMLINPUTELEMENT_WIDTH                            STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLINPUTELEMENT_HEIGHT                           STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLINPUTELEMENT_START                            DISPID_INPUT+20

//    DISPIDs for interface IHTMLInputElement2

#define DISPID_IHTMLINPUTELEMENT2_ACCEPT                          DISPID_INPUT+22
#define DISPID_IHTMLINPUTELEMENT2_USEMAP                          DISPID_INPUT+23

//    DISPIDs for interface IHTMLInputButtonElement

#define DISPID_IHTMLINPUTBUTTONELEMENT_TYPE                       DISPID_INPUT
#define DISPID_IHTMLINPUTBUTTONELEMENT_VALUE                      DISPID_A_VALUE
#define DISPID_IHTMLINPUTBUTTONELEMENT_NAME                       STDPROPID_XOBJ_NAME
#define DISPID_IHTMLINPUTBUTTONELEMENT_STATUS                     DISPID_INPUT+21
#define DISPID_IHTMLINPUTBUTTONELEMENT_DISABLED                   STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLINPUTBUTTONELEMENT_FORM                       DISPID_SITE+4
#define DISPID_IHTMLINPUTBUTTONELEMENT_CREATETEXTRANGE            DISPID_INPUT+6

//    DISPIDs for interface IHTMLInputHiddenElement

#define DISPID_IHTMLINPUTHIDDENELEMENT_TYPE                       DISPID_INPUT
#define DISPID_IHTMLINPUTHIDDENELEMENT_VALUE                      DISPID_A_VALUE
#define DISPID_IHTMLINPUTHIDDENELEMENT_NAME                       STDPROPID_XOBJ_NAME
#define DISPID_IHTMLINPUTHIDDENELEMENT_STATUS                     DISPID_INPUT+21
#define DISPID_IHTMLINPUTHIDDENELEMENT_DISABLED                   STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLINPUTHIDDENELEMENT_FORM                       DISPID_SITE+4
#define DISPID_IHTMLINPUTHIDDENELEMENT_CREATETEXTRANGE            DISPID_INPUT+6

//    DISPIDs for interface IHTMLInputTextElement

#define DISPID_IHTMLINPUTTEXTELEMENT_TYPE                         DISPID_INPUT
#define DISPID_IHTMLINPUTTEXTELEMENT_VALUE                        DISPID_A_VALUE
#define DISPID_IHTMLINPUTTEXTELEMENT_NAME                         STDPROPID_XOBJ_NAME
#define DISPID_IHTMLINPUTTEXTELEMENT_STATUS                       DISPID_INPUT+21
#define DISPID_IHTMLINPUTTEXTELEMENT_DISABLED                     STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLINPUTTEXTELEMENT_FORM                         DISPID_SITE+4
#define DISPID_IHTMLINPUTTEXTELEMENT_DEFAULTVALUE                 DISPID_DEFAULTVALUE
#define DISPID_IHTMLINPUTTEXTELEMENT_SIZE                         DISPID_INPUT+2
#define DISPID_IHTMLINPUTTEXTELEMENT_MAXLENGTH                    DISPID_INPUT+3
#define DISPID_IHTMLINPUTTEXTELEMENT_SELECT                       DISPID_INPUT+4
#define DISPID_IHTMLINPUTTEXTELEMENT_ONCHANGE                     DISPID_EVPROP_ONCHANGE
#define DISPID_IHTMLINPUTTEXTELEMENT_ONSELECT                     DISPID_EVPROP_ONSELECT
#define DISPID_IHTMLINPUTTEXTELEMENT_READONLY                     DISPID_INPUT+5
#define DISPID_IHTMLINPUTTEXTELEMENT_CREATETEXTRANGE              DISPID_INPUT+6

//    DISPIDs for interface IHTMLInputFileElement

#define DISPID_IHTMLINPUTFILEELEMENT_TYPE                         DISPID_INPUT
#define DISPID_IHTMLINPUTFILEELEMENT_NAME                         STDPROPID_XOBJ_NAME
#define DISPID_IHTMLINPUTFILEELEMENT_STATUS                       DISPID_INPUT+21
#define DISPID_IHTMLINPUTFILEELEMENT_DISABLED                     STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLINPUTFILEELEMENT_FORM                         DISPID_SITE+4
#define DISPID_IHTMLINPUTFILEELEMENT_SIZE                         DISPID_INPUT+2
#define DISPID_IHTMLINPUTFILEELEMENT_MAXLENGTH                    DISPID_INPUT+3
#define DISPID_IHTMLINPUTFILEELEMENT_SELECT                       DISPID_INPUT+4
#define DISPID_IHTMLINPUTFILEELEMENT_ONCHANGE                     DISPID_EVPROP_ONCHANGE
#define DISPID_IHTMLINPUTFILEELEMENT_ONSELECT                     DISPID_EVPROP_ONSELECT
#define DISPID_IHTMLINPUTFILEELEMENT_VALUE                        DISPID_A_VALUE

//    DISPIDs for interface IHTMLOptionButtonElement

#define DISPID_IHTMLOPTIONBUTTONELEMENT_VALUE                     DISPID_A_VALUE
#define DISPID_IHTMLOPTIONBUTTONELEMENT_TYPE                      DISPID_INPUT
#define DISPID_IHTMLOPTIONBUTTONELEMENT_NAME                      STDPROPID_XOBJ_NAME
#define DISPID_IHTMLOPTIONBUTTONELEMENT_CHECKED                   DISPID_INPUT+9
#define DISPID_IHTMLOPTIONBUTTONELEMENT_DEFAULTCHECKED            DISPID_INPUT+8
#define DISPID_IHTMLOPTIONBUTTONELEMENT_ONCHANGE                  DISPID_EVPROP_ONCHANGE
#define DISPID_IHTMLOPTIONBUTTONELEMENT_DISABLED                  STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLOPTIONBUTTONELEMENT_STATUS                    DISPID_INPUT+1
#define DISPID_IHTMLOPTIONBUTTONELEMENT_INDETERMINATE             DISPID_INPUT+7
#define DISPID_IHTMLOPTIONBUTTONELEMENT_FORM                      DISPID_SITE+4

//    DISPIDs for interface IHTMLInputImage

#define DISPID_IHTMLINPUTIMAGE_TYPE                               DISPID_INPUT
#define DISPID_IHTMLINPUTIMAGE_DISABLED                           STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLINPUTIMAGE_BORDER                             DISPID_INPUT+12
#define DISPID_IHTMLINPUTIMAGE_VSPACE                             DISPID_INPUT+13
#define DISPID_IHTMLINPUTIMAGE_HSPACE                             DISPID_INPUT+14
#define DISPID_IHTMLINPUTIMAGE_ALT                                DISPID_INPUT+10
#define DISPID_IHTMLINPUTIMAGE_SRC                                DISPID_INPUT+11
#define DISPID_IHTMLINPUTIMAGE_LOWSRC                             DISPID_INPUT+15
#define DISPID_IHTMLINPUTIMAGE_VRML                               DISPID_INPUT+16
#define DISPID_IHTMLINPUTIMAGE_DYNSRC                             DISPID_INPUT+17
#define DISPID_IHTMLINPUTIMAGE_READYSTATE                         DISPID_A_READYSTATE
#define DISPID_IHTMLINPUTIMAGE_COMPLETE                           DISPID_INPUT+18
#define DISPID_IHTMLINPUTIMAGE_LOOP                               DISPID_INPUT+19
#define DISPID_IHTMLINPUTIMAGE_ALIGN                              STDPROPID_XOBJ_CONTROLALIGN
#define DISPID_IHTMLINPUTIMAGE_ONLOAD                             DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLINPUTIMAGE_ONERROR                            DISPID_EVPROP_ONERROR
#define DISPID_IHTMLINPUTIMAGE_ONABORT                            DISPID_EVPROP_ONABORT
#define DISPID_IHTMLINPUTIMAGE_NAME                               STDPROPID_XOBJ_NAME
#define DISPID_IHTMLINPUTIMAGE_WIDTH                              STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLINPUTIMAGE_HEIGHT                             STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLINPUTIMAGE_START                              DISPID_INPUT+20

//    DISPIDs for event set HTMLInputTextElementEvents2

#define DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONCHANGE               DISPID_EVMETH_ONCHANGE
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONSELECT               DISPID_EVMETH_ONSELECT
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONLOAD                 DISPID_EVMETH_ONLOAD
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONERROR                DISPID_EVMETH_ONERROR
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONABORT                DISPID_EVMETH_ONABORT

//    DISPIDs for event set HTMLInputImageEvents2

#define DISPID_HTMLINPUTIMAGEEVENTS2_ONLOAD                       DISPID_EVMETH_ONLOAD
#define DISPID_HTMLINPUTIMAGEEVENTS2_ONERROR                      DISPID_EVMETH_ONERROR
#define DISPID_HTMLINPUTIMAGEEVENTS2_ONABORT                      DISPID_EVMETH_ONABORT

//    DISPIDs for event set HTMLInputTextElementEvents

#define DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONCHANGE                DISPID_EVMETH_ONCHANGE
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONSELECT                DISPID_EVMETH_ONSELECT
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONLOAD                  DISPID_EVMETH_ONLOAD
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONERROR                 DISPID_EVMETH_ONERROR
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONABORT                 DISPID_EVMETH_ONABORT

//    DISPIDs for event set HTMLInputImageEvents

#define DISPID_HTMLINPUTIMAGEEVENTS_ONLOAD                        DISPID_EVMETH_ONLOAD
#define DISPID_HTMLINPUTIMAGEEVENTS_ONERROR                       DISPID_EVMETH_ONERROR
#define DISPID_HTMLINPUTIMAGEEVENTS_ONABORT                       DISPID_EVMETH_ONABORT

//    DISPIDs for interface IHTMLTextAreaElement

#define DISPID_IHTMLTEXTAREAELEMENT_TYPE                          DISPID_INPUT
#define DISPID_IHTMLTEXTAREAELEMENT_VALUE                         DISPID_A_VALUE
#define DISPID_IHTMLTEXTAREAELEMENT_NAME                          STDPROPID_XOBJ_NAME
#define DISPID_IHTMLTEXTAREAELEMENT_STATUS                        DISPID_INPUT+1
#define DISPID_IHTMLTEXTAREAELEMENT_DISABLED                      STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLTEXTAREAELEMENT_FORM                          DISPID_SITE+4
#define DISPID_IHTMLTEXTAREAELEMENT_DEFAULTVALUE                  DISPID_DEFAULTVALUE
#define DISPID_IHTMLTEXTAREAELEMENT_SELECT                        DISPID_RICHTEXT+5
#define DISPID_IHTMLTEXTAREAELEMENT_ONCHANGE                      DISPID_EVPROP_ONCHANGE
#define DISPID_IHTMLTEXTAREAELEMENT_ONSELECT                      DISPID_EVPROP_ONSELECT
#define DISPID_IHTMLTEXTAREAELEMENT_READONLY                      DISPID_RICHTEXT+4
#define DISPID_IHTMLTEXTAREAELEMENT_ROWS                          DISPID_RICHTEXT+1
#define DISPID_IHTMLTEXTAREAELEMENT_COLS                          DISPID_RICHTEXT+2
#define DISPID_IHTMLTEXTAREAELEMENT_WRAP                          DISPID_RICHTEXT+3
#define DISPID_IHTMLTEXTAREAELEMENT_CREATETEXTRANGE               DISPID_RICHTEXT+6

//    DISPIDs for interface IHTMLButtonElement

#define DISPID_IHTMLBUTTONELEMENT_TYPE                            DISPID_INPUT
#define DISPID_IHTMLBUTTONELEMENT_VALUE                           DISPID_A_VALUE
#define DISPID_IHTMLBUTTONELEMENT_NAME                            STDPROPID_XOBJ_NAME
#define DISPID_IHTMLBUTTONELEMENT_STATUS                          DISPID_BUTTON+1
#define DISPID_IHTMLBUTTONELEMENT_DISABLED                        STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLBUTTONELEMENT_FORM                            DISPID_SITE+4
#define DISPID_IHTMLBUTTONELEMENT_CREATETEXTRANGE                 DISPID_BUTTON+2

//    DISPIDs for interface IHTMLMarqueeElement

#define DISPID_IHTMLMARQUEEELEMENT_BGCOLOR                        DISPID_BACKCOLOR
#define DISPID_IHTMLMARQUEEELEMENT_SCROLLDELAY                    DISPID_MARQUEE
#define DISPID_IHTMLMARQUEEELEMENT_DIRECTION                      DISPID_MARQUEE+1
#define DISPID_IHTMLMARQUEEELEMENT_BEHAVIOR                       DISPID_MARQUEE+2
#define DISPID_IHTMLMARQUEEELEMENT_SCROLLAMOUNT                   DISPID_MARQUEE+3
#define DISPID_IHTMLMARQUEEELEMENT_LOOP                           DISPID_MARQUEE+4
#define DISPID_IHTMLMARQUEEELEMENT_VSPACE                         DISPID_MARQUEE+5
#define DISPID_IHTMLMARQUEEELEMENT_HSPACE                         DISPID_MARQUEE+6
#define DISPID_IHTMLMARQUEEELEMENT_ONFINISH                       DISPID_EVPROP_ONFINISH
#define DISPID_IHTMLMARQUEEELEMENT_ONSTART                        DISPID_EVPROP_ONSTART
#define DISPID_IHTMLMARQUEEELEMENT_ONBOUNCE                       DISPID_EVPROP_ONBOUNCE
#define DISPID_IHTMLMARQUEEELEMENT_WIDTH                          STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLMARQUEEELEMENT_HEIGHT                         STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLMARQUEEELEMENT_TRUESPEED                      DISPID_MARQUEE+7
#define DISPID_IHTMLMARQUEEELEMENT_START                          DISPID_MARQUEE+10
#define DISPID_IHTMLMARQUEEELEMENT_STOP                           DISPID_MARQUEE+11

//    DISPIDs for event set HTMLMarqueeElementEvents2

#define DISPID_HTMLMARQUEEELEMENTEVENTS2_ONBOUNCE                 DISPID_EVMETH_ONBOUNCE
#define DISPID_HTMLMARQUEEELEMENTEVENTS2_ONFINISH                 DISPID_EVMETH_ONFINISH
#define DISPID_HTMLMARQUEEELEMENTEVENTS2_ONSTART                  DISPID_EVMETH_ONSTART

//    DISPIDs for event set HTMLMarqueeElementEvents

#define DISPID_HTMLMARQUEEELEMENTEVENTS_ONBOUNCE                  DISPID_EVMETH_ONBOUNCE
#define DISPID_HTMLMARQUEEELEMENTEVENTS_ONFINISH                  DISPID_EVMETH_ONFINISH
#define DISPID_HTMLMARQUEEELEMENTEVENTS_ONSTART                   DISPID_EVMETH_ONSTART

//    DISPIDs for interface IHTMLHtmlElement

#define DISPID_IHTMLHTMLELEMENT_VERSION                           DISPID_HEDELEMS+1

//    DISPIDs for interface IHTMLHeadElement

#define DISPID_IHTMLHEADELEMENT_PROFILE                           DISPID_HEDELEMS+1

//    DISPIDs for interface IHTMLTitleElement

#define DISPID_IHTMLTITLEELEMENT_TEXT                             DISPID_A_VALUE

//    DISPIDs for interface IHTMLMetaElement

#define DISPID_IHTMLMETAELEMENT_HTTPEQUIV                         DISPID_HEDELEMS+1
#define DISPID_IHTMLMETAELEMENT_CONTENT                           DISPID_HEDELEMS+2
#define DISPID_IHTMLMETAELEMENT_NAME                              STDPROPID_XOBJ_NAME
#define DISPID_IHTMLMETAELEMENT_URL                               DISPID_HEDELEMS+3
#define DISPID_IHTMLMETAELEMENT_CHARSET                           DISPID_HEDELEMS+13

//    DISPIDs for interface IHTMLMetaElement2

#define DISPID_IHTMLMETAELEMENT2_SCHEME                           DISPID_HEDELEMS+20

//    DISPIDs for interface IHTMLBaseElement

#define DISPID_IHTMLBASEELEMENT_HREF                              DISPID_HEDELEMS+3
#define DISPID_IHTMLBASEELEMENT_TARGET                            DISPID_HEDELEMS+4

//    DISPIDs for interface IHTMLIsIndexElement

#define DISPID_IHTMLISINDEXELEMENT_PROMPT                         DISPID_HEDELEMS+10
#define DISPID_IHTMLISINDEXELEMENT_ACTION                         DISPID_HEDELEMS+11

//    DISPIDs for interface IHTMLIsIndexElement2

#define DISPID_IHTMLISINDEXELEMENT2_FORM                          DISPID_HEDELEMS+12

//    DISPIDs for interface IHTMLNextIdElement

#define DISPID_IHTMLNEXTIDELEMENT_N                               DISPID_HEDELEMS+12

//    DISPIDs for interface IHTMLBaseFontElement

#define DISPID_IHTMLBASEFONTELEMENT_COLOR                         DISPID_A_COLOR
#define DISPID_IHTMLBASEFONTELEMENT_FACE                          DISPID_A_FONTFACE
#define DISPID_IHTMLBASEFONTELEMENT_SIZE                          DISPID_A_BASEFONT

//    DISPIDs for interface IOmHistory

#define DISPID_IOMHISTORY_LENGTH                                  DISPID_HISTORY
#define DISPID_IOMHISTORY_BACK                                    DISPID_HISTORY+1
#define DISPID_IOMHISTORY_FORWARD                                 DISPID_HISTORY+2
#define DISPID_IOMHISTORY_GO                                      DISPID_HISTORY+3

//    DISPIDs for interface IHTMLMimeTypesCollection

#define DISPID_IHTMLMIMETYPESCOLLECTION_LENGTH                    1

//    DISPIDs for interface IHTMLPluginsCollection

#define DISPID_IHTMLPLUGINSCOLLECTION_LENGTH                      1
#define DISPID_IHTMLPLUGINSCOLLECTION_REFRESH                     2

//    DISPIDs for interface IHTMLOpsProfile

#define DISPID_IHTMLOPSPROFILE_ADDREQUEST                         1
#define DISPID_IHTMLOPSPROFILE_CLEARREQUEST                       2
#define DISPID_IHTMLOPSPROFILE_DOREQUEST                          3
#define DISPID_IHTMLOPSPROFILE_GETATTRIBUTE                       4
#define DISPID_IHTMLOPSPROFILE_SETATTRIBUTE                       5
#define DISPID_IHTMLOPSPROFILE_COMMITCHANGES                      6
#define DISPID_IHTMLOPSPROFILE_ADDREADREQUEST                     7
#define DISPID_IHTMLOPSPROFILE_DOREADREQUEST                      8
#define DISPID_IHTMLOPSPROFILE_DOWRITEREQUEST                     9

//    DISPIDs for interface IOmNavigator

#define DISPID_IOMNAVIGATOR_APPCODENAME                           DISPID_NAVIGATOR
#define DISPID_IOMNAVIGATOR_APPNAME                               DISPID_NAVIGATOR+1
#define DISPID_IOMNAVIGATOR_APPVERSION                            DISPID_NAVIGATOR+2
#define DISPID_IOMNAVIGATOR_USERAGENT                             DISPID_NAVIGATOR+3
#define DISPID_IOMNAVIGATOR_JAVAENABLED                           DISPID_NAVIGATOR+4
#define DISPID_IOMNAVIGATOR_TAINTENABLED                          DISPID_NAVIGATOR+5
#define DISPID_IOMNAVIGATOR_MIMETYPES                             DISPID_NAVIGATOR+6
#define DISPID_IOMNAVIGATOR_PLUGINS                               DISPID_NAVIGATOR+7
#define DISPID_IOMNAVIGATOR_COOKIEENABLED                         DISPID_NAVIGATOR+8
#define DISPID_IOMNAVIGATOR_OPSPROFILE                            DISPID_NAVIGATOR+9
#define DISPID_IOMNAVIGATOR_TOSTRING                              DISPID_NAVIGATOR+10
#define DISPID_IOMNAVIGATOR_CPUCLASS                              DISPID_NAVIGATOR+11
#define DISPID_IOMNAVIGATOR_SYSTEMLANGUAGE                        DISPID_NAVIGATOR+12
#define DISPID_IOMNAVIGATOR_BROWSERLANGUAGE                       DISPID_NAVIGATOR+13
#define DISPID_IOMNAVIGATOR_USERLANGUAGE                          DISPID_NAVIGATOR+14
#define DISPID_IOMNAVIGATOR_PLATFORM                              DISPID_NAVIGATOR+15
#define DISPID_IOMNAVIGATOR_APPMINORVERSION                       DISPID_NAVIGATOR+16
#define DISPID_IOMNAVIGATOR_CONNECTIONSPEED                       DISPID_NAVIGATOR+17
#define DISPID_IOMNAVIGATOR_ONLINE                                DISPID_NAVIGATOR+18
#define DISPID_IOMNAVIGATOR_USERPROFILE                           DISPID_NAVIGATOR+19

//    DISPIDs for interface IHTMLLocation

#define DISPID_IHTMLLOCATION_HREF                                 DISPID_VALUE
#define DISPID_IHTMLLOCATION_PROTOCOL                             DISPID_LOCATION
#define DISPID_IHTMLLOCATION_HOST                                 DISPID_LOCATION+1
#define DISPID_IHTMLLOCATION_HOSTNAME                             DISPID_LOCATION+2
#define DISPID_IHTMLLOCATION_PORT                                 DISPID_LOCATION+3
#define DISPID_IHTMLLOCATION_PATHNAME                             DISPID_LOCATION+4
#define DISPID_IHTMLLOCATION_SEARCH                               DISPID_LOCATION+5
#define DISPID_IHTMLLOCATION_HASH                                 DISPID_LOCATION+6
#define DISPID_IHTMLLOCATION_RELOAD                               DISPID_LOCATION+7
#define DISPID_IHTMLLOCATION_REPLACE                              DISPID_LOCATION+8
#define DISPID_IHTMLLOCATION_ASSIGN                               DISPID_LOCATION+9
#define DISPID_IHTMLLOCATION_TOSTRING                             DISPID_LOCATION+10

//    DISPIDs for interface IHTMLBookmarkCollection

#define DISPID_IHTMLBOOKMARKCOLLECTION_LENGTH                     DISPID_OPTIONS_COL+1
#define DISPID_IHTMLBOOKMARKCOLLECTION__NEWENUM                   DISPID_NEWENUM
#define DISPID_IHTMLBOOKMARKCOLLECTION_ITEM                       DISPID_VALUE

//    DISPIDs for interface IHTMLDataTransfer

#define DISPID_IHTMLDATATRANSFER_SETDATA                          DISPID_DATATRANSFER+1
#define DISPID_IHTMLDATATRANSFER_GETDATA                          DISPID_DATATRANSFER+2
#define DISPID_IHTMLDATATRANSFER_CLEARDATA                        DISPID_DATATRANSFER+3
#define DISPID_IHTMLDATATRANSFER_DROPEFFECT                       DISPID_DATATRANSFER+4
#define DISPID_IHTMLDATATRANSFER_EFFECTALLOWED                    DISPID_DATATRANSFER+5

//    DISPIDs for interface IHTMLEventObj

#define DISPID_IHTMLEVENTOBJ_SRCELEMENT                           DISPID_EVENTOBJ+1
#define DISPID_IHTMLEVENTOBJ_ALTKEY                               DISPID_EVENTOBJ+2
#define DISPID_IHTMLEVENTOBJ_CTRLKEY                              DISPID_EVENTOBJ+3
#define DISPID_IHTMLEVENTOBJ_SHIFTKEY                             DISPID_EVENTOBJ+4
#define DISPID_IHTMLEVENTOBJ_RETURNVALUE                          DISPID_EVENTOBJ+7
#define DISPID_IHTMLEVENTOBJ_CANCELBUBBLE                         DISPID_EVENTOBJ+8
#define DISPID_IHTMLEVENTOBJ_FROMELEMENT                          DISPID_EVENTOBJ+9
#define DISPID_IHTMLEVENTOBJ_TOELEMENT                            DISPID_EVENTOBJ+10
#define DISPID_IHTMLEVENTOBJ_KEYCODE                              DISPID_EVENTOBJ+11
#define DISPID_IHTMLEVENTOBJ_BUTTON                               DISPID_EVENTOBJ+12
#define DISPID_IHTMLEVENTOBJ_TYPE                                 DISPID_EVENTOBJ+13
#define DISPID_IHTMLEVENTOBJ_QUALIFIER                            DISPID_EVENTOBJ+14
#define DISPID_IHTMLEVENTOBJ_REASON                               DISPID_EVENTOBJ+15
#define DISPID_IHTMLEVENTOBJ_X                                    DISPID_EVENTOBJ+5
#define DISPID_IHTMLEVENTOBJ_Y                                    DISPID_EVENTOBJ+6
#define DISPID_IHTMLEVENTOBJ_CLIENTX                              DISPID_EVENTOBJ+20
#define DISPID_IHTMLEVENTOBJ_CLIENTY                              DISPID_EVENTOBJ+21
#define DISPID_IHTMLEVENTOBJ_OFFSETX                              DISPID_EVENTOBJ+22
#define DISPID_IHTMLEVENTOBJ_OFFSETY                              DISPID_EVENTOBJ+23
#define DISPID_IHTMLEVENTOBJ_SCREENX                              DISPID_EVENTOBJ+24
#define DISPID_IHTMLEVENTOBJ_SCREENY                              DISPID_EVENTOBJ+25
#define DISPID_IHTMLEVENTOBJ_SRCFILTER                            DISPID_EVENTOBJ+26

//    DISPIDs for interface IHTMLEventObj2

#define DISPID_IHTMLEVENTOBJ2_SETATTRIBUTE                        DISPID_HTMLOBJECT+1
#define DISPID_IHTMLEVENTOBJ2_GETATTRIBUTE                        DISPID_HTMLOBJECT+2
#define DISPID_IHTMLEVENTOBJ2_REMOVEATTRIBUTE                     DISPID_HTMLOBJECT+3
#define DISPID_IHTMLEVENTOBJ2_PROPERTYNAME                        DISPID_EVENTOBJ+27
#define DISPID_IHTMLEVENTOBJ2_BOOKMARKS                           DISPID_EVENTOBJ+31
#define DISPID_IHTMLEVENTOBJ2_RECORDSET                           DISPID_EVENTOBJ+32
#define DISPID_IHTMLEVENTOBJ2_DATAFLD                             DISPID_EVENTOBJ+33
#define DISPID_IHTMLEVENTOBJ2_BOUNDELEMENTS                       DISPID_EVENTOBJ+34
#define DISPID_IHTMLEVENTOBJ2_REPEAT                              DISPID_EVENTOBJ+35
#define DISPID_IHTMLEVENTOBJ2_SRCURN                              DISPID_EVENTOBJ+36
#define DISPID_IHTMLEVENTOBJ2_SRCELEMENT                          DISPID_EVENTOBJ+1
#define DISPID_IHTMLEVENTOBJ2_ALTKEY                              DISPID_EVENTOBJ+2
#define DISPID_IHTMLEVENTOBJ2_CTRLKEY                             DISPID_EVENTOBJ+3
#define DISPID_IHTMLEVENTOBJ2_SHIFTKEY                            DISPID_EVENTOBJ+4
#define DISPID_IHTMLEVENTOBJ2_FROMELEMENT                         DISPID_EVENTOBJ+9
#define DISPID_IHTMLEVENTOBJ2_TOELEMENT                           DISPID_EVENTOBJ+10
#define DISPID_IHTMLEVENTOBJ2_BUTTON                              DISPID_EVENTOBJ+12
#define DISPID_IHTMLEVENTOBJ2_TYPE                                DISPID_EVENTOBJ+13
#define DISPID_IHTMLEVENTOBJ2_QUALIFIER                           DISPID_EVENTOBJ+14
#define DISPID_IHTMLEVENTOBJ2_REASON                              DISPID_EVENTOBJ+15
#define DISPID_IHTMLEVENTOBJ2_X                                   DISPID_EVENTOBJ+5
#define DISPID_IHTMLEVENTOBJ2_Y                                   DISPID_EVENTOBJ+6
#define DISPID_IHTMLEVENTOBJ2_CLIENTX                             DISPID_EVENTOBJ+20
#define DISPID_IHTMLEVENTOBJ2_CLIENTY                             DISPID_EVENTOBJ+21
#define DISPID_IHTMLEVENTOBJ2_OFFSETX                             DISPID_EVENTOBJ+22
#define DISPID_IHTMLEVENTOBJ2_OFFSETY                             DISPID_EVENTOBJ+23
#define DISPID_IHTMLEVENTOBJ2_SCREENX                             DISPID_EVENTOBJ+24
#define DISPID_IHTMLEVENTOBJ2_SCREENY                             DISPID_EVENTOBJ+25
#define DISPID_IHTMLEVENTOBJ2_SRCFILTER                           DISPID_EVENTOBJ+26
#define DISPID_IHTMLEVENTOBJ2_DATATRANSFER                        DISPID_EVENTOBJ+37

//    DISPIDs for interface IHTMLEventObj3

#define DISPID_IHTMLEVENTOBJ3_CONTENTOVERFLOW                     DISPID_EVENTOBJ+38
#define DISPID_IHTMLEVENTOBJ3_SHIFTLEFT                           DISPID_EVENTOBJ+39
#define DISPID_IHTMLEVENTOBJ3_ALTLEFT                             DISPID_EVENTOBJ+40
#define DISPID_IHTMLEVENTOBJ3_CTRLLEFT                            DISPID_EVENTOBJ+41
#define DISPID_IHTMLEVENTOBJ3_IMECOMPOSITIONCHANGE                DISPID_EVENTOBJ+42
#define DISPID_IHTMLEVENTOBJ3_IMENOTIFYCOMMAND                    DISPID_EVENTOBJ+43
#define DISPID_IHTMLEVENTOBJ3_IMENOTIFYDATA                       DISPID_EVENTOBJ+44
#define DISPID_IHTMLEVENTOBJ3_IMEREQUEST                          DISPID_EVENTOBJ+46
#define DISPID_IHTMLEVENTOBJ3_IMEREQUESTDATA                      DISPID_EVENTOBJ+47
#define DISPID_IHTMLEVENTOBJ3_KEYBOARDLAYOUT                      DISPID_EVENTOBJ+45
#define DISPID_IHTMLEVENTOBJ3_BEHAVIORCOOKIE                      DISPID_EVENTOBJ+48
#define DISPID_IHTMLEVENTOBJ3_BEHAVIORPART                        DISPID_EVENTOBJ+49
#define DISPID_IHTMLEVENTOBJ3_NEXTPAGE                            DISPID_EVENTOBJ+50

//    DISPIDs for interface IHTMLEventObj4

#define DISPID_IHTMLEVENTOBJ4_WHEELDELTA                          DISPID_EVENTOBJ+51

//    DISPIDs for interface IHTMLFramesCollection2

#define DISPID_IHTMLFRAMESCOLLECTION2_ITEM                        0
#define DISPID_IHTMLFRAMESCOLLECTION2_LENGTH                      1001

//    DISPIDs for interface IHTMLScreen

#define DISPID_IHTMLSCREEN_COLORDEPTH                             DISPID_SCREEN+1
#define DISPID_IHTMLSCREEN_BUFFERDEPTH                            DISPID_SCREEN+2
#define DISPID_IHTMLSCREEN_WIDTH                                  DISPID_SCREEN+3
#define DISPID_IHTMLSCREEN_HEIGHT                                 DISPID_SCREEN+4
#define DISPID_IHTMLSCREEN_UPDATEINTERVAL                         DISPID_SCREEN+5
#define DISPID_IHTMLSCREEN_AVAILHEIGHT                            DISPID_SCREEN+6
#define DISPID_IHTMLSCREEN_AVAILWIDTH                             DISPID_SCREEN+7
#define DISPID_IHTMLSCREEN_FONTSMOOTHINGENABLED                   DISPID_SCREEN+8

//    DISPIDs for interface IHTMLScreen2

#define DISPID_IHTMLSCREEN2_LOGICALXDPI                           DISPID_SCREEN+9
#define DISPID_IHTMLSCREEN2_LOGICALYDPI                           DISPID_SCREEN+10
#define DISPID_IHTMLSCREEN2_DEVICEXDPI                            DISPID_SCREEN+11
#define DISPID_IHTMLSCREEN2_DEVICEYDPI                            DISPID_SCREEN+12

//    DISPIDs for interface IHTMLWindow2

#define DISPID_IHTMLWINDOW2_FRAMES                                1100
#define DISPID_IHTMLWINDOW2_DEFAULTSTATUS                         1101
#define DISPID_IHTMLWINDOW2_STATUS                                1102
#define DISPID_IHTMLWINDOW2_SETTIMEOUT                            1172
#define DISPID_IHTMLWINDOW2_CLEARTIMEOUT                          1104
#define DISPID_IHTMLWINDOW2_ALERT                                 1105
#define DISPID_IHTMLWINDOW2_CONFIRM                               1110
#define DISPID_IHTMLWINDOW2_PROMPT                                1111
#define DISPID_IHTMLWINDOW2_IMAGE                                 1125
#define DISPID_IHTMLWINDOW2_LOCATION                              14
#define DISPID_IHTMLWINDOW2_HISTORY                               2
#define DISPID_IHTMLWINDOW2_CLOSE                                 3
#define DISPID_IHTMLWINDOW2_OPENER                                4
#define DISPID_IHTMLWINDOW2_NAVIGATOR                             5
#define DISPID_IHTMLWINDOW2_NAME                                  11
#define DISPID_IHTMLWINDOW2_PARENT                                12
#define DISPID_IHTMLWINDOW2_OPEN                                  13
#define DISPID_IHTMLWINDOW2_SELF                                  20
#define DISPID_IHTMLWINDOW2_TOP                                   21
#define DISPID_IHTMLWINDOW2_WINDOW                                22
#define DISPID_IHTMLWINDOW2_NAVIGATE                              25
#define DISPID_IHTMLWINDOW2_ONFOCUS                               DISPID_EVPROP_ONFOCUS
#define DISPID_IHTMLWINDOW2_ONBLUR                                DISPID_EVPROP_ONBLUR
#define DISPID_IHTMLWINDOW2_ONLOAD                                DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLWINDOW2_ONBEFOREUNLOAD                        DISPID_EVPROP_ONBEFOREUNLOAD
#define DISPID_IHTMLWINDOW2_ONUNLOAD                              DISPID_EVPROP_ONUNLOAD
#define DISPID_IHTMLWINDOW2_ONHELP                                DISPID_EVPROP_ONHELP
#define DISPID_IHTMLWINDOW2_ONERROR                               DISPID_EVPROP_ONERROR
#define DISPID_IHTMLWINDOW2_ONRESIZE                              DISPID_EVPROP_ONRESIZE
#define DISPID_IHTMLWINDOW2_ONSCROLL                              DISPID_EVPROP_ONSCROLL
#define DISPID_IHTMLWINDOW2_DOCUMENT                              1151
#define DISPID_IHTMLWINDOW2_EVENT                                 1152
#define DISPID_IHTMLWINDOW2__NEWENUM                              1153
#define DISPID_IHTMLWINDOW2_SHOWMODALDIALOG                       1154
#define DISPID_IHTMLWINDOW2_SHOWHELP                              1155
#define DISPID_IHTMLWINDOW2_SCREEN                                1156
#define DISPID_IHTMLWINDOW2_OPTION                                1157
#define DISPID_IHTMLWINDOW2_FOCUS                                 1158
#define DISPID_IHTMLWINDOW2_CLOSED                                23
#define DISPID_IHTMLWINDOW2_BLUR                                  1159
#define DISPID_IHTMLWINDOW2_SCROLL                                1160
#define DISPID_IHTMLWINDOW2_CLIENTINFORMATION                     1161
#define DISPID_IHTMLWINDOW2_SETINTERVAL                           1173
#define DISPID_IHTMLWINDOW2_CLEARINTERVAL                         1163
#define DISPID_IHTMLWINDOW2_OFFSCREENBUFFERING                    1164
#define DISPID_IHTMLWINDOW2_EXECSCRIPT                            1165
#define DISPID_IHTMLWINDOW2_TOSTRING                              1166
#define DISPID_IHTMLWINDOW2_SCROLLBY                              1167
#define DISPID_IHTMLWINDOW2_SCROLLTO                              1168
#define DISPID_IHTMLWINDOW2_MOVETO                                6
#define DISPID_IHTMLWINDOW2_MOVEBY                                7
#define DISPID_IHTMLWINDOW2_RESIZETO                              9
#define DISPID_IHTMLWINDOW2_RESIZEBY                              8
#define DISPID_IHTMLWINDOW2_EXTERNAL                              1169

//    DISPIDs for interface IHTMLWindow3

#define DISPID_IHTMLWINDOW3_SCREENLEFT                            1170
#define DISPID_IHTMLWINDOW3_SCREENTOP                             1171
#define DISPID_IHTMLWINDOW3_ATTACHEVENT                           DISPID_HTMLOBJECT+7
#define DISPID_IHTMLWINDOW3_DETACHEVENT                           DISPID_HTMLOBJECT+8
#define DISPID_IHTMLWINDOW3_SETTIMEOUT                            1103
#define DISPID_IHTMLWINDOW3_SETINTERVAL                           1162
#define DISPID_IHTMLWINDOW3_PRINT                                 1174
#define DISPID_IHTMLWINDOW3_ONBEFOREPRINT                         DISPID_EVPROP_ONBEFOREPRINT
#define DISPID_IHTMLWINDOW3_ONAFTERPRINT                          DISPID_EVPROP_ONAFTERPRINT
#define DISPID_IHTMLWINDOW3_CLIPBOARDDATA                         1175
#define DISPID_IHTMLWINDOW3_SHOWMODELESSDIALOG                    1176

//    DISPIDs for interface IHTMLWindow4

#define DISPID_IHTMLWINDOW4_CREATEPOPUP                           1180
#define DISPID_IHTMLWINDOW4_FRAMEELEMENT                          1181

//    DISPIDs for interface IHTMLWindow5

#define DISPID_IHTMLWINDOW5_XMLHTTPREQUEST                        1190

//    DISPIDs for event set HTMLWindowEvents2

#define DISPID_HTMLWINDOWEVENTS2_ONLOAD                           DISPID_EVMETH_ONLOAD
#define DISPID_HTMLWINDOWEVENTS2_ONUNLOAD                         DISPID_EVMETH_ONUNLOAD
#define DISPID_HTMLWINDOWEVENTS2_ONHELP                           DISPID_EVMETH_ONHELP
#define DISPID_HTMLWINDOWEVENTS2_ONFOCUS                          DISPID_EVMETH_ONFOCUS
#define DISPID_HTMLWINDOWEVENTS2_ONBLUR                           DISPID_EVMETH_ONBLUR
#define DISPID_HTMLWINDOWEVENTS2_ONERROR                          DISPID_EVMETH_ONERROR
#define DISPID_HTMLWINDOWEVENTS2_ONRESIZE                         DISPID_EVMETH_ONRESIZE
#define DISPID_HTMLWINDOWEVENTS2_ONSCROLL                         DISPID_EVMETH_ONSCROLL
#define DISPID_HTMLWINDOWEVENTS2_ONBEFOREUNLOAD                   DISPID_EVMETH_ONBEFOREUNLOAD
#define DISPID_HTMLWINDOWEVENTS2_ONBEFOREPRINT                    DISPID_EVMETH_ONBEFOREPRINT
#define DISPID_HTMLWINDOWEVENTS2_ONAFTERPRINT                     DISPID_EVMETH_ONAFTERPRINT

//    DISPIDs for event set HTMLWindowEvents

#define DISPID_HTMLWINDOWEVENTS_ONLOAD                            DISPID_EVMETH_ONLOAD
#define DISPID_HTMLWINDOWEVENTS_ONUNLOAD                          DISPID_EVMETH_ONUNLOAD
#define DISPID_HTMLWINDOWEVENTS_ONHELP                            DISPID_EVMETH_ONHELP
#define DISPID_HTMLWINDOWEVENTS_ONFOCUS                           DISPID_EVMETH_ONFOCUS
#define DISPID_HTMLWINDOWEVENTS_ONBLUR                            DISPID_EVMETH_ONBLUR
#define DISPID_HTMLWINDOWEVENTS_ONERROR                           DISPID_EVMETH_ONERROR
#define DISPID_HTMLWINDOWEVENTS_ONRESIZE                          DISPID_EVMETH_ONRESIZE
#define DISPID_HTMLWINDOWEVENTS_ONSCROLL                          DISPID_EVMETH_ONSCROLL
#define DISPID_HTMLWINDOWEVENTS_ONBEFOREUNLOAD                    DISPID_EVMETH_ONBEFOREUNLOAD
#define DISPID_HTMLWINDOWEVENTS_ONBEFOREPRINT                     DISPID_EVMETH_ONBEFOREPRINT
#define DISPID_HTMLWINDOWEVENTS_ONAFTERPRINT                      DISPID_EVMETH_ONAFTERPRINT

//    DISPIDs for interface IHTMLDocument

#define DISPID_IHTMLDOCUMENT_SCRIPT                               DISPID_OMDOCUMENT+1

//    DISPIDs for interface IHTMLDocument2

#define DISPID_IHTMLDOCUMENT2_ALL                                 DISPID_OMDOCUMENT+3
#define DISPID_IHTMLDOCUMENT2_BODY                                DISPID_OMDOCUMENT+4
#define DISPID_IHTMLDOCUMENT2_ACTIVEELEMENT                       DISPID_OMDOCUMENT+5
#define DISPID_IHTMLDOCUMENT2_IMAGES                              DISPID_OMDOCUMENT+11
#define DISPID_IHTMLDOCUMENT2_APPLETS                             DISPID_OMDOCUMENT+8
#define DISPID_IHTMLDOCUMENT2_LINKS                               DISPID_OMDOCUMENT+9
#define DISPID_IHTMLDOCUMENT2_FORMS                               DISPID_OMDOCUMENT+10
#define DISPID_IHTMLDOCUMENT2_ANCHORS                             DISPID_OMDOCUMENT+7
#define DISPID_IHTMLDOCUMENT2_TITLE                               DISPID_OMDOCUMENT+12
#define DISPID_IHTMLDOCUMENT2_SCRIPTS                             DISPID_OMDOCUMENT+13
#define DISPID_IHTMLDOCUMENT2_DESIGNMODE                          DISPID_OMDOCUMENT+14
#define DISPID_IHTMLDOCUMENT2_SELECTION                           DISPID_OMDOCUMENT+17
#define DISPID_IHTMLDOCUMENT2_READYSTATE                          DISPID_OMDOCUMENT+18
#define DISPID_IHTMLDOCUMENT2_FRAMES                              DISPID_OMDOCUMENT+19
#define DISPID_IHTMLDOCUMENT2_EMBEDS                              DISPID_OMDOCUMENT+15
#define DISPID_IHTMLDOCUMENT2_PLUGINS                             DISPID_OMDOCUMENT+21
#define DISPID_IHTMLDOCUMENT2_ALINKCOLOR                          DISPID_OMDOCUMENT+22
#define DISPID_IHTMLDOCUMENT2_BGCOLOR                             DISPID_BACKCOLOR
#define DISPID_IHTMLDOCUMENT2_FGCOLOR                             DISPID_A_COLOR
#define DISPID_IHTMLDOCUMENT2_LINKCOLOR                           DISPID_OMDOCUMENT+24
#define DISPID_IHTMLDOCUMENT2_VLINKCOLOR                          DISPID_OMDOCUMENT+23
#define DISPID_IHTMLDOCUMENT2_REFERRER                            DISPID_OMDOCUMENT+27
#define DISPID_IHTMLDOCUMENT2_LOCATION                            DISPID_OMDOCUMENT+26
#define DISPID_IHTMLDOCUMENT2_LASTMODIFIED                        DISPID_OMDOCUMENT+28
#define DISPID_IHTMLDOCUMENT2_URL                                 DISPID_OMDOCUMENT+25
#define DISPID_IHTMLDOCUMENT2_DOMAIN                              DISPID_OMDOCUMENT+29
#define DISPID_IHTMLDOCUMENT2_COOKIE                              DISPID_OMDOCUMENT+30
#define DISPID_IHTMLDOCUMENT2_EXPANDO                             DISPID_OMDOCUMENT+31
#define DISPID_IHTMLDOCUMENT2_CHARSET                             DISPID_OMDOCUMENT+32
#define DISPID_IHTMLDOCUMENT2_DEFAULTCHARSET                      DISPID_OMDOCUMENT+33
#define DISPID_IHTMLDOCUMENT2_MIMETYPE                            DISPID_OMDOCUMENT+41
#define DISPID_IHTMLDOCUMENT2_FILESIZE                            DISPID_OMDOCUMENT+42
#define DISPID_IHTMLDOCUMENT2_FILECREATEDDATE                     DISPID_OMDOCUMENT+43
#define DISPID_IHTMLDOCUMENT2_FILEMODIFIEDDATE                    DISPID_OMDOCUMENT+44
#define DISPID_IHTMLDOCUMENT2_FILEUPDATEDDATE                     DISPID_OMDOCUMENT+45
#define DISPID_IHTMLDOCUMENT2_SECURITY                            DISPID_OMDOCUMENT+46
#define DISPID_IHTMLDOCUMENT2_PROTOCOL                            DISPID_OMDOCUMENT+47
#define DISPID_IHTMLDOCUMENT2_NAMEPROP                            DISPID_OMDOCUMENT+48
#define DISPID_IHTMLDOCUMENT2_WRITE                               DISPID_OMDOCUMENT+54
#define DISPID_IHTMLDOCUMENT2_WRITELN                             DISPID_OMDOCUMENT+55
#define DISPID_IHTMLDOCUMENT2_OPEN                                DISPID_OMDOCUMENT+56
#define DISPID_IHTMLDOCUMENT2_CLOSE                               DISPID_OMDOCUMENT+57
#define DISPID_IHTMLDOCUMENT2_CLEAR                               DISPID_OMDOCUMENT+58
#define DISPID_IHTMLDOCUMENT2_QUERYCOMMANDSUPPORTED               DISPID_OMDOCUMENT+59
#define DISPID_IHTMLDOCUMENT2_QUERYCOMMANDENABLED                 DISPID_OMDOCUMENT+60
#define DISPID_IHTMLDOCUMENT2_QUERYCOMMANDSTATE                   DISPID_OMDOCUMENT+61
#define DISPID_IHTMLDOCUMENT2_QUERYCOMMANDINDETERM                DISPID_OMDOCUMENT+62
#define DISPID_IHTMLDOCUMENT2_QUERYCOMMANDTEXT                    DISPID_OMDOCUMENT+63
#define DISPID_IHTMLDOCUMENT2_QUERYCOMMANDVALUE                   DISPID_OMDOCUMENT+64
#define DISPID_IHTMLDOCUMENT2_EXECCOMMAND                         DISPID_OMDOCUMENT+65
#define DISPID_IHTMLDOCUMENT2_EXECCOMMANDSHOWHELP                 DISPID_OMDOCUMENT+66
#define DISPID_IHTMLDOCUMENT2_CREATEELEMENT                       DISPID_OMDOCUMENT+67
#define DISPID_IHTMLDOCUMENT2_ONHELP                              DISPID_EVPROP_ONHELP
#define DISPID_IHTMLDOCUMENT2_ONCLICK                             DISPID_EVPROP_ONCLICK
#define DISPID_IHTMLDOCUMENT2_ONDBLCLICK                          DISPID_EVPROP_ONDBLCLICK
#define DISPID_IHTMLDOCUMENT2_ONKEYUP                             DISPID_EVPROP_ONKEYUP
#define DISPID_IHTMLDOCUMENT2_ONKEYDOWN                           DISPID_EVPROP_ONKEYDOWN
#define DISPID_IHTMLDOCUMENT2_ONKEYPRESS                          DISPID_EVPROP_ONKEYPRESS
#define DISPID_IHTMLDOCUMENT2_ONMOUSEUP                           DISPID_EVPROP_ONMOUSEUP
#define DISPID_IHTMLDOCUMENT2_ONMOUSEDOWN                         DISPID_EVPROP_ONMOUSEDOWN
#define DISPID_IHTMLDOCUMENT2_ONMOUSEMOVE                         DISPID_EVPROP_ONMOUSEMOVE
#define DISPID_IHTMLDOCUMENT2_ONMOUSEOUT                          DISPID_EVPROP_ONMOUSEOUT
#define DISPID_IHTMLDOCUMENT2_ONMOUSEOVER                         DISPID_EVPROP_ONMOUSEOVER
#define DISPID_IHTMLDOCUMENT2_ONREADYSTATECHANGE                  DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLDOCUMENT2_ONAFTERUPDATE                       DISPID_EVPROP_ONAFTERUPDATE
#define DISPID_IHTMLDOCUMENT2_ONROWEXIT                           DISPID_EVPROP_ONROWEXIT
#define DISPID_IHTMLDOCUMENT2_ONROWENTER                          DISPID_EVPROP_ONROWENTER
#define DISPID_IHTMLDOCUMENT2_ONDRAGSTART                         DISPID_EVPROP_ONDRAGSTART
#define DISPID_IHTMLDOCUMENT2_ONSELECTSTART                       DISPID_EVPROP_ONSELECTSTART
#define DISPID_IHTMLDOCUMENT2_ELEMENTFROMPOINT                    DISPID_OMDOCUMENT+68
#define DISPID_IHTMLDOCUMENT2_PARENTWINDOW                        DISPID_OMDOCUMENT+34
#define DISPID_IHTMLDOCUMENT2_STYLESHEETS                         DISPID_OMDOCUMENT+69
#define DISPID_IHTMLDOCUMENT2_ONBEFOREUPDATE                      DISPID_EVPROP_ONBEFOREUPDATE
#define DISPID_IHTMLDOCUMENT2_ONERRORUPDATE                       DISPID_EVPROP_ONERRORUPDATE
#define DISPID_IHTMLDOCUMENT2_TOSTRING                            DISPID_OMDOCUMENT+70
#define DISPID_IHTMLDOCUMENT2_CREATESTYLESHEET                    DISPID_OMDOCUMENT+71

//    DISPIDs for interface IHTMLDocument3

#define DISPID_IHTMLDOCUMENT3_RELEASECAPTURE                      DISPID_OMDOCUMENT+72
#define DISPID_IHTMLDOCUMENT3_RECALC                              DISPID_OMDOCUMENT+73
#define DISPID_IHTMLDOCUMENT3_CREATETEXTNODE                      DISPID_OMDOCUMENT+74
#define DISPID_IHTMLDOCUMENT3_DOCUMENTELEMENT                     DISPID_OMDOCUMENT+75
#define DISPID_IHTMLDOCUMENT3_UNIQUEID                            DISPID_OMDOCUMENT+77
#define DISPID_IHTMLDOCUMENT3_ATTACHEVENT                         DISPID_HTMLOBJECT+7
#define DISPID_IHTMLDOCUMENT3_DETACHEVENT                         DISPID_HTMLOBJECT+8
#define DISPID_IHTMLDOCUMENT3_ONROWSDELETE                        DISPID_EVPROP_ONROWSDELETE
#define DISPID_IHTMLDOCUMENT3_ONROWSINSERTED                      DISPID_EVPROP_ONROWSINSERTED
#define DISPID_IHTMLDOCUMENT3_ONCELLCHANGE                        DISPID_EVPROP_ONCELLCHANGE
#define DISPID_IHTMLDOCUMENT3_ONDATASETCHANGED                    DISPID_EVPROP_ONDATASETCHANGED
#define DISPID_IHTMLDOCUMENT3_ONDATAAVAILABLE                     DISPID_EVPROP_ONDATAAVAILABLE
#define DISPID_IHTMLDOCUMENT3_ONDATASETCOMPLETE                   DISPID_EVPROP_ONDATASETCOMPLETE
#define DISPID_IHTMLDOCUMENT3_ONPROPERTYCHANGE                    DISPID_EVPROP_ONPROPERTYCHANGE
#define DISPID_IHTMLDOCUMENT3_DIR                                 DISPID_A_DIR
#define DISPID_IHTMLDOCUMENT3_ONCONTEXTMENU                       DISPID_EVPROP_ONCONTEXTMENU
#define DISPID_IHTMLDOCUMENT3_ONSTOP                              DISPID_EVPROP_ONSTOP
#define DISPID_IHTMLDOCUMENT3_CREATEDOCUMENTFRAGMENT              DISPID_OMDOCUMENT+76
#define DISPID_IHTMLDOCUMENT3_PARENTDOCUMENT                      DISPID_OMDOCUMENT+78
#define DISPID_IHTMLDOCUMENT3_ENABLEDOWNLOAD                      DISPID_OMDOCUMENT+79
#define DISPID_IHTMLDOCUMENT3_BASEURL                             DISPID_OMDOCUMENT+80
#define DISPID_IHTMLDOCUMENT3_CHILDNODES                          DISPID_ELEMENT+49
#define DISPID_IHTMLDOCUMENT3_INHERITSTYLESHEETS                  DISPID_OMDOCUMENT+82
#define DISPID_IHTMLDOCUMENT3_ONBEFOREEDITFOCUS                   DISPID_EVPROP_ONBEFOREEDITFOCUS
#define DISPID_IHTMLDOCUMENT3_GETELEMENTSBYNAME                   DISPID_OMDOCUMENT+86
#define DISPID_IHTMLDOCUMENT3_GETELEMENTBYID                      DISPID_OMDOCUMENT+88
#define DISPID_IHTMLDOCUMENT3_GETELEMENTSBYTAGNAME                DISPID_OMDOCUMENT+87

//    DISPIDs for interface IHTMLDocument4

#define DISPID_IHTMLDOCUMENT4_FOCUS                               DISPID_OMDOCUMENT+89
#define DISPID_IHTMLDOCUMENT4_HASFOCUS                            DISPID_OMDOCUMENT+90
#define DISPID_IHTMLDOCUMENT4_ONSELECTIONCHANGE                   DISPID_EVPROP_ONSELECTIONCHANGE
#define DISPID_IHTMLDOCUMENT4_NAMESPACES                          DISPID_OMDOCUMENT+91
#define DISPID_IHTMLDOCUMENT4_CREATEDOCUMENTFROMURL               DISPID_OMDOCUMENT+92
#define DISPID_IHTMLDOCUMENT4_MEDIA                               DISPID_OMDOCUMENT+93
#define DISPID_IHTMLDOCUMENT4_CREATEEVENTOBJECT                   DISPID_OMDOCUMENT+94
#define DISPID_IHTMLDOCUMENT4_FIREEVENT                           DISPID_OMDOCUMENT+95
#define DISPID_IHTMLDOCUMENT4_CREATERENDERSTYLE                   DISPID_OMDOCUMENT+96
#define DISPID_IHTMLDOCUMENT4_ONCONTROLSELECT                     DISPID_EVPROP_ONCONTROLSELECT
#define DISPID_IHTMLDOCUMENT4_URLUNENCODED                        DISPID_OMDOCUMENT+97

//    DISPIDs for interface IHTMLDocument5

#define DISPID_IHTMLDOCUMENT5_ONMOUSEWHEEL                        DISPID_EVPROP_ONMOUSEWHEEL
#define DISPID_IHTMLDOCUMENT5_DOCTYPE                             DISPID_OMDOCUMENT+98
#define DISPID_IHTMLDOCUMENT5_IMPLEMENTATION                      DISPID_OMDOCUMENT+99
#define DISPID_IHTMLDOCUMENT5_CREATEATTRIBUTE                     DISPID_OMDOCUMENT+100
#define DISPID_IHTMLDOCUMENT5_CREATECOMMENT                       DISPID_OMDOCUMENT+101
#define DISPID_IHTMLDOCUMENT5_ONFOCUSIN                           DISPID_EVPROP_ONFOCUSIN
#define DISPID_IHTMLDOCUMENT5_ONFOCUSOUT                          DISPID_EVPROP_ONFOCUSOUT
#define DISPID_IHTMLDOCUMENT5_ONACTIVATE                          DISPID_EVPROP_ONACTIVATE
#define DISPID_IHTMLDOCUMENT5_ONDEACTIVATE                        DISPID_EVPROP_ONDEACTIVATE
#define DISPID_IHTMLDOCUMENT5_ONBEFOREACTIVATE                    DISPID_EVPROP_ONBEFOREACTIVATE
#define DISPID_IHTMLDOCUMENT5_ONBEFOREDEACTIVATE                  DISPID_EVPROP_ONBEFOREDEACTIVATE
#define DISPID_IHTMLDOCUMENT5_COMPATMODE                          DISPID_OMDOCUMENT+102

//    DISPIDs for event set HTMLDocumentEvents2

#define DISPID_HTMLDOCUMENTEVENTS2_ONHELP                         DISPID_EVMETH_ONHELP
#define DISPID_HTMLDOCUMENTEVENTS2_ONCLICK                        DISPID_EVMETH_ONCLICK
#define DISPID_HTMLDOCUMENTEVENTS2_ONDBLCLICK                     DISPID_EVMETH_ONDBLCLICK
#define DISPID_HTMLDOCUMENTEVENTS2_ONKEYDOWN                      DISPID_EVMETH_ONKEYDOWN
#define DISPID_HTMLDOCUMENTEVENTS2_ONKEYUP                        DISPID_EVMETH_ONKEYUP
#define DISPID_HTMLDOCUMENTEVENTS2_ONKEYPRESS                     DISPID_EVMETH_ONKEYPRESS
#define DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEDOWN                    DISPID_EVMETH_ONMOUSEDOWN
#define DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEMOVE                    DISPID_EVMETH_ONMOUSEMOVE
#define DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEUP                      DISPID_EVMETH_ONMOUSEUP
#define DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEOUT                     DISPID_EVMETH_ONMOUSEOUT
#define DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEOVER                    DISPID_EVMETH_ONMOUSEOVER
#define DISPID_HTMLDOCUMENTEVENTS2_ONREADYSTATECHANGE             DISPID_EVMETH_ONREADYSTATECHANGE
#define DISPID_HTMLDOCUMENTEVENTS2_ONBEFOREUPDATE                 DISPID_EVMETH_ONBEFOREUPDATE
#define DISPID_HTMLDOCUMENTEVENTS2_ONAFTERUPDATE                  DISPID_EVMETH_ONAFTERUPDATE
#define DISPID_HTMLDOCUMENTEVENTS2_ONROWEXIT                      DISPID_EVMETH_ONROWEXIT
#define DISPID_HTMLDOCUMENTEVENTS2_ONROWENTER                     DISPID_EVMETH_ONROWENTER
#define DISPID_HTMLDOCUMENTEVENTS2_ONDRAGSTART                    DISPID_EVMETH_ONDRAGSTART
#define DISPID_HTMLDOCUMENTEVENTS2_ONSELECTSTART                  DISPID_EVMETH_ONSELECTSTART
#define DISPID_HTMLDOCUMENTEVENTS2_ONERRORUPDATE                  DISPID_EVMETH_ONERRORUPDATE
#define DISPID_HTMLDOCUMENTEVENTS2_ONCONTEXTMENU                  DISPID_EVMETH_ONCONTEXTMENU
#define DISPID_HTMLDOCUMENTEVENTS2_ONSTOP                         DISPID_EVMETH_ONSTOP
#define DISPID_HTMLDOCUMENTEVENTS2_ONROWSDELETE                   DISPID_EVMETH_ONROWSDELETE
#define DISPID_HTMLDOCUMENTEVENTS2_ONROWSINSERTED                 DISPID_EVMETH_ONROWSINSERTED
#define DISPID_HTMLDOCUMENTEVENTS2_ONCELLCHANGE                   DISPID_EVMETH_ONCELLCHANGE
#define DISPID_HTMLDOCUMENTEVENTS2_ONPROPERTYCHANGE               DISPID_EVMETH_ONPROPERTYCHANGE
#define DISPID_HTMLDOCUMENTEVENTS2_ONDATASETCHANGED               DISPID_EVMETH_ONDATASETCHANGED
#define DISPID_HTMLDOCUMENTEVENTS2_ONDATAAVAILABLE                DISPID_EVMETH_ONDATAAVAILABLE
#define DISPID_HTMLDOCUMENTEVENTS2_ONDATASETCOMPLETE              DISPID_EVMETH_ONDATASETCOMPLETE
#define DISPID_HTMLDOCUMENTEVENTS2_ONBEFOREEDITFOCUS              DISPID_EVMETH_ONBEFOREEDITFOCUS
#define DISPID_HTMLDOCUMENTEVENTS2_ONSELECTIONCHANGE              DISPID_EVMETH_ONSELECTIONCHANGE
#define DISPID_HTMLDOCUMENTEVENTS2_ONCONTROLSELECT                DISPID_EVMETH_ONCONTROLSELECT
#define DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEWHEEL                   DISPID_EVMETH_ONMOUSEWHEEL
#define DISPID_HTMLDOCUMENTEVENTS2_ONFOCUSIN                      DISPID_EVMETH_ONFOCUSIN
#define DISPID_HTMLDOCUMENTEVENTS2_ONFOCUSOUT                     DISPID_EVMETH_ONFOCUSOUT
#define DISPID_HTMLDOCUMENTEVENTS2_ONACTIVATE                     DISPID_EVMETH_ONACTIVATE
#define DISPID_HTMLDOCUMENTEVENTS2_ONDEACTIVATE                   DISPID_EVMETH_ONDEACTIVATE
#define DISPID_HTMLDOCUMENTEVENTS2_ONBEFOREACTIVATE               DISPID_EVMETH_ONBEFOREACTIVATE
#define DISPID_HTMLDOCUMENTEVENTS2_ONBEFOREDEACTIVATE             DISPID_EVMETH_ONBEFOREDEACTIVATE

//    DISPIDs for event set HTMLDocumentEvents

#define DISPID_HTMLDOCUMENTEVENTS_ONHELP                          DISPID_EVMETH_ONHELP
#define DISPID_HTMLDOCUMENTEVENTS_ONCLICK                         DISPID_EVMETH_ONCLICK
#define DISPID_HTMLDOCUMENTEVENTS_ONDBLCLICK                      DISPID_EVMETH_ONDBLCLICK
#define DISPID_HTMLDOCUMENTEVENTS_ONKEYDOWN                       DISPID_EVMETH_ONKEYDOWN
#define DISPID_HTMLDOCUMENTEVENTS_ONKEYUP                         DISPID_EVMETH_ONKEYUP
#define DISPID_HTMLDOCUMENTEVENTS_ONKEYPRESS                      DISPID_EVMETH_ONKEYPRESS
#define DISPID_HTMLDOCUMENTEVENTS_ONMOUSEDOWN                     DISPID_EVMETH_ONMOUSEDOWN
#define DISPID_HTMLDOCUMENTEVENTS_ONMOUSEMOVE                     DISPID_EVMETH_ONMOUSEMOVE
#define DISPID_HTMLDOCUMENTEVENTS_ONMOUSEUP                       DISPID_EVMETH_ONMOUSEUP
#define DISPID_HTMLDOCUMENTEVENTS_ONMOUSEOUT                      DISPID_EVMETH_ONMOUSEOUT
#define DISPID_HTMLDOCUMENTEVENTS_ONMOUSEOVER                     DISPID_EVMETH_ONMOUSEOVER
#define DISPID_HTMLDOCUMENTEVENTS_ONREADYSTATECHANGE              DISPID_EVMETH_ONREADYSTATECHANGE
#define DISPID_HTMLDOCUMENTEVENTS_ONBEFOREUPDATE                  DISPID_EVMETH_ONBEFOREUPDATE
#define DISPID_HTMLDOCUMENTEVENTS_ONAFTERUPDATE                   DISPID_EVMETH_ONAFTERUPDATE
#define DISPID_HTMLDOCUMENTEVENTS_ONROWEXIT                       DISPID_EVMETH_ONROWEXIT
#define DISPID_HTMLDOCUMENTEVENTS_ONROWENTER                      DISPID_EVMETH_ONROWENTER
#define DISPID_HTMLDOCUMENTEVENTS_ONDRAGSTART                     DISPID_EVMETH_ONDRAGSTART
#define DISPID_HTMLDOCUMENTEVENTS_ONSELECTSTART                   DISPID_EVMETH_ONSELECTSTART
#define DISPID_HTMLDOCUMENTEVENTS_ONERRORUPDATE                   DISPID_EVMETH_ONERRORUPDATE
#define DISPID_HTMLDOCUMENTEVENTS_ONCONTEXTMENU                   DISPID_EVMETH_ONCONTEXTMENU
#define DISPID_HTMLDOCUMENTEVENTS_ONSTOP                          DISPID_EVMETH_ONSTOP
#define DISPID_HTMLDOCUMENTEVENTS_ONROWSDELETE                    DISPID_EVMETH_ONROWSDELETE
#define DISPID_HTMLDOCUMENTEVENTS_ONROWSINSERTED                  DISPID_EVMETH_ONROWSINSERTED
#define DISPID_HTMLDOCUMENTEVENTS_ONCELLCHANGE                    DISPID_EVMETH_ONCELLCHANGE
#define DISPID_HTMLDOCUMENTEVENTS_ONPROPERTYCHANGE                DISPID_EVMETH_ONPROPERTYCHANGE
#define DISPID_HTMLDOCUMENTEVENTS_ONDATASETCHANGED                DISPID_EVMETH_ONDATASETCHANGED
#define DISPID_HTMLDOCUMENTEVENTS_ONDATAAVAILABLE                 DISPID_EVMETH_ONDATAAVAILABLE
#define DISPID_HTMLDOCUMENTEVENTS_ONDATASETCOMPLETE               DISPID_EVMETH_ONDATASETCOMPLETE
#define DISPID_HTMLDOCUMENTEVENTS_ONBEFOREEDITFOCUS               DISPID_EVMETH_ONBEFOREEDITFOCUS
#define DISPID_HTMLDOCUMENTEVENTS_ONSELECTIONCHANGE               DISPID_EVMETH_ONSELECTIONCHANGE
#define DISPID_HTMLDOCUMENTEVENTS_ONCONTROLSELECT                 DISPID_EVMETH_ONCONTROLSELECT
#define DISPID_HTMLDOCUMENTEVENTS_ONMOUSEWHEEL                    DISPID_EVMETH_ONMOUSEWHEEL
#define DISPID_HTMLDOCUMENTEVENTS_ONFOCUSIN                       DISPID_EVMETH_ONFOCUSIN
#define DISPID_HTMLDOCUMENTEVENTS_ONFOCUSOUT                      DISPID_EVMETH_ONFOCUSOUT
#define DISPID_HTMLDOCUMENTEVENTS_ONACTIVATE                      DISPID_EVMETH_ONACTIVATE
#define DISPID_HTMLDOCUMENTEVENTS_ONDEACTIVATE                    DISPID_EVMETH_ONDEACTIVATE
#define DISPID_HTMLDOCUMENTEVENTS_ONBEFOREACTIVATE                DISPID_EVMETH_ONBEFOREACTIVATE
#define DISPID_HTMLDOCUMENTEVENTS_ONBEFOREDEACTIVATE              DISPID_EVMETH_ONBEFOREDEACTIVATE

//    DISPIDs for interface IWebBridge

#define DISPID_IWEBBRIDGE_URL                                     1
#define DISPID_IWEBBRIDGE_SCROLLBAR                               2
#define DISPID_IWEBBRIDGE_EMBED                                   3
#define DISPID_IWEBBRIDGE_EVENT                                   DISPID_IHTMLWINDOW2_EVENT
#define DISPID_IWEBBRIDGE_READYSTATE                              DISPID_READYSTATE
#define DISPID_IWEBBRIDGE_ABOUTBOX                                DISPID_ABOUTBOX

//    DISPIDs for interface IWBScriptControl

#define DISPID_IWBSCRIPTCONTROL_RAISEEVENT                        1
#define DISPID_IWBSCRIPTCONTROL_BUBBLEEVENT                       2
#define DISPID_IWBSCRIPTCONTROL_SETCONTEXTMENU                    3
#define DISPID_IWBSCRIPTCONTROL_SELECTABLECONTENT                 4
#define DISPID_IWBSCRIPTCONTROL_FROZEN                            5
#define DISPID_IWBSCRIPTCONTROL_SCROLLBAR                         7
#define DISPID_IWBSCRIPTCONTROL_VERSION                           8
#define DISPID_IWBSCRIPTCONTROL_VISIBILITY                        9
#define DISPID_IWBSCRIPTCONTROL_ONVISIBILITYCHANGE                10

//    DISPIDs for event set DWebBridgeEvents

#define DISPID_DWEBBRIDGEEVENTS_ONSCRIPTLETEVENT                  1
#define DISPID_DWEBBRIDGEEVENTS_ONREADYSTATECHANGE                DISPID_HTMLDOCUMENTEVENTS_ONREADYSTATECHANGE
#define DISPID_DWEBBRIDGEEVENTS_ONCLICK                           DISPID_HTMLDOCUMENTEVENTS_ONCLICK
#define DISPID_DWEBBRIDGEEVENTS_ONDBLCLICK                        DISPID_HTMLDOCUMENTEVENTS_ONDBLCLICK
#define DISPID_DWEBBRIDGEEVENTS_ONKEYDOWN                         DISPID_HTMLDOCUMENTEVENTS_ONKEYDOWN
#define DISPID_DWEBBRIDGEEVENTS_ONKEYUP                           DISPID_HTMLDOCUMENTEVENTS_ONKEYUP
#define DISPID_DWEBBRIDGEEVENTS_ONKEYPRESS                        DISPID_HTMLDOCUMENTEVENTS_ONKEYPRESS
#define DISPID_DWEBBRIDGEEVENTS_ONMOUSEDOWN                       DISPID_HTMLDOCUMENTEVENTS_ONMOUSEDOWN
#define DISPID_DWEBBRIDGEEVENTS_ONMOUSEMOVE                       DISPID_HTMLDOCUMENTEVENTS_ONMOUSEMOVE
#define DISPID_DWEBBRIDGEEVENTS_ONMOUSEUP                         DISPID_HTMLDOCUMENTEVENTS_ONMOUSEUP

//    DISPIDs for interface IHTMLEmbedElement

#define DISPID_IHTMLEMBEDELEMENT_HIDDEN                           DISPID_OBJECT+10
#define DISPID_IHTMLEMBEDELEMENT_PALETTE                          DISPID_OBJECT+4
#define DISPID_IHTMLEMBEDELEMENT_PLUGINSPAGE                      DISPID_OBJECT+5
#define DISPID_IHTMLEMBEDELEMENT_SRC                              DISPID_OBJECT+6
#define DISPID_IHTMLEMBEDELEMENT_UNITS                            DISPID_OBJECT+8
#define DISPID_IHTMLEMBEDELEMENT_NAME                             STDPROPID_XOBJ_NAME
#define DISPID_IHTMLEMBEDELEMENT_WIDTH                            STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLEMBEDELEMENT_HEIGHT                           STDPROPID_XOBJ_HEIGHT

//    DISPIDs for interface IHTMLAreasCollection

#define DISPID_IHTMLAREASCOLLECTION_LENGTH                        DISPID_COLLECTION
#define DISPID_IHTMLAREASCOLLECTION__NEWENUM                      DISPID_NEWENUM
#define DISPID_IHTMLAREASCOLLECTION_ITEM                          DISPID_VALUE
#define DISPID_IHTMLAREASCOLLECTION_TAGS                          DISPID_COLLECTION+2
#define DISPID_IHTMLAREASCOLLECTION_ADD                           DISPID_COLLECTION+3
#define DISPID_IHTMLAREASCOLLECTION_REMOVE                        DISPID_COLLECTION+4

//    DISPIDs for interface IHTMLAreasCollection2

#define DISPID_IHTMLAREASCOLLECTION2_URNS                         DISPID_COLLECTION+5

//    DISPIDs for interface IHTMLAreasCollection3

#define DISPID_IHTMLAREASCOLLECTION3_NAMEDITEM                    DISPID_COLLECTION+6

//    DISPIDs for interface IHTMLMapElement

#define DISPID_IHTMLMAPELEMENT_AREAS                              DISPID_MAP+2
#define DISPID_IHTMLMAPELEMENT_NAME                               STDPROPID_XOBJ_NAME

//    DISPIDs for interface IHTMLAreaElement

#define DISPID_IHTMLAREAELEMENT_SHAPE                             DISPID_AREA+1
#define DISPID_IHTMLAREAELEMENT_COORDS                            DISPID_AREA+2
#define DISPID_IHTMLAREAELEMENT_HREF                              DISPID_VALUE
#define DISPID_IHTMLAREAELEMENT_TARGET                            DISPID_AREA+4
#define DISPID_IHTMLAREAELEMENT_ALT                               DISPID_AREA+5
#define DISPID_IHTMLAREAELEMENT_NOHREF                            DISPID_AREA+6
#define DISPID_IHTMLAREAELEMENT_HOST                              DISPID_AREA+7
#define DISPID_IHTMLAREAELEMENT_HOSTNAME                          DISPID_AREA+8
#define DISPID_IHTMLAREAELEMENT_PATHNAME                          DISPID_AREA+9
#define DISPID_IHTMLAREAELEMENT_PORT                              DISPID_AREA+10
#define DISPID_IHTMLAREAELEMENT_PROTOCOL                          DISPID_AREA+11
#define DISPID_IHTMLAREAELEMENT_SEARCH                            DISPID_AREA+12
#define DISPID_IHTMLAREAELEMENT_HASH                              DISPID_AREA+13
#define DISPID_IHTMLAREAELEMENT_ONBLUR                            DISPID_EVPROP_ONBLUR
#define DISPID_IHTMLAREAELEMENT_ONFOCUS                           DISPID_EVPROP_ONFOCUS
#define DISPID_IHTMLAREAELEMENT_TABINDEX                          STDPROPID_XOBJ_TABINDEX
#define DISPID_IHTMLAREAELEMENT_FOCUS                             DISPID_SITE+0
#define DISPID_IHTMLAREAELEMENT_BLUR                              DISPID_SITE+2

//    DISPIDs for interface IHTMLTableCaption

#define DISPID_IHTMLTABLECAPTION_ALIGN                            STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLTABLECAPTION_VALIGN                           DISPID_A_TABLEVALIGN

//    DISPIDs for interface IHTMLCommentElement

#define DISPID_IHTMLCOMMENTELEMENT_TEXT                           DISPID_COMMENTPDL+1
#define DISPID_IHTMLCOMMENTELEMENT_ATOMIC                         DISPID_COMMENTPDL+2

//    DISPIDs for interface IHTMLCommentElement2

#define DISPID_IHTMLCOMMENTELEMENT2_DATA                          DISPID_COMMENTPDL+3
#define DISPID_IHTMLCOMMENTELEMENT2_LENGTH                        DISPID_COMMENTPDL+4
#define DISPID_IHTMLCOMMENTELEMENT2_SUBSTRINGDATA                 DISPID_COMMENTPDL+5
#define DISPID_IHTMLCOMMENTELEMENT2_APPENDDATA                    DISPID_COMMENTPDL+6
#define DISPID_IHTMLCOMMENTELEMENT2_INSERTDATA                    DISPID_COMMENTPDL+7
#define DISPID_IHTMLCOMMENTELEMENT2_DELETEDATA                    DISPID_COMMENTPDL+8
#define DISPID_IHTMLCOMMENTELEMENT2_REPLACEDATA                   DISPID_COMMENTPDL+9

//    DISPIDs for interface IHTMLPhraseElement2

#define DISPID_IHTMLPHRASEELEMENT2_CITE                           DISPID_PHRASE+1
#define DISPID_IHTMLPHRASEELEMENT2_DATETIME                       DISPID_PHRASE+2

//    DISPIDs for interface IHTMLTable

#define DISPID_IHTMLTABLE_COLS                                    DISPID_TABLE+1
#define DISPID_IHTMLTABLE_BORDER                                  DISPID_TABLE+2
#define DISPID_IHTMLTABLE_FRAME                                   DISPID_TABLE+4
#define DISPID_IHTMLTABLE_RULES                                   DISPID_TABLE+3
#define DISPID_IHTMLTABLE_CELLSPACING                             DISPID_TABLE+5
#define DISPID_IHTMLTABLE_CELLPADDING                             DISPID_TABLE+6
#define DISPID_IHTMLTABLE_BACKGROUND                              DISPID_A_BACKGROUNDIMAGE
#define DISPID_IHTMLTABLE_BGCOLOR                                 DISPID_BACKCOLOR
#define DISPID_IHTMLTABLE_BORDERCOLOR                             DISPID_A_TABLEBORDERCOLOR
#define DISPID_IHTMLTABLE_BORDERCOLORLIGHT                        DISPID_A_TABLEBORDERCOLORLIGHT
#define DISPID_IHTMLTABLE_BORDERCOLORDARK                         DISPID_A_TABLEBORDERCOLORDARK
#define DISPID_IHTMLTABLE_ALIGN                                   STDPROPID_XOBJ_CONTROLALIGN
#define DISPID_IHTMLTABLE_REFRESH                                 DISPID_TABLE+15
#define DISPID_IHTMLTABLE_ROWS                                    DISPID_TABLE+16
#define DISPID_IHTMLTABLE_WIDTH                                   STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLTABLE_HEIGHT                                  STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLTABLE_DATAPAGESIZE                            DISPID_TABLE+17
#define DISPID_IHTMLTABLE_NEXTPAGE                                DISPID_TABLE+18
#define DISPID_IHTMLTABLE_PREVIOUSPAGE                            DISPID_TABLE+19
#define DISPID_IHTMLTABLE_THEAD                                   DISPID_TABLE+20
#define DISPID_IHTMLTABLE_TFOOT                                   DISPID_TABLE+21
#define DISPID_IHTMLTABLE_TBODIES                                 DISPID_TABLE+24
#define DISPID_IHTMLTABLE_CAPTION                                 DISPID_TABLE+25
#define DISPID_IHTMLTABLE_CREATETHEAD                             DISPID_TABLE+26
#define DISPID_IHTMLTABLE_DELETETHEAD                             DISPID_TABLE+27
#define DISPID_IHTMLTABLE_CREATETFOOT                             DISPID_TABLE+28
#define DISPID_IHTMLTABLE_DELETETFOOT                             DISPID_TABLE+29
#define DISPID_IHTMLTABLE_CREATECAPTION                           DISPID_TABLE+30
#define DISPID_IHTMLTABLE_DELETECAPTION                           DISPID_TABLE+31
#define DISPID_IHTMLTABLE_INSERTROW                               DISPID_TABLE+32
#define DISPID_IHTMLTABLE_DELETEROW                               DISPID_TABLE+33
#define DISPID_IHTMLTABLE_READYSTATE                              DISPID_A_READYSTATE
#define DISPID_IHTMLTABLE_ONREADYSTATECHANGE                      DISPID_EVPROP_ONREADYSTATECHANGE

//    DISPIDs for interface IHTMLTable2

#define DISPID_IHTMLTABLE2_FIRSTPAGE                              DISPID_TABLE+35
#define DISPID_IHTMLTABLE2_LASTPAGE                               DISPID_TABLE+36
#define DISPID_IHTMLTABLE2_CELLS                                  DISPID_TABLE+37
#define DISPID_IHTMLTABLE2_MOVEROW                                DISPID_TABLE+38

//    DISPIDs for interface IHTMLTable3

#define DISPID_IHTMLTABLE3_SUMMARY                                DISPID_TABLE+39

//    DISPIDs for interface IHTMLTableCol

#define DISPID_IHTMLTABLECOL_SPAN                                 DISPID_TABLECOL+1
#define DISPID_IHTMLTABLECOL_WIDTH                                STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLTABLECOL_ALIGN                                STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLTABLECOL_VALIGN                               DISPID_A_TABLEVALIGN

//    DISPIDs for interface IHTMLTableCol2

#define DISPID_IHTMLTABLECOL2_CH                                  DISPID_TABLECOL+2
#define DISPID_IHTMLTABLECOL2_CHOFF                               DISPID_TABLECOL+3

//    DISPIDs for interface IHTMLTableSection

#define DISPID_IHTMLTABLESECTION_ALIGN                            STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLTABLESECTION_VALIGN                           DISPID_A_TABLEVALIGN
#define DISPID_IHTMLTABLESECTION_BGCOLOR                          DISPID_BACKCOLOR
#define DISPID_IHTMLTABLESECTION_ROWS                             DISPID_TABLESECTION
#define DISPID_IHTMLTABLESECTION_INSERTROW                        DISPID_TABLESECTION+1
#define DISPID_IHTMLTABLESECTION_DELETEROW                        DISPID_TABLESECTION+2

//    DISPIDs for interface IHTMLTableSection2

#define DISPID_IHTMLTABLESECTION2_MOVEROW                         DISPID_TABLESECTION+3

//    DISPIDs for interface IHTMLTableSection3

#define DISPID_IHTMLTABLESECTION3_CH                              DISPID_TABLESECTION+4
#define DISPID_IHTMLTABLESECTION3_CHOFF                           DISPID_TABLESECTION+5

//    DISPIDs for interface IHTMLTableRow

#define DISPID_IHTMLTABLEROW_ALIGN                                STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLTABLEROW_VALIGN                               DISPID_A_TABLEVALIGN
#define DISPID_IHTMLTABLEROW_BGCOLOR                              DISPID_BACKCOLOR
#define DISPID_IHTMLTABLEROW_BORDERCOLOR                          DISPID_A_TABLEBORDERCOLOR
#define DISPID_IHTMLTABLEROW_BORDERCOLORLIGHT                     DISPID_A_TABLEBORDERCOLORLIGHT
#define DISPID_IHTMLTABLEROW_BORDERCOLORDARK                      DISPID_A_TABLEBORDERCOLORDARK
#define DISPID_IHTMLTABLEROW_ROWINDEX                             DISPID_TABLEROW
#define DISPID_IHTMLTABLEROW_SECTIONROWINDEX                      DISPID_TABLEROW+1
#define DISPID_IHTMLTABLEROW_CELLS                                DISPID_TABLEROW+2
#define DISPID_IHTMLTABLEROW_INSERTCELL                           DISPID_TABLEROW+3
#define DISPID_IHTMLTABLEROW_DELETECELL                           DISPID_TABLEROW+4

//    DISPIDs for interface IHTMLTableRow2

#define DISPID_IHTMLTABLEROW2_HEIGHT                              STDPROPID_XOBJ_HEIGHT

//    DISPIDs for interface IHTMLTableRow3

#define DISPID_IHTMLTABLEROW3_CH                                  DISPID_TABLEROW+9
#define DISPID_IHTMLTABLEROW3_CHOFF                               DISPID_TABLEROW+10

//    DISPIDs for interface IHTMLTableRowMetrics

#define DISPID_IHTMLTABLEROWMETRICS_CLIENTHEIGHT                  DISPID_SITE+19
#define DISPID_IHTMLTABLEROWMETRICS_CLIENTWIDTH                   DISPID_SITE+20
#define DISPID_IHTMLTABLEROWMETRICS_CLIENTTOP                     DISPID_SITE+21
#define DISPID_IHTMLTABLEROWMETRICS_CLIENTLEFT                    DISPID_SITE+22

//    DISPIDs for interface IHTMLTableCell

#define DISPID_IHTMLTABLECELL_ROWSPAN                             DISPID_TABLECELL+1
#define DISPID_IHTMLTABLECELL_COLSPAN                             DISPID_TABLECELL+2
#define DISPID_IHTMLTABLECELL_ALIGN                               STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLTABLECELL_VALIGN                              DISPID_A_TABLEVALIGN
#define DISPID_IHTMLTABLECELL_BGCOLOR                             DISPID_BACKCOLOR
#define DISPID_IHTMLTABLECELL_NOWRAP                              DISPID_A_NOWRAP
#define DISPID_IHTMLTABLECELL_BACKGROUND                          DISPID_A_BACKGROUNDIMAGE
#define DISPID_IHTMLTABLECELL_BORDERCOLOR                         DISPID_A_TABLEBORDERCOLOR
#define DISPID_IHTMLTABLECELL_BORDERCOLORLIGHT                    DISPID_A_TABLEBORDERCOLORLIGHT
#define DISPID_IHTMLTABLECELL_BORDERCOLORDARK                     DISPID_A_TABLEBORDERCOLORDARK
#define DISPID_IHTMLTABLECELL_WIDTH                               STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLTABLECELL_HEIGHT                              STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLTABLECELL_CELLINDEX                           DISPID_TABLECELL+3

//    DISPIDs for interface IHTMLTableCell2

#define DISPID_IHTMLTABLECELL2_ABBR                               DISPID_TABLECELL+4
#define DISPID_IHTMLTABLECELL2_AXIS                               DISPID_TABLECELL+5
#define DISPID_IHTMLTABLECELL2_CH                                 DISPID_TABLECELL+6
#define DISPID_IHTMLTABLECELL2_CHOFF                              DISPID_TABLECELL+7
#define DISPID_IHTMLTABLECELL2_HEADERS                            DISPID_TABLECELL+8
#define DISPID_IHTMLTABLECELL2_SCOPE                              DISPID_TABLECELL+9

//    DISPIDs for interface IHTMLScriptElement

#define DISPID_IHTMLSCRIPTELEMENT_SRC                             DISPID_SCRIPT+1
#define DISPID_IHTMLSCRIPTELEMENT_HTMLFOR                         DISPID_SCRIPT+4
#define DISPID_IHTMLSCRIPTELEMENT_EVENT                           DISPID_SCRIPT+5
#define DISPID_IHTMLSCRIPTELEMENT_TEXT                            DISPID_SCRIPT+6
#define DISPID_IHTMLSCRIPTELEMENT_DEFER                           DISPID_SCRIPT+7
#define DISPID_IHTMLSCRIPTELEMENT_READYSTATE                      DISPID_A_READYSTATE
#define DISPID_IHTMLSCRIPTELEMENT_ONERROR                         DISPID_EVPROP_ONERROR
#define DISPID_IHTMLSCRIPTELEMENT_TYPE                            DISPID_SCRIPT+9

//    DISPIDs for interface IHTMLScriptElement2

#define DISPID_IHTMLSCRIPTELEMENT2_CHARSET                        DISPID_SCRIPT+10

//    DISPIDs for event set HTMLScriptEvents2

#define DISPID_HTMLSCRIPTEVENTS2_ONERROR                          DISPID_EVMETH_ONERROR

//    DISPIDs for event set HTMLScriptEvents

#define DISPID_HTMLSCRIPTEVENTS_ONERROR                           DISPID_EVMETH_ONERROR

//    DISPIDs for interface IHTMLObjectElement

#define DISPID_IHTMLOBJECTELEMENT_OBJECT                          DISPID_OBJECT+1
#define DISPID_IHTMLOBJECTELEMENT_CLASSID                         DISPID_OBJECT+2
#define DISPID_IHTMLOBJECTELEMENT_DATA                            DISPID_OBJECT+3
#define DISPID_IHTMLOBJECTELEMENT_RECORDSET                       DISPID_OBJECT+5
#define DISPID_IHTMLOBJECTELEMENT_ALIGN                           STDPROPID_XOBJ_CONTROLALIGN
#define DISPID_IHTMLOBJECTELEMENT_NAME                            STDPROPID_XOBJ_NAME
#define DISPID_IHTMLOBJECTELEMENT_CODEBASE                        DISPID_OBJECT+6
#define DISPID_IHTMLOBJECTELEMENT_CODETYPE                        DISPID_OBJECT+7
#define DISPID_IHTMLOBJECTELEMENT_CODE                            DISPID_OBJECT+8
#define DISPID_IHTMLOBJECTELEMENT_BASEHREF                        STDPROPID_XOBJ_BASEHREF
#define DISPID_IHTMLOBJECTELEMENT_TYPE                            DISPID_OBJECT+9
#define DISPID_IHTMLOBJECTELEMENT_FORM                            DISPID_SITE+4
#define DISPID_IHTMLOBJECTELEMENT_WIDTH                           STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLOBJECTELEMENT_HEIGHT                          STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLOBJECTELEMENT_READYSTATE                      DISPID_OBJECT+10
#define DISPID_IHTMLOBJECTELEMENT_ONREADYSTATECHANGE              DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLOBJECTELEMENT_ONERROR                         DISPID_EVPROP_ONERROR
#define DISPID_IHTMLOBJECTELEMENT_ALTHTML                         DISPID_OBJECT+11
#define DISPID_IHTMLOBJECTELEMENT_VSPACE                          DISPID_OBJECT+12
#define DISPID_IHTMLOBJECTELEMENT_HSPACE                          DISPID_OBJECT+13

//    DISPIDs for interface IHTMLObjectElement2

#define DISPID_IHTMLOBJECTELEMENT2_NAMEDRECORDSET                 DISPID_OBJECT+14
#define DISPID_IHTMLOBJECTELEMENT2_CLASSID                        DISPID_OBJECT+2
#define DISPID_IHTMLOBJECTELEMENT2_DATA                           DISPID_OBJECT+3

//    DISPIDs for interface IHTMLObjectElement3

#define DISPID_IHTMLOBJECTELEMENT3_ARCHIVE                        DISPID_OBJECT+15
#define DISPID_IHTMLOBJECTELEMENT3_ALT                            DISPID_OBJECT+16
#define DISPID_IHTMLOBJECTELEMENT3_DECLARE                        DISPID_OBJECT+17
#define DISPID_IHTMLOBJECTELEMENT3_STANDBY                        DISPID_OBJECT+18
#define DISPID_IHTMLOBJECTELEMENT3_BORDER                         DISPID_OBJECT+19
#define DISPID_IHTMLOBJECTELEMENT3_USEMAP                         DISPID_OBJECT+20

//    DISPIDs for interface IHTMLParamElement

#define DISPID_IHTMLPARAMELEMENT_NAME                             DISPID_PARAM+1
#define DISPID_IHTMLPARAMELEMENT_VALUE                            DISPID_PARAM+2
#define DISPID_IHTMLPARAMELEMENT_TYPE                             DISPID_PARAM+3
#define DISPID_IHTMLPARAMELEMENT_VALUETYPE                        DISPID_PARAM+4

//    DISPIDs for event set HTMLObjectElementEvents2

#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONBEFOREUPDATE            DISPID_EVMETH_ONBEFOREUPDATE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONAFTERUPDATE             DISPID_EVMETH_ONAFTERUPDATE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONERRORUPDATE             DISPID_EVMETH_ONERRORUPDATE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONROWEXIT                 DISPID_EVMETH_ONROWEXIT
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONROWENTER                DISPID_EVMETH_ONROWENTER
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONDATASETCHANGED          DISPID_EVMETH_ONDATASETCHANGED
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONDATAAVAILABLE           DISPID_EVMETH_ONDATAAVAILABLE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONDATASETCOMPLETE         DISPID_EVMETH_ONDATASETCOMPLETE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONERROR                   DISPID_XOBJ_BASE+19
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONROWSDELETE              DISPID_EVMETH_ONROWSDELETE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONROWSINSERTED            DISPID_EVMETH_ONROWSINSERTED
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONCELLCHANGE              DISPID_EVMETH_ONCELLCHANGE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONREADYSTATECHANGE        DISPID_XOBJ_BASE+20

//    DISPIDs for event set HTMLObjectElementEvents

#define DISPID_HTMLOBJECTELEMENTEVENTS_ONBEFOREUPDATE             DISPID_EVMETH_ONBEFOREUPDATE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONAFTERUPDATE              DISPID_EVMETH_ONAFTERUPDATE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONERRORUPDATE              DISPID_EVMETH_ONERRORUPDATE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONROWEXIT                  DISPID_EVMETH_ONROWEXIT
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONROWENTER                 DISPID_EVMETH_ONROWENTER
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONDATASETCHANGED           DISPID_EVMETH_ONDATASETCHANGED
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONDATAAVAILABLE            DISPID_EVMETH_ONDATAAVAILABLE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONDATASETCOMPLETE          DISPID_EVMETH_ONDATASETCOMPLETE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONERROR                    DISPID_XOBJ_BASE+19
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONROWSDELETE               DISPID_EVMETH_ONROWSDELETE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONROWSINSERTED             DISPID_EVMETH_ONROWSINSERTED
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONCELLCHANGE               DISPID_EVMETH_ONCELLCHANGE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONREADYSTATECHANGE         DISPID_XOBJ_BASE+20

//    DISPIDs for interface IHTMLFrameBase

#define DISPID_IHTMLFRAMEBASE_SRC                                 DISPID_FRAMESITE+0
#define DISPID_IHTMLFRAMEBASE_NAME                                STDPROPID_XOBJ_NAME
#define DISPID_IHTMLFRAMEBASE_BORDER                              DISPID_FRAMESITE+2
#define DISPID_IHTMLFRAMEBASE_FRAMEBORDER                         DISPID_FRAMESITE+3
#define DISPID_IHTMLFRAMEBASE_FRAMESPACING                        DISPID_FRAMESITE+4
#define DISPID_IHTMLFRAMEBASE_MARGINWIDTH                         DISPID_FRAMESITE+5
#define DISPID_IHTMLFRAMEBASE_MARGINHEIGHT                        DISPID_FRAMESITE+6
#define DISPID_IHTMLFRAMEBASE_NORESIZE                            DISPID_FRAMESITE+7
#define DISPID_IHTMLFRAMEBASE_SCROLLING                           DISPID_FRAMESITE+8

//    DISPIDs for interface IHTMLFrameBase2

#define DISPID_IHTMLFRAMEBASE2_CONTENTWINDOW                      DISPID_FRAMESITE+9
#define DISPID_IHTMLFRAMEBASE2_ONLOAD                             DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLFRAMEBASE2_ONREADYSTATECHANGE                 DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLFRAMEBASE2_READYSTATE                         DISPID_A_READYSTATE
#define DISPID_IHTMLFRAMEBASE2_ALLOWTRANSPARENCY                  DISPID_A_ALLOWTRANSPARENCY

//    DISPIDs for interface IHTMLFrameBase3

#define DISPID_IHTMLFRAMEBASE3_LONGDESC                           DISPID_FRAMESITE+10

//    DISPIDs for event set HTMLFrameSiteEvents2

#define DISPID_HTMLFRAMESITEEVENTS2_ONLOAD                        DISPID_EVMETH_ONLOAD

//    DISPIDs for event set HTMLFrameSiteEvents

#define DISPID_HTMLFRAMESITEEVENTS_ONLOAD                         DISPID_EVMETH_ONLOAD

//    DISPIDs for interface IHTMLFrameElement

#define DISPID_IHTMLFRAMEELEMENT_BORDERCOLOR                      DISPID_FRAME+1

//    DISPIDs for interface IHTMLFrameElement2

#define DISPID_IHTMLFRAMEELEMENT2_HEIGHT                          STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLFRAMEELEMENT2_WIDTH                           STDPROPID_XOBJ_WIDTH

//    DISPIDs for interface IHTMLIFrameElement

#define DISPID_IHTMLIFRAMEELEMENT_VSPACE                          DISPID_IFRAME+1
#define DISPID_IHTMLIFRAMEELEMENT_HSPACE                          DISPID_IFRAME+2
#define DISPID_IHTMLIFRAMEELEMENT_ALIGN                           STDPROPID_XOBJ_CONTROLALIGN

//    DISPIDs for interface IHTMLIFrameElement2

#define DISPID_IHTMLIFRAMEELEMENT2_HEIGHT                         STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLIFRAMEELEMENT2_WIDTH                          STDPROPID_XOBJ_WIDTH

//    DISPIDs for interface IHTMLDivPosition

#define DISPID_IHTMLDIVPOSITION_ALIGN                             STDPROPID_XOBJ_CONTROLALIGN

//    DISPIDs for interface IHTMLFieldSetElement

#define DISPID_IHTMLFIELDSETELEMENT_ALIGN                         STDPROPID_XOBJ_CONTROLALIGN

//    DISPIDs for interface IHTMLFieldSetElement2

#define DISPID_IHTMLFIELDSETELEMENT2_FORM                         DISPID_SITE+4

//    DISPIDs for interface IHTMLLegendElement

#define DISPID_IHTMLLEGENDELEMENT_ALIGN                           STDPROPID_XOBJ_CONTROLALIGN

//    DISPIDs for interface IHTMLLegendElement2

#define DISPID_IHTMLLEGENDELEMENT2_FORM                           DISPID_SITE+4

//    DISPIDs for interface IHTMLSpanFlow

#define DISPID_IHTMLSPANFLOW_ALIGN                                STDPROPID_XOBJ_CONTROLALIGN

//    DISPIDs for interface IHTMLFrameSetElement

#define DISPID_IHTMLFRAMESETELEMENT_ROWS                          DISPID_FRAMESET
#define DISPID_IHTMLFRAMESETELEMENT_COLS                          DISPID_FRAMESET+1
#define DISPID_IHTMLFRAMESETELEMENT_BORDER                        DISPID_FRAMESET+2
#define DISPID_IHTMLFRAMESETELEMENT_BORDERCOLOR                   DISPID_FRAMESET+3
#define DISPID_IHTMLFRAMESETELEMENT_FRAMEBORDER                   DISPID_FRAMESET+4
#define DISPID_IHTMLFRAMESETELEMENT_FRAMESPACING                  DISPID_FRAMESET+5
#define DISPID_IHTMLFRAMESETELEMENT_NAME                          STDPROPID_XOBJ_NAME
#define DISPID_IHTMLFRAMESETELEMENT_ONLOAD                        DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLFRAMESETELEMENT_ONUNLOAD                      DISPID_EVPROP_ONUNLOAD
#define DISPID_IHTMLFRAMESETELEMENT_ONBEFOREUNLOAD                DISPID_EVPROP_ONBEFOREUNLOAD

//    DISPIDs for interface IHTMLFrameSetElement2

#define DISPID_IHTMLFRAMESETELEMENT2_ONBEFOREPRINT                DISPID_EVPROP_ONBEFOREPRINT
#define DISPID_IHTMLFRAMESETELEMENT2_ONAFTERPRINT                 DISPID_EVPROP_ONAFTERPRINT

//    DISPIDs for interface IHTMLBGsound

#define DISPID_IHTMLBGSOUND_SRC                                   DISPID_BGSOUND+1
#define DISPID_IHTMLBGSOUND_LOOP                                  DISPID_BGSOUND+2
#define DISPID_IHTMLBGSOUND_VOLUME                                DISPID_BGSOUND+3
#define DISPID_IHTMLBGSOUND_BALANCE                               DISPID_BGSOUND+4

//    DISPIDs for interface IHTMLFontNamesCollection

#define DISPID_IHTMLFONTNAMESCOLLECTION_LENGTH                    DISPID_OPTIONS_COL+1
#define DISPID_IHTMLFONTNAMESCOLLECTION__NEWENUM                  DISPID_NEWENUM
#define DISPID_IHTMLFONTNAMESCOLLECTION_ITEM                      DISPID_VALUE

//    DISPIDs for interface IHTMLFontSizesCollection

#define DISPID_IHTMLFONTSIZESCOLLECTION_LENGTH                    DISPID_OPTIONS_COL+2
#define DISPID_IHTMLFONTSIZESCOLLECTION__NEWENUM                  DISPID_NEWENUM
#define DISPID_IHTMLFONTSIZESCOLLECTION_FORFONT                   DISPID_OPTIONS_COL+3
#define DISPID_IHTMLFONTSIZESCOLLECTION_ITEM                      DISPID_VALUE

//    DISPIDs for interface IHTMLOptionsHolder

#define DISPID_IHTMLOPTIONSHOLDER_DOCUMENT                        DISPID_OPTIONS_COL+3
#define DISPID_IHTMLOPTIONSHOLDER_FONTS                           DISPID_OPTIONS_COL+4
#define DISPID_IHTMLOPTIONSHOLDER_EXECARG                         DISPID_OPTIONS_COL+5
#define DISPID_IHTMLOPTIONSHOLDER_ERRORLINE                       DISPID_OPTIONS_COL+6
#define DISPID_IHTMLOPTIONSHOLDER_ERRORCHARACTER                  DISPID_OPTIONS_COL+7
#define DISPID_IHTMLOPTIONSHOLDER_ERRORCODE                       DISPID_OPTIONS_COL+8
#define DISPID_IHTMLOPTIONSHOLDER_ERRORMESSAGE                    DISPID_OPTIONS_COL+9
#define DISPID_IHTMLOPTIONSHOLDER_ERRORDEBUG                      DISPID_OPTIONS_COL+10
#define DISPID_IHTMLOPTIONSHOLDER_UNSECUREDWINDOWOFDOCUMENT       DISPID_OPTIONS_COL+11
#define DISPID_IHTMLOPTIONSHOLDER_FINDTEXT                        DISPID_OPTIONS_COL+12
#define DISPID_IHTMLOPTIONSHOLDER_ANYTHINGAFTERFRAMESET           DISPID_OPTIONS_COL+13
#define DISPID_IHTMLOPTIONSHOLDER_SIZES                           DISPID_OPTIONS_COL+14
#define DISPID_IHTMLOPTIONSHOLDER_OPENFILEDLG                     DISPID_OPTIONS_COL+15
#define DISPID_IHTMLOPTIONSHOLDER_SAVEFILEDLG                     DISPID_OPTIONS_COL+16
#define DISPID_IHTMLOPTIONSHOLDER_CHOOSECOLORDLG                  DISPID_OPTIONS_COL+17
#define DISPID_IHTMLOPTIONSHOLDER_SHOWSECURITYINFO                DISPID_OPTIONS_COL+18
#define DISPID_IHTMLOPTIONSHOLDER_ISAPARTMENTMODEL                DISPID_OPTIONS_COL+19
#define DISPID_IHTMLOPTIONSHOLDER_GETCHARSET                      DISPID_OPTIONS_COL+20
#define DISPID_IHTMLOPTIONSHOLDER_SECURECONNECTIONINFO            DISPID_OPTIONS_COL+21

//    DISPIDs for interface IHTMLStyleElement

#define DISPID_IHTMLSTYLEELEMENT_TYPE                             DISPID_STYLEELEMENT+2
#define DISPID_IHTMLSTYLEELEMENT_READYSTATE                       DISPID_A_READYSTATE
#define DISPID_IHTMLSTYLEELEMENT_ONREADYSTATECHANGE               DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLSTYLEELEMENT_ONLOAD                           DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLSTYLEELEMENT_ONERROR                          DISPID_EVPROP_ONERROR
#define DISPID_IHTMLSTYLEELEMENT_STYLESHEET                       DISPID_STYLEELEMENT+4
#define DISPID_IHTMLSTYLEELEMENT_DISABLED                         STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLSTYLEELEMENT_MEDIA                            DISPID_STYLEELEMENT+6

//    DISPIDs for event set HTMLStyleElementEvents2

#define DISPID_HTMLSTYLEELEMENTEVENTS2_ONLOAD                     DISPID_EVMETH_ONLOAD
#define DISPID_HTMLSTYLEELEMENTEVENTS2_ONERROR                    DISPID_EVMETH_ONERROR

//    DISPIDs for event set HTMLStyleElementEvents

#define DISPID_HTMLSTYLEELEMENTEVENTS_ONLOAD                      DISPID_EVMETH_ONLOAD
#define DISPID_HTMLSTYLEELEMENTEVENTS_ONERROR                     DISPID_EVMETH_ONERROR

//    DISPIDs for interface IHTMLStyleFontFace

#define DISPID_IHTMLSTYLEFONTFACE_FONTSRC                         DISPID_A_FONTFACESRC

//    DISPIDs for interface IMobileOptimizedView

#define DISPID_IMOBILEOPTIMIZEDVIEW_ENABLED                       
#define DISPID_IMOBILEOPTIMIZEDVIEW_OPTWIDTHZOOMPERCENT           
#define DISPID_IMOBILEOPTIMIZEDVIEW_GETCLOSESTTEXTCOLUMN          

//    DISPIDs for interface IPanelDetector

#define DISPID_IPANELDETECTOR_GETALLPANELS                        
#define DISPID_IPANELDETECTOR_GETCONTENTPANELS                    
#define DISPID_IPANELDETECTOR_ISDIRTY                             

//    DISPIDs for interface ICSSFilterSite

#define DISPID_ICSSFILTERSITE_GETELEMENT                          
#define DISPID_ICSSFILTERSITE_FIREONFILTERCHANGEEVENT             

//    DISPIDs for interface ICSSFilter

#define DISPID_ICSSFILTER_SETSITE                                 
#define DISPID_ICSSFILTER_ONAMBIENTPROPERTYCHANGE                 

//    DISPIDs for interface ISecureUrlHost

#define DISPID_ISECUREURLHOST_VALIDATESECUREURL                   

//    DISPIDs for interface IMarkupServices

#define DISPID_IMARKUPSERVICES_CREATEMARKUPPOINTER                
#define DISPID_IMARKUPSERVICES_CREATEMARKUPCONTAINER              
#define DISPID_IMARKUPSERVICES_CREATEELEMENT                      
#define DISPID_IMARKUPSERVICES_CLONEELEMENT                       
#define DISPID_IMARKUPSERVICES_INSERTELEMENT                      
#define DISPID_IMARKUPSERVICES_REMOVEELEMENT                      
#define DISPID_IMARKUPSERVICES_REMOVE                             
#define DISPID_IMARKUPSERVICES_COPY                               
#define DISPID_IMARKUPSERVICES_MOVE                               
#define DISPID_IMARKUPSERVICES_INSERTTEXT                         
#define DISPID_IMARKUPSERVICES_PARSESTRING                        
#define DISPID_IMARKUPSERVICES_PARSEGLOBAL                        
#define DISPID_IMARKUPSERVICES_ISSCOPEDELEMENT                    
#define DISPID_IMARKUPSERVICES_GETELEMENTTAGID                    
#define DISPID_IMARKUPSERVICES_GETTAGIDFORNAME                    
#define DISPID_IMARKUPSERVICES_GETNAMEFORTAGID                    
#define DISPID_IMARKUPSERVICES_MOVEPOINTERSTORANGE                
#define DISPID_IMARKUPSERVICES_MOVERANGETOPOINTERS                
#define DISPID_IMARKUPSERVICES_BEGINUNDOUNIT                      
#define DISPID_IMARKUPSERVICES_ENDUNDOUNIT                        

//    DISPIDs for interface IMarkupServices2

#define DISPID_IMARKUPSERVICES2_PARSEGLOBALEX                     
#define DISPID_IMARKUPSERVICES2_VALIDATEELEMENTS                  
#define DISPID_IMARKUPSERVICES2_SAVESEGMENTSTOCLIPBOARD           

//    DISPIDs for interface IMarkupContainer

#define DISPID_IMARKUPCONTAINER_OWNINGDOC                         

//    DISPIDs for interface IMarkupContainer2

#define DISPID_IMARKUPCONTAINER2_CREATECHANGELOG                  
#define DISPID_IMARKUPCONTAINER2_REGISTERFORDIRTYRANGE            
#define DISPID_IMARKUPCONTAINER2_UNREGISTERFORDIRTYRANGE          
#define DISPID_IMARKUPCONTAINER2_GETANDCLEARDIRTYRANGE            
#define DISPID_IMARKUPCONTAINER2_GETVERSIONNUMBER                 
#define DISPID_IMARKUPCONTAINER2_GETMASTERELEMENT                 

//    DISPIDs for interface IHTMLChangePlayback

#define DISPID_IHTMLCHANGEPLAYBACK_EXECCHANGE                     

//    DISPIDs for interface IMarkupPointer

#define DISPID_IMARKUPPOINTER_OWNINGDOC                           
#define DISPID_IMARKUPPOINTER_GRAVITY                             
#define DISPID_IMARKUPPOINTER_SETGRAVITY                          
#define DISPID_IMARKUPPOINTER_CLING                               
#define DISPID_IMARKUPPOINTER_SETCLING                            
#define DISPID_IMARKUPPOINTER_UNPOSITION                          
#define DISPID_IMARKUPPOINTER_ISPOSITIONED                        
#define DISPID_IMARKUPPOINTER_GETCONTAINER                        
#define DISPID_IMARKUPPOINTER_MOVEADJACENTTOELEMENT               
#define DISPID_IMARKUPPOINTER_MOVETOPOINTER                       
#define DISPID_IMARKUPPOINTER_MOVETOCONTAINER                     
#define DISPID_IMARKUPPOINTER_LEFT                                
#define DISPID_IMARKUPPOINTER_RIGHT                               
#define DISPID_IMARKUPPOINTER_CURRENTSCOPE                        
#define DISPID_IMARKUPPOINTER_ISLEFTOF                            
#define DISPID_IMARKUPPOINTER_ISLEFTOFOREQUALTO                   
#define DISPID_IMARKUPPOINTER_ISRIGHTOF                           
#define DISPID_IMARKUPPOINTER_ISRIGHTOFOREQUALTO                  
#define DISPID_IMARKUPPOINTER_ISEQUALTO                           
#define DISPID_IMARKUPPOINTER_MOVEUNIT                            
#define DISPID_IMARKUPPOINTER_FINDTEXT                            

//    DISPIDs for interface IMarkupPointer2

#define DISPID_IMARKUPPOINTER2_ISATWORDBREAK                      
#define DISPID_IMARKUPPOINTER2_GETMARKUPPOSITION                  
#define DISPID_IMARKUPPOINTER2_MOVETOMARKUPPOSITION               
#define DISPID_IMARKUPPOINTER2_MOVEUNITBOUNDED                    
#define DISPID_IMARKUPPOINTER2_ISINSIDEURL                        
#define DISPID_IMARKUPPOINTER2_MOVETOCONTENT                      

//    DISPIDs for interface IMarkupTextFrags

#define DISPID_IMARKUPTEXTFRAGS_GETTEXTFRAGCOUNT                  
#define DISPID_IMARKUPTEXTFRAGS_GETTEXTFRAG                       
#define DISPID_IMARKUPTEXTFRAGS_REMOVETEXTFRAG                    
#define DISPID_IMARKUPTEXTFRAGS_INSERTTEXTFRAG                    
#define DISPID_IMARKUPTEXTFRAGS_FINDTEXTFRAGFROMMARKUPPOINTER     

//    DISPIDs for interface IHTMLChangeLog

#define DISPID_IHTMLCHANGELOG_GETNEXTCHANGE                       

//    DISPIDs for interface IHTMLChangeSink

#define DISPID_IHTMLCHANGESINK_NOTIFY                             

//    DISPIDs for interface IXMLGenericParse

#define DISPID_IXMLGENERICPARSE_SETGENERICPARSE                   

//    DISPIDs for interface IHTMLEditHost

#define DISPID_IHTMLEDITHOST_SNAPRECT                             

//    DISPIDs for interface IHTMLEditHost2

#define DISPID_IHTMLEDITHOST2_PREDRAG                             

//    DISPIDs for interface ISegment

#define DISPID_ISEGMENT_GETPOINTERS                               

//    DISPIDs for interface ISegmentListIterator

#define DISPID_ISEGMENTLISTITERATOR_CURRENT                       
#define DISPID_ISEGMENTLISTITERATOR_FIRST                         
#define DISPID_ISEGMENTLISTITERATOR_ISDONE                        
#define DISPID_ISEGMENTLISTITERATOR_ADVANCE                       

//    DISPIDs for interface ISegmentList

#define DISPID_ISEGMENTLIST_CREATEITERATOR                        
#define DISPID_ISEGMENTLIST_GETTYPE                               
#define DISPID_ISEGMENTLIST_ISEMPTY                               

//    DISPIDs for interface ISequenceNumber

#define DISPID_ISEQUENCENUMBER_GETSEQUENCENUMBER                  

//    DISPIDs for interface IIMEServices

#define DISPID_IIMESERVICES_GETACTIVEIMM                          

//    DISPIDs for interface IHTMLCaret

#define DISPID_IHTMLCARET_MOVECARETTOPOINTER                      
#define DISPID_IHTMLCARET_MOVECARETTOPOINTEREX                    
#define DISPID_IHTMLCARET_MOVEMARKUPPOINTERTOCARET                
#define DISPID_IHTMLCARET_MOVEDISPLAYPOINTERTOCARET               
#define DISPID_IHTMLCARET_ISVISIBLE                               
#define DISPID_IHTMLCARET_SHOW                                    
#define DISPID_IHTMLCARET_HIDE                                    
#define DISPID_IHTMLCARET_INSERTTEXT                              
#define DISPID_IHTMLCARET_SCROLLINTOVIEW                          
#define DISPID_IHTMLCARET_GETLOCATION                             
#define DISPID_IHTMLCARET_GETCARETDIRECTION                       
#define DISPID_IHTMLCARET_SETCARETDIRECTION                       

//    DISPIDs for interface IHighlightRenderingServices

#define DISPID_IHIGHLIGHTRENDERINGSERVICES_ADDSEGMENT             
#define DISPID_IHIGHLIGHTRENDERINGSERVICES_MOVESEGMENTTOPOINTERS  
#define DISPID_IHIGHLIGHTRENDERINGSERVICES_REMOVESEGMENT          

//    DISPIDs for interface ISelectionServicesListener

#define DISPID_ISELECTIONSERVICESLISTENER_BEGINSELECTIONUNDO      
#define DISPID_ISELECTIONSERVICESLISTENER_ENDSELECTIONUNDO        
#define DISPID_ISELECTIONSERVICESLISTENER_ONSELECTEDELEMENTEXIT   
#define DISPID_ISELECTIONSERVICESLISTENER_ONCHANGETYPE            
#define DISPID_ISELECTIONSERVICESLISTENER_GETTYPEDETAIL           

//    DISPIDs for interface ISelectionServices

#define DISPID_ISELECTIONSERVICES_SETSELECTIONTYPE                
#define DISPID_ISELECTIONSERVICES_GETMARKUPCONTAINER              
#define DISPID_ISELECTIONSERVICES_ADDSEGMENT                      
#define DISPID_ISELECTIONSERVICES_ADDELEMENTSEGMENT               
#define DISPID_ISELECTIONSERVICES_REMOVESEGMENT                   
#define DISPID_ISELECTIONSERVICES_GETSELECTIONSERVICESLISTENER    

//    DISPIDs for interface IElementSegment

#define DISPID_IELEMENTSEGMENT_GETELEMENT                         
#define DISPID_IELEMENTSEGMENT_SETPRIMARY                         
#define DISPID_IELEMENTSEGMENT_ISPRIMARY                          

//    DISPIDs for interface IHTMLEditDesigner

#define DISPID_IHTMLEDITDESIGNER_PREHANDLEEVENT                   
#define DISPID_IHTMLEDITDESIGNER_POSTHANDLEEVENT                  
#define DISPID_IHTMLEDITDESIGNER_TRANSLATEACCELERATOR             
#define DISPID_IHTMLEDITDESIGNER_POSTEDITOREVENTNOTIFY            

//    DISPIDs for interface IHTMLEditServices

#define DISPID_IHTMLEDITSERVICES_ADDDESIGNER                      
#define DISPID_IHTMLEDITSERVICES_REMOVEDESIGNER                   
#define DISPID_IHTMLEDITSERVICES_GETSELECTIONSERVICES             
#define DISPID_IHTMLEDITSERVICES_MOVETOSELECTIONANCHOR            
#define DISPID_IHTMLEDITSERVICES_MOVETOSELECTIONEND               
#define DISPID_IHTMLEDITSERVICES_SELECTRANGE                      

//    DISPIDs for interface IHTMLEditServices2

#define DISPID_IHTMLEDITSERVICES2_MOVETOSELECTIONANCHOREX         
#define DISPID_IHTMLEDITSERVICES2_MOVETOSELECTIONENDEX            
#define DISPID_IHTMLEDITSERVICES2_FREEZEVIRTUALCARETPOS           
#define DISPID_IHTMLEDITSERVICES2_UNFREEZEVIRTUALCARETPOS         

//    DISPIDs for interface ILineInfo

#define DISPID_ILINEINFO_X                                        DISPID_ILINEINFO+1
#define DISPID_ILINEINFO_BASELINE                                 DISPID_ILINEINFO+2
#define DISPID_ILINEINFO_TEXTDESCENT                              DISPID_ILINEINFO+3
#define DISPID_ILINEINFO_TEXTHEIGHT                               DISPID_ILINEINFO+4
#define DISPID_ILINEINFO_LINEDIRECTION                            DISPID_ILINEINFO+5

//    DISPIDs for interface IHTMLComputedStyle

#define DISPID_IHTMLCOMPUTEDSTYLE_BOLD                            DISPID_IHTMLCOMPUTEDSTYLE+1
#define DISPID_IHTMLCOMPUTEDSTYLE_ITALIC                          DISPID_IHTMLCOMPUTEDSTYLE+2
#define DISPID_IHTMLCOMPUTEDSTYLE_UNDERLINE                       DISPID_IHTMLCOMPUTEDSTYLE+3
#define DISPID_IHTMLCOMPUTEDSTYLE_OVERLINE                        DISPID_IHTMLCOMPUTEDSTYLE+4
#define DISPID_IHTMLCOMPUTEDSTYLE_STRIKEOUT                       DISPID_IHTMLCOMPUTEDSTYLE+5
#define DISPID_IHTMLCOMPUTEDSTYLE_SUBSCRIPT                       DISPID_IHTMLCOMPUTEDSTYLE+6
#define DISPID_IHTMLCOMPUTEDSTYLE_SUPERSCRIPT                     DISPID_IHTMLCOMPUTEDSTYLE+7
#define DISPID_IHTMLCOMPUTEDSTYLE_EXPLICITFACE                    DISPID_IHTMLCOMPUTEDSTYLE+8
#define DISPID_IHTMLCOMPUTEDSTYLE_FONTWEIGHT                      DISPID_IHTMLCOMPUTEDSTYLE+9
#define DISPID_IHTMLCOMPUTEDSTYLE_FONTSIZE                        DISPID_IHTMLCOMPUTEDSTYLE+10
#define DISPID_IHTMLCOMPUTEDSTYLE_FONTNAME                        DISPID_IHTMLCOMPUTEDSTYLE+11
#define DISPID_IHTMLCOMPUTEDSTYLE_HASBGCOLOR                      DISPID_IHTMLCOMPUTEDSTYLE+12
#define DISPID_IHTMLCOMPUTEDSTYLE_TEXTCOLOR                       DISPID_IHTMLCOMPUTEDSTYLE+13
#define DISPID_IHTMLCOMPUTEDSTYLE_BACKGROUNDCOLOR                 DISPID_IHTMLCOMPUTEDSTYLE+14
#define DISPID_IHTMLCOMPUTEDSTYLE_PREFORMATTED                    DISPID_IHTMLCOMPUTEDSTYLE+15
#define DISPID_IHTMLCOMPUTEDSTYLE_DIRECTION                       DISPID_IHTMLCOMPUTEDSTYLE+16
#define DISPID_IHTMLCOMPUTEDSTYLE_BLOCKDIRECTION                  DISPID_IHTMLCOMPUTEDSTYLE+17
#define DISPID_IHTMLCOMPUTEDSTYLE_OL                              DISPID_IHTMLCOMPUTEDSTYLE+18
#define DISPID_IHTMLCOMPUTEDSTYLE_ISEQUAL                         

//    DISPIDs for interface IDisplayPointer

#define DISPID_IDISPLAYPOINTER_MOVETOPOINT                        
#define DISPID_IDISPLAYPOINTER_MOVEUNIT                           
#define DISPID_IDISPLAYPOINTER_POSITIONMARKUPPOINTER              
#define DISPID_IDISPLAYPOINTER_MOVETOPOINTER                      
#define DISPID_IDISPLAYPOINTER_SETPOINTERGRAVITY                  
#define DISPID_IDISPLAYPOINTER_GETPOINTERGRAVITY                  
#define DISPID_IDISPLAYPOINTER_SETDISPLAYGRAVITY                  
#define DISPID_IDISPLAYPOINTER_GETDISPLAYGRAVITY                  
#define DISPID_IDISPLAYPOINTER_ISPOSITIONED                       
#define DISPID_IDISPLAYPOINTER_UNPOSITION                         
#define DISPID_IDISPLAYPOINTER_ISEQUALTO                          
#define DISPID_IDISPLAYPOINTER_ISLEFTOF                           
#define DISPID_IDISPLAYPOINTER_ISRIGHTOF                          
#define DISPID_IDISPLAYPOINTER_ISATBOL                            
#define DISPID_IDISPLAYPOINTER_MOVETOMARKUPPOINTER                
#define DISPID_IDISPLAYPOINTER_SCROLLINTOVIEW                     
#define DISPID_IDISPLAYPOINTER_GETLINEINFO                        
#define DISPID_IDISPLAYPOINTER_GETFLOWELEMENT                     
#define DISPID_IDISPLAYPOINTER_QUERYBREAKS                        

//    DISPIDs for interface IDisplayServices

#define DISPID_IDISPLAYSERVICES_CREATEDISPLAYPOINTER              
#define DISPID_IDISPLAYSERVICES_TRANSFORMRECT                     
#define DISPID_IDISPLAYSERVICES_TRANSFORMPOINT                    
#define DISPID_IDISPLAYSERVICES_GETCARET                          
#define DISPID_IDISPLAYSERVICES_GETCOMPUTEDSTYLE                  
#define DISPID_IDISPLAYSERVICES_SCROLLRECTINTOVIEW                
#define DISPID_IDISPLAYSERVICES_HASFLOWLAYOUT                     

//    DISPIDs for interface IHtmlDlgSafeHelper

#define DISPID_IHTMLDLGSAFEHELPER_CHOOSECOLORDLG                  1
#define DISPID_IHTMLDLGSAFEHELPER_GETCHARSET                      2
#define DISPID_IHTMLDLGSAFEHELPER_FONTS                           3
#define DISPID_IHTMLDLGSAFEHELPER_BLOCKFORMATS                    4

//    DISPIDs for interface IBlockFormats

#define DISPID_IBLOCKFORMATS__NEWENUM                             DISPID_NEWENUM
#define DISPID_IBLOCKFORMATS_COUNT                                1
#define DISPID_IBLOCKFORMATS_ITEM                                 DISPID_VALUE

//    DISPIDs for interface IFontNames

#define DISPID_IFONTNAMES__NEWENUM                                DISPID_NEWENUM
#define DISPID_IFONTNAMES_COUNT                                   1
#define DISPID_IFONTNAMES_ITEM                                    DISPID_VALUE

//    DISPIDs for interface IHTMLNamespace

#define DISPID_IHTMLNAMESPACE_NAME                                DISPID_NAMESPACE+0
#define DISPID_IHTMLNAMESPACE_URN                                 DISPID_NAMESPACE+1
#define DISPID_IHTMLNAMESPACE_TAGNAMES                            DISPID_NAMESPACE+2
#define DISPID_IHTMLNAMESPACE_READYSTATE                          DISPID_A_READYSTATE
#define DISPID_IHTMLNAMESPACE_ONREADYSTATECHANGE                  DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLNAMESPACE_DOIMPORT                            DISPID_NAMESPACE+3
#define DISPID_IHTMLNAMESPACE_ATTACHEVENT                         DISPID_HTMLOBJECT+7
#define DISPID_IHTMLNAMESPACE_DETACHEVENT                         DISPID_HTMLOBJECT+8

//    DISPIDs for interface IHTMLNamespaceCollection

#define DISPID_IHTMLNAMESPACECOLLECTION_LENGTH                    DISPID_NAMESPACE_COLLECTION+0
#define DISPID_IHTMLNAMESPACECOLLECTION_ITEM                      DISPID_VALUE
#define DISPID_IHTMLNAMESPACECOLLECTION_ADD                       DISPID_NAMESPACE_COLLECTION+1

//    DISPIDs for event set HTMLNamespaceEvents

#define DISPID_HTMLNAMESPACEEVENTS_ONREADYSTATECHANGE             DISPID_EVMETH_ONREADYSTATECHANGE

//    DISPIDs for interface IHTMLPainter

#define DISPID_IHTMLPAINTER_DRAW                                  
#define DISPID_IHTMLPAINTER_ONRESIZE                              
#define DISPID_IHTMLPAINTER_GETPAINTERINFO                        
#define DISPID_IHTMLPAINTER_HITTESTPOINT                          

//    DISPIDs for interface IHTMLPainterEventInfo

#define DISPID_IHTMLPAINTEREVENTINFO_GETEVENTINFOFLAGS            
#define DISPID_IHTMLPAINTEREVENTINFO_GETEVENTTARGET               
#define DISPID_IHTMLPAINTEREVENTINFO_SETCURSOR                    
#define DISPID_IHTMLPAINTEREVENTINFO_STRINGFROMPARTID             

//    DISPIDs for interface IHTMLPainterOverlay

#define DISPID_IHTMLPAINTEROVERLAY_ONMOVE                         

//    DISPIDs for interface IHTMLPaintSite

#define DISPID_IHTMLPAINTSITE_INVALIDATEPAINTERINFO               
#define DISPID_IHTMLPAINTSITE_INVALIDATERECT                      
#define DISPID_IHTMLPAINTSITE_INVALIDATEREGION                    
#define DISPID_IHTMLPAINTSITE_GETDRAWINFO                         
#define DISPID_IHTMLPAINTSITE_TRANSFORMGLOBALTOLOCAL              
#define DISPID_IHTMLPAINTSITE_TRANSFORMLOCALTOGLOBAL              
#define DISPID_IHTMLPAINTSITE_GETHITTESTCOOKIE                    

//    DISPIDs for interface IHTMLIPrintCollection

#define DISPID_IHTMLIPRINTCOLLECTION_LENGTH                       DISPID_OPTIONS_COL+1
#define DISPID_IHTMLIPRINTCOLLECTION__NEWENUM                     DISPID_NEWENUM
#define DISPID_IHTMLIPRINTCOLLECTION_ITEM                         DISPID_VALUE

//    DISPIDs for interface IEnumPrivacyRecords

#define DISPID_IENUMPRIVACYRECORDS_RESET                          
#define DISPID_IENUMPRIVACYRECORDS_GETSIZE                        
#define DISPID_IENUMPRIVACYRECORDS_GETPRIVACYIMPACTED             
#define DISPID_IENUMPRIVACYRECORDS_NEXT                           

//    DISPIDs for interface INavigateServices

#define DISPID_INAVIGATESERVICES_SETNAVIGATIONSTATE               
#define DISPID_INAVIGATESERVICES_GETNAVIGATIONSTATE               

//    DISPIDs for interface IWPCBlockedUrls

#define DISPID_IWPCBLOCKEDURLS_GETCOUNT                           
#define DISPID_IWPCBLOCKEDURLS_GETURL                             

//    DISPIDs for interface IHTMLDialog

#define DISPID_IHTMLDIALOG_DIALOGTOP                              STDPROPID_XOBJ_TOP
#define DISPID_IHTMLDIALOG_DIALOGLEFT                             STDPROPID_XOBJ_LEFT
#define DISPID_IHTMLDIALOG_DIALOGWIDTH                            STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLDIALOG_DIALOGHEIGHT                           STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLDIALOG_DIALOGARGUMENTS                        DISPID_HTMLDLG+0
#define DISPID_IHTMLDIALOG_MENUARGUMENTS                          DISPID_HTMLDLG+13
#define DISPID_IHTMLDIALOG_RETURNVALUE                            DISPID_HTMLDLG+1
#define DISPID_IHTMLDIALOG_CLOSE                                  DISPID_HTMLDLG+11
#define DISPID_IHTMLDIALOG_TOSTRING                               DISPID_HTMLDLG+12

//    DISPIDs for interface IHTMLDialog2

#define DISPID_IHTMLDIALOG2_STATUS                                DISPID_HTMLDLG+14
#define DISPID_IHTMLDIALOG2_RESIZABLE                             DISPID_HTMLDLG+15

//    DISPIDs for interface IHTMLDialog3

#define DISPID_IHTMLDIALOG3_UNADORNED                             DISPID_HTMLDLG+16
#define DISPID_IHTMLDIALOG3_DIALOGHIDE                            DISPID_HTMLDLG+7

//    DISPIDs for interface IHTMLModelessInit

#define DISPID_IHTMLMODELESSINIT_PARAMETERS                       DISPID_HTMLDLG+0
#define DISPID_IHTMLMODELESSINIT_OPTIONSTRING                     DISPID_HTMLDLG+1
#define DISPID_IHTMLMODELESSINIT_MONIKER                          DISPID_HTMLDLG+6
#define DISPID_IHTMLMODELESSINIT_DOCUMENT                         DISPID_HTMLDLG+7

//    DISPIDs for interface IHTMLPopup

#define DISPID_IHTMLPOPUP_SHOW                                    DISPID_HTMLPOPUP+1
#define DISPID_IHTMLPOPUP_HIDE                                    DISPID_HTMLPOPUP+2
#define DISPID_IHTMLPOPUP_DOCUMENT                                DISPID_HTMLPOPUP+3
#define DISPID_IHTMLPOPUP_ISOPEN                                  DISPID_HTMLPOPUP+4

//    DISPIDs for interface IHTMLAppBehavior

#define DISPID_IHTMLAPPBEHAVIOR_APPLICATIONNAME                   DISPID_HTMLAPP+0
#define DISPID_IHTMLAPPBEHAVIOR_VERSION                           DISPID_HTMLAPP+1
#define DISPID_IHTMLAPPBEHAVIOR_ICON                              DISPID_HTMLAPP+2
#define DISPID_IHTMLAPPBEHAVIOR_SINGLEINSTANCE                    DISPID_HTMLAPP+3
#define DISPID_IHTMLAPPBEHAVIOR_MINIMIZEBUTTON                    DISPID_HTMLAPP+5
#define DISPID_IHTMLAPPBEHAVIOR_MAXIMIZEBUTTON                    DISPID_HTMLAPP+6
#define DISPID_IHTMLAPPBEHAVIOR_BORDER                            DISPID_HTMLAPP+7
#define DISPID_IHTMLAPPBEHAVIOR_BORDERSTYLE                       DISPID_HTMLAPP+8
#define DISPID_IHTMLAPPBEHAVIOR_SYSMENU                           DISPID_HTMLAPP+9
#define DISPID_IHTMLAPPBEHAVIOR_CAPTION                           DISPID_HTMLAPP+10
#define DISPID_IHTMLAPPBEHAVIOR_WINDOWSTATE                       DISPID_HTMLAPP+11
#define DISPID_IHTMLAPPBEHAVIOR_SHOWINTASKBAR                     DISPID_HTMLAPP+12
#define DISPID_IHTMLAPPBEHAVIOR_COMMANDLINE                       DISPID_HTMLAPP+13

//    DISPIDs for interface IHTMLAppBehavior2

#define DISPID_IHTMLAPPBEHAVIOR2_CONTEXTMENU                      DISPID_HTMLAPP+14
#define DISPID_IHTMLAPPBEHAVIOR2_INNERBORDER                      DISPID_HTMLAPP+15
#define DISPID_IHTMLAPPBEHAVIOR2_SCROLL                           DISPID_HTMLAPP+16
#define DISPID_IHTMLAPPBEHAVIOR2_SCROLLFLAT                       DISPID_HTMLAPP+17
#define DISPID_IHTMLAPPBEHAVIOR2_SELECTION                        DISPID_HTMLAPP+18

//    DISPIDs for interface IHTMLAppBehavior3

#define DISPID_IHTMLAPPBEHAVIOR3_NAVIGABLE                        DISPID_HTMLAPP+19

//    DISPIDs for interface IHTMLPrivateWindow

#define DISPID_IHTMLPRIVATEWINDOW_SUPERNAVIGATE                   
#define DISPID_IHTMLPRIVATEWINDOW_GETPENDINGURL                   
#define DISPID_IHTMLPRIVATEWINDOW_SETPICSTARGET                   
#define DISPID_IHTMLPRIVATEWINDOW_PICSCOMPLETE                    
#define DISPID_IHTMLPRIVATEWINDOW_FINDWINDOWBYNAME                
#define DISPID_IHTMLPRIVATEWINDOW_GETADDRESSBARURL                

//    DISPIDs for interface IHTMLPrivateWindow2

#define DISPID_IHTMLPRIVATEWINDOW2_NAVIGATEEX                     
#define DISPID_IHTMLPRIVATEWINDOW2_GETINNERWINDOWUNKNOWN          

//    DISPIDs for interface IHTMLPrivateWindow3

#define DISPID_IHTMLPRIVATEWINDOW3_OPENEX                         
#define DISPID_IHTMLPRIVATEWINDOW3_NAVIGATEEX2                    

//    DISPIDs for interface IHTMLPrivateWindow4

#define DISPID_IHTMLPRIVATEWINDOW4_SUPERNAVIGATE2                 
#define DISPID_IHTMLPRIVATEWINDOW4_SUPERNAVIGATE3                 

//    DISPIDs for interface ISubDivisionProvider

#define DISPID_ISUBDIVISIONPROVIDER_GETSUBDIVISIONCOUNT           
#define DISPID_ISUBDIVISIONPROVIDER_GETSUBDIVISIONTABS            
#define DISPID_ISUBDIVISIONPROVIDER_SUBDIVISIONFROMPT             

//    DISPIDs for interface IElementBehaviorUI

#define DISPID_IELEMENTBEHAVIORUI_ONRECEIVEFOCUS                  
#define DISPID_IELEMENTBEHAVIORUI_GETSUBDIVISIONPROVIDER          
#define DISPID_IELEMENTBEHAVIORUI_CANTAKEFOCUS                    

//    DISPIDs for interface IElementAdorner

#define DISPID_IELEMENTADORNER_DRAW                               
#define DISPID_IELEMENTADORNER_HITTESTPOINT                       
#define DISPID_IELEMENTADORNER_GETSIZE                            
#define DISPID_IELEMENTADORNER_GETPOSITION                        
#define DISPID_IELEMENTADORNER_ONPOSITIONSET                      

//    DISPIDs for interface IHTMLEditor

#define DISPID_IHTMLEDITOR_PREHANDLEEVENT                         
#define DISPID_IHTMLEDITOR_POSTHANDLEEVENT                        
#define DISPID_IHTMLEDITOR_TRANSLATEACCELERATOR                   
#define DISPID_IHTMLEDITOR_INITIALIZE                             
#define DISPID_IHTMLEDITOR_NOTIFY                                 
#define DISPID_IHTMLEDITOR_GETCOMMANDTARGET                       
#define DISPID_IHTMLEDITOR_GETELEMENTTOTABFROM                    
#define DISPID_IHTMLEDITOR_ISEDITCONTEXTUIACTIVE                  
#define DISPID_IHTMLEDITOR_TERMINATEIMECOMPOSITION                
#define DISPID_IHTMLEDITOR_ENABLEMODELESS                         

//    DISPIDs for interface IHTMLEditingServices

#define DISPID_IHTMLEDITINGSERVICES_DELETE                        
#define DISPID_IHTMLEDITINGSERVICES_PASTE                         
#define DISPID_IHTMLEDITINGSERVICES_PASTEFROMCLIPBOARD            
#define DISPID_IHTMLEDITINGSERVICES_LAUNDERSPACES                 
#define DISPID_IHTMLEDITINGSERVICES_INSERTSANITIZEDTEXT           
#define DISPID_IHTMLEDITINGSERVICES_URLAUTODETECTCURRENTWORD      
#define DISPID_IHTMLEDITINGSERVICES_URLAUTODETECTRANGE            
#define DISPID_IHTMLEDITINGSERVICES_SHOULDUPDATEANCHORTEXT        
#define DISPID_IHTMLEDITINGSERVICES_ADJUSTPOINTERFORINSERT        
#define DISPID_IHTMLEDITINGSERVICES_FINDSITESELECTABLEELEMENT     
#define DISPID_IHTMLEDITINGSERVICES_ISELEMENTSITESELECTABLE       
#define DISPID_IHTMLEDITINGSERVICES_ISELEMENTUIACTIVATABLE        
#define DISPID_IHTMLEDITINGSERVICES_ISELEMENTATOMIC               
#define DISPID_IHTMLEDITINGSERVICES_POSITIONPOINTERSINMASTER      

//    DISPIDs for interface ISelectionObject2

#define DISPID_ISELECTIONOBJECT2_SELECT                           
#define DISPID_ISELECTIONOBJECT2_ISPOINTERINSELECTION             
#define DISPID_ISELECTIONOBJECT2_EMPTYSELECTION                   
#define DISPID_ISELECTIONOBJECT2_DESTROYSELECTION                 
#define DISPID_ISELECTIONOBJECT2_DESTROYALLSELECTION              

//    DISPIDs for interface IEditDebugServices

#define DISPID_IEDITDEBUGSERVICES_GETCP                           
#define DISPID_IEDITDEBUGSERVICES_SETDEBUGNAME                    
#define DISPID_IEDITDEBUGSERVICES_SETDISPLAYPOINTERDEBUGNAME      
#define DISPID_IEDITDEBUGSERVICES_DUMPTREE                        
#define DISPID_IEDITDEBUGSERVICES_LINESINELEMENT                  
#define DISPID_IEDITDEBUGSERVICES_FONTSONLINE                     
#define DISPID_IEDITDEBUGSERVICES_GETPIXEL                        
#define DISPID_IEDITDEBUGSERVICES_ISUSINGBCKGRNRECALC             
#define DISPID_IEDITDEBUGSERVICES_ISENCODINGAUTOSELECT            
#define DISPID_IEDITDEBUGSERVICES_ENABLEENCODINGAUTOSELECT        
#define DISPID_IEDITDEBUGSERVICES_ISUSINGTABLEINCRECALC           

//    DISPIDs for interface IPrivacyServices

#define DISPID_IPRIVACYSERVICES_ADDPRIVACYINFOTOLIST              

//    DISPIDs for interface IHTMLFilterPainter

#define DISPID_IHTMLFILTERPAINTER_INVALIDATERECTUNFILTERED        
#define DISPID_IHTMLFILTERPAINTER_INVALIDATERGNUNFILTERED         
#define DISPID_IHTMLFILTERPAINTER_CHANGEELEMENTVISIBILITY         

//    DISPIDs for interface IHTMLFilterPaintSite

#define DISPID_IHTMLFILTERPAINTSITE_DRAWUNFILTERED                
#define DISPID_IHTMLFILTERPAINTSITE_HITTESTPOINTUNFILTERED        
#define DISPID_IHTMLFILTERPAINTSITE_INVALIDATERECTFILTERED        
#define DISPID_IHTMLFILTERPAINTSITE_INVALIDATERGNFILTERED         
#define DISPID_IHTMLFILTERPAINTSITE_CHANGEFILTERVISIBILITY        
#define DISPID_IHTMLFILTERPAINTSITE_ENSUREVIEWFORFILTERSITE       
#define DISPID_IHTMLFILTERPAINTSITE_GETDIRECTDRAW                 
#define DISPID_IHTMLFILTERPAINTSITE_GETFILTERFLAGS                

//    DISPIDs for interface IElementNamespacePrivate

#define DISPID_IELEMENTNAMESPACEPRIVATE_ADDTAGPRIVATE             

//    DISPIDs for interface IElementBehaviorFactory

#define DISPID_IELEMENTBEHAVIORFACTORY_FINDBEHAVIOR               

//    DISPIDs for interface IElementNamespace

#define DISPID_IELEMENTNAMESPACE_ADDTAG                           

//    DISPIDs for interface IElementNamespaceTable

#define DISPID_IELEMENTNAMESPACETABLE_ADDNAMESPACE                

//    DISPIDs for interface IElementNamespaceFactory

#define DISPID_IELEMENTNAMESPACEFACTORY_CREATE                    

//    DISPIDs for interface IElementNamespaceFactory2

#define DISPID_IELEMENTNAMESPACEFACTORY2_CREATEWITHIMPLEMENTATION 

//    DISPIDs for interface IElementNamespaceFactoryCallback

#define DISPID_IELEMENTNAMESPACEFACTORYCALLBACK_RESOLVE           

//    DISPIDs for interface IElementBehavior

#define DISPID_IELEMENTBEHAVIOR_INIT                              
#define DISPID_IELEMENTBEHAVIOR_NOTIFY                            
#define DISPID_IELEMENTBEHAVIOR_DETACH                            

//    DISPIDs for interface IElementBehaviorSite

#define DISPID_IELEMENTBEHAVIORSITE_GETELEMENT                    
#define DISPID_IELEMENTBEHAVIORSITE_REGISTERNOTIFICATION          

//    DISPIDs for interface IElementBehaviorSiteOM

#define DISPID_IELEMENTBEHAVIORSITEOM_REGISTEREVENT               
#define DISPID_IELEMENTBEHAVIORSITEOM_GETEVENTCOOKIE              
#define DISPID_IELEMENTBEHAVIORSITEOM_FIREEVENT                   
#define DISPID_IELEMENTBEHAVIORSITEOM_CREATEEVENTOBJECT           
#define DISPID_IELEMENTBEHAVIORSITEOM_REGISTERNAME                
#define DISPID_IELEMENTBEHAVIORSITEOM_REGISTERURN                 

//    DISPIDs for interface IElementBehaviorSiteOM2

#define DISPID_IELEMENTBEHAVIORSITEOM2_GETDEFAULTS                

//    DISPIDs for interface IElementBehaviorRender

#define DISPID_IELEMENTBEHAVIORRENDER_DRAW                        
#define DISPID_IELEMENTBEHAVIORRENDER_GETRENDERINFO               
#define DISPID_IELEMENTBEHAVIORRENDER_HITTESTPOINT                

//    DISPIDs for interface IElementBehaviorSiteRender

#define DISPID_IELEMENTBEHAVIORSITERENDER_INVALIDATE              
#define DISPID_IELEMENTBEHAVIORSITERENDER_INVALIDATERENDERINFO    
#define DISPID_IELEMENTBEHAVIORSITERENDER_INVALIDATESTYLE         

//    DISPIDs for interface IElementBehaviorCategory

#define DISPID_IELEMENTBEHAVIORCATEGORY_GETCATEGORY               

//    DISPIDs for interface IElementBehaviorSiteCategory

#define DISPID_IELEMENTBEHAVIORSITECATEGORY_GETRELATEDBEHAVIORS   

//    DISPIDs for interface IElementBehaviorSubmit

#define DISPID_IELEMENTBEHAVIORSUBMIT_GETSUBMITINFO               
#define DISPID_IELEMENTBEHAVIORSUBMIT_RESET                       

//    DISPIDs for interface IElementBehaviorFocus

#define DISPID_IELEMENTBEHAVIORFOCUS_GETFOCUSRECT                 

//    DISPIDs for interface IElementBehaviorLayout

#define DISPID_IELEMENTBEHAVIORLAYOUT_GETSIZE                     
#define DISPID_IELEMENTBEHAVIORLAYOUT_GETLAYOUTINFO               
#define DISPID_IELEMENTBEHAVIORLAYOUT_GETPOSITION                 
#define DISPID_IELEMENTBEHAVIORLAYOUT_MAPSIZE                     

//    DISPIDs for interface IElementBehaviorLayout2

#define DISPID_IELEMENTBEHAVIORLAYOUT2_GETTEXTDESCENT             

//    DISPIDs for interface IElementBehaviorSiteLayout

#define DISPID_IELEMENTBEHAVIORSITELAYOUT_INVALIDATELAYOUTINFO    
#define DISPID_IELEMENTBEHAVIORSITELAYOUT_INVALIDATESIZE          
#define DISPID_IELEMENTBEHAVIORSITELAYOUT_GETMEDIARESOLUTION      

//    DISPIDs for interface IElementBehaviorSiteLayout2

#define DISPID_IELEMENTBEHAVIORSITELAYOUT2_GETFONTINFO            

//    DISPIDs for interface IHostBehaviorInit

#define DISPID_IHOSTBEHAVIORINIT_POPULATENAMESPACETABLE
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\msidcrl.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//
/*******************************************************************************
 * FILE
 *      ppcrl.h
 *
 * DESCRIPTION
 *      Public Passport client runtime library header. Distributed to partners
 *      along with the associated exports library and dynamic link library. Defines
 *      the public interface by which hosting partner applications make use
 *      of the Passport client runtime library.
 *
 * COMPATIBILITY NOTES
 *      Current implementation is per M2 Passport functionality. Contents
 *      of this file subject to change prior to 3.0 release. After 3.0, the
 *      header and library will maintain backward compile compatibility
 *      in subsequent versions.
 *
 *      Support for authentication based on client certificates was pulled
 *      from the 3.0 release. As a result, all cert-based code related to
 *      the API has been disabled. Fields are still left in the API's
 *      in anticipation of this future functionality, but the calls
 *      will fail with PPCRL_E_CERTIFICATE_AUTHENTICATION_NOT_SUPPORTED
 *      if non null/empty values are passed in.
 *
 * (C) Copyright 2002-2004, Microsoft Corporation. All Right Reserved.
 *
 ******************************************************************************/
#ifndef PPCRL_SCRIPT_ERROR_CODES
#pragma once

// #ifdef PPCRL_LIB
#define IDCRL_API  HRESULT __stdcall

/* disabled - otherwise IA64 build in NT complain multiple defineition of the same function Uniniatlize
#else
#ifdef PPCRL_EXPORTS
#define IDCRL_API __declspec(dllexport) HRESULT __stdcall
#else
#define IDCRL_API __declspec(dllimport) HRESULT __stdcall
#endif
#endif
*/

#define IDCRL_API_VERSION_1 1
#define IDCRL_API_VERSION_CURRENT IDCRL_API_VERSION_1

#define  IDCRL_BINARY_VERSION   "5"
#define  IDCRL_UI_CONTRACT_VERSION "1"


#ifdef __cplusplus
extern "C" {
#endif

#endif /* not defined PPCRL_SCRIPT_ERROR_CODES */

//
// Error/success code definitions
//

#ifdef PPCRL_SCRIPT_ERROR_CODES
    #define SEVERITY_SUCCESS 0
    #define SEVERITY_ERROR 1
    #define FACILITY_ITF 4
    #define MAKE_HRESULT(sev,fac,code) (((sev<<31)|(fac<<16)|((code))))
#endif

#define PPCRL_HRESULT_BASE    0x8800

#define PPCRL_SUCCESS_CODE(x) MAKE_HRESULT(SEVERITY_SUCCESS, FACILITY_ITF, PPCRL_HRESULT_BASE|(x))
#define PPCRL_ERROR_CODE(x) MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_HRESULT_BASE|(x))

//
// Authentication State
//

//
// Failure codes are 0x800488XX, success codes are 0x000488XX
// TODO: Go through and update comments with all actual codes for reference just prior to release
//

#define PPCRL_AUTHSTATE_E_UNAUTHENTICATED                           PPCRL_ERROR_CODE(0x00)  // 0x80048800

// returned by STS in as auth state, when the DA ticket is expired
#define PPCRL_AUTHSTATE_E_EXPIRED                                   PPCRL_ERROR_CODE(0x01)
#define PPCRL_AUTHSTATE_S_AUTHENTICATED_OFFLINE                     PPCRL_SUCCESS_CODE(0x02) // Offline login from hashed creds
#define PPCRL_AUTHSTATE_S_AUTHENTICATED_PASSWORD                    PPCRL_SUCCESS_CODE(0x03) // Online login with password, Returned by the server.
#define PPCRL_AUTHSTATE_S_AUTHENTICATED_PARTNER                     PPCRL_SUCCESS_CODE(0x04) // Online login with partner, used in internal flows.

//Reserved
//#define PPCRL_AUTHSTATE_S_AUTHENTICATED_SECURITY_KEY                PPCRL_SUCCESS_CODE(0x04)
//#define PPCRL_AUTHSTATE_S_AUTHENTICATED_STRONG_PASSWORD             PPCRL_SUCCESS_CODE(0x05) // ?? Returned by the server ??
//FUTURE: #define PPCRL_AUTHSTATE_S_AUTHENTICATED_CERTIFICATE                 PPCRL_SUCCESS_CODE(0x06)

#define PPCRL_AUTHREQUIRED_E_PASSWORD                               PPCRL_ERROR_CODE(0x10) // password is required for authentication
//Reserved
#define PPCRL_AUTHREQUIRED_E_SECURITY_KEY                           PPCRL_ERROR_CODE(0x11)
//#define PPCRL_AUTHREQUIRED_E_STRONG_PASSWORD                        PPCRL_ERROR_CODE(0x12)
#define PPCRL_AUTHREQUIRED_E_CERTIFICATE                            PPCRL_ERROR_CODE(0x13)

// The auth required status is unknown, in case, we cannot retrieve it from the token bag
#define PPCRL_AUTHREQUIRED_E_UNKNOWN                                PPCRL_ERROR_CODE(0x14)

#define PPCRL_REQUEST_E_AUTH_SERVER_ERROR                           PPCRL_ERROR_CODE(0x20) // Request failure, IDCRL did not get back a response
#define PPCRL_REQUEST_E_BAD_MEMBER_NAME_OR_PASSWORD                 PPCRL_ERROR_CODE(0x21)
#define PPCRL_REQUEST_E_PASSWORD_LOCKED_OUT                         PPCRL_ERROR_CODE(0x23)
#define PPCRL_REQUEST_E_PASSWORD_LOCKED_OUT_BAD_PASSWORD_OR_HIP     PPCRL_ERROR_CODE(0x24)
#define PPCRL_REQUEST_E_TOU_CONSENT_REQUIRED                        PPCRL_ERROR_CODE(0x25) // not used
#define PPCRL_REQUEST_E_FORCE_RENAME_REQUIRED                       PPCRL_ERROR_CODE(0x26)
#define PPCRL_REQUEST_E_FORCE_CHANGE_PASSWORD_REQUIRED              PPCRL_ERROR_CODE(0x27)
#define PPCRL_REQUEST_E_STRONG_PASSWORD_REQUIRED                    PPCRL_ERROR_CODE(0x28)
#define PPCRL_REQUEST_E_NO_CERTIFICATES_AVAILABLE                   PPCRL_ERROR_CODE(0x29)
#define PPCRL_REQUEST_E_PARTNER_NOT_FOUND                           PPCRL_ERROR_CODE(0x2a)
#define PPCRL_REQUEST_E_PARTNER_HAS_NO_ASYMMETRIC_KEY               PPCRL_ERROR_CODE(0x2b)
#define PPCRL_REQUEST_E_INVALID_POLICY                              PPCRL_ERROR_CODE(0x2c)
#define PPCRL_REQUEST_E_INVALID_MEMBER_NAME                         PPCRL_ERROR_CODE(0x2d)
#define PPCRL_REQUEST_E_MISSING_PRIMARY_CREDENTIAL                  PPCRL_ERROR_CODE(0x2e)
#define PPCRL_REQUEST_E_PENDING_NETWORK_REQUEST                     PPCRL_ERROR_CODE(0x2f)
#define PPCRL_REQUEST_E_FORCE_CHANGE_SQSA                           PPCRL_ERROR_CODE(0x30)
#define PPCRL_REQUEST_E_PASSWORD_EXPIRED                            PPCRL_ERROR_CODE(0x31)
#define PPCRL_REQUEST_E_PENDING_USER_INPUT                          PPCRL_ERROR_CODE(0x32)
#define PPCRL_REQUEST_E_MISSING_HIP_SOLUTION                        PPCRL_ERROR_CODE(0x33)
#define PPCRL_REQUEST_E_PROFILE_ACCRUE_REQUIRED                     PPCRL_ERROR_CODE(0x34)
#define PPCRL_REQUEST_S_PROFILE_ACCRUE_DONE                         PPCRL_SUCCESS_CODE(0x35)
#define PPCRL_REQUEST_E_EMAIL_VALIDATION_REQUIRED                   PPCRL_ERROR_CODE(0x36)
#define PPCRL_REQUEST_E_PARTNER_NEED_STRONGPW                       PPCRL_ERROR_CODE(0x37)
#define PPCRL_REQUEST_E_PARTNER_NEED_STRONGPW_EXPIRY                PPCRL_ERROR_CODE(0x38)
//Login server sends this request status when DA ticket is expired, apps should use this request
// status to determine if the ticket is expired.
#define PPCRL_REQUEST_E_AUTH_EXPIRED                                PPCRL_ERROR_CODE(0x39)

#define PPCRL_REQUEST_E_USER_REQUESTED_HELP                         PPCRL_ERROR_CODE(0x40)
#define PPCRL_REQUEST_E_USER_FORGOT_PASSWORD                        PPCRL_ERROR_CODE(0x41)
#define PPCRL_REQUEST_E_USER_CANCELED                               PPCRL_ERROR_CODE(0x42)
#define PPCRL_REQUEST_E_USER_EDIT_PASSPORT                          PPCRL_ERROR_CODE(0x43)
#define PPCRL_REQUEST_E_USER_PASSPORTLOGO                           PPCRL_ERROR_CODE(0x44)
#define PPCRL_REQUEST_E_USER_SHOW_PRIVACY_STATEMENT                 PPCRL_ERROR_CODE(0x45)
#define PPCRL_REQUEST_E_USER_SHOW_TERMS_OF_USE                      PPCRL_ERROR_CODE(0x46)
#define PPCRL_REQUEST_S_IO_PENDING                                  PPCRL_SUCCESS_CODE(0x47)
#define PPCRL_REQUEST_E_NO_NETWORK                                  PPCRL_ERROR_CODE(0x48)
// The request status is unknown, in case, we cannot retrieve it from the token bag
#define PPCRL_REQUEST_E_UNKNOWN                                     PPCRL_ERROR_CODE(0x49)

// reserved
#define PPCRL_REQUEST_E_TOKEN_BEYOND_LIFTIME                        PPCRL_ERROR_CODE(0x50)

// reserved
#define PPCRL_REQUEST_E_TOKEN_TARGETS_MISMATCH                      PPCRL_ERROR_CODE(0x51)

//  indicate the client needs to re-post to another STS
//  STS url should be part of the response
#define PPCRL_REQUEST_E_WRONG_DA                                    PPCRL_ERROR_CODE(0x52)

// parent consent for the KID is required
#define PPCRL_REQUEST_E_KID_HAS_NO_CONSENT                          PPCRL_ERROR_CODE(0x53)

// new error code 3.2
#define PPCRL_REQUEST_E_RSTR_MISSING_REFERENCE_URI                  PPCRL_ERROR_CODE(0x54)
//reserved
#define PPCRL_REQUEST_E_RSTR_FAULT                                  PPCRL_ERROR_CODE(0x55)
#define PPCRL_REQUEST_E_RSTR_MISSING_REFERENCED_TOKEN               PPCRL_ERROR_CODE(0x56)
#define PPCRL_REQUEST_E_RSTR_MISSING_BASE64CERT                     PPCRL_ERROR_CODE(0x57)
#define PPCRL_REQUEST_E_RSTR_MISSING_TOKENTYPE                      PPCRL_ERROR_CODE(0x58)
#define PPCRL_REQUEST_E_RSTR_MISSING_SERVICENAME                    PPCRL_ERROR_CODE(0x59)
#define PPCRL_REQUEST_E_RSTR_INVALID_TOKENTYPE                      PPCRL_ERROR_CODE(0x5a)
#define PPCRL_REQUEST_E_RSTR_MISSING_PRIVATE_KEY                    PPCRL_ERROR_CODE(0x5b)

// This error is returned if the STS cannot verify the timestamp on the request. In this case,
// STS will also send back the server time and IDCRL can adjust
#define PPCRL_REQUEST_E_INVALID_SERVICE_TIMESTAMP                   PPCRL_ERROR_CODE(0x5c) //0x8004885c
#define PPCRL_REQUEST_E_INVALID_PKCS10_TIMESTAMP                    PPCRL_ERROR_CODE(0x5d) //0x8004885d
#define PPCRL_REQUEST_E_INVALID_PKCS10                              PPCRL_ERROR_CODE(0x5e) //0x8004885e
// NOTE: 2nd range for PPCRL_REQUEST_E errors starts at 0x800488E0. This one is full!

#define PPCRL_S_NO_MORE_IDENTITIES                                  PPCRL_SUCCESS_CODE(0x60)
#define PPCRL_S_TOKEN_TYPE_DOES_NOT_SUPPORT_SESSION_KEY             PPCRL_SUCCESS_CODE(0x61)
#define PPCRL_S_NO_SUCH_CREDENTIAL                                  PPCRL_SUCCESS_CODE(0x62)
#define PPCRL_S_NO_AUTHENTICATION_REQUIRED                          PPCRL_SUCCESS_CODE(0x63)

#define PPCRL_E_AUTH_CONTEXT_ALREADY_IN_USE                         PPCRL_ERROR_CODE(0x60)
#define PPCRL_E_IDENTITY_NOT_AUTHENTICATED                          PPCRL_ERROR_CODE(0x61)
#define PPCRL_E_UNABLE_TO_RETRIEVE_SERVICE_TOKEN                    PPCRL_ERROR_CODE(0x62)

//Reserved
//#define PPCRL_E_INVALID_DERIVATION_METHOD                           PPCRL_ERROR_CODE(0x63)
//#define PPCRL_E_INVALID_DERIVATION_PARAMS                           PPCRL_ERROR_CODE(0x64)
//#define PPCRL_E_INVALID_DERIVATION_ITERATIONS_PARAM                 PPCRL_ERROR_CODE(0x65)
//#define PPCRL_E_INVALID_DERIVATION_SALT_PARAM                       PPCRL_ERROR_CODE(0x66)
//#define PPCRL_E_INVALID_DERIVED_KEY_LENGTH                          PPCRL_ERROR_CODE(0x67)
#define PPCRL_E_CERTIFICATE_AUTHENTICATION_NOT_SUPPORTED            PPCRL_ERROR_CODE(0x68)
#define PPCRL_E_AUTH_SERVICE_UNAVAILABLE                            PPCRL_ERROR_CODE(0x69)
#define PPCRL_E_INVALID_AUTH_SERVICE_RESPONSE                       PPCRL_ERROR_CODE(0x6a)
#define PPCRL_E_UNABLE_TO_INITIALIZE_CRYPTO_PROVIDER                PPCRL_ERROR_CODE(0x6b)
#define PPCRL_E_NO_MEMBER_NAME_SET                                  PPCRL_ERROR_CODE(0x6c)
#define PPCRL_E_CALLBACK_REQUIRED                                   PPCRL_ERROR_CODE(0x6d)
#define PPCRL_E_DISCONTINUE_AUTHENTICATION                          PPCRL_ERROR_CODE(0x6e)
#define PPCRL_E_INVALIDFLAGS                                        PPCRL_ERROR_CODE(0x6f)
#define PPCRL_E_UNABLE_TO_RETRIEVE_CERT                             PPCRL_ERROR_CODE(0x70)
#define PPCRL_E_INVALID_RSTPARAMS                                   PPCRL_ERROR_CODE(0x71)
#define PPCRL_E_MISSING_FILE                                        PPCRL_ERROR_CODE(0x72)
#define PPCRL_E_ILLEGAL_LOGONIDENTITY_FLAG                          PPCRL_ERROR_CODE(0x73)

#define PPCRL_E_CERT_NOT_VALID_FOR_MINTTL                           PPCRL_ERROR_CODE(0x74) // the certificate is found, but not valid for the minTTL, minTTL could be too big
#define PPCRL_S_OK_CLIENTTIME                                       PPCRL_SUCCESS_CODE(0x75)

#define PPCRL_E_CERT_INVALID_ISSUER                                 PPCRL_ERROR_CODE(0x76) // the certificate is found, but not valid for the minTTL, minTTL could be too big
#define PPCRL_E_NO_CERTSTORE_FOR_ISSUERS                            PPCRL_ERROR_CODE(0x77)

// Indicates there was a problem with offline login, more information can be had by calling GetAuthState API.
#define PPCRL_E_OFFLINE_AUTH                                        PPCRL_ERROR_CODE(0x78)

// GetCertificate failed because POP message could not be signed. This is an unexepcted error.
#define PPCRL_E_SIGN_POP_FAILED                                    PPCRL_ERROR_CODE(0x79)

// VerifyCertificate failed because POP was invalid. Sender may not possess the private key
// for the certificate
#define PPCRL_E_CERT_INVALID_POP                                    PPCRL_ERROR_CODE(0x80)

// The calling application is not signed. In order to call GetCertificate API, the application exe
// must be signed with Microsoft Code signing certificate (https://codesignaoc for more details)
//
#define PPCRL_E_CALLER_NOT_SIGNED                                   PPCRL_ERROR_CODE(0x81) ////0x80048881

// Identity is processing another API call. Please wait for some time and retry the call
#define PPCRL_E_BUSY                                                PPCRL_ERROR_CODE(0x82) ////0x80048882

// There was a failure while downloading the config or ui dlls from passport
// config servers. Most likely internet connection is not setup correctly.
#define PPCRL_E_DOWNLOAD_FILE_FAILED                                PPCRL_ERROR_CODE(0x83) ////0x80048883

// There was an error generating the certificate request. The error could be due
// to bad parameters supplied by the application (usually out of range keylength)
// See CryptGenKey API for allowed key lengths. 0 and 384-16,384 will usually
// work. Trace will provide more info on exact cause.
#define PPCRL_E_BUILD_CERT_REQUEST_FAILED                           PPCRL_ERROR_CODE(0x84) ////0x80048884

// Returned by GetCertificate API if it cannot find a certificate for the identity
#define PPCRL_E_CERTIFICATE_NOT_FOUND                               PPCRL_ERROR_CODE(0x85) ////0x80048885

// Returned by ExportAuthState API
#define PPCRL_E_AUTHBLOB_TOO_LARGE                                  PPCRL_ERROR_CODE(0x86) ////0x80048886
#define PPCRL_E_AUTHBLOB_NOT_FOUND                                  PPCRL_ERROR_CODE(0x87) ////0x80048887
#define PPCRL_E_AUTHBLOB_INVALID                                    PPCRL_ERROR_CODE(0x88) ////0x80048888

#define PPCRL_E_EXTPROP_NOTFOUND                                    PPCRL_ERROR_CODE(0x89) ////0x80048889

#define PPCRL_E_RESPONSE_TOO_LARGE                                   PPCRL_ERROR_CODE(0x8A) ////0x8004888A

#define PPCRL_E_EXTENDED_ERROR_NOT_SET                              PPCRL_ERROR_CODE(0x8B) ////0x8004888B

#define PPCRL_E_USER_NOTFOUND                                       PPCRL_ERROR_CODE(0x8C) ////0x8004888C

// Added in 4.0. Returned by Initialize(Ex) if signature on ppcrlconfig.dll or
// ppcrlui.dll cannot be validated.
#define PPCRL_E_SIGCHECK_FAILED                                     PPCRL_ERROR_CODE(0x8D) ////0x8004888D

// added in 4.5. Returned by AuthIdentitytoService if flag SERVICE_TOKEN_FROM_CACHE

// invalid credential target name( too long, empty )
#define PPCRL_E_CREDTARGETNAME_INVALID                                PPCRL_ERROR_CODE(0x8F) ////0x8004888F

// persisted credential invalid
#define PPCRL_E_CREDINFO_CORRUPTED                                PPCRL_ERROR_CODE(0x90) ////0x80048890

// requested cred property is not persisted
#define PPCRL_E_CREDPROP_NOTFOUND                                 PPCRL_ERROR_CODE(0x91) ////0x80048891

// No linked accounts were found for the given identity
#define PPCRL_E_NO_LINKEDACCOUNTS                                 PPCRL_ERROR_CODE(0x92) ////0x80048892

// Linked id handle was not found
#define PPCRL_E_NO_LINKEDHANDLE                                   PPCRL_ERROR_CODE(0x93) ////0x80048893

// Old certificate was used, a new cert should be requested
#define PPCRL_E_CERT_CA_ROLLOVER                                  PPCRL_ERROR_CODE(0x94) ////0x80048894

// Could not lookup realm infor for federated login, maybe returned by LogonIdentityEx
#define PPCRL_E_REALM_LOOKUP                                      PPCRL_ERROR_CODE(0x95) ////0x80048895

// There is no such realm provisioned. User will be logged into WLID instead.
//#define PPCRL_E_NO_SUCH_REALM                                     PPCRL_ERROR_CODE(0x96) ////0x80048896

// The provided identity name belongs to a forbidden namespace, it canot be authenticated to WLID
//
#define PPCRL_E_FORBIDDEN_NAMESPACE                               PPCRL_ERROR_CODE(0x97) ////0x80048897

// Internal success code to indicate realm cache is still fresh
//
#define PPCRL_S_QUERYREALM_SKIPPED                              PPCRL_SUCCESS_CODE(0x98) ////0x48898

// A linked identity handle does not have the CID set. CID is required to be present, this is an
// unexpected condition, likely a bug.
//
#define PPCRL_E_IDENTITY_NOCID                                  PPCRL_ERROR_CODE(0x99) ////0x80048899

// Could not create IE object for SHA1 Auth
#define PPCRL_E_IE_MISCONFIGURED                                  PPCRL_ERROR_CODE(0x9A) ////0x8004889A

// Certificate thumbprint is blank or invald
#define PPCRL_E_CERTIFICATE_THUMB_INVALID            PPCRL_ERROR_CODE(0x9B) ////0x8004889B

// Call failed because No UI flag is used
#define PPCRL_E_NO_UI                                           PPCRL_ERROR_CODE(0x9C) ////0x8004889C

// Call failed because use cancel the operation in UI
#define PPCRL_E_USER_CANCEL                                     PPCRL_ERROR_CODE(0x9D) ////0x8004889D

#ifdef UNDER_CE
// Call failed because user has no existing account and chooses to sign up new account in web
#define PPCRL_E_USER_SIGN_UP_NEW                                PPCRL_ERROR_CODE(0xB0) ////0x800488B0

// Call failed because user want to see more information about Live ID
#define PPCRL_E_USER_SEE_MORE_INFO                              PPCRL_ERROR_CODE(0xB1) ////0x800488B1

//Device could not successfully connect to the Auth service
//due to possible time difference between device & auth service server.
#define PPCRL_E_AUTH_SERVICE_UNAVAILABLE_WITH_TIME_WARNING      PPCRL_ERROR_CODE(0xB2) ////0x8004889E
#endif


//******************************************************************************
// 2nd range of request status codes starts with 0x800488E0

// User requested offline login but there was no hashed password. They must
// create hashed password first by doing a successful online login.
#define PPCRL_REQUEST_E_MISSING_HASHED_PASSWORD                   PPCRL_ERROR_CODE(0xE0) ////0x800488E0

// The client issuing this request is no longer supported by passport login server.
// User must upgrade to a newer version of the application built with a supported
// version of IDCRL. It may be returned in request status by LogonIdentity* APIs.
#define PPCRL_REQUEST_E_CLIENT_DEPRECATED                         PPCRL_ERROR_CODE(0xE1) ////0x800488E1

// The request was cancelled by calling CancelPendingRequest API.
#define PPCRL_REQUEST_E_CANCELLED                                 PPCRL_ERROR_CODE(0xE2) ////0x800488E2

// Application provided incorrect key length for certificate request.
#define PPCRL_REQUEST_E_INVALID_PKCS10_KEYLEN                     PPCRL_ERROR_CODE(0xE3) ////0x800488E3

// Application tried to submit a request with duplicate service target names in PCMultiRSTParams parameter.
// This is not supported. In this case no network call is made. This error can be returned by the
// LogonIdentityEx or AuthIdentityToServiceEx fuctions.
#define  PPCRL_REQUEST_E_DUPLICATE_SERVICETARGET                  PPCRL_ERROR_CODE(0xE4) ////0x800488E4

// The authentication token has expired, re-authentication is required by the partner. Different partners
// choose different time windows for authentication. In a multiple request, some requests may succeed
// and others fail with this error.
#define PPCRL_REQUEST_E_FORCE_SIGNIN                              PPCRL_ERROR_CODE(0xE5) ////0x800488E5

// Partner needs a certificate to login.
#define PPCRL_REQUEST_E_PARTNER_NEED_CERTIFICATE                  PPCRL_ERROR_CODE(0xE6) ////0x800488E6

// Partner needs a PIN to login.
#define PPCRL_REQUEST_E_PARTNER_NEED_PIN                          PPCRL_ERROR_CODE(0xE7) ////0x800488E7

// Partner needs a password to login.
#define PPCRL_REQUEST_E_PARTNER_NEED_PASSWORD                     PPCRL_ERROR_CODE(0xE8) ////0x800488E8

// Following two error codes are returned by LogonIdentityEx, AuthIdentityToServiceEx
// if we are unable to generate the SLC request (this will happen for guest users)
// In this case IDCRL automatically submits the request without the SLC and returned
// one of these return codes. PPCRL_S_OK_NO_SLC for sync and PPCRL_S_IO_PENDING_NO_SLC for async
#define PPCRL_REQUEST_S_OK_NO_SLC                                           PPCRL_SUCCESS_CODE(0xE9)
#define PPCRL_REQUEST_S_IO_PENDING_NO_SLC                                   PPCRL_SUCCESS_CODE(0xEA)


// There was an schannel failure while sending the request. Make sure SSL is enabled in IE.
#define PPCRL_REQUEST_E_SCHANNEL_ERROR                            PPCRL_ERROR_CODE(0xEB) ////0x800488EB

// There was an error parsing the certificate blob in the response.
#define PPCRL_REQUEST_E_CERT_PARSE_ERROR                       PPCRL_ERROR_CODE(0xEC) ////0x800488EC

// There was an error talking to partner STS
#define PPCRL_REQUEST_E_PARTNER_SERVER_ERROR                   PPCRL_ERROR_CODE(0xED) ////0x800488ED

// User submitted a username in a managed domain that WLID cannot authenticate
// If  LOGONIDENTITY_AUTO_PARTNER_REDIRECT flag was set in LogonIdentity call, IDCRL
// will automatically resubmit request to partner. Otherwise, application should
// take user consent and call LogonIdentity again with the FEDERATED flag.
//
#define PPCRL_REQUEST_E_PARTNER_LOGIN                          PPCRL_ERROR_CODE(0xEE) ////0x800488EE


// Flow is disabled on the server
#define PPCRL_REQUEST_E_FLOWDISABLED                           PPCRL_ERROR_CODE(0xEF) ////0x800488EF

// User is not linked
#define PPCRL_REQUEST_E_USER_NOT_LINKED                        PPCRL_ERROR_CODE(0xF0) ////0x800488F0

// Federation: STS returns this to indicate account conversion needed
#define PPCRL_REQUEST_E_ACCOUNT_CONVERSION_NEEDED              PPCRL_ERROR_CODE(0xF1) ////0x800488F1

// Partner STS returned wsse:FailedAuthentication error
#define PPCRL_REQUEST_E_PARTNER_BAD_MEMBER_NAME_OR_PASSWORD    PPCRL_ERROR_CODE(0xF2) ////0x800488F2

// WLID STS returned unknown username/password error AND user is in federated namespace
#define PPCRL_REQUEST_E_BAD_MEMBER_NAME_OR_PASSWORD_FED        PPCRL_ERROR_CODE(0xF3) ////0x800488F3

// User must solve HIP before logging in (this is different from password lockout HIP)
#define PPCRL_REQUEST_E_HIP_ON_FIRST_LOGIN                     PPCRL_ERROR_CODE(0xF4) ////0x800488F4

// Not used: For infocard login, invalid infocard was presented to the server
#define PPCRL_REQUEST_E_INVALID_CARDSPACE_TOKEN                PPCRL_ERROR_CODE(0xF5) ////0x800488F5

// A valid trace location has not been given through a call to InitializeTrace()
#define PPCRL_E_TRACE_TRACING_NOT_INITIALIZED            PPCRL_ERROR_CODE(0xF6) ////0x800488F6

//-----------------------------------------------------------------------------
//
//  Error codes from ppclienterr.h
//
// Most errors in this section are either developer actionable during development
// (PP_E_CRL_NOT_INITIALIZED: fix code to initialize IDCRL before using APIs) or
// not actionable at all (PP_E_CRL_OUT_OF_MEMORY: system is low on memory).
//
// There are a few errors that the user can fix or investigate. Search for
// 'USER ACTIONABLE' to find such error codes.
//-----------------------------------------------------------------------------

#define     PP_E_CRL_BASE                       0x8000
// Denotes Out of memory condition, not actionable.
#define     PP_E_CRL_OUT_OF_MEMORY              MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  1) // 0x8001

// Returned by some utility functions for NULL arguments, not actionable.
#define     PP_E_CRL_UNEXPECTED_NULL_ARG        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  2) // 0x8002

//Returned by some utility functions if they fail to load the UI or config dlls,
// force download of new files from passport servers by deleting the current files
#define     PP_E_CRL_CREATE_XMLDOC_FAILED       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  3) // 0x8003
#define     PP_E_CRL_LOAD_XMLDOC_FAILED         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  4) // 0x8004

// Reserved
#define     PP_E_CRL_CREATE_FILE_FAILED         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  5) // 0x8005

// Could not acquire a mutex for an operation. Close other idcrl enabled applications and try again.
#define     PP_E_CRL_CREATE_MUTEX_FAILED        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  6) // 0x8006
#define     PP_E_CRL_OBTAIN_MUTEX_FAILED        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  7) // 0x8007

// IDCRL is not initialized, call initialize(Ex) before calling any other APIs
#define     PP_E_CRL_NOT_INITIALIZED            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  8) // 0x8008

// Reserved
#define     PP_E_CRL_TOKENS_TOO_LONG            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  9) // 0x8009
#define     PP_E_CRL_TOKENFILE_NOT_CREATED      MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  10) // 0x800a

// primary credential(password) is not set on the identity handle, Call API to set password first.
#define     PPCRL_PRIMARYCREDS_MISSING          MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  11) // 0x800b

// The handle specified by the application is invalid, make sure it is not destroyed already.
#define     PPCRL_NO_SUCH_HANDLE                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  12) // 0x800c

// Session key was not found, not actionable.
#define     PPCRL_NO_SESSION_KEY                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  14) // 0x800e

// Used for identity sharing, reserved.
#define     PP_E_CRL_WRONG_TOKEN_VERSION        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  15) // 0x800f
#define     PP_E_CRL_WRONG_TOKENFILE_SIZE       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  16) // 0x8010

// Reserved
#define     PPCRL_CERTCONTEXT_MISSING           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  17) // 0x8011
#define     PPCRL_SECONDARYCREDS_MISSING        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  18) // 0x8012
#define     PPCRL_SITEID_MISSING                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  19) // 0x8013
#define     PPCRL_CONSENT_NEEDED                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  20) // 0x8014
#define     PP_E_CRL_INVALID_REDIRECT_URL       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  21) // 0x8015

// Some parameters to make a request to the login server are missing, not actionable.
#define     PPCRL_REQUESTPARAMS_MISSING         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  24) // 0x8018

// Reserved
#define     PPCRL_REQUEST_NOT_MADE              MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  25) // 0x8019

// Initialize(Ex) called with an invalid GUID, make sure it is in the registry format {DF60E2DF-88AD-4526-AE21-83D130EF0F68}
#define     PP_E_CRL_INVALID_APP_GUID           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  26) // 0x801a

// Initialize(Ex) called with an invalid client version, use IDCRL_API_VERSION_CURRENT defined in msidcrl.h
#define     PP_E_CRL_INVALID_VERSION            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  27) // 0x801b

// Reserved
#define     PP_E_CRL_INVALID_HANDLE_NAME        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  28) // 0x801c

// CreateIdentityHandle was passed an invalid flag
#define     PP_E_CRL_ILLEGAL_IDENTITY_FLAG      MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  29) // 0x801d

// Invalid pointer was given to an internal API to free, not actionable.
#define     PP_E_CRL_NOT_PPCRL_MEMORY           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  30) // 0x801e

// Application tried to get or set an invalid identity property name, must come from PASSPORTIDENTITYPROPERTY enum
#define     PP_E_CRL_INVALID_PROPERTY_TYPE      MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  31) // 0x801f

// Application tried to call an API with an invalid identity handle. Make sure it is not destroyed already.
#define     PP_E_CRL_NO_SUCH_IDENTITY           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  32) // 0x8020

//Reserved
#define     PP_E_CRL_UNKOWN_CRED_TYPE           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 33) // 0x8021
#define     PP_E_CRL_BAD_FILE                   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  34) // 0x8022
#define     PP_E_CRL_INVALID_MEMBER_NAME        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  35) // 0x8023

// Application could not read password while trying to save or validate hashed password, Call API to set password first
#define     PP_E_PPCRL_MISSING_PASSWORD         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 36) // 0x8025

// Reserved
#define     PP_E_PPCRL_AUTH_NEED_TOU            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 38)
#define     PP_E_PPCRL_AUTH_NEED_EMAIL_VALIDATIION MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 39)
#define     PP_S_TOKEN_REQUEST_FAILED           MAKE_HRESULT(SEVERITY_SUCCESS, FACILITY_ITF, PP_E_CRL_BASE + 40)

// USER ACTIONABLE: Secure storage is not available on this OS (pstorec.dll is missing). Make sure you are running XP.
#define     PPCRL_E_PLATFORM_SECURE_STORAGE_NOT_AVAILABLE MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 41)

// Reserved
#define     PP_E_CRL_BAD_OPTION                 MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x2A)

// InitializeEx was called with one of the options having an incorrect length, fix application code
#define     PP_E_CRL_BAD_OPTIONLENGTH           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x2B)

// InitializEx was called with ivalid option id. Use one from IDCRL_OPTION_ID enum.
#define     PP_E_CRL_BAD_OPTIONID               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x2C)

// USER ACTIONABLE: InitializeEx was called with a very long Proxy list. Max supported is 4*INTERNET_MAX_URL_LENGTH.
#define     PP_E_CRL_PROXYLIST_TOOLONG          MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x2D)

// USER ACTIONABLE: InitializeEx was called with a very long Proxy bypass list. Max supported is 4*INTERNET_MAX_URL_LENGTH.
#define     PP_E_CRL_PROXYBYPASSLIST_TOOLONG    MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x2E)

// USER ACTIONABLE: InitializeEx was called with a NULL option value. Remove the option if the value is NULL.
#define     PP_E_CRL_NULL_OPTION                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x2F)

// Inialize(Ex) was called with NO_UI mode, but a UI API was called. Initialize IDCRL in the UI mode to use UI.
#define     PPCRL_E_NO_UI_MODE                  MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x30)

// AuthIdentityToServiceEx was called with some value in dwTokenRequestFlags, it must be 0.
#define     PP_E_CRL_ILLEGAL_REQUEST_FLAG       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x31)

// Reserved
#define     PP_E_CRL_NO_SERVICE_NAME            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x32)

// No token bag was associated to the identity handle, make sure identity handle is not destroyed.
#define     PP_E_CRL_NO_TOKENBAG                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x33)

// Reserved
#define     PP_E_CRL_STATUS_UNINITIALIZED       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x34)

#define     PPCRL_E_LOCK                       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x36)
#define     PPCRL_E_SYNC_NOLOCK                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x37)
#define     PPCRL_E_HTTP_QUERYINFO             MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x38)


// IDCRL blocked your network call because you tried to use the callback thread
// to make other requests. This is against Wininet recommendations and can cause
// wininet problems. You must change your code to make network calls from another
// thread.
#define     PP_E_CRL_NW_CALL_BLOCKED            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x39) // 0x8039

// Notification manager is not initialized. This is a code bug in IDCRL. Report
// to IDCRL team for investigation.
#define     PP_E_CRL_NOTIFY_NOT_INITIALIZED     MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x40) // 0x8040

// Error while sending notification
#define     PP_E_CRL_NOTIFY_SEND_FAILED         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x41) // 0x8041

// Error while receiving notification, this error will not be visible to the calling application
#define     PP_E_CRL_NOTIFY_RECV_FAILED         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x42) // 0x8042

// Error while receiving notification, this error will not be visible to the calling application.
#define     PP_E_CRL_NOTIFY_NO_MESSAGE          MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE + 0x43) // 0x8043

// IDCRL is already initialized
// This is not an error in 4.0 because multiple "apps" may try to initialize IDCRL in
// the same process in 4.0 (BHO and WinLive favorites in the browser)
#define     PPCRL_S_ALREADY_INITIALIZED        MAKE_HRESULT(SEVERITY_SUCCESS, FACILITY_ITF, PP_E_CRL_BASE +  0x44) // 0x8044

// Some other app is also using IDCRL, unitialize was skipped
#define     PPCRL_S_STILL_INUSE                MAKE_HRESULT(SEVERITY_SUCCESS, FACILITY_ITF, PP_E_CRL_BASE +  0x45) // 0x8045

// Some other app has already initialized IDCRL to point to a different environment.
// This is an error condition and application cannot continue.
#define     PPCRL_E_INITIALIZED_DIFF_ENVIRONMENT MAKE_HRESULT(SEVERITY_SUCCESS, FACILITY_ITF, PP_E_CRL_BASE +  0x46) // 0x8046

#define     PPCRL_E_INTERNETOPEN                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x47) // 0x8047
#define     PPCRL_E_INTERNETCONNECT             MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x48) // 0x8048
#define     PPCRL_E_HTTPOPENREQUEST             MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x49) // 0x8049
#define     PPCRL_E_INTERNETSETOPTION           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x50) // 0x8050
#define     PPCRL_E_HTTPSENDREQUEST             MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x51) // 0x8051

// Device id specific error codes.
//
#define     PPCRL_E_DEVICEID_CONSENT_NEEDED     MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x4a) // 0x804a
#define     PPCRL_E_DEVICEID_PROTOCOL_INVALID   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x4b) // 0x804b
#define     PPCRL_E_DEVICEID_PROTOCOL_ERROR     MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x4c) // 0x804c
#define     PPCRL_E_DEVICEID_CERTSTORE_ERROR    MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x4d) // 0x804d
#define     PPCRL_E_DEVICEID_INTERNAL_ERROR     MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x4e) // 0x804e
#define     PPCRL_E_DEVICEID_INVALID_NAME       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x4f) // 0x804f
#define     PPCRL_E_DEVICEID_NOPASSWORD         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x52) // 0x8052
#define     PPCRL_E_DEVICEID_NOMEMBERNAME       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x53) // 0x8053
#define     PPCRL_E_DEVICEID_SERVERCALLNEEDED   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x54) // 0x8054
#define     PPCRL_E_DEVICEID_CONSENT_REVOKED    MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x55) // 0x8055
#define     PPCRL_E_DEVICEID_INVALID_SAML          MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x56) // 0x8056
#define     PPCRL_E_DEVICEID_AUDIENCE_MISMATCH     MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x57) // 0x8057
#define     PPCRL_E_DEVICEID_NOTBEFORE_MISMATCH    MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x58) // 0x8058
#define     PPCRL_E_DEVICEID_NOTONORAFTER_MISMATCH MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x59) // 0x8059
#define     PPCRL_E_DEVICEID_INVALID_CERT          MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x5a) // 0x805a
#define     PPCRL_E_DEVICEID_INVALID_SIGNATURE     MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x5b) // 0x805b
#define     PPCRL_E_DEVICEID_USE_RANDOM_ALGO    MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x5c) // 0x805c
#define     PPCRL_E_DEVICEID_BUFFER_WRONG_SIZE    MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x5d) // 0x805d
#define     PPCRL_E_INVALID_ARG                 MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x5e) // 0x805e
#define     PPCRL_E_DEVICEID_DISABLED           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x5f) // 0x805f
#define     PPCRL_E_DEVICEID_ADMIN_DISABLED     MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x60) // 0x8060
#define     PPCRL_E_DEVICEID_INVALID_PASSWORD   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x61) // 0x8061
#define     PPCRL_E_DEVICEID_ACCESS_DENIED      MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x62) // 0x8062

// Start at 70, leave some room for device ID

// Application tried to persist a linked identity handle. Service tokens for linked handles are persisted when the main
// identity handle is persisted.
#define     PPCRL_E_PERSIST_LINKEDHANDLE        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x70) // 0x8070

#define     PPCRL_E_INTERNETSETCALLBACK         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_BASE +  0x71) // 0x8071


#define     PP_E_PROTOCOL_BASE                  PP_E_CRL_BASE + 0x100

// Reserved
#define     PPCRL_SESSIONKEY_MISSING            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_PROTOCOL_BASE + 1) // 0x8101
#define     PPCRL_ERROR_RESPONSE                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_PROTOCOL_BASE + 2) // 0x8102

// Bad response xml was received from the server. Not actionable.
#define     PPCRL_RESPONSE_BADXML               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_PROTOCOL_BASE + 3) // 0x8103

//Reserved
#define     PPCRL_REQUEST_BADXML                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_PROTOCOL_BASE + 4) // 0x8104

// GetWebAuthUrl was called but the token could not be read (t= was missing or the length was 0). Not actionable.
#define     PPCRL_TOKEN_CORRUPTED               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_PROTOCOL_BASE + 5) // 0x8105

// Could not decode session key from auth response, not actionable.
#define     PPCRL_BASE64DECODE_FAILED           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_PROTOCOL_BASE + 6) //0x8106

// Malformed response from login server, not actionable.
#define     PPCRL_RESPONSE_MISSINGREF           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_PROTOCOL_BASE + 7) // 0x8107
#define     PPCRL_RESPONSE_NOTIMESTAMPORRSTR    MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_PROTOCOL_BASE + 8) // 0x8108
#define     PPCRL_RESPONSE_NOSIGNATUREELEMENT   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_PROTOCOL_BASE + 9) // 0x8109
#define     PPCRL_RESPONSE_NOCIPHERELEMENT      MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_PROTOCOL_BASE + 0xa) // 0x810a

// GetWebAuthUrl was called but the token type is not SERVICE_TOKEN_TYPE_PROPRIETARY. Call logon identity to get legacy passport token.
#define     PPCRL_TOKEN_WRONG_TYPE              MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_PROTOCOL_BASE + 0xb) // 0x810b

#define     PP_E_CRED_BASE                      PP_E_CRL_BASE + 0x200

//Reserved
#define     PP_E_DYNAMIC_SALT_CORRUPTED         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRED_BASE + 1) // 0x8201

// Internally used
#define     PP_E_DECRYPTION_FAILURE             MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRED_BASE + 2) // 0x8202

//Reserved
#define     PP_E_TAMPERED_DATA                  MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRED_BASE + 3) // 0x8203

// Internal obfuscator class is not initialized, not actionable.
#define     PP_E_OBFUSCATOR_NOT_INITIALIZED     MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRED_BASE + 4) // 0x8204

//Reserved
#define     PPCRL_NOT_INITIALIZED               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRED_BASE + 5) // 0x8205
#define     PPCRL_ENCODING_FAILED               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRED_BASE + 6) // 0x8206


#define     PP_E_CRL_CONFIG_BASE                PP_E_CRL_BASE + 0x250
// Reserved
#define     PP_E_CRL_CONFIG_NOT_INITIALIZED     MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 0) // 0x8250

// Registry operations failed, use trace to determine problem.
#define     PP_E_CRL_REG_OPEN_FAILED            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 1) // 0x8251
#define     PP_E_CRL_REG_QUERY_FAILED           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 2) // 0x8252
#define     PP_E_CRL_REG_SET_FAILED             MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 3) // 0x8253

// Reserved
#define     PP_E_CRL_GETWINDOWSDIR_FAILED       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 4) // 0x8254
#define     PP_E_OBFUSCATE_FAILED               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 5) // 0x825
#define     PP_E_LOAD_CONFIGDATA_FAILED         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 6) // 0x8256
#define     PP_E_CRL_SAVE_DATA_FAILED           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 7) // 0x8257
#define     PP_E_CRL_WRITE_DATA_FAILED          MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 8) // 0x8258

// IDCRL is already initialized, review code and remove multiple Initialization calls.
#define     PP_E_CRL_CONFIG_ALREADY_INITIALIZED MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 9) // 0x8259

// Required files or directories were missing/could not be created. Use trace to determine problem.
#define     PP_E_CRL_CACHE_DIR_ERROR            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 10)// 0x825a

// Downloading of config or ui dlls failed. Make sure passport service is not down, internet connection is good and proxy is setup correctly.
#define     PP_E_CRL_SERVICE                    MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 11)// 0x825b

// Reserved
#define     PP_E_CORRUPT                        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 20) // 0x8264

// USER ACTIONABLE: IDCRL tried to download config or UI dlls but there was no internet connection. Make sure internet connection is good.
#define     PP_E_NOTCONNECTED                   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 21) // 0x8265

//Reserved
#define     PP_E_PASSPORTDOWN                   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 22) // 0x8266
#define     PP_E_UPDATEFAILED                   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 23) // 0x8267
#define     PP_E_UPDATEINPROGRESS               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 24) // 0x8268

// System API to create a temp file name failed. Not actionable.
#define     PP_E_CRL_GET_TEMP_FILENAME_FAILED   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 25) // 0x8269

// Temp UI file name was empty. Not actionable.
#define     PP_E_CRL_EMPTY_TEMP_FILE            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 26) // 0x826A

// Could not read data from Config dll. Try to download config dll again and reinitialize IDCRL.
#define     PP_E_CRL_SELECTNODE_FAILED          MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 27) // 0x826B
#define     PP_E_CRL_GET_ATTR_FAILED            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 28) // 0x826C
#define     PP_E_CRL_GET_ITEM_FAILED            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 29) // 0x826D
#define     PP_E_CRL_TOOMANY_XMLNODES           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 0x2a) // 0x826E
#define     PP_E_CRL_TOOMANY_XMLATTRIBS         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 0x2b) // 0x826F

// Reserved
#define     PP_E_CRL_AQURIE_CONTEXT_FAILED       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 38) // 0x8276
#define     PP_E_CRL_IMPORT_KEY_FAILED           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 39) // 0x8277
#define     PP_E_CRL_CREATE_HASH_FAILED          MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 40) // 0x8278
#define     PP_E_CRL_HASH_DATA_FAILED            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 41) // 0x8279

//Signature verification on response failed. Not actionable.
#define     PP_E_CRL_INVALID_SIG                 MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 42) // 0x827A
#define     PP_E_CRL_DECODE_KEY_FAILED           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 43) // 0x827B
#define     PP_E_CRL_DECODE_SIG_FAILED           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 44) // 0x827C

// file found in place of directory, when trying to load configuration dll.
#define     PP_E_CRL_FILE_INSTEAD_OF_DIR        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 45)// 0x827D

#define     PP_E_CRL_CLSID_DATA_MALFORMED           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CONFIG_BASE + 46)// 0x827E

#define     PP_E_CRL_CREDUI_BASE                    PP_E_CRL_BASE + 0x300

// Could not initialize ATL support for the UI. Not actionable.
#define     PP_E_CRL_CREDUI_ATLAXWININIT_FAIL       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CREDUI_BASE + 0x1) // 0x8301

// Could not create the UI. Not actionable.
#define     PP_E_CRL_CREDUI_CREATEWINDOW_FAIL       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CREDUI_BASE + 0x2) // 0x8302

// Reserved
#define     PP_E_CRL_CREDUI_HOSTRETRIEVAL_FAIL      MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CREDUI_BASE + 0x3) // 0x8303

// Could not get Host window pointer. Not actionable.
#define     PP_E_CRL_CREDUI_CONTROLRETRIEVAL_FAIL   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CREDUI_BASE + 0x4) // 0x8304

//Reserved
#define     PP_E_CRL_CREDUI_SHOWWINDOW_FAIL         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CREDUI_BASE + 0x5) // 0x8305
#define     PP_E_CRL_CREDUI_UPDATEWINDOW_FAIL       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CREDUI_BASE + 0x6) // 0x8306
#define     PP_E_CRL_CREDUI_REDRAWWINDOW_FAIL       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CREDUI_BASE + 0x7) // 0x8307
#define     PP_E_CRL_CREDUI_INVALIDSIZE_FAIL        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CREDUI_BASE + 0x8) // 0x8308
#define     PP_E_CRL_CREDUI_USERNOTSPECIFIED_FAIL       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CREDUI_BASE + 0x9) // 0x8309

//Could not retrieve UI file name. Not actionable.
#define     PP_E_CRL_CREDUI_LOCALUIMISSING          MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PP_E_CRL_CREDUI_BASE + 0xA) // 0x830A


//
// This section defines errors reported by GetExtendedError API for SQM
//
#define     PPCRL_E_SQM_BASE                    PP_E_CRL_BASE + 0x400

// Could not lock the identity or request handle. This should never happen. :)
#define     PPCRL_E_SQM_UNKNOWN                                   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x1) // 0x8401
#define     PPCRL_E_SQM_REQUEST_CANCELLED                         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x2) // 0x8402
#define     PPCRL_E_SQM_QUERY_STATUSCODE                          MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x3) // 0x8403
#define     PPCRL_E_SQM_OUTOFMEMORY                               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x4) // 0x8404
#define     PPCRL_E_SQM_READRESPONSE                              MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x5) // 0x8405
#define     PPCRL_E_SQM_RESPONSE_BADXML                           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x6) // 0x8406
#define     PPCRL_E_SQM_INTERNET_OTHER                            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x7) // 0x8407
#define     PPCRL_E_SQM_INTERNET_UI                               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x8) // 0x840B
#define     PPCRL_E_SQM_INTERNET_SYNTAX                           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x9) // 0x8409
#define     PPCRL_E_SQM_INTERNET_NAME_NOT_RESOLVED                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0xA) // 0x840A
#define     PPCRL_E_SQM_INTERNET_LOGIN                            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0xB) // 0x840B
#define     PPCRL_E_SQM_INTERNET_PROXY                            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0xC) // 0x840C
#define     PPCRL_E_SQM_INTERNET_OPERATION_CANCELLED              MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0xD) // 0x840D
#define     PPCRL_E_SQM_INTERNET_INCORRECT_HANDLE_STATE           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0xE) // 0x840E
#define     PPCRL_E_SQM_INTERNET_CANNOT_CONNECT                   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0xF) // 0x840F
#define     PPCRL_E_SQM_INTERNET_CONNECTION_ABORTED               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x10) // 0x8410
#define     PPCRL_E_SQM_INTERNET_CONNECTION_RESET                 MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x11) // 0X8411
#define     PPCRL_E_SQM_INTERNET_SEC_CERT_DATE_INVALID            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x12) // 0X8412
#define     PPCRL_E_SQM_INTERNET_SEC_CERT_CN_INVALID              MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x13) // 0X8413
#define     PPCRL_E_SQM_INTERNET_SEC_CERT_ERRORS                  MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x14) // 0X8414
#define     PPCRL_E_SQM_INTERNET_SEC_CERT_NO_REV                  MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x15) // 0X8415
#define     PPCRL_E_SQM_INTERNET_SEC_CERT_REV_FAILED              MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x16) // 0X8416
#define     PPCRL_E_SQM_INTERNET_CLIENT_AUTH_CERT_NEEDED          MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x17) // 0X8417
#define     PPCRL_E_SQM_INTERNET_INVALID_CA                       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x18) // 0X8418
#define     PPCRL_E_SQM_INTERNET_SECURITY_WARNING                 MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x19) // 0X8419
#define     PPCRL_E_SQM_INTERNET_POST_IS_NON_SECURE               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x1A) // 0X841A
#define     PPCRL_E_SQM_FTP                                       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x1B) // 0X841B
#define     PPCRL_E_SQM_GOPHER                                    MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x1C) // 0X841C
#define     PPCRL_E_SQM_HTTP_HEADER                               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x1D) // 0X841D
#define     PPCRL_E_SQM_HTTP_DOWNLEVEL_SERVER                     MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x1E) // 0X841E
#define     PPCRL_E_SQM_HTTP_INVALID_SERVER_RESPONSE              MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x1F) // 0X841F
#define     PPCRL_E_SQM_HTTP_INVALID_QUERY_REQUEST                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x20) // 0X8420
#define     PPCRL_E_SQM_HTTP_REDIRECT                             MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x21) // 0X8421
#define     PPCRL_E_SQM_HTTP_COOKIE                               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x22) // 0X8422
#define     PPCRL_E_SQM_INTERNET_SECURITY_CHANNEL_ERROR           MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x23) // 0X8423
#define     PPCRL_E_SQM_INTERNET_DISCONNECTED                     MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x24) // 0X8424
#define     PPCRL_E_SQM_INTERNET_SERVER_UNREACHABLE               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x25) // 0X8425
#define     PPCRL_E_SQM_INTERNET_PROXY_SERVER_UNREACHABLE         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x26) // 0X8426
#define     PPCRL_E_SQM_INTERNET_PROXYSCRIPT                      MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x27) // 0X8427
#define     PPCRL_E_SQM_INTERNET_SEC_INVALID_CERT                 MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x28) // 0X8428
#define     PPCRL_E_SQM_INTERNET_SEC_CERT_REVOKED                 MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x29) // 0X8429
#define     PPCRL_E_SQM_INTERNET_AUTODIAL                         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x2A) // 0X842A
#define     PPCRL_E_SQM_INTERNET_NOT_INITIALIZED                  MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x2B) // 0X842B
#define     PPCRL_E_SQM_LOCK                                      MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x2C) // 0X842C
#define     PPCRL_E_SQM_SYNC_NOLOCK                               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x2D) // 0X842D
#define     PPCRL_E_SQM_HTTP_QUERYINFO                            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x2E) // 0X842E
#define     PPCRL_E_SQM_RESPONSE_TOO_LARGE                        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x2F) // 0X842F
#define     PPCRL_E_SQM_INVALID_AUTH_SERVICE_RESPONSE             MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x30) // 0X8430
#define     PPCRL_E_SQM_NO_TOKENBAG                               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x31) // 0X8431
#define     PPCRL_E_SQM_RESPONSE_NOTIMESTAMPORRSTR                MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x32) // 0X8432
#define     PPCRL_E_SQM_RESPONSE_NOSIGNATUREELEMENT               MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x33) // 0X8433
#define     PPCRL_E_SQM_RESPONSE_NOCIPHERELEMENT                  MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x34) // 0X8434
#define     PPCRL_E_SQM_REQUEST_E_RSTR_MISSING_REFERENCE_URI      MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x35) // 0X8435
#define     PPCRL_E_SQM_REQUEST_E_RSTR_MISSING_REFERENCED_TOKEN   MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x36) // 0X8436
#define     PPCRL_E_SQM_WAIT_ABANDONED                            MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x37) // 0X8437
#define     PPCRL_E_SQM_WAIT_TIMEOUT                              MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x38) // 0X8438
#define     PPCRL_E_SQM_INTERNET_TIMEOUT                          MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x39) // 0x8439
#define     PPCRL_E_SQM_INVALID_PARAMETER                         MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x40) // 0x8440
#define     PPCRL_E_SQM_NOTCONNECTED                              MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x41) // 0x8441
#define     PPCRL_E_SQM_REQUEST_E_CANCELLED                       MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x42) // 0x8442
#define     PPCRL_E_SQM_DECRYPTION_FAILURE                        MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, PPCRL_E_SQM_BASE + 0x43) // 0x8443

#ifndef PPCRL_SCRIPT_ERROR_CODES

//
// PPCRL function declarations
//

#ifdef __cplusplus
namespace IDCRL
{
#endif
    /***************************************************************************
     * PassportIdentityHandle & PassportUIAuthContextHandle
     **************************************************************************/
    typedef struct _tagPIH {} * PassportIdentityHandle;
    typedef struct _tagPUACH {} * PassportUIAuthContextHandle;
    typedef struct _tagPEIH {} * PassportEnumIdentitiesHandle;

#ifdef __cplusplus
    #define INVALID_PASSPORTIDENTITYHANDLE ((IDCRL::PassportIdentityHandle)0)
    #define INVALID_PASSPORTUIAUTHCONTEXTHANDLE ((IDCRL::PassportUIAuthContextHandle)0)
    #define INVALID_PASSPORTENUMIDENTITIESHANDLE ((IDCRL::PassportEnumIdentitiesHandle)0)
#else
    #define INVALID_PASSPORTIDENTITYHANDLE ((PassportIdentityHandle)0)
    #define INVALID_PASSPORTUIAUTHCONTEXTHANDLE ((PassportUIAuthContextHandle)0)
    #define INVALID_PASSPORTENUMIDENTITIESHANDLE ((PassportEnumIdentitiesHandle)0)
#endif

    /***************************************************************************
     * NOTIFICATION_CHANGE_TYPE enum
     *
     * ADDED IN RELEASE
     *      4.0
     *
     * DESCRIPTION
     *      IDS_USER_ACCOUNT_CHANGE: Creds were persisted or removed.
     *      IDS_USER_PROPERTY_CHANGE: user property, extended property changed.
     *
     *
     **************************************************************************/
    typedef enum _NOTIFICATION_CHANGE_TYPE
    {
        NOTIFICATION_CHANGE_ALL_BIT = 0x000000003,  // reserved
        IDS_USER_ACCOUNT_CHANGE     = 0x000000001,
        IDS_USER_PROPERTY_CHANGE    = 0x000000002
    } NOTIFICATION_CHANGE_TYPE;


    /***************************************************************************
     * NOTIFICATION_ACTION_TYPE enum
     *
     * ADDED IN RELEASE
     *      4.0
     *
     * DESCRIPTION
     *      IDS_NOTIFY_ADD: notification target was added
     *      IDS_NOTIFY_UPDATE: notification target was updated
     *      IDS_NOTIFY_DELETE: notification target was deleted
     *
     *
     **************************************************************************/
    typedef enum _NOTIFICATION_ACTION_TYPE
    {
        IDS_NOTIFY_ACTION_ALL_BIT = 0x000000007,  // reserved
        IDS_NOTIFY_ACTION_ADD       = 0x000000001,
        IDS_NOTIFY_ACTION_UPDATE    = 0x000000002,
        IDS_NOTIFY_ACTION_DELETE    = 0x000000004
    } NOTIFICATION_ACTION_TYPE;

    /***************************************************************************
     * IDSUserNotification
     *
     * ADDED IN RELEASE
     *      4.0
     *
     * DESCRIPTION
     *      Structure to the change data that is given to the application in the
     *      UserStateChangeCallback.
     * NOTE
     *      Application must make a copy of string buffers before returning
     *      from the callback because the memory will be freed by IDCRL as soon as
     *      the callback function returns
     **************************************************************************/
    typedef struct {
        DWORD   dwType;         //This and dwChangeID in the callback are the same
        DWORD   dwAction;       //Add or delete
        LPCWSTR wszAccountName;
        LPCWSTR wszCredType;
    } IDSUserNotification;

    /***************************************************************************
     * IDSUserPropertyNotification
     *
     * ADDED IN RELEASE
     *      4.0
     *
     * DESCRIPTION
     *      Structure to the change data that is given to the application in the
     *      UserStateChangeCallback.
     * NOTE
     *      Application must make a copy of string buffers before returning
     *      from the callback because the memory will be freed by IDCRL as soon as
     *      the callback function returns.
     *      If the property value is too large to pass in the notification,
     *      fValueTooLarge flag will be set to True. Apps must call
     *      GetUserExtendedProperty to get the actual value in this case.
     **************************************************************************/
    typedef struct {
        DWORD dwType;             // This and dwChangeID in the callback are same
        DWORD dwAction;           // Add, update or delete
        bool  bValueTooLarge;     // Property value is too large
        LPCWSTR wszAccountName;
        LPCWSTR wszPropertyName;
        LPCWSTR wszPropertyValue;
    } IDSUserPropertyNotification;

    /***************************************************************************
     * UserStateChangedCallback
     *
     * ADDED IN RELEASE
     *      4.0
     *
     * DESCRIPTION
     *      Callback notification for use state changes. This is called whenever
     *      there is a change to the user state. E.g. user tile change, persisted
     *      credentials change.
     *
     * INPUTS
     *      dwChangeID - Type of change, from NOTIFICATION_CHANGE_TYPE enum. This
     *                   same ID is also provided in the IDSUserNotification struct.
     *      pbChangeData - Pointer to the notification data. Exact type depends
     *      on the change ID.
     *
     * RESULT
     *
     * IMPORTANT
     *      This may be called by any number of threads and could be called
     *      by multiple threads at the same time. The implementor should take
     *      care to protect any resources accessed by this implementation
     *      from such clashes of access.
     *
     **************************************************************************/
    typedef HRESULT (__stdcall * UserStateChangedCallback)(
                __in DWORD    dwChangeID,
                __in LPVOID   pbChangeData);


    /***************************************************************************
     * IdentityChangedCallback
     *
     * DESCRIPTION
     *      Callback notification for asynchronous identity activity. This
     *      is used for all UI-based authentications, and optionally for
     *      asynchronous ui-less authentications. This is called whenever
     *      the state of the identity is changed and the hosting application
     *      may want to react to this change.
     *
     *      The hosting application can check the state of the identity
     *      to determine further action (see GetAuthState, below).
     *
     * INPUTS
     *      hIdentity - The identity with state that has changed
     *      pvVoid - Void pointer that was passed in to the LogonIdentity
     *          call for the hosting application to track state.
     *      bCanContinue - The library can continue with the authentication.
     *
     * RESULT
     *      Any failed HRESULT will cause the library to discontinue any
     *      pending authentication. Any successful HRESULT will cause
     *      the library to continue this authentication if it is able.
     *      Return PPCRL_E_DISCONTINUE_AUTHENTICATION to explicitly stop
     *      a pending authentication for no other reason than
     *      control of flow.
     *
     * IMPORTANT
     *      This may be called by any number of threads and could be called
     *      by multiple threads at the same time. The implementor should take
     *      care to protect any resources accessed by this implementation
     *      from such clashes of access.
     *
     **************************************************************************/

    typedef HRESULT (__stdcall * IdentityChangedCallback)(
                __in PassportIdentityHandle hIdentity,
                __in void * pvVoid,
                __in bool bCanContinue);

    /***************************************************************************
     * UPDATE_FLAG enum
     *
     * DESCRIPTION
     *      Flags controlling general behavior of the library passed
     *      in during the Initialize call. Normally the update
     *      mechanism operates periodically and automatically based
     *      on a time-out policy. These flags allow the hosting application
     *      to over-ride this behavior. They also allow the hosting application
     *      to indicate that it can operate in offline mode (an M2 feature).
     *
     *      IDCRL 3.2: OFFLINE_MODE_ALLOWED is ignored, it will mean the same as
     *      UPDATE_DEFAULT.
     *
     *      IDCRL 3.2: SKIP_CONNECTION_CHECK: When this mode is set, IDCRL will
     *      not check if a network and Internet connection is enabled before
     *      making network calls. In this case, you will get the default windows
     *      dialog to establish a connection if you are not connected already.
     *      The default IDCRL behavior is to fail with an error if there is no
     *      connection available or default connection is not established and
     *      user has chosen to "Always dial my default connection" setting in IE.
     *
     **************************************************************************/
    typedef enum _UPDATE_FLAG
    {
        UPDATE_FLAG_ALL_BIT = 0x00000000F,            // reserved
        DEFAULT_UPDATE_POLICY =   0x00000000,
        OFFLINE_MODE_ALLOWED =    0x00000001,
        NO_UI                =    0x00000002,
        SKIP_CONNECTION_CHECK=    0x00000004,
        SET_EXTENDED_ERROR =      0x00000008,
        SEND_VERSION = 0x00000010,  // reserved, don't use this flag
                                    //
                                    // internal notes only:
                                    //
                                    // Do NOT add it into UPDATE_FLAG_ALL_BIT, otherwise
                                    // partner applications using UPDATE_FLAG_ALL_BIT
                                    // would automatically pick up this flag.
                                    // We should also allow this flag in input flag checking

        UPDATE_DEFAULT       =    DEFAULT_UPDATE_POLICY // online, fall back to offline
    } UPDATE_FLAG;

    /***************************************************************************
     * PASSPORTCREDUIINFO structure
     *
     * DESCRIPTION
     *      Describes the user interface for those API calls in which
     *      the client runtime library may need to create a user interface
     *      to interact with the user. (Currently only LogonIdentity.)
     *
     **************************************************************************/
    typedef struct _PASSPORTCREDUIINFO
    {
        HWND hwndParent;
        POINT ptPosition;
        SIZE szSize;
        BOOL bShow;
    } PASSPORTCREDUIINFO, *PPASSPORTCREDUIINFO;
    typedef const PPASSPORTCREDUIINFO PCPASSPORTCREDUIINFO;

    /***************************************************************************
     * PASSPORTCREDCUSTOMUI structure
     *
     * DESCRIPTION
     *      Describes customizations to the appearance of the user
     *      interface.
     *
     **************************************************************************/


    typedef struct _PASSPORT_NAME_VALUE_PAIR
    {
        LPCWSTR szName;
        LPCWSTR szValue;
    } PASSPORT_NAME_VALUE;

    typedef struct _PASSPORTCREDCUSTOMUI
    {
        DWORD  cElements;
        PASSPORT_NAME_VALUE* customValues;    // # of element == cElements
    } PASSPORTCREDCUSTOMUI, *PPASSPORTCREDCUSTOMUI;
    typedef const PPASSPORTCREDCUSTOMUI PCPASSPORTCREDCUSTOMUI;



    /***************************************************************************
     * PASSPORTCREDTYPE enum
     *
     * DESCRIPTION
     *      Bit-wise flags representing the various types of credentials
     *      the client runtime can use. Supports the UI-less API surface.
     *
     **************************************************************************/
//    #define PPCRL_CREDTYPE_PASSWORD_A "ps:password"
// 116306    PPCRL: DCR -- Remove support for Security PIN (seclevel=100)
// 116306     #define PPCRL_CREDTYPE_PIN_A "ps:pin"

    #define PPCRL_CREDTYPE_ACTIVE            L"ps:active"
    #define PPCRL_CREDTYPE_PASSWORD          L"ps:password"
    #define PPCRL_CREDTYPE_MEMBERNAMEONLY    L"ps:membernameonly"
    #define PPCRL_CREDTYPE_VIRUTUALAPPPrefix L"ps:virtualapp="
    #define PPCRL_CREDTYPE_PIN               L"ps:pin"
    #define PPCRL_CREDTYPE_EID               L"ps:eid"

// 116306    PPCRL: DCR -- Remove support for Security PIN (seclevel=100)
// 116306     #define PPCRL_CREDTYPE_PIN_W L"ps:pin"

    /***************************************************************************
     * SERVICETOKENFLAGS enum
     *
     * DESCRIPTION
     *      Used for retrieving properties about a given identity handle.
     *
     **************************************************************************/
    typedef enum _SERVICETOKENFLAGS
    {
        SERVICE_TOKEN_TYPE_LEGACY_PASSPORT          = 0x00000001, //Deprecated, use SERVICE_TOKEN_TYPE_PROPRIETARY

        SERVICE_TOKEN_TYPE_WEBSSO                   = 0x00000002, //Deprecated, use SERVICE_TOKEN_TYPE_SAML

        SERVICE_TOKEN_TYPE_COMPACT_WEBSSO           = 0x00000004, //Deprecated, use SERVICE_TOKEN_TYPE_PROPRIETARY

        // This can be set in RSTParams.dwRequestFlags to request a SLC
        //
        SERVICE_TOKEN_TYPE_X509V3                   = 0x00000008, // added in 3.2

        SERVICE_TOKEN_CERT_IN_MEMORY_PRIVATE_KEY    = 0x00000010, // this can be used with SERVICE_TOKEN_TYPE_X509V3

        // Rest of bits in first byte reserved
        SERVICE_TOKEN_TYPE_ANY                      = 0x000000ff,

        //
        // Check the local cache for an existing service ticket.
        // If not set a call always results in a server request.
        // This is particularly useful for async service request
        // calls where the result puts the ticket in the
        // cache where it can be retrieved with a subsequent
        // call.
        //
        SERVICE_TOKEN_FROM_CACHE                    = 0x00010000,

        SERVICE_TOKEN_TYPE_SAML                     = SERVICE_TOKEN_TYPE_WEBSSO, //Response only

        // Proprietary ticket type includes both PPM and Compact tickets
        // These token types are combined into one to not break older clients
        // Older client will continue to see LEGACY_PASSPORT token type for
        // compact tickets and they can keep sending them to the partner server
        // just like they do the PPM tickets.
        SERVICE_TOKEN_TYPE_PROPRIETARY              = SERVICE_TOKEN_TYPE_LEGACY_PASSPORT //Response only

    } SERVICETOKENFLAGS;

    typedef enum _SERVICETOKEN_REQUEST_FLAGS
    {

        SERVICE_TOKEN_REQUEST_TYPE_NONE            = 0x00000000,

        SERVICE_TOKEN_REQUEST_TYPE_X509V3          = SERVICE_TOKEN_TYPE_X509V3

    } SERVICETOKEN_REQUEST_FLAGS;

    //
    // Used internally by IDCRL to indicate that no certificate requests
    // are to be made. MSN unified v2 bug 161946.
    //
    typedef enum _MULTIRSTPARAMS_FLAGS
    {
        REQUEST_DEFAULT                            = 0x00000000,
        REQUEST_NO_SLC                             = 0x00000001

    } MULTIRSTPARAMS_FLAGS;


    /***************************************************************************
     * IDENTITY_FLAG enum
     *
     * DESCRIPTION
     *      Flags controlling properties of a particular identity
     *      handle. May be combined and passed in to the
     *      dwFlags parameter to CreateIdentityHandle.
     *
     **************************************************************************/
    typedef enum _IDENTITY_FLAG
    {
        IDENTITY_ALL_BIT                   =        0x000007ff, // reserved
        IDENTITY_SHARE_ALL                 =        0x000000ff, // Specific bit semantics are reserved
        IDENTITY_LOAD_FROM_PERSISTED_STORE =        0x00000100, // this requires member name, and will do a look up in the persisted store
        IDENTITY_AUTHSTATE_ENCRYPTED       =        0x00000200,  // used by CreateIdentityHandleFromAuthState to indicate if the auth info is encrypted
        IDENTITY_DEVICEID_SYSTEM       =         0x00000400   // used by CreateIdentityHandle to indicate this is a System Device ID
    } IDENTITY_FLAG;


    /***************************************************************************
     * LOGON_FLAG enum
     *
     * DESCRIPTION
     *      Flags that can be passed into the various LogonIdentity API's
     *      to control the authentication process.
     *
     **************************************************************************/
    typedef enum _LOGON_FLAG
    {
        LOGONIDENTITY_ALL_BIT                   =   0x000001FF, // reserved
        LOGONIDENTITY_DEFAULT                   =   0x00000000,
        LOGONIDENTITY_ALLOW_OFFLINE             =   0x00000001,
        LOGONIDENTITY_FORCE_OFFLINE             =   0x00000002,
        LOGONIDENTITY_CREATE_OFFLINE_HASH       =   0x00000004,
        LOGONIDENTITY_ALLOW_PERSISTENT_COOKIES  =   0x00000008,
        LOGONIDENTITY_USE_EID_AUTH              =   0x00000010,
        LOGONIDENTITY_USE_LINKED_ACCOUNTS       =   0x00000020,
        LOGONIDENTITY_FEDERATED                 =   0x00000040,   // POST to partner STS
        LOGONIDENTITY_WLID                      =   0x00000080,   // POST to WLID STS
        LOGONIDENTITY_AUTO_PARTNER_REDIRECT     =   0x00000100    // Special flag for under-the-covers federation.
                                                                  // Talk to IDCRL team before using this flag.
     } LOGON_FLAG;

    /***************************************************************************
     * IDCRL_OPTION_IDS enum
     *
     * DESCRIPTION
     *      IDs of valid options that can be given to InitializeEx  or
     *      SetIdcrlOptions APIs. (Except IDCRL_OPTION_ENVIRONMENT, which can only
     *      be specified at Initialization time)
     *
     *      IDCRL_OPTION_ENVIRONMENT
     *      Valid environments names are Betaprep, INT, PPE and PROD plus some
     *      internal passport test environments. Apps can import environments.reg
     *      file to import URLs to all passport environments. Note that this option
     *      can only be specified at Initialization time.
     *
     **************************************************************************/
    typedef enum {
        IDCRL_OPTION_ALL_BIT                = 0x0000007F, // reserved
        IDCRL_OPTION_PROXY                  = 0x00000001, //INTERNET_OPTION_PROXY
        IDCRL_OPTION_CONNECT_TIMEOUT        = 0x00000002, //INTERNET_OPTION_CONNECT_TIMEOUT
        IDCRL_OPTION_SEND_TIMEOUT           = 0x00000004, //INTERNET_OPTION_SEND_TIMEOUT
        IDCRL_OPTION_RECEIVE_TIMEOUT        = 0x00000008, //INTERNET_OPTION_RECEIVE_TIMEOUT
        IDCRL_OPTION_PROXY_PASSWORD         = 0x00000010, //INTERNET_OPTION_PROXY_PASSWORD
        IDCRL_OPTION_PROXY_USERNAME         = 0x00000020, //INTERNET_OPTION_PROXY_USERNAME
        IDCRL_OPTION_ENVIRONMENT            = 0x00000040  //Point to the named environment
    } IDCRL_OPTION_ID;

    /***************************************************************************
     * IDCRL_SETOPTIONS_FLAG enum
     *
     * DESCRIPTION
     *      IDs of valid options that can be given to InitializeEx call
     *
     **************************************************************************/
    typedef enum {
        IDCRL_SETOPTIONS_DEFAULT             = 0x00000000,
        IDCRL_SETOPTIONS_SET                 = IDCRL_SETOPTIONS_DEFAULT,
        IDCRL_SETOPTIONS_RESET               = 0x00000001
    } IDCRL_SETOPTIONS_FLAG;

    /***************************************************************************
     * IDCRL_OPTION struct
     *
     * DESCRIPTION
     *      Holds an option for IDCRL initialization through InitializeEx API.
     *      dwId   : option id from IDCRL_OPTION_ID enum
     *      pValue : Option value passed in as a BYTE *. The actual data
     *                 structure will differ with the option id
     *      cbValue  : Byte size of the value
     *
     **************************************************************************/
    typedef struct {
        IDCRL_OPTION_ID dwId;
        BYTE *          pValue;
        size_t          cbValue;
    } IDCRL_OPTION, * LPIDCRL_OPTION;

    /***************************************************************************
     * IDCRL_OPTIONS struct
     *
     * DESCRIPTION
     *      Holds all options for IDCRL initialization through InitializeEx API.
     *      dwCount : Number of options
     *      arrOptions : Array of options
     *
     **************************************************************************/
    typedef struct {
        DWORD            dwCount;
        IDCRL_OPTION *   arrOptions; // Points to an array of structs with the size
                                       // given by dwCount
    } IDCRL_OPTIONS, * LPIDCRL_OPTIONS;

    /***************************************************************************
     * RSTParams - Request Security Token Params
     *   - added in IDCRL 3.2 to allow application to request multiple tokens
     *
     * DESCRIPTION
     *      the structure to hold information related to request a service token
     *
     **************************************************************************/
    typedef struct _RSTParams
    {
        __in DWORD   cbSize;             // size of the struct
        __in LPCWSTR wzServiceTarget;    // dname of the service
        __in LPCWSTR wzServicePolicy;    // policy for issuing the token
        __in DWORD   dwTokenFlags;       // for SLC, use SERVICE_TOKEN_TYPE_X509V3                                         // otherwise, 0
        __in DWORD   dwTokenParam;       // Params -
                                         // SLC, key size in bit
                                         // otherwise, 0
    } RSTParams, *PRSTParams;
    typedef const PRSTParams PCRSTParams;

    /***************************************************************************
     * MultiRSTParams
     *   - added in IDCRL 3.2 to allow application to request multiple tokens
     *
     * DESCRIPTION
     *      parameter required to
     *
     **************************************************************************/
    typedef struct _MultiRSTParams
    {
        DWORD       dwRSTParamsCount;    // # of RSTParams in the array, 0 is invalid
        PRSTParams  pRSTParams;    // pointer to the array of RSTParams
        DWORD       dwMultiRSTParamsFlags; // flags from MULTIRSTPARAMS_FLAGS
    } MultiRSTParams, *PMultiRSTParams;
    typedef const PMultiRSTParams PCMultiRSTParams;


    /***************************************************************************
     * IDCRLCertInfo
     *   - added in IDCRL 5.0 for EnumerateCertificate / GenerateCertToken call
     *
     * DESCRIPTION
     *      parameter required for EnumerateCertificate / GenerateCertToken
     *
     **************************************************************************/
    typedef struct _IDCRLCertInfo
    {
            WCHAR   wszThumbprint[36];     // Base64 encoded SHA1 thumbprint of the certificate
            WCHAR   wszDescription[96];    // friendly description of the certificate
    } IDCRLCertInfo, *PIDCRLCertInfo;
    typedef const PIDCRLCertInfo PCPIDCRLCertInfo;


    /***************************************************************************
     * GENERATECERTTOKEN_FLAG enum
     *
     * DESCRIPTION
     *      dwFlags parameter to GenerateCertToken
     *
     **************************************************************************/
    typedef enum _GENERATECERTTOKEN_FLAG
    {
        TOKEN_URL_ESCAPED                  =        0x00000001, // token should be url escaped
    } GENERATECERTTOKEN_FLAG;


    /***************************************************************************
     * Client-defined credential constants
     *
     * DESCRIPTION
     *      Constants define maximum length of member name and password 
     *
     **************************************************************************/

    #define PPCRL_CRED_MEMBER_NAME_MAX_LENGTH   114
    #define PPCRL_CRED_PASSWORD_MAX_LENGTH  16

    /***************************************************************************
     * Client-defined policy constants
     *
     * DESCRIPTION
     *      Constants allowing the hosting application to indicate particular
     *      common policy attributes.
     *
     **************************************************************************/

    #define AUTH_POLICY_DEFAULT NULL

// 116306    PPCRL: DCR -- Remove support for Security PIN (seclevel=100)
// 116306     #define AUTH_POLICY_REQUIRE_PIN_A       "ppcrl:pin"
// 116306     #define AUTH_POLICY_REQUIRE_PIN_W       L"ppcrl:pin"

    // FUTURE: #define AUTH_POLICY_REQUIRE_CERT_A      "ppcrl:cert"
    // FUTURE: #define AUTH_POLICY_REQUIRE_CERT_W      L"ppcrl:cert"

    /***************************************************************************
     * Client-defined service name constants
     *
     * DESCRIPTION
     *      Constants allowing the hosting application to indicate particular
     *      service targets.
     *
     **************************************************************************/

    #define SERVICE_TARGET_PASSPORT     L"http://Passport.NET/tb"


    #define ENV_PRODUCTION              L"production"

    /***************************************************************************
     * Initialize
     *
     * DESCRIPTION
     *      Must be called before and return successfully before any other
     *      client runtime library functions are called.
     *
     * INPUTS
     *      guid - A GUID that uniquely identifies the hosting application.
     *              This allows features such as customized user interfaces
     *              to match the hosting application's look and feel.
     *      lPPCRLVersion - Binary version of the API
     *      dwFlags - Initialization flags from the UPDATE_FLAG enum above.
     *
     **************************************************************************/
IDCRL_API Initialize(
        __in REFGUID guid,
        __in LONG lPPCRLVersion,
        __in DWORD dwFlags);

    /***************************************************************************
     * InitializeEx
     *
     * DESCRIPTION
     *      Must be called before and return successfully before any other
     *      client runtime library functions are called. This function supports
     *      setting some optional parameters that Initialize does not support.
     *
     * INPUTS
     *      guid - A GUID that uniquely identifies the hosting application.
     *              This allows features such as customized user interfaces
     *              to match the hosting application's look and feel.
     *      lPPCRLVersion - Binary version of the API
     *      dwFlags - Initialization flags from the UPDATE_FLAG enum above.
     *      pOptions - Additional options to set. e.g. proxy information.
     *      dwOptions - count of options in pOptions.
     *
     **************************************************************************/
IDCRL_API InitializeEx(
        __in REFGUID         guid,
        __in LONG            lPPCRLVersion,
        __in DWORD           dwFlags,
        __in_opt LPIDCRL_OPTION  pOptions,
        __in_opt DWORD           dwOptions);


    /***************************************************************************
     * Uninitialize
     *
     * DESCRIPTION
     *      Must be called when shutting down the client runtime library. This
     *      will immediately invalidate any extant identity handles.
     *
     **************************************************************************/

IDCRL_API Uninitialize(void);

    /***************************************************************************
     * CreateIdentityHandle
     *
     * DESCRIPTION
     *      Used to create new identity handles, which then be authenticated
     *      with credentials and acquire authentication tokens.
     *
     * INPUTS
     *      szMemberName - Member name to initialize the identity to. May
     *              be NULL and set later with SetIdentityProperty (or
     *              by the user if UI is being used).
     *      dwFlags - Identity creation flags.
     *
     * OUTPUTS
     *      pihIdentity - New identity handle. May be passed to LogonIdentity, etc.
     *              Must be released with CloseIdentityHandle eventually.
     *
     **************************************************************************/
IDCRL_API CreateIdentityHandle(
        __in_opt LPCWSTR wszMemberName,
        __in DWORD dwFlags,
        __out PassportIdentityHandle * pihIdentity);

    /***************************************************************************
     * CloseIdentityHandle
     *
     * DESCRIPTION
     *      Closes an identity handle previously opened with CreateIdentityHandle
     *      freeing any resources associated with the identity.
     *
     * INPUTS
     *      hIdentity - Identity handle to close.
     *
     **************************************************************************/
IDCRL_API CloseIdentityHandle(
        __in PassportIdentityHandle hIdentity);


    /***************************************************************************
     * SetCredential
     *
     * DESCRIPTION
     *      Sets a specified credential on the given identity handle. Any
     *      set credential will be used, as-needed, for all future authentication
     *      requests on this identity.
     *
     * INPUTS
     *      hIdentity - Identity handle to close.
     *      wszCredType - Credential type to set (from PPCRL_CREDTYPE_*
     *                  definitions, above).
     *      wszCredValue - Credential to associate with the identity.
     *
     **************************************************************************/
IDCRL_API SetCredential(
        __in PassportIdentityHandle hIdentity,
        __in LPCWSTR wszCredType,
        __in LPCWSTR wszCredValue);



    /***************************************************************************
     * LogonIdentity(Ex)
     *
     * DESCRIPTION
     *      Fundamental call of the Passport client runtime library. Allows
     *      the creation of an authenticated identity. This version of the
     *      call allows credentials to be provided by the calling application.
     *
     * RESULTS
     *      Upon success, the given identity handle will possess the
     *      appropriate authentication state based on the credentials
     *      presented.
     *
     *      Service tokens are requested with Ex version.
     *      the service tokens will be put in cache, use AuthIdentityToService
     *      with SERVICE_TOKEN_FROM_CACHE flag to retrieve from cache
     *
     **************************************************************************/
IDCRL_API LogonIdentity(
        __in PassportIdentityHandle hIdentity,
        __in_opt LPCWSTR wszPolicy,
        __in DWORD dwAuthFlags // From LOGON_FLAG enum above
        );

IDCRL_API LogonIdentityEx(  // new for 3.2
        __in PassportIdentityHandle hIdentity,
        __in_opt LPCWSTR wszAuthPolicy,
        __in DWORD dwAuthFlags, // From LOGON_FLAG enum above
        __in_opt PCRSTParams pcRSTParams,   // service tokens requests
        __in_opt DWORD       dwRSTParamsCount
        );




    /***************************************************************************
     * SSO_FLAG enum
     *
     * DESCRIPTION
     *      Flags that can be passed into the LogonIdentityWithUI API's
     *      to control the SSO behavior.
     *
     **************************************************************************/
    typedef enum _SSO_FLAG
    {
        SSO_ALL_BIT                             =   0x0000000F, // reserved
        SSO_DEFAULT                             =   0x00000000, // default behavior
        SSO_NO_UI                               =   0x00000001, // do not show UI, error if UI prompt is needed.
        SSO_NO_AUTO_SIGNIN                      =   0x00000002, // do not attempt automatic sign-in, always prompt login UI
        SSO_NO_HANDLE_ERROR                     =   0x00000004, // handle authentication error with UI. If flag is not set, error is return to app.
        SSO_NO_CONFIRMATION_UI                  =   0x00000008, // do not show confirmation UI, error if confirmation UI is needed
    } SSO_FLAG;

    /***************************************************************************
     * GetWebAuthUrlEx
     *
     * DESCRIPTION
     *      Get Url and post data for web authentication. E.g. for hotmail inbox
     * INPUTS
     *      hIdentity: Identity handle created previously
     *      szTargetServiceUrl: target service url. If you specify the svc
     *      or ru param in additional post data, you must NOT specify this.
     *      szServicePolicy:     policy for the service ticket
     *      szAdditionalPostParams: Other params required for the call the core
     *      params computed by the API.
     *      pszWebAuthUrl: Output param that holds the URL to post the data
     *      pszPostData: Post data to be sent with the request, it includes the
     *      additional post params specified in szAdditionalPostParams
     * RESULTS
     *      Upon success, the API will give a URL with a blob of data that
     *      can be POSTed to the URL for authentication, this is using PSHA1Auth
     *      E_INVALIDARG
     *      PP_E_CRL_NOT_INITIALIZED
     *      PP_E_CRL_NO_SUCH_IDENTITY
     *      PPCRL_E_NO_MEMBER_NAME_SET
     *      PPCRL_E_UNABLE_TO_RETRIEVE_SERVICE_TOKEN
     *      PPCRL_E_NO_SESSION_KEY
     *      E_OUTOFMEMORY
     *
     * NOTES
     *      Calling application must set the following header:
     *            Content-Type: application/x-www-form-urlencoded
     *      for the POST request to be accepted by the login server.
     **************************************************************************/

    typedef enum {
        IDCRL_WEBAUTH_NONE                  = 0x00000000,
        IDCRL_WEBAUTH_REAUTH                = 0x00000001,
        IDCRL_WEBAUTH_PERSISTENT          = 0x00000002
    } IDCRL_WEBAUTHOPTION;

IDCRL_API GetWebAuthUrlEx(
            __in     PassportIdentityHandle hIdentity,
            __in     DWORD                  dwFlags,              // IDCRL_WEBAUTHOPTION
            __in_opt LPCWSTR                szTargetServiceUrl,
            __in_opt LPCWSTR                szServicePolicy,
            __in     LPCWSTR                szAdditionalPostParams,
            __out    LPWSTR *               pszWebAuthUrl,
            __out    LPWSTR *               pszPostData);




    /***************************************************************************
     * Names of credential properties
     * These can be used with GetIdentityPropertyByName API
    ***************************************************************************/
    #define PPCRL_CREDPROPERTY_MEMBER_NAME            L"MemberName"
    #define PPCRL_CREDPROPERTY_PUIDSTR                L"PUID"
    #define PPCRL_CREDPROPERTY_ONETIMECREDENTIAL      L"OneTimeCredential"
    #define PPCRL_CREDPROPERTY_CID                    L"CID"
    #define PPCRL_CREDPROPERTY_MAINBRANDID            L"MainBrandID"
    #define PPCRL_CREDPROPERTY_BRANDIDLIST            L"BrandIDList"
    #define PPCRL_CREDPROPERTY_ISWINLIVEUSER          L"IsWinLiveUser"
    #define PPCRL_CREDPROPERTY_EID                    L"EID"
    #define PPCRL_CREDPROPERTY_LINKID                 L"LinkId"
    #define PPCRL_CREDPROPERTY_LINKVER                L"LinkVer"
    #define PPCRL_CREDPROPERTY_LINKEDIDS              L"LinkedIds"

    /****************************************************************************
    * Names of federation related properties. These are not cred properties but
    * can be used with GetIdentityPropertyByName
    ****************************************************************************/
    #define PPCRL_PROPERTY_LASTUSEDCREDTYPE           L"LastUsedCredType"
    #define PPCRL_PROPERTY_FEDERATIONBRANDNAME        L"FederationBrandName"
    #define PPCRL_PROPERTY_STSAUTHURL                 L"STSAuthUrl"

#ifdef UNDER_CE
    // the numerical string is defined by procotol which is also returned by STS response.
    #define EXT_PROPERTY_LASTUSEDCREDTYPE_VALUE_WLID        L"1"
    #define EXT_PROPERTY_LASTUSEDCREDTYPE_VALUE_FEDERATED   L"3"

#endif

    /***************************************************************************
     * PASSPORTIDENTITYPROPERTY enum
     *
     *
     * DESCRIPTION
     *      Used for retrieving properties about a given identity handle.
     *      This enum is used with the now deprecated GetIdentityProperty API.
     *      Apps should use GetIdentityPropertyByName to get all properties.
     *
     **************************************************************************/
    typedef enum _PASSPORTIDENTITYPROPERTY
    {
        IDENTITY_MEMBER_NAME        = 1,
        IDENTITY_PUIDSTR            = 2
    } PASSPORTIDENTITYPROPERTY;


    /***************************************************************************
     * GetIdentityPropertyByName
     *
     * DESCRIPTION
     *      Retrieves the value of a property associated with an identity handle.
     *
     * RESULTS
     *      Upon success, the value of the property will be stored on the
     *      wszPropertyValue buffer. The buffer must be freed with a call
     *      to
     *
     **************************************************************************/
IDCRL_API GetIdentityPropertyByName(
        __in PassportIdentityHandle hIdentity,
        __in LPCWSTR wszPropertyName,
        __out LPWSTR * pwszPropertyValue);

    /***************************************************************************
     * SetIdentityProperty
     *
     * DESCRIPTION
     *      Sets the specified property on the identity. Note that not all
     *      properties are settable. Currently apps may only set IDENTITY_MEMBER_NAME
     *      using this API.
     *
     * RESULTS
     *
     **************************************************************************/
IDCRL_API SetIdentityProperty(
        __in PassportIdentityHandle hIdentity,
        __in PASSPORTIDENTITYPROPERTY ipProperty,
        __in LPCWSTR wszPropertyValue
        );

    /***************************************************************************
     * GetAuthState
     *
     * DESCRIPTION
     *      Returns the authentication and request state associated
     *      with the given identity handle. This allows the calling
     *      application to determine not only the current authentication
     *      state, but the state of the last request made on behalf
     *      of this identity. The calling application can use this
     *      information to deal with the state/errors appropriately.
     *
     *      The Ex version is used to query states for a particular service token
     *      When wzServiceTarget == NULL, the states from last request is returned
     *
     * RESULTS
     *      Returns the authentication status, the authentication
     *      required (if any), the status of the last request
     *      based on this identity, and may optionally
     *      return a URL that the hosting application can take
     *      the user to in order to explain and/or resolve the
     *      error.
     *
     **************************************************************************/
IDCRL_API GetAuthState(
        __in PassportIdentityHandle hIdentity,
        __out_opt HRESULT * phrAuthState,
        __out_opt HRESULT * phrAuthRequired,
        __out_opt HRESULT * phrRequestStatus,
        __out_opt LPWSTR * szWebFlowUrl = 0
        );

IDCRL_API GetAuthStateEx( // new in 3.2
        __in PassportIdentityHandle hIdentity,
        __in LPCWSTR        wzServiceTarget,
        __out_opt HRESULT * phrAuthState,
        __out_opt HRESULT * phrAuthRequired,
        __out_opt HRESULT * phrRequestStatus,
        __out_opt LPWSTR * szWebFlowUrl = 0
        );

    /***************************************************************************
     * EnumIdentitiesWithCachedCredentials
     *
     * DESCRIPTION
     *      Enumerates stored credentials allowing the hosting
     *      application to determine which credentials are
     *      present.
     *
     * INPUTS
     *      szCachedCredType - If non-NULL and non-empty, specifies
     *      the credential type to limit iteration of. For example,
     *      if PPCRL_CREDTYPE_PASSWORD is passed here, only identities
     *      with cached passwords will be iterated. If NULL or an
     *      empty string is passed here, then all identities with
     *      any type of cached credential will be iterated.
     *
     * RESULTS
     *      A enumeration handle that allows iteration through
     *      the identities.
     *
     **************************************************************************/
IDCRL_API EnumIdentitiesWithCachedCredentials(
        __in_opt LPCWSTR wszCachedCredType,
        __out PassportEnumIdentitiesHandle * peihEnumHandle
        );

    /***************************************************************************
     * NextIdentity
     *
     * DESCRIPTION
     *      Returns the next identity for the given enumeration handle.
     *
     * INPUTS
     *      hEnumHandle - Handle as returned from EnumIdentities* call
     *      above.
     *
     * OUTPUTS
     *      szMemberName - The member name with cached credentials
     *
     * NOTES
     *      Any strings returned as outputs must be freed with PassportFreeMemory.
     *      However, if the pointers are passed back in as outputs to
     *      a PPCRL call, any previous string will be correctly freed.
     *
     **************************************************************************/
IDCRL_API NextIdentity(
        __in PassportEnumIdentitiesHandle hEnumHandle,
        __out LPWSTR * wszMemberName
        );

    /***************************************************************************
     * HasPersistedCredential
     *
     * DESCRIPTION
     *      Returns whether or not the specified identity has a persisted
     *      credential of the specified type.
     *
     * INPUTS
     *      hIdentity - the identity to check persisted credentials of
     *      szCredType - the credential type to check for persistence
     *
     * OUTPUTS
     *      pbHasPersistentCred - Whether or not there is a persistent
     *          credential.
     *
     **************************************************************************/
IDCRL_API HasPersistedCredential(
        __in PassportIdentityHandle hIdentity,
        __in LPCWSTR szCredType,
        __out bool * pbHasPersistentCred
        );

    /***************************************************************************
     * PersistCredential
     *
     * DESCRIPTION
     *      Stores, updates and/or deletes stored credentials.
     *
     * INPUTS
     *      pihIdentity - Identity from to persist credentials for.
     *      wszCredType - Credential type on the identity to persist.
     *
     * RESULTS
     *      The persistent credential store is updated based on the
     *      credentials stored on the identity.
     *
     **************************************************************************/
IDCRL_API PersistCredential(
        __in PassportIdentityHandle hIdentity,
        __in LPCWSTR wszCredType
        );

    /***************************************************************************
     * RemovePersistedCredential
     *
     * DESCRIPTION
     *      Removes credentials from persistent storage.
     *
     * INPUTS
     *      pihIdentity - Identity from which to remove credentials
     *      wszCredType - Credential type to delete from the store
     *
     * RESULTS
     *      Any previously persisted credential will be deleted from
     *      the store. Any transient credential left on the identity
     *      itself is left unchanged.
     *
     **************************************************************************/
IDCRL_API RemovePersistedCredential(
        __in PassportIdentityHandle hIdentity,
        __in LPCWSTR wszCredType
        );

    /***************************************************************************
     * CloseEnumIdentitiesHandle
     *
     * DESCRIPTION
     *      Closes an identity iterator, freeing resource associated with it.
     *
     * INPUTS
     *      hEnumHandle - The iterator to close
     *
     **************************************************************************/
IDCRL_API CloseEnumIdentitiesHandle(
        __in PassportEnumIdentitiesHandle hEnumHandle);

    /***************************************************************************
     * AuthIdentityToService
     *
     * DESCRIPTION
     *      Using an authenticated identity, attempts to retrieve a service
     *      token for that identity to the specified resource. If additional
     *      user interface interaction is required from the user, this
     *      call may fail with an error code indicating that LogonIdentity
     *      needs to be called to enhance the authentication state before
     *      the service token can be granted (e.g., if a PIN needs
     *      to be collected).
     *
     * INPUTS
     *      hIdentity - Authenticated identity handle returned from LogonIdentity
     *      szServiceTarget - URI representing the webservice. This is primarily
     *              to identity the resource and need not necessarily represent
     *              a real service URL.
     *      szServicePolicy - Policy if the application knows
     *              it or can provide it directly. This may be provided by the
     *              hosting application directly or extract from the application-
     *              level challenge from an initial attempt to access the
     *              resource.
     *
     * OUTPUTS
     *      pcbSessionKey / pcbSessionKeyLength - If the service token format
     *              supports it, this will return a session key to the hosting
     *              application that matches the symmetric session key inside
     *              the service token. This key material is binary, so care
     *              should be taken to not utilize any manipulations that
     *              may terminate on embedded null or non-printable characters.
     *
     * RESULTS
     *      S_OK The service token was returned.
     *      PPCRL_S_TOKEN_TYPE_DOES_NOT_SUPPORT_SESSION_KEY The token returned has no session key.
     *      PP_E_CRL_NOT_INITIALIZED  The IDCRL has not been initialized.
     *      PPCRL_E_AUTH_SERVICE_UNAVAILABLE Cannot connect to authentication service.
     *      PPCRL_NO_SUCH_HANDLE The identity handle is invalid.
     *      PP_E_CRL_NO_SUCH_IDENTITY The identity handle is invalid.
     *      PPCRL_E_IDENTITY_NOT_AUTHENTICATED The identity has not been authenticated.
     *      PPCRL_E_UNABLE_TO_RETRIEVE_SERVICE_TOKEN The service token cannot be retrieved.
     *      PPCRL_REQUESTPARAMS_MISSING There are parameters to the request missing.
     *
     **************************************************************************/
IDCRL_API AuthIdentityToService(
        __in PassportIdentityHandle hIdentity,
        __in LPCWSTR szServiceTarget,
        __in_opt LPCWSTR szServicePolicy,
        __in DWORD dwTokenRequestFlags,
        __out LPWSTR * szToken,
        __out_opt DWORD * pdwResultFlags,
        __out_opt BYTE ** ppbSessionKey,
        __out_opt DWORD * pcbSessionKeyLength
        );

    /***************************************************************************
     * AuthIdentityToServiceEx - added in 3.2
     *
     * DESCRIPTION
     *      Using an authenticated identity, attempts to retrieve a set of
     *      service tokens for that identity to the specified resources.
     *      If additional
     *      user interface interaction is required from the user, this
     *      call may fail with an error code indicating that LogonIdentity
     *      needs to be called to enhance the authentication state before
     *      the service token can be granted (e.g., if a PIN needs
     *      to be collected).
     *
     * INPUTS
     *      hIdentity - Authenticated identity handle returned from LogonIdentity
     *      pcRSTParams - parameters for service tokens
     *      dwRSTParamsCount - number of parameters
     *
     * OUTPUTS
     *      the service tokens will be put in cache if async,
     *      use AuthIdentityToService
     *      with SERVICE_TOKEN_FROM_CACHE flag to retrieve from cache
     *
     * RESULTS
     *      S_OK At least one service token was successfully retrieved.
     *      PPCRL_S_TOKEN_TYPE_DOES_NOT_SUPPORT_SESSION_KEY The token returned has no session key.
     *      PP_E_CRL_NOT_INITIALIZED  IDCRL has not been initialized.
     *      PPCRL_E_AUTH_SERVICE_UNAVAILABLE Cannot connect to authentication service.
     *      PPCRL_NO_SUCH_HANDLE The identity handle is invalid.
     *      PP_E_CRL_NO_SUCH_IDENTITY The identity handle is invalid.
     *      PPCRL_E_IDENTITY_NOT_AUTHENTICATED The identity has not been authenticated.
     *      PPCRL_E_UNABLE_TO_RETRIEVE_SERVICE_TOKEN The service token cannot be retrieved.
     *      PPCRL_REQUESTPARAMS_MISSING There are parameters to the request missing.
     *
     **************************************************************************/
IDCRL_API AuthIdentityToServiceEx(
        __in PassportIdentityHandle hIdentity,
        __in DWORD dwRequestFlags,      // Must be 0, Reserved
        __in PCRSTParams pcRSTParams,   // service tokens requests
        __in DWORD       dwRSTParamsCount
        );

    /***************************************************************************
     * CERTREQUESTFLAGS enum
     *
     * DESCRIPTION
     *      flags for GetCertificate call.
     *
     **************************************************************************/
    typedef enum _CERTREQUESTFLAGS
    {
        //
        // If CERT_FROM_CACHE is set, a call only checks cache
        // if CERT_FROM_NETWORK is set, request always results in a network call
        // if neither is set: a cached one is returned if a cacked one satisfies the TTL
        // otherwise, it results in a network call
        //
        CERT_FROM_CACHE                    = SERVICE_TOKEN_FROM_CACHE,
        CERT_FROM_SERVER                   = 0x00020000,
    } CERTREQUESTFLAGS;


// TODO: change name: new for 3.2
IDCRL_API BuildServiceTokenRequestEx(
        __in PassportIdentityHandle hIdentity,
        __in PCRSTParams pcRSTParams,   // service tokens requests
        __in DWORD       dwRSTParamsCount,
        __out LPWSTR * szRequestXML
        );

    /***************************************************************************
     * RESPONSE_TYPE enum
     *
     * DESCRIPTION
     *      flags for the internal PutTokenResponse function.
     *
     **************************************************************************/
    typedef enum _RESPONSE_TYPE
    {
        //
        // RESPONSE_TYPE_AUTH indicates response to an auth request.
        // RESPONSE_TYPE_SERVICE indicates responset to a service token request.
        //
        PPCRL_RESPONSE_TYPE_AUTH                    = 0x00000000,
        PPCRL_RESPONSE_TYPE_SERVICE                 = 0x00000001,

    } RESPONSE_TYPE;


    /***************************************************************************
     * DeriveOfflineKey
     *
     * DESCRIPTION
     *      For offline scenarios, this method can be used to return a key
     *      derived from the user's credentials.
     *
     * INPUTS
     *      hIdentity       - Identity handle holding credentials from
     *                        which to derive the offline key.
     *      okmMethod       - Desired method of offline key derivation
     *      vpOfflineKeyParameters - Parameters for the key
     *                        derivation. These are dependent upon okmMethod
     *
     * OUTPUTS
     *      vpOfflineKeyMaterial - Buffer to accept raw key material if
     *                        it is desired. Buffer must be at least large
     *                        enough to accept the key material appropriate
     *                        for the derivation method (e.g., for PBKDF2
     *                        this is defined by the cbDerivedKeyLength
     *                        parameter).
     *      phSessionKey    - CryptoAPI key handle with the key material
     *                        imported into it.
     *
     * RESULTS
     *      TBD
     *
     **************************************************************************/
#ifdef  __PPCRL_SUPPORT_OFFLINE_KEY
IDCRL_API DeriveOfflineKey(
        __in PassportIdentityHandle hIdentity,
        __in OfflineKeyMethod okmMethod,
        __in_opt void * vpOfflineKeyParameters,
        __out_opt void * vpOfflineKeyMaterial,
        __in_opt HCRYPTPROV hCryptProv,
        __out_opt HCRYPTKEY * phSessionKey
        );

#endif // #ifdef  __PPCRL_SUPPORT_OFFLINE_KEY

    /***************************************************************************
     * PassportFreeMemory
     *
     * DESCRIPTION
     *      Frees buffers allocated and returned by the client runtime library.
     *
     * INPUTS
     *      pMemoryToFree -A pointer to memory that is allocated by IDCRL.
     *
     * RESULTS
     *
     *      S_OK The memory was successfully freed.
     *      PP_E_NOT_PPCRL_MEMORY The pointer in the request does not point to a memory block that is allocated by the IDCRL. This code may also be returned if the same memory block is freed more than once.
     *
     *
     **************************************************************************/
IDCRL_API PassportFreeMemory(
        __in void * pMemoryToFree
        );



    /***************************************************************************
     * GetExtendedError
     *
     * DESCRIPTION
     *      Gives extended error information for certain IDCRL error conditions.
     *      Its functionality is similar to GetLastError system API at the identity
     *      handle scope.
     *
     * INPUTS
     *      hIdentity: Identity handle.
     *
     * OUTPUT
     *      pdwCategory: error category, from the IDCRL_ERROR_CATEGORY enum.
     *      pdwError:    Actual error code. It will be the unmasked error at the
     *                   point of failure. The error is from the PPCRL_E_SQM_
     *                   errors defined in this file.
     *      pszErrorBlob: A string blob with additional error information (trace
     *      statements, request or response data, etc).
     *
     * RESULT
     *       PPCRL_E_EXTENDED_ERROR_NOT_SET: You must initialize IDCRL with the
     *       SET_EXTENDED_ERROR  flag to set extended error information.
     *
     *       S_FALSE: No extended error information is set on this identity handle.
     *
     * NOTES
     *      The error state is reset when the application calls any IDCRL API
     *      except GetAuthState(Ex).
     *      Caller must free pszErrorBlob by calling PassportFreeMemory when done.
     *
     **************************************************************************/

typedef enum _IDCRL_ERROR_CATEGORY
{
    IDCRL_REQUEST_BUILD_ERROR               = 0x00000001,
    IDCRL_REQUEST_SEND_ERROR                = 0x00000002,
    IDCRL_RESPONSE_RECEIVE_ERROR            = 0x00000003,
    IDCRL_RESPONSE_READ_ERROR               = 0x00000004,
    IDCRL_REPSONSE_PARSE_ERROR              = 0x00000005,
    IDCRL_RESPONSE_SIG_DECRYPT_ERROR        = 0x00000006,
    IDCRL_RESPONSE_PARSE_HEADER_ERROR       = 0x00000007,
    IDCRL_RESPONSE_PARSE_TOKEN_ERROR        = 0x00000008,
    IDCRL_RESPONSE_PUTCERT_ERROR            = 0x00000009
} IDCRL_ERROR_CATEGORY;

IDCRL_API GetExtendedError(
    __in      PassportIdentityHandle hIdentity,
    __in      LPVOID   pReserved,
    __out     DWORD   *pdwCategory,
    __out     DWORD   *pdwError,
    __out_opt LPWSTR  *pszErrorBlob);

    /***************************************************************************
     * ExportAuthState - Export AuthToken into a blob
     *
     * DESCRIPTION
     *      Export authenticate token and its session key into an xml blob
     *
     * INPUTS -
     *
     * OUTPUTS
     *      wszAuthToken: the request in xml format
     *
     * NOTE:
     *      wszAuthToken: should be free'ed with PassportFreeMemory
     * RESULTS
     *      PPCRL_E_NO_MEMBER_NAME_SET
     *      E_INVALIDARG
     *      PPCRL_E_UNABLE_TO_RETRIEVE_SERVICE_TOKEN
     *      PP_E_CRL_NOT_INITIALIZED
     *
     *
     **************************************************************************/
IDCRL_API ExportAuthState(
        __in PassportIdentityHandle hIdentity,
        __in DWORD dwFlags,                 //  == 0, reserved
        __out LPWSTR * wszAuthToken
        );

    /***************************************************************************
     * CreateIdentityHandleFromAuthState - create an identity handle, and import
     *                                     the authtoken blob
     *
     * DESCRIPTION
     *      wszAuthToken: the auth token
     *      dwFlags:      IDENTITY_FLAG
     * INPUTS -
     *
     * OUTPUTS
     *      pihIdentity: the identity handle, this should be closed by: CloseIdentityHandle
     *
     * RESULTS
     *      E_INVALIDARG
     *      E_POINTER  -- when pihIdentity is NULL
     *      PP_E_CRL_ILLEGAL_IDENTITY_FLAG -
     *      PP_E_CRL_NOT_INITIALIZED
     *
     **************************************************************************/
IDCRL_API CreateIdentityHandleFromAuthState(
        __in LPCWSTR wszAuthToken,
        __in DWORD dwFlags,                             // IDENTITY_FLAG
        __out PassportIdentityHandle * pihIdentity);


//
// extended properties for all the users on the windows logon session
#define EXT_PROPERTY_NAME_PUBLICCOMPUTER    L"PublicComputer"
#define EXT_PROPERTY_VALUE_TRUE             L"1"
#define EXT_PROPERTY_VALUE_FALSE            L"0"
#define EXT_PROPERTY_VALUE_REMOVE           NULL

/***************************************************************************
 * SetExtendedProperty - set name value pair - per windows logon property
 *
 * DESCRIPTION
 *      wszPropertyName: name of the property
 *      wszPropertyValue: value of the property, NULL or empty string will delete an existing value
 *
 * INPUTS -
 *
 * OUTPUTS
 *
 * RESULTS
 *      E_INVALIDARG
 *      Error from registry access API:RegOpenKeyEx RegSetValueEx RegDeleteValue
 *
 **************************************************************************/
IDCRL_API SetExtendedProperty(
        __in LPCWSTR wszPropertyName,
        __in LPCWSTR wszPropertyValue);

/***************************************************************************
 * GetExtendedProperty - get the value for a given name - per windows logon property
 *
 * DESCRIPTION
 *      wszPropertyName: name of the property
 *
 * INPUTS -
 *
 * OUTPUTS
 *      pwszPropertyValue: value of the property, IDCRL allocates the buffer, and it
 *                         should be freed with PassportFreeMemory call
 *
 * RESULTS
 *
 *      E_INVALIDARG
 *      E_OUTOFMEMORY
 *      PP_E_CRL_NOT_INITIALIZED
 *      Error from registry access API:RegOpenKeyEx RegGetValueEx
 *
 **************************************************************************/
IDCRL_API GetExtendedProperty(
        __in LPCWSTR wszPropertyName,
        __out LPWSTR* pwszPropertyValue);



//
// extended user properties for all the users on the windows logon session
#define EXT_USER_PROPERTY_NAME_USERTILEURL    L"UserTileUrl"
#define EXT_USER_PROPERTY_NAME_IDTILETIMESTAMP L"IDTileTimestamp"
#define EXT_USER_PROPERTY_CERT_THUMBPRINT L"CertThumbprint"
#define EXT_USER_PROPERTY_VALUE_REMOVE           NULL

/***************************************************************************
 * SetUserExtendedProperty - set name value pair - per windows logon property
 *
 * DESCRIPTION
 *      wszMemberName:
 *      wszPropertyName: name of the property
 *      wszPropertyValue: value of the property, NULL or empty string will delete an existing value
 *
 *    can only set the property if the user chosed to store his/her user name
 *
 * INPUTS -
 *
 * OUTPUTS
 *
 * RESULTS
 *      E_INVALIDARG
 *      PPCRL_E_USER_NOTFOUND
 *      Error from registry access API:RegOpenKeyEx RegSetValueEx RegDeleteValue
 *
 **************************************************************************/
IDCRL_API SetUserExtendedProperty(
        __in LPCWSTR wszUserName,
        __in LPCWSTR wszPropertyName,
        __in LPCWSTR wszPropertyValue);

/***************************************************************************
 * GetUserExtendedProperty - get the value for a given name - per windows logon property
 *
 * DESCRIPTION
 *      wszPropertyName: name of the property
 *
 * INPUTS -
 *
 * OUTPUTS
 *      pwszPropertyValue: value of the property, IDCRL allocates the buffer, and it
 *                         should be freed with PassportFreeMemory call
 *
 * RESULTS
 *
 *      E_INVALIDARG
 *      PPCRL_E_USER_NOTFOUND
 *      Error from registry access API:RegOpenKeyEx RegGetValueEx
 *
 **************************************************************************/
IDCRL_API GetUserExtendedProperty(
        __in LPCWSTR wszUserName,
        __in LPCWSTR wszPropertyName,
        __out LPWSTR* pwszPropertyValue);



/***************************************************************************
 * WLID UI declarations
 *
 **************************************************************************/


/***************************************************************************
 * WLIDUI_FLAG enum
 *
 * DESCRIPTION
 *      Flags that can be passed into the various UI API's
 *
 **************************************************************************/
typedef enum _WLIDUI_FLAG
{
    WLIDUI_ALL_BIT                   =   0x0000007F, // reserved
    WLIDUI_DEFAULT                   =   0x00000000,
    WLIDUI_DISABLE_REMEBERME         =   0x00000001, // Disable remember me checkbox
    WLIDUI_DISABLE_SAVEPASSWORD      =   0x00000002, // Disable save password checkbox
    WLIDUI_DISABLE_DIFFERENTUSER     =   0x00000004, // Disable sign-in as a different user
    WLIDUI_DISABLE_AUTOSIGNIN        =   0x00000008, // Disable sign-in automatically checkbox
    WLIDUI_DISABLE_FEDERATION        =   0x00000010, // Disable PartnerID option in credpicker
    WLIDUI_DISABLE_EID               =   0x00000020, // Disable smart card option in credpicker
    WLIDUI_DISABLE_SIGNUPLINK        =   0x00000040, // Disable sign up link
} WLIDUI_FLAG;

typedef struct  _UIParam
{
    DWORD   dwFlags;   // see UI_* flags
    HWND    hwndParent;
    LPCWSTR wszCobrandingText;
    LPCWSTR wszCobrandingLogoPath;
    DWORD   dwBgColor;
    DWORD   dwURLColor;
public: _UIParam()
        :dwFlags(WLIDUI_DEFAULT)
        ,hwndParent(NULL)
        ,wszCobrandingText(NULL)
        ,wszCobrandingLogoPath(NULL)
        ,dwBgColor(0)
        ,dwURLColor(0)
        {}
} UIParam, * PUIParam;

typedef const PUIParam PCUIParam;       


    /***************************************************************************
     * LogonIdentityExWithUI
     *
     *
     * DESCRIPTION
     *      Requests an authentication using the client runtime's built-in
     *      user interface for credential collection and error handling.
     *
     * RESULTS
     *      Upon success, the given identity handle will possess the
     *      appropriate authentication state based on the credentials
     *      presented.
     *
     *      Service tokens are requested with Ex version.
     *      the service tokens will be put in cache, use AuthIdentityToService
     *      with SERVICE_TOKEN_FROM_CACHE flag to retrieve from cache
     *
     **************************************************************************/     
    IDCRL_API LogonIdentityExWithUI (
            __in     	PassportIdentityHandle  hExternalIdentity,
            __in_opt 	LPCWSTR                 wszAuthPolicy,
            __in     	DWORD                   dwAuthFlags,
            __in     	DWORD                   dwSSOFlags,
            __in_opt 	PCUIParam               pcUIParam,
            __in_opt 	PCRSTParams             pcRSTParams,
            __in_opt 	DWORD                   dwRSTParamsCount
            );


    /***************************************************************************
     * GetResponseForHttpChallenge
     *
     *
     * DESCRIPTION
     *      LiveID Auth only
     *      Handle the client side of LiveID Auth
     *      Requests an authentication using the client runtime's built-in
     *      user interface for credential collection and error handling.
     *
     * RESULTS
     *      Upon success, the given identity handle will possess the
     *      appropriate authentication state based on the credentials
     *      presented.
     *
     **************************************************************************/     
    IDCRL_API GetResponseForHttpChallenge(
            __in        PassportIdentityHandle  hIdentity,
            __in        DWORD                   dwAuthFlags,
            __in        DWORD                   dwSSOFlags,
            __in_opt    PCUIParam               pcUIParam,
            __in        LPCWSTR                 wszServiceTarget,
            __in        LPCWSTR                 wszChallenge, 
            __out LPWSTR *                      pwszResponse
            );


#ifdef __cplusplus
} // Namespace IDCRL
#endif


#ifdef __cplusplus
}; // extern "C"
#endif


#endif /* not defined PPCRL_SCRIPT_ERROR_CODES */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\msinkaut.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
//

#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 5.03.0286 */
/* at Tue May 02 19:01:52 2006
 */
/* Compiler settings for .\msinkaut.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32 (32b run), ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __msinkaut_h__
#define __msinkaut_h__

/* Forward Declarations */ 

#ifndef __IInkRectangle_FWD_DEFINED__
#define __IInkRectangle_FWD_DEFINED__
typedef interface IInkRectangle IInkRectangle;
#endif 	/* __IInkRectangle_FWD_DEFINED__ */


#ifndef __IInkExtendedProperty_FWD_DEFINED__
#define __IInkExtendedProperty_FWD_DEFINED__
typedef interface IInkExtendedProperty IInkExtendedProperty;
#endif 	/* __IInkExtendedProperty_FWD_DEFINED__ */


#ifndef __IInkExtendedProperties_FWD_DEFINED__
#define __IInkExtendedProperties_FWD_DEFINED__
typedef interface IInkExtendedProperties IInkExtendedProperties;
#endif 	/* __IInkExtendedProperties_FWD_DEFINED__ */


#ifndef __IInkDrawingAttributes_FWD_DEFINED__
#define __IInkDrawingAttributes_FWD_DEFINED__
typedef interface IInkDrawingAttributes IInkDrawingAttributes;
#endif 	/* __IInkDrawingAttributes_FWD_DEFINED__ */


#ifndef __IInkStrokeDisp_FWD_DEFINED__
#define __IInkStrokeDisp_FWD_DEFINED__
typedef interface IInkStrokeDisp IInkStrokeDisp;
#endif 	/* __IInkStrokeDisp_FWD_DEFINED__ */


#ifndef __IInkTransform_FWD_DEFINED__
#define __IInkTransform_FWD_DEFINED__
typedef interface IInkTransform IInkTransform;
#endif 	/* __IInkTransform_FWD_DEFINED__ */


#ifndef __IInkRecognizer_FWD_DEFINED__
#define __IInkRecognizer_FWD_DEFINED__
typedef interface IInkRecognizer IInkRecognizer;
#endif 	/* __IInkRecognizer_FWD_DEFINED__ */


#ifndef __IInkRecognizers_FWD_DEFINED__
#define __IInkRecognizers_FWD_DEFINED__
typedef interface IInkRecognizers IInkRecognizers;
#endif 	/* __IInkRecognizers_FWD_DEFINED__ */


#ifndef ___IInkRecognitionEvents_FWD_DEFINED__
#define ___IInkRecognitionEvents_FWD_DEFINED__
typedef interface _IInkRecognitionEvents _IInkRecognitionEvents;
#endif 	/* ___IInkRecognitionEvents_FWD_DEFINED__ */


#ifndef __IInkRecognizerContext_FWD_DEFINED__
#define __IInkRecognizerContext_FWD_DEFINED__
typedef interface IInkRecognizerContext IInkRecognizerContext;
#endif 	/* __IInkRecognizerContext_FWD_DEFINED__ */


#ifndef __IInkRecognitionResult_FWD_DEFINED__
#define __IInkRecognitionResult_FWD_DEFINED__
typedef interface IInkRecognitionResult IInkRecognitionResult;
#endif 	/* __IInkRecognitionResult_FWD_DEFINED__ */


#ifndef __IInkRecognitionAlternate_FWD_DEFINED__
#define __IInkRecognitionAlternate_FWD_DEFINED__
typedef interface IInkRecognitionAlternate IInkRecognitionAlternate;
#endif 	/* __IInkRecognitionAlternate_FWD_DEFINED__ */


#ifndef __IInkRecognitionAlternates_FWD_DEFINED__
#define __IInkRecognitionAlternates_FWD_DEFINED__
typedef interface IInkRecognitionAlternates IInkRecognitionAlternates;
#endif 	/* __IInkRecognitionAlternates_FWD_DEFINED__ */


#ifndef __IInkWordList_FWD_DEFINED__
#define __IInkWordList_FWD_DEFINED__
typedef interface IInkWordList IInkWordList;
#endif 	/* __IInkWordList_FWD_DEFINED__ */


#ifndef __IInkDisp_FWD_DEFINED__
#define __IInkDisp_FWD_DEFINED__
typedef interface IInkDisp IInkDisp;
#endif 	/* __IInkDisp_FWD_DEFINED__ */


#ifndef __IInkStrokes_FWD_DEFINED__
#define __IInkStrokes_FWD_DEFINED__
typedef interface IInkStrokes IInkStrokes;
#endif 	/* __IInkStrokes_FWD_DEFINED__ */


#ifndef __IInkCustomStrokes_FWD_DEFINED__
#define __IInkCustomStrokes_FWD_DEFINED__
typedef interface IInkCustomStrokes IInkCustomStrokes;
#endif 	/* __IInkCustomStrokes_FWD_DEFINED__ */


#ifndef __IInkRenderer_FWD_DEFINED__
#define __IInkRenderer_FWD_DEFINED__
typedef interface IInkRenderer IInkRenderer;
#endif 	/* __IInkRenderer_FWD_DEFINED__ */


#ifndef __IInkCursor_FWD_DEFINED__
#define __IInkCursor_FWD_DEFINED__
typedef interface IInkCursor IInkCursor;
#endif 	/* __IInkCursor_FWD_DEFINED__ */


#ifndef __IInkOverlay_FWD_DEFINED__
#define __IInkOverlay_FWD_DEFINED__
typedef interface IInkOverlay IInkOverlay;
#endif 	/* __IInkOverlay_FWD_DEFINED__ */


#ifndef ___IInkEvents_FWD_DEFINED__
#define ___IInkEvents_FWD_DEFINED__
typedef interface _IInkEvents _IInkEvents;
#endif 	/* ___IInkEvents_FWD_DEFINED__ */


#ifndef ___IInkStrokesEvents_FWD_DEFINED__
#define ___IInkStrokesEvents_FWD_DEFINED__
typedef interface _IInkStrokesEvents _IInkStrokesEvents;
#endif 	/* ___IInkStrokesEvents_FWD_DEFINED__ */


#ifndef ___IInkOverlayEvents_FWD_DEFINED__
#define ___IInkOverlayEvents_FWD_DEFINED__
typedef interface _IInkOverlayEvents _IInkOverlayEvents;
#endif 	/* ___IInkOverlayEvents_FWD_DEFINED__ */


#ifndef __InkRectangle_FWD_DEFINED__
#define __InkRectangle_FWD_DEFINED__

#ifdef __cplusplus
typedef class InkRectangle InkRectangle;
#else
typedef struct InkRectangle InkRectangle;
#endif /* __cplusplus */

#endif 	/* __InkRectangle_FWD_DEFINED__ */


#ifndef __InkProperty_FWD_DEFINED__
#define __InkProperty_FWD_DEFINED__

#ifdef __cplusplus
typedef class InkProperty InkProperty;
#else
typedef struct InkProperty InkProperty;
#endif /* __cplusplus */

#endif 	/* __InkProperty_FWD_DEFINED__ */


#ifndef __InkProperties_FWD_DEFINED__
#define __InkProperties_FWD_DEFINED__

#ifdef __cplusplus
typedef class InkProperties InkProperties;
#else
typedef struct InkProperties InkProperties;
#endif /* __cplusplus */

#endif 	/* __InkProperties_FWD_DEFINED__ */


#ifndef __InkDrawingAttributes_FWD_DEFINED__
#define __InkDrawingAttributes_FWD_DEFINED__

#ifdef __cplusplus
typedef class InkDrawingAttributes InkDrawingAttributes;
#else
typedef struct InkDrawingAttributes InkDrawingAttributes;
#endif /* __cplusplus */

#endif 	/* __InkDrawingAttributes_FWD_DEFINED__ */


#ifndef __InkTransform_FWD_DEFINED__
#define __InkTransform_FWD_DEFINED__

#ifdef __cplusplus
typedef class InkTransform InkTransform;
#else
typedef struct InkTransform InkTransform;
#endif /* __cplusplus */

#endif 	/* __InkTransform_FWD_DEFINED__ */


#ifndef __InkDisp_FWD_DEFINED__
#define __InkDisp_FWD_DEFINED__

#ifdef __cplusplus
typedef class InkDisp InkDisp;
#else
typedef struct InkDisp InkDisp;
#endif /* __cplusplus */

#endif 	/* __InkDisp_FWD_DEFINED__ */


#ifndef __InkStrokes_FWD_DEFINED__
#define __InkStrokes_FWD_DEFINED__

#ifdef __cplusplus
typedef class InkStrokes InkStrokes;
#else
typedef struct InkStrokes InkStrokes;
#endif /* __cplusplus */

#endif 	/* __InkStrokes_FWD_DEFINED__ */


#ifndef __InkRenderer_FWD_DEFINED__
#define __InkRenderer_FWD_DEFINED__

#ifdef __cplusplus
typedef class InkRenderer InkRenderer;
#else
typedef struct InkRenderer InkRenderer;
#endif /* __cplusplus */

#endif 	/* __InkRenderer_FWD_DEFINED__ */


#ifndef __InkOverlay_FWD_DEFINED__
#define __InkOverlay_FWD_DEFINED__

#ifdef __cplusplus
typedef class InkOverlay InkOverlay;
#else
typedef struct InkOverlay InkOverlay;
#endif /* __cplusplus */

#endif 	/* __InkOverlay_FWD_DEFINED__ */


#ifndef __InkRecognizers_FWD_DEFINED__
#define __InkRecognizers_FWD_DEFINED__

#ifdef __cplusplus
typedef class InkRecognizers InkRecognizers;
#else
typedef struct InkRecognizers InkRecognizers;
#endif /* __cplusplus */

#endif 	/* __InkRecognizers_FWD_DEFINED__ */


#ifndef __InkRecognizerContext_FWD_DEFINED__
#define __InkRecognizerContext_FWD_DEFINED__

#ifdef __cplusplus
typedef class InkRecognizerContext InkRecognizerContext;
#else
typedef struct InkRecognizerContext InkRecognizerContext;
#endif /* __cplusplus */

#endif 	/* __InkRecognizerContext_FWD_DEFINED__ */


#ifndef __InkWordList_FWD_DEFINED__
#define __InkWordList_FWD_DEFINED__

#ifdef __cplusplus
typedef class InkWordList InkWordList;
#else
typedef struct InkWordList InkWordList;
#endif /* __cplusplus */

#endif 	/* __InkWordList_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_msinkaut_0000 */
/* [local] */ 

#define _XFORM_
#include <WLiteError.h> 
#pragma once
typedef /* [hidden] */ 
enum DISPID_INKRECTANGLE
    {	DISPID_IRTOP	= 1,
    DISPID_IRLEFT	= DISPID_IRTOP + 1,
    DISPID_IRBOTTOM	= DISPID_IRLEFT + 1,
    DISPID_IRRIGHT	= DISPID_IRBOTTOM + 1,
    DISPID_IRGETRECTANGLE	= DISPID_IRRIGHT + 1,
    DISPID_IRSETRECTANGLE	= DISPID_IRGETRECTANGLE + 1,
    DISPID_IRDATA	= DISPID_IRSETRECTANGLE + 1
    }	DISPID_INKRECTANGLE;

typedef /* [hidden] */ 
enum DISPID_INKEXTENDEDPROPERTY
    {	DISPID_IEPGUID	= 1,
    DISPID_IEPDATA	= DISPID_IEPGUID + 1
    }	DISPID_INKEXTENDEDPROPERTY;

typedef /* [hidden] */ 
enum DISPID_INKEXTENDEDPROPERTIES
    {	DISPID_IEPS_NEWENUM	= DISPID_NEWENUM,
    DISPID_IEPSITEM	= DISPID_VALUE,
    DISPID_IEPSCOUNT	= 1,
    DISPID_IEPSADD	= DISPID_IEPSCOUNT + 1,
    DISPID_IEPSREMOVE	= DISPID_IEPSADD + 1,
    DISPID_IEPSCLEAR	= DISPID_IEPSREMOVE + 1,
    DISPID_IEPSDOESPROPERTYEXIST	= DISPID_IEPSCLEAR + 1
    }	DISPID_INKEXTENDEDPROPERTIES;

typedef /* [hidden] */ 
enum DISPID_INKDRAWINGATTRIBUTES
    {	DISPID_DAHEIGHT	= 1,
    DISPID_DACOLOR	= DISPID_DAHEIGHT + 1,
    DISPID_DAWIDTH	= DISPID_DACOLOR + 1,
    DISPID_DAFITTOCURVE	= DISPID_DAWIDTH + 1,
    DISPID_DAIGNOREPRESSURE	= DISPID_DAFITTOCURVE + 1,
    DISPID_DAANTIALIASED	= DISPID_DAIGNOREPRESSURE + 1,
    DISPID_DATRANSPARENCY	= DISPID_DAANTIALIASED + 1,
    DISPID_DARASTEROPERATION	= DISPID_DATRANSPARENCY + 1,
    DISPID_DAPENTIP	= DISPID_DARASTEROPERATION + 1,
    DISPID_DACLONE	= DISPID_DAPENTIP + 1,
    DISPID_DAEXTENDEDPROPERTIES	= DISPID_DACLONE + 1
    }	DISPID_INKDRAWINGATTRIBUTES;

typedef /* [hidden] */ 
enum DISPID_INKSTROKEDISP
    {	DISPID_ISDINKINDEX	= 1,
    DISPID_ISDID	= DISPID_ISDINKINDEX + 1,
    DISPID_ISDGETBOUNDINGBOX	= DISPID_ISDID + 1,
    DISPID_ISDDRAWINGATTRIBUTES	= DISPID_ISDGETBOUNDINGBOX + 1,
    DISPID_ISDFINDINTERSECTIONS	= DISPID_ISDDRAWINGATTRIBUTES + 1,
    DISPID_ISDGETRECTANGLEINTERSECTIONS	= DISPID_ISDFINDINTERSECTIONS + 1,
    DISPID_ISDCLIP	= DISPID_ISDGETRECTANGLEINTERSECTIONS + 1,
    DISPID_ISDHITTESTCIRCLE	= DISPID_ISDCLIP + 1,
    DISPID_ISDNEARESTPOINT	= DISPID_ISDHITTESTCIRCLE + 1,
    DISPID_ISDSPLIT	= DISPID_ISDNEARESTPOINT + 1,
    DISPID_ISDEXTENDEDPROPERTIES	= DISPID_ISDSPLIT + 1,
    DISPID_ISDINK	= DISPID_ISDEXTENDEDPROPERTIES + 1,
    DISPID_ISDBEZIERPOINTS	= DISPID_ISDINK + 1,
    DISPID_ISDPOLYLINECUSPS	= DISPID_ISDBEZIERPOINTS + 1,
    DISPID_ISDBEZIERCUSPS	= DISPID_ISDPOLYLINECUSPS + 1,
    DISPID_ISDSELFINTERSECTIONS	= DISPID_ISDBEZIERCUSPS + 1,
    DISPID_ISDPACKETCOUNT	= DISPID_ISDSELFINTERSECTIONS + 1,
    DISPID_ISDPACKETSIZE	= DISPID_ISDPACKETCOUNT + 1,
    DISPID_ISDPACKETDESCRIPTION	= DISPID_ISDPACKETSIZE + 1,
    DISPID_ISDDELETED	= DISPID_ISDPACKETDESCRIPTION + 1,
    DISPID_ISDGETPACKETDESCRIPTIONPROPERTYMETRICS	= DISPID_ISDDELETED + 1,
    DISPID_ISDGETPOINTS	= DISPID_ISDGETPACKETDESCRIPTIONPROPERTYMETRICS + 1,
    DISPID_ISDSETPOINTS	= DISPID_ISDGETPOINTS + 1,
    DISPID_ISDGETPACKETDATA	= DISPID_ISDSETPOINTS + 1,
    DISPID_ISDGETPACKETVALUESBYPROPERTY	= DISPID_ISDGETPACKETDATA + 1,
    DISPID_ISDSETPACKETVALUESBYPROPERTY	= DISPID_ISDGETPACKETVALUESBYPROPERTY + 1,
    DISPID_ISDGETFLATTENEDBEZIERPOINTS	= DISPID_ISDSETPACKETVALUESBYPROPERTY + 1,
    DISPID_ISDSCALETORECTANGLE	= DISPID_ISDGETFLATTENEDBEZIERPOINTS + 1,
    DISPID_ISDTRANSFORM	= DISPID_ISDSCALETORECTANGLE + 1,
    DISPID_ISDMOVE	= DISPID_ISDTRANSFORM + 1,
    DISPID_ISDROTATE	= DISPID_ISDMOVE + 1,
    DISPID_ISDSHEAR	= DISPID_ISDROTATE + 1,
    DISPID_ISDSCALE	= DISPID_ISDSHEAR + 1
    }	DISPID_INKSTROKEDISP;

typedef /* [hidden] */ 
enum DISPID_INKTRANSFORM
    {	DISPID_ITRESET	= 1,
    DISPID_ITTRANSLATE	= DISPID_ITRESET + 1,
    DISPID_ITROTATE	= DISPID_ITTRANSLATE + 1,
    DISPID_ITREFLECT	= DISPID_ITROTATE + 1,
    DISPID_ITSHEAR	= DISPID_ITREFLECT + 1,
    DISPID_ITSCALE	= DISPID_ITSHEAR + 1,
    DISPID_ITEM11	= DISPID_ITSCALE + 1,
    DISPID_ITEM12	= DISPID_ITEM11 + 1,
    DISPID_ITEM21	= DISPID_ITEM12 + 1,
    DISPID_ITEM22	= DISPID_ITEM21 + 1,
    DISPID_ITEDX	= DISPID_ITEM22 + 1,
    DISPID_ITEDY	= DISPID_ITEDX + 1,
    DISPID_ITGETTRANSFORM	= DISPID_ITEDY + 1,
    DISPID_ITSETTRANSFORM	= DISPID_ITGETTRANSFORM + 1,
    DISPID_ITDATA	= DISPID_ITSETTRANSFORM + 1
    }	DISPID_INKTRANSFORM;

typedef /* [hidden] */ 
enum DISPID_INK
    {	DISPID_ISTROKES	= 1,
    DISPID_IEXTENDEDPROPERTIES	= DISPID_ISTROKES + 1,
    DISPID_IGETBOUNDINGBOX	= DISPID_IEXTENDEDPROPERTIES + 1,
    DISPID_IDELETESTROKES	= DISPID_IGETBOUNDINGBOX + 1,
    DISPID_IDELETESTROKE	= DISPID_IDELETESTROKES + 1,
    DISPID_IEXTRACTSTROKES	= DISPID_IDELETESTROKE + 1,
    DISPID_IEXTRACTWITHRECTANGLE	= DISPID_IEXTRACTSTROKES + 1,
    DISPID_IDIRTY	= DISPID_IEXTRACTWITHRECTANGLE + 1,
    DISPID_ICUSTOMSTROKES	= DISPID_IDIRTY + 1,
    DISPID_ICLONE	= DISPID_ICUSTOMSTROKES + 1,
    DISPID_IHITTESTCIRCLE	= DISPID_ICLONE + 1,
    DISPID_IHITTESTWITHRECTANGLE	= DISPID_IHITTESTCIRCLE + 1,
    DISPID_IHITTESTWITHLASSO	= DISPID_IHITTESTWITHRECTANGLE + 1,
    DISPID_INEARESTPOINT	= DISPID_IHITTESTWITHLASSO + 1,
    DISPID_ICREATESTROKES	= DISPID_INEARESTPOINT + 1,
    DISPID_ICREATESTROKE	= DISPID_ICREATESTROKES + 1,
    DISPID_IADDSTROKESATRECTANGLE	= DISPID_ICREATESTROKE + 1,
    DISPID_ICLIP	= DISPID_IADDSTROKESATRECTANGLE + 1,
    DISPID_ISAVE	= DISPID_ICLIP + 1,
    DISPID_ILOAD	= DISPID_ISAVE + 1,
    DISPID_ICREATESTROKEFROMPOINTS	= DISPID_ILOAD + 1,
    DISPID_ICLIPBOARDCOPYWITHRECTANGLE	= DISPID_ICREATESTROKEFROMPOINTS + 1,
    DISPID_ICLIPBOARDCOPY	= DISPID_ICLIPBOARDCOPYWITHRECTANGLE + 1,
    DISPID_ICANPASTE	= DISPID_ICLIPBOARDCOPY + 1,
    DISPID_ICLIPBOARDPASTE	= DISPID_ICANPASTE + 1
    }	DISPID_INK;

typedef /* [hidden] */ 
enum DISPID_INKEVENT
    {	DISPID_IEINKADDED	= 1,
    DISPID_IEINKDELETED	= DISPID_IEINKADDED + 1
    }	DISPID_INKEVENT;

typedef /* [hidden] */ 
enum DISPID_INKSTROKES
    {	DISPID_ISS_NEWENUM	= DISPID_NEWENUM,
    DISPID_ISSITEM	= DISPID_VALUE,
    DISPID_ISSCOUNT	= 1,
    DISPID_ISSVALID	= DISPID_ISSCOUNT + 1,
    DISPID_ISSINK	= DISPID_ISSVALID + 1,
    DISPID_ISSADD	= DISPID_ISSINK + 1,
    DISPID_ISSADDSTROKES	= DISPID_ISSADD + 1,
    DISPID_ISSREMOVE	= DISPID_ISSADDSTROKES + 1,
    DISPID_ISSREMOVESTROKES	= DISPID_ISSREMOVE + 1,
    DISPID_ISSTOSTRING	= DISPID_ISSREMOVESTROKES + 1,
    DISPID_ISSMODIFYDRAWINGATTRIBUTES	= DISPID_ISSTOSTRING + 1,
    DISPID_ISSGETBOUNDINGBOX	= DISPID_ISSMODIFYDRAWINGATTRIBUTES + 1,
    DISPID_ISSSCALETORECTANGLE	= DISPID_ISSGETBOUNDINGBOX + 1,
    DISPID_ISSTRANSFORM	= DISPID_ISSSCALETORECTANGLE + 1,
    DISPID_ISSMOVE	= DISPID_ISSTRANSFORM + 1,
    DISPID_ISSROTATE	= DISPID_ISSMOVE + 1,
    DISPID_ISSSHEAR	= DISPID_ISSROTATE + 1,
    DISPID_ISSSCALE	= DISPID_ISSSHEAR + 1,
    DISPID_ISSCLIP	= DISPID_ISSSCALE + 1,
    DISPID_ISSRECOGNITIONRESULT	= DISPID_ISSCLIP + 1,
    DISPID_ISSREMOVERECOGNITIONRESULT	= DISPID_ISSRECOGNITIONRESULT + 1
    }	DISPID_INKSTROKES;

typedef /* [hidden] */ 
enum DISPID_STROKEEVENT
    {	DISPID_SESTROKESADDED	= 1,
    DISPID_SESTROKESREMOVED	= DISPID_SESTROKESADDED + 1
    }	DISPID_STROKEEVENT;

typedef /* [hidden] */ 
enum DISPID_INKCUSTOMSTROKES
    {	DISPID_ICSS_NEWENUM	= DISPID_NEWENUM,
    DISPID_ICSSITEM	= DISPID_VALUE,
    DISPID_ICSSCOUNT	= 1,
    DISPID_ICSSADD	= DISPID_ICSSCOUNT + 1,
    DISPID_ICSSREMOVE	= DISPID_ICSSADD + 1,
    DISPID_ICSSCLEAR	= DISPID_ICSSREMOVE + 1
    }	DISPID_INKCUSTOMSTROKES;

typedef /* [hidden] */ 
enum DISPID_INKRENDERER
    {	DISPID_IRGETVIEWTRANSFORM	= 1,
    DISPID_IRSETVIEWTRANSFORM	= DISPID_IRGETVIEWTRANSFORM + 1,
    DISPID_IRGETOBJECTTRANSFORM	= DISPID_IRSETVIEWTRANSFORM + 1,
    DISPID_IRSETOBJECTTRANSFORM	= DISPID_IRGETOBJECTTRANSFORM + 1,
    DISPID_IRDRAW	= DISPID_IRSETOBJECTTRANSFORM + 1,
    DISPID_IRDRAWSTROKE	= DISPID_IRDRAW + 1,
    DISPID_IRPIXELTOINKSPACE	= DISPID_IRDRAWSTROKE + 1,
    DISPID_IRINKSPACETOPIXEL	= DISPID_IRPIXELTOINKSPACE + 1,
    DISPID_IRPIXELTOINKSPACEFROMPOINTS	= DISPID_IRINKSPACETOPIXEL + 1,
    DISPID_IRINKSPACETOPIXELFROMPOINTS	= DISPID_IRPIXELTOINKSPACEFROMPOINTS + 1,
    DISPID_IRMEASURE	= DISPID_IRINKSPACETOPIXELFROMPOINTS + 1,
    DISPID_IRMEASURESTROKE	= DISPID_IRMEASURE + 1,
    DISPID_IRMOVE	= DISPID_IRMEASURESTROKE + 1,
    DISPID_IRROTATE	= DISPID_IRMOVE + 1,
    DISPID_IRSCALE	= DISPID_IRROTATE + 1
    }	DISPID_INKRENDERER;

#pragma once
#pragma once
#pragma once
typedef /* [helpcontext][helpstring] */ 
enum InkPenTip
    {	IPT_Ball	= 0
    }	InkPenTip;

typedef /* [helpcontext][helpstring] */ 
enum InkRasterOperation
    {	IRO_Black	= 1,
    IRO_NotMergePen	= 2,
    IRO_MaskNotPen	= 3,
    IRO_NotCopyPen	= 4,
    IRO_MaskPenNot	= 5,
    IRO_Not	= 6,
    IRO_XOrPen	= 7,
    IRO_NotMaskPen	= 8,
    IRO_MaskPen	= 9,
    IRO_NotXOrPen	= 10,
    IRO_NoOperation	= 11,
    IRO_MergeNotPen	= 12,
    IRO_CopyPen	= 13,
    IRO_MergePenNot	= 14,
    IRO_MergePen	= 15,
    IRO_White	= 16
    }	InkRasterOperation;

#define IRO_Last (IRO_White+1)
typedef /* [helpcontext][helpstring] */ 
enum InkBoundingBoxMode
    {	IBBM_Default	= 0,
    IBBM_NoCurveFit	= 1,
    IBBM_CurveFit	= 2,
    IBBM_PointsOnly	= 3,
    IBBM_Union	= 4
    }	InkBoundingBoxMode;

#define IBBM_Last (IBBM_Union+1)
typedef /* [helpcontext][helpstring] */ 
enum ItemSelectionConstants
    {	ISC_FirstElement	= 0,
    ISC_AllElements	= -1
    }	InkSelectionConstants;

typedef /* [helpcontext][helpstring] */ 
enum InkExtractFlags
    {	IEF_CopyFromOriginal	= 0,
    IEF_RemoveFromOriginal	= 0x1,
    IEF_Default	= IEF_RemoveFromOriginal
    }	InkExtractFlags;

typedef /* [helpcontext][helpstring] */ 
enum InkPersistenceFormat
    {	IPF_InkSerializedFormat	= 0,
    IPF_Base64InkSerializedFormat	= 1,
    IPF_GIF	= 2,
    IPF_Base64GIF	= 3
    }	InkPersistenceFormat;

typedef /* [helpcontext][helpstring] */ 
enum InkPersistenceCompressionMode
    {	IPCM_Default	= 0
    }	InkPersistenceCompressionMode;

typedef /* [helpcontext][helpstring] */ 
enum InkClipboardModes
    {	ICB_Copy	= 0,
    ICB_Cut	= 0x1,
    ICB_Default	= ICB_Copy
    }	InkClipboardModes;

typedef /* [helpcontext][helpstring] */ 
enum InkClipboardFormats
    {	ICF_InkSerializedFormat	= 0x1,
    ICF_Bitmap	= 0x40,
    ICF_Default	= ICF_Bitmap | ICF_InkSerializedFormat
    }	InkClipboardFormats;

#ifndef _XFORM_
#define _XFORM_
typedef /* [hidden] */ struct tagXFORM
    {
    float eM11;
    float eM12;
    float eM21;
    float eM22;
    float eDx;
    float eDy;
    }	XFORM;

#endif
typedef 
enum InkCollectorEventInterest
    {	ICEI_DefaultEvents	= -1,
    ICEI_Stroke	= ICEI_DefaultEvents + 1,
    ICEI_MouseDown	= ICEI_Stroke + 1,
    ICEI_MouseMove	= ICEI_MouseDown + 1,
    ICEI_MouseUp	= ICEI_MouseMove + 1,
    ICEI_DblClick	= ICEI_MouseUp + 1,
    ICEI_AllEvents	= ICEI_DblClick + 1
    }	InkCollectorEventInterest;

typedef 
enum InkMouseButton
    {	IMF_Left	= 1,
    IMF_Right	= 2,
    IMF_Middle	= 4
    }	InkMouseButton;

typedef 
enum InkShiftKeyModifierFlags
    {	IKM_Shift	= 0x1,
    IKM_Control	= 0x2,
    IKM_Alt	= 0x4
    }	InkShiftKeyModifierFlags;

typedef /* [hidden] */ 
enum DISPID_InkCursor
    {	DISPID_ICSRNAME	= DISPID_VALUE,
    DISPID_ICSRID	= 1,
    DISPID_ICSRDRAWINGATTRIBUTES	= DISPID_ICSRID + 1,
    DISPID_ICSRBUTTONS	= DISPID_ICSRDRAWINGATTRIBUTES + 1,
    DISPID_ICSRINVERTED	= DISPID_ICSRBUTTONS + 1,
    DISPID_ICSRTABLET	= DISPID_ICSRINVERTED + 1
    }	DISPID_InkCursor;

typedef /* [hidden] */ 
enum DISPID_InkCollectorEvent
    {	DISPID_ICESTROKE	= 1,
    DISPID_ICECURSORDOWN	= DISPID_ICESTROKE + 1,
    DISPID_ICESYSTEMGESTURE	= DISPID_ICECURSORDOWN + 1,
    DISPID_IOEPAINTING	= DISPID_ICESYSTEMGESTURE + 1,
    DISPID_IOEPAINTED	= DISPID_IOEPAINTING + 1,
    DISPID_IOESELECTIONCHANGED	= DISPID_IOEPAINTED + 1,
    DISPID_IOESELECTIONMOVED	= DISPID_IOESELECTIONCHANGED + 1,
    DISPID_IOESELECTIONRESIZED	= DISPID_IOESELECTIONMOVED + 1,
    DISPID_IOESTROKESDELETING	= DISPID_IOESELECTIONRESIZED + 1,
    DISPID_IOESTROKESDELETED	= DISPID_IOESTROKESDELETING + 1,
    DISPID_IPECLICK	= DISPID_IOESTROKESDELETED + 1,
    DISPID_IPEDBLCLICK	= DISPID_IPECLICK + 1,
    DISPID_IPEINVALIDATED	= DISPID_IPEDBLCLICK + 1,
    DISPID_IPEMOUSEDOWN	= DISPID_IPEINVALIDATED + 1,
    DISPID_IPEMOUSEMOVE	= DISPID_IPEMOUSEDOWN + 1,
    DISPID_IPEMOUSEUP	= DISPID_IPEMOUSEMOVE + 1,
    DISPID_IPESIZEMODECHANGED	= DISPID_IPEMOUSEUP + 1,
    DISPID_IPERESIZE	= DISPID_IPESIZEMODECHANGED + 1,
    DISPID_IPESIZECHANGED	= DISPID_IPERESIZE + 1
    }	DISPID_InkCollectorEvent;

typedef /* [hidden] */ 
enum DISPID_InkCollector
    {	DISPID_ICENABLED	= 1,
    DISPID_ICHWND	= DISPID_ICENABLED + 1,
    DISPID_ICPAINT	= DISPID_ICHWND + 1,
    DISPID_ICTEXT	= DISPID_ICPAINT + 1,
    DISPID_ICDEFAULTDRAWINGATTRIBUTES	= DISPID_ICTEXT + 1,
    DISPID_ICRENDERER	= DISPID_ICDEFAULTDRAWINGATTRIBUTES + 1,
    DISPID_ICINK	= DISPID_ICRENDERER + 1,
    DISPID_ICAUTOREDRAW	= DISPID_ICINK + 1,
    DISPID_ICCOLLECTINGINK	= DISPID_ICAUTOREDRAW + 1,
    DISPID_ICSETEVENTINTEREST	= DISPID_ICCOLLECTINGINK + 1,
    DISPID_ICGETEVENTINTEREST	= DISPID_ICSETEVENTINTEREST + 1,
    DISPID_IOEDITINGMODE	= DISPID_ICGETEVENTINTEREST + 1,
    DISPID_IOSELECTION	= DISPID_IOEDITINGMODE + 1,
    DISPID_IOATTACHMODE	= DISPID_IOSELECTION + 1,
    DISPID_IOHITTESTSELECTION	= DISPID_IOATTACHMODE + 1,
    DISPID_IODRAW	= DISPID_IOHITTESTSELECTION + 1,
    DISPID_IPPICTURE	= DISPID_IODRAW + 1,
    DISPID_IPSIZEMODE	= DISPID_IPPICTURE + 1,
    DISPID_IPBACKCOLOR	= DISPID_IPSIZEMODE + 1,
    DISPID_ICCURSORS	= DISPID_IPBACKCOLOR + 1,
    DISPID_ICMARGINX	= DISPID_ICCURSORS + 1,
    DISPID_ICMARGINY	= DISPID_ICMARGINX + 1,
    DISPID_ICSETWINDOWINPUTRECTANGLE	= DISPID_ICMARGINY + 1,
    DISPID_ICGETWINDOWINPUTRECTANGLE	= DISPID_ICSETWINDOWINPUTRECTANGLE + 1,
    DISPID_ICCOLLECTIONMODE	= DISPID_ICGETWINDOWINPUTRECTANGLE + 1,
    DISPID_ICDYNAMICRENDERING	= DISPID_ICCOLLECTIONMODE + 1,
    DISPID_ICDESIREDPACKETDESCRIPTION	= DISPID_ICDYNAMICRENDERING + 1,
    DISPID_IOERASERMODE	= DISPID_ICDESIREDPACKETDESCRIPTION + 1,
    DISPID_IPINKENABLED	= DISPID_IOERASERMODE + 1,
    DISPID_ICSUPPORTHIGHCONTRASTINK	= DISPID_IPINKENABLED + 1,
    DISPID_IOSUPPORTHIGHCONTRASTSELECTIONUI	= DISPID_ICSUPPORTHIGHCONTRASTINK + 1
    }	DISPID_INKCOLLECTOR;

typedef /* [helpcontext][helpstring] */ 
enum InkOverlayEditingMode
    {	IOEM_Ink	= 0,
    IOEM_Delete	= 1,
    IOEM_Select	= 2
    }	InkOverlayEditingMode;

#define IOEM_Last IOEM_Select + 1
typedef /* [helpcontext][helpstring] */ 
enum InkOverlayEraserMode
    {	IOERM_StrokeErase	= 0
    }	InkOverlayEraserMode;

typedef 
enum InkCollectionMode
    {	ICM_InkOnly	= 0
    }	InkCollectionMode;

typedef /* [helpcontext][helpstring] */ 
enum SelectionHitResult
    {	SHR_None	= 0,
    SHR_NW	= SHR_None + 1,
    SHR_SE	= SHR_NW + 1,
    SHR_NE	= SHR_SE + 1,
    SHR_SW	= SHR_NE + 1,
    SHR_E	= SHR_SW + 1,
    SHR_W	= SHR_E + 1,
    SHR_N	= SHR_W + 1,
    SHR_S	= SHR_N + 1,
    SHR_Selection	= SHR_S + 1
    }	SelectionHitResult;

typedef /* [helpcontext][helpstring] */ 
enum InkRecognitionStatus
    {	IRS_NoError	= 0,
    IRS_Interrupted	= 0x1,
    IRS_ProcessFailed	= 0x2,
    IRS_InkAddedFailed	= 0x4,
    IRS_SetAutoCompletionModeFailed	= 0x8,
    IRS_SetStrokesFailed	= 0x10,
    IRS_SetGuideFailed	= 0x20,
    IRS_SetFlagsFailed	= 0x40,
    IRS_SetFactoidFailed	= 0x80,
    IRS_SetPrefixSuffixFailed	= 0x100,
    IRS_SetWordListFailed	= 0x200
    }	InkRecognitionStatus;

typedef 
enum InkRecognitionConfidence
    {	IRC_Strong	= 0,
    IRC_Intermediate	= 1,
    IRC_Poor	= 2
    }	InkRecognitionConfidence;

typedef /* [hidden] */ 
enum DISPID_InkWordList
    {	DISPID_INKWORDLIST_ADDWORD	= 0,
    DISPID_INKWORDLIST_REMOVEWORD	= DISPID_INKWORDLIST_ADDWORD + 1,
    DISPID_INKWORDLIST_MERGE	= DISPID_INKWORDLIST_REMOVEWORD + 1
    }	DISPID_InkWordList;

typedef /* [hidden] */ 
enum DISPID_InkRecognizer
    {	DISPID_RECOCLSID	= 1,
    DISPID_RECONAME	= 2,
    DISPID_RECOVENDOR	= 3,
    DISPID_RECOCAPABILITIES	= 4,
    DISPID_RECOLANGUAGEID	= 5,
    DISPID_RECOPREFERREDPACKETDESCRIPTION	= 6,
    DISPID_RECOCREATERECOGNIZERCONTEXT	= 7,
    DISPID_RECOSUPPORTEDPROPERTIES	= 8
    }	DISPID_InkRecognizer;

typedef 
enum InkRecognizerCapabilities
    {	IRC_DontCare	= 1,
    IRC_Object	= 2,
    IRC_FreeInput	= 4,
    IRC_LinedInput	= 8,
    IRC_BoxedInput	= 16,
    IRC_CharacterAutoCompletionInput	= 32,
    IRC_RightAndDown	= 64,
    IRC_LeftAndDown	= 128,
    IRC_DownAndLeft	= 256,
    IRC_DownAndRight	= 512,
    IRC_ArbitraryAngle	= 1024,
    IRC_Lattice	= 2048,
    IRC_AdviseInkChange	= 4096,
    IRC_StrokeReorder	= 8192
    }	InkRecognizerCapabilities;

typedef /* [hidden] */ 
enum DISPID_InkRecognizers
    {	DISPID_IRECOS_NEWENUM	= DISPID_NEWENUM,
    DISPID_IRECOSITEM	= DISPID_VALUE,
    DISPID_IRECOSCOUNT	= 1,
    DISPID_IRECOSGETDEFAULTRECOGNIZER	= DISPID_IRECOSCOUNT + 1
    }	DISPID_InkRecognizers;

typedef /* [hidden] */ 
enum DISPID_InkRecoContext
    {	DISPID_IRECOCTX_STROKES	= 1,
    DISPID_IRECOCTX_CHARACTERAUTOCOMPLETIONMODE	= DISPID_IRECOCTX_STROKES + 1,
    DISPID_IRECOCTX_FACTOID	= DISPID_IRECOCTX_CHARACTERAUTOCOMPLETIONMODE + 1,
    DISPID_IRECOCTX_WORDLIST	= DISPID_IRECOCTX_FACTOID + 1,
    DISPID_IRECOCTX_RECOGNIZER	= DISPID_IRECOCTX_WORDLIST + 1,
    DISPID_IRECOCTX_GUIDE	= DISPID_IRECOCTX_RECOGNIZER + 1,
    DISPID_IRECOCTX_FLAGS	= DISPID_IRECOCTX_GUIDE + 1,
    DISPID_IRECOCTX_PREFIXTEXT	= DISPID_IRECOCTX_FLAGS + 1,
    DISPID_IRECOCTX_SUFFIXTEXT	= DISPID_IRECOCTX_PREFIXTEXT + 1,
    DISPID_IRECOCTX_STOPRECOGNITION	= DISPID_IRECOCTX_SUFFIXTEXT + 1,
    DISPID_IRECOCTX_CLONE	= DISPID_IRECOCTX_STOPRECOGNITION + 1,
    DISPID_IRECOCTX_RECOGNIZE	= DISPID_IRECOCTX_CLONE + 1,
    DISPID_IRECOCTX_STOPBACKGROUNDRECOGNITION	= DISPID_IRECOCTX_RECOGNIZE + 1,
    DISPID_IRECOCTX_ENDINKINPUT	= DISPID_IRECOCTX_STOPBACKGROUNDRECOGNITION + 1,
    DISPID_IRECOCTX_BACKGROUNDRECOGNIZE	= DISPID_IRECOCTX_ENDINKINPUT + 1,
    DISPID_IRECOCTX_BACKGROUNDRECOGNIZEWITHALTERNATES	= DISPID_IRECOCTX_BACKGROUNDRECOGNIZE + 1,
    DISPID_IRECOCTX_ISSTRINGSUPPORTED	= DISPID_IRECOCTX_BACKGROUNDRECOGNIZEWITHALTERNATES + 1
    }	DISPID_InkRecoContext;

typedef /* [hidden] */ 
enum DISPID_InkRecognitionEvent
    {	DISPID_IRERECOGNITIONWITHALTERNATES	= 1,
    DISPID_IRERECOGNITION	= DISPID_IRERECOGNITIONWITHALTERNATES + 1
    }	DISPID_InkRecognitionEvent;

typedef 
enum InkRecognizerCharacterAutoCompletionMode
    {	IRCACM_Full	= 0,
    IRCACM_Prefix	= IRCACM_Full + 1,
    IRCACM_Random	= IRCACM_Prefix + 1
    }	InkRecognizerCharacterAutoCompletionMode;

typedef 
enum InkRecognitionModes
    {	IRM_None	= 0,
    IRM_WordModeOnly	= 1,
    IRM_Coerce	= 2,
    IRM_TopInkBreaksOnly	= 4,
    IRM_Max	= 8
    }	InkRecognitionModes;

typedef /* [helpcontext][helpstring] */ 
enum InkRecognitionAlternatesSelection
    {	IRAS_Start	= 0,
    IRAS_DefaultCount	= 10,
    IRAS_All	= -1
    }	InkRecognitionAlternatesSelection;

typedef /* [hidden] */ 
enum DISPID_InkRecognitionResult
    {	DISPID_INKRECOGNITIONRESULT_TOPSTRING	= 1,
    DISPID_INKRECOGNITIONRESULT_TOPALTERNATE	= DISPID_INKRECOGNITIONRESULT_TOPSTRING + 1,
    DISPID_INKRECOGNITIONRESULT_STROKES	= DISPID_INKRECOGNITIONRESULT_TOPALTERNATE + 1,
    DISPID_INKRECOGNITIONRESULT_TOPCONFIDENCE	= DISPID_INKRECOGNITIONRESULT_STROKES + 1,
    DISPID_INKRECOGNITIONRESULT_ALTERNATESFROMSELECTION	= DISPID_INKRECOGNITIONRESULT_TOPCONFIDENCE + 1,
    DISPID_INKRECOGNITIONRESULT_MODIFYTOPALTERNATE	= DISPID_INKRECOGNITIONRESULT_ALTERNATESFROMSELECTION + 1,
    DISPID_INKRECOGNITIONRESULT_SETRESULTONSTROKES	= DISPID_INKRECOGNITIONRESULT_MODIFYTOPALTERNATE + 1
    }	DISPID_InkRecognitionResult;

typedef /* [hidden] */ 
enum DISPID_InkRecoAlternate
    {	DISPID_INKRECOALTERNATE_STRING	= 1,
    DISPID_INKRECOALTERNATE_LINENUMBER	= DISPID_INKRECOALTERNATE_STRING + 1,
    DISPID_INKRECOALTERNATE_BASELINE	= DISPID_INKRECOALTERNATE_LINENUMBER + 1,
    DISPID_INKRECOALTERNATE_MIDLINE	= DISPID_INKRECOALTERNATE_BASELINE + 1,
    DISPID_INKRECOALTERNATE_ASCENDER	= DISPID_INKRECOALTERNATE_MIDLINE + 1,
    DISPID_INKRECOALTERNATE_DESCENDER	= DISPID_INKRECOALTERNATE_ASCENDER + 1,
    DISPID_INKRECOALTERNATE_CONFIDENCE	= DISPID_INKRECOALTERNATE_DESCENDER + 1,
    DISPID_INKRECOALTERNATE_STROKES	= DISPID_INKRECOALTERNATE_CONFIDENCE + 1,
    DISPID_INKRECOALTERNATE_GETSTROKESFROMSTROKERANGES	= DISPID_INKRECOALTERNATE_STROKES + 1,
    DISPID_INKRECOALTERNATE_GETSTROKESFROMTEXTRANGE	= DISPID_INKRECOALTERNATE_GETSTROKESFROMSTROKERANGES + 1,
    DISPID_INKRECOALTERNATE_GETTEXTRANGEFROMSTROKES	= DISPID_INKRECOALTERNATE_GETSTROKESFROMTEXTRANGE + 1,
    DISPID_INKRECOALTERNATE_GETPROPERTYVALUE	= DISPID_INKRECOALTERNATE_GETTEXTRANGEFROMSTROKES + 1,
    DISPID_INKRECOALTERNATE_LINEALTERNATES	= DISPID_INKRECOALTERNATE_GETPROPERTYVALUE + 1,
    DISPID_INKRECOALTERNATE_CONFIDENCEALTERNATES	= DISPID_INKRECOALTERNATE_LINEALTERNATES + 1,
    DISPID_INKRECOALTERNATE_ALTERNATESWITHCONSTANTPROPERTYVALUES	= DISPID_INKRECOALTERNATE_CONFIDENCEALTERNATES + 1
    }	DISPID_InkRecoAlternate;

typedef /* [hidden] */ 
enum DISPID_InkRecognitionAlternates
    {	DISPID_INKRECOGNITIONALTERNATES_NEWENUM	= DISPID_NEWENUM,
    DISPID_INKRECOGNITIONALTERNATES_ITEM	= DISPID_VALUE,
    DISPID_INKRECOGNITIONALTERNATES_COUNT	= 1,
    DISPID_INKRECOGNITIONALTERNATES_STROKES	= DISPID_INKRECOGNITIONALTERNATES_COUNT + 1
    }	DISPID_InkRecognitionAlternates;

typedef 
enum tagKEYMODIFIERS
    {	KEYMOD_SHIFT	= 0x1,
    KEYMOD_CONTROL	= 0x2,
    KEYMOD_ALT	= 0x4
    }	KEYMODIFIERS;

typedef 
enum tagMOUSEBUTTONS
    {	MOUSEBUTTON_LEFT	= 0x1,
    MOUSEBUTTON_RIGHT	= 0x2,
    MOUSEBUTTON_MIDDLE	= 0x4
    }	MOUSEBUTTONS;












extern RPC_IF_HANDLE __MIDL_itf_msinkaut_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msinkaut_0000_v0_0_s_ifspec;

#ifndef __IInkRectangle_INTERFACE_DEFINED__
#define __IInkRectangle_INTERFACE_DEFINED__

/* interface IInkRectangle */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkRectangle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9794FF82-6071-4717-8A8B-6AC7C64A686E")
    IInkRectangle : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ long __RPC_FAR *plUnits) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Top( 
            /* [in] */ long lUnits) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ long __RPC_FAR *plUnits) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Left( 
            /* [in] */ long lUnits) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Bottom( 
            /* [retval][out] */ long __RPC_FAR *plUnits) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Bottom( 
            /* [in] */ long lUnits) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Right( 
            /* [retval][out] */ long __RPC_FAR *plUnits) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Right( 
            /* [in] */ long lUnits) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_Data( 
            /* [retval][out] */ RECT __RPC_FAR *prcData) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_Data( 
            /* [in] */ RECT rcData) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetRectangle( 
            /* [out] */ long __RPC_FAR *plTop,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plBottom,
            /* [out] */ long __RPC_FAR *plRight) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SetRectangle( 
            /* [in] */ long lTop,
            /* [in] */ long lLeft,
            /* [in] */ long lBottom,
            /* [in] */ long lRight) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkRectangleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkRectangle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkRectangle __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkRectangle __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkRectangle __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkRectangle __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkRectangle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkRectangle __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IInkRectangle __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plUnits);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Top )( 
            IInkRectangle __RPC_FAR * This,
            /* [in] */ long lUnits);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IInkRectangle __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plUnits);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Left )( 
            IInkRectangle __RPC_FAR * This,
            /* [in] */ long lUnits);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Bottom )( 
            IInkRectangle __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plUnits);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Bottom )( 
            IInkRectangle __RPC_FAR * This,
            /* [in] */ long lUnits);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Right )( 
            IInkRectangle __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plUnits);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Right )( 
            IInkRectangle __RPC_FAR * This,
            /* [in] */ long lUnits);
        
        /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Data )( 
            IInkRectangle __RPC_FAR * This,
            /* [retval][out] */ RECT __RPC_FAR *prcData);
        
        /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Data )( 
            IInkRectangle __RPC_FAR * This,
            /* [in] */ RECT rcData);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetRectangle )( 
            IInkRectangle __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plTop,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plBottom,
            /* [out] */ long __RPC_FAR *plRight);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetRectangle )( 
            IInkRectangle __RPC_FAR * This,
            /* [in] */ long lTop,
            /* [in] */ long lLeft,
            /* [in] */ long lBottom,
            /* [in] */ long lRight);
        
        END_INTERFACE
    } IInkRectangleVtbl;

    interface IInkRectangle
    {
        CONST_VTBL struct IInkRectangleVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkRectangle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkRectangle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkRectangle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkRectangle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkRectangle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkRectangle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkRectangle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkRectangle_get_Top(This,plUnits)	\
    (This)->lpVtbl -> get_Top(This,plUnits)

#define IInkRectangle_put_Top(This,lUnits)	\
    (This)->lpVtbl -> put_Top(This,lUnits)

#define IInkRectangle_get_Left(This,plUnits)	\
    (This)->lpVtbl -> get_Left(This,plUnits)

#define IInkRectangle_put_Left(This,lUnits)	\
    (This)->lpVtbl -> put_Left(This,lUnits)

#define IInkRectangle_get_Bottom(This,plUnits)	\
    (This)->lpVtbl -> get_Bottom(This,plUnits)

#define IInkRectangle_put_Bottom(This,lUnits)	\
    (This)->lpVtbl -> put_Bottom(This,lUnits)

#define IInkRectangle_get_Right(This,plUnits)	\
    (This)->lpVtbl -> get_Right(This,plUnits)

#define IInkRectangle_put_Right(This,lUnits)	\
    (This)->lpVtbl -> put_Right(This,lUnits)

#define IInkRectangle_get_Data(This,prcData)	\
    (This)->lpVtbl -> get_Data(This,prcData)

#define IInkRectangle_put_Data(This,rcData)	\
    (This)->lpVtbl -> put_Data(This,rcData)

#define IInkRectangle_GetRectangle(This,plTop,plLeft,plBottom,plRight)	\
    (This)->lpVtbl -> GetRectangle(This,plTop,plLeft,plBottom,plRight)

#define IInkRectangle_SetRectangle(This,lTop,lLeft,lBottom,lRight)	\
    (This)->lpVtbl -> SetRectangle(This,lTop,lLeft,lBottom,lRight)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRectangle_get_Top_Proxy( 
    IInkRectangle __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plUnits);


void __RPC_STUB IInkRectangle_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkRectangle_put_Top_Proxy( 
    IInkRectangle __RPC_FAR * This,
    /* [in] */ long lUnits);


void __RPC_STUB IInkRectangle_put_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRectangle_get_Left_Proxy( 
    IInkRectangle __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plUnits);


void __RPC_STUB IInkRectangle_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkRectangle_put_Left_Proxy( 
    IInkRectangle __RPC_FAR * This,
    /* [in] */ long lUnits);


void __RPC_STUB IInkRectangle_put_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRectangle_get_Bottom_Proxy( 
    IInkRectangle __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plUnits);


void __RPC_STUB IInkRectangle_get_Bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkRectangle_put_Bottom_Proxy( 
    IInkRectangle __RPC_FAR * This,
    /* [in] */ long lUnits);


void __RPC_STUB IInkRectangle_put_Bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRectangle_get_Right_Proxy( 
    IInkRectangle __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plUnits);


void __RPC_STUB IInkRectangle_get_Right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkRectangle_put_Right_Proxy( 
    IInkRectangle __RPC_FAR * This,
    /* [in] */ long lUnits);


void __RPC_STUB IInkRectangle_put_Right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRectangle_get_Data_Proxy( 
    IInkRectangle __RPC_FAR * This,
    /* [retval][out] */ RECT __RPC_FAR *prcData);


void __RPC_STUB IInkRectangle_get_Data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IInkRectangle_put_Data_Proxy( 
    IInkRectangle __RPC_FAR * This,
    /* [in] */ RECT rcData);


void __RPC_STUB IInkRectangle_put_Data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRectangle_GetRectangle_Proxy( 
    IInkRectangle __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plTop,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plBottom,
    /* [out] */ long __RPC_FAR *plRight);


void __RPC_STUB IInkRectangle_GetRectangle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRectangle_SetRectangle_Proxy( 
    IInkRectangle __RPC_FAR * This,
    /* [in] */ long lTop,
    /* [in] */ long lLeft,
    /* [in] */ long lBottom,
    /* [in] */ long lRight);


void __RPC_STUB IInkRectangle_SetRectangle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkRectangle_INTERFACE_DEFINED__ */


#ifndef __IInkExtendedProperty_INTERFACE_DEFINED__
#define __IInkExtendedProperty_INTERFACE_DEFINED__

/* interface IInkExtendedProperty */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkExtendedProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DB489209-B7C3-411D-90F6-1548CFFF271E")
    IInkExtendedProperty : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Guid( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Data( 
            /* [retval][out] */ VARIANT __RPC_FAR *pVal) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Data( 
            /* [in] */ VARIANT newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkExtendedPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkExtendedProperty __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkExtendedProperty __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkExtendedProperty __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkExtendedProperty __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkExtendedProperty __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkExtendedProperty __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkExtendedProperty __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Guid )( 
            IInkExtendedProperty __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Data )( 
            IInkExtendedProperty __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pVal);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Data )( 
            IInkExtendedProperty __RPC_FAR * This,
            /* [in] */ VARIANT newVal);
        
        END_INTERFACE
    } IInkExtendedPropertyVtbl;

    interface IInkExtendedProperty
    {
        CONST_VTBL struct IInkExtendedPropertyVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkExtendedProperty_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkExtendedProperty_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkExtendedProperty_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkExtendedProperty_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkExtendedProperty_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkExtendedProperty_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkExtendedProperty_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkExtendedProperty_get_Guid(This,pVal)	\
    (This)->lpVtbl -> get_Guid(This,pVal)

#define IInkExtendedProperty_get_Data(This,pVal)	\
    (This)->lpVtbl -> get_Data(This,pVal)

#define IInkExtendedProperty_put_Data(This,newVal)	\
    (This)->lpVtbl -> put_Data(This,newVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkExtendedProperty_get_Guid_Proxy( 
    IInkExtendedProperty __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB IInkExtendedProperty_get_Guid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkExtendedProperty_get_Data_Proxy( 
    IInkExtendedProperty __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pVal);


void __RPC_STUB IInkExtendedProperty_get_Data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkExtendedProperty_put_Data_Proxy( 
    IInkExtendedProperty __RPC_FAR * This,
    /* [in] */ VARIANT newVal);


void __RPC_STUB IInkExtendedProperty_put_Data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkExtendedProperty_INTERFACE_DEFINED__ */


#ifndef __IInkExtendedProperties_INTERFACE_DEFINED__
#define __IInkExtendedProperties_INTERFACE_DEFINED__

/* interface IInkExtendedProperties */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkExtendedProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("89F2A8BE-95A9-4530-8B8F-88E971E3E25F")
    IInkExtendedProperties : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *pVal) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            BSTR bstrGuid,
            VARIANT Data,
            IInkExtendedProperty __RPC_FAR *__RPC_FAR *ppunkInkProperty) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            VARIANT varID,
            IInkExtendedProperty __RPC_FAR *__RPC_FAR *ppunkInkProperty) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            VARIANT varID) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE DoesPropertyExist( 
            /* [in] */ BSTR Guid,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *DoesPropertyExist) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkExtendedPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkExtendedProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkExtendedProperties __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkExtendedProperties __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkExtendedProperties __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkExtendedProperties __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkExtendedProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkExtendedProperties __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IInkExtendedProperties __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IInkExtendedProperties __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *pVal);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IInkExtendedProperties __RPC_FAR * This,
            BSTR bstrGuid,
            VARIANT Data,
            IInkExtendedProperty __RPC_FAR *__RPC_FAR *ppunkInkProperty);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Item )( 
            IInkExtendedProperties __RPC_FAR * This,
            VARIANT varID,
            IInkExtendedProperty __RPC_FAR *__RPC_FAR *ppunkInkProperty);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IInkExtendedProperties __RPC_FAR * This,
            VARIANT varID);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clear )( 
            IInkExtendedProperties __RPC_FAR * This);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DoesPropertyExist )( 
            IInkExtendedProperties __RPC_FAR * This,
            /* [in] */ BSTR Guid,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *DoesPropertyExist);
        
        END_INTERFACE
    } IInkExtendedPropertiesVtbl;

    interface IInkExtendedProperties
    {
        CONST_VTBL struct IInkExtendedPropertiesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkExtendedProperties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkExtendedProperties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkExtendedProperties_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkExtendedProperties_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkExtendedProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkExtendedProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkExtendedProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkExtendedProperties_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IInkExtendedProperties_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IInkExtendedProperties_Add(This,bstrGuid,Data,ppunkInkProperty)	\
    (This)->lpVtbl -> Add(This,bstrGuid,Data,ppunkInkProperty)

#define IInkExtendedProperties_Item(This,varID,ppunkInkProperty)	\
    (This)->lpVtbl -> Item(This,varID,ppunkInkProperty)

#define IInkExtendedProperties_Remove(This,varID)	\
    (This)->lpVtbl -> Remove(This,varID)

#define IInkExtendedProperties_Clear(This)	\
    (This)->lpVtbl -> Clear(This)

#define IInkExtendedProperties_DoesPropertyExist(This,Guid,DoesPropertyExist)	\
    (This)->lpVtbl -> DoesPropertyExist(This,Guid,DoesPropertyExist)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkExtendedProperties_get_Count_Proxy( 
    IInkExtendedProperties __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB IInkExtendedProperties_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkExtendedProperties_get__NewEnum_Proxy( 
    IInkExtendedProperties __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *pVal);


void __RPC_STUB IInkExtendedProperties_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkExtendedProperties_Add_Proxy( 
    IInkExtendedProperties __RPC_FAR * This,
    BSTR bstrGuid,
    VARIANT Data,
    IInkExtendedProperty __RPC_FAR *__RPC_FAR *ppunkInkProperty);


void __RPC_STUB IInkExtendedProperties_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkExtendedProperties_Item_Proxy( 
    IInkExtendedProperties __RPC_FAR * This,
    VARIANT varID,
    IInkExtendedProperty __RPC_FAR *__RPC_FAR *ppunkInkProperty);


void __RPC_STUB IInkExtendedProperties_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkExtendedProperties_Remove_Proxy( 
    IInkExtendedProperties __RPC_FAR * This,
    VARIANT varID);


void __RPC_STUB IInkExtendedProperties_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkExtendedProperties_Clear_Proxy( 
    IInkExtendedProperties __RPC_FAR * This);


void __RPC_STUB IInkExtendedProperties_Clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkExtendedProperties_DoesPropertyExist_Proxy( 
    IInkExtendedProperties __RPC_FAR * This,
    /* [in] */ BSTR Guid,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *DoesPropertyExist);


void __RPC_STUB IInkExtendedProperties_DoesPropertyExist_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkExtendedProperties_INTERFACE_DEFINED__ */


#ifndef __IInkDrawingAttributes_INTERFACE_DEFINED__
#define __IInkDrawingAttributes_INTERFACE_DEFINED__

/* interface IInkDrawingAttributes */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkDrawingAttributes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BF519B75-0A15-4623-ADC9-C00D436A8092")
    IInkDrawingAttributes : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Color( 
            /* [retval][out] */ long __RPC_FAR *CurrentColor) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Color( 
            /* [in] */ long NewColor) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ float __RPC_FAR *CurrentWidth) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ float NewWidth) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FitToCurve( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Flag) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FitToCurve( 
            /* [in] */ VARIANT_BOOL Flag) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AntiAliased( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Flag) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AntiAliased( 
            /* [in] */ VARIANT_BOOL Flag) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Transparency( 
            /* [retval][out] */ long __RPC_FAR *CurrentTransparency) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Transparency( 
            /* [in] */ long NewTransparency) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_RasterOperation( 
            /* [retval][out] */ InkRasterOperation __RPC_FAR *CurrentRasterOperation) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_RasterOperation( 
            /* [in] */ InkRasterOperation NewRasterOperation) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PenTip( 
            /* [retval][out] */ InkPenTip __RPC_FAR *CurrentPenTip) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PenTip( 
            /* [in] */ InkPenTip NewPenTip) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExtendedProperties( 
            /* [retval][out] */ IInkExtendedProperties __RPC_FAR *__RPC_FAR *Properties) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Clone( 
            /* [retval][out] */ IInkDrawingAttributes __RPC_FAR *__RPC_FAR *DrawingAttributes) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkDrawingAttributesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkDrawingAttributes __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkDrawingAttributes __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Color )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *CurrentColor);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Color )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [in] */ long NewColor);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [retval][out] */ float __RPC_FAR *CurrentWidth);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Width )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [in] */ float NewWidth);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FitToCurve )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Flag);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FitToCurve )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Flag);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AntiAliased )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Flag);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AntiAliased )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Flag);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Transparency )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *CurrentTransparency);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Transparency )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [in] */ long NewTransparency);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_RasterOperation )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [retval][out] */ InkRasterOperation __RPC_FAR *CurrentRasterOperation);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_RasterOperation )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [in] */ InkRasterOperation NewRasterOperation);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PenTip )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [retval][out] */ InkPenTip __RPC_FAR *CurrentPenTip);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PenTip )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [in] */ InkPenTip NewPenTip);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtendedProperties )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [retval][out] */ IInkExtendedProperties __RPC_FAR *__RPC_FAR *Properties);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IInkDrawingAttributes __RPC_FAR * This,
            /* [retval][out] */ IInkDrawingAttributes __RPC_FAR *__RPC_FAR *DrawingAttributes);
        
        END_INTERFACE
    } IInkDrawingAttributesVtbl;

    interface IInkDrawingAttributes
    {
        CONST_VTBL struct IInkDrawingAttributesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkDrawingAttributes_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkDrawingAttributes_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkDrawingAttributes_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkDrawingAttributes_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkDrawingAttributes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkDrawingAttributes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkDrawingAttributes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkDrawingAttributes_get_Color(This,CurrentColor)	\
    (This)->lpVtbl -> get_Color(This,CurrentColor)

#define IInkDrawingAttributes_put_Color(This,NewColor)	\
    (This)->lpVtbl -> put_Color(This,NewColor)

#define IInkDrawingAttributes_get_Width(This,CurrentWidth)	\
    (This)->lpVtbl -> get_Width(This,CurrentWidth)

#define IInkDrawingAttributes_put_Width(This,NewWidth)	\
    (This)->lpVtbl -> put_Width(This,NewWidth)

#define IInkDrawingAttributes_get_FitToCurve(This,Flag)	\
    (This)->lpVtbl -> get_FitToCurve(This,Flag)

#define IInkDrawingAttributes_put_FitToCurve(This,Flag)	\
    (This)->lpVtbl -> put_FitToCurve(This,Flag)

#define IInkDrawingAttributes_get_AntiAliased(This,Flag)	\
    (This)->lpVtbl -> get_AntiAliased(This,Flag)

#define IInkDrawingAttributes_put_AntiAliased(This,Flag)	\
    (This)->lpVtbl -> put_AntiAliased(This,Flag)

#define IInkDrawingAttributes_get_Transparency(This,CurrentTransparency)	\
    (This)->lpVtbl -> get_Transparency(This,CurrentTransparency)

#define IInkDrawingAttributes_put_Transparency(This,NewTransparency)	\
    (This)->lpVtbl -> put_Transparency(This,NewTransparency)

#define IInkDrawingAttributes_get_RasterOperation(This,CurrentRasterOperation)	\
    (This)->lpVtbl -> get_RasterOperation(This,CurrentRasterOperation)

#define IInkDrawingAttributes_put_RasterOperation(This,NewRasterOperation)	\
    (This)->lpVtbl -> put_RasterOperation(This,NewRasterOperation)

#define IInkDrawingAttributes_get_PenTip(This,CurrentPenTip)	\
    (This)->lpVtbl -> get_PenTip(This,CurrentPenTip)

#define IInkDrawingAttributes_put_PenTip(This,NewPenTip)	\
    (This)->lpVtbl -> put_PenTip(This,NewPenTip)

#define IInkDrawingAttributes_get_ExtendedProperties(This,Properties)	\
    (This)->lpVtbl -> get_ExtendedProperties(This,Properties)

#define IInkDrawingAttributes_Clone(This,DrawingAttributes)	\
    (This)->lpVtbl -> Clone(This,DrawingAttributes)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_get_Color_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *CurrentColor);


void __RPC_STUB IInkDrawingAttributes_get_Color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_put_Color_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [in] */ long NewColor);


void __RPC_STUB IInkDrawingAttributes_put_Color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_get_Width_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [retval][out] */ float __RPC_FAR *CurrentWidth);


void __RPC_STUB IInkDrawingAttributes_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_put_Width_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [in] */ float NewWidth);


void __RPC_STUB IInkDrawingAttributes_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_get_FitToCurve_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Flag);


void __RPC_STUB IInkDrawingAttributes_get_FitToCurve_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_put_FitToCurve_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Flag);


void __RPC_STUB IInkDrawingAttributes_put_FitToCurve_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_get_AntiAliased_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Flag);


void __RPC_STUB IInkDrawingAttributes_get_AntiAliased_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_put_AntiAliased_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Flag);


void __RPC_STUB IInkDrawingAttributes_put_AntiAliased_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_get_Transparency_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *CurrentTransparency);


void __RPC_STUB IInkDrawingAttributes_get_Transparency_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_put_Transparency_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [in] */ long NewTransparency);


void __RPC_STUB IInkDrawingAttributes_put_Transparency_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_get_RasterOperation_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [retval][out] */ InkRasterOperation __RPC_FAR *CurrentRasterOperation);


void __RPC_STUB IInkDrawingAttributes_get_RasterOperation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_put_RasterOperation_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [in] */ InkRasterOperation NewRasterOperation);


void __RPC_STUB IInkDrawingAttributes_put_RasterOperation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_get_PenTip_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [retval][out] */ InkPenTip __RPC_FAR *CurrentPenTip);


void __RPC_STUB IInkDrawingAttributes_get_PenTip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_put_PenTip_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [in] */ InkPenTip NewPenTip);


void __RPC_STUB IInkDrawingAttributes_put_PenTip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_get_ExtendedProperties_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [retval][out] */ IInkExtendedProperties __RPC_FAR *__RPC_FAR *Properties);


void __RPC_STUB IInkDrawingAttributes_get_ExtendedProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDrawingAttributes_Clone_Proxy( 
    IInkDrawingAttributes __RPC_FAR * This,
    /* [retval][out] */ IInkDrawingAttributes __RPC_FAR *__RPC_FAR *DrawingAttributes);


void __RPC_STUB IInkDrawingAttributes_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkDrawingAttributes_INTERFACE_DEFINED__ */


#ifndef __IInkStrokeDisp_INTERFACE_DEFINED__
#define __IInkStrokeDisp_INTERFACE_DEFINED__

/* interface IInkStrokeDisp */
/* [unique][dual][helpcontext][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IInkStrokeDisp;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("43242FEA-91D1-4a72-963E-FBB91829CFA2")
    IInkStrokeDisp : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_BezierPoints( 
            /* [retval][out] */ VARIANT __RPC_FAR *Points) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DrawingAttributes( 
            /* [retval][out] */ IInkDrawingAttributes __RPC_FAR *__RPC_FAR *DrawAttrs) = 0;
        
        virtual /* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE putref_DrawingAttributes( 
            /* [in] */ IInkDrawingAttributes __RPC_FAR *DrawAttrs) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Ink( 
            /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *Ink) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExtendedProperties( 
            /* [retval][out] */ IInkExtendedProperties __RPC_FAR *__RPC_FAR *Properties) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PolylineCusps( 
            /* [retval][out] */ VARIANT __RPC_FAR *Cusps) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_BezierCusps( 
            /* [retval][out] */ VARIANT __RPC_FAR *Cusps) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelfIntersections( 
            /* [retval][out] */ VARIANT __RPC_FAR *Intersections) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PacketCount( 
            /* [retval][out] */ long __RPC_FAR *plCount) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Deleted( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Deleted) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBoundingBox( 
            /* [defaultvalue][in] */ InkBoundingBoxMode BoundingBoxMode,
            /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *Rectangle) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE FindIntersections( 
            /* [in] */ IInkStrokes __RPC_FAR *Strokes,
            /* [retval][out] */ VARIANT __RPC_FAR *Intersections) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetRectangleIntersections( 
            /* [in] */ IInkRectangle __RPC_FAR *Rectangle,
            /* [retval][out] */ VARIANT __RPC_FAR *Intersections) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Clip( 
            /* [in] */ IInkRectangle __RPC_FAR *Rectangle) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE HitTestCircle( 
            /* [in] */ long X,
            /* [in] */ long Y,
            /* [in] */ float Radius,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Intersects) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Split( 
            /* [in] */ float SplitAt,
            /* [retval][out] */ IInkStrokeDisp __RPC_FAR *__RPC_FAR *NewStroke) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPoints( 
            /* [in][defaultvalue] */ long Index,
            /* [in][defaultvalue] */ long Count,
            /* [retval][out] */ VARIANT __RPC_FAR *Points) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SetPoints( 
            /* [in] */ VARIANT Points,
            /* [defaultvalue][in] */ long Index,
            /* [defaultvalue][in] */ long Count,
            /* [retval][out] */ long __RPC_FAR *NumberOfPointsSet) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Transform( 
            /* [in] */ IInkTransform __RPC_FAR *Transform,
            /* [defaultvalue][in] */ VARIANT_BOOL ApplyOnPenWidth = 0) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ScaleToRectangle( 
            /* [in] */ IInkRectangle __RPC_FAR *Rectangle) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ float HorizontalComponent,
            /* [in] */ float VerticalComponent) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Rotate( 
            /* [in] */ float Degrees,
            /* [defaultvalue][in] */ float x = 0,
            /* [defaultvalue][in] */ float y = 0) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Shear( 
            /* [in] */ float HorizontalMultiplier,
            /* [in] */ float VerticalMultiplier) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ScaleTransform( 
            /* [in] */ float HorizontalMultiplier,
            /* [in] */ float VerticalMultiplier) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkStrokeDispVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkStrokeDisp __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkStrokeDisp __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ID )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BezierPoints )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *Points);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DrawingAttributes )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [retval][out] */ IInkDrawingAttributes __RPC_FAR *__RPC_FAR *DrawAttrs);
        
        /* [helpcontext][helpstring][id][propputref] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *putref_DrawingAttributes )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ IInkDrawingAttributes __RPC_FAR *DrawAttrs);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Ink )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *Ink);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtendedProperties )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [retval][out] */ IInkExtendedProperties __RPC_FAR *__RPC_FAR *Properties);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PolylineCusps )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *Cusps);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BezierCusps )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *Cusps);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SelfIntersections )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *Intersections);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PacketCount )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plCount);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Deleted )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Deleted);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBoundingBox )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [defaultvalue][in] */ InkBoundingBoxMode BoundingBoxMode,
            /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *Rectangle);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindIntersections )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ IInkStrokes __RPC_FAR *Strokes,
            /* [retval][out] */ VARIANT __RPC_FAR *Intersections);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetRectangleIntersections )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ IInkRectangle __RPC_FAR *Rectangle,
            /* [retval][out] */ VARIANT __RPC_FAR *Intersections);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clip )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ IInkRectangle __RPC_FAR *Rectangle);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HitTestCircle )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ long X,
            /* [in] */ long Y,
            /* [in] */ float Radius,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Intersects);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Split )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ float SplitAt,
            /* [retval][out] */ IInkStrokeDisp __RPC_FAR *__RPC_FAR *NewStroke);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPoints )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in][defaultvalue] */ long Index,
            /* [in][defaultvalue] */ long Count,
            /* [retval][out] */ VARIANT __RPC_FAR *Points);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPoints )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ VARIANT Points,
            /* [defaultvalue][in] */ long Index,
            /* [defaultvalue][in] */ long Count,
            /* [retval][out] */ long __RPC_FAR *NumberOfPointsSet);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Transform )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ IInkTransform __RPC_FAR *Transform,
            /* [defaultvalue][in] */ VARIANT_BOOL ApplyOnPenWidth);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ScaleToRectangle )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ IInkRectangle __RPC_FAR *Rectangle);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Move )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ float HorizontalComponent,
            /* [in] */ float VerticalComponent);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Rotate )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ float Degrees,
            /* [defaultvalue][in] */ float x,
            /* [defaultvalue][in] */ float y);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Shear )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ float HorizontalMultiplier,
            /* [in] */ float VerticalMultiplier);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ScaleTransform )( 
            IInkStrokeDisp __RPC_FAR * This,
            /* [in] */ float HorizontalMultiplier,
            /* [in] */ float VerticalMultiplier);
        
        END_INTERFACE
    } IInkStrokeDispVtbl;

    interface IInkStrokeDisp
    {
        CONST_VTBL struct IInkStrokeDispVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkStrokeDisp_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkStrokeDisp_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkStrokeDisp_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkStrokeDisp_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkStrokeDisp_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkStrokeDisp_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkStrokeDisp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkStrokeDisp_get_ID(This,ID)	\
    (This)->lpVtbl -> get_ID(This,ID)

#define IInkStrokeDisp_get_BezierPoints(This,Points)	\
    (This)->lpVtbl -> get_BezierPoints(This,Points)

#define IInkStrokeDisp_get_DrawingAttributes(This,DrawAttrs)	\
    (This)->lpVtbl -> get_DrawingAttributes(This,DrawAttrs)

#define IInkStrokeDisp_putref_DrawingAttributes(This,DrawAttrs)	\
    (This)->lpVtbl -> putref_DrawingAttributes(This,DrawAttrs)

#define IInkStrokeDisp_get_Ink(This,Ink)	\
    (This)->lpVtbl -> get_Ink(This,Ink)

#define IInkStrokeDisp_get_ExtendedProperties(This,Properties)	\
    (This)->lpVtbl -> get_ExtendedProperties(This,Properties)

#define IInkStrokeDisp_get_PolylineCusps(This,Cusps)	\
    (This)->lpVtbl -> get_PolylineCusps(This,Cusps)

#define IInkStrokeDisp_get_BezierCusps(This,Cusps)	\
    (This)->lpVtbl -> get_BezierCusps(This,Cusps)

#define IInkStrokeDisp_get_SelfIntersections(This,Intersections)	\
    (This)->lpVtbl -> get_SelfIntersections(This,Intersections)

#define IInkStrokeDisp_get_PacketCount(This,plCount)	\
    (This)->lpVtbl -> get_PacketCount(This,plCount)

#define IInkStrokeDisp_get_Deleted(This,Deleted)	\
    (This)->lpVtbl -> get_Deleted(This,Deleted)

#define IInkStrokeDisp_GetBoundingBox(This,BoundingBoxMode,Rectangle)	\
    (This)->lpVtbl -> GetBoundingBox(This,BoundingBoxMode,Rectangle)

#define IInkStrokeDisp_FindIntersections(This,Strokes,Intersections)	\
    (This)->lpVtbl -> FindIntersections(This,Strokes,Intersections)

#define IInkStrokeDisp_GetRectangleIntersections(This,Rectangle,Intersections)	\
    (This)->lpVtbl -> GetRectangleIntersections(This,Rectangle,Intersections)

#define IInkStrokeDisp_Clip(This,Rectangle)	\
    (This)->lpVtbl -> Clip(This,Rectangle)

#define IInkStrokeDisp_HitTestCircle(This,X,Y,Radius,Intersects)	\
    (This)->lpVtbl -> HitTestCircle(This,X,Y,Radius,Intersects)

#define IInkStrokeDisp_Split(This,SplitAt,NewStroke)	\
    (This)->lpVtbl -> Split(This,SplitAt,NewStroke)

#define IInkStrokeDisp_GetPoints(This,Index,Count,Points)	\
    (This)->lpVtbl -> GetPoints(This,Index,Count,Points)

#define IInkStrokeDisp_SetPoints(This,Points,Index,Count,NumberOfPointsSet)	\
    (This)->lpVtbl -> SetPoints(This,Points,Index,Count,NumberOfPointsSet)

#define IInkStrokeDisp_Transform(This,Transform,ApplyOnPenWidth)	\
    (This)->lpVtbl -> Transform(This,Transform,ApplyOnPenWidth)

#define IInkStrokeDisp_ScaleToRectangle(This,Rectangle)	\
    (This)->lpVtbl -> ScaleToRectangle(This,Rectangle)

#define IInkStrokeDisp_Move(This,HorizontalComponent,VerticalComponent)	\
    (This)->lpVtbl -> Move(This,HorizontalComponent,VerticalComponent)

#define IInkStrokeDisp_Rotate(This,Degrees,x,y)	\
    (This)->lpVtbl -> Rotate(This,Degrees,x,y)

#define IInkStrokeDisp_Shear(This,HorizontalMultiplier,VerticalMultiplier)	\
    (This)->lpVtbl -> Shear(This,HorizontalMultiplier,VerticalMultiplier)

#define IInkStrokeDisp_ScaleTransform(This,HorizontalMultiplier,VerticalMultiplier)	\
    (This)->lpVtbl -> ScaleTransform(This,HorizontalMultiplier,VerticalMultiplier)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_get_ID_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IInkStrokeDisp_get_ID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_get_BezierPoints_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *Points);


void __RPC_STUB IInkStrokeDisp_get_BezierPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_get_DrawingAttributes_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [retval][out] */ IInkDrawingAttributes __RPC_FAR *__RPC_FAR *DrawAttrs);


void __RPC_STUB IInkStrokeDisp_get_DrawingAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_putref_DrawingAttributes_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ IInkDrawingAttributes __RPC_FAR *DrawAttrs);


void __RPC_STUB IInkStrokeDisp_putref_DrawingAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_get_Ink_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *Ink);


void __RPC_STUB IInkStrokeDisp_get_Ink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_get_ExtendedProperties_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [retval][out] */ IInkExtendedProperties __RPC_FAR *__RPC_FAR *Properties);


void __RPC_STUB IInkStrokeDisp_get_ExtendedProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_get_PolylineCusps_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *Cusps);


void __RPC_STUB IInkStrokeDisp_get_PolylineCusps_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_get_BezierCusps_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *Cusps);


void __RPC_STUB IInkStrokeDisp_get_BezierCusps_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_get_SelfIntersections_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *Intersections);


void __RPC_STUB IInkStrokeDisp_get_SelfIntersections_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_get_PacketCount_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plCount);


void __RPC_STUB IInkStrokeDisp_get_PacketCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_get_Deleted_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Deleted);


void __RPC_STUB IInkStrokeDisp_get_Deleted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_GetBoundingBox_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [defaultvalue][in] */ InkBoundingBoxMode BoundingBoxMode,
    /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *Rectangle);


void __RPC_STUB IInkStrokeDisp_GetBoundingBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_FindIntersections_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ IInkStrokes __RPC_FAR *Strokes,
    /* [retval][out] */ VARIANT __RPC_FAR *Intersections);


void __RPC_STUB IInkStrokeDisp_FindIntersections_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_GetRectangleIntersections_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ IInkRectangle __RPC_FAR *Rectangle,
    /* [retval][out] */ VARIANT __RPC_FAR *Intersections);


void __RPC_STUB IInkStrokeDisp_GetRectangleIntersections_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_Clip_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ IInkRectangle __RPC_FAR *Rectangle);


void __RPC_STUB IInkStrokeDisp_Clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_HitTestCircle_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ long X,
    /* [in] */ long Y,
    /* [in] */ float Radius,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Intersects);


void __RPC_STUB IInkStrokeDisp_HitTestCircle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_Split_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ float SplitAt,
    /* [retval][out] */ IInkStrokeDisp __RPC_FAR *__RPC_FAR *NewStroke);


void __RPC_STUB IInkStrokeDisp_Split_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_GetPoints_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in][defaultvalue] */ long Index,
    /* [in][defaultvalue] */ long Count,
    /* [retval][out] */ VARIANT __RPC_FAR *Points);


void __RPC_STUB IInkStrokeDisp_GetPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_SetPoints_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ VARIANT Points,
    /* [defaultvalue][in] */ long Index,
    /* [defaultvalue][in] */ long Count,
    /* [retval][out] */ long __RPC_FAR *NumberOfPointsSet);


void __RPC_STUB IInkStrokeDisp_SetPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_Transform_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ IInkTransform __RPC_FAR *Transform,
    /* [defaultvalue][in] */ VARIANT_BOOL ApplyOnPenWidth);


void __RPC_STUB IInkStrokeDisp_Transform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_ScaleToRectangle_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ IInkRectangle __RPC_FAR *Rectangle);


void __RPC_STUB IInkStrokeDisp_ScaleToRectangle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_Move_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ float HorizontalComponent,
    /* [in] */ float VerticalComponent);


void __RPC_STUB IInkStrokeDisp_Move_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_Rotate_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ float Degrees,
    /* [defaultvalue][in] */ float x,
    /* [defaultvalue][in] */ float y);


void __RPC_STUB IInkStrokeDisp_Rotate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_Shear_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ float HorizontalMultiplier,
    /* [in] */ float VerticalMultiplier);


void __RPC_STUB IInkStrokeDisp_Shear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokeDisp_ScaleTransform_Proxy( 
    IInkStrokeDisp __RPC_FAR * This,
    /* [in] */ float HorizontalMultiplier,
    /* [in] */ float VerticalMultiplier);


void __RPC_STUB IInkStrokeDisp_ScaleTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkStrokeDisp_INTERFACE_DEFINED__ */


#ifndef __IInkTransform_INTERFACE_DEFINED__
#define __IInkTransform_INTERFACE_DEFINED__

/* interface IInkTransform */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("615F1D43-8703-4565-88E2-8201D2ECD7B7")
    IInkTransform : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Translate( 
            /* [in] */ float HorizontalComponent,
            /* [in] */ float VerticalComponent) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Rotate( 
            /* [in] */ float Degrees,
            /* [defaultvalue][in] */ float x = 0,
            /* [defaultvalue][in] */ float y = 0) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Reflect( 
            /* [in] */ VARIANT_BOOL Horizontally,
            /* [in] */ VARIANT_BOOL Vertically) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Shear( 
            /* [in] */ float HorizontalComponent,
            /* [in] */ float VerticalComponent) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ScaleTransform( 
            /* [in] */ float HorizontalMultiplier,
            /* [in] */ float VerticalMultiplier) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetTransform( 
            /* [out] */ float __RPC_FAR *eM11,
            /* [out] */ float __RPC_FAR *eM12,
            /* [out] */ float __RPC_FAR *eM21,
            /* [out] */ float __RPC_FAR *eM22,
            /* [out] */ float __RPC_FAR *eDx,
            /* [out] */ float __RPC_FAR *eDy) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SetTransform( 
            /* [in] */ float eM11,
            /* [in] */ float eM12,
            /* [in] */ float eM21,
            /* [in] */ float eM22,
            /* [in] */ float eDx,
            /* [in] */ float eDy) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_eM11( 
            /* [retval][out] */ float __RPC_FAR *Value) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_eM11( 
            /* [in] */ float Value) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_eM12( 
            /* [retval][out] */ float __RPC_FAR *Value) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_eM12( 
            /* [in] */ float Value) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_eM21( 
            /* [retval][out] */ float __RPC_FAR *Value) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_eM21( 
            /* [in] */ float Value) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_eM22( 
            /* [retval][out] */ float __RPC_FAR *Value) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_eM22( 
            /* [in] */ float Value) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_eDx( 
            /* [retval][out] */ float __RPC_FAR *Value) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_eDx( 
            /* [in] */ float Value) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_eDy( 
            /* [retval][out] */ float __RPC_FAR *Value) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_eDy( 
            /* [in] */ float Value) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_Data( 
            /* [retval][out] */ XFORM __RPC_FAR *XForm) = 0;
        
        virtual /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_Data( 
            /* [in] */ XFORM XForm) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkTransform __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkTransform __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkTransform __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IInkTransform __RPC_FAR * This);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Translate )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ float HorizontalComponent,
            /* [in] */ float VerticalComponent);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Rotate )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ float Degrees,
            /* [defaultvalue][in] */ float x,
            /* [defaultvalue][in] */ float y);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reflect )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Horizontally,
            /* [in] */ VARIANT_BOOL Vertically);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Shear )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ float HorizontalComponent,
            /* [in] */ float VerticalComponent);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ScaleTransform )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ float HorizontalMultiplier,
            /* [in] */ float VerticalMultiplier);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTransform )( 
            IInkTransform __RPC_FAR * This,
            /* [out] */ float __RPC_FAR *eM11,
            /* [out] */ float __RPC_FAR *eM12,
            /* [out] */ float __RPC_FAR *eM21,
            /* [out] */ float __RPC_FAR *eM22,
            /* [out] */ float __RPC_FAR *eDx,
            /* [out] */ float __RPC_FAR *eDy);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTransform )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ float eM11,
            /* [in] */ float eM12,
            /* [in] */ float eM21,
            /* [in] */ float eM22,
            /* [in] */ float eDx,
            /* [in] */ float eDy);
        
        /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_eM11 )( 
            IInkTransform __RPC_FAR * This,
            /* [retval][out] */ float __RPC_FAR *Value);
        
        /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_eM11 )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ float Value);
        
        /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_eM12 )( 
            IInkTransform __RPC_FAR * This,
            /* [retval][out] */ float __RPC_FAR *Value);
        
        /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_eM12 )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ float Value);
        
        /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_eM21 )( 
            IInkTransform __RPC_FAR * This,
            /* [retval][out] */ float __RPC_FAR *Value);
        
        /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_eM21 )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ float Value);
        
        /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_eM22 )( 
            IInkTransform __RPC_FAR * This,
            /* [retval][out] */ float __RPC_FAR *Value);
        
        /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_eM22 )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ float Value);
        
        /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_eDx )( 
            IInkTransform __RPC_FAR * This,
            /* [retval][out] */ float __RPC_FAR *Value);
        
        /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_eDx )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ float Value);
        
        /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_eDy )( 
            IInkTransform __RPC_FAR * This,
            /* [retval][out] */ float __RPC_FAR *Value);
        
        /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_eDy )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ float Value);
        
        /* [helpcontext][helpstring][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Data )( 
            IInkTransform __RPC_FAR * This,
            /* [retval][out] */ XFORM __RPC_FAR *XForm);
        
        /* [helpcontext][helpstring][hidden][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Data )( 
            IInkTransform __RPC_FAR * This,
            /* [in] */ XFORM XForm);
        
        END_INTERFACE
    } IInkTransformVtbl;

    interface IInkTransform
    {
        CONST_VTBL struct IInkTransformVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkTransform_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkTransform_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkTransform_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkTransform_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkTransform_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkTransform_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkTransform_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkTransform_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IInkTransform_Translate(This,HorizontalComponent,VerticalComponent)	\
    (This)->lpVtbl -> Translate(This,HorizontalComponent,VerticalComponent)

#define IInkTransform_Rotate(This,Degrees,x,y)	\
    (This)->lpVtbl -> Rotate(This,Degrees,x,y)

#define IInkTransform_Reflect(This,Horizontally,Vertically)	\
    (This)->lpVtbl -> Reflect(This,Horizontally,Vertically)

#define IInkTransform_Shear(This,HorizontalComponent,VerticalComponent)	\
    (This)->lpVtbl -> Shear(This,HorizontalComponent,VerticalComponent)

#define IInkTransform_ScaleTransform(This,HorizontalMultiplier,VerticalMultiplier)	\
    (This)->lpVtbl -> ScaleTransform(This,HorizontalMultiplier,VerticalMultiplier)

#define IInkTransform_GetTransform(This,eM11,eM12,eM21,eM22,eDx,eDy)	\
    (This)->lpVtbl -> GetTransform(This,eM11,eM12,eM21,eM22,eDx,eDy)

#define IInkTransform_SetTransform(This,eM11,eM12,eM21,eM22,eDx,eDy)	\
    (This)->lpVtbl -> SetTransform(This,eM11,eM12,eM21,eM22,eDx,eDy)

#define IInkTransform_get_eM11(This,Value)	\
    (This)->lpVtbl -> get_eM11(This,Value)

#define IInkTransform_put_eM11(This,Value)	\
    (This)->lpVtbl -> put_eM11(This,Value)

#define IInkTransform_get_eM12(This,Value)	\
    (This)->lpVtbl -> get_eM12(This,Value)

#define IInkTransform_put_eM12(This,Value)	\
    (This)->lpVtbl -> put_eM12(This,Value)

#define IInkTransform_get_eM21(This,Value)	\
    (This)->lpVtbl -> get_eM21(This,Value)

#define IInkTransform_put_eM21(This,Value)	\
    (This)->lpVtbl -> put_eM21(This,Value)

#define IInkTransform_get_eM22(This,Value)	\
    (This)->lpVtbl -> get_eM22(This,Value)

#define IInkTransform_put_eM22(This,Value)	\
    (This)->lpVtbl -> put_eM22(This,Value)

#define IInkTransform_get_eDx(This,Value)	\
    (This)->lpVtbl -> get_eDx(This,Value)

#define IInkTransform_put_eDx(This,Value)	\
    (This)->lpVtbl -> put_eDx(This,Value)

#define IInkTransform_get_eDy(This,Value)	\
    (This)->lpVtbl -> get_eDy(This,Value)

#define IInkTransform_put_eDy(This,Value)	\
    (This)->lpVtbl -> put_eDy(This,Value)

#define IInkTransform_get_Data(This,XForm)	\
    (This)->lpVtbl -> get_Data(This,XForm)

#define IInkTransform_put_Data(This,XForm)	\
    (This)->lpVtbl -> put_Data(This,XForm)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkTransform_Reset_Proxy( 
    IInkTransform __RPC_FAR * This);


void __RPC_STUB IInkTransform_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkTransform_Translate_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ float HorizontalComponent,
    /* [in] */ float VerticalComponent);


void __RPC_STUB IInkTransform_Translate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkTransform_Rotate_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ float Degrees,
    /* [defaultvalue][in] */ float x,
    /* [defaultvalue][in] */ float y);


void __RPC_STUB IInkTransform_Rotate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkTransform_Reflect_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Horizontally,
    /* [in] */ VARIANT_BOOL Vertically);


void __RPC_STUB IInkTransform_Reflect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkTransform_Shear_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ float HorizontalComponent,
    /* [in] */ float VerticalComponent);


void __RPC_STUB IInkTransform_Shear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkTransform_ScaleTransform_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ float HorizontalMultiplier,
    /* [in] */ float VerticalMultiplier);


void __RPC_STUB IInkTransform_ScaleTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkTransform_GetTransform_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [out] */ float __RPC_FAR *eM11,
    /* [out] */ float __RPC_FAR *eM12,
    /* [out] */ float __RPC_FAR *eM21,
    /* [out] */ float __RPC_FAR *eM22,
    /* [out] */ float __RPC_FAR *eDx,
    /* [out] */ float __RPC_FAR *eDy);


void __RPC_STUB IInkTransform_GetTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkTransform_SetTransform_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ float eM11,
    /* [in] */ float eM12,
    /* [in] */ float eM21,
    /* [in] */ float eM22,
    /* [in] */ float eDx,
    /* [in] */ float eDy);


void __RPC_STUB IInkTransform_SetTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IInkTransform_get_eM11_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [retval][out] */ float __RPC_FAR *Value);


void __RPC_STUB IInkTransform_get_eM11_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IInkTransform_put_eM11_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ float Value);


void __RPC_STUB IInkTransform_put_eM11_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IInkTransform_get_eM12_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [retval][out] */ float __RPC_FAR *Value);


void __RPC_STUB IInkTransform_get_eM12_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IInkTransform_put_eM12_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ float Value);


void __RPC_STUB IInkTransform_put_eM12_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IInkTransform_get_eM21_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [retval][out] */ float __RPC_FAR *Value);


void __RPC_STUB IInkTransform_get_eM21_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IInkTransform_put_eM21_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ float Value);


void __RPC_STUB IInkTransform_put_eM21_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IInkTransform_get_eM22_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [retval][out] */ float __RPC_FAR *Value);


void __RPC_STUB IInkTransform_get_eM22_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IInkTransform_put_eM22_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ float Value);


void __RPC_STUB IInkTransform_put_eM22_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IInkTransform_get_eDx_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [retval][out] */ float __RPC_FAR *Value);


void __RPC_STUB IInkTransform_get_eDx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IInkTransform_put_eDx_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ float Value);


void __RPC_STUB IInkTransform_put_eDx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IInkTransform_get_eDy_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [retval][out] */ float __RPC_FAR *Value);


void __RPC_STUB IInkTransform_get_eDy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IInkTransform_put_eDy_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ float Value);


void __RPC_STUB IInkTransform_put_eDy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IInkTransform_get_Data_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [retval][out] */ XFORM __RPC_FAR *XForm);


void __RPC_STUB IInkTransform_get_Data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IInkTransform_put_Data_Proxy( 
    IInkTransform __RPC_FAR * This,
    /* [in] */ XFORM XForm);


void __RPC_STUB IInkTransform_put_Data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkTransform_INTERFACE_DEFINED__ */


#ifndef __IInkRecognizer_INTERFACE_DEFINED__
#define __IInkRecognizer_INTERFACE_DEFINED__

/* interface IInkRecognizer */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkRecognizer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("782BF7CF-034B-4396-8A32-3A1833CF6B56")
    IInkRecognizer : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *Name) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Vendor( 
            /* [retval][out] */ BSTR __RPC_FAR *Vendor) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Capabilities( 
            /* [retval][out] */ InkRecognizerCapabilities __RPC_FAR *CapabilitiesFlags) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Languages( 
            /* [retval][out] */ VARIANT __RPC_FAR *Languages) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SupportedProperties( 
            /* [retval][out] */ VARIANT __RPC_FAR *SupportedProperties) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreferredPacketDescription( 
            /* [retval][out] */ VARIANT __RPC_FAR *PreferredPacketDescription) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateRecognizerContext( 
            /* [retval][out] */ IInkRecognizerContext __RPC_FAR *__RPC_FAR *Context) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkRecognizerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkRecognizer __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkRecognizer __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkRecognizer __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkRecognizer __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkRecognizer __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkRecognizer __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkRecognizer __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IInkRecognizer __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Vendor )( 
            IInkRecognizer __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Vendor);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Capabilities )( 
            IInkRecognizer __RPC_FAR * This,
            /* [retval][out] */ InkRecognizerCapabilities __RPC_FAR *CapabilitiesFlags);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Languages )( 
            IInkRecognizer __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *Languages);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SupportedProperties )( 
            IInkRecognizer __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *SupportedProperties);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PreferredPacketDescription )( 
            IInkRecognizer __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *PreferredPacketDescription);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateRecognizerContext )( 
            IInkRecognizer __RPC_FAR * This,
            /* [retval][out] */ IInkRecognizerContext __RPC_FAR *__RPC_FAR *Context);
        
        END_INTERFACE
    } IInkRecognizerVtbl;

    interface IInkRecognizer
    {
        CONST_VTBL struct IInkRecognizerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkRecognizer_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkRecognizer_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkRecognizer_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkRecognizer_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkRecognizer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkRecognizer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkRecognizer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkRecognizer_get_Name(This,Name)	\
    (This)->lpVtbl -> get_Name(This,Name)

#define IInkRecognizer_get_Vendor(This,Vendor)	\
    (This)->lpVtbl -> get_Vendor(This,Vendor)

#define IInkRecognizer_get_Capabilities(This,CapabilitiesFlags)	\
    (This)->lpVtbl -> get_Capabilities(This,CapabilitiesFlags)

#define IInkRecognizer_get_Languages(This,Languages)	\
    (This)->lpVtbl -> get_Languages(This,Languages)

#define IInkRecognizer_get_SupportedProperties(This,SupportedProperties)	\
    (This)->lpVtbl -> get_SupportedProperties(This,SupportedProperties)

#define IInkRecognizer_get_PreferredPacketDescription(This,PreferredPacketDescription)	\
    (This)->lpVtbl -> get_PreferredPacketDescription(This,PreferredPacketDescription)

#define IInkRecognizer_CreateRecognizerContext(This,Context)	\
    (This)->lpVtbl -> CreateRecognizerContext(This,Context)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizer_get_Name_Proxy( 
    IInkRecognizer __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Name);


void __RPC_STUB IInkRecognizer_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizer_get_Vendor_Proxy( 
    IInkRecognizer __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Vendor);


void __RPC_STUB IInkRecognizer_get_Vendor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizer_get_Capabilities_Proxy( 
    IInkRecognizer __RPC_FAR * This,
    /* [retval][out] */ InkRecognizerCapabilities __RPC_FAR *CapabilitiesFlags);


void __RPC_STUB IInkRecognizer_get_Capabilities_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizer_get_Languages_Proxy( 
    IInkRecognizer __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *Languages);


void __RPC_STUB IInkRecognizer_get_Languages_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizer_get_SupportedProperties_Proxy( 
    IInkRecognizer __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *SupportedProperties);


void __RPC_STUB IInkRecognizer_get_SupportedProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizer_get_PreferredPacketDescription_Proxy( 
    IInkRecognizer __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *PreferredPacketDescription);


void __RPC_STUB IInkRecognizer_get_PreferredPacketDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognizer_CreateRecognizerContext_Proxy( 
    IInkRecognizer __RPC_FAR * This,
    /* [retval][out] */ IInkRecognizerContext __RPC_FAR *__RPC_FAR *Context);


void __RPC_STUB IInkRecognizer_CreateRecognizerContext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkRecognizer_INTERFACE_DEFINED__ */


#ifndef __IInkRecognizers_INTERFACE_DEFINED__
#define __IInkRecognizers_INTERFACE_DEFINED__

/* interface IInkRecognizers */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkRecognizers;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9CCC4F12-B0B7-4a8b-BF58-4AECA4E8CEFD")
    IInkRecognizers : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *Count) = 0;
        
        virtual /* [helpcontext][helpstring][restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *_NewEnum) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetDefaultRecognizer( 
            /* [defaultvalue][in] */ long lcid,
            /* [retval][out] */ IInkRecognizer __RPC_FAR *__RPC_FAR *DefaultRecognizer) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IInkRecognizer __RPC_FAR *__RPC_FAR *InkRecognizer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkRecognizersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkRecognizers __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkRecognizers __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkRecognizers __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkRecognizers __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkRecognizers __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkRecognizers __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkRecognizers __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IInkRecognizers __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [helpcontext][helpstring][restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IInkRecognizers __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *_NewEnum);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultRecognizer )( 
            IInkRecognizers __RPC_FAR * This,
            /* [defaultvalue][in] */ long lcid,
            /* [retval][out] */ IInkRecognizer __RPC_FAR *__RPC_FAR *DefaultRecognizer);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Item )( 
            IInkRecognizers __RPC_FAR * This,
            /* [in] */ long Index,
            /* [retval][out] */ IInkRecognizer __RPC_FAR *__RPC_FAR *InkRecognizer);
        
        END_INTERFACE
    } IInkRecognizersVtbl;

    interface IInkRecognizers
    {
        CONST_VTBL struct IInkRecognizersVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkRecognizers_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkRecognizers_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkRecognizers_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkRecognizers_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkRecognizers_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkRecognizers_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkRecognizers_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkRecognizers_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IInkRecognizers_get__NewEnum(This,_NewEnum)	\
    (This)->lpVtbl -> get__NewEnum(This,_NewEnum)

#define IInkRecognizers_GetDefaultRecognizer(This,lcid,DefaultRecognizer)	\
    (This)->lpVtbl -> GetDefaultRecognizer(This,lcid,DefaultRecognizer)

#define IInkRecognizers_Item(This,Index,InkRecognizer)	\
    (This)->lpVtbl -> Item(This,Index,InkRecognizer)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizers_get_Count_Proxy( 
    IInkRecognizers __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Count);


void __RPC_STUB IInkRecognizers_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][restricted][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizers_get__NewEnum_Proxy( 
    IInkRecognizers __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *_NewEnum);


void __RPC_STUB IInkRecognizers_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognizers_GetDefaultRecognizer_Proxy( 
    IInkRecognizers __RPC_FAR * This,
    /* [defaultvalue][in] */ long lcid,
    /* [retval][out] */ IInkRecognizer __RPC_FAR *__RPC_FAR *DefaultRecognizer);


void __RPC_STUB IInkRecognizers_GetDefaultRecognizer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognizers_Item_Proxy( 
    IInkRecognizers __RPC_FAR * This,
    /* [in] */ long Index,
    /* [retval][out] */ IInkRecognizer __RPC_FAR *__RPC_FAR *InkRecognizer);


void __RPC_STUB IInkRecognizers_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkRecognizers_INTERFACE_DEFINED__ */


#ifndef __IInkRecognizerContext_INTERFACE_DEFINED__
#define __IInkRecognizerContext_INTERFACE_DEFINED__

/* interface IInkRecognizerContext */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkRecognizerContext;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C68F52F9-32A3-4625-906C-44FC23B40958")
    IInkRecognizerContext : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Strokes( 
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes) = 0;
        
        virtual /* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE putref_Strokes( 
            /* [in] */ IInkStrokes __RPC_FAR *Strokes) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CharacterAutoCompletionMode( 
            /* [retval][out] */ InkRecognizerCharacterAutoCompletionMode __RPC_FAR *Mode) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CharacterAutoCompletionMode( 
            /* [in] */ InkRecognizerCharacterAutoCompletionMode Mode) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Factoid( 
            /* [retval][out] */ BSTR __RPC_FAR *Factoid) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Factoid( 
            /* [in] */ BSTR factoid) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PrefixText( 
            /* [retval][out] */ BSTR __RPC_FAR *Prefix) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PrefixText( 
            /* [in] */ BSTR Prefix) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SuffixText( 
            /* [retval][out] */ BSTR __RPC_FAR *Suffix) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SuffixText( 
            /* [in] */ BSTR Suffix) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_RecognitionFlags( 
            /* [retval][out] */ InkRecognitionModes __RPC_FAR *Modes) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_RecognitionFlags( 
            /* [in] */ InkRecognitionModes Modes) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_WordList( 
            /* [retval][out] */ IInkWordList __RPC_FAR *__RPC_FAR *WordList) = 0;
        
        virtual /* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE putref_WordList( 
            /* [in] */ IInkWordList __RPC_FAR *WordList) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Recognizer( 
            /* [retval][out] */ IInkRecognizer __RPC_FAR *__RPC_FAR *Recognizer) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Recognize( 
            /* [out][in] */ InkRecognitionStatus __RPC_FAR *RecognitionStatus,
            /* [retval][out] */ IInkRecognitionResult __RPC_FAR *__RPC_FAR *RecognitionResult) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Clone( 
            /* [retval][out] */ IInkRecognizerContext __RPC_FAR *__RPC_FAR *RecoContext) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IsStringSupported( 
            /* [in] */ BSTR String,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Supported) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkRecognizerContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkRecognizerContext __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkRecognizerContext __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Strokes )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id][propputref] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *putref_Strokes )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [in] */ IInkStrokes __RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharacterAutoCompletionMode )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [retval][out] */ InkRecognizerCharacterAutoCompletionMode __RPC_FAR *Mode);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_CharacterAutoCompletionMode )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [in] */ InkRecognizerCharacterAutoCompletionMode Mode);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Factoid )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Factoid);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Factoid )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [in] */ BSTR factoid);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PrefixText )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Prefix);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PrefixText )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [in] */ BSTR Prefix);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SuffixText )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Suffix);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SuffixText )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [in] */ BSTR Suffix);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_RecognitionFlags )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [retval][out] */ InkRecognitionModes __RPC_FAR *Modes);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_RecognitionFlags )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [in] */ InkRecognitionModes Modes);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_WordList )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [retval][out] */ IInkWordList __RPC_FAR *__RPC_FAR *WordList);
        
        /* [helpcontext][helpstring][id][propputref] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *putref_WordList )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [in] */ IInkWordList __RPC_FAR *WordList);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Recognizer )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [retval][out] */ IInkRecognizer __RPC_FAR *__RPC_FAR *Recognizer);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Recognize )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [out][in] */ InkRecognitionStatus __RPC_FAR *RecognitionStatus,
            /* [retval][out] */ IInkRecognitionResult __RPC_FAR *__RPC_FAR *RecognitionResult);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [retval][out] */ IInkRecognizerContext __RPC_FAR *__RPC_FAR *RecoContext);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsStringSupported )( 
            IInkRecognizerContext __RPC_FAR * This,
            /* [in] */ BSTR String,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Supported);
        
        END_INTERFACE
    } IInkRecognizerContextVtbl;

    interface IInkRecognizerContext
    {
        CONST_VTBL struct IInkRecognizerContextVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkRecognizerContext_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkRecognizerContext_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkRecognizerContext_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkRecognizerContext_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkRecognizerContext_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkRecognizerContext_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkRecognizerContext_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkRecognizerContext_get_Strokes(This,Strokes)	\
    (This)->lpVtbl -> get_Strokes(This,Strokes)

#define IInkRecognizerContext_putref_Strokes(This,Strokes)	\
    (This)->lpVtbl -> putref_Strokes(This,Strokes)

#define IInkRecognizerContext_get_CharacterAutoCompletionMode(This,Mode)	\
    (This)->lpVtbl -> get_CharacterAutoCompletionMode(This,Mode)

#define IInkRecognizerContext_put_CharacterAutoCompletionMode(This,Mode)	\
    (This)->lpVtbl -> put_CharacterAutoCompletionMode(This,Mode)

#define IInkRecognizerContext_get_Factoid(This,Factoid)	\
    (This)->lpVtbl -> get_Factoid(This,Factoid)

#define IInkRecognizerContext_put_Factoid(This,factoid)	\
    (This)->lpVtbl -> put_Factoid(This,factoid)

#define IInkRecognizerContext_get_PrefixText(This,Prefix)	\
    (This)->lpVtbl -> get_PrefixText(This,Prefix)

#define IInkRecognizerContext_put_PrefixText(This,Prefix)	\
    (This)->lpVtbl -> put_PrefixText(This,Prefix)

#define IInkRecognizerContext_get_SuffixText(This,Suffix)	\
    (This)->lpVtbl -> get_SuffixText(This,Suffix)

#define IInkRecognizerContext_put_SuffixText(This,Suffix)	\
    (This)->lpVtbl -> put_SuffixText(This,Suffix)

#define IInkRecognizerContext_get_RecognitionFlags(This,Modes)	\
    (This)->lpVtbl -> get_RecognitionFlags(This,Modes)

#define IInkRecognizerContext_put_RecognitionFlags(This,Modes)	\
    (This)->lpVtbl -> put_RecognitionFlags(This,Modes)

#define IInkRecognizerContext_get_WordList(This,WordList)	\
    (This)->lpVtbl -> get_WordList(This,WordList)

#define IInkRecognizerContext_putref_WordList(This,WordList)	\
    (This)->lpVtbl -> putref_WordList(This,WordList)

#define IInkRecognizerContext_get_Recognizer(This,Recognizer)	\
    (This)->lpVtbl -> get_Recognizer(This,Recognizer)

#define IInkRecognizerContext_Recognize(This,RecognitionStatus,RecognitionResult)	\
    (This)->lpVtbl -> Recognize(This,RecognitionStatus,RecognitionResult)

#define IInkRecognizerContext_Clone(This,RecoContext)	\
    (This)->lpVtbl -> Clone(This,RecoContext)

#define IInkRecognizerContext_IsStringSupported(This,String,Supported)	\
    (This)->lpVtbl -> IsStringSupported(This,String,Supported)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_get_Strokes_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);


void __RPC_STUB IInkRecognizerContext_get_Strokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_putref_Strokes_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [in] */ IInkStrokes __RPC_FAR *Strokes);


void __RPC_STUB IInkRecognizerContext_putref_Strokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_get_CharacterAutoCompletionMode_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [retval][out] */ InkRecognizerCharacterAutoCompletionMode __RPC_FAR *Mode);


void __RPC_STUB IInkRecognizerContext_get_CharacterAutoCompletionMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_put_CharacterAutoCompletionMode_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [in] */ InkRecognizerCharacterAutoCompletionMode Mode);


void __RPC_STUB IInkRecognizerContext_put_CharacterAutoCompletionMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_get_Factoid_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Factoid);


void __RPC_STUB IInkRecognizerContext_get_Factoid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_put_Factoid_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [in] */ BSTR factoid);


void __RPC_STUB IInkRecognizerContext_put_Factoid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_get_PrefixText_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Prefix);


void __RPC_STUB IInkRecognizerContext_get_PrefixText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_put_PrefixText_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [in] */ BSTR Prefix);


void __RPC_STUB IInkRecognizerContext_put_PrefixText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_get_SuffixText_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Suffix);


void __RPC_STUB IInkRecognizerContext_get_SuffixText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_put_SuffixText_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [in] */ BSTR Suffix);


void __RPC_STUB IInkRecognizerContext_put_SuffixText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_get_RecognitionFlags_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [retval][out] */ InkRecognitionModes __RPC_FAR *Modes);


void __RPC_STUB IInkRecognizerContext_get_RecognitionFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_put_RecognitionFlags_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [in] */ InkRecognitionModes Modes);


void __RPC_STUB IInkRecognizerContext_put_RecognitionFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_get_WordList_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [retval][out] */ IInkWordList __RPC_FAR *__RPC_FAR *WordList);


void __RPC_STUB IInkRecognizerContext_get_WordList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_putref_WordList_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [in] */ IInkWordList __RPC_FAR *WordList);


void __RPC_STUB IInkRecognizerContext_putref_WordList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_get_Recognizer_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [retval][out] */ IInkRecognizer __RPC_FAR *__RPC_FAR *Recognizer);


void __RPC_STUB IInkRecognizerContext_get_Recognizer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_Recognize_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [out][in] */ InkRecognitionStatus __RPC_FAR *RecognitionStatus,
    /* [retval][out] */ IInkRecognitionResult __RPC_FAR *__RPC_FAR *RecognitionResult);


void __RPC_STUB IInkRecognizerContext_Recognize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_Clone_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [retval][out] */ IInkRecognizerContext __RPC_FAR *__RPC_FAR *RecoContext);


void __RPC_STUB IInkRecognizerContext_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognizerContext_IsStringSupported_Proxy( 
    IInkRecognizerContext __RPC_FAR * This,
    /* [in] */ BSTR String,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Supported);


void __RPC_STUB IInkRecognizerContext_IsStringSupported_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkRecognizerContext_INTERFACE_DEFINED__ */


#ifndef __IInkRecognitionResult_INTERFACE_DEFINED__
#define __IInkRecognitionResult_INTERFACE_DEFINED__

/* interface IInkRecognitionResult */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkRecognitionResult;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3BC129A8-86CD-45ad-BDE8-E0D32D61C16D")
    IInkRecognitionResult : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TopString( 
            /* [retval][out] */ BSTR __RPC_FAR *TopString) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TopAlternate( 
            /* [retval][out] */ IInkRecognitionAlternate __RPC_FAR *__RPC_FAR *TopAlternate) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TopConfidence( 
            /* [retval][out] */ InkRecognitionConfidence __RPC_FAR *TopConfidence) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Strokes( 
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE AlternatesFromSelection( 
            /* [defaultvalue][in] */ long selectionStart,
            /* [defaultvalue][in] */ long selectionLength,
            /* [defaultvalue][in] */ long maximumAlternates,
            /* [retval][out] */ IInkRecognitionAlternates __RPC_FAR *__RPC_FAR *AlternatesFromSelection) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ModifyTopAlternate( 
            /* [in] */ IInkRecognitionAlternate __RPC_FAR *Alternate) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SetResultOnStrokes( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkRecognitionResultVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkRecognitionResult __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkRecognitionResult __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkRecognitionResult __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkRecognitionResult __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkRecognitionResult __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkRecognitionResult __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkRecognitionResult __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_TopString )( 
            IInkRecognitionResult __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *TopString);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_TopAlternate )( 
            IInkRecognitionResult __RPC_FAR * This,
            /* [retval][out] */ IInkRecognitionAlternate __RPC_FAR *__RPC_FAR *TopAlternate);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_TopConfidence )( 
            IInkRecognitionResult __RPC_FAR * This,
            /* [retval][out] */ InkRecognitionConfidence __RPC_FAR *TopConfidence);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Strokes )( 
            IInkRecognitionResult __RPC_FAR * This,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AlternatesFromSelection )( 
            IInkRecognitionResult __RPC_FAR * This,
            /* [defaultvalue][in] */ long selectionStart,
            /* [defaultvalue][in] */ long selectionLength,
            /* [defaultvalue][in] */ long maximumAlternates,
            /* [retval][out] */ IInkRecognitionAlternates __RPC_FAR *__RPC_FAR *AlternatesFromSelection);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ModifyTopAlternate )( 
            IInkRecognitionResult __RPC_FAR * This,
            /* [in] */ IInkRecognitionAlternate __RPC_FAR *Alternate);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetResultOnStrokes )( 
            IInkRecognitionResult __RPC_FAR * This);
        
        END_INTERFACE
    } IInkRecognitionResultVtbl;

    interface IInkRecognitionResult
    {
        CONST_VTBL struct IInkRecognitionResultVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkRecognitionResult_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkRecognitionResult_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkRecognitionResult_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkRecognitionResult_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkRecognitionResult_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkRecognitionResult_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkRecognitionResult_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkRecognitionResult_get_TopString(This,TopString)	\
    (This)->lpVtbl -> get_TopString(This,TopString)

#define IInkRecognitionResult_get_TopAlternate(This,TopAlternate)	\
    (This)->lpVtbl -> get_TopAlternate(This,TopAlternate)

#define IInkRecognitionResult_get_TopConfidence(This,TopConfidence)	\
    (This)->lpVtbl -> get_TopConfidence(This,TopConfidence)

#define IInkRecognitionResult_get_Strokes(This,Strokes)	\
    (This)->lpVtbl -> get_Strokes(This,Strokes)

#define IInkRecognitionResult_AlternatesFromSelection(This,selectionStart,selectionLength,maximumAlternates,AlternatesFromSelection)	\
    (This)->lpVtbl -> AlternatesFromSelection(This,selectionStart,selectionLength,maximumAlternates,AlternatesFromSelection)

#define IInkRecognitionResult_ModifyTopAlternate(This,Alternate)	\
    (This)->lpVtbl -> ModifyTopAlternate(This,Alternate)

#define IInkRecognitionResult_SetResultOnStrokes(This)	\
    (This)->lpVtbl -> SetResultOnStrokes(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionResult_get_TopString_Proxy( 
    IInkRecognitionResult __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *TopString);


void __RPC_STUB IInkRecognitionResult_get_TopString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionResult_get_TopAlternate_Proxy( 
    IInkRecognitionResult __RPC_FAR * This,
    /* [retval][out] */ IInkRecognitionAlternate __RPC_FAR *__RPC_FAR *TopAlternate);


void __RPC_STUB IInkRecognitionResult_get_TopAlternate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionResult_get_TopConfidence_Proxy( 
    IInkRecognitionResult __RPC_FAR * This,
    /* [retval][out] */ InkRecognitionConfidence __RPC_FAR *TopConfidence);


void __RPC_STUB IInkRecognitionResult_get_TopConfidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionResult_get_Strokes_Proxy( 
    IInkRecognitionResult __RPC_FAR * This,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);


void __RPC_STUB IInkRecognitionResult_get_Strokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognitionResult_AlternatesFromSelection_Proxy( 
    IInkRecognitionResult __RPC_FAR * This,
    /* [defaultvalue][in] */ long selectionStart,
    /* [defaultvalue][in] */ long selectionLength,
    /* [defaultvalue][in] */ long maximumAlternates,
    /* [retval][out] */ IInkRecognitionAlternates __RPC_FAR *__RPC_FAR *AlternatesFromSelection);


void __RPC_STUB IInkRecognitionResult_AlternatesFromSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognitionResult_ModifyTopAlternate_Proxy( 
    IInkRecognitionResult __RPC_FAR * This,
    /* [in] */ IInkRecognitionAlternate __RPC_FAR *Alternate);


void __RPC_STUB IInkRecognitionResult_ModifyTopAlternate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognitionResult_SetResultOnStrokes_Proxy( 
    IInkRecognitionResult __RPC_FAR * This);


void __RPC_STUB IInkRecognitionResult_SetResultOnStrokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkRecognitionResult_INTERFACE_DEFINED__ */


#ifndef __IInkRecognitionAlternate_INTERFACE_DEFINED__
#define __IInkRecognitionAlternate_INTERFACE_DEFINED__

/* interface IInkRecognitionAlternate */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkRecognitionAlternate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B7E660AD-77E4-429b-ADDA-873780D1FC4A")
    IInkRecognitionAlternate : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_String( 
            /* [retval][out] */ BSTR __RPC_FAR *RecoString) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Confidence( 
            /* [retval][out] */ InkRecognitionConfidence __RPC_FAR *Confidence) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Baseline( 
            /* [retval][out] */ VARIANT __RPC_FAR *Baseline) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Midline( 
            /* [retval][out] */ VARIANT __RPC_FAR *Midline) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Ascender( 
            /* [retval][out] */ VARIANT __RPC_FAR *Ascender) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Descender( 
            /* [retval][out] */ VARIANT __RPC_FAR *Descender) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LineNumber( 
            /* [retval][out] */ long __RPC_FAR *LineNumber) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Strokes( 
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LineAlternates( 
            /* [retval][out] */ IInkRecognitionAlternates __RPC_FAR *__RPC_FAR *LineAlternates) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConfidenceAlternates( 
            /* [retval][out] */ IInkRecognitionAlternates __RPC_FAR *__RPC_FAR *ConfidenceAlternates) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetStrokesFromStrokeRanges( 
            /* [in] */ IInkStrokes __RPC_FAR *Strokes,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *GetStrokesFromStrokeRanges) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetStrokesFromTextRange( 
            /* [out][in] */ long __RPC_FAR *selectionStart,
            /* [out][in] */ long __RPC_FAR *selectionLength,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *GetStrokesFromTextRange) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetTextRangeFromStrokes( 
            /* [in] */ IInkStrokes __RPC_FAR *Strokes,
            /* [out][in] */ long __RPC_FAR *selectionStart,
            /* [out][in] */ long __RPC_FAR *selectionLength) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE AlternatesWithConstantPropertyValues( 
            /* [in] */ BSTR PropertyType,
            /* [retval][out] */ IInkRecognitionAlternates __RPC_FAR *__RPC_FAR *AlternatesWithConstantPropertyValues) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPropertyValue( 
            /* [in] */ BSTR PropertyType,
            /* [retval][out] */ VARIANT __RPC_FAR *PropertyValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkRecognitionAlternateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkRecognitionAlternate __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkRecognitionAlternate __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_String )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *RecoString);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [retval][out] */ InkRecognitionConfidence __RPC_FAR *Confidence);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Baseline )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *Baseline);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Midline )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *Midline);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Ascender )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *Ascender);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Descender )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *Descender);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LineNumber )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *LineNumber);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Strokes )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LineAlternates )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [retval][out] */ IInkRecognitionAlternates __RPC_FAR *__RPC_FAR *LineAlternates);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ConfidenceAlternates )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [retval][out] */ IInkRecognitionAlternates __RPC_FAR *__RPC_FAR *ConfidenceAlternates);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetStrokesFromStrokeRanges )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [in] */ IInkStrokes __RPC_FAR *Strokes,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *GetStrokesFromStrokeRanges);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetStrokesFromTextRange )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [out][in] */ long __RPC_FAR *selectionStart,
            /* [out][in] */ long __RPC_FAR *selectionLength,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *GetStrokesFromTextRange);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTextRangeFromStrokes )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [in] */ IInkStrokes __RPC_FAR *Strokes,
            /* [out][in] */ long __RPC_FAR *selectionStart,
            /* [out][in] */ long __RPC_FAR *selectionLength);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AlternatesWithConstantPropertyValues )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [in] */ BSTR PropertyType,
            /* [retval][out] */ IInkRecognitionAlternates __RPC_FAR *__RPC_FAR *AlternatesWithConstantPropertyValues);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPropertyValue )( 
            IInkRecognitionAlternate __RPC_FAR * This,
            /* [in] */ BSTR PropertyType,
            /* [retval][out] */ VARIANT __RPC_FAR *PropertyValue);
        
        END_INTERFACE
    } IInkRecognitionAlternateVtbl;

    interface IInkRecognitionAlternate
    {
        CONST_VTBL struct IInkRecognitionAlternateVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkRecognitionAlternate_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkRecognitionAlternate_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkRecognitionAlternate_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkRecognitionAlternate_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkRecognitionAlternate_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkRecognitionAlternate_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkRecognitionAlternate_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkRecognitionAlternate_get_String(This,RecoString)	\
    (This)->lpVtbl -> get_String(This,RecoString)

#define IInkRecognitionAlternate_get_Confidence(This,Confidence)	\
    (This)->lpVtbl -> get_Confidence(This,Confidence)

#define IInkRecognitionAlternate_get_Baseline(This,Baseline)	\
    (This)->lpVtbl -> get_Baseline(This,Baseline)

#define IInkRecognitionAlternate_get_Midline(This,Midline)	\
    (This)->lpVtbl -> get_Midline(This,Midline)

#define IInkRecognitionAlternate_get_Ascender(This,Ascender)	\
    (This)->lpVtbl -> get_Ascender(This,Ascender)

#define IInkRecognitionAlternate_get_Descender(This,Descender)	\
    (This)->lpVtbl -> get_Descender(This,Descender)

#define IInkRecognitionAlternate_get_LineNumber(This,LineNumber)	\
    (This)->lpVtbl -> get_LineNumber(This,LineNumber)

#define IInkRecognitionAlternate_get_Strokes(This,Strokes)	\
    (This)->lpVtbl -> get_Strokes(This,Strokes)

#define IInkRecognitionAlternate_get_LineAlternates(This,LineAlternates)	\
    (This)->lpVtbl -> get_LineAlternates(This,LineAlternates)

#define IInkRecognitionAlternate_get_ConfidenceAlternates(This,ConfidenceAlternates)	\
    (This)->lpVtbl -> get_ConfidenceAlternates(This,ConfidenceAlternates)

#define IInkRecognitionAlternate_GetStrokesFromStrokeRanges(This,Strokes,GetStrokesFromStrokeRanges)	\
    (This)->lpVtbl -> GetStrokesFromStrokeRanges(This,Strokes,GetStrokesFromStrokeRanges)

#define IInkRecognitionAlternate_GetStrokesFromTextRange(This,selectionStart,selectionLength,GetStrokesFromTextRange)	\
    (This)->lpVtbl -> GetStrokesFromTextRange(This,selectionStart,selectionLength,GetStrokesFromTextRange)

#define IInkRecognitionAlternate_GetTextRangeFromStrokes(This,Strokes,selectionStart,selectionLength)	\
    (This)->lpVtbl -> GetTextRangeFromStrokes(This,Strokes,selectionStart,selectionLength)

#define IInkRecognitionAlternate_AlternatesWithConstantPropertyValues(This,PropertyType,AlternatesWithConstantPropertyValues)	\
    (This)->lpVtbl -> AlternatesWithConstantPropertyValues(This,PropertyType,AlternatesWithConstantPropertyValues)

#define IInkRecognitionAlternate_GetPropertyValue(This,PropertyType,PropertyValue)	\
    (This)->lpVtbl -> GetPropertyValue(This,PropertyType,PropertyValue)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_get_String_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *RecoString);


void __RPC_STUB IInkRecognitionAlternate_get_String_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_get_Confidence_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [retval][out] */ InkRecognitionConfidence __RPC_FAR *Confidence);


void __RPC_STUB IInkRecognitionAlternate_get_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_get_Baseline_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *Baseline);


void __RPC_STUB IInkRecognitionAlternate_get_Baseline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_get_Midline_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *Midline);


void __RPC_STUB IInkRecognitionAlternate_get_Midline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_get_Ascender_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *Ascender);


void __RPC_STUB IInkRecognitionAlternate_get_Ascender_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_get_Descender_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *Descender);


void __RPC_STUB IInkRecognitionAlternate_get_Descender_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_get_LineNumber_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *LineNumber);


void __RPC_STUB IInkRecognitionAlternate_get_LineNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_get_Strokes_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);


void __RPC_STUB IInkRecognitionAlternate_get_Strokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_get_LineAlternates_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [retval][out] */ IInkRecognitionAlternates __RPC_FAR *__RPC_FAR *LineAlternates);


void __RPC_STUB IInkRecognitionAlternate_get_LineAlternates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_get_ConfidenceAlternates_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [retval][out] */ IInkRecognitionAlternates __RPC_FAR *__RPC_FAR *ConfidenceAlternates);


void __RPC_STUB IInkRecognitionAlternate_get_ConfidenceAlternates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_GetStrokesFromStrokeRanges_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [in] */ IInkStrokes __RPC_FAR *Strokes,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *GetStrokesFromStrokeRanges);


void __RPC_STUB IInkRecognitionAlternate_GetStrokesFromStrokeRanges_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_GetStrokesFromTextRange_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [out][in] */ long __RPC_FAR *selectionStart,
    /* [out][in] */ long __RPC_FAR *selectionLength,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *GetStrokesFromTextRange);


void __RPC_STUB IInkRecognitionAlternate_GetStrokesFromTextRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_GetTextRangeFromStrokes_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [in] */ IInkStrokes __RPC_FAR *Strokes,
    /* [out][in] */ long __RPC_FAR *selectionStart,
    /* [out][in] */ long __RPC_FAR *selectionLength);


void __RPC_STUB IInkRecognitionAlternate_GetTextRangeFromStrokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_AlternatesWithConstantPropertyValues_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [in] */ BSTR PropertyType,
    /* [retval][out] */ IInkRecognitionAlternates __RPC_FAR *__RPC_FAR *AlternatesWithConstantPropertyValues);


void __RPC_STUB IInkRecognitionAlternate_AlternatesWithConstantPropertyValues_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternate_GetPropertyValue_Proxy( 
    IInkRecognitionAlternate __RPC_FAR * This,
    /* [in] */ BSTR PropertyType,
    /* [retval][out] */ VARIANT __RPC_FAR *PropertyValue);


void __RPC_STUB IInkRecognitionAlternate_GetPropertyValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkRecognitionAlternate_INTERFACE_DEFINED__ */


#ifndef __IInkRecognitionAlternates_INTERFACE_DEFINED__
#define __IInkRecognitionAlternates_INTERFACE_DEFINED__

/* interface IInkRecognitionAlternates */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkRecognitionAlternates;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("286A167F-9F19-4c61-9D53-4F07BE622B84")
    IInkRecognitionAlternates : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *Count) = 0;
        
        virtual /* [helpcontext][helpstring][restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *_NewEnum) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Strokes( 
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IInkRecognitionAlternate __RPC_FAR *__RPC_FAR *InkRecoAlternate) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkRecognitionAlternatesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkRecognitionAlternates __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkRecognitionAlternates __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkRecognitionAlternates __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkRecognitionAlternates __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkRecognitionAlternates __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkRecognitionAlternates __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkRecognitionAlternates __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IInkRecognitionAlternates __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [helpcontext][helpstring][restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IInkRecognitionAlternates __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *_NewEnum);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Strokes )( 
            IInkRecognitionAlternates __RPC_FAR * This,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Item )( 
            IInkRecognitionAlternates __RPC_FAR * This,
            /* [in] */ long Index,
            /* [retval][out] */ IInkRecognitionAlternate __RPC_FAR *__RPC_FAR *InkRecoAlternate);
        
        END_INTERFACE
    } IInkRecognitionAlternatesVtbl;

    interface IInkRecognitionAlternates
    {
        CONST_VTBL struct IInkRecognitionAlternatesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkRecognitionAlternates_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkRecognitionAlternates_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkRecognitionAlternates_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkRecognitionAlternates_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkRecognitionAlternates_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkRecognitionAlternates_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkRecognitionAlternates_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkRecognitionAlternates_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IInkRecognitionAlternates_get__NewEnum(This,_NewEnum)	\
    (This)->lpVtbl -> get__NewEnum(This,_NewEnum)

#define IInkRecognitionAlternates_get_Strokes(This,Strokes)	\
    (This)->lpVtbl -> get_Strokes(This,Strokes)

#define IInkRecognitionAlternates_Item(This,Index,InkRecoAlternate)	\
    (This)->lpVtbl -> Item(This,Index,InkRecoAlternate)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternates_get_Count_Proxy( 
    IInkRecognitionAlternates __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Count);


void __RPC_STUB IInkRecognitionAlternates_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][restricted][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternates_get__NewEnum_Proxy( 
    IInkRecognitionAlternates __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *_NewEnum);


void __RPC_STUB IInkRecognitionAlternates_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternates_get_Strokes_Proxy( 
    IInkRecognitionAlternates __RPC_FAR * This,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);


void __RPC_STUB IInkRecognitionAlternates_get_Strokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRecognitionAlternates_Item_Proxy( 
    IInkRecognitionAlternates __RPC_FAR * This,
    /* [in] */ long Index,
    /* [retval][out] */ IInkRecognitionAlternate __RPC_FAR *__RPC_FAR *InkRecoAlternate);


void __RPC_STUB IInkRecognitionAlternates_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkRecognitionAlternates_INTERFACE_DEFINED__ */


#ifndef __IInkWordList_INTERFACE_DEFINED__
#define __IInkWordList_INTERFACE_DEFINED__

/* interface IInkWordList */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkWordList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("76BA3491-CB2F-406b-9961-0E0C4CDAAEF2")
    IInkWordList : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE AddWord( 
            /* [in] */ BSTR NewWord) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveWord( 
            /* [in] */ BSTR RemoveWord) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Merge( 
            /* [in] */ IInkWordList __RPC_FAR *MergeWordList) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkWordListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkWordList __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkWordList __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkWordList __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkWordList __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkWordList __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkWordList __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkWordList __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddWord )( 
            IInkWordList __RPC_FAR * This,
            /* [in] */ BSTR NewWord);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveWord )( 
            IInkWordList __RPC_FAR * This,
            /* [in] */ BSTR RemoveWord);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Merge )( 
            IInkWordList __RPC_FAR * This,
            /* [in] */ IInkWordList __RPC_FAR *MergeWordList);
        
        END_INTERFACE
    } IInkWordListVtbl;

    interface IInkWordList
    {
        CONST_VTBL struct IInkWordListVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkWordList_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkWordList_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkWordList_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkWordList_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkWordList_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkWordList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkWordList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkWordList_AddWord(This,NewWord)	\
    (This)->lpVtbl -> AddWord(This,NewWord)

#define IInkWordList_RemoveWord(This,RemoveWord)	\
    (This)->lpVtbl -> RemoveWord(This,RemoveWord)

#define IInkWordList_Merge(This,MergeWordList)	\
    (This)->lpVtbl -> Merge(This,MergeWordList)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkWordList_AddWord_Proxy( 
    IInkWordList __RPC_FAR * This,
    /* [in] */ BSTR NewWord);


void __RPC_STUB IInkWordList_AddWord_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkWordList_RemoveWord_Proxy( 
    IInkWordList __RPC_FAR * This,
    /* [in] */ BSTR RemoveWord);


void __RPC_STUB IInkWordList_RemoveWord_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkWordList_Merge_Proxy( 
    IInkWordList __RPC_FAR * This,
    /* [in] */ IInkWordList __RPC_FAR *MergeWordList);


void __RPC_STUB IInkWordList_Merge_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkWordList_INTERFACE_DEFINED__ */


#ifndef __IInkDisp_INTERFACE_DEFINED__
#define __IInkDisp_INTERFACE_DEFINED__

/* interface IInkDisp */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkDisp;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9D398FA0-C4E2-4fcd-9973-975CAAF47EA6")
    IInkDisp : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Strokes( 
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExtendedProperties( 
            /* [retval][out] */ IInkExtendedProperties __RPC_FAR *__RPC_FAR *Properties) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Dirty( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Dirty) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Dirty( 
            /* [in] */ VARIANT_BOOL Dirty) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CustomStrokes( 
            /* [retval][out] */ IInkCustomStrokes __RPC_FAR *__RPC_FAR *ppunkInkCustomStrokes) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBoundingBox( 
            /* [defaultvalue][in] */ InkBoundingBoxMode BoundingBoxMode,
            /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *Rectangle) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteStrokes( 
            /* [defaultvalue][in] */ IInkStrokes __RPC_FAR *Strokes = 0) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteStroke( 
            /* [in] */ IInkStrokeDisp __RPC_FAR *Stroke) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ExtractStrokes( 
            /* [defaultvalue][in] */ IInkStrokes __RPC_FAR *Strokes,
            /* [defaultvalue][in] */ InkExtractFlags ExtractFlags,
            /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *ExtractedInk) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Clip( 
            /* [in] */ IInkRectangle __RPC_FAR *Rectangle) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Clone( 
            /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *NewInk) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE HitTestCircle( 
            /* [in] */ long X,
            /* [in] */ long Y,
            /* [in] */ float radius,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE HitTestWithRectangle( 
            /* [in] */ IInkRectangle __RPC_FAR *SelectionRectangle,
            /* [in] */ float IntersectPercent,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE HitTestWithLasso( 
            /* [in] */ VARIANT Points,
            /* [in] */ float IntersectPercent,
            /* [defaultvalue][out][in] */ VARIANT __RPC_FAR *LassoPoints,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateStrokes( 
            /* [defaultvalue][in] */ VARIANT StrokeIds,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE AddStrokesAtRectangle( 
            /* [in] */ IInkStrokes __RPC_FAR *SourceStrokes,
            /* [in] */ IInkRectangle __RPC_FAR *TargetRectangle) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [defaultvalue][in] */ InkPersistenceFormat PersistenceFormat,
            /* [defaultvalue][in] */ InkPersistenceCompressionMode CompressionMode,
            /* [retval][out] */ VARIANT __RPC_FAR *Data) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ VARIANT Data) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateStroke( 
            /* [in] */ VARIANT PacketData,
            /* [in] */ VARIANT PacketDescription,
            /* [retval][out] */ IInkStrokeDisp __RPC_FAR *__RPC_FAR *Stroke) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ClipboardCopy( 
            /* [defaultvalue][in] */ IInkStrokes __RPC_FAR *strokes,
            /* [defaultvalue][in] */ InkClipboardFormats ClipboardFormats,
            /* [defaultvalue][in] */ InkClipboardModes ClipboardModes,
            /* [retval][out] */ IDataObject __RPC_FAR *__RPC_FAR *DataObject) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE CanPaste( 
            /* [defaultvalue][in] */ IDataObject __RPC_FAR *DataObject,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *CanPaste) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ClipboardPaste( 
            /* [defaultvalue][in] */ long x,
            /* [defaultvalue][in] */ long y,
            /* [defaultvalue][in] */ IDataObject __RPC_FAR *DataObject,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkDispVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkDisp __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkDisp __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkDisp __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Strokes )( 
            IInkDisp __RPC_FAR * This,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtendedProperties )( 
            IInkDisp __RPC_FAR * This,
            /* [retval][out] */ IInkExtendedProperties __RPC_FAR *__RPC_FAR *Properties);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Dirty )( 
            IInkDisp __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Dirty);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Dirty )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Dirty);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CustomStrokes )( 
            IInkDisp __RPC_FAR * This,
            /* [retval][out] */ IInkCustomStrokes __RPC_FAR *__RPC_FAR *ppunkInkCustomStrokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBoundingBox )( 
            IInkDisp __RPC_FAR * This,
            /* [defaultvalue][in] */ InkBoundingBoxMode BoundingBoxMode,
            /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *Rectangle);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeleteStrokes )( 
            IInkDisp __RPC_FAR * This,
            /* [defaultvalue][in] */ IInkStrokes __RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeleteStroke )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ IInkStrokeDisp __RPC_FAR *Stroke);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ExtractStrokes )( 
            IInkDisp __RPC_FAR * This,
            /* [defaultvalue][in] */ IInkStrokes __RPC_FAR *Strokes,
            /* [defaultvalue][in] */ InkExtractFlags ExtractFlags,
            /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *ExtractedInk);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clip )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ IInkRectangle __RPC_FAR *Rectangle);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IInkDisp __RPC_FAR * This,
            /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *NewInk);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HitTestCircle )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ long X,
            /* [in] */ long Y,
            /* [in] */ float radius,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HitTestWithRectangle )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ IInkRectangle __RPC_FAR *SelectionRectangle,
            /* [in] */ float IntersectPercent,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HitTestWithLasso )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ VARIANT Points,
            /* [in] */ float IntersectPercent,
            /* [defaultvalue][out][in] */ VARIANT __RPC_FAR *LassoPoints,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateStrokes )( 
            IInkDisp __RPC_FAR * This,
            /* [defaultvalue][in] */ VARIANT StrokeIds,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddStrokesAtRectangle )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ IInkStrokes __RPC_FAR *SourceStrokes,
            /* [in] */ IInkRectangle __RPC_FAR *TargetRectangle);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Save )( 
            IInkDisp __RPC_FAR * This,
            /* [defaultvalue][in] */ InkPersistenceFormat PersistenceFormat,
            /* [defaultvalue][in] */ InkPersistenceCompressionMode CompressionMode,
            /* [retval][out] */ VARIANT __RPC_FAR *Data);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ VARIANT Data);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateStroke )( 
            IInkDisp __RPC_FAR * This,
            /* [in] */ VARIANT PacketData,
            /* [in] */ VARIANT PacketDescription,
            /* [retval][out] */ IInkStrokeDisp __RPC_FAR *__RPC_FAR *Stroke);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ClipboardCopy )( 
            IInkDisp __RPC_FAR * This,
            /* [defaultvalue][in] */ IInkStrokes __RPC_FAR *strokes,
            /* [defaultvalue][in] */ InkClipboardFormats ClipboardFormats,
            /* [defaultvalue][in] */ InkClipboardModes ClipboardModes,
            /* [retval][out] */ IDataObject __RPC_FAR *__RPC_FAR *DataObject);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanPaste )( 
            IInkDisp __RPC_FAR * This,
            /* [defaultvalue][in] */ IDataObject __RPC_FAR *DataObject,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *CanPaste);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ClipboardPaste )( 
            IInkDisp __RPC_FAR * This,
            /* [defaultvalue][in] */ long x,
            /* [defaultvalue][in] */ long y,
            /* [defaultvalue][in] */ IDataObject __RPC_FAR *DataObject,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);
        
        END_INTERFACE
    } IInkDispVtbl;

    interface IInkDisp
    {
        CONST_VTBL struct IInkDispVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkDisp_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkDisp_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkDisp_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkDisp_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkDisp_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkDisp_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkDisp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkDisp_get_Strokes(This,Strokes)	\
    (This)->lpVtbl -> get_Strokes(This,Strokes)

#define IInkDisp_get_ExtendedProperties(This,Properties)	\
    (This)->lpVtbl -> get_ExtendedProperties(This,Properties)

#define IInkDisp_get_Dirty(This,Dirty)	\
    (This)->lpVtbl -> get_Dirty(This,Dirty)

#define IInkDisp_put_Dirty(This,Dirty)	\
    (This)->lpVtbl -> put_Dirty(This,Dirty)

#define IInkDisp_get_CustomStrokes(This,ppunkInkCustomStrokes)	\
    (This)->lpVtbl -> get_CustomStrokes(This,ppunkInkCustomStrokes)

#define IInkDisp_GetBoundingBox(This,BoundingBoxMode,Rectangle)	\
    (This)->lpVtbl -> GetBoundingBox(This,BoundingBoxMode,Rectangle)

#define IInkDisp_DeleteStrokes(This,Strokes)	\
    (This)->lpVtbl -> DeleteStrokes(This,Strokes)

#define IInkDisp_DeleteStroke(This,Stroke)	\
    (This)->lpVtbl -> DeleteStroke(This,Stroke)

#define IInkDisp_ExtractStrokes(This,Strokes,ExtractFlags,ExtractedInk)	\
    (This)->lpVtbl -> ExtractStrokes(This,Strokes,ExtractFlags,ExtractedInk)

#define IInkDisp_Clip(This,Rectangle)	\
    (This)->lpVtbl -> Clip(This,Rectangle)

#define IInkDisp_Clone(This,NewInk)	\
    (This)->lpVtbl -> Clone(This,NewInk)

#define IInkDisp_HitTestCircle(This,X,Y,radius,Strokes)	\
    (This)->lpVtbl -> HitTestCircle(This,X,Y,radius,Strokes)

#define IInkDisp_HitTestWithRectangle(This,SelectionRectangle,IntersectPercent,Strokes)	\
    (This)->lpVtbl -> HitTestWithRectangle(This,SelectionRectangle,IntersectPercent,Strokes)

#define IInkDisp_HitTestWithLasso(This,Points,IntersectPercent,LassoPoints,Strokes)	\
    (This)->lpVtbl -> HitTestWithLasso(This,Points,IntersectPercent,LassoPoints,Strokes)

#define IInkDisp_CreateStrokes(This,StrokeIds,Strokes)	\
    (This)->lpVtbl -> CreateStrokes(This,StrokeIds,Strokes)

#define IInkDisp_AddStrokesAtRectangle(This,SourceStrokes,TargetRectangle)	\
    (This)->lpVtbl -> AddStrokesAtRectangle(This,SourceStrokes,TargetRectangle)

#define IInkDisp_Save(This,PersistenceFormat,CompressionMode,Data)	\
    (This)->lpVtbl -> Save(This,PersistenceFormat,CompressionMode,Data)

#define IInkDisp_Load(This,Data)	\
    (This)->lpVtbl -> Load(This,Data)

#define IInkDisp_CreateStroke(This,PacketData,PacketDescription,Stroke)	\
    (This)->lpVtbl -> CreateStroke(This,PacketData,PacketDescription,Stroke)

#define IInkDisp_ClipboardCopy(This,strokes,ClipboardFormats,ClipboardModes,DataObject)	\
    (This)->lpVtbl -> ClipboardCopy(This,strokes,ClipboardFormats,ClipboardModes,DataObject)

#define IInkDisp_CanPaste(This,DataObject,CanPaste)	\
    (This)->lpVtbl -> CanPaste(This,DataObject,CanPaste)

#define IInkDisp_ClipboardPaste(This,x,y,DataObject,Strokes)	\
    (This)->lpVtbl -> ClipboardPaste(This,x,y,DataObject,Strokes)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkDisp_get_Strokes_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);


void __RPC_STUB IInkDisp_get_Strokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkDisp_get_ExtendedProperties_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [retval][out] */ IInkExtendedProperties __RPC_FAR *__RPC_FAR *Properties);


void __RPC_STUB IInkDisp_get_ExtendedProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkDisp_get_Dirty_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Dirty);


void __RPC_STUB IInkDisp_get_Dirty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkDisp_put_Dirty_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Dirty);


void __RPC_STUB IInkDisp_put_Dirty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkDisp_get_CustomStrokes_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [retval][out] */ IInkCustomStrokes __RPC_FAR *__RPC_FAR *ppunkInkCustomStrokes);


void __RPC_STUB IInkDisp_get_CustomStrokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_GetBoundingBox_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [defaultvalue][in] */ InkBoundingBoxMode BoundingBoxMode,
    /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *Rectangle);


void __RPC_STUB IInkDisp_GetBoundingBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_DeleteStrokes_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [defaultvalue][in] */ IInkStrokes __RPC_FAR *Strokes);


void __RPC_STUB IInkDisp_DeleteStrokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_DeleteStroke_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [in] */ IInkStrokeDisp __RPC_FAR *Stroke);


void __RPC_STUB IInkDisp_DeleteStroke_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_ExtractStrokes_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [defaultvalue][in] */ IInkStrokes __RPC_FAR *Strokes,
    /* [defaultvalue][in] */ InkExtractFlags ExtractFlags,
    /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *ExtractedInk);


void __RPC_STUB IInkDisp_ExtractStrokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_Clip_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [in] */ IInkRectangle __RPC_FAR *Rectangle);


void __RPC_STUB IInkDisp_Clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_Clone_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *NewInk);


void __RPC_STUB IInkDisp_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_HitTestCircle_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [in] */ long X,
    /* [in] */ long Y,
    /* [in] */ float radius,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);


void __RPC_STUB IInkDisp_HitTestCircle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_HitTestWithRectangle_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [in] */ IInkRectangle __RPC_FAR *SelectionRectangle,
    /* [in] */ float IntersectPercent,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);


void __RPC_STUB IInkDisp_HitTestWithRectangle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_HitTestWithLasso_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [in] */ VARIANT Points,
    /* [in] */ float IntersectPercent,
    /* [defaultvalue][out][in] */ VARIANT __RPC_FAR *LassoPoints,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);


void __RPC_STUB IInkDisp_HitTestWithLasso_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_CreateStrokes_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [defaultvalue][in] */ VARIANT StrokeIds,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);


void __RPC_STUB IInkDisp_CreateStrokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_AddStrokesAtRectangle_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [in] */ IInkStrokes __RPC_FAR *SourceStrokes,
    /* [in] */ IInkRectangle __RPC_FAR *TargetRectangle);


void __RPC_STUB IInkDisp_AddStrokesAtRectangle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_Save_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [defaultvalue][in] */ InkPersistenceFormat PersistenceFormat,
    /* [defaultvalue][in] */ InkPersistenceCompressionMode CompressionMode,
    /* [retval][out] */ VARIANT __RPC_FAR *Data);


void __RPC_STUB IInkDisp_Save_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_Load_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [in] */ VARIANT Data);


void __RPC_STUB IInkDisp_Load_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_CreateStroke_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [in] */ VARIANT PacketData,
    /* [in] */ VARIANT PacketDescription,
    /* [retval][out] */ IInkStrokeDisp __RPC_FAR *__RPC_FAR *Stroke);


void __RPC_STUB IInkDisp_CreateStroke_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_ClipboardCopy_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [defaultvalue][in] */ IInkStrokes __RPC_FAR *strokes,
    /* [defaultvalue][in] */ InkClipboardFormats ClipboardFormats,
    /* [defaultvalue][in] */ InkClipboardModes ClipboardModes,
    /* [retval][out] */ IDataObject __RPC_FAR *__RPC_FAR *DataObject);


void __RPC_STUB IInkDisp_ClipboardCopy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_CanPaste_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [defaultvalue][in] */ IDataObject __RPC_FAR *DataObject,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *CanPaste);


void __RPC_STUB IInkDisp_CanPaste_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkDisp_ClipboardPaste_Proxy( 
    IInkDisp __RPC_FAR * This,
    /* [defaultvalue][in] */ long x,
    /* [defaultvalue][in] */ long y,
    /* [defaultvalue][in] */ IDataObject __RPC_FAR *DataObject,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);


void __RPC_STUB IInkDisp_ClipboardPaste_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkDisp_INTERFACE_DEFINED__ */


#ifndef __IInkStrokes_INTERFACE_DEFINED__
#define __IInkStrokes_INTERFACE_DEFINED__

/* interface IInkStrokes */
/* [unique][dual][helpcontext][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IInkStrokes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F1F4C9D8-590A-4963-B3AE-1935671BB6F3")
    IInkStrokes : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *Count) = 0;
        
        virtual /* [helpcontext][helpstring][restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *_NewEnum) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Ink( 
            /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *Ink) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_RecognitionResult( 
            /* [retval][out] */ IInkRecognitionResult __RPC_FAR *__RPC_FAR *RecognitionResult) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ToString( 
            /* [retval][out] */ BSTR __RPC_FAR *ToString) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IInkStrokeDisp __RPC_FAR *__RPC_FAR *Stroke) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ IInkStrokeDisp __RPC_FAR *InkStroke) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE AddStrokes( 
            /* [in] */ IInkStrokes __RPC_FAR *InkStrokes) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ IInkStrokeDisp __RPC_FAR *InkStroke) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveStrokes( 
            /* [in] */ IInkStrokes __RPC_FAR *InkStrokes) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ModifyDrawingAttributes( 
            /* [in] */ IInkDrawingAttributes __RPC_FAR *DrawAttrs) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBoundingBox( 
            /* [defaultvalue][in] */ InkBoundingBoxMode BoundingBoxMode,
            /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *BoundingBox) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Transform( 
            /* [in] */ IInkTransform __RPC_FAR *Transform,
            /* [defaultvalue][in] */ VARIANT_BOOL ApplyOnPenWidth = 0) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ScaleToRectangle( 
            /* [in] */ IInkRectangle __RPC_FAR *Rectangle) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ float HorizontalComponent,
            /* [in] */ float VerticalComponent) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Rotate( 
            /* [in] */ float Degrees,
            /* [defaultvalue][in] */ float x = 0,
            /* [defaultvalue][in] */ float y = 0) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Shear( 
            /* [in] */ float HorizontalMultiplier,
            /* [in] */ float VerticalMultiplier) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ScaleTransform( 
            /* [in] */ float HorizontalMultiplier,
            /* [in] */ float VerticalMultiplier) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Clip( 
            /* [in] */ IInkRectangle __RPC_FAR *Rectangle) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveRecognitionResult( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkStrokesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkStrokes __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkStrokes __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkStrokes __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IInkStrokes __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [helpcontext][helpstring][restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IInkStrokes __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *_NewEnum);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Ink )( 
            IInkStrokes __RPC_FAR * This,
            /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *Ink);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_RecognitionResult )( 
            IInkStrokes __RPC_FAR * This,
            /* [retval][out] */ IInkRecognitionResult __RPC_FAR *__RPC_FAR *RecognitionResult);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ToString )( 
            IInkStrokes __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *ToString);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Item )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ long Index,
            /* [retval][out] */ IInkStrokeDisp __RPC_FAR *__RPC_FAR *Stroke);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ IInkStrokeDisp __RPC_FAR *InkStroke);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddStrokes )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ IInkStrokes __RPC_FAR *InkStrokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ IInkStrokeDisp __RPC_FAR *InkStroke);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveStrokes )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ IInkStrokes __RPC_FAR *InkStrokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ModifyDrawingAttributes )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ IInkDrawingAttributes __RPC_FAR *DrawAttrs);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBoundingBox )( 
            IInkStrokes __RPC_FAR * This,
            /* [defaultvalue][in] */ InkBoundingBoxMode BoundingBoxMode,
            /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *BoundingBox);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Transform )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ IInkTransform __RPC_FAR *Transform,
            /* [defaultvalue][in] */ VARIANT_BOOL ApplyOnPenWidth);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ScaleToRectangle )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ IInkRectangle __RPC_FAR *Rectangle);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Move )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ float HorizontalComponent,
            /* [in] */ float VerticalComponent);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Rotate )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ float Degrees,
            /* [defaultvalue][in] */ float x,
            /* [defaultvalue][in] */ float y);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Shear )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ float HorizontalMultiplier,
            /* [in] */ float VerticalMultiplier);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ScaleTransform )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ float HorizontalMultiplier,
            /* [in] */ float VerticalMultiplier);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clip )( 
            IInkStrokes __RPC_FAR * This,
            /* [in] */ IInkRectangle __RPC_FAR *Rectangle);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveRecognitionResult )( 
            IInkStrokes __RPC_FAR * This);
        
        END_INTERFACE
    } IInkStrokesVtbl;

    interface IInkStrokes
    {
        CONST_VTBL struct IInkStrokesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkStrokes_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkStrokes_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkStrokes_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkStrokes_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkStrokes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkStrokes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkStrokes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkStrokes_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IInkStrokes_get__NewEnum(This,_NewEnum)	\
    (This)->lpVtbl -> get__NewEnum(This,_NewEnum)

#define IInkStrokes_get_Ink(This,Ink)	\
    (This)->lpVtbl -> get_Ink(This,Ink)

#define IInkStrokes_get_RecognitionResult(This,RecognitionResult)	\
    (This)->lpVtbl -> get_RecognitionResult(This,RecognitionResult)

#define IInkStrokes_ToString(This,ToString)	\
    (This)->lpVtbl -> ToString(This,ToString)

#define IInkStrokes_Item(This,Index,Stroke)	\
    (This)->lpVtbl -> Item(This,Index,Stroke)

#define IInkStrokes_Add(This,InkStroke)	\
    (This)->lpVtbl -> Add(This,InkStroke)

#define IInkStrokes_AddStrokes(This,InkStrokes)	\
    (This)->lpVtbl -> AddStrokes(This,InkStrokes)

#define IInkStrokes_Remove(This,InkStroke)	\
    (This)->lpVtbl -> Remove(This,InkStroke)

#define IInkStrokes_RemoveStrokes(This,InkStrokes)	\
    (This)->lpVtbl -> RemoveStrokes(This,InkStrokes)

#define IInkStrokes_ModifyDrawingAttributes(This,DrawAttrs)	\
    (This)->lpVtbl -> ModifyDrawingAttributes(This,DrawAttrs)

#define IInkStrokes_GetBoundingBox(This,BoundingBoxMode,BoundingBox)	\
    (This)->lpVtbl -> GetBoundingBox(This,BoundingBoxMode,BoundingBox)

#define IInkStrokes_Transform(This,Transform,ApplyOnPenWidth)	\
    (This)->lpVtbl -> Transform(This,Transform,ApplyOnPenWidth)

#define IInkStrokes_ScaleToRectangle(This,Rectangle)	\
    (This)->lpVtbl -> ScaleToRectangle(This,Rectangle)

#define IInkStrokes_Move(This,HorizontalComponent,VerticalComponent)	\
    (This)->lpVtbl -> Move(This,HorizontalComponent,VerticalComponent)

#define IInkStrokes_Rotate(This,Degrees,x,y)	\
    (This)->lpVtbl -> Rotate(This,Degrees,x,y)

#define IInkStrokes_Shear(This,HorizontalMultiplier,VerticalMultiplier)	\
    (This)->lpVtbl -> Shear(This,HorizontalMultiplier,VerticalMultiplier)

#define IInkStrokes_ScaleTransform(This,HorizontalMultiplier,VerticalMultiplier)	\
    (This)->lpVtbl -> ScaleTransform(This,HorizontalMultiplier,VerticalMultiplier)

#define IInkStrokes_Clip(This,Rectangle)	\
    (This)->lpVtbl -> Clip(This,Rectangle)

#define IInkStrokes_RemoveRecognitionResult(This)	\
    (This)->lpVtbl -> RemoveRecognitionResult(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokes_get_Count_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Count);


void __RPC_STUB IInkStrokes_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][restricted][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokes_get__NewEnum_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *_NewEnum);


void __RPC_STUB IInkStrokes_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokes_get_Ink_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *Ink);


void __RPC_STUB IInkStrokes_get_Ink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkStrokes_get_RecognitionResult_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [retval][out] */ IInkRecognitionResult __RPC_FAR *__RPC_FAR *RecognitionResult);


void __RPC_STUB IInkStrokes_get_RecognitionResult_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_ToString_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *ToString);


void __RPC_STUB IInkStrokes_ToString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_Item_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ long Index,
    /* [retval][out] */ IInkStrokeDisp __RPC_FAR *__RPC_FAR *Stroke);


void __RPC_STUB IInkStrokes_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_Add_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ IInkStrokeDisp __RPC_FAR *InkStroke);


void __RPC_STUB IInkStrokes_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_AddStrokes_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ IInkStrokes __RPC_FAR *InkStrokes);


void __RPC_STUB IInkStrokes_AddStrokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_Remove_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ IInkStrokeDisp __RPC_FAR *InkStroke);


void __RPC_STUB IInkStrokes_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_RemoveStrokes_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ IInkStrokes __RPC_FAR *InkStrokes);


void __RPC_STUB IInkStrokes_RemoveStrokes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_ModifyDrawingAttributes_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ IInkDrawingAttributes __RPC_FAR *DrawAttrs);


void __RPC_STUB IInkStrokes_ModifyDrawingAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_GetBoundingBox_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [defaultvalue][in] */ InkBoundingBoxMode BoundingBoxMode,
    /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *BoundingBox);


void __RPC_STUB IInkStrokes_GetBoundingBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_Transform_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ IInkTransform __RPC_FAR *Transform,
    /* [defaultvalue][in] */ VARIANT_BOOL ApplyOnPenWidth);


void __RPC_STUB IInkStrokes_Transform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_ScaleToRectangle_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ IInkRectangle __RPC_FAR *Rectangle);


void __RPC_STUB IInkStrokes_ScaleToRectangle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_Move_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ float HorizontalComponent,
    /* [in] */ float VerticalComponent);


void __RPC_STUB IInkStrokes_Move_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_Rotate_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ float Degrees,
    /* [defaultvalue][in] */ float x,
    /* [defaultvalue][in] */ float y);


void __RPC_STUB IInkStrokes_Rotate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_Shear_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ float HorizontalMultiplier,
    /* [in] */ float VerticalMultiplier);


void __RPC_STUB IInkStrokes_Shear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_ScaleTransform_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ float HorizontalMultiplier,
    /* [in] */ float VerticalMultiplier);


void __RPC_STUB IInkStrokes_ScaleTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_Clip_Proxy( 
    IInkStrokes __RPC_FAR * This,
    /* [in] */ IInkRectangle __RPC_FAR *Rectangle);


void __RPC_STUB IInkStrokes_Clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkStrokes_RemoveRecognitionResult_Proxy( 
    IInkStrokes __RPC_FAR * This);


void __RPC_STUB IInkStrokes_RemoveRecognitionResult_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkStrokes_INTERFACE_DEFINED__ */


#ifndef __IInkCustomStrokes_INTERFACE_DEFINED__
#define __IInkCustomStrokes_INTERFACE_DEFINED__

/* interface IInkCustomStrokes */
/* [unique][dual][helpcontext][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IInkCustomStrokes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7E23A88F-C30E-420f-9BDB-28902543F0C1")
    IInkCustomStrokes : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *Count) = 0;
        
        virtual /* [helpcontext][helpstring][restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *_NewEnum) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Identifier,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [in] */ IInkStrokes __RPC_FAR *Strokes) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Identifier) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkCustomStrokesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkCustomStrokes __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkCustomStrokes __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkCustomStrokes __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkCustomStrokes __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkCustomStrokes __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkCustomStrokes __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkCustomStrokes __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IInkCustomStrokes __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [helpcontext][helpstring][restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IInkCustomStrokes __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *_NewEnum);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Item )( 
            IInkCustomStrokes __RPC_FAR * This,
            /* [in] */ VARIANT Identifier,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IInkCustomStrokes __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [in] */ IInkStrokes __RPC_FAR *Strokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IInkCustomStrokes __RPC_FAR * This,
            /* [in] */ VARIANT Identifier);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clear )( 
            IInkCustomStrokes __RPC_FAR * This);
        
        END_INTERFACE
    } IInkCustomStrokesVtbl;

    interface IInkCustomStrokes
    {
        CONST_VTBL struct IInkCustomStrokesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkCustomStrokes_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkCustomStrokes_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkCustomStrokes_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkCustomStrokes_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkCustomStrokes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkCustomStrokes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkCustomStrokes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkCustomStrokes_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IInkCustomStrokes_get__NewEnum(This,_NewEnum)	\
    (This)->lpVtbl -> get__NewEnum(This,_NewEnum)

#define IInkCustomStrokes_Item(This,Identifier,Strokes)	\
    (This)->lpVtbl -> Item(This,Identifier,Strokes)

#define IInkCustomStrokes_Add(This,Name,Strokes)	\
    (This)->lpVtbl -> Add(This,Name,Strokes)

#define IInkCustomStrokes_Remove(This,Identifier)	\
    (This)->lpVtbl -> Remove(This,Identifier)

#define IInkCustomStrokes_Clear(This)	\
    (This)->lpVtbl -> Clear(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkCustomStrokes_get_Count_Proxy( 
    IInkCustomStrokes __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Count);


void __RPC_STUB IInkCustomStrokes_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][restricted][id][propget] */ HRESULT STDMETHODCALLTYPE IInkCustomStrokes_get__NewEnum_Proxy( 
    IInkCustomStrokes __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *_NewEnum);


void __RPC_STUB IInkCustomStrokes_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkCustomStrokes_Item_Proxy( 
    IInkCustomStrokes __RPC_FAR * This,
    /* [in] */ VARIANT Identifier,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Strokes);


void __RPC_STUB IInkCustomStrokes_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkCustomStrokes_Add_Proxy( 
    IInkCustomStrokes __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [in] */ IInkStrokes __RPC_FAR *Strokes);


void __RPC_STUB IInkCustomStrokes_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkCustomStrokes_Remove_Proxy( 
    IInkCustomStrokes __RPC_FAR * This,
    /* [in] */ VARIANT Identifier);


void __RPC_STUB IInkCustomStrokes_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkCustomStrokes_Clear_Proxy( 
    IInkCustomStrokes __RPC_FAR * This);


void __RPC_STUB IInkCustomStrokes_Clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkCustomStrokes_INTERFACE_DEFINED__ */


#ifndef __IInkRenderer_INTERFACE_DEFINED__
#define __IInkRenderer_INTERFACE_DEFINED__

/* interface IInkRenderer */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkRenderer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E6257A9C-B511-4f4c-A8B0-A7DBC9506B83")
    IInkRenderer : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetViewTransform( 
            /* [in] */ IInkTransform __RPC_FAR *ViewTransform) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SetViewTransform( 
            /* [in] */ IInkTransform __RPC_FAR *ViewTransform) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetObjectTransform( 
            /* [in] */ IInkTransform __RPC_FAR *ObjectTransform) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SetObjectTransform( 
            /* [in] */ IInkTransform __RPC_FAR *ObjectTransform) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Draw( 
            /* [in] */ long hDC,
            /* [in] */ IInkStrokes __RPC_FAR *pstcStrokes) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE DrawStroke( 
            /* [in] */ long hDC,
            /* [in] */ IInkStrokeDisp __RPC_FAR *Stroke,
            /* [defaultvalue][in] */ IInkDrawingAttributes __RPC_FAR *DrawingAttributes = 0) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE PixelToInkSpace( 
            /* [in] */ long hDC,
            /* [out][in] */ long __RPC_FAR *x,
            /* [out][in] */ long __RPC_FAR *y) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE InkSpaceToPixel( 
            /* [in] */ long hdcDisplay,
            /* [out][in] */ long __RPC_FAR *x,
            /* [out][in] */ long __RPC_FAR *y) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE PixelToInkSpaceFromPoints( 
            /* [in] */ long hDC,
            /* [out][in] */ VARIANT __RPC_FAR *Points) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE InkSpaceToPixelFromPoints( 
            /* [in] */ long hDC,
            /* [out][in] */ VARIANT __RPC_FAR *Points) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Measure( 
            /* [in] */ IInkStrokes __RPC_FAR *Strokes,
            /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *Rectangle) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE MeasureStroke( 
            /* [in] */ IInkStrokeDisp __RPC_FAR *Stroke,
            /* [defaultvalue][in] */ IInkDrawingAttributes __RPC_FAR *DrawingAttributes,
            /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *Rectangle) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ float HorizontalComponent,
            /* [in] */ float VerticalComponent) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Rotate( 
            /* [in] */ float Degrees,
            /* [defaultvalue][in] */ float x = 0,
            /* [defaultvalue][in] */ float y = 0) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ScaleTransform( 
            /* [in] */ float HorizontalMultiplier,
            /* [in] */ float VerticalMultiplier,
            /* [defaultvalue][in] */ VARIANT_BOOL ApplyOnPenWidth = -1) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkRendererVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkRenderer __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkRenderer __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkRenderer __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetViewTransform )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ IInkTransform __RPC_FAR *ViewTransform);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetViewTransform )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ IInkTransform __RPC_FAR *ViewTransform);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetObjectTransform )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ IInkTransform __RPC_FAR *ObjectTransform);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetObjectTransform )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ IInkTransform __RPC_FAR *ObjectTransform);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Draw )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ long hDC,
            /* [in] */ IInkStrokes __RPC_FAR *pstcStrokes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DrawStroke )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ long hDC,
            /* [in] */ IInkStrokeDisp __RPC_FAR *Stroke,
            /* [defaultvalue][in] */ IInkDrawingAttributes __RPC_FAR *DrawingAttributes);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PixelToInkSpace )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ long hDC,
            /* [out][in] */ long __RPC_FAR *x,
            /* [out][in] */ long __RPC_FAR *y);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InkSpaceToPixel )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ long hdcDisplay,
            /* [out][in] */ long __RPC_FAR *x,
            /* [out][in] */ long __RPC_FAR *y);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PixelToInkSpaceFromPoints )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ long hDC,
            /* [out][in] */ VARIANT __RPC_FAR *Points);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InkSpaceToPixelFromPoints )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ long hDC,
            /* [out][in] */ VARIANT __RPC_FAR *Points);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Measure )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ IInkStrokes __RPC_FAR *Strokes,
            /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *Rectangle);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MeasureStroke )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ IInkStrokeDisp __RPC_FAR *Stroke,
            /* [defaultvalue][in] */ IInkDrawingAttributes __RPC_FAR *DrawingAttributes,
            /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *Rectangle);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Move )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ float HorizontalComponent,
            /* [in] */ float VerticalComponent);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Rotate )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ float Degrees,
            /* [defaultvalue][in] */ float x,
            /* [defaultvalue][in] */ float y);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ScaleTransform )( 
            IInkRenderer __RPC_FAR * This,
            /* [in] */ float HorizontalMultiplier,
            /* [in] */ float VerticalMultiplier,
            /* [defaultvalue][in] */ VARIANT_BOOL ApplyOnPenWidth);
        
        END_INTERFACE
    } IInkRendererVtbl;

    interface IInkRenderer
    {
        CONST_VTBL struct IInkRendererVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkRenderer_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkRenderer_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkRenderer_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkRenderer_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkRenderer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkRenderer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkRenderer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkRenderer_GetViewTransform(This,ViewTransform)	\
    (This)->lpVtbl -> GetViewTransform(This,ViewTransform)

#define IInkRenderer_SetViewTransform(This,ViewTransform)	\
    (This)->lpVtbl -> SetViewTransform(This,ViewTransform)

#define IInkRenderer_GetObjectTransform(This,ObjectTransform)	\
    (This)->lpVtbl -> GetObjectTransform(This,ObjectTransform)

#define IInkRenderer_SetObjectTransform(This,ObjectTransform)	\
    (This)->lpVtbl -> SetObjectTransform(This,ObjectTransform)

#define IInkRenderer_Draw(This,hDC,pstcStrokes)	\
    (This)->lpVtbl -> Draw(This,hDC,pstcStrokes)

#define IInkRenderer_DrawStroke(This,hDC,Stroke,DrawingAttributes)	\
    (This)->lpVtbl -> DrawStroke(This,hDC,Stroke,DrawingAttributes)

#define IInkRenderer_PixelToInkSpace(This,hDC,x,y)	\
    (This)->lpVtbl -> PixelToInkSpace(This,hDC,x,y)

#define IInkRenderer_InkSpaceToPixel(This,hdcDisplay,x,y)	\
    (This)->lpVtbl -> InkSpaceToPixel(This,hdcDisplay,x,y)

#define IInkRenderer_PixelToInkSpaceFromPoints(This,hDC,Points)	\
    (This)->lpVtbl -> PixelToInkSpaceFromPoints(This,hDC,Points)

#define IInkRenderer_InkSpaceToPixelFromPoints(This,hDC,Points)	\
    (This)->lpVtbl -> InkSpaceToPixelFromPoints(This,hDC,Points)

#define IInkRenderer_Measure(This,Strokes,Rectangle)	\
    (This)->lpVtbl -> Measure(This,Strokes,Rectangle)

#define IInkRenderer_MeasureStroke(This,Stroke,DrawingAttributes,Rectangle)	\
    (This)->lpVtbl -> MeasureStroke(This,Stroke,DrawingAttributes,Rectangle)

#define IInkRenderer_Move(This,HorizontalComponent,VerticalComponent)	\
    (This)->lpVtbl -> Move(This,HorizontalComponent,VerticalComponent)

#define IInkRenderer_Rotate(This,Degrees,x,y)	\
    (This)->lpVtbl -> Rotate(This,Degrees,x,y)

#define IInkRenderer_ScaleTransform(This,HorizontalMultiplier,VerticalMultiplier,ApplyOnPenWidth)	\
    (This)->lpVtbl -> ScaleTransform(This,HorizontalMultiplier,VerticalMultiplier,ApplyOnPenWidth)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_GetViewTransform_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ IInkTransform __RPC_FAR *ViewTransform);


void __RPC_STUB IInkRenderer_GetViewTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_SetViewTransform_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ IInkTransform __RPC_FAR *ViewTransform);


void __RPC_STUB IInkRenderer_SetViewTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_GetObjectTransform_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ IInkTransform __RPC_FAR *ObjectTransform);


void __RPC_STUB IInkRenderer_GetObjectTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_SetObjectTransform_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ IInkTransform __RPC_FAR *ObjectTransform);


void __RPC_STUB IInkRenderer_SetObjectTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_Draw_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ long hDC,
    /* [in] */ IInkStrokes __RPC_FAR *pstcStrokes);


void __RPC_STUB IInkRenderer_Draw_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_DrawStroke_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ long hDC,
    /* [in] */ IInkStrokeDisp __RPC_FAR *Stroke,
    /* [defaultvalue][in] */ IInkDrawingAttributes __RPC_FAR *DrawingAttributes);


void __RPC_STUB IInkRenderer_DrawStroke_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_PixelToInkSpace_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ long hDC,
    /* [out][in] */ long __RPC_FAR *x,
    /* [out][in] */ long __RPC_FAR *y);


void __RPC_STUB IInkRenderer_PixelToInkSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_InkSpaceToPixel_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ long hdcDisplay,
    /* [out][in] */ long __RPC_FAR *x,
    /* [out][in] */ long __RPC_FAR *y);


void __RPC_STUB IInkRenderer_InkSpaceToPixel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_PixelToInkSpaceFromPoints_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ long hDC,
    /* [out][in] */ VARIANT __RPC_FAR *Points);


void __RPC_STUB IInkRenderer_PixelToInkSpaceFromPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_InkSpaceToPixelFromPoints_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ long hDC,
    /* [out][in] */ VARIANT __RPC_FAR *Points);


void __RPC_STUB IInkRenderer_InkSpaceToPixelFromPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_Measure_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ IInkStrokes __RPC_FAR *Strokes,
    /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *Rectangle);


void __RPC_STUB IInkRenderer_Measure_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_MeasureStroke_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ IInkStrokeDisp __RPC_FAR *Stroke,
    /* [defaultvalue][in] */ IInkDrawingAttributes __RPC_FAR *DrawingAttributes,
    /* [retval][out] */ IInkRectangle __RPC_FAR *__RPC_FAR *Rectangle);


void __RPC_STUB IInkRenderer_MeasureStroke_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_Move_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ float HorizontalComponent,
    /* [in] */ float VerticalComponent);


void __RPC_STUB IInkRenderer_Move_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_Rotate_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ float Degrees,
    /* [defaultvalue][in] */ float x,
    /* [defaultvalue][in] */ float y);


void __RPC_STUB IInkRenderer_Rotate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkRenderer_ScaleTransform_Proxy( 
    IInkRenderer __RPC_FAR * This,
    /* [in] */ float HorizontalMultiplier,
    /* [in] */ float VerticalMultiplier,
    /* [defaultvalue][in] */ VARIANT_BOOL ApplyOnPenWidth);


void __RPC_STUB IInkRenderer_ScaleTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkRenderer_INTERFACE_DEFINED__ */


#ifndef __IInkCursor_INTERFACE_DEFINED__
#define __IInkCursor_INTERFACE_DEFINED__

/* interface IInkCursor */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkCursor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AD30C630-40C5-4350-8405-9C71012FC558")
    IInkCursor : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *Name) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Id( 
            /* [retval][out] */ long __RPC_FAR *Id) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Inverted( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Status) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DrawingAttributes( 
            /* [retval][out] */ IInkDrawingAttributes __RPC_FAR *__RPC_FAR *Attributes) = 0;
        
        virtual /* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE putref_DrawingAttributes( 
            /* [in] */ IInkDrawingAttributes __RPC_FAR *Attributes) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Tablet( void) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Buttons( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkCursorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkCursor __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkCursor __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkCursor __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkCursor __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkCursor __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkCursor __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkCursor __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IInkCursor __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Id )( 
            IInkCursor __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Id);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Inverted )( 
            IInkCursor __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Status);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DrawingAttributes )( 
            IInkCursor __RPC_FAR * This,
            /* [retval][out] */ IInkDrawingAttributes __RPC_FAR *__RPC_FAR *Attributes);
        
        /* [helpcontext][helpstring][id][propputref] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *putref_DrawingAttributes )( 
            IInkCursor __RPC_FAR * This,
            /* [in] */ IInkDrawingAttributes __RPC_FAR *Attributes);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Tablet )( 
            IInkCursor __RPC_FAR * This);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Buttons )( 
            IInkCursor __RPC_FAR * This);
        
        END_INTERFACE
    } IInkCursorVtbl;

    interface IInkCursor
    {
        CONST_VTBL struct IInkCursorVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkCursor_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkCursor_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkCursor_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkCursor_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkCursor_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkCursor_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkCursor_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkCursor_get_Name(This,Name)	\
    (This)->lpVtbl -> get_Name(This,Name)

#define IInkCursor_get_Id(This,Id)	\
    (This)->lpVtbl -> get_Id(This,Id)

#define IInkCursor_get_Inverted(This,Status)	\
    (This)->lpVtbl -> get_Inverted(This,Status)

#define IInkCursor_get_DrawingAttributes(This,Attributes)	\
    (This)->lpVtbl -> get_DrawingAttributes(This,Attributes)

#define IInkCursor_putref_DrawingAttributes(This,Attributes)	\
    (This)->lpVtbl -> putref_DrawingAttributes(This,Attributes)

#define IInkCursor_get_Tablet(This)	\
    (This)->lpVtbl -> get_Tablet(This)

#define IInkCursor_get_Buttons(This)	\
    (This)->lpVtbl -> get_Buttons(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkCursor_get_Name_Proxy( 
    IInkCursor __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Name);


void __RPC_STUB IInkCursor_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkCursor_get_Id_Proxy( 
    IInkCursor __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Id);


void __RPC_STUB IInkCursor_get_Id_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkCursor_get_Inverted_Proxy( 
    IInkCursor __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Status);


void __RPC_STUB IInkCursor_get_Inverted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkCursor_get_DrawingAttributes_Proxy( 
    IInkCursor __RPC_FAR * This,
    /* [retval][out] */ IInkDrawingAttributes __RPC_FAR *__RPC_FAR *Attributes);


void __RPC_STUB IInkCursor_get_DrawingAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE IInkCursor_putref_DrawingAttributes_Proxy( 
    IInkCursor __RPC_FAR * This,
    /* [in] */ IInkDrawingAttributes __RPC_FAR *Attributes);


void __RPC_STUB IInkCursor_putref_DrawingAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkCursor_get_Tablet_Proxy( 
    IInkCursor __RPC_FAR * This);


void __RPC_STUB IInkCursor_get_Tablet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkCursor_get_Buttons_Proxy( 
    IInkCursor __RPC_FAR * This);


void __RPC_STUB IInkCursor_get_Buttons_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkCursor_INTERFACE_DEFINED__ */


#ifndef __IInkOverlay_INTERFACE_DEFINED__
#define __IInkOverlay_INTERFACE_DEFINED__

/* interface IInkOverlay */
/* [unique][helpcontext][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IInkOverlay;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b82a463b-c1c5-45a3-997c-deab5651b67a")
    IInkOverlay : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_hWnd( 
            /* [retval][out] */ long __RPC_FAR *CurrentWindow) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_hWnd( 
            /* [in] */ long NewWindow) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Collecting) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Collecting) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DefaultDrawingAttributes( 
            /* [retval][out] */ IInkDrawingAttributes __RPC_FAR *__RPC_FAR *CurrentAttributes) = 0;
        
        virtual /* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE putref_DefaultDrawingAttributes( 
            /* [in] */ IInkDrawingAttributes __RPC_FAR *NewAttributes) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Renderer( 
            /* [retval][out] */ IInkRenderer __RPC_FAR *__RPC_FAR *CurrentInkRenderer) = 0;
        
        virtual /* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE putref_Renderer( 
            /* [in] */ IInkRenderer __RPC_FAR *NewInkRenderer) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Ink( 
            /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *Ink) = 0;
        
        virtual /* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE putref_Ink( 
            /* [in] */ IInkDisp __RPC_FAR *NewInk) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AutoRedraw( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AutoRedraw) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AutoRedraw( 
            /* [in] */ VARIANT_BOOL AutoRedraw) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CollectingInk( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Collecting) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CollectionMode( 
            /* [retval][out] */ InkCollectionMode __RPC_FAR *Mode) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CollectionMode( 
            /* [in] */ InkCollectionMode Mode) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DynamicRendering( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DynamicRendering( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EditingMode( 
            /* [retval][out] */ InkOverlayEditingMode __RPC_FAR *EditingMode) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EditingMode( 
            /* [in] */ InkOverlayEditingMode EditingMode) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Selection) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selection( 
            /* [in] */ IInkStrokes __RPC_FAR *Selection) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EraserMode( 
            /* [retval][out] */ InkOverlayEraserMode __RPC_FAR *EraserMode) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EraserMode( 
            /* [in] */ InkOverlayEraserMode EraserMode) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SupportHighContrastInk( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Support) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SupportHighContrastInk( 
            /* [in] */ VARIANT_BOOL Support) = 0;
        
        virtual /* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SupportHighContrastSelectionUI( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Support) = 0;
        
        virtual /* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SupportHighContrastSelectionUI( 
            /* [in] */ VARIANT_BOOL Support) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Draw( 
            /* [in] */ IInkRectangle __RPC_FAR *Rect) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetWindowInputRectangle( 
            /* [out][in] */ IInkRectangle __RPC_FAR *__RPC_FAR *WindowInputRectangle) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SetWindowInputRectangle( 
            /* [in] */ IInkRectangle __RPC_FAR *WindowInputRectangle) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetEventInterest( 
            /* [in] */ InkCollectorEventInterest EventId,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Listen) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SetEventInterest( 
            /* [in] */ InkCollectorEventInterest EventId,
            /* [in] */ VARIANT_BOOL Listen) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInkOverlayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IInkOverlay __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IInkOverlay __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IInkOverlay __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_hWnd )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *CurrentWindow);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_hWnd )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ long NewWindow);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Collecting);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Enabled )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Collecting);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DefaultDrawingAttributes )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ IInkDrawingAttributes __RPC_FAR *__RPC_FAR *CurrentAttributes);
        
        /* [helpcontext][helpstring][id][propputref] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *putref_DefaultDrawingAttributes )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ IInkDrawingAttributes __RPC_FAR *NewAttributes);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Renderer )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ IInkRenderer __RPC_FAR *__RPC_FAR *CurrentInkRenderer);
        
        /* [helpcontext][helpstring][id][propputref] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *putref_Renderer )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ IInkRenderer __RPC_FAR *NewInkRenderer);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Ink )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *Ink);
        
        /* [helpcontext][helpstring][id][propputref] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *putref_Ink )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ IInkDisp __RPC_FAR *NewInk);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AutoRedraw )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AutoRedraw);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AutoRedraw )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL AutoRedraw);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CollectingInk )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Collecting);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CollectionMode )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ InkCollectionMode __RPC_FAR *Mode);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_CollectionMode )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ InkCollectionMode Mode);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DynamicRendering )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DynamicRendering )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_EditingMode )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ InkOverlayEditingMode __RPC_FAR *EditingMode);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_EditingMode )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ InkOverlayEditingMode EditingMode);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Selection )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Selection);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Selection )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ IInkStrokes __RPC_FAR *Selection);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_EraserMode )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ InkOverlayEraserMode __RPC_FAR *EraserMode);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_EraserMode )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ InkOverlayEraserMode EraserMode);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SupportHighContrastInk )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Support);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SupportHighContrastInk )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Support);
        
        /* [helpcontext][helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SupportHighContrastSelectionUI )( 
            IInkOverlay __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Support);
        
        /* [helpcontext][helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SupportHighContrastSelectionUI )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Support);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Draw )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ IInkRectangle __RPC_FAR *Rect);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetWindowInputRectangle )( 
            IInkOverlay __RPC_FAR * This,
            /* [out][in] */ IInkRectangle __RPC_FAR *__RPC_FAR *WindowInputRectangle);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetWindowInputRectangle )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ IInkRectangle __RPC_FAR *WindowInputRectangle);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEventInterest )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ InkCollectorEventInterest EventId,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Listen);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEventInterest )( 
            IInkOverlay __RPC_FAR * This,
            /* [in] */ InkCollectorEventInterest EventId,
            /* [in] */ VARIANT_BOOL Listen);
        
        END_INTERFACE
    } IInkOverlayVtbl;

    interface IInkOverlay
    {
        CONST_VTBL struct IInkOverlayVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInkOverlay_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IInkOverlay_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IInkOverlay_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IInkOverlay_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IInkOverlay_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IInkOverlay_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IInkOverlay_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IInkOverlay_get_hWnd(This,CurrentWindow)	\
    (This)->lpVtbl -> get_hWnd(This,CurrentWindow)

#define IInkOverlay_put_hWnd(This,NewWindow)	\
    (This)->lpVtbl -> put_hWnd(This,NewWindow)

#define IInkOverlay_get_Enabled(This,Collecting)	\
    (This)->lpVtbl -> get_Enabled(This,Collecting)

#define IInkOverlay_put_Enabled(This,Collecting)	\
    (This)->lpVtbl -> put_Enabled(This,Collecting)

#define IInkOverlay_get_DefaultDrawingAttributes(This,CurrentAttributes)	\
    (This)->lpVtbl -> get_DefaultDrawingAttributes(This,CurrentAttributes)

#define IInkOverlay_putref_DefaultDrawingAttributes(This,NewAttributes)	\
    (This)->lpVtbl -> putref_DefaultDrawingAttributes(This,NewAttributes)

#define IInkOverlay_get_Renderer(This,CurrentInkRenderer)	\
    (This)->lpVtbl -> get_Renderer(This,CurrentInkRenderer)

#define IInkOverlay_putref_Renderer(This,NewInkRenderer)	\
    (This)->lpVtbl -> putref_Renderer(This,NewInkRenderer)

#define IInkOverlay_get_Ink(This,Ink)	\
    (This)->lpVtbl -> get_Ink(This,Ink)

#define IInkOverlay_putref_Ink(This,NewInk)	\
    (This)->lpVtbl -> putref_Ink(This,NewInk)

#define IInkOverlay_get_AutoRedraw(This,AutoRedraw)	\
    (This)->lpVtbl -> get_AutoRedraw(This,AutoRedraw)

#define IInkOverlay_put_AutoRedraw(This,AutoRedraw)	\
    (This)->lpVtbl -> put_AutoRedraw(This,AutoRedraw)

#define IInkOverlay_get_CollectingInk(This,Collecting)	\
    (This)->lpVtbl -> get_CollectingInk(This,Collecting)

#define IInkOverlay_get_CollectionMode(This,Mode)	\
    (This)->lpVtbl -> get_CollectionMode(This,Mode)

#define IInkOverlay_put_CollectionMode(This,Mode)	\
    (This)->lpVtbl -> put_CollectionMode(This,Mode)

#define IInkOverlay_get_DynamicRendering(This,Enabled)	\
    (This)->lpVtbl -> get_DynamicRendering(This,Enabled)

#define IInkOverlay_put_DynamicRendering(This,Enabled)	\
    (This)->lpVtbl -> put_DynamicRendering(This,Enabled)

#define IInkOverlay_get_EditingMode(This,EditingMode)	\
    (This)->lpVtbl -> get_EditingMode(This,EditingMode)

#define IInkOverlay_put_EditingMode(This,EditingMode)	\
    (This)->lpVtbl -> put_EditingMode(This,EditingMode)

#define IInkOverlay_get_Selection(This,Selection)	\
    (This)->lpVtbl -> get_Selection(This,Selection)

#define IInkOverlay_put_Selection(This,Selection)	\
    (This)->lpVtbl -> put_Selection(This,Selection)

#define IInkOverlay_get_EraserMode(This,EraserMode)	\
    (This)->lpVtbl -> get_EraserMode(This,EraserMode)

#define IInkOverlay_put_EraserMode(This,EraserMode)	\
    (This)->lpVtbl -> put_EraserMode(This,EraserMode)

#define IInkOverlay_get_SupportHighContrastInk(This,Support)	\
    (This)->lpVtbl -> get_SupportHighContrastInk(This,Support)

#define IInkOverlay_put_SupportHighContrastInk(This,Support)	\
    (This)->lpVtbl -> put_SupportHighContrastInk(This,Support)

#define IInkOverlay_get_SupportHighContrastSelectionUI(This,Support)	\
    (This)->lpVtbl -> get_SupportHighContrastSelectionUI(This,Support)

#define IInkOverlay_put_SupportHighContrastSelectionUI(This,Support)	\
    (This)->lpVtbl -> put_SupportHighContrastSelectionUI(This,Support)

#define IInkOverlay_Draw(This,Rect)	\
    (This)->lpVtbl -> Draw(This,Rect)

#define IInkOverlay_GetWindowInputRectangle(This,WindowInputRectangle)	\
    (This)->lpVtbl -> GetWindowInputRectangle(This,WindowInputRectangle)

#define IInkOverlay_SetWindowInputRectangle(This,WindowInputRectangle)	\
    (This)->lpVtbl -> SetWindowInputRectangle(This,WindowInputRectangle)

#define IInkOverlay_GetEventInterest(This,EventId,Listen)	\
    (This)->lpVtbl -> GetEventInterest(This,EventId,Listen)

#define IInkOverlay_SetEventInterest(This,EventId,Listen)	\
    (This)->lpVtbl -> SetEventInterest(This,EventId,Listen)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_hWnd_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *CurrentWindow);


void __RPC_STUB IInkOverlay_get_hWnd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkOverlay_put_hWnd_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ long NewWindow);


void __RPC_STUB IInkOverlay_put_hWnd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_Enabled_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Collecting);


void __RPC_STUB IInkOverlay_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkOverlay_put_Enabled_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Collecting);


void __RPC_STUB IInkOverlay_put_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_DefaultDrawingAttributes_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ IInkDrawingAttributes __RPC_FAR *__RPC_FAR *CurrentAttributes);


void __RPC_STUB IInkOverlay_get_DefaultDrawingAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE IInkOverlay_putref_DefaultDrawingAttributes_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ IInkDrawingAttributes __RPC_FAR *NewAttributes);


void __RPC_STUB IInkOverlay_putref_DefaultDrawingAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_Renderer_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ IInkRenderer __RPC_FAR *__RPC_FAR *CurrentInkRenderer);


void __RPC_STUB IInkOverlay_get_Renderer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE IInkOverlay_putref_Renderer_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ IInkRenderer __RPC_FAR *NewInkRenderer);


void __RPC_STUB IInkOverlay_putref_Renderer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_Ink_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ IInkDisp __RPC_FAR *__RPC_FAR *Ink);


void __RPC_STUB IInkOverlay_get_Ink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propputref] */ HRESULT STDMETHODCALLTYPE IInkOverlay_putref_Ink_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ IInkDisp __RPC_FAR *NewInk);


void __RPC_STUB IInkOverlay_putref_Ink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_AutoRedraw_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AutoRedraw);


void __RPC_STUB IInkOverlay_get_AutoRedraw_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkOverlay_put_AutoRedraw_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL AutoRedraw);


void __RPC_STUB IInkOverlay_put_AutoRedraw_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_CollectingInk_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Collecting);


void __RPC_STUB IInkOverlay_get_CollectingInk_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_CollectionMode_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ InkCollectionMode __RPC_FAR *Mode);


void __RPC_STUB IInkOverlay_get_CollectionMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkOverlay_put_CollectionMode_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ InkCollectionMode Mode);


void __RPC_STUB IInkOverlay_put_CollectionMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_DynamicRendering_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);


void __RPC_STUB IInkOverlay_get_DynamicRendering_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkOverlay_put_DynamicRendering_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Enabled);


void __RPC_STUB IInkOverlay_put_DynamicRendering_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_EditingMode_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ InkOverlayEditingMode __RPC_FAR *EditingMode);


void __RPC_STUB IInkOverlay_get_EditingMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkOverlay_put_EditingMode_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ InkOverlayEditingMode EditingMode);


void __RPC_STUB IInkOverlay_put_EditingMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_Selection_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ IInkStrokes __RPC_FAR *__RPC_FAR *Selection);


void __RPC_STUB IInkOverlay_get_Selection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkOverlay_put_Selection_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ IInkStrokes __RPC_FAR *Selection);


void __RPC_STUB IInkOverlay_put_Selection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_EraserMode_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ InkOverlayEraserMode __RPC_FAR *EraserMode);


void __RPC_STUB IInkOverlay_get_EraserMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkOverlay_put_EraserMode_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ InkOverlayEraserMode EraserMode);


void __RPC_STUB IInkOverlay_put_EraserMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_SupportHighContrastInk_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Support);


void __RPC_STUB IInkOverlay_get_SupportHighContrastInk_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkOverlay_put_SupportHighContrastInk_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Support);


void __RPC_STUB IInkOverlay_put_SupportHighContrastInk_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IInkOverlay_get_SupportHighContrastSelectionUI_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Support);


void __RPC_STUB IInkOverlay_get_SupportHighContrastSelectionUI_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IInkOverlay_put_SupportHighContrastSelectionUI_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Support);


void __RPC_STUB IInkOverlay_put_SupportHighContrastSelectionUI_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkOverlay_Draw_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ IInkRectangle __RPC_FAR *Rect);


void __RPC_STUB IInkOverlay_Draw_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkOverlay_GetWindowInputRectangle_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [out][in] */ IInkRectangle __RPC_FAR *__RPC_FAR *WindowInputRectangle);


void __RPC_STUB IInkOverlay_GetWindowInputRectangle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkOverlay_SetWindowInputRectangle_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ IInkRectangle __RPC_FAR *WindowInputRectangle);


void __RPC_STUB IInkOverlay_SetWindowInputRectangle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkOverlay_GetEventInterest_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ InkCollectorEventInterest EventId,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Listen);


void __RPC_STUB IInkOverlay_GetEventInterest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE IInkOverlay_SetEventInterest_Proxy( 
    IInkOverlay __RPC_FAR * This,
    /* [in] */ InkCollectorEventInterest EventId,
    /* [in] */ VARIANT_BOOL Listen);


void __RPC_STUB IInkOverlay_SetEventInterest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IInkOverlay_INTERFACE_DEFINED__ */



#ifndef __MSINKAUTLib_LIBRARY_DEFINED__
#define __MSINKAUTLib_LIBRARY_DEFINED__

/* library MSINKAUTLib */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_MSINKAUTLib;

#ifndef ___IInkEvents_DISPINTERFACE_DEFINED__
#define ___IInkEvents_DISPINTERFACE_DEFINED__

/* dispinterface _IInkEvents */
/* [helpcontext][helpstring][uuid] */ 


EXTERN_C const IID DIID__IInkEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("427B1865-CA3F-479a-83A9-0F420F2A0073")
    _IInkEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IInkEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            _IInkEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            _IInkEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            _IInkEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            _IInkEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            _IInkEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            _IInkEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            _IInkEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } _IInkEventsVtbl;

    interface _IInkEvents
    {
        CONST_VTBL struct _IInkEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IInkEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define _IInkEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define _IInkEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define _IInkEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define _IInkEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define _IInkEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define _IInkEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IInkEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___IInkStrokesEvents_DISPINTERFACE_DEFINED__
#define ___IInkStrokesEvents_DISPINTERFACE_DEFINED__

/* dispinterface _IInkStrokesEvents */
/* [helpcontext][helpstring][uuid] */ 


EXTERN_C const IID DIID__IInkStrokesEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("F33053EC-5D25-430a-928F-76A6491DDE15")
    _IInkStrokesEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IInkStrokesEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            _IInkStrokesEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            _IInkStrokesEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            _IInkStrokesEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            _IInkStrokesEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            _IInkStrokesEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            _IInkStrokesEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            _IInkStrokesEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } _IInkStrokesEventsVtbl;

    interface _IInkStrokesEvents
    {
        CONST_VTBL struct _IInkStrokesEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IInkStrokesEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define _IInkStrokesEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define _IInkStrokesEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define _IInkStrokesEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define _IInkStrokesEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define _IInkStrokesEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define _IInkStrokesEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IInkStrokesEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___IInkOverlayEvents_DISPINTERFACE_DEFINED__
#define ___IInkOverlayEvents_DISPINTERFACE_DEFINED__

/* dispinterface _IInkOverlayEvents */
/* [helpcontext][helpstring][uuid] */ 


EXTERN_C const IID DIID__IInkOverlayEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("31179b69-e563-489e-b16f-712f1e8a0651")
    _IInkOverlayEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IInkOverlayEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            _IInkOverlayEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            _IInkOverlayEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            _IInkOverlayEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            _IInkOverlayEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            _IInkOverlayEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            _IInkOverlayEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            _IInkOverlayEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } _IInkOverlayEventsVtbl;

    interface _IInkOverlayEvents
    {
        CONST_VTBL struct _IInkOverlayEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IInkOverlayEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define _IInkOverlayEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define _IInkOverlayEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define _IInkOverlayEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define _IInkOverlayEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define _IInkOverlayEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define _IInkOverlayEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IInkOverlayEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_InkRectangle;

#ifdef __cplusplus

class DECLSPEC_UUID("43B07326-AAE0-4B62-A83D-5FD768B7353C")
InkRectangle;
#endif

EXTERN_C const CLSID CLSID_InkProperty;

#ifdef __cplusplus

class DECLSPEC_UUID("6B719B44-4DE1-4B4F-B016-F922A8C3F110")
InkProperty;
#endif

EXTERN_C const CLSID CLSID_InkProperties;

#ifdef __cplusplus

class DECLSPEC_UUID("C787B7AF-C67E-45A6-8873-C82058DD4627")
InkProperties;
#endif

EXTERN_C const CLSID CLSID_InkDrawingAttributes;

#ifdef __cplusplus

class DECLSPEC_UUID("D8BF32A2-05A5-44c3-B3AA-5E80AC7D2576")
InkDrawingAttributes;
#endif

EXTERN_C const CLSID CLSID_InkTransform;

#ifdef __cplusplus

class DECLSPEC_UUID("E3D5D93C-1663-4A78-A1A7-22375DFEBAEE")
InkTransform;
#endif

EXTERN_C const CLSID CLSID_InkDisp;

#ifdef __cplusplus

class DECLSPEC_UUID("937C1A34-151D-4610-9CA6-A8CC9BDB5D83")
InkDisp;
#endif

EXTERN_C const CLSID CLSID_InkStrokes;

#ifdef __cplusplus

class DECLSPEC_UUID("48F491BC-240E-4860-B079-A1E94D3D2C86")
InkStrokes;
#endif

EXTERN_C const CLSID CLSID_InkRenderer;

#ifdef __cplusplus

class DECLSPEC_UUID("9C1CC6E4-D7EB-4eeb-9091-15A7C8791ED9")
InkRenderer;
#endif

EXTERN_C const CLSID CLSID_InkOverlay;

#ifdef __cplusplus

class DECLSPEC_UUID("65d00646-cde3-4a88-9163-6769f0f1a97d")
InkOverlay;
#endif

EXTERN_C const CLSID CLSID_InkRecognizers;

#ifdef __cplusplus

class DECLSPEC_UUID("9FD4E808-F6E6-4e65-98D3-AA39054C1255")
InkRecognizers;
#endif

EXTERN_C const CLSID CLSID_InkRecognizerContext;

#ifdef __cplusplus

class DECLSPEC_UUID("AAC46A37-9229-4fc0-8CCE-4497569BF4D1")
InkRecognizerContext;
#endif

EXTERN_C const CLSID CLSID_InkWordList;

#ifdef __cplusplus

class DECLSPEC_UUID("9DE85094-F71F-44f1-8471-15A2FA76FCF3")
InkWordList;
#endif
#endif /* __MSINKAUTLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\msoeapi.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES.
//

#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 5.03.0286 */
/* at Mon Jan 22 12:15:03 2007
 */
/* Compiler settings for ..\msoeapi.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32 (32b run), ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __msoeapi_h__
#define __msoeapi_h__

/* Forward Declarations */ 

#ifndef __IOutlookExpress_FWD_DEFINED__
#define __IOutlookExpress_FWD_DEFINED__
typedef interface IOutlookExpress IOutlookExpress;
#endif 	/* __IOutlookExpress_FWD_DEFINED__ */


#ifndef __IStoreNamespace_FWD_DEFINED__
#define __IStoreNamespace_FWD_DEFINED__
typedef interface IStoreNamespace IStoreNamespace;
#endif 	/* __IStoreNamespace_FWD_DEFINED__ */


#ifndef __IStoreFolder_FWD_DEFINED__
#define __IStoreFolder_FWD_DEFINED__
typedef interface IStoreFolder IStoreFolder;
#endif 	/* __IStoreFolder_FWD_DEFINED__ */


#ifndef __IStoreNamespace2_FWD_DEFINED__
#define __IStoreNamespace2_FWD_DEFINED__
typedef interface IStoreNamespace2 IStoreNamespace2;
#endif 	/* __IStoreNamespace2_FWD_DEFINED__ */


#ifndef __IStoreFolder2_FWD_DEFINED__
#define __IStoreFolder2_FWD_DEFINED__
typedef interface IStoreFolder2 IStoreFolder2;
#endif 	/* __IStoreFolder2_FWD_DEFINED__ */


/* header files for imported files */
#include "ocidl.h"
#include "mimeole.h"

#ifdef __cplusplus
extern "C"{
#endif 

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_msoeapi_0000 */
/* [local] */ 

#ifndef MSOEAPI_H
#define MSOEAPI_H



//+-------------------------------------------------------------------------
// GUID Definitions
//--------------------------------------------------------------------------
#pragma comment(lib,"uuid.lib")

// {3338DF69-4660-11d1-8A8D-00C04FB951F3}
DEFINE_GUID(CLSID_OutlookExpress, 0x3338df69, 0x4660, 0x11d1, 0x8a, 0x8d, 0x0, 0xc0, 0x4f, 0xb9, 0x51, 0xf3);

// {0006F01A-0000-0000-C000-0000000046}
DEFINE_GUID(CLSID_Envelope, 0x0006F01A, 0x0000, 0x0000, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46);

// {3338DF6A-4660-11d1-8A8D-00C04FB951F3}
DEFINE_GUID(IID_IOutlookExpress, 0x3338df6a, 0x4660, 0x11d1, 0x8a, 0x8d, 0x00, 0xc0, 0x4f, 0xb9, 0x51, 0xf3);

// {E70C92A9-4BFD-11d1-8A95-00C04FB951F3}
DEFINE_GUID(CLSID_StoreNamespace, 0xe70c92a9, 0x4bfd, 0x11d1, 0x8a, 0x95, 0x0, 0xc0, 0x4f, 0xb9, 0x51, 0xf3);

// {E70C92AA-4BFD-11d1-8A95-00C04FB951F3}
DEFINE_GUID(IID_IStoreNamespace, 0xe70c92aa, 0x4bfd, 0x11d1, 0x8a, 0x95, 0x0, 0xc0, 0x4f, 0xb9, 0x51, 0xf3);

// {E70C92AC-4BFD-11d1-8A95-00C04FB951F3}
DEFINE_GUID(IID_IStoreFolder, 0xe70c92ac, 0x4bfd, 0x11d1, 0x8a, 0x95, 0x0, 0xc0, 0x4f, 0xb9, 0x51, 0xf3);

//+-------------------------------------------------------------------------
// Errors Definition Macros
//--------------------------------------------------------------------------
#ifndef FACILITY_INTERNET
#define FACILITY_INTERNET 12
#endif
#ifndef HR_E
#define HR_E(n) MAKE_SCODE(SEVERITY_ERROR, FACILITY_INTERNET, n)
#endif
#ifndef HR_S
#define HR_S(n) MAKE_SCODE(SEVERITY_SUCCESS, FACILITY_INTERNET, n)
#endif
#ifndef HR_CODE
#define HR_CODE(hr) (INT)(hr & 0xffff)
#endif

//+-------------------------------------------------------------------------
// MSOEAPI Failure Return Values
//--------------------------------------------------------------------------
#define MSOEAPI_E_FILE_NOT_FOUND             HR_E(0xCF65)
#define MSOEAPI_E_STORE_INITIALIZE           HR_E(0xCF66)
#define MSOEAPI_E_INVALID_STRUCT_SIZE        HR_E(0xCF67)
#define MSOEAPI_E_CANT_LOAD_MSOERT           HR_E(0xCF68)
#define MSOEAPI_E_CANT_LOAD_INETCOMM         HR_E(0xCF69)
#define MSOEAPI_E_CANT_LOAD_MSOEACCT         HR_E(0xCF70)
#define MSOEAPI_E_CANT_MSOERT_BADVER         HR_E(0xCF71)
#define MSOEAPI_E_CANT_INETCOMM_BADVER       HR_E(0xCF72)
#define MSOEAPI_E_CANT_MSOEACCT_BADVER       HR_E(0xCF73)

//+-------------------------------------------------------------------------
// String Definition Macros
//--------------------------------------------------------------------------
#ifdef __cplusplus
#define EXTERN_C extern "C"
#else
#define EXTERN_C extern
#endif

#ifndef STRCONSTA
#ifdef DEFINE_STRCONST
#define STRCONSTA(x,y)    EXTERN_C const char x[] = y
#define STRCONSTW(x,y)    EXTERN_C const WCHAR x[] = L##y
#else
#define STRCONSTA(x,y)    EXTERN_C const char x[]
#define STRCONSTW(x,y)    EXTERN_C const WCHAR x[]
#endif STRCONSTA
#endif

//+-------------------------------------------------------------------------
// Strings
//--------------------------------------------------------------------------
STRCONSTA(STR_MSOEAPI_INSTANCECLASS,      "OutlookExpressHiddenWindow");
STRCONSTA(STR_MSOEAPI_IPSERVERCLASS,      "OutlookExpressInProccessServer");
STRCONSTA(STR_MSOEAPI_INSTANCEMUTEX,      "Local\\OutlookExpress_InstanceMutex_101897");
STRCONSTA(STR_MSOEAPI_DLLNAME,            "MSOE.DLL");
STRCONSTA(STR_MSOEAPI_START,              "CoStartOutlookExpress");
STRCONSTA(STR_MSOEAPI_SHUTDOWN,           "CoShutdownOutlookExpress");
STRCONSTA(STR_MSOEAPI_CREATE,             "CoCreateOutlookExpress");

//+-------------------------------------------------------------------------
// Function Typedefs
//--------------------------------------------------------------------------
typedef HRESULT (APIENTRY *PFNSTART)(DWORD dwFlags, LPCSTR pszCmdLine, INT nCmdShow);
typedef HRESULT (APIENTRY *PFNSHUTDOWN)(DWORD dwReserved);
typedef HRESULT (APIENTRY *PFNCREATE)(IUnknown *pUnkOuter, IUnknown **ppUnknown);

#define	MSOEAPI_ACDM_CMDLINE	( 1 )

#define	MSOEAPI_ACDM_NOTIFY	( 2 )

#define	MSOEAPI_ACDM_ODBNOTIFY	( 3 )

#define	MSOEAPI_ACDM_STGNOTIFY	( 4 )

struct HENUMSTORE__
    {
    DWORD unused;
    };
typedef /* [transmit_as] */ struct HENUMSTORE__ *HENUMSTORE;

typedef HENUMSTORE __RPC_FAR *LPHENUMSTORE;

#ifndef __LPOUTLOOKEXPRESS_DEFINED
#define __LPOUTLOOKEXPRESS_DEFINED


extern RPC_IF_HANDLE __MIDL_itf_msoeapi_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msoeapi_0000_v0_0_s_ifspec;

#ifndef __IOutlookExpress_INTERFACE_DEFINED__
#define __IOutlookExpress_INTERFACE_DEFINED__

/* interface IOutlookExpress */
/* [unique][uuid][object] */ 

typedef IOutlookExpress __RPC_FAR *LPOUTLOOKEXPRESS;

#define MSOEAPI_START_SHOWSPLASH         0x00000001
#define MSOEAPI_START_MESSAGEPUMP        0x00000002
#define MSOEAPI_START_ALLOWCOMPACTION    0x00000004
#define MSOEAPI_START_INSTANCEMUTEX      0x00000008
#define MSOEAPI_START_SHOWERRORS         0x00000010
#define MSOEAPI_START_APPWINDOW          0x00000020
#define MSOEAPI_START_DEFAULTIDENTITY    0x00000040
#define MSOEAPI_START_ALREADY_RUNNING    0x00000080
#define MSOEAPI_START_STOREVALIDNODELETE 0x00000100
#define MSOEAPI_START_NOSTORE            0x00000200
#define MSOEAPI_START_APPLICATION \
    (MSOEAPI_START_SHOWSPLASH      | \
     MSOEAPI_START_SHOWERRORS      | \
     MSOEAPI_START_MESSAGEPUMP     | \
     MSOEAPI_START_ALLOWCOMPACTION | \
     MSOEAPI_START_INSTANCEMUTEX   | \
     MSOEAPI_START_APPWINDOW)
#define MSOEAPI_START_COMOBJECT \
     MSOEAPI_START_SHOWERRORS

EXTERN_C const IID IID_IOutlookExpress;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3338DF6A-4660-11d1-8A8D-00C04FB951F3")
    IOutlookExpress : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Start( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ LPCSTR pszCmdLine,
            /* [in] */ INT nCmdShow) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOutlookExpressVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IOutlookExpress __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IOutlookExpress __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IOutlookExpress __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Start )( 
            IOutlookExpress __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ LPCSTR pszCmdLine,
            /* [in] */ INT nCmdShow);
        
        END_INTERFACE
    } IOutlookExpressVtbl;

    interface IOutlookExpress
    {
        CONST_VTBL struct IOutlookExpressVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOutlookExpress_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IOutlookExpress_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IOutlookExpress_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IOutlookExpress_Start(This,dwFlags,pszCmdLine,nCmdShow)	\
    (This)->lpVtbl -> Start(This,dwFlags,pszCmdLine,nCmdShow)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IOutlookExpress_Start_Proxy( 
    IOutlookExpress __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ LPCSTR pszCmdLine,
    /* [in] */ INT nCmdShow);


void __RPC_STUB IOutlookExpress_Start_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IOutlookExpress_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msoeapi_0299 */
/* [local] */ 

#endif // __LPOUTLOOKEXPRESS_DEFINED
#ifndef __LPSTORENAMESPACE_DEFINED
#define __LPSTORENAMESPACE_DEFINED


extern RPC_IF_HANDLE __MIDL_itf_msoeapi_0299_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msoeapi_0299_v0_0_s_ifspec;

#ifndef __IStoreNamespace_INTERFACE_DEFINED__
#define __IStoreNamespace_INTERFACE_DEFINED__

/* interface IStoreNamespace */
/* [unique][uuid][object] */ 

typedef IStoreNamespace __RPC_FAR *LPSTORENAMESPACE;

typedef DWORD STOREFOLDERID;

typedef STOREFOLDERID __RPC_FAR *LPSTOREFOLDERID;

#define	FOLDERID_ROOT	( 0 )

#define	FOLDERID_INVALID	( 0xffffffff )

typedef DWORD MESSAGEID;

typedef MESSAGEID __RPC_FAR *LPMESSAGEID;

#define	MESSAGEID_INVALID	( 0xffffffff )

#define	MESSAGEID_FIRST	( 0xffffffff )

#define	CCHMAX_FOLDER_NAME	( 256 )

#define WM_FOLDERNOTIFY      (WM_USER + 1600) // IStoreNamespace Notification - lparam=LPFOLDERNOTIFYEX, client must call CoTaskMemFree(lParam)
#define WM_NEWMSGS           (WM_USER + 1650) // IStoreFolder Notification: wParam=MESSAGEID, lParam=Reserved
#define WM_DELETEMSGS        (WM_USER + 1651) // IStoreFolder Notification: wParam=prgdwMsgId, lParam=cMsgs
#define WM_DELETEFOLDER      (WM_USER + 1652) // IStoreFolder Notification: wParam=STOREFOLDERID or HFOLDER
#define WM_MARKEDASREAD      (WM_USER + 1653) // IStoreFolder Notification: wParamprgdwMsgId, lParam=cMsgs
#define WM_MARKEDASUNREAD    (WM_USER + 1654) // IStoreFolder Notification: wParamprgdwMsgId, lParam=cMsgs
typedef 
enum tagFOLDERNOTIFYTYPE
    {	NEW_FOLDER	= 1,
	DELETE_FOLDER	= NEW_FOLDER + 1,
	RENAME_FOLDER	= DELETE_FOLDER + 1,
	MOVE_FOLDER	= RENAME_FOLDER + 1,
	UNREAD_CHANGE	= MOVE_FOLDER + 1,
	IMAPFLAG_CHANGE	= UNREAD_CHANGE + 1,
	UPDATEFLAG_CHANGE	= IMAPFLAG_CHANGE + 1,
	FOLDER_PROPS_CHANGED	= UPDATEFLAG_CHANGE + 1
    }	FOLDERNOTIFYTYPE;

typedef struct tagFOLDERNOTIFYEX
    {
    FOLDERNOTIFYTYPE type;
    STOREFOLDERID idFolderOld;
    STOREFOLDERID idFolderNew;
    }	FOLDERNOTIFYEX;

typedef struct tagFOLDERNOTIFYEX __RPC_FAR *LPFOLDERNOTIFYEX;

typedef struct tagMESSAGEIDLIST
    {
    DWORD cbSize;
    DWORD cMsgs;
    /* [size_is] */ LPMESSAGEID prgdwMsgId;
    }	MESSAGEIDLIST;

typedef struct tagMESSAGEIDLIST __RPC_FAR *LPMESSAGEIDLIST;

typedef 
enum tagSPECIALFOLDER
    {	FOLDER_NOTSPECIAL	= -1,
	FOLDER_INBOX	= FOLDER_NOTSPECIAL + 1,
	FOLDER_OUTBOX	= FOLDER_INBOX + 1,
	FOLDER_SENT	= FOLDER_OUTBOX + 1,
	FOLDER_DELETED	= FOLDER_SENT + 1,
	FOLDER_DRAFT	= FOLDER_DELETED + 1,
	FOLDER_MAX	= FOLDER_DRAFT + 1
    }	SPECIALFOLDER;

typedef /* [transmit_as] */ DWORD FOLDERPROPSSIZE;

typedef /* [transmit_as] */ SPECIALFOLDER SPECIALFOLDER_XMIT;

typedef struct tagFOLDERPROPS
    {
    FOLDERPROPSSIZE cbSize;
    STOREFOLDERID dwFolderId;
    INT cSubFolders;
    SPECIALFOLDER_XMIT sfType;
    DWORD cUnread;
    DWORD cMessage;
    CHAR szName[ 256 ];
    }	FOLDERPROPS;

typedef struct tagFOLDERPROPS __RPC_FAR *LPFOLDERPROPS;

#define NAMESPACE_INITIALIZE_CURRENTIDENTITY 0x00000001
// CLocalStore::CopyMoveMessages flags - dwFlags == 0 is copy
#define CMF_MOVE                     0x0001                  // msgs deleted from src fldr after copy
#define CMF_DELETE                   0x0002                  // same as CMF_MOVE but uses delete string for status

EXTERN_C const IID IID_IStoreNamespace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E70C92AA-4BFD-11d1-8A95-00C04FB951F3")
    IStoreNamespace : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [unique][in] */ HWND hwndOwner,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDirectory( 
            /* [size_is][out][in] */ LPSTR pszPath,
            /* [in] */ DWORD cchMaxPath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenSpecialFolder( 
            /* [in] */ SPECIALFOLDER_XMIT sfType,
            /* [in] */ DWORD dwReserved,
            /* [out] */ IStoreFolder __RPC_FAR *__RPC_FAR *ppFolder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenFolder( 
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved,
            /* [out] */ IStoreFolder __RPC_FAR *__RPC_FAR *ppFolder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateFolder( 
            /* [in] */ STOREFOLDERID dwParentId,
            /* [in] */ LPCSTR pszName,
            /* [in] */ DWORD dwReserved,
            /* [out] */ LPSTOREFOLDERID pdwFolderId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RenameFolder( 
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPCSTR pszNewName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveFolder( 
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ STOREFOLDERID dwParentId,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteFolder( 
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetFolderProps( 
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved,
            /* [out][in] */ LPFOLDERPROPS pProps) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CopyMoveMessages( 
            /* [in] */ IStoreFolder __RPC_FAR *pSource,
            /* [in] */ IStoreFolder __RPC_FAR *pDest,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwFlagsRemove,
            /* [in] */ IProgressNotify __RPC_FAR *pProgress) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE RegisterNotification( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ HWND hwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterNotification( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ HWND hwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CompactAll( 
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFirstSubFolder( 
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [out][in] */ LPFOLDERPROPS pProps,
            /* [out] */ LPHENUMSTORE phEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNextSubFolder( 
            /* [in] */ HENUMSTORE hEnum,
            /* [out][in] */ LPFOLDERPROPS pProps) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSubFolderClose( 
            /* [in] */ HENUMSTORE hEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IStoreNamespaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IStoreNamespace __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IStoreNamespace __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IStoreNamespace __RPC_FAR * This,
            /* [unique][in] */ HWND hwndOwner,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDirectory )( 
            IStoreNamespace __RPC_FAR * This,
            /* [size_is][out][in] */ LPSTR pszPath,
            /* [in] */ DWORD cchMaxPath);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenSpecialFolder )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ SPECIALFOLDER_XMIT sfType,
            /* [in] */ DWORD dwReserved,
            /* [out] */ IStoreFolder __RPC_FAR *__RPC_FAR *ppFolder);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenFolder )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved,
            /* [out] */ IStoreFolder __RPC_FAR *__RPC_FAR *ppFolder);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateFolder )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwParentId,
            /* [in] */ LPCSTR pszName,
            /* [in] */ DWORD dwReserved,
            /* [out] */ LPSTOREFOLDERID pdwFolderId);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RenameFolder )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPCSTR pszNewName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveFolder )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ STOREFOLDERID dwParentId,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeleteFolder )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolderProps )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved,
            /* [out][in] */ LPFOLDERPROPS pProps);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CopyMoveMessages )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ IStoreFolder __RPC_FAR *pSource,
            /* [in] */ IStoreFolder __RPC_FAR *pDest,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwFlagsRemove,
            /* [in] */ IProgressNotify __RPC_FAR *pProgress);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterNotification )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UnregisterNotification )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CompactAll )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFirstSubFolder )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [out][in] */ LPFOLDERPROPS pProps,
            /* [out] */ LPHENUMSTORE phEnum);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNextSubFolder )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ HENUMSTORE hEnum,
            /* [out][in] */ LPFOLDERPROPS pProps);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSubFolderClose )( 
            IStoreNamespace __RPC_FAR * This,
            /* [in] */ HENUMSTORE hEnum);
        
        END_INTERFACE
    } IStoreNamespaceVtbl;

    interface IStoreNamespace
    {
        CONST_VTBL struct IStoreNamespaceVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IStoreNamespace_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IStoreNamespace_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IStoreNamespace_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IStoreNamespace_Initialize(This,hwndOwner,dwReserved)	\
    (This)->lpVtbl -> Initialize(This,hwndOwner,dwReserved)

#define IStoreNamespace_GetDirectory(This,pszPath,cchMaxPath)	\
    (This)->lpVtbl -> GetDirectory(This,pszPath,cchMaxPath)

#define IStoreNamespace_OpenSpecialFolder(This,sfType,dwReserved,ppFolder)	\
    (This)->lpVtbl -> OpenSpecialFolder(This,sfType,dwReserved,ppFolder)

#define IStoreNamespace_OpenFolder(This,dwFolderId,dwReserved,ppFolder)	\
    (This)->lpVtbl -> OpenFolder(This,dwFolderId,dwReserved,ppFolder)

#define IStoreNamespace_CreateFolder(This,dwParentId,pszName,dwReserved,pdwFolderId)	\
    (This)->lpVtbl -> CreateFolder(This,dwParentId,pszName,dwReserved,pdwFolderId)

#define IStoreNamespace_RenameFolder(This,dwFolderId,dwReserved,pszNewName)	\
    (This)->lpVtbl -> RenameFolder(This,dwFolderId,dwReserved,pszNewName)

#define IStoreNamespace_MoveFolder(This,dwFolderId,dwParentId,dwReserved)	\
    (This)->lpVtbl -> MoveFolder(This,dwFolderId,dwParentId,dwReserved)

#define IStoreNamespace_DeleteFolder(This,dwFolderId,dwReserved)	\
    (This)->lpVtbl -> DeleteFolder(This,dwFolderId,dwReserved)

#define IStoreNamespace_GetFolderProps(This,dwFolderId,dwReserved,pProps)	\
    (This)->lpVtbl -> GetFolderProps(This,dwFolderId,dwReserved,pProps)

#define IStoreNamespace_CopyMoveMessages(This,pSource,pDest,pMsgIdList,dwFlags,dwFlagsRemove,pProgress)	\
    (This)->lpVtbl -> CopyMoveMessages(This,pSource,pDest,pMsgIdList,dwFlags,dwFlagsRemove,pProgress)

#define IStoreNamespace_RegisterNotification(This,dwReserved,hwnd)	\
    (This)->lpVtbl -> RegisterNotification(This,dwReserved,hwnd)

#define IStoreNamespace_UnregisterNotification(This,dwReserved,hwnd)	\
    (This)->lpVtbl -> UnregisterNotification(This,dwReserved,hwnd)

#define IStoreNamespace_CompactAll(This,dwReserved)	\
    (This)->lpVtbl -> CompactAll(This,dwReserved)

#define IStoreNamespace_GetFirstSubFolder(This,dwFolderId,pProps,phEnum)	\
    (This)->lpVtbl -> GetFirstSubFolder(This,dwFolderId,pProps,phEnum)

#define IStoreNamespace_GetNextSubFolder(This,hEnum,pProps)	\
    (This)->lpVtbl -> GetNextSubFolder(This,hEnum,pProps)

#define IStoreNamespace_GetSubFolderClose(This,hEnum)	\
    (This)->lpVtbl -> GetSubFolderClose(This,hEnum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IStoreNamespace_Initialize_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [unique][in] */ HWND hwndOwner,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IStoreNamespace_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_GetDirectory_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [size_is][out][in] */ LPSTR pszPath,
    /* [in] */ DWORD cchMaxPath);


void __RPC_STUB IStoreNamespace_GetDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_OpenSpecialFolder_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ SPECIALFOLDER_XMIT sfType,
    /* [in] */ DWORD dwReserved,
    /* [out] */ IStoreFolder __RPC_FAR *__RPC_FAR *ppFolder);


void __RPC_STUB IStoreNamespace_OpenSpecialFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_OpenFolder_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ STOREFOLDERID dwFolderId,
    /* [in] */ DWORD dwReserved,
    /* [out] */ IStoreFolder __RPC_FAR *__RPC_FAR *ppFolder);


void __RPC_STUB IStoreNamespace_OpenFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_CreateFolder_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ STOREFOLDERID dwParentId,
    /* [in] */ LPCSTR pszName,
    /* [in] */ DWORD dwReserved,
    /* [out] */ LPSTOREFOLDERID pdwFolderId);


void __RPC_STUB IStoreNamespace_CreateFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_RenameFolder_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ STOREFOLDERID dwFolderId,
    /* [in] */ DWORD dwReserved,
    /* [in] */ LPCSTR pszNewName);


void __RPC_STUB IStoreNamespace_RenameFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_MoveFolder_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ STOREFOLDERID dwFolderId,
    /* [in] */ STOREFOLDERID dwParentId,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IStoreNamespace_MoveFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_DeleteFolder_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ STOREFOLDERID dwFolderId,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IStoreNamespace_DeleteFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreNamespace_GetFolderPropsRemote_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ STOREFOLDERID dwFolderId,
    /* [in] */ DWORD dwReserved,
    /* [out][in] */ LPFOLDERPROPS pProps);


void __RPC_STUB IStoreNamespace_GetFolderPropsRemote_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_CopyMoveMessages_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ IStoreFolder __RPC_FAR *pSource,
    /* [in] */ IStoreFolder __RPC_FAR *pDest,
    /* [in] */ LPMESSAGEIDLIST pMsgIdList,
    /* [in] */ DWORD dwFlags,
    /* [in] */ DWORD dwFlagsRemove,
    /* [in] */ IProgressNotify __RPC_FAR *pProgress);


void __RPC_STUB IStoreNamespace_CopyMoveMessages_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreNamespace_RegisterNotificationRemote_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [in] */ IUnknown __RPC_FAR *pUnkObj);


void __RPC_STUB IStoreNamespace_RegisterNotificationRemote_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_UnregisterNotification_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [in] */ HWND hwnd);


void __RPC_STUB IStoreNamespace_UnregisterNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_CompactAll_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IStoreNamespace_CompactAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_GetFirstSubFolder_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ STOREFOLDERID dwFolderId,
    /* [out][in] */ LPFOLDERPROPS pProps,
    /* [out] */ LPHENUMSTORE phEnum);


void __RPC_STUB IStoreNamespace_GetFirstSubFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_GetNextSubFolder_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ HENUMSTORE hEnum,
    /* [out][in] */ LPFOLDERPROPS pProps);


void __RPC_STUB IStoreNamespace_GetNextSubFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace_GetSubFolderClose_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ HENUMSTORE hEnum);


void __RPC_STUB IStoreNamespace_GetSubFolderClose_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IStoreNamespace_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msoeapi_0300 */
/* [local] */ 

#endif // __LPSTORENAMESPACE_DEFINED
#ifndef __LPSTOREFOLDER_DEFINED
#define __LPSTOREFOLDER_DEFINED


extern RPC_IF_HANDLE __MIDL_itf_msoeapi_0300_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msoeapi_0300_v0_0_s_ifspec;

#ifndef __IStoreFolder_INTERFACE_DEFINED__
#define __IStoreFolder_INTERFACE_DEFINED__

/* interface IStoreFolder */
/* [unique][uuid][object] */ 

typedef IStoreFolder __RPC_FAR *LPSTOREFOLDER;

#define MSG_DELETED                  0x0001  // The message has been deleted, compaction will remove it
#define MSG_UNREAD                   0x0002  // The message is marked as un-read
#define MSG_SUBMITTED                0x0004  // For messages waiting to be sent: OUTBOX ONLY
#define MSG_UNSENT                   0x0008  // For msgs-in-progress saved to a folder
#define MSG_RECEIVED                 0x0010  // For messages that came from a server
#define MSG_NEWSMSG                  0x0020  // For news messages
#define MSG_NOSECUI                  0x0040  // For messages where the user wants to die
#define MSG_VOICEMAIL                0x0080  // The message has the X-Voicemail header set...
#define MSG_REPLIED                  0x0100  // The message has been replied to
#define MSG_FORWARDED                0x0200  // The message has been forwarded to
#define MSG_RCPTSENT                 0x0400  // S/MIME Receipt has been sent
#define MSG_FLAGGED                  0x0800  // The message is currently flaged
#define MSG_LAST                     0x0200  // ** Keep this updated!! **
#define MSG_EXTERNAL_FLAGS           0x00fe
#define MSG_FLAGS                    0x000f
typedef /* [transmit_as] */ DWORD MESSAGEPROPSSIZE;

typedef struct tagMESSAGEPROPS
    {
    MESSAGEPROPSSIZE cbSize;
    DWORD dwReserved;
    MESSAGEID dwMessageId;
    DWORD dwLanguage;
    DWORD dwState;
    DWORD cbMessage;
    IMSGPRIORITY priority;
    FILETIME ftReceived;
    FILETIME ftSent;
    LPSTR pszSubject;
    LPSTR pszDisplayTo;
    LPSTR pszDisplayFrom;
    LPSTR pszNormalSubject;
    DWORD dwFlags;
    IStream __RPC_FAR *pStmOffsetTable;
    }	MESSAGEPROPS;

typedef struct tagMESSAGEPROPS __RPC_FAR *LPMESSAGEPROPS;

struct HBATCHLOCK__
    {
    DWORD unused;
    };
typedef /* [transmit_as] */ struct HBATCHLOCK__ *HBATCHLOCK;

typedef HBATCHLOCK __RPC_FAR *LPHBATCHLOCK;

#define MSGPROPS_FAST                0x00000001              // See MESSAGEPROPS structure, improved performance
#define COMMITSTREAM_REVERT          0x00000001              // Don't add this stream/message to the folder

EXTERN_C const IID IID_IStoreFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E70C92AC-4BFD-11d1-8A95-00C04FB951F3")
    IStoreFolder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFolderProps( 
            /* [in] */ DWORD dwReserved,
            /* [out][in] */ LPFOLDERPROPS pProps) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetMessageProps( 
            /* [in] */ MESSAGEID dwMessageId,
            /* [in] */ DWORD dwFlags,
            /* [out][in] */ LPMESSAGEPROPS pProps) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FreeMessageProps( 
            /* [out][in] */ LPMESSAGEPROPS pProps) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteMessages( 
            /* [in] */ LPMESSAGEIDLIST pMsgIdList,
            /* [in] */ DWORD dwReserved,
            /* [in] */ IProgressNotify __RPC_FAR *pProgress) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLanguage( 
            /* [in] */ DWORD dwLanguage,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MarkMessagesAsRead( 
            /* [in] */ BOOL fRead,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE SetFlags( 
            /* [in] */ LPMESSAGEIDLIST pMsgIdList,
            /* [in] */ DWORD dwState,
            /* [in] */ DWORD dwStatemask,
            /* [unique][out][in] */ LPDWORD prgdwNewFlags) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE OpenMessage( 
            /* [in] */ MESSAGEID dwMessageId,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ LPVOID __RPC_FAR *ppvObject) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE SaveMessage( 
            /* [in] */ REFIID riid,
            /* [iid_is][in] */ LPVOID pvObject,
            /* [in] */ DWORD dwMsgFlags,
            /* [out] */ LPMESSAGEID pdwMessageId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BatchLock( 
            /* [in] */ DWORD dwReserved,
            /* [out] */ LPHBATCHLOCK phBatchLock) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BatchFlush( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ HBATCHLOCK hBatchLock) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BatchUnlock( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ HBATCHLOCK hBatchLock) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateStream( 
            /* [in] */ HBATCHLOCK hBatchLock,
            /* [in] */ DWORD dwReserved,
            /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppStream,
            /* [out] */ LPMESSAGEID pdwMessageId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CommitStream( 
            /* [in] */ HBATCHLOCK hBatchLock,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwMsgFlags,
            /* [in] */ IStream __RPC_FAR *pStream,
            /* [in] */ MESSAGEID dwMessageId,
            /* [in] */ IMimeMessage __RPC_FAR *pMessage) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE RegisterNotification( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ HWND hwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterNotification( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ HWND hwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Compact( 
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetFirstMessage( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwMsgFlags,
            /* [in] */ MESSAGEID dwMsgIdFirst,
            /* [out][in] */ LPMESSAGEPROPS pProps,
            /* [out] */ LPHENUMSTORE phEnum) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetNextMessage( 
            /* [in] */ HENUMSTORE hEnum,
            /* [in] */ DWORD dwFlags,
            /* [out][in] */ LPMESSAGEPROPS pProps) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMessageClose( 
            /* [in] */ HENUMSTORE hEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IStoreFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IStoreFolder __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IStoreFolder __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolderProps )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [out][in] */ LPFOLDERPROPS pProps);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMessageProps )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ MESSAGEID dwMessageId,
            /* [in] */ DWORD dwFlags,
            /* [out][in] */ LPMESSAGEPROPS pProps);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FreeMessageProps )( 
            IStoreFolder __RPC_FAR * This,
            /* [out][in] */ LPMESSAGEPROPS pProps);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeleteMessages )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList,
            /* [in] */ DWORD dwReserved,
            /* [in] */ IProgressNotify __RPC_FAR *pProgress);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLanguage )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ DWORD dwLanguage,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MarkMessagesAsRead )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ BOOL fRead,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFlags )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList,
            /* [in] */ DWORD dwState,
            /* [in] */ DWORD dwStatemask,
            /* [unique][out][in] */ LPDWORD prgdwNewFlags);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenMessage )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ MESSAGEID dwMessageId,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ LPVOID __RPC_FAR *ppvObject);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SaveMessage )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][in] */ LPVOID pvObject,
            /* [in] */ DWORD dwMsgFlags,
            /* [out] */ LPMESSAGEID pdwMessageId);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BatchLock )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [out] */ LPHBATCHLOCK phBatchLock);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BatchFlush )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ HBATCHLOCK hBatchLock);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BatchUnlock )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ HBATCHLOCK hBatchLock);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateStream )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ HBATCHLOCK hBatchLock,
            /* [in] */ DWORD dwReserved,
            /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppStream,
            /* [out] */ LPMESSAGEID pdwMessageId);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CommitStream )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ HBATCHLOCK hBatchLock,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwMsgFlags,
            /* [in] */ IStream __RPC_FAR *pStream,
            /* [in] */ MESSAGEID dwMessageId,
            /* [in] */ IMimeMessage __RPC_FAR *pMessage);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterNotification )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UnregisterNotification )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Compact )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ DWORD dwReserved);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFirstMessage )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwMsgFlags,
            /* [in] */ MESSAGEID dwMsgIdFirst,
            /* [out][in] */ LPMESSAGEPROPS pProps,
            /* [out] */ LPHENUMSTORE phEnum);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNextMessage )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ HENUMSTORE hEnum,
            /* [in] */ DWORD dwFlags,
            /* [out][in] */ LPMESSAGEPROPS pProps);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMessageClose )( 
            IStoreFolder __RPC_FAR * This,
            /* [in] */ HENUMSTORE hEnum);
        
        END_INTERFACE
    } IStoreFolderVtbl;

    interface IStoreFolder
    {
        CONST_VTBL struct IStoreFolderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IStoreFolder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IStoreFolder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IStoreFolder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IStoreFolder_GetFolderProps(This,dwReserved,pProps)	\
    (This)->lpVtbl -> GetFolderProps(This,dwReserved,pProps)

#define IStoreFolder_GetMessageProps(This,dwMessageId,dwFlags,pProps)	\
    (This)->lpVtbl -> GetMessageProps(This,dwMessageId,dwFlags,pProps)

#define IStoreFolder_FreeMessageProps(This,pProps)	\
    (This)->lpVtbl -> FreeMessageProps(This,pProps)

#define IStoreFolder_DeleteMessages(This,pMsgIdList,dwReserved,pProgress)	\
    (This)->lpVtbl -> DeleteMessages(This,pMsgIdList,dwReserved,pProgress)

#define IStoreFolder_SetLanguage(This,dwLanguage,dwReserved,pMsgIdList)	\
    (This)->lpVtbl -> SetLanguage(This,dwLanguage,dwReserved,pMsgIdList)

#define IStoreFolder_MarkMessagesAsRead(This,fRead,dwReserved,pMsgIdList)	\
    (This)->lpVtbl -> MarkMessagesAsRead(This,fRead,dwReserved,pMsgIdList)

#define IStoreFolder_SetFlags(This,pMsgIdList,dwState,dwStatemask,prgdwNewFlags)	\
    (This)->lpVtbl -> SetFlags(This,pMsgIdList,dwState,dwStatemask,prgdwNewFlags)

#define IStoreFolder_OpenMessage(This,dwMessageId,riid,ppvObject)	\
    (This)->lpVtbl -> OpenMessage(This,dwMessageId,riid,ppvObject)

#define IStoreFolder_SaveMessage(This,riid,pvObject,dwMsgFlags,pdwMessageId)	\
    (This)->lpVtbl -> SaveMessage(This,riid,pvObject,dwMsgFlags,pdwMessageId)

#define IStoreFolder_BatchLock(This,dwReserved,phBatchLock)	\
    (This)->lpVtbl -> BatchLock(This,dwReserved,phBatchLock)

#define IStoreFolder_BatchFlush(This,dwReserved,hBatchLock)	\
    (This)->lpVtbl -> BatchFlush(This,dwReserved,hBatchLock)

#define IStoreFolder_BatchUnlock(This,dwReserved,hBatchLock)	\
    (This)->lpVtbl -> BatchUnlock(This,dwReserved,hBatchLock)

#define IStoreFolder_CreateStream(This,hBatchLock,dwReserved,ppStream,pdwMessageId)	\
    (This)->lpVtbl -> CreateStream(This,hBatchLock,dwReserved,ppStream,pdwMessageId)

#define IStoreFolder_CommitStream(This,hBatchLock,dwFlags,dwMsgFlags,pStream,dwMessageId,pMessage)	\
    (This)->lpVtbl -> CommitStream(This,hBatchLock,dwFlags,dwMsgFlags,pStream,dwMessageId,pMessage)

#define IStoreFolder_RegisterNotification(This,dwReserved,hwnd)	\
    (This)->lpVtbl -> RegisterNotification(This,dwReserved,hwnd)

#define IStoreFolder_UnregisterNotification(This,dwReserved,hwnd)	\
    (This)->lpVtbl -> UnregisterNotification(This,dwReserved,hwnd)

#define IStoreFolder_Compact(This,dwReserved)	\
    (This)->lpVtbl -> Compact(This,dwReserved)

#define IStoreFolder_GetFirstMessage(This,dwFlags,dwMsgFlags,dwMsgIdFirst,pProps,phEnum)	\
    (This)->lpVtbl -> GetFirstMessage(This,dwFlags,dwMsgFlags,dwMsgIdFirst,pProps,phEnum)

#define IStoreFolder_GetNextMessage(This,hEnum,dwFlags,pProps)	\
    (This)->lpVtbl -> GetNextMessage(This,hEnum,dwFlags,pProps)

#define IStoreFolder_GetMessageClose(This,hEnum)	\
    (This)->lpVtbl -> GetMessageClose(This,hEnum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IStoreFolder_GetFolderProps_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [out][in] */ LPFOLDERPROPS pProps);


void __RPC_STUB IStoreFolder_GetFolderProps_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_GetMessagePropsRemote_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ MESSAGEID dwMessageId,
    /* [in] */ DWORD dwFlags,
    /* [out][in] */ LPMESSAGEPROPS pProps);


void __RPC_STUB IStoreFolder_GetMessagePropsRemote_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreFolder_FreeMessageProps_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [out][in] */ LPMESSAGEPROPS pProps);


void __RPC_STUB IStoreFolder_FreeMessageProps_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreFolder_DeleteMessages_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ LPMESSAGEIDLIST pMsgIdList,
    /* [in] */ DWORD dwReserved,
    /* [in] */ IProgressNotify __RPC_FAR *pProgress);


void __RPC_STUB IStoreFolder_DeleteMessages_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreFolder_SetLanguage_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwLanguage,
    /* [in] */ DWORD dwReserved,
    /* [in] */ LPMESSAGEIDLIST pMsgIdList);


void __RPC_STUB IStoreFolder_SetLanguage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreFolder_MarkMessagesAsRead_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ BOOL fRead,
    /* [in] */ DWORD dwReserved,
    /* [in] */ LPMESSAGEIDLIST pMsgIdList);


void __RPC_STUB IStoreFolder_MarkMessagesAsRead_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_SetFlagsRemote_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ LPMESSAGEIDLIST pMsgIdList,
    /* [in] */ DWORD dwState,
    /* [in] */ DWORD dwStatemask,
    /* [in] */ DWORD cMsgs,
    /* [size_is][unique][out][in] */ LPDWORD prgdwNewFlags);


void __RPC_STUB IStoreFolder_SetFlagsRemote_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_OpenMessageRemote_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ MESSAGEID dwMessageId,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ LPVOID __RPC_FAR *ppvObject);


void __RPC_STUB IStoreFolder_OpenMessageRemote_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_SaveMessageRemote_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ REFIID riid,
    /* [iid_is][in] */ LPVOID pvObject,
    /* [in] */ DWORD dwMsgFlags,
    /* [out] */ LPMESSAGEID pdwMessageId);


void __RPC_STUB IStoreFolder_SaveMessageRemote_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreFolder_BatchLock_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [out] */ LPHBATCHLOCK phBatchLock);


void __RPC_STUB IStoreFolder_BatchLock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreFolder_BatchFlush_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [in] */ HBATCHLOCK hBatchLock);


void __RPC_STUB IStoreFolder_BatchFlush_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreFolder_BatchUnlock_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [in] */ HBATCHLOCK hBatchLock);


void __RPC_STUB IStoreFolder_BatchUnlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreFolder_CreateStream_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ HBATCHLOCK hBatchLock,
    /* [in] */ DWORD dwReserved,
    /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppStream,
    /* [out] */ LPMESSAGEID pdwMessageId);


void __RPC_STUB IStoreFolder_CreateStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreFolder_CommitStream_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ HBATCHLOCK hBatchLock,
    /* [in] */ DWORD dwFlags,
    /* [in] */ DWORD dwMsgFlags,
    /* [in] */ IStream __RPC_FAR *pStream,
    /* [in] */ MESSAGEID dwMessageId,
    /* [in] */ IMimeMessage __RPC_FAR *pMessage);


void __RPC_STUB IStoreFolder_CommitStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_RegisterNotificationRemote_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [in] */ IUnknown __RPC_FAR *pUnkObj);


void __RPC_STUB IStoreFolder_RegisterNotificationRemote_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreFolder_UnregisterNotification_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [in] */ HWND hwnd);


void __RPC_STUB IStoreFolder_UnregisterNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreFolder_Compact_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IStoreFolder_Compact_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_GetFirstMessageRemote_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ DWORD dwMsgFlags,
    /* [in] */ MESSAGEID dwMsgIdFirst,
    /* [out][in] */ LPMESSAGEPROPS pProps,
    /* [out] */ LPHENUMSTORE phEnum);


void __RPC_STUB IStoreFolder_GetFirstMessageRemote_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_GetNextMessageRemote_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ HENUMSTORE hEnum,
    /* [in] */ DWORD dwFlags,
    /* [out][in] */ LPMESSAGEPROPS pProps);


void __RPC_STUB IStoreFolder_GetNextMessageRemote_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreFolder_GetMessageClose_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ HENUMSTORE hEnum);


void __RPC_STUB IStoreFolder_GetMessageClose_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IStoreFolder_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msoeapi_0301 */
/* [local] */ 

#endif // __LPSTOREFOLDER_DEFINED
//+-------------------------------------------------------------------------
// Outlook Express Exported C API Functions
//--------------------------------------------------------------------------
#ifdef __cplusplus
extern "C" {
#endif

//+-------------------------------------------------------------------------
// API Name Decoration
//--------------------------------------------------------------------------
#if !defined(_MSOEAPI_)
#define MSOEAPI DECLSPEC_IMPORT HRESULT WINAPI
#define MSOEAPI_(_type_) DECLSPEC_IMPORT _type_ WINAPI
#else
#define MSOEAPI HRESULT WINAPI
#define MSOEAPI_(_type_) _type_ WINAPI
#endif

//+-------------------------------------------------------------------------
// Prototypes
//--------------------------------------------------------------------------
MSOEAPI CoStartOutlookExpress(
             /* IN */        DWORD               dwFlags,
             /* IN */        LPCSTR              pszCmdLine,
             /* IN */        INT                 nCmdShow);

MSOEAPI CoCreateOutlookExpress(
             /* IN */        IUnknown            *pUnkOuter,
             /* OUT */       IUnknown            **ppUnknown);

#ifdef __cplusplus
}
#endif
#if (_WIN32_OE >= 0x0700)


extern RPC_IF_HANDLE __MIDL_itf_msoeapi_0301_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msoeapi_0301_v0_0_s_ifspec;

#ifndef __IStoreNamespace2_INTERFACE_DEFINED__
#define __IStoreNamespace2_INTERFACE_DEFINED__

/* interface IStoreNamespace2 */
/* [unique][uuid][object] */ 

typedef IStoreNamespace2 __RPC_FAR *LPSTORENAMESPACE2;


EXTERN_C const IID IID_IStoreNamespace2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DECAED7F-2DA8-4074-B62A-DB6D8C82C385")
    IStoreNamespace2 : public IStoreNamespace
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMessageID( 
            /* [in] */ LPCWSTR pszPath,
            /* [out] */ LPSTOREFOLDERID pdwFolderId,
            /* [out] */ LPMESSAGEID pdwMessageId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParentId( 
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [out] */ LPSTOREFOLDERID pdwParentId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDirectoryW( 
            /* [size_is][out][in] */ LPWSTR pwszPath,
            /* [in] */ DWORD cchMaxPath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateFolderW( 
            /* [in] */ STOREFOLDERID dwParentId,
            /* [in] */ LPCWSTR pwszName,
            /* [in] */ DWORD dwReserved,
            /* [out] */ LPSTOREFOLDERID pdwFolderId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RenameFolderW( 
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPCWSTR pwszNewName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IStoreNamespace2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IStoreNamespace2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IStoreNamespace2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [unique][in] */ HWND hwndOwner,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDirectory )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [size_is][out][in] */ LPSTR pszPath,
            /* [in] */ DWORD cchMaxPath);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenSpecialFolder )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ SPECIALFOLDER_XMIT sfType,
            /* [in] */ DWORD dwReserved,
            /* [out] */ IStoreFolder __RPC_FAR *__RPC_FAR *ppFolder);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenFolder )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved,
            /* [out] */ IStoreFolder __RPC_FAR *__RPC_FAR *ppFolder);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateFolder )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwParentId,
            /* [in] */ LPCSTR pszName,
            /* [in] */ DWORD dwReserved,
            /* [out] */ LPSTOREFOLDERID pdwFolderId);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RenameFolder )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPCSTR pszNewName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveFolder )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ STOREFOLDERID dwParentId,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeleteFolder )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolderProps )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved,
            /* [out][in] */ LPFOLDERPROPS pProps);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CopyMoveMessages )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ IStoreFolder __RPC_FAR *pSource,
            /* [in] */ IStoreFolder __RPC_FAR *pDest,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwFlagsRemove,
            /* [in] */ IProgressNotify __RPC_FAR *pProgress);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterNotification )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UnregisterNotification )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CompactAll )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFirstSubFolder )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [out][in] */ LPFOLDERPROPS pProps,
            /* [out] */ LPHENUMSTORE phEnum);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNextSubFolder )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ HENUMSTORE hEnum,
            /* [out][in] */ LPFOLDERPROPS pProps);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSubFolderClose )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ HENUMSTORE hEnum);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMessageID )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ LPCWSTR pszPath,
            /* [out] */ LPSTOREFOLDERID pdwFolderId,
            /* [out] */ LPMESSAGEID pdwMessageId);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetParentId )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [out] */ LPSTOREFOLDERID pdwParentId);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDirectoryW )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [size_is][out][in] */ LPWSTR pwszPath,
            /* [in] */ DWORD cchMaxPath);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateFolderW )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwParentId,
            /* [in] */ LPCWSTR pwszName,
            /* [in] */ DWORD dwReserved,
            /* [out] */ LPSTOREFOLDERID pdwFolderId);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RenameFolderW )( 
            IStoreNamespace2 __RPC_FAR * This,
            /* [in] */ STOREFOLDERID dwFolderId,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPCWSTR pwszNewName);
        
        END_INTERFACE
    } IStoreNamespace2Vtbl;

    interface IStoreNamespace2
    {
        CONST_VTBL struct IStoreNamespace2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IStoreNamespace2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IStoreNamespace2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IStoreNamespace2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IStoreNamespace2_Initialize(This,hwndOwner,dwReserved)	\
    (This)->lpVtbl -> Initialize(This,hwndOwner,dwReserved)

#define IStoreNamespace2_GetDirectory(This,pszPath,cchMaxPath)	\
    (This)->lpVtbl -> GetDirectory(This,pszPath,cchMaxPath)

#define IStoreNamespace2_OpenSpecialFolder(This,sfType,dwReserved,ppFolder)	\
    (This)->lpVtbl -> OpenSpecialFolder(This,sfType,dwReserved,ppFolder)

#define IStoreNamespace2_OpenFolder(This,dwFolderId,dwReserved,ppFolder)	\
    (This)->lpVtbl -> OpenFolder(This,dwFolderId,dwReserved,ppFolder)

#define IStoreNamespace2_CreateFolder(This,dwParentId,pszName,dwReserved,pdwFolderId)	\
    (This)->lpVtbl -> CreateFolder(This,dwParentId,pszName,dwReserved,pdwFolderId)

#define IStoreNamespace2_RenameFolder(This,dwFolderId,dwReserved,pszNewName)	\
    (This)->lpVtbl -> RenameFolder(This,dwFolderId,dwReserved,pszNewName)

#define IStoreNamespace2_MoveFolder(This,dwFolderId,dwParentId,dwReserved)	\
    (This)->lpVtbl -> MoveFolder(This,dwFolderId,dwParentId,dwReserved)

#define IStoreNamespace2_DeleteFolder(This,dwFolderId,dwReserved)	\
    (This)->lpVtbl -> DeleteFolder(This,dwFolderId,dwReserved)

#define IStoreNamespace2_GetFolderProps(This,dwFolderId,dwReserved,pProps)	\
    (This)->lpVtbl -> GetFolderProps(This,dwFolderId,dwReserved,pProps)

#define IStoreNamespace2_CopyMoveMessages(This,pSource,pDest,pMsgIdList,dwFlags,dwFlagsRemove,pProgress)	\
    (This)->lpVtbl -> CopyMoveMessages(This,pSource,pDest,pMsgIdList,dwFlags,dwFlagsRemove,pProgress)

#define IStoreNamespace2_RegisterNotification(This,dwReserved,hwnd)	\
    (This)->lpVtbl -> RegisterNotification(This,dwReserved,hwnd)

#define IStoreNamespace2_UnregisterNotification(This,dwReserved,hwnd)	\
    (This)->lpVtbl -> UnregisterNotification(This,dwReserved,hwnd)

#define IStoreNamespace2_CompactAll(This,dwReserved)	\
    (This)->lpVtbl -> CompactAll(This,dwReserved)

#define IStoreNamespace2_GetFirstSubFolder(This,dwFolderId,pProps,phEnum)	\
    (This)->lpVtbl -> GetFirstSubFolder(This,dwFolderId,pProps,phEnum)

#define IStoreNamespace2_GetNextSubFolder(This,hEnum,pProps)	\
    (This)->lpVtbl -> GetNextSubFolder(This,hEnum,pProps)

#define IStoreNamespace2_GetSubFolderClose(This,hEnum)	\
    (This)->lpVtbl -> GetSubFolderClose(This,hEnum)


#define IStoreNamespace2_GetMessageID(This,pszPath,pdwFolderId,pdwMessageId)	\
    (This)->lpVtbl -> GetMessageID(This,pszPath,pdwFolderId,pdwMessageId)

#define IStoreNamespace2_GetParentId(This,dwFolderId,pdwParentId)	\
    (This)->lpVtbl -> GetParentId(This,dwFolderId,pdwParentId)

#define IStoreNamespace2_GetDirectoryW(This,pwszPath,cchMaxPath)	\
    (This)->lpVtbl -> GetDirectoryW(This,pwszPath,cchMaxPath)

#define IStoreNamespace2_CreateFolderW(This,dwParentId,pwszName,dwReserved,pdwFolderId)	\
    (This)->lpVtbl -> CreateFolderW(This,dwParentId,pwszName,dwReserved,pdwFolderId)

#define IStoreNamespace2_RenameFolderW(This,dwFolderId,dwReserved,pwszNewName)	\
    (This)->lpVtbl -> RenameFolderW(This,dwFolderId,dwReserved,pwszNewName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IStoreNamespace2_GetMessageID_Proxy( 
    IStoreNamespace2 __RPC_FAR * This,
    /* [in] */ LPCWSTR pszPath,
    /* [out] */ LPSTOREFOLDERID pdwFolderId,
    /* [out] */ LPMESSAGEID pdwMessageId);


void __RPC_STUB IStoreNamespace2_GetMessageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace2_GetParentId_Proxy( 
    IStoreNamespace2 __RPC_FAR * This,
    /* [in] */ STOREFOLDERID dwFolderId,
    /* [out] */ LPSTOREFOLDERID pdwParentId);


void __RPC_STUB IStoreNamespace2_GetParentId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace2_GetDirectoryW_Proxy( 
    IStoreNamespace2 __RPC_FAR * This,
    /* [size_is][out][in] */ LPWSTR pwszPath,
    /* [in] */ DWORD cchMaxPath);


void __RPC_STUB IStoreNamespace2_GetDirectoryW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace2_CreateFolderW_Proxy( 
    IStoreNamespace2 __RPC_FAR * This,
    /* [in] */ STOREFOLDERID dwParentId,
    /* [in] */ LPCWSTR pwszName,
    /* [in] */ DWORD dwReserved,
    /* [out] */ LPSTOREFOLDERID pdwFolderId);


void __RPC_STUB IStoreNamespace2_CreateFolderW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IStoreNamespace2_RenameFolderW_Proxy( 
    IStoreNamespace2 __RPC_FAR * This,
    /* [in] */ STOREFOLDERID dwFolderId,
    /* [in] */ DWORD dwReserved,
    /* [in] */ LPCWSTR pwszNewName);


void __RPC_STUB IStoreNamespace2_RenameFolderW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IStoreNamespace2_INTERFACE_DEFINED__ */


#ifndef __IStoreFolder2_INTERFACE_DEFINED__
#define __IStoreFolder2_INTERFACE_DEFINED__

/* interface IStoreFolder2 */
/* [unique][uuid][object] */ 

typedef IStoreFolder2 __RPC_FAR *LPSTOREFOLDER2;


EXTERN_C const IID IID_IStoreFolder2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5642F741-46B7-4A22-B496-F064E4C5F302")
    IStoreFolder2 : public IStoreFolder
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMessagePath( 
            /* [in] */ MESSAGEID dwMessageId,
            /* [size_is][out][in] */ LPWSTR pszPath,
            /* [in] */ DWORD cchBufferSize) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IStoreFolder2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IStoreFolder2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IStoreFolder2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFolderProps )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [out][in] */ LPFOLDERPROPS pProps);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMessageProps )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ MESSAGEID dwMessageId,
            /* [in] */ DWORD dwFlags,
            /* [out][in] */ LPMESSAGEPROPS pProps);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FreeMessageProps )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [out][in] */ LPMESSAGEPROPS pProps);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeleteMessages )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList,
            /* [in] */ DWORD dwReserved,
            /* [in] */ IProgressNotify __RPC_FAR *pProgress);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLanguage )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ DWORD dwLanguage,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MarkMessagesAsRead )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ BOOL fRead,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFlags )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ LPMESSAGEIDLIST pMsgIdList,
            /* [in] */ DWORD dwState,
            /* [in] */ DWORD dwStatemask,
            /* [unique][out][in] */ LPDWORD prgdwNewFlags);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenMessage )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ MESSAGEID dwMessageId,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ LPVOID __RPC_FAR *ppvObject);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SaveMessage )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][in] */ LPVOID pvObject,
            /* [in] */ DWORD dwMsgFlags,
            /* [out] */ LPMESSAGEID pdwMessageId);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BatchLock )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [out] */ LPHBATCHLOCK phBatchLock);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BatchFlush )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ HBATCHLOCK hBatchLock);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BatchUnlock )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ HBATCHLOCK hBatchLock);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateStream )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ HBATCHLOCK hBatchLock,
            /* [in] */ DWORD dwReserved,
            /* [out] */ IStream __RPC_FAR *__RPC_FAR *ppStream,
            /* [out] */ LPMESSAGEID pdwMessageId);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CommitStream )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ HBATCHLOCK hBatchLock,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwMsgFlags,
            /* [in] */ IStream __RPC_FAR *pStream,
            /* [in] */ MESSAGEID dwMessageId,
            /* [in] */ IMimeMessage __RPC_FAR *pMessage);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterNotification )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UnregisterNotification )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Compact )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ DWORD dwReserved);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFirstMessage )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwMsgFlags,
            /* [in] */ MESSAGEID dwMsgIdFirst,
            /* [out][in] */ LPMESSAGEPROPS pProps,
            /* [out] */ LPHENUMSTORE phEnum);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNextMessage )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ HENUMSTORE hEnum,
            /* [in] */ DWORD dwFlags,
            /* [out][in] */ LPMESSAGEPROPS pProps);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMessageClose )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ HENUMSTORE hEnum);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMessagePath )( 
            IStoreFolder2 __RPC_FAR * This,
            /* [in] */ MESSAGEID dwMessageId,
            /* [size_is][out][in] */ LPWSTR pszPath,
            /* [in] */ DWORD cchBufferSize);
        
        END_INTERFACE
    } IStoreFolder2Vtbl;

    interface IStoreFolder2
    {
        CONST_VTBL struct IStoreFolder2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IStoreFolder2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IStoreFolder2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IStoreFolder2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IStoreFolder2_GetFolderProps(This,dwReserved,pProps)	\
    (This)->lpVtbl -> GetFolderProps(This,dwReserved,pProps)

#define IStoreFolder2_GetMessageProps(This,dwMessageId,dwFlags,pProps)	\
    (This)->lpVtbl -> GetMessageProps(This,dwMessageId,dwFlags,pProps)

#define IStoreFolder2_FreeMessageProps(This,pProps)	\
    (This)->lpVtbl -> FreeMessageProps(This,pProps)

#define IStoreFolder2_DeleteMessages(This,pMsgIdList,dwReserved,pProgress)	\
    (This)->lpVtbl -> DeleteMessages(This,pMsgIdList,dwReserved,pProgress)

#define IStoreFolder2_SetLanguage(This,dwLanguage,dwReserved,pMsgIdList)	\
    (This)->lpVtbl -> SetLanguage(This,dwLanguage,dwReserved,pMsgIdList)

#define IStoreFolder2_MarkMessagesAsRead(This,fRead,dwReserved,pMsgIdList)	\
    (This)->lpVtbl -> MarkMessagesAsRead(This,fRead,dwReserved,pMsgIdList)

#define IStoreFolder2_SetFlags(This,pMsgIdList,dwState,dwStatemask,prgdwNewFlags)	\
    (This)->lpVtbl -> SetFlags(This,pMsgIdList,dwState,dwStatemask,prgdwNewFlags)

#define IStoreFolder2_OpenMessage(This,dwMessageId,riid,ppvObject)	\
    (This)->lpVtbl -> OpenMessage(This,dwMessageId,riid,ppvObject)

#define IStoreFolder2_SaveMessage(This,riid,pvObject,dwMsgFlags,pdwMessageId)	\
    (This)->lpVtbl -> SaveMessage(This,riid,pvObject,dwMsgFlags,pdwMessageId)

#define IStoreFolder2_BatchLock(This,dwReserved,phBatchLock)	\
    (This)->lpVtbl -> BatchLock(This,dwReserved,phBatchLock)

#define IStoreFolder2_BatchFlush(This,dwReserved,hBatchLock)	\
    (This)->lpVtbl -> BatchFlush(This,dwReserved,hBatchLock)

#define IStoreFolder2_BatchUnlock(This,dwReserved,hBatchLock)	\
    (This)->lpVtbl -> BatchUnlock(This,dwReserved,hBatchLock)

#define IStoreFolder2_CreateStream(This,hBatchLock,dwReserved,ppStream,pdwMessageId)	\
    (This)->lpVtbl -> CreateStream(This,hBatchLock,dwReserved,ppStream,pdwMessageId)

#define IStoreFolder2_CommitStream(This,hBatchLock,dwFlags,dwMsgFlags,pStream,dwMessageId,pMessage)	\
    (This)->lpVtbl -> CommitStream(This,hBatchLock,dwFlags,dwMsgFlags,pStream,dwMessageId,pMessage)

#define IStoreFolder2_RegisterNotification(This,dwReserved,hwnd)	\
    (This)->lpVtbl -> RegisterNotification(This,dwReserved,hwnd)

#define IStoreFolder2_UnregisterNotification(This,dwReserved,hwnd)	\
    (This)->lpVtbl -> UnregisterNotification(This,dwReserved,hwnd)

#define IStoreFolder2_Compact(This,dwReserved)	\
    (This)->lpVtbl -> Compact(This,dwReserved)

#define IStoreFolder2_GetFirstMessage(This,dwFlags,dwMsgFlags,dwMsgIdFirst,pProps,phEnum)	\
    (This)->lpVtbl -> GetFirstMessage(This,dwFlags,dwMsgFlags,dwMsgIdFirst,pProps,phEnum)

#define IStoreFolder2_GetNextMessage(This,hEnum,dwFlags,pProps)	\
    (This)->lpVtbl -> GetNextMessage(This,hEnum,dwFlags,pProps)

#define IStoreFolder2_GetMessageClose(This,hEnum)	\
    (This)->lpVtbl -> GetMessageClose(This,hEnum)


#define IStoreFolder2_GetMessagePath(This,dwMessageId,pszPath,cchBufferSize)	\
    (This)->lpVtbl -> GetMessagePath(This,dwMessageId,pszPath,cchBufferSize)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IStoreFolder2_GetMessagePath_Proxy( 
    IStoreFolder2 __RPC_FAR * This,
    /* [in] */ MESSAGEID dwMessageId,
    /* [size_is][out][in] */ LPWSTR pszPath,
    /* [in] */ DWORD cchBufferSize);


void __RPC_STUB IStoreFolder2_GetMessagePath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IStoreFolder2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msoeapi_0303 */
/* [local] */ 

#endif // (_WIN32_OE >= 0x0700)
#endif // MSOEAPI_H


extern RPC_IF_HANDLE __MIDL_itf_msoeapi_0303_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msoeapi_0303_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */


void __RPC_USER HENUMSTORE_to_xmit( HENUMSTORE __RPC_FAR *, INT  __RPC_FAR * __RPC_FAR * );
void __RPC_USER HENUMSTORE_from_xmit( INT  __RPC_FAR *, HENUMSTORE __RPC_FAR * );
void __RPC_USER HENUMSTORE_free_inst( HENUMSTORE __RPC_FAR * );
void __RPC_USER HENUMSTORE_free_xmit( INT  __RPC_FAR * );

void __RPC_USER FOLDERPROPSSIZE_to_xmit( FOLDERPROPSSIZE __RPC_FAR *, DWORD  __RPC_FAR * __RPC_FAR * );
void __RPC_USER FOLDERPROPSSIZE_from_xmit( DWORD  __RPC_FAR *, FOLDERPROPSSIZE __RPC_FAR * );
void __RPC_USER FOLDERPROPSSIZE_free_inst( FOLDERPROPSSIZE __RPC_FAR * );
void __RPC_USER FOLDERPROPSSIZE_free_xmit( DWORD  __RPC_FAR * );

void __RPC_USER SPECIALFOLDER_XMIT_to_xmit( SPECIALFOLDER_XMIT __RPC_FAR *, DWORD  __RPC_FAR * __RPC_FAR * );
void __RPC_USER SPECIALFOLDER_XMIT_from_xmit( DWORD  __RPC_FAR *, SPECIALFOLDER_XMIT __RPC_FAR * );
void __RPC_USER SPECIALFOLDER_XMIT_free_inst( SPECIALFOLDER_XMIT __RPC_FAR * );
void __RPC_USER SPECIALFOLDER_XMIT_free_xmit( DWORD  __RPC_FAR * );

void __RPC_USER MESSAGEPROPSSIZE_to_xmit( MESSAGEPROPSSIZE __RPC_FAR *, DWORD  __RPC_FAR * __RPC_FAR * );
void __RPC_USER MESSAGEPROPSSIZE_from_xmit( DWORD  __RPC_FAR *, MESSAGEPROPSSIZE __RPC_FAR * );
void __RPC_USER MESSAGEPROPSSIZE_free_inst( MESSAGEPROPSSIZE __RPC_FAR * );
void __RPC_USER MESSAGEPROPSSIZE_free_xmit( DWORD  __RPC_FAR * );

void __RPC_USER HBATCHLOCK_to_xmit( HBATCHLOCK __RPC_FAR *, INT  __RPC_FAR * __RPC_FAR * );
void __RPC_USER HBATCHLOCK_from_xmit( INT  __RPC_FAR *, HBATCHLOCK __RPC_FAR * );
void __RPC_USER HBATCHLOCK_free_inst( HBATCHLOCK __RPC_FAR * );
void __RPC_USER HBATCHLOCK_free_xmit( INT  __RPC_FAR * );

unsigned long             __RPC_USER  HWND_UserSize(     unsigned long __RPC_FAR *, unsigned long            , HWND __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HWND_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HWND __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  HWND_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, HWND __RPC_FAR * ); 
void                      __RPC_USER  HWND_UserFree(     unsigned long __RPC_FAR *, HWND __RPC_FAR * ); 

/* [local] */ HRESULT STDMETHODCALLTYPE IStoreNamespace_GetFolderProps_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ STOREFOLDERID dwFolderId,
    /* [in] */ DWORD dwReserved,
    /* [out][in] */ LPFOLDERPROPS pProps);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreNamespace_GetFolderProps_Stub( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ STOREFOLDERID dwFolderId,
    /* [in] */ DWORD dwReserved,
    /* [out][in] */ LPFOLDERPROPS pProps);

/* [local] */ HRESULT STDMETHODCALLTYPE IStoreNamespace_RegisterNotification_Proxy( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [in] */ HWND hwnd);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreNamespace_RegisterNotification_Stub( 
    IStoreNamespace __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [in] */ IUnknown __RPC_FAR *pUnkObj);

/* [local] */ HRESULT STDMETHODCALLTYPE IStoreFolder_GetMessageProps_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ MESSAGEID dwMessageId,
    /* [in] */ DWORD dwFlags,
    /* [out][in] */ LPMESSAGEPROPS pProps);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_GetMessageProps_Stub( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ MESSAGEID dwMessageId,
    /* [in] */ DWORD dwFlags,
    /* [out][in] */ LPMESSAGEPROPS pProps);

/* [local] */ HRESULT STDMETHODCALLTYPE IStoreFolder_SetFlags_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ LPMESSAGEIDLIST pMsgIdList,
    /* [in] */ DWORD dwState,
    /* [in] */ DWORD dwStatemask,
    /* [unique][out][in] */ LPDWORD prgdwNewFlags);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_SetFlags_Stub( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ LPMESSAGEIDLIST pMsgIdList,
    /* [in] */ DWORD dwState,
    /* [in] */ DWORD dwStatemask,
    /* [in] */ DWORD cMsgs,
    /* [size_is][unique][out][in] */ LPDWORD prgdwNewFlags);

/* [local] */ HRESULT STDMETHODCALLTYPE IStoreFolder_OpenMessage_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ MESSAGEID dwMessageId,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ LPVOID __RPC_FAR *ppvObject);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_OpenMessage_Stub( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ MESSAGEID dwMessageId,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ LPVOID __RPC_FAR *ppvObject);

/* [local] */ HRESULT STDMETHODCALLTYPE IStoreFolder_SaveMessage_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ REFIID riid,
    /* [iid_is][in] */ LPVOID pvObject,
    /* [in] */ DWORD dwMsgFlags,
    /* [out] */ LPMESSAGEID pdwMessageId);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_SaveMessage_Stub( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ REFIID riid,
    /* [iid_is][in] */ LPVOID pvObject,
    /* [in] */ DWORD dwMsgFlags,
    /* [out] */ LPMESSAGEID pdwMessageId);

/* [local] */ HRESULT STDMETHODCALLTYPE IStoreFolder_RegisterNotification_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [in] */ HWND hwnd);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_RegisterNotification_Stub( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwReserved,
    /* [in] */ IUnknown __RPC_FAR *pUnkObj);

/* [local] */ HRESULT STDMETHODCALLTYPE IStoreFolder_GetFirstMessage_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ DWORD dwMsgFlags,
    /* [in] */ MESSAGEID dwMsgIdFirst,
    /* [out][in] */ LPMESSAGEPROPS pProps,
    /* [out] */ LPHENUMSTORE phEnum);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_GetFirstMessage_Stub( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ DWORD dwFlags,
    /* [in] */ DWORD dwMsgFlags,
    /* [in] */ MESSAGEID dwMsgIdFirst,
    /* [out][in] */ LPMESSAGEPROPS pProps,
    /* [out] */ LPHENUMSTORE phEnum);

/* [local] */ HRESULT STDMETHODCALLTYPE IStoreFolder_GetNextMessage_Proxy( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ HENUMSTORE hEnum,
    /* [in] */ DWORD dwFlags,
    /* [out][in] */ LPMESSAGEPROPS pProps);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IStoreFolder_GetNextMessage_Stub( 
    IStoreFolder __RPC_FAR * This,
    /* [in] */ HENUMSTORE hEnum,
    /* [in] */ DWORD dwFlags,
    /* [out][in] */ LPMESSAGEPROPS pProps);



/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\msnotify.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES.
//

#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 5.03.0286 */
/* at Mon Jan 22 12:15:01 2007
 */
/* Compiler settings for ..\msnotify.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32 (32b run), ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __msnotify_h__
#define __msnotify_h__

/* Forward Declarations */ 

#ifndef __IEnumPropertyMap_FWD_DEFINED__
#define __IEnumPropertyMap_FWD_DEFINED__
typedef interface IEnumPropertyMap IEnumPropertyMap;
#endif 	/* __IEnumPropertyMap_FWD_DEFINED__ */


#ifndef __IPropertyMap_FWD_DEFINED__
#define __IPropertyMap_FWD_DEFINED__
typedef interface IPropertyMap IPropertyMap;
#endif 	/* __IPropertyMap_FWD_DEFINED__ */


#ifndef __INotification_FWD_DEFINED__
#define __INotification_FWD_DEFINED__
typedef interface INotification INotification;
#endif 	/* __INotification_FWD_DEFINED__ */


#ifndef __INotificationMgr_FWD_DEFINED__
#define __INotificationMgr_FWD_DEFINED__
typedef interface INotificationMgr INotificationMgr;
#endif 	/* __INotificationMgr_FWD_DEFINED__ */


#ifndef __INotificationSink_FWD_DEFINED__
#define __INotificationSink_FWD_DEFINED__
typedef interface INotificationSink INotificationSink;
#endif 	/* __INotificationSink_FWD_DEFINED__ */


#ifndef __IScheduleGroup_FWD_DEFINED__
#define __IScheduleGroup_FWD_DEFINED__
typedef interface IScheduleGroup IScheduleGroup;
#endif 	/* __IScheduleGroup_FWD_DEFINED__ */


#ifndef __IEnumScheduleGroup_FWD_DEFINED__
#define __IEnumScheduleGroup_FWD_DEFINED__
typedef interface IEnumScheduleGroup IEnumScheduleGroup;
#endif 	/* __IEnumScheduleGroup_FWD_DEFINED__ */


#ifndef __IEnumNotification_FWD_DEFINED__
#define __IEnumNotification_FWD_DEFINED__
typedef interface IEnumNotification IEnumNotification;
#endif 	/* __IEnumNotification_FWD_DEFINED__ */


#ifndef __INotificationReport_FWD_DEFINED__
#define __INotificationReport_FWD_DEFINED__
typedef interface INotificationReport INotificationReport;
#endif 	/* __INotificationReport_FWD_DEFINED__ */


/* header files for imported files */
#include "objidl.h"
#include "oleidl.h"
#include "ocidl.h"
#include "mstask.h"

#ifdef __cplusplus
extern "C"{
#endif 

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_msnotify_0000 */
/* [local] */ 

//=--------------------------------------------------------------------------=
// MSNotify.h
//=--------------------------------------------------------------------------=
// (C) Copyright 1995-1998 Microsoft Corporation.  All Rights Reserved.
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
// PARTICULAR PURPOSE.
//=--------------------------------------------------------------------------=








typedef /* [unique] */ INotification __RPC_FAR *LPNOTIFICATION;

typedef /* [unique] */ INotificationMgr __RPC_FAR *LPNOTIFICATIONMGR;

typedef /* [unique] */ INotificationSink __RPC_FAR *LPNOTIFICATIONSINK;

typedef /* [unique] */ IEnumNotification __RPC_FAR *LPENUMNOTIFICATION;

typedef /* [unique] */ IEnumScheduleGroup __RPC_FAR *LPENUMSCHEDULEGROUP;

typedef /* [unique] */ IScheduleGroup __RPC_FAR *LPSCHEDULEGROUP;

typedef /* [unique] */ INotificationReport __RPC_FAR *LPNOTIFICATIONREPORT;

typedef REFGUID REFNOTIFICATIONTYPE;

typedef GUID NOTIFICATIONTYPE;

typedef GUID __RPC_FAR *PNOTIFICATIONTYPE;

typedef GUID NOTIFICATIONCOOKIE;

typedef GUID __RPC_FAR *PNOTIFICATIONCOOKIE;

typedef struct _tagTASKDATA
    {
    ULONG cbSize;
    DWORD dwReserved;
    DWORD dwTaskFlags;
    DWORD dwPriority;
    DWORD dwDuration;
    DWORD nParallelTasks;
    }	TASK_DATA;

typedef struct _tagTASKDATA __RPC_FAR *PTASK_DATA;


////////////////////////////////////////////////////////////////////////////
// Broadcast Destinations 
EXTERN_C const CLSID CLSID_GLOBAL_BROADCAST           ;
EXTERN_C const CLSID CLSID_PROCESS_BROADCAST          ;
EXTERN_C const CLSID CLSID_THREAD_BROADCAST           ;

EXTERN_C const GUID CLSID_StdNotificationMgr          ;

EXTERN_C const GUID NOTIFICATIONTYPE_NULL             ;
EXTERN_C const GUID NOTIFICATIONTYPE_ANOUNCMENT       ;
EXTERN_C const GUID NOTIFICATIONTYPE_TASK             ;
EXTERN_C const GUID NOTIFICATIONTYPE_ALERT            ;
EXTERN_C const GUID NOTIFICATIONTYPE_INET_IDLE        ;
EXTERN_C const GUID NOTIFICATIONTYPE_INET_OFFLINE     ;
EXTERN_C const GUID NOTIFICATIONTYPE_INET_ONLINE      ;
EXTERN_C const GUID NOTIFICATIONTYPE_TASKS_SUSPEND    ;
EXTERN_C const GUID NOTIFICATIONTYPE_TASKS_RESUME     ;
EXTERN_C const GUID NOTIFICATIONTYPE_TASKS_ABORT      ;
EXTERN_C const GUID NOTIFICATIONTYPE_TASKS_COMPLETED  ;
EXTERN_C const GUID NOTIFICATIONTYPE_TASKS_PROGRESS   ;
EXTERN_C const GUID NOTIFICATIONTYPE_AGENT_INIT       ;
EXTERN_C const GUID NOTIFICATIONTYPE_AGENT_START      ;
EXTERN_C const GUID NOTIFICATIONTYPE_BEGIN_REPORT     ;
EXTERN_C const GUID NOTIFICATIONTYPE_END_REPORT       ;
EXTERN_C const GUID NOTIFICATIONTYPE_CONNECT_TO_INTERNET;
EXTERN_C const GUID NOTIFICATIONTYPE_DISCONNECT_FROM_INTERNET;
EXTERN_C const GUID NOTIFICATIONTYPE_CONFIG_CHANGED   ;
EXTERN_C const GUID NOTIFICATIONTYPE_PROGRESS_REPORT  ;
EXTERN_C const GUID NOTIFICATIONTYPE_USER_IDLE_BEGIN  ;
EXTERN_C const GUID NOTIFICATIONTYPE_USER_IDLE_END    ;
EXTERN_C const GUID NOTIFICATIONTYPE_TASKS_STARTED    ;
EXTERN_C const GUID NOTIFICATIONTYPE_TASKS_ERROR      ;
EXTERN_C const GUID NOTIFICATIONTYPE_d                ;
EXTERN_C const GUID NOTIFICATIONTYPE_e                ;
EXTERN_C const GUID NOTIFICATIONTYPE_f                ;
EXTERN_C const GUID NOTIFICATIONTYPE_11               ;
EXTERN_C const GUID NOTIFICATIONTYPE_12               ;
EXTERN_C const GUID NOTIFICATIONTYPE_13               ;
EXTERN_C const GUID NOTIFICATIONTYPE_14               ;
EXTERN_C const GUID NOTIFICATIONTYPE_ITEM_START       ;
EXTERN_C const GUID NOTIFICATIONTYPE_ITEM_RESTART     ;
EXTERN_C const GUID NOTIFICATIONTYPE_ITEM_DONE        ;
EXTERN_C const GUID NOTIFICATIONTYPE_GROUP_START      ;
EXTERN_C const GUID NOTIFICATIONTYPE_GROUP_RESTART    ;
EXTERN_C const GUID NOTIFICATIONTYPE_GROUP_DONE       ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_0          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_1          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_2          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_3          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_4          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_5          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_6          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_7          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_8          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_9          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_A          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_B          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_C          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_D          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_E          ;
EXTERN_C const GUID NOTIFICATIONTYPE_START_F          ;
#define NOTIFICATIONTYPE_ALL NOTIFICATIONTYPE_NULL     
EXTERN_C const GUID NOTFCOOKIE_SCHEDULE_GROUP_DAILY              ;
EXTERN_C const GUID NOTFCOOKIE_SCHEDULE_GROUP_WEEKLY             ;
EXTERN_C const GUID NOTFCOOKIE_SCHEDULE_GROUP_MONTHLY            ;
EXTERN_C const GUID NOTFCOOKIE_SCHEDULE_GROUP_MANUAL             ;
#ifndef _LPENUMPROPERTYMAP_DEFINED
#define _LPENUMPROPERTYMAP_DEFINED


extern RPC_IF_HANDLE __MIDL_itf_msnotify_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msnotify_0000_v0_0_s_ifspec;

#ifndef __IEnumPropertyMap_INTERFACE_DEFINED__
#define __IEnumPropertyMap_INTERFACE_DEFINED__

/* interface IEnumPropertyMap */
/* [unique][uuid][object][local] */ 

typedef /* [unique] */ IEnumPropertyMap __RPC_FAR *LPENUMPROPERTYMAP;

typedef struct _tagSTATPROPMAP
    {
    LPOLESTR pstrName;
    DWORD dwFlags;
    VARIANT variantValue;
    }	STATPROPMAP;

typedef struct _tagSTATPROPMAP __RPC_FAR *LPSTATPROPMAP;


EXTERN_C const IID IID_IEnumPropertyMap;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c733e4a1-576e-11d0-b28c-00c04fd7cd22")
    IEnumPropertyMap : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ STATPROPMAP __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumPropertyMap __RPC_FAR *__RPC_FAR *ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumPropertyMapVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumPropertyMap __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumPropertyMap __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumPropertyMap __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumPropertyMap __RPC_FAR * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ STATPROPMAP __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumPropertyMap __RPC_FAR * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumPropertyMap __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumPropertyMap __RPC_FAR * This,
            /* [out] */ IEnumPropertyMap __RPC_FAR *__RPC_FAR *ppenum);
        
        END_INTERFACE
    } IEnumPropertyMapVtbl;

    interface IEnumPropertyMap
    {
        CONST_VTBL struct IEnumPropertyMapVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumPropertyMap_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumPropertyMap_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumPropertyMap_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumPropertyMap_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#define IEnumPropertyMap_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumPropertyMap_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumPropertyMap_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IEnumPropertyMap_RemoteNext_Proxy( 
    IEnumPropertyMap __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ STATPROPMAP __RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


void __RPC_STUB IEnumPropertyMap_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumPropertyMap_Skip_Proxy( 
    IEnumPropertyMap __RPC_FAR * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumPropertyMap_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumPropertyMap_Reset_Proxy( 
    IEnumPropertyMap __RPC_FAR * This);


void __RPC_STUB IEnumPropertyMap_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumPropertyMap_Clone_Proxy( 
    IEnumPropertyMap __RPC_FAR * This,
    /* [out] */ IEnumPropertyMap __RPC_FAR *__RPC_FAR *ppenum);


void __RPC_STUB IEnumPropertyMap_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumPropertyMap_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msnotify_0157 */
/* [local] */ 

#endif
#ifndef _LPPROPERTYMAP
#define _LPPROPERTYMAP


extern RPC_IF_HANDLE __MIDL_itf_msnotify_0157_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msnotify_0157_v0_0_s_ifspec;

#ifndef __IPropertyMap_INTERFACE_DEFINED__
#define __IPropertyMap_INTERFACE_DEFINED__

/* interface IPropertyMap */
/* [unique][uuid][object][local] */ 

typedef /* [unique] */ IPropertyMap __RPC_FAR *LPPROPERTYMAP;


EXTERN_C const IID IID_IPropertyMap;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c733e4a2-576e-11d0-b28c-00c04fd7cd22")
    IPropertyMap : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Write( 
            /* [in] */ LPCWSTR pstrName,
            /* [in] */ VARIANT variantValue,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Read( 
            /* [in] */ LPCWSTR pstrName,
            /* [out] */ VARIANT __RPC_FAR *pVariantValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ ULONG __RPC_FAR *pCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumMAP( 
            /* [out] */ LPENUMPROPERTYMAP __RPC_FAR *ppEnumMap) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPropertyMapVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IPropertyMap __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IPropertyMap __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IPropertyMap __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Write )( 
            IPropertyMap __RPC_FAR * This,
            /* [in] */ LPCWSTR pstrName,
            /* [in] */ VARIANT variantValue,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Read )( 
            IPropertyMap __RPC_FAR * This,
            /* [in] */ LPCWSTR pstrName,
            /* [out] */ VARIANT __RPC_FAR *pVariantValue);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IPropertyMap __RPC_FAR * This,
            /* [out] */ ULONG __RPC_FAR *pCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnumMAP )( 
            IPropertyMap __RPC_FAR * This,
            /* [out] */ LPENUMPROPERTYMAP __RPC_FAR *ppEnumMap);
        
        END_INTERFACE
    } IPropertyMapVtbl;

    interface IPropertyMap
    {
        CONST_VTBL struct IPropertyMapVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPropertyMap_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPropertyMap_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPropertyMap_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPropertyMap_Write(This,pstrName,variantValue,dwFlags)	\
    (This)->lpVtbl -> Write(This,pstrName,variantValue,dwFlags)

#define IPropertyMap_Read(This,pstrName,pVariantValue)	\
    (This)->lpVtbl -> Read(This,pstrName,pVariantValue)

#define IPropertyMap_GetCount(This,pCount)	\
    (This)->lpVtbl -> GetCount(This,pCount)

#define IPropertyMap_GetEnumMAP(This,ppEnumMap)	\
    (This)->lpVtbl -> GetEnumMAP(This,ppEnumMap)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPropertyMap_Write_Proxy( 
    IPropertyMap __RPC_FAR * This,
    /* [in] */ LPCWSTR pstrName,
    /* [in] */ VARIANT variantValue,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IPropertyMap_Write_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyMap_Read_Proxy( 
    IPropertyMap __RPC_FAR * This,
    /* [in] */ LPCWSTR pstrName,
    /* [out] */ VARIANT __RPC_FAR *pVariantValue);


void __RPC_STUB IPropertyMap_Read_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyMap_GetCount_Proxy( 
    IPropertyMap __RPC_FAR * This,
    /* [out] */ ULONG __RPC_FAR *pCount);


void __RPC_STUB IPropertyMap_GetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyMap_GetEnumMAP_Proxy( 
    IPropertyMap __RPC_FAR * This,
    /* [out] */ LPENUMPROPERTYMAP __RPC_FAR *ppEnumMap);


void __RPC_STUB IPropertyMap_GetEnumMAP_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPropertyMap_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msnotify_0158 */
/* [local] */ 

#endif
#define NOTF_E_NOTIFICATION_NOT_DELIVERED               _HRESULT_TYPEDEF_(0x800C0F00L)      
#ifndef _LPNOTIFICATION
#define _LPNOTIFICATION


extern RPC_IF_HANDLE __MIDL_itf_msnotify_0158_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msnotify_0158_v0_0_s_ifspec;

#ifndef __INotification_INTERFACE_DEFINED__
#define __INotification_INTERFACE_DEFINED__

/* interface INotification */
/* [unique][uuid][object][local] */ 

typedef 
enum _tagNOTFSINKMODE
    {	NM_PERMANENT	= 0x8,
	NM_ACCEPT_DIRECTED_NOTIFICATION	= 0x10
    }	_NOTFSINKMODE;

typedef DWORD NOTFSINKMODE;

typedef DWORD NOTIFICATIONFLAGS;

typedef 
enum _tagDELIVERMODE
    {	DM_DELIVER_PREFERED	= 0x1,
	DM_DELIVER_DELAYED	= 0x2,
	DM_DELIVER_LAST_DELAYED	= 0x4,
	DM_ONLY_IF_RUNNING	= 0x20,
	DM_THROTTLE_MODE	= 0x80,
	DM_NEED_COMPLETIONREPORT	= 0x100,
	DM_NEED_PROGRESSREPORT	= 0x200,
	DM_DELIVER_DEFAULT_THREAD	= 0x400,
	DM_DELIVER_DEFAULT_PROCESS	= 0x800
    }	_DELIVERMODE;

typedef DWORD DELIVERMODE;


EXTERN_C const IID IID_INotification;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c733e4a3-576e-11d0-b28c-00c04fd7cd22")
    INotification : public IPropertyMap
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNotificationInfo( 
            /* [out] */ PNOTIFICATIONTYPE pNotificationType,
            /* [out] */ PNOTIFICATIONCOOKIE pNotificationCookie,
            /* [out] */ NOTIFICATIONFLAGS __RPC_FAR *pNotificationFlags,
            /* [out] */ DELIVERMODE __RPC_FAR *pDeliverMode,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [in] */ REFNOTIFICATIONTYPE rNotificationType,
            /* [out] */ LPNOTIFICATION __RPC_FAR *ppNotification,
            /* [in] */ DWORD dwReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INotificationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INotification __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INotification __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INotification __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Write )( 
            INotification __RPC_FAR * This,
            /* [in] */ LPCWSTR pstrName,
            /* [in] */ VARIANT variantValue,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Read )( 
            INotification __RPC_FAR * This,
            /* [in] */ LPCWSTR pstrName,
            /* [out] */ VARIANT __RPC_FAR *pVariantValue);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            INotification __RPC_FAR * This,
            /* [out] */ ULONG __RPC_FAR *pCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnumMAP )( 
            INotification __RPC_FAR * This,
            /* [out] */ LPENUMPROPERTYMAP __RPC_FAR *ppEnumMap);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNotificationInfo )( 
            INotification __RPC_FAR * This,
            /* [out] */ PNOTIFICATIONTYPE pNotificationType,
            /* [out] */ PNOTIFICATIONCOOKIE pNotificationCookie,
            /* [out] */ NOTIFICATIONFLAGS __RPC_FAR *pNotificationFlags,
            /* [out] */ DELIVERMODE __RPC_FAR *pDeliverMode,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            INotification __RPC_FAR * This,
            /* [in] */ REFNOTIFICATIONTYPE rNotificationType,
            /* [out] */ LPNOTIFICATION __RPC_FAR *ppNotification,
            /* [in] */ DWORD dwReserved);
        
        END_INTERFACE
    } INotificationVtbl;

    interface INotification
    {
        CONST_VTBL struct INotificationVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INotification_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INotification_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INotification_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INotification_Write(This,pstrName,variantValue,dwFlags)	\
    (This)->lpVtbl -> Write(This,pstrName,variantValue,dwFlags)

#define INotification_Read(This,pstrName,pVariantValue)	\
    (This)->lpVtbl -> Read(This,pstrName,pVariantValue)

#define INotification_GetCount(This,pCount)	\
    (This)->lpVtbl -> GetCount(This,pCount)

#define INotification_GetEnumMAP(This,ppEnumMap)	\
    (This)->lpVtbl -> GetEnumMAP(This,ppEnumMap)


#define INotification_GetNotificationInfo(This,pNotificationType,pNotificationCookie,pNotificationFlags,pDeliverMode,dwReserved)	\
    (This)->lpVtbl -> GetNotificationInfo(This,pNotificationType,pNotificationCookie,pNotificationFlags,pDeliverMode,dwReserved)

#define INotification_Clone(This,rNotificationType,ppNotification,dwReserved)	\
    (This)->lpVtbl -> Clone(This,rNotificationType,ppNotification,dwReserved)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INotification_GetNotificationInfo_Proxy( 
    INotification __RPC_FAR * This,
    /* [out] */ PNOTIFICATIONTYPE pNotificationType,
    /* [out] */ PNOTIFICATIONCOOKIE pNotificationCookie,
    /* [out] */ NOTIFICATIONFLAGS __RPC_FAR *pNotificationFlags,
    /* [out] */ DELIVERMODE __RPC_FAR *pDeliverMode,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotification_GetNotificationInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotification_Clone_Proxy( 
    INotification __RPC_FAR * This,
    /* [in] */ REFNOTIFICATIONTYPE rNotificationType,
    /* [out] */ LPNOTIFICATION __RPC_FAR *ppNotification,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotification_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INotification_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msnotify_0159 */
/* [local] */ 

#endif
#ifndef _LPNOTIFICATIONMGR_DEFINED
#define _LPNOTIFICATIONMGR_DEFINED


extern RPC_IF_HANDLE __MIDL_itf_msnotify_0159_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msnotify_0159_v0_0_s_ifspec;

#ifndef __INotificationMgr_INTERFACE_DEFINED__
#define __INotificationMgr_INTERFACE_DEFINED__

/* interface INotificationMgr */
/* [unique][uuid][object][local] */ 

typedef 
enum _tagGROUPMODE
    {	GM_GROUP_SEQUENTIAL	= 0x1
    }	_GROUPMODE;

typedef DWORD GROUPMODE;

typedef 
enum _tagENUM_FLAGS
    {	EF_NOT_NOTIFICATION	= 0x1,
	EF_NOT_SCHEDULEGROUPITEM	= 0x2,
	EF_NOTIFICATION_INPROGRESS	= 0x4,
	EF_NOTIFICATION_THROTTLED	= 0x8,
	EF_NOTIFICATION_SUSPENDED	= 0x10
    }	_ENUM_FLAGS;

typedef DWORD ENUM_FLAGS;

typedef struct _tagNotificationItem
    {
    ULONG cbSize;
    LPNOTIFICATION pNotification;
    NOTIFICATIONTYPE NotificationType;
    NOTIFICATIONFLAGS NotificationFlags;
    DELIVERMODE DeliverMode;
    NOTIFICATIONCOOKIE NotificationCookie;
    TASK_TRIGGER TaskTrigger;
    TASK_DATA TaskData;
    NOTIFICATIONCOOKIE groupCookie;
    CLSID clsidSender;
    CLSID clsidDest;
    FILETIME dateLastRun;
    FILETIME dateNextRun;
    DWORD dwNotificationState;
    }	NOTIFICATIONITEM;

typedef struct _tagNotificationItem __RPC_FAR *PNOTIFICATIONITEM;


EXTERN_C const IID IID_INotificationMgr;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c733e4a4-576e-11d0-b28c-00c04fd7cd22")
    INotificationMgr : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RegisterNotificationSink( 
            /* [in] */ LPNOTIFICATIONSINK pNotfctnSink,
            /* [in] */ LPCLSID pNotificationDest,
            /* [in] */ NOTFSINKMODE NotfctnSinkMode,
            /* [in] */ ULONG cNotifications,
            /* [in] */ PNOTIFICATIONTYPE pNotificationIDs,
            /* [out] */ PNOTIFICATIONCOOKIE pRegisterCookie,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterNotificationSink( 
            /* [in] */ PNOTIFICATIONCOOKIE pRegisterCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateNotification( 
            /* [in] */ REFNOTIFICATIONTYPE rNotificationType,
            /* [in] */ NOTIFICATIONFLAGS NotificationFlags,
            /* [in] */ LPUNKNOWN pUnkOuter,
            /* [out] */ LPNOTIFICATION __RPC_FAR *ppNotification,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FindNotification( 
            /* [in] */ PNOTIFICATIONCOOKIE pNotificatioCookie,
            /* [out] */ PNOTIFICATIONITEM pNotificationItem,
            /* [in] */ DWORD grfEnumMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeliverNotification( 
            /* [in] */ LPNOTIFICATION pNotification,
            /* [in] */ REFCLSID rNotificationDest,
            /* [in] */ DELIVERMODE deliverMode,
            /* [in] */ LPNOTIFICATIONSINK pReportNotfctnSink,
            /* [out] */ LPNOTIFICATIONREPORT __RPC_FAR *ppNotfctnReport,
            /* [in] */ PTASK_DATA pTaskData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ScheduleNotification( 
            /* [in] */ LPNOTIFICATION pNotification,
            /* [in] */ REFCLSID rNotificationDest,
            /* [in] */ PTASK_TRIGGER pTaskTrigger,
            /* [in] */ PTASK_DATA pTaskData,
            /* [in] */ DELIVERMODE deliverMode,
            /* [in] */ LPCLSID pClsidSender,
            /* [in] */ LPNOTIFICATIONSINK pReportNotfctnSink,
            /* [out] */ LPNOTIFICATIONREPORT __RPC_FAR *ppNotfctnReport,
            /* [out] */ PNOTIFICATIONCOOKIE pNotificationCookie,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateNotification( 
            /* [in] */ PNOTIFICATIONCOOKIE pNotificationCookie,
            /* [in] */ PTASK_TRIGGER pTaskTrigger,
            /* [in] */ PTASK_DATA pTaskData,
            /* [in] */ DELIVERMODE deliverMode,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RevokeNotification( 
            /* [in] */ PNOTIFICATIONCOOKIE pnotificationCookie,
            /* [out] */ PNOTIFICATIONITEM pNotificationItem,
            /* [in] */ DWORD grfEnumMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumNotification( 
            /* [in] */ DWORD grfEnumFlags,
            /* [out] */ LPENUMNOTIFICATION __RPC_FAR *ppEnumNotification) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateScheduleGroup( 
            /* [in] */ DWORD grfGroupCreateFlags,
            /* [out] */ LPSCHEDULEGROUP __RPC_FAR *ppSchGroup,
            /* [out] */ PNOTIFICATIONCOOKIE pGroupCookie,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FindScheduleGroup( 
            /* [in] */ PNOTIFICATIONCOOKIE pGroupCookie,
            /* [out] */ LPSCHEDULEGROUP __RPC_FAR *ppSchGroup,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RevokeScheduleGroup( 
            /* [in] */ PNOTIFICATIONCOOKIE pGroupCookie,
            /* [out] */ LPSCHEDULEGROUP __RPC_FAR *ppSchGroup,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumScheduleGroup( 
            /* [in] */ DWORD grfEnumFlags,
            /* [out] */ LPENUMSCHEDULEGROUP __RPC_FAR *ppEnumScheduleGroup) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeliverReport( 
            /* [in] */ LPNOTIFICATION pNotification,
            /* [in] */ PNOTIFICATIONCOOKIE pRunningNotfCookie,
            /* [in] */ DWORD dwReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INotificationMgrVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INotificationMgr __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INotificationMgr __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterNotificationSink )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ LPNOTIFICATIONSINK pNotfctnSink,
            /* [in] */ LPCLSID pNotificationDest,
            /* [in] */ NOTFSINKMODE NotfctnSinkMode,
            /* [in] */ ULONG cNotifications,
            /* [in] */ PNOTIFICATIONTYPE pNotificationIDs,
            /* [out] */ PNOTIFICATIONCOOKIE pRegisterCookie,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UnregisterNotificationSink )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ PNOTIFICATIONCOOKIE pRegisterCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateNotification )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ REFNOTIFICATIONTYPE rNotificationType,
            /* [in] */ NOTIFICATIONFLAGS NotificationFlags,
            /* [in] */ LPUNKNOWN pUnkOuter,
            /* [out] */ LPNOTIFICATION __RPC_FAR *ppNotification,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindNotification )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ PNOTIFICATIONCOOKIE pNotificatioCookie,
            /* [out] */ PNOTIFICATIONITEM pNotificationItem,
            /* [in] */ DWORD grfEnumMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeliverNotification )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ LPNOTIFICATION pNotification,
            /* [in] */ REFCLSID rNotificationDest,
            /* [in] */ DELIVERMODE deliverMode,
            /* [in] */ LPNOTIFICATIONSINK pReportNotfctnSink,
            /* [out] */ LPNOTIFICATIONREPORT __RPC_FAR *ppNotfctnReport,
            /* [in] */ PTASK_DATA pTaskData);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ScheduleNotification )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ LPNOTIFICATION pNotification,
            /* [in] */ REFCLSID rNotificationDest,
            /* [in] */ PTASK_TRIGGER pTaskTrigger,
            /* [in] */ PTASK_DATA pTaskData,
            /* [in] */ DELIVERMODE deliverMode,
            /* [in] */ LPCLSID pClsidSender,
            /* [in] */ LPNOTIFICATIONSINK pReportNotfctnSink,
            /* [out] */ LPNOTIFICATIONREPORT __RPC_FAR *ppNotfctnReport,
            /* [out] */ PNOTIFICATIONCOOKIE pNotificationCookie,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateNotification )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ PNOTIFICATIONCOOKIE pNotificationCookie,
            /* [in] */ PTASK_TRIGGER pTaskTrigger,
            /* [in] */ PTASK_DATA pTaskData,
            /* [in] */ DELIVERMODE deliverMode,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RevokeNotification )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ PNOTIFICATIONCOOKIE pnotificationCookie,
            /* [out] */ PNOTIFICATIONITEM pNotificationItem,
            /* [in] */ DWORD grfEnumMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnumNotification )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ DWORD grfEnumFlags,
            /* [out] */ LPENUMNOTIFICATION __RPC_FAR *ppEnumNotification);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateScheduleGroup )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ DWORD grfGroupCreateFlags,
            /* [out] */ LPSCHEDULEGROUP __RPC_FAR *ppSchGroup,
            /* [out] */ PNOTIFICATIONCOOKIE pGroupCookie,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindScheduleGroup )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ PNOTIFICATIONCOOKIE pGroupCookie,
            /* [out] */ LPSCHEDULEGROUP __RPC_FAR *ppSchGroup,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RevokeScheduleGroup )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ PNOTIFICATIONCOOKIE pGroupCookie,
            /* [out] */ LPSCHEDULEGROUP __RPC_FAR *ppSchGroup,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnumScheduleGroup )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ DWORD grfEnumFlags,
            /* [out] */ LPENUMSCHEDULEGROUP __RPC_FAR *ppEnumScheduleGroup);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeliverReport )( 
            INotificationMgr __RPC_FAR * This,
            /* [in] */ LPNOTIFICATION pNotification,
            /* [in] */ PNOTIFICATIONCOOKIE pRunningNotfCookie,
            /* [in] */ DWORD dwReserved);
        
        END_INTERFACE
    } INotificationMgrVtbl;

    interface INotificationMgr
    {
        CONST_VTBL struct INotificationMgrVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INotificationMgr_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INotificationMgr_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INotificationMgr_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INotificationMgr_RegisterNotificationSink(This,pNotfctnSink,pNotificationDest,NotfctnSinkMode,cNotifications,pNotificationIDs,pRegisterCookie,dwReserved)	\
    (This)->lpVtbl -> RegisterNotificationSink(This,pNotfctnSink,pNotificationDest,NotfctnSinkMode,cNotifications,pNotificationIDs,pRegisterCookie,dwReserved)

#define INotificationMgr_UnregisterNotificationSink(This,pRegisterCookie)	\
    (This)->lpVtbl -> UnregisterNotificationSink(This,pRegisterCookie)

#define INotificationMgr_CreateNotification(This,rNotificationType,NotificationFlags,pUnkOuter,ppNotification,dwReserved)	\
    (This)->lpVtbl -> CreateNotification(This,rNotificationType,NotificationFlags,pUnkOuter,ppNotification,dwReserved)

#define INotificationMgr_FindNotification(This,pNotificatioCookie,pNotificationItem,grfEnumMode)	\
    (This)->lpVtbl -> FindNotification(This,pNotificatioCookie,pNotificationItem,grfEnumMode)

#define INotificationMgr_DeliverNotification(This,pNotification,rNotificationDest,deliverMode,pReportNotfctnSink,ppNotfctnReport,pTaskData)	\
    (This)->lpVtbl -> DeliverNotification(This,pNotification,rNotificationDest,deliverMode,pReportNotfctnSink,ppNotfctnReport,pTaskData)

#define INotificationMgr_ScheduleNotification(This,pNotification,rNotificationDest,pTaskTrigger,pTaskData,deliverMode,pClsidSender,pReportNotfctnSink,ppNotfctnReport,pNotificationCookie,dwReserved)	\
    (This)->lpVtbl -> ScheduleNotification(This,pNotification,rNotificationDest,pTaskTrigger,pTaskData,deliverMode,pClsidSender,pReportNotfctnSink,ppNotfctnReport,pNotificationCookie,dwReserved)

#define INotificationMgr_UpdateNotification(This,pNotificationCookie,pTaskTrigger,pTaskData,deliverMode,dwReserved)	\
    (This)->lpVtbl -> UpdateNotification(This,pNotificationCookie,pTaskTrigger,pTaskData,deliverMode,dwReserved)

#define INotificationMgr_RevokeNotification(This,pnotificationCookie,pNotificationItem,grfEnumMode)	\
    (This)->lpVtbl -> RevokeNotification(This,pnotificationCookie,pNotificationItem,grfEnumMode)

#define INotificationMgr_GetEnumNotification(This,grfEnumFlags,ppEnumNotification)	\
    (This)->lpVtbl -> GetEnumNotification(This,grfEnumFlags,ppEnumNotification)

#define INotificationMgr_CreateScheduleGroup(This,grfGroupCreateFlags,ppSchGroup,pGroupCookie,dwReserved)	\
    (This)->lpVtbl -> CreateScheduleGroup(This,grfGroupCreateFlags,ppSchGroup,pGroupCookie,dwReserved)

#define INotificationMgr_FindScheduleGroup(This,pGroupCookie,ppSchGroup,dwReserved)	\
    (This)->lpVtbl -> FindScheduleGroup(This,pGroupCookie,ppSchGroup,dwReserved)

#define INotificationMgr_RevokeScheduleGroup(This,pGroupCookie,ppSchGroup,dwReserved)	\
    (This)->lpVtbl -> RevokeScheduleGroup(This,pGroupCookie,ppSchGroup,dwReserved)

#define INotificationMgr_GetEnumScheduleGroup(This,grfEnumFlags,ppEnumScheduleGroup)	\
    (This)->lpVtbl -> GetEnumScheduleGroup(This,grfEnumFlags,ppEnumScheduleGroup)

#define INotificationMgr_DeliverReport(This,pNotification,pRunningNotfCookie,dwReserved)	\
    (This)->lpVtbl -> DeliverReport(This,pNotification,pRunningNotfCookie,dwReserved)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INotificationMgr_RegisterNotificationSink_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ LPNOTIFICATIONSINK pNotfctnSink,
    /* [in] */ LPCLSID pNotificationDest,
    /* [in] */ NOTFSINKMODE NotfctnSinkMode,
    /* [in] */ ULONG cNotifications,
    /* [in] */ PNOTIFICATIONTYPE pNotificationIDs,
    /* [out] */ PNOTIFICATIONCOOKIE pRegisterCookie,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotificationMgr_RegisterNotificationSink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_UnregisterNotificationSink_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ PNOTIFICATIONCOOKIE pRegisterCookie);


void __RPC_STUB INotificationMgr_UnregisterNotificationSink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_CreateNotification_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ REFNOTIFICATIONTYPE rNotificationType,
    /* [in] */ NOTIFICATIONFLAGS NotificationFlags,
    /* [in] */ LPUNKNOWN pUnkOuter,
    /* [out] */ LPNOTIFICATION __RPC_FAR *ppNotification,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotificationMgr_CreateNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_FindNotification_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ PNOTIFICATIONCOOKIE pNotificatioCookie,
    /* [out] */ PNOTIFICATIONITEM pNotificationItem,
    /* [in] */ DWORD grfEnumMode);


void __RPC_STUB INotificationMgr_FindNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_DeliverNotification_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ LPNOTIFICATION pNotification,
    /* [in] */ REFCLSID rNotificationDest,
    /* [in] */ DELIVERMODE deliverMode,
    /* [in] */ LPNOTIFICATIONSINK pReportNotfctnSink,
    /* [out] */ LPNOTIFICATIONREPORT __RPC_FAR *ppNotfctnReport,
    /* [in] */ PTASK_DATA pTaskData);


void __RPC_STUB INotificationMgr_DeliverNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_ScheduleNotification_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ LPNOTIFICATION pNotification,
    /* [in] */ REFCLSID rNotificationDest,
    /* [in] */ PTASK_TRIGGER pTaskTrigger,
    /* [in] */ PTASK_DATA pTaskData,
    /* [in] */ DELIVERMODE deliverMode,
    /* [in] */ LPCLSID pClsidSender,
    /* [in] */ LPNOTIFICATIONSINK pReportNotfctnSink,
    /* [out] */ LPNOTIFICATIONREPORT __RPC_FAR *ppNotfctnReport,
    /* [out] */ PNOTIFICATIONCOOKIE pNotificationCookie,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotificationMgr_ScheduleNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_UpdateNotification_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ PNOTIFICATIONCOOKIE pNotificationCookie,
    /* [in] */ PTASK_TRIGGER pTaskTrigger,
    /* [in] */ PTASK_DATA pTaskData,
    /* [in] */ DELIVERMODE deliverMode,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotificationMgr_UpdateNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_RevokeNotification_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ PNOTIFICATIONCOOKIE pnotificationCookie,
    /* [out] */ PNOTIFICATIONITEM pNotificationItem,
    /* [in] */ DWORD grfEnumMode);


void __RPC_STUB INotificationMgr_RevokeNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_GetEnumNotification_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ DWORD grfEnumFlags,
    /* [out] */ LPENUMNOTIFICATION __RPC_FAR *ppEnumNotification);


void __RPC_STUB INotificationMgr_GetEnumNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_CreateScheduleGroup_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ DWORD grfGroupCreateFlags,
    /* [out] */ LPSCHEDULEGROUP __RPC_FAR *ppSchGroup,
    /* [out] */ PNOTIFICATIONCOOKIE pGroupCookie,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotificationMgr_CreateScheduleGroup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_FindScheduleGroup_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ PNOTIFICATIONCOOKIE pGroupCookie,
    /* [out] */ LPSCHEDULEGROUP __RPC_FAR *ppSchGroup,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotificationMgr_FindScheduleGroup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_RevokeScheduleGroup_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ PNOTIFICATIONCOOKIE pGroupCookie,
    /* [out] */ LPSCHEDULEGROUP __RPC_FAR *ppSchGroup,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotificationMgr_RevokeScheduleGroup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_GetEnumScheduleGroup_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ DWORD grfEnumFlags,
    /* [out] */ LPENUMSCHEDULEGROUP __RPC_FAR *ppEnumScheduleGroup);


void __RPC_STUB INotificationMgr_GetEnumScheduleGroup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationMgr_DeliverReport_Proxy( 
    INotificationMgr __RPC_FAR * This,
    /* [in] */ LPNOTIFICATION pNotification,
    /* [in] */ PNOTIFICATIONCOOKIE pRunningNotfCookie,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotificationMgr_DeliverReport_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INotificationMgr_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msnotify_0160 */
/* [local] */ 

#endif
#ifndef _LPNOTIFICATIONSINK_DEFINED
#define _LPNOTIFICATIONSINK_DEFINED


extern RPC_IF_HANDLE __MIDL_itf_msnotify_0160_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msnotify_0160_v0_0_s_ifspec;

#ifndef __INotificationSink_INTERFACE_DEFINED__
#define __INotificationSink_INTERFACE_DEFINED__

/* interface INotificationSink */
/* [unique][uuid][object][local] */ 


EXTERN_C const IID IID_INotificationSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c733e4a5-576e-11d0-b28c-00c04fd7cd22")
    INotificationSink : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnNotification( 
            /* [in] */ LPNOTIFICATION pNotification,
            /* [in] */ LPNOTIFICATIONREPORT pNotfctnReport,
            /* [in] */ DWORD dwReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INotificationSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INotificationSink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INotificationSink __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INotificationSink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnNotification )( 
            INotificationSink __RPC_FAR * This,
            /* [in] */ LPNOTIFICATION pNotification,
            /* [in] */ LPNOTIFICATIONREPORT pNotfctnReport,
            /* [in] */ DWORD dwReserved);
        
        END_INTERFACE
    } INotificationSinkVtbl;

    interface INotificationSink
    {
        CONST_VTBL struct INotificationSinkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INotificationSink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INotificationSink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INotificationSink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INotificationSink_OnNotification(This,pNotification,pNotfctnReport,dwReserved)	\
    (This)->lpVtbl -> OnNotification(This,pNotification,pNotfctnReport,dwReserved)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INotificationSink_OnNotification_Proxy( 
    INotificationSink __RPC_FAR * This,
    /* [in] */ LPNOTIFICATION pNotification,
    /* [in] */ LPNOTIFICATIONREPORT pNotfctnReport,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotificationSink_OnNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INotificationSink_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msnotify_0161 */
/* [local] */ 

#endif
#ifndef _LPGROUPMGR_DEFINED
#define _LPGROUPMGR_DEFINED


extern RPC_IF_HANDLE __MIDL_itf_msnotify_0161_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msnotify_0161_v0_0_s_ifspec;

#ifndef __IScheduleGroup_INTERFACE_DEFINED__
#define __IScheduleGroup_INTERFACE_DEFINED__

/* interface IScheduleGroup */
/* [unique][uuid][object][local] */ 

typedef struct _tagGroupInfo
    {
    ULONG cbSize;
    LPWSTR pwzGroupname;
    }	GROUPINFO;

typedef struct _tagGroupInfo __RPC_FAR *PGROUPINFO;


EXTERN_C const IID IID_IScheduleGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c733e4a6-576e-11d0-b28c-00c04fd7cd22")
    IScheduleGroup : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetAttributes( 
            /* [in] */ PTASK_TRIGGER pTaskTrigger,
            /* [in] */ PTASK_DATA pTaskData,
            /* [in] */ PNOTIFICATIONCOOKIE pGroupCookie,
            /* [in] */ PGROUPINFO pGroupInfo,
            /* [in] */ GROUPMODE grfGroupMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAttributes( 
            /* [out] */ PTASK_TRIGGER pTaskTrigger,
            /* [out] */ PTASK_DATA pTaskData,
            /* [out] */ PNOTIFICATIONCOOKIE pGroupCookie,
            /* [out] */ PGROUPINFO pGroupInfo,
            /* [out] */ GROUPMODE __RPC_FAR *pgrfGroupMode,
            /* [out] */ LONG __RPC_FAR *pElements) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddNotification( 
            /* [in] */ LPNOTIFICATION pNotification,
            /* [in] */ REFCLSID rNotificationDest,
            /* [in] */ DELIVERMODE deliverMode,
            /* [in] */ LPCLSID pClsidSender,
            /* [in] */ LPNOTIFICATIONSINK pReportNotfctnSink,
            /* [out] */ LPNOTIFICATIONREPORT __RPC_FAR *ppNotfctnReport,
            /* [out] */ PNOTIFICATIONCOOKIE pNotificationCookie,
            /* [in] */ PTASK_DATA pTaskData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FindNotification( 
            /* [in] */ PNOTIFICATIONCOOKIE pNotificatioCookie,
            /* [out] */ PNOTIFICATIONITEM pNotificationItem,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RevokeNotification( 
            /* [in] */ PNOTIFICATIONCOOKIE pnotificationCookie,
            /* [out] */ PNOTIFICATIONITEM pschedulNotification,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumNotification( 
            /* [in] */ DWORD grfFlags,
            /* [out] */ LPENUMNOTIFICATION __RPC_FAR *ppEnumNotification) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IScheduleGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IScheduleGroup __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IScheduleGroup __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IScheduleGroup __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetAttributes )( 
            IScheduleGroup __RPC_FAR * This,
            /* [in] */ PTASK_TRIGGER pTaskTrigger,
            /* [in] */ PTASK_DATA pTaskData,
            /* [in] */ PNOTIFICATIONCOOKIE pGroupCookie,
            /* [in] */ PGROUPINFO pGroupInfo,
            /* [in] */ GROUPMODE grfGroupMode);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAttributes )( 
            IScheduleGroup __RPC_FAR * This,
            /* [out] */ PTASK_TRIGGER pTaskTrigger,
            /* [out] */ PTASK_DATA pTaskData,
            /* [out] */ PNOTIFICATIONCOOKIE pGroupCookie,
            /* [out] */ PGROUPINFO pGroupInfo,
            /* [out] */ GROUPMODE __RPC_FAR *pgrfGroupMode,
            /* [out] */ LONG __RPC_FAR *pElements);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddNotification )( 
            IScheduleGroup __RPC_FAR * This,
            /* [in] */ LPNOTIFICATION pNotification,
            /* [in] */ REFCLSID rNotificationDest,
            /* [in] */ DELIVERMODE deliverMode,
            /* [in] */ LPCLSID pClsidSender,
            /* [in] */ LPNOTIFICATIONSINK pReportNotfctnSink,
            /* [out] */ LPNOTIFICATIONREPORT __RPC_FAR *ppNotfctnReport,
            /* [out] */ PNOTIFICATIONCOOKIE pNotificationCookie,
            /* [in] */ PTASK_DATA pTaskData);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindNotification )( 
            IScheduleGroup __RPC_FAR * This,
            /* [in] */ PNOTIFICATIONCOOKIE pNotificatioCookie,
            /* [out] */ PNOTIFICATIONITEM pNotificationItem,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RevokeNotification )( 
            IScheduleGroup __RPC_FAR * This,
            /* [in] */ PNOTIFICATIONCOOKIE pnotificationCookie,
            /* [out] */ PNOTIFICATIONITEM pschedulNotification,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnumNotification )( 
            IScheduleGroup __RPC_FAR * This,
            /* [in] */ DWORD grfFlags,
            /* [out] */ LPENUMNOTIFICATION __RPC_FAR *ppEnumNotification);
        
        END_INTERFACE
    } IScheduleGroupVtbl;

    interface IScheduleGroup
    {
        CONST_VTBL struct IScheduleGroupVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IScheduleGroup_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IScheduleGroup_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IScheduleGroup_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IScheduleGroup_SetAttributes(This,pTaskTrigger,pTaskData,pGroupCookie,pGroupInfo,grfGroupMode)	\
    (This)->lpVtbl -> SetAttributes(This,pTaskTrigger,pTaskData,pGroupCookie,pGroupInfo,grfGroupMode)

#define IScheduleGroup_GetAttributes(This,pTaskTrigger,pTaskData,pGroupCookie,pGroupInfo,pgrfGroupMode,pElements)	\
    (This)->lpVtbl -> GetAttributes(This,pTaskTrigger,pTaskData,pGroupCookie,pGroupInfo,pgrfGroupMode,pElements)

#define IScheduleGroup_AddNotification(This,pNotification,rNotificationDest,deliverMode,pClsidSender,pReportNotfctnSink,ppNotfctnReport,pNotificationCookie,pTaskData)	\
    (This)->lpVtbl -> AddNotification(This,pNotification,rNotificationDest,deliverMode,pClsidSender,pReportNotfctnSink,ppNotfctnReport,pNotificationCookie,pTaskData)

#define IScheduleGroup_FindNotification(This,pNotificatioCookie,pNotificationItem,dwReserved)	\
    (This)->lpVtbl -> FindNotification(This,pNotificatioCookie,pNotificationItem,dwReserved)

#define IScheduleGroup_RevokeNotification(This,pnotificationCookie,pschedulNotification,dwReserved)	\
    (This)->lpVtbl -> RevokeNotification(This,pnotificationCookie,pschedulNotification,dwReserved)

#define IScheduleGroup_GetEnumNotification(This,grfFlags,ppEnumNotification)	\
    (This)->lpVtbl -> GetEnumNotification(This,grfFlags,ppEnumNotification)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IScheduleGroup_SetAttributes_Proxy( 
    IScheduleGroup __RPC_FAR * This,
    /* [in] */ PTASK_TRIGGER pTaskTrigger,
    /* [in] */ PTASK_DATA pTaskData,
    /* [in] */ PNOTIFICATIONCOOKIE pGroupCookie,
    /* [in] */ PGROUPINFO pGroupInfo,
    /* [in] */ GROUPMODE grfGroupMode);


void __RPC_STUB IScheduleGroup_SetAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IScheduleGroup_GetAttributes_Proxy( 
    IScheduleGroup __RPC_FAR * This,
    /* [out] */ PTASK_TRIGGER pTaskTrigger,
    /* [out] */ PTASK_DATA pTaskData,
    /* [out] */ PNOTIFICATIONCOOKIE pGroupCookie,
    /* [out] */ PGROUPINFO pGroupInfo,
    /* [out] */ GROUPMODE __RPC_FAR *pgrfGroupMode,
    /* [out] */ LONG __RPC_FAR *pElements);


void __RPC_STUB IScheduleGroup_GetAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IScheduleGroup_AddNotification_Proxy( 
    IScheduleGroup __RPC_FAR * This,
    /* [in] */ LPNOTIFICATION pNotification,
    /* [in] */ REFCLSID rNotificationDest,
    /* [in] */ DELIVERMODE deliverMode,
    /* [in] */ LPCLSID pClsidSender,
    /* [in] */ LPNOTIFICATIONSINK pReportNotfctnSink,
    /* [out] */ LPNOTIFICATIONREPORT __RPC_FAR *ppNotfctnReport,
    /* [out] */ PNOTIFICATIONCOOKIE pNotificationCookie,
    /* [in] */ PTASK_DATA pTaskData);


void __RPC_STUB IScheduleGroup_AddNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IScheduleGroup_FindNotification_Proxy( 
    IScheduleGroup __RPC_FAR * This,
    /* [in] */ PNOTIFICATIONCOOKIE pNotificatioCookie,
    /* [out] */ PNOTIFICATIONITEM pNotificationItem,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IScheduleGroup_FindNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IScheduleGroup_RevokeNotification_Proxy( 
    IScheduleGroup __RPC_FAR * This,
    /* [in] */ PNOTIFICATIONCOOKIE pnotificationCookie,
    /* [out] */ PNOTIFICATIONITEM pschedulNotification,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IScheduleGroup_RevokeNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IScheduleGroup_GetEnumNotification_Proxy( 
    IScheduleGroup __RPC_FAR * This,
    /* [in] */ DWORD grfFlags,
    /* [out] */ LPENUMNOTIFICATION __RPC_FAR *ppEnumNotification);


void __RPC_STUB IScheduleGroup_GetEnumNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IScheduleGroup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msnotify_0162 */
/* [local] */ 

#endif
#ifndef _LPENUMSCHEDULEGROUP_DEFINED
#define _LPENUMSCHEDULEGROUP_DEFINED


extern RPC_IF_HANDLE __MIDL_itf_msnotify_0162_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msnotify_0162_v0_0_s_ifspec;

#ifndef __IEnumScheduleGroup_INTERFACE_DEFINED__
#define __IEnumScheduleGroup_INTERFACE_DEFINED__

/* interface IEnumScheduleGroup */
/* [unique][uuid][object][local] */ 


EXTERN_C const IID IID_IEnumScheduleGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c733e4a9-576e-11d0-b28c-00c04fd7cd22")
    IEnumScheduleGroup : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ LPSCHEDULEGROUP __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumScheduleGroup __RPC_FAR *__RPC_FAR *ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumScheduleGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumScheduleGroup __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumScheduleGroup __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumScheduleGroup __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumScheduleGroup __RPC_FAR * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ LPSCHEDULEGROUP __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumScheduleGroup __RPC_FAR * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumScheduleGroup __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumScheduleGroup __RPC_FAR * This,
            /* [out] */ IEnumScheduleGroup __RPC_FAR *__RPC_FAR *ppenum);
        
        END_INTERFACE
    } IEnumScheduleGroupVtbl;

    interface IEnumScheduleGroup
    {
        CONST_VTBL struct IEnumScheduleGroupVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumScheduleGroup_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumScheduleGroup_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumScheduleGroup_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumScheduleGroup_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#define IEnumScheduleGroup_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumScheduleGroup_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumScheduleGroup_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IEnumScheduleGroup_RemoteNext_Proxy( 
    IEnumScheduleGroup __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ LPSCHEDULEGROUP __RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


void __RPC_STUB IEnumScheduleGroup_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumScheduleGroup_Skip_Proxy( 
    IEnumScheduleGroup __RPC_FAR * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumScheduleGroup_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumScheduleGroup_Reset_Proxy( 
    IEnumScheduleGroup __RPC_FAR * This);


void __RPC_STUB IEnumScheduleGroup_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumScheduleGroup_Clone_Proxy( 
    IEnumScheduleGroup __RPC_FAR * This,
    /* [out] */ IEnumScheduleGroup __RPC_FAR *__RPC_FAR *ppenum);


void __RPC_STUB IEnumScheduleGroup_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumScheduleGroup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msnotify_0163 */
/* [local] */ 

#endif
#ifndef _LPENUMNOTIFICATION_DEFINED
#define _LPENUMNOTIFICATION_DEFINED


extern RPC_IF_HANDLE __MIDL_itf_msnotify_0163_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msnotify_0163_v0_0_s_ifspec;

#ifndef __IEnumNotification_INTERFACE_DEFINED__
#define __IEnumNotification_INTERFACE_DEFINED__

/* interface IEnumNotification */
/* [unique][uuid][object][local] */ 


EXTERN_C const IID IID_IEnumNotification;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c733e4a8-576e-11d0-b28c-00c04fd7cd22")
    IEnumNotification : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ NOTIFICATIONITEM __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumNotification __RPC_FAR *__RPC_FAR *ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumNotificationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumNotification __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumNotification __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumNotification __RPC_FAR * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumNotification __RPC_FAR * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ NOTIFICATIONITEM __RPC_FAR *rgelt,
            /* [out] */ ULONG __RPC_FAR *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumNotification __RPC_FAR * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumNotification __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumNotification __RPC_FAR * This,
            /* [out] */ IEnumNotification __RPC_FAR *__RPC_FAR *ppenum);
        
        END_INTERFACE
    } IEnumNotificationVtbl;

    interface IEnumNotification
    {
        CONST_VTBL struct IEnumNotificationVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumNotification_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumNotification_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumNotification_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumNotification_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#define IEnumNotification_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumNotification_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumNotification_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IEnumNotification_RemoteNext_Proxy( 
    IEnumNotification __RPC_FAR * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ NOTIFICATIONITEM __RPC_FAR *rgelt,
    /* [out] */ ULONG __RPC_FAR *pceltFetched);


void __RPC_STUB IEnumNotification_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumNotification_Skip_Proxy( 
    IEnumNotification __RPC_FAR * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumNotification_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumNotification_Reset_Proxy( 
    IEnumNotification __RPC_FAR * This);


void __RPC_STUB IEnumNotification_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumNotification_Clone_Proxy( 
    IEnumNotification __RPC_FAR * This,
    /* [out] */ IEnumNotification __RPC_FAR *__RPC_FAR *ppenum);


void __RPC_STUB IEnumNotification_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumNotification_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msnotify_0164 */
/* [local] */ 

#endif
#ifndef _LPNOTIFICATIONREPORT_DEFINED
#define _LPNOTIFICATIONREPORT_DEFINED


extern RPC_IF_HANDLE __MIDL_itf_msnotify_0164_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msnotify_0164_v0_0_s_ifspec;

#ifndef __INotificationReport_INTERFACE_DEFINED__
#define __INotificationReport_INTERFACE_DEFINED__

/* interface INotificationReport */
/* [unique][uuid][object][local] */ 


EXTERN_C const IID IID_INotificationReport;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c733e4a7-576e-11d0-b28c-00c04fd7cd22")
    INotificationReport : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE DeliverUpdate( 
            /* [in] */ LPNOTIFICATION pNotification,
            /* [in] */ DELIVERMODE deliverMode,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOriginalNotification( 
            /* [out] */ LPNOTIFICATION __RPC_FAR *ppNotification) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNotificationStatus( 
            /* [in] */ DWORD dwStatusIn,
            /* [out] */ DWORD __RPC_FAR *pdwStatusOut,
            /* [in] */ DWORD dwReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INotificationReportVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INotificationReport __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INotificationReport __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INotificationReport __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DeliverUpdate )( 
            INotificationReport __RPC_FAR * This,
            /* [in] */ LPNOTIFICATION pNotification,
            /* [in] */ DELIVERMODE deliverMode,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetOriginalNotification )( 
            INotificationReport __RPC_FAR * This,
            /* [out] */ LPNOTIFICATION __RPC_FAR *ppNotification);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNotificationStatus )( 
            INotificationReport __RPC_FAR * This,
            /* [in] */ DWORD dwStatusIn,
            /* [out] */ DWORD __RPC_FAR *pdwStatusOut,
            /* [in] */ DWORD dwReserved);
        
        END_INTERFACE
    } INotificationReportVtbl;

    interface INotificationReport
    {
        CONST_VTBL struct INotificationReportVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INotificationReport_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INotificationReport_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INotificationReport_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INotificationReport_DeliverUpdate(This,pNotification,deliverMode,dwReserved)	\
    (This)->lpVtbl -> DeliverUpdate(This,pNotification,deliverMode,dwReserved)

#define INotificationReport_GetOriginalNotification(This,ppNotification)	\
    (This)->lpVtbl -> GetOriginalNotification(This,ppNotification)

#define INotificationReport_GetNotificationStatus(This,dwStatusIn,pdwStatusOut,dwReserved)	\
    (This)->lpVtbl -> GetNotificationStatus(This,dwStatusIn,pdwStatusOut,dwReserved)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INotificationReport_DeliverUpdate_Proxy( 
    INotificationReport __RPC_FAR * This,
    /* [in] */ LPNOTIFICATION pNotification,
    /* [in] */ DELIVERMODE deliverMode,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotificationReport_DeliverUpdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationReport_GetOriginalNotification_Proxy( 
    INotificationReport __RPC_FAR * This,
    /* [out] */ LPNOTIFICATION __RPC_FAR *ppNotification);


void __RPC_STUB INotificationReport_GetOriginalNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INotificationReport_GetNotificationStatus_Proxy( 
    INotificationReport __RPC_FAR * This,
    /* [in] */ DWORD dwStatusIn,
    /* [out] */ DWORD __RPC_FAR *pdwStatusOut,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB INotificationReport_GetNotificationStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INotificationReport_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msnotify_0165 */
/* [local] */ 

#endif
#ifndef _NOTIFICAITON_HELPER_APIS_
#define _NOTIFICAITON_HELPER_APIS_
//                                                                   
// HELPER APIS                                                       
//                                                                   
STDAPI NotfDeliverNotification(REFNOTIFICATIONTYPE rNotificationType 
                          ,REFCLSID            rClsidDest            
                          ,DELIVERMODE         deliverMode           
                          ,DWORD               dwReserved            
                          );                                         
                                                                     
                                                                     
#endif


extern RPC_IF_HANDLE __MIDL_itf_msnotify_0165_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msnotify_0165_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\mshtml.h ===
//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this sample source code is subject to the terms of the Microsoft
// license agreement under which you licensed this sample source code. If
// you did not accept the terms of the license agreement, you are not
// authorized to use this sample source code. For the terms of the license,
// please see the license agreement between you and Microsoft or, if applicable,
// see the LICENSE.RTF on your install media or the root of your tools installation.
// THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES.
//

#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 5.03.0286 */
/* at Mon Jan 22 15:48:25 2007
 */
/* Compiler settings for ..\mshtml.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32 (32b run), ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mshtml_h__
#define __mshtml_h__

/* Forward Declarations */ 

#ifndef __IHTMLFiltersCollection_FWD_DEFINED__
#define __IHTMLFiltersCollection_FWD_DEFINED__
typedef interface IHTMLFiltersCollection IHTMLFiltersCollection;
#endif 	/* __IHTMLFiltersCollection_FWD_DEFINED__ */


#ifndef __IHTMLEventObj_FWD_DEFINED__
#define __IHTMLEventObj_FWD_DEFINED__
typedef interface IHTMLEventObj IHTMLEventObj;
#endif 	/* __IHTMLEventObj_FWD_DEFINED__ */


#ifndef __IElementBehaviorSite_FWD_DEFINED__
#define __IElementBehaviorSite_FWD_DEFINED__
typedef interface IElementBehaviorSite IElementBehaviorSite;
#endif 	/* __IElementBehaviorSite_FWD_DEFINED__ */


#ifndef __IElementBehavior_FWD_DEFINED__
#define __IElementBehavior_FWD_DEFINED__
typedef interface IElementBehavior IElementBehavior;
#endif 	/* __IElementBehavior_FWD_DEFINED__ */


#ifndef __IElementBehaviorFactory_FWD_DEFINED__
#define __IElementBehaviorFactory_FWD_DEFINED__
typedef interface IElementBehaviorFactory IElementBehaviorFactory;
#endif 	/* __IElementBehaviorFactory_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteOM_FWD_DEFINED__
#define __IElementBehaviorSiteOM_FWD_DEFINED__
typedef interface IElementBehaviorSiteOM IElementBehaviorSiteOM;
#endif 	/* __IElementBehaviorSiteOM_FWD_DEFINED__ */


#ifndef __IElementBehaviorRender_FWD_DEFINED__
#define __IElementBehaviorRender_FWD_DEFINED__
typedef interface IElementBehaviorRender IElementBehaviorRender;
#endif 	/* __IElementBehaviorRender_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteRender_FWD_DEFINED__
#define __IElementBehaviorSiteRender_FWD_DEFINED__
typedef interface IElementBehaviorSiteRender IElementBehaviorSiteRender;
#endif 	/* __IElementBehaviorSiteRender_FWD_DEFINED__ */


#ifndef __IHTMLStyle_FWD_DEFINED__
#define __IHTMLStyle_FWD_DEFINED__
typedef interface IHTMLStyle IHTMLStyle;
#endif 	/* __IHTMLStyle_FWD_DEFINED__ */


#ifndef __IHTMLStyle2_FWD_DEFINED__
#define __IHTMLStyle2_FWD_DEFINED__
typedef interface IHTMLStyle2 IHTMLStyle2;
#endif 	/* __IHTMLStyle2_FWD_DEFINED__ */


#ifndef __IHTMLStyle3_FWD_DEFINED__
#define __IHTMLStyle3_FWD_DEFINED__
typedef interface IHTMLStyle3 IHTMLStyle3;
#endif 	/* __IHTMLStyle3_FWD_DEFINED__ */


#ifndef __IHTMLStyle4_FWD_DEFINED__
#define __IHTMLStyle4_FWD_DEFINED__
typedef interface IHTMLStyle4 IHTMLStyle4;
#endif 	/* __IHTMLStyle4_FWD_DEFINED__ */


#ifndef __IHTMLStyle5_FWD_DEFINED__
#define __IHTMLStyle5_FWD_DEFINED__
typedef interface IHTMLStyle5 IHTMLStyle5;
#endif 	/* __IHTMLStyle5_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle_FWD_DEFINED__
#define __IHTMLRuleStyle_FWD_DEFINED__
typedef interface IHTMLRuleStyle IHTMLRuleStyle;
#endif 	/* __IHTMLRuleStyle_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle2_FWD_DEFINED__
#define __IHTMLRuleStyle2_FWD_DEFINED__
typedef interface IHTMLRuleStyle2 IHTMLRuleStyle2;
#endif 	/* __IHTMLRuleStyle2_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle3_FWD_DEFINED__
#define __IHTMLRuleStyle3_FWD_DEFINED__
typedef interface IHTMLRuleStyle3 IHTMLRuleStyle3;
#endif 	/* __IHTMLRuleStyle3_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle4_FWD_DEFINED__
#define __IHTMLRuleStyle4_FWD_DEFINED__
typedef interface IHTMLRuleStyle4 IHTMLRuleStyle4;
#endif 	/* __IHTMLRuleStyle4_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle5_FWD_DEFINED__
#define __IHTMLRuleStyle5_FWD_DEFINED__
typedef interface IHTMLRuleStyle5 IHTMLRuleStyle5;
#endif 	/* __IHTMLRuleStyle5_FWD_DEFINED__ */


#ifndef __DispHTMLStyle_FWD_DEFINED__
#define __DispHTMLStyle_FWD_DEFINED__
typedef interface DispHTMLStyle DispHTMLStyle;
#endif 	/* __DispHTMLStyle_FWD_DEFINED__ */


#ifndef __HTMLStyle_FWD_DEFINED__
#define __HTMLStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyle HTMLStyle;
#else
typedef struct HTMLStyle HTMLStyle;
#endif /* __cplusplus */

#endif 	/* __HTMLStyle_FWD_DEFINED__ */


#ifndef __DispHTMLRuleStyle_FWD_DEFINED__
#define __DispHTMLRuleStyle_FWD_DEFINED__
typedef interface DispHTMLRuleStyle DispHTMLRuleStyle;
#endif 	/* __DispHTMLRuleStyle_FWD_DEFINED__ */


#ifndef __HTMLRuleStyle_FWD_DEFINED__
#define __HTMLRuleStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLRuleStyle HTMLRuleStyle;
#else
typedef struct HTMLRuleStyle HTMLRuleStyle;
#endif /* __cplusplus */

#endif 	/* __HTMLRuleStyle_FWD_DEFINED__ */


#ifndef __IHTMLRenderStyle_FWD_DEFINED__
#define __IHTMLRenderStyle_FWD_DEFINED__
typedef interface IHTMLRenderStyle IHTMLRenderStyle;
#endif 	/* __IHTMLRenderStyle_FWD_DEFINED__ */


#ifndef __DispHTMLRenderStyle_FWD_DEFINED__
#define __DispHTMLRenderStyle_FWD_DEFINED__
typedef interface DispHTMLRenderStyle DispHTMLRenderStyle;
#endif 	/* __DispHTMLRenderStyle_FWD_DEFINED__ */


#ifndef __HTMLRenderStyle_FWD_DEFINED__
#define __HTMLRenderStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLRenderStyle HTMLRenderStyle;
#else
typedef struct HTMLRenderStyle HTMLRenderStyle;
#endif /* __cplusplus */

#endif 	/* __HTMLRenderStyle_FWD_DEFINED__ */


#ifndef __IHTMLCurrentStyle_FWD_DEFINED__
#define __IHTMLCurrentStyle_FWD_DEFINED__
typedef interface IHTMLCurrentStyle IHTMLCurrentStyle;
#endif 	/* __IHTMLCurrentStyle_FWD_DEFINED__ */


#ifndef __IHTMLCurrentStyle2_FWD_DEFINED__
#define __IHTMLCurrentStyle2_FWD_DEFINED__
typedef interface IHTMLCurrentStyle2 IHTMLCurrentStyle2;
#endif 	/* __IHTMLCurrentStyle2_FWD_DEFINED__ */


#ifndef __IHTMLCurrentStyle3_FWD_DEFINED__
#define __IHTMLCurrentStyle3_FWD_DEFINED__
typedef interface IHTMLCurrentStyle3 IHTMLCurrentStyle3;
#endif 	/* __IHTMLCurrentStyle3_FWD_DEFINED__ */


#ifndef __IHTMLCurrentStyle4_FWD_DEFINED__
#define __IHTMLCurrentStyle4_FWD_DEFINED__
typedef interface IHTMLCurrentStyle4 IHTMLCurrentStyle4;
#endif 	/* __IHTMLCurrentStyle4_FWD_DEFINED__ */


#ifndef __DispHTMLCurrentStyle_FWD_DEFINED__
#define __DispHTMLCurrentStyle_FWD_DEFINED__
typedef interface DispHTMLCurrentStyle DispHTMLCurrentStyle;
#endif 	/* __DispHTMLCurrentStyle_FWD_DEFINED__ */


#ifndef __HTMLCurrentStyle_FWD_DEFINED__
#define __HTMLCurrentStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLCurrentStyle HTMLCurrentStyle;
#else
typedef struct HTMLCurrentStyle HTMLCurrentStyle;
#endif /* __cplusplus */

#endif 	/* __HTMLCurrentStyle_FWD_DEFINED__ */


#ifndef __IHTMLElement_FWD_DEFINED__
#define __IHTMLElement_FWD_DEFINED__
typedef interface IHTMLElement IHTMLElement;
#endif 	/* __IHTMLElement_FWD_DEFINED__ */


#ifndef __IHTMLRect_FWD_DEFINED__
#define __IHTMLRect_FWD_DEFINED__
typedef interface IHTMLRect IHTMLRect;
#endif 	/* __IHTMLRect_FWD_DEFINED__ */


#ifndef __IHTMLRectCollection_FWD_DEFINED__
#define __IHTMLRectCollection_FWD_DEFINED__
typedef interface IHTMLRectCollection IHTMLRectCollection;
#endif 	/* __IHTMLRectCollection_FWD_DEFINED__ */


#ifndef __IHTMLDOMNode_FWD_DEFINED__
#define __IHTMLDOMNode_FWD_DEFINED__
typedef interface IHTMLDOMNode IHTMLDOMNode;
#endif 	/* __IHTMLDOMNode_FWD_DEFINED__ */


#ifndef __IHTMLDOMNode2_FWD_DEFINED__
#define __IHTMLDOMNode2_FWD_DEFINED__
typedef interface IHTMLDOMNode2 IHTMLDOMNode2;
#endif 	/* __IHTMLDOMNode2_FWD_DEFINED__ */


#ifndef __IHTMLDOMAttribute_FWD_DEFINED__
#define __IHTMLDOMAttribute_FWD_DEFINED__
typedef interface IHTMLDOMAttribute IHTMLDOMAttribute;
#endif 	/* __IHTMLDOMAttribute_FWD_DEFINED__ */


#ifndef __IHTMLDOMAttribute2_FWD_DEFINED__
#define __IHTMLDOMAttribute2_FWD_DEFINED__
typedef interface IHTMLDOMAttribute2 IHTMLDOMAttribute2;
#endif 	/* __IHTMLDOMAttribute2_FWD_DEFINED__ */


#ifndef __IHTMLDOMTextNode_FWD_DEFINED__
#define __IHTMLDOMTextNode_FWD_DEFINED__
typedef interface IHTMLDOMTextNode IHTMLDOMTextNode;
#endif 	/* __IHTMLDOMTextNode_FWD_DEFINED__ */


#ifndef __IHTMLDOMTextNode2_FWD_DEFINED__
#define __IHTMLDOMTextNode2_FWD_DEFINED__
typedef interface IHTMLDOMTextNode2 IHTMLDOMTextNode2;
#endif 	/* __IHTMLDOMTextNode2_FWD_DEFINED__ */


#ifndef __IHTMLDOMImplementation_FWD_DEFINED__
#define __IHTMLDOMImplementation_FWD_DEFINED__
typedef interface IHTMLDOMImplementation IHTMLDOMImplementation;
#endif 	/* __IHTMLDOMImplementation_FWD_DEFINED__ */


#ifndef __DispHTMLDOMAttribute_FWD_DEFINED__
#define __DispHTMLDOMAttribute_FWD_DEFINED__
typedef interface DispHTMLDOMAttribute DispHTMLDOMAttribute;
#endif 	/* __DispHTMLDOMAttribute_FWD_DEFINED__ */


#ifndef __HTMLDOMAttribute_FWD_DEFINED__
#define __HTMLDOMAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDOMAttribute HTMLDOMAttribute;
#else
typedef struct HTMLDOMAttribute HTMLDOMAttribute;
#endif /* __cplusplus */

#endif 	/* __HTMLDOMAttribute_FWD_DEFINED__ */


#ifndef __DispHTMLDOMTextNode_FWD_DEFINED__
#define __DispHTMLDOMTextNode_FWD_DEFINED__
typedef interface DispHTMLDOMTextNode DispHTMLDOMTextNode;
#endif 	/* __DispHTMLDOMTextNode_FWD_DEFINED__ */


#ifndef __HTMLDOMTextNode_FWD_DEFINED__
#define __HTMLDOMTextNode_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDOMTextNode HTMLDOMTextNode;
#else
typedef struct HTMLDOMTextNode HTMLDOMTextNode;
#endif /* __cplusplus */

#endif 	/* __HTMLDOMTextNode_FWD_DEFINED__ */


#ifndef __DispHTMLDOMImplementation_FWD_DEFINED__
#define __DispHTMLDOMImplementation_FWD_DEFINED__
typedef interface DispHTMLDOMImplementation DispHTMLDOMImplementation;
#endif 	/* __DispHTMLDOMImplementation_FWD_DEFINED__ */


#ifndef __HTMLDOMImplementation_FWD_DEFINED__
#define __HTMLDOMImplementation_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDOMImplementation HTMLDOMImplementation;
#else
typedef struct HTMLDOMImplementation HTMLDOMImplementation;
#endif /* __cplusplus */

#endif 	/* __HTMLDOMImplementation_FWD_DEFINED__ */


#ifndef __IHTMLAttributeCollection_FWD_DEFINED__
#define __IHTMLAttributeCollection_FWD_DEFINED__
typedef interface IHTMLAttributeCollection IHTMLAttributeCollection;
#endif 	/* __IHTMLAttributeCollection_FWD_DEFINED__ */


#ifndef __IHTMLAttributeCollection2_FWD_DEFINED__
#define __IHTMLAttributeCollection2_FWD_DEFINED__
typedef interface IHTMLAttributeCollection2 IHTMLAttributeCollection2;
#endif 	/* __IHTMLAttributeCollection2_FWD_DEFINED__ */


#ifndef __IHTMLDOMChildrenCollection_FWD_DEFINED__
#define __IHTMLDOMChildrenCollection_FWD_DEFINED__
typedef interface IHTMLDOMChildrenCollection IHTMLDOMChildrenCollection;
#endif 	/* __IHTMLDOMChildrenCollection_FWD_DEFINED__ */


#ifndef __DispHTMLAttributeCollection_FWD_DEFINED__
#define __DispHTMLAttributeCollection_FWD_DEFINED__
typedef interface DispHTMLAttributeCollection DispHTMLAttributeCollection;
#endif 	/* __DispHTMLAttributeCollection_FWD_DEFINED__ */


#ifndef __HTMLAttributeCollection_FWD_DEFINED__
#define __HTMLAttributeCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAttributeCollection HTMLAttributeCollection;
#else
typedef struct HTMLAttributeCollection HTMLAttributeCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLAttributeCollection_FWD_DEFINED__ */


#ifndef __DispDOMChildrenCollection_FWD_DEFINED__
#define __DispDOMChildrenCollection_FWD_DEFINED__
typedef interface DispDOMChildrenCollection DispDOMChildrenCollection;
#endif 	/* __DispDOMChildrenCollection_FWD_DEFINED__ */


#ifndef __DOMChildrenCollection_FWD_DEFINED__
#define __DOMChildrenCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class DOMChildrenCollection DOMChildrenCollection;
#else
typedef struct DOMChildrenCollection DOMChildrenCollection;
#endif /* __cplusplus */

#endif 	/* __DOMChildrenCollection_FWD_DEFINED__ */


#ifndef __HTMLElementEvents2_FWD_DEFINED__
#define __HTMLElementEvents2_FWD_DEFINED__
typedef interface HTMLElementEvents2 HTMLElementEvents2;
#endif 	/* __HTMLElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLElementEvents_FWD_DEFINED__
#define __HTMLElementEvents_FWD_DEFINED__
typedef interface HTMLElementEvents HTMLElementEvents;
#endif 	/* __HTMLElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLElementCollection_FWD_DEFINED__
#define __IHTMLElementCollection_FWD_DEFINED__
typedef interface IHTMLElementCollection IHTMLElementCollection;
#endif 	/* __IHTMLElementCollection_FWD_DEFINED__ */


#ifndef __IHTMLFiltersCollection_FWD_DEFINED__
#define __IHTMLFiltersCollection_FWD_DEFINED__
typedef interface IHTMLFiltersCollection IHTMLFiltersCollection;
#endif 	/* __IHTMLFiltersCollection_FWD_DEFINED__ */


#ifndef __IHTMLElement2_FWD_DEFINED__
#define __IHTMLElement2_FWD_DEFINED__
typedef interface IHTMLElement2 IHTMLElement2;
#endif 	/* __IHTMLElement2_FWD_DEFINED__ */


#ifndef __IHTMLElement3_FWD_DEFINED__
#define __IHTMLElement3_FWD_DEFINED__
typedef interface IHTMLElement3 IHTMLElement3;
#endif 	/* __IHTMLElement3_FWD_DEFINED__ */


#ifndef __IHTMLElement4_FWD_DEFINED__
#define __IHTMLElement4_FWD_DEFINED__
typedef interface IHTMLElement4 IHTMLElement4;
#endif 	/* __IHTMLElement4_FWD_DEFINED__ */


#ifndef __IHTMLElementRender_FWD_DEFINED__
#define __IHTMLElementRender_FWD_DEFINED__
typedef interface IHTMLElementRender IHTMLElementRender;
#endif 	/* __IHTMLElementRender_FWD_DEFINED__ */


#ifndef __IHTMLUniqueName_FWD_DEFINED__
#define __IHTMLUniqueName_FWD_DEFINED__
typedef interface IHTMLUniqueName IHTMLUniqueName;
#endif 	/* __IHTMLUniqueName_FWD_DEFINED__ */


#ifndef __IHTMLDatabinding_FWD_DEFINED__
#define __IHTMLDatabinding_FWD_DEFINED__
typedef interface IHTMLDatabinding IHTMLDatabinding;
#endif 	/* __IHTMLDatabinding_FWD_DEFINED__ */


#ifndef __IHTMLDocument_FWD_DEFINED__
#define __IHTMLDocument_FWD_DEFINED__
typedef interface IHTMLDocument IHTMLDocument;
#endif 	/* __IHTMLDocument_FWD_DEFINED__ */


#ifndef __IHTMLElementDefaults_FWD_DEFINED__
#define __IHTMLElementDefaults_FWD_DEFINED__
typedef interface IHTMLElementDefaults IHTMLElementDefaults;
#endif 	/* __IHTMLElementDefaults_FWD_DEFINED__ */


#ifndef __DispHTMLDefaults_FWD_DEFINED__
#define __DispHTMLDefaults_FWD_DEFINED__
typedef interface DispHTMLDefaults DispHTMLDefaults;
#endif 	/* __DispHTMLDefaults_FWD_DEFINED__ */


#ifndef __HTMLDefaults_FWD_DEFINED__
#define __HTMLDefaults_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDefaults HTMLDefaults;
#else
typedef struct HTMLDefaults HTMLDefaults;
#endif /* __cplusplus */

#endif 	/* __HTMLDefaults_FWD_DEFINED__ */


#ifndef __IHTCDefaultDispatch_FWD_DEFINED__
#define __IHTCDefaultDispatch_FWD_DEFINED__
typedef interface IHTCDefaultDispatch IHTCDefaultDispatch;
#endif 	/* __IHTCDefaultDispatch_FWD_DEFINED__ */


#ifndef __IHTCPropertyBehavior_FWD_DEFINED__
#define __IHTCPropertyBehavior_FWD_DEFINED__
typedef interface IHTCPropertyBehavior IHTCPropertyBehavior;
#endif 	/* __IHTCPropertyBehavior_FWD_DEFINED__ */


#ifndef __IHTCMethodBehavior_FWD_DEFINED__
#define __IHTCMethodBehavior_FWD_DEFINED__
typedef interface IHTCMethodBehavior IHTCMethodBehavior;
#endif 	/* __IHTCMethodBehavior_FWD_DEFINED__ */


#ifndef __IHTCEventBehavior_FWD_DEFINED__
#define __IHTCEventBehavior_FWD_DEFINED__
typedef interface IHTCEventBehavior IHTCEventBehavior;
#endif 	/* __IHTCEventBehavior_FWD_DEFINED__ */


#ifndef __IHTCAttachBehavior_FWD_DEFINED__
#define __IHTCAttachBehavior_FWD_DEFINED__
typedef interface IHTCAttachBehavior IHTCAttachBehavior;
#endif 	/* __IHTCAttachBehavior_FWD_DEFINED__ */


#ifndef __IHTCAttachBehavior2_FWD_DEFINED__
#define __IHTCAttachBehavior2_FWD_DEFINED__
typedef interface IHTCAttachBehavior2 IHTCAttachBehavior2;
#endif 	/* __IHTCAttachBehavior2_FWD_DEFINED__ */


#ifndef __IHTCDescBehavior_FWD_DEFINED__
#define __IHTCDescBehavior_FWD_DEFINED__
typedef interface IHTCDescBehavior IHTCDescBehavior;
#endif 	/* __IHTCDescBehavior_FWD_DEFINED__ */


#ifndef __DispHTCDefaultDispatch_FWD_DEFINED__
#define __DispHTCDefaultDispatch_FWD_DEFINED__
typedef interface DispHTCDefaultDispatch DispHTCDefaultDispatch;
#endif 	/* __DispHTCDefaultDispatch_FWD_DEFINED__ */


#ifndef __HTCDefaultDispatch_FWD_DEFINED__
#define __HTCDefaultDispatch_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCDefaultDispatch HTCDefaultDispatch;
#else
typedef struct HTCDefaultDispatch HTCDefaultDispatch;
#endif /* __cplusplus */

#endif 	/* __HTCDefaultDispatch_FWD_DEFINED__ */


#ifndef __DispHTCPropertyBehavior_FWD_DEFINED__
#define __DispHTCPropertyBehavior_FWD_DEFINED__
typedef interface DispHTCPropertyBehavior DispHTCPropertyBehavior;
#endif 	/* __DispHTCPropertyBehavior_FWD_DEFINED__ */


#ifndef __HTCPropertyBehavior_FWD_DEFINED__
#define __HTCPropertyBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCPropertyBehavior HTCPropertyBehavior;
#else
typedef struct HTCPropertyBehavior HTCPropertyBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCPropertyBehavior_FWD_DEFINED__ */


#ifndef __DispHTCMethodBehavior_FWD_DEFINED__
#define __DispHTCMethodBehavior_FWD_DEFINED__
typedef interface DispHTCMethodBehavior DispHTCMethodBehavior;
#endif 	/* __DispHTCMethodBehavior_FWD_DEFINED__ */


#ifndef __HTCMethodBehavior_FWD_DEFINED__
#define __HTCMethodBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCMethodBehavior HTCMethodBehavior;
#else
typedef struct HTCMethodBehavior HTCMethodBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCMethodBehavior_FWD_DEFINED__ */


#ifndef __DispHTCEventBehavior_FWD_DEFINED__
#define __DispHTCEventBehavior_FWD_DEFINED__
typedef interface DispHTCEventBehavior DispHTCEventBehavior;
#endif 	/* __DispHTCEventBehavior_FWD_DEFINED__ */


#ifndef __HTCEventBehavior_FWD_DEFINED__
#define __HTCEventBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCEventBehavior HTCEventBehavior;
#else
typedef struct HTCEventBehavior HTCEventBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCEventBehavior_FWD_DEFINED__ */


#ifndef __DispHTCAttachBehavior_FWD_DEFINED__
#define __DispHTCAttachBehavior_FWD_DEFINED__
typedef interface DispHTCAttachBehavior DispHTCAttachBehavior;
#endif 	/* __DispHTCAttachBehavior_FWD_DEFINED__ */


#ifndef __HTCAttachBehavior_FWD_DEFINED__
#define __HTCAttachBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCAttachBehavior HTCAttachBehavior;
#else
typedef struct HTCAttachBehavior HTCAttachBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCAttachBehavior_FWD_DEFINED__ */


#ifndef __DispHTCDescBehavior_FWD_DEFINED__
#define __DispHTCDescBehavior_FWD_DEFINED__
typedef interface DispHTCDescBehavior DispHTCDescBehavior;
#endif 	/* __DispHTCDescBehavior_FWD_DEFINED__ */


#ifndef __HTCDescBehavior_FWD_DEFINED__
#define __HTCDescBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCDescBehavior HTCDescBehavior;
#else
typedef struct HTCDescBehavior HTCDescBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCDescBehavior_FWD_DEFINED__ */


#ifndef __IHTMLUrnCollection_FWD_DEFINED__
#define __IHTMLUrnCollection_FWD_DEFINED__
typedef interface IHTMLUrnCollection IHTMLUrnCollection;
#endif 	/* __IHTMLUrnCollection_FWD_DEFINED__ */


#ifndef __HTMLUrnCollection_FWD_DEFINED__
#define __HTMLUrnCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLUrnCollection HTMLUrnCollection;
#else
typedef struct HTMLUrnCollection HTMLUrnCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLUrnCollection_FWD_DEFINED__ */


#ifndef __IHTMLGenericElement_FWD_DEFINED__
#define __IHTMLGenericElement_FWD_DEFINED__
typedef interface IHTMLGenericElement IHTMLGenericElement;
#endif 	/* __IHTMLGenericElement_FWD_DEFINED__ */


#ifndef __DispHTMLGenericElement_FWD_DEFINED__
#define __DispHTMLGenericElement_FWD_DEFINED__
typedef interface DispHTMLGenericElement DispHTMLGenericElement;
#endif 	/* __DispHTMLGenericElement_FWD_DEFINED__ */


#ifndef __HTMLGenericElement_FWD_DEFINED__
#define __HTMLGenericElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLGenericElement HTMLGenericElement;
#else
typedef struct HTMLGenericElement HTMLGenericElement;
#endif /* __cplusplus */

#endif 	/* __HTMLGenericElement_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetRule_FWD_DEFINED__
#define __IHTMLStyleSheetRule_FWD_DEFINED__
typedef interface IHTMLStyleSheetRule IHTMLStyleSheetRule;
#endif 	/* __IHTMLStyleSheetRule_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetRulesCollection_FWD_DEFINED__
#define __IHTMLStyleSheetRulesCollection_FWD_DEFINED__
typedef interface IHTMLStyleSheetRulesCollection IHTMLStyleSheetRulesCollection;
#endif 	/* __IHTMLStyleSheetRulesCollection_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetRule_FWD_DEFINED__
#define __HTMLStyleSheetRule_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetRule HTMLStyleSheetRule;
#else
typedef struct HTMLStyleSheetRule HTMLStyleSheetRule;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetRule_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetRulesCollection_FWD_DEFINED__
#define __HTMLStyleSheetRulesCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetRulesCollection HTMLStyleSheetRulesCollection;
#else
typedef struct HTMLStyleSheetRulesCollection HTMLStyleSheetRulesCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetRulesCollection_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetPage_FWD_DEFINED__
#define __IHTMLStyleSheetPage_FWD_DEFINED__
typedef interface IHTMLStyleSheetPage IHTMLStyleSheetPage;
#endif 	/* __IHTMLStyleSheetPage_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetPagesCollection_FWD_DEFINED__
#define __IHTMLStyleSheetPagesCollection_FWD_DEFINED__
typedef interface IHTMLStyleSheetPagesCollection IHTMLStyleSheetPagesCollection;
#endif 	/* __IHTMLStyleSheetPagesCollection_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetPage_FWD_DEFINED__
#define __HTMLStyleSheetPage_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetPage HTMLStyleSheetPage;
#else
typedef struct HTMLStyleSheetPage HTMLStyleSheetPage;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetPage_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetPagesCollection_FWD_DEFINED__
#define __HTMLStyleSheetPagesCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetPagesCollection HTMLStyleSheetPagesCollection;
#else
typedef struct HTMLStyleSheetPagesCollection HTMLStyleSheetPagesCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetPagesCollection_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetsCollection_FWD_DEFINED__
#define __IHTMLStyleSheetsCollection_FWD_DEFINED__
typedef interface IHTMLStyleSheetsCollection IHTMLStyleSheetsCollection;
#endif 	/* __IHTMLStyleSheetsCollection_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheet_FWD_DEFINED__
#define __IHTMLStyleSheet_FWD_DEFINED__
typedef interface IHTMLStyleSheet IHTMLStyleSheet;
#endif 	/* __IHTMLStyleSheet_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheet2_FWD_DEFINED__
#define __IHTMLStyleSheet2_FWD_DEFINED__
typedef interface IHTMLStyleSheet2 IHTMLStyleSheet2;
#endif 	/* __IHTMLStyleSheet2_FWD_DEFINED__ */


#ifndef __DispHTMLStyleSheet_FWD_DEFINED__
#define __DispHTMLStyleSheet_FWD_DEFINED__
typedef interface DispHTMLStyleSheet DispHTMLStyleSheet;
#endif 	/* __DispHTMLStyleSheet_FWD_DEFINED__ */


#ifndef __HTMLStyleSheet_FWD_DEFINED__
#define __HTMLStyleSheet_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheet HTMLStyleSheet;
#else
typedef struct HTMLStyleSheet HTMLStyleSheet;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheet_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetsCollection_FWD_DEFINED__
#define __HTMLStyleSheetsCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetsCollection HTMLStyleSheetsCollection;
#else
typedef struct HTMLStyleSheetsCollection HTMLStyleSheetsCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetsCollection_FWD_DEFINED__ */


#ifndef __HTMLLinkElementEvents2_FWD_DEFINED__
#define __HTMLLinkElementEvents2_FWD_DEFINED__
typedef interface HTMLLinkElementEvents2 HTMLLinkElementEvents2;
#endif 	/* __HTMLLinkElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLLinkElementEvents_FWD_DEFINED__
#define __HTMLLinkElementEvents_FWD_DEFINED__
typedef interface HTMLLinkElementEvents HTMLLinkElementEvents;
#endif 	/* __HTMLLinkElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLLinkElement_FWD_DEFINED__
#define __IHTMLLinkElement_FWD_DEFINED__
typedef interface IHTMLLinkElement IHTMLLinkElement;
#endif 	/* __IHTMLLinkElement_FWD_DEFINED__ */


#ifndef __IHTMLLinkElement2_FWD_DEFINED__
#define __IHTMLLinkElement2_FWD_DEFINED__
typedef interface IHTMLLinkElement2 IHTMLLinkElement2;
#endif 	/* __IHTMLLinkElement2_FWD_DEFINED__ */


#ifndef __IHTMLLinkElement3_FWD_DEFINED__
#define __IHTMLLinkElement3_FWD_DEFINED__
typedef interface IHTMLLinkElement3 IHTMLLinkElement3;
#endif 	/* __IHTMLLinkElement3_FWD_DEFINED__ */


#ifndef __DispHTMLLinkElement_FWD_DEFINED__
#define __DispHTMLLinkElement_FWD_DEFINED__
typedef interface DispHTMLLinkElement DispHTMLLinkElement;
#endif 	/* __DispHTMLLinkElement_FWD_DEFINED__ */


#ifndef __HTMLLinkElement_FWD_DEFINED__
#define __HTMLLinkElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLinkElement HTMLLinkElement;
#else
typedef struct HTMLLinkElement HTMLLinkElement;
#endif /* __cplusplus */

#endif 	/* __HTMLLinkElement_FWD_DEFINED__ */


#ifndef __IHTMLTxtRange_FWD_DEFINED__
#define __IHTMLTxtRange_FWD_DEFINED__
typedef interface IHTMLTxtRange IHTMLTxtRange;
#endif 	/* __IHTMLTxtRange_FWD_DEFINED__ */


#ifndef __IHTMLTextRangeMetrics_FWD_DEFINED__
#define __IHTMLTextRangeMetrics_FWD_DEFINED__
typedef interface IHTMLTextRangeMetrics IHTMLTextRangeMetrics;
#endif 	/* __IHTMLTextRangeMetrics_FWD_DEFINED__ */


#ifndef __IHTMLTextRangeMetrics2_FWD_DEFINED__
#define __IHTMLTextRangeMetrics2_FWD_DEFINED__
typedef interface IHTMLTextRangeMetrics2 IHTMLTextRangeMetrics2;
#endif 	/* __IHTMLTextRangeMetrics2_FWD_DEFINED__ */


#ifndef __IHTMLTxtRangeCollection_FWD_DEFINED__
#define __IHTMLTxtRangeCollection_FWD_DEFINED__
typedef interface IHTMLTxtRangeCollection IHTMLTxtRangeCollection;
#endif 	/* __IHTMLTxtRangeCollection_FWD_DEFINED__ */


#ifndef __HTMLFormElementEvents2_FWD_DEFINED__
#define __HTMLFormElementEvents2_FWD_DEFINED__
typedef interface HTMLFormElementEvents2 HTMLFormElementEvents2;
#endif 	/* __HTMLFormElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLFormElementEvents_FWD_DEFINED__
#define __HTMLFormElementEvents_FWD_DEFINED__
typedef interface HTMLFormElementEvents HTMLFormElementEvents;
#endif 	/* __HTMLFormElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLFormElement_FWD_DEFINED__
#define __IHTMLFormElement_FWD_DEFINED__
typedef interface IHTMLFormElement IHTMLFormElement;
#endif 	/* __IHTMLFormElement_FWD_DEFINED__ */


#ifndef __IHTMLFormElement2_FWD_DEFINED__
#define __IHTMLFormElement2_FWD_DEFINED__
typedef interface IHTMLFormElement2 IHTMLFormElement2;
#endif 	/* __IHTMLFormElement2_FWD_DEFINED__ */


#ifndef __IHTMLFormElement3_FWD_DEFINED__
#define __IHTMLFormElement3_FWD_DEFINED__
typedef interface IHTMLFormElement3 IHTMLFormElement3;
#endif 	/* __IHTMLFormElement3_FWD_DEFINED__ */


#ifndef __IHTMLSubmitData_FWD_DEFINED__
#define __IHTMLSubmitData_FWD_DEFINED__
typedef interface IHTMLSubmitData IHTMLSubmitData;
#endif 	/* __IHTMLSubmitData_FWD_DEFINED__ */


#ifndef __DispHTMLFormElement_FWD_DEFINED__
#define __DispHTMLFormElement_FWD_DEFINED__
typedef interface DispHTMLFormElement DispHTMLFormElement;
#endif 	/* __DispHTMLFormElement_FWD_DEFINED__ */


#ifndef __HTMLFormElement_FWD_DEFINED__
#define __HTMLFormElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFormElement HTMLFormElement;
#else
typedef struct HTMLFormElement HTMLFormElement;
#endif /* __cplusplus */

#endif 	/* __HTMLFormElement_FWD_DEFINED__ */


#ifndef __HTMLControlElementEvents2_FWD_DEFINED__
#define __HTMLControlElementEvents2_FWD_DEFINED__
typedef interface HTMLControlElementEvents2 HTMLControlElementEvents2;
#endif 	/* __HTMLControlElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLControlElementEvents_FWD_DEFINED__
#define __HTMLControlElementEvents_FWD_DEFINED__
typedef interface HTMLControlElementEvents HTMLControlElementEvents;
#endif 	/* __HTMLControlElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLControlElement_FWD_DEFINED__
#define __IHTMLControlElement_FWD_DEFINED__
typedef interface IHTMLControlElement IHTMLControlElement;
#endif 	/* __IHTMLControlElement_FWD_DEFINED__ */


#ifndef __IHTMLTextElement_FWD_DEFINED__
#define __IHTMLTextElement_FWD_DEFINED__
typedef interface IHTMLTextElement IHTMLTextElement;
#endif 	/* __IHTMLTextElement_FWD_DEFINED__ */


#ifndef __DispHTMLTextElement_FWD_DEFINED__
#define __DispHTMLTextElement_FWD_DEFINED__
typedef interface DispHTMLTextElement DispHTMLTextElement;
#endif 	/* __DispHTMLTextElement_FWD_DEFINED__ */


#ifndef __HTMLTextElement_FWD_DEFINED__
#define __HTMLTextElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTextElement HTMLTextElement;
#else
typedef struct HTMLTextElement HTMLTextElement;
#endif /* __cplusplus */

#endif 	/* __HTMLTextElement_FWD_DEFINED__ */


#ifndef __HTMLTextContainerEvents2_FWD_DEFINED__
#define __HTMLTextContainerEvents2_FWD_DEFINED__
typedef interface HTMLTextContainerEvents2 HTMLTextContainerEvents2;
#endif 	/* __HTMLTextContainerEvents2_FWD_DEFINED__ */


#ifndef __HTMLTextContainerEvents_FWD_DEFINED__
#define __HTMLTextContainerEvents_FWD_DEFINED__
typedef interface HTMLTextContainerEvents HTMLTextContainerEvents;
#endif 	/* __HTMLTextContainerEvents_FWD_DEFINED__ */


#ifndef __IHTMLTextContainer_FWD_DEFINED__
#define __IHTMLTextContainer_FWD_DEFINED__
typedef interface IHTMLTextContainer IHTMLTextContainer;
#endif 	/* __IHTMLTextContainer_FWD_DEFINED__ */


#ifndef __IHTMLControlRange_FWD_DEFINED__
#define __IHTMLControlRange_FWD_DEFINED__
typedef interface IHTMLControlRange IHTMLControlRange;
#endif 	/* __IHTMLControlRange_FWD_DEFINED__ */


#ifndef __IHTMLControlRange2_FWD_DEFINED__
#define __IHTMLControlRange2_FWD_DEFINED__
typedef interface IHTMLControlRange2 IHTMLControlRange2;
#endif 	/* __IHTMLControlRange2_FWD_DEFINED__ */


#ifndef __HTMLImgEvents2_FWD_DEFINED__
#define __HTMLImgEvents2_FWD_DEFINED__
typedef interface HTMLImgEvents2 HTMLImgEvents2;
#endif 	/* __HTMLImgEvents2_FWD_DEFINED__ */


#ifndef __HTMLImgEvents_FWD_DEFINED__
#define __HTMLImgEvents_FWD_DEFINED__
typedef interface HTMLImgEvents HTMLImgEvents;
#endif 	/* __HTMLImgEvents_FWD_DEFINED__ */


#ifndef __IHTMLImgElement_FWD_DEFINED__
#define __IHTMLImgElement_FWD_DEFINED__
typedef interface IHTMLImgElement IHTMLImgElement;
#endif 	/* __IHTMLImgElement_FWD_DEFINED__ */


#ifndef __IHTMLImgElement2_FWD_DEFINED__
#define __IHTMLImgElement2_FWD_DEFINED__
typedef interface IHTMLImgElement2 IHTMLImgElement2;
#endif 	/* __IHTMLImgElement2_FWD_DEFINED__ */


#ifndef __IHTMLImageElementFactory_FWD_DEFINED__
#define __IHTMLImageElementFactory_FWD_DEFINED__
typedef interface IHTMLImageElementFactory IHTMLImageElementFactory;
#endif 	/* __IHTMLImageElementFactory_FWD_DEFINED__ */


#ifndef __DispHTMLImg_FWD_DEFINED__
#define __DispHTMLImg_FWD_DEFINED__
typedef interface DispHTMLImg DispHTMLImg;
#endif 	/* __DispHTMLImg_FWD_DEFINED__ */


#ifndef __HTMLImg_FWD_DEFINED__
#define __HTMLImg_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLImg HTMLImg;
#else
typedef struct HTMLImg HTMLImg;
#endif /* __cplusplus */

#endif 	/* __HTMLImg_FWD_DEFINED__ */


#ifndef __HTMLImageElementFactory_FWD_DEFINED__
#define __HTMLImageElementFactory_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLImageElementFactory HTMLImageElementFactory;
#else
typedef struct HTMLImageElementFactory HTMLImageElementFactory;
#endif /* __cplusplus */

#endif 	/* __HTMLImageElementFactory_FWD_DEFINED__ */


#ifndef __IHTMLXMLHttpRequest_FWD_DEFINED__
#define __IHTMLXMLHttpRequest_FWD_DEFINED__
typedef interface IHTMLXMLHttpRequest IHTMLXMLHttpRequest;
#endif 	/* __IHTMLXMLHttpRequest_FWD_DEFINED__ */


#ifndef __IHTMLXMLHttpRequestFactory_FWD_DEFINED__
#define __IHTMLXMLHttpRequestFactory_FWD_DEFINED__
typedef interface IHTMLXMLHttpRequestFactory IHTMLXMLHttpRequestFactory;
#endif 	/* __IHTMLXMLHttpRequestFactory_FWD_DEFINED__ */


#ifndef __DispHTMLXMLHttpRequest_FWD_DEFINED__
#define __DispHTMLXMLHttpRequest_FWD_DEFINED__
typedef interface DispHTMLXMLHttpRequest DispHTMLXMLHttpRequest;
#endif 	/* __DispHTMLXMLHttpRequest_FWD_DEFINED__ */


#ifndef __HTMLXMLHttpRequest_FWD_DEFINED__
#define __HTMLXMLHttpRequest_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLXMLHttpRequest HTMLXMLHttpRequest;
#else
typedef struct HTMLXMLHttpRequest HTMLXMLHttpRequest;
#endif /* __cplusplus */

#endif 	/* __HTMLXMLHttpRequest_FWD_DEFINED__ */


#ifndef __HTMLXMLHttpRequestFactory_FWD_DEFINED__
#define __HTMLXMLHttpRequestFactory_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLXMLHttpRequestFactory HTMLXMLHttpRequestFactory;
#else
typedef struct HTMLXMLHttpRequestFactory HTMLXMLHttpRequestFactory;
#endif /* __cplusplus */

#endif 	/* __HTMLXMLHttpRequestFactory_FWD_DEFINED__ */


#ifndef __IHTMLBodyElement_FWD_DEFINED__
#define __IHTMLBodyElement_FWD_DEFINED__
typedef interface IHTMLBodyElement IHTMLBodyElement;
#endif 	/* __IHTMLBodyElement_FWD_DEFINED__ */


#ifndef __IHTMLBodyElement2_FWD_DEFINED__
#define __IHTMLBodyElement2_FWD_DEFINED__
typedef interface IHTMLBodyElement2 IHTMLBodyElement2;
#endif 	/* __IHTMLBodyElement2_FWD_DEFINED__ */


#ifndef __DispHTMLBody_FWD_DEFINED__
#define __DispHTMLBody_FWD_DEFINED__
typedef interface DispHTMLBody DispHTMLBody;
#endif 	/* __DispHTMLBody_FWD_DEFINED__ */


#ifndef __HTMLBody_FWD_DEFINED__
#define __HTMLBody_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBody HTMLBody;
#else
typedef struct HTMLBody HTMLBody;
#endif /* __cplusplus */

#endif 	/* __HTMLBody_FWD_DEFINED__ */


#ifndef __IHTMLFontElement_FWD_DEFINED__
#define __IHTMLFontElement_FWD_DEFINED__
typedef interface IHTMLFontElement IHTMLFontElement;
#endif 	/* __IHTMLFontElement_FWD_DEFINED__ */


#ifndef __DispHTMLFontElement_FWD_DEFINED__
#define __DispHTMLFontElement_FWD_DEFINED__
typedef interface DispHTMLFontElement DispHTMLFontElement;
#endif 	/* __DispHTMLFontElement_FWD_DEFINED__ */


#ifndef __HTMLFontElement_FWD_DEFINED__
#define __HTMLFontElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFontElement HTMLFontElement;
#else
typedef struct HTMLFontElement HTMLFontElement;
#endif /* __cplusplus */

#endif 	/* __HTMLFontElement_FWD_DEFINED__ */


#ifndef __HTMLAnchorEvents2_FWD_DEFINED__
#define __HTMLAnchorEvents2_FWD_DEFINED__
typedef interface HTMLAnchorEvents2 HTMLAnchorEvents2;
#endif 	/* __HTMLAnchorEvents2_FWD_DEFINED__ */


#ifndef __HTMLAnchorEvents_FWD_DEFINED__
#define __HTMLAnchorEvents_FWD_DEFINED__
typedef interface HTMLAnchorEvents HTMLAnchorEvents;
#endif 	/* __HTMLAnchorEvents_FWD_DEFINED__ */


#ifndef __IHTMLAnchorElement_FWD_DEFINED__
#define __IHTMLAnchorElement_FWD_DEFINED__
typedef interface IHTMLAnchorElement IHTMLAnchorElement;
#endif 	/* __IHTMLAnchorElement_FWD_DEFINED__ */


#ifndef __IHTMLAnchorElement2_FWD_DEFINED__
#define __IHTMLAnchorElement2_FWD_DEFINED__
typedef interface IHTMLAnchorElement2 IHTMLAnchorElement2;
#endif 	/* __IHTMLAnchorElement2_FWD_DEFINED__ */


#ifndef __DispHTMLAnchorElement_FWD_DEFINED__
#define __DispHTMLAnchorElement_FWD_DEFINED__
typedef interface DispHTMLAnchorElement DispHTMLAnchorElement;
#endif 	/* __DispHTMLAnchorElement_FWD_DEFINED__ */


#ifndef __HTMLAnchorElement_FWD_DEFINED__
#define __HTMLAnchorElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAnchorElement HTMLAnchorElement;
#else
typedef struct HTMLAnchorElement HTMLAnchorElement;
#endif /* __cplusplus */

#endif 	/* __HTMLAnchorElement_FWD_DEFINED__ */


#ifndef __HTMLLabelEvents2_FWD_DEFINED__
#define __HTMLLabelEvents2_FWD_DEFINED__
typedef interface HTMLLabelEvents2 HTMLLabelEvents2;
#endif 	/* __HTMLLabelEvents2_FWD_DEFINED__ */


#ifndef __HTMLLabelEvents_FWD_DEFINED__
#define __HTMLLabelEvents_FWD_DEFINED__
typedef interface HTMLLabelEvents HTMLLabelEvents;
#endif 	/* __HTMLLabelEvents_FWD_DEFINED__ */


#ifndef __IHTMLLabelElement_FWD_DEFINED__
#define __IHTMLLabelElement_FWD_DEFINED__
typedef interface IHTMLLabelElement IHTMLLabelElement;
#endif 	/* __IHTMLLabelElement_FWD_DEFINED__ */


#ifndef __IHTMLLabelElement2_FWD_DEFINED__
#define __IHTMLLabelElement2_FWD_DEFINED__
typedef interface IHTMLLabelElement2 IHTMLLabelElement2;
#endif 	/* __IHTMLLabelElement2_FWD_DEFINED__ */


#ifndef __DispHTMLLabelElement_FWD_DEFINED__
#define __DispHTMLLabelElement_FWD_DEFINED__
typedef interface DispHTMLLabelElement DispHTMLLabelElement;
#endif 	/* __DispHTMLLabelElement_FWD_DEFINED__ */


#ifndef __HTMLLabelElement_FWD_DEFINED__
#define __HTMLLabelElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLabelElement HTMLLabelElement;
#else
typedef struct HTMLLabelElement HTMLLabelElement;
#endif /* __cplusplus */

#endif 	/* __HTMLLabelElement_FWD_DEFINED__ */


#ifndef __IHTMLListElement_FWD_DEFINED__
#define __IHTMLListElement_FWD_DEFINED__
typedef interface IHTMLListElement IHTMLListElement;
#endif 	/* __IHTMLListElement_FWD_DEFINED__ */


#ifndef __IHTMLListElement2_FWD_DEFINED__
#define __IHTMLListElement2_FWD_DEFINED__
typedef interface IHTMLListElement2 IHTMLListElement2;
#endif 	/* __IHTMLListElement2_FWD_DEFINED__ */


#ifndef __DispHTMLListElement_FWD_DEFINED__
#define __DispHTMLListElement_FWD_DEFINED__
typedef interface DispHTMLListElement DispHTMLListElement;
#endif 	/* __DispHTMLListElement_FWD_DEFINED__ */


#ifndef __HTMLListElement_FWD_DEFINED__
#define __HTMLListElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLListElement HTMLListElement;
#else
typedef struct HTMLListElement HTMLListElement;
#endif /* __cplusplus */

#endif 	/* __HTMLListElement_FWD_DEFINED__ */


#ifndef __IHTMLUListElement_FWD_DEFINED__
#define __IHTMLUListElement_FWD_DEFINED__
typedef interface IHTMLUListElement IHTMLUListElement;
#endif 	/* __IHTMLUListElement_FWD_DEFINED__ */


#ifndef __DispHTMLUListElement_FWD_DEFINED__
#define __DispHTMLUListElement_FWD_DEFINED__
typedef interface DispHTMLUListElement DispHTMLUListElement;
#endif 	/* __DispHTMLUListElement_FWD_DEFINED__ */


#ifndef __HTMLUListElement_FWD_DEFINED__
#define __HTMLUListElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLUListElement HTMLUListElement;
#else
typedef struct HTMLUListElement HTMLUListElement;
#endif /* __cplusplus */

#endif 	/* __HTMLUListElement_FWD_DEFINED__ */


#ifndef __IHTMLOListElement_FWD_DEFINED__
#define __IHTMLOListElement_FWD_DEFINED__
typedef interface IHTMLOListElement IHTMLOListElement;
#endif 	/* __IHTMLOListElement_FWD_DEFINED__ */


#ifndef __DispHTMLOListElement_FWD_DEFINED__
#define __DispHTMLOListElement_FWD_DEFINED__
typedef interface DispHTMLOListElement DispHTMLOListElement;
#endif 	/* __DispHTMLOListElement_FWD_DEFINED__ */


#ifndef __HTMLOListElement_FWD_DEFINED__
#define __HTMLOListElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLOListElement HTMLOListElement;
#else
typedef struct HTMLOListElement HTMLOListElement;
#endif /* __cplusplus */

#endif 	/* __HTMLOListElement_FWD_DEFINED__ */


#ifndef __IHTMLLIElement_FWD_DEFINED__
#define __IHTMLLIElement_FWD_DEFINED__
typedef interface IHTMLLIElement IHTMLLIElement;
#endif 	/* __IHTMLLIElement_FWD_DEFINED__ */


#ifndef __DispHTMLLIElement_FWD_DEFINED__
#define __DispHTMLLIElement_FWD_DEFINED__
typedef interface DispHTMLLIElement DispHTMLLIElement;
#endif 	/* __DispHTMLLIElement_FWD_DEFINED__ */


#ifndef __HTMLLIElement_FWD_DEFINED__
#define __HTMLLIElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLIElement HTMLLIElement;
#else
typedef struct HTMLLIElement HTMLLIElement;
#endif /* __cplusplus */

#endif 	/* __HTMLLIElement_FWD_DEFINED__ */


#ifndef __IHTMLBlockElement_FWD_DEFINED__
#define __IHTMLBlockElement_FWD_DEFINED__
typedef interface IHTMLBlockElement IHTMLBlockElement;
#endif 	/* __IHTMLBlockElement_FWD_DEFINED__ */


#ifndef __IHTMLBlockElement2_FWD_DEFINED__
#define __IHTMLBlockElement2_FWD_DEFINED__
typedef interface IHTMLBlockElement2 IHTMLBlockElement2;
#endif 	/* __IHTMLBlockElement2_FWD_DEFINED__ */


#ifndef __DispHTMLBlockElement_FWD_DEFINED__
#define __DispHTMLBlockElement_FWD_DEFINED__
typedef interface DispHTMLBlockElement DispHTMLBlockElement;
#endif 	/* __DispHTMLBlockElement_FWD_DEFINED__ */


#ifndef __HTMLBlockElement_FWD_DEFINED__
#define __HTMLBlockElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBlockElement HTMLBlockElement;
#else
typedef struct HTMLBlockElement HTMLBlockElement;
#endif /* __cplusplus */

#endif 	/* __HTMLBlockElement_FWD_DEFINED__ */


#ifndef __IHTMLDivElement_FWD_DEFINED__
#define __IHTMLDivElement_FWD_DEFINED__
typedef interface IHTMLDivElement IHTMLDivElement;
#endif 	/* __IHTMLDivElement_FWD_DEFINED__ */


#ifndef __DispHTMLDivElement_FWD_DEFINED__
#define __DispHTMLDivElement_FWD_DEFINED__
typedef interface DispHTMLDivElement DispHTMLDivElement;
#endif 	/* __DispHTMLDivElement_FWD_DEFINED__ */


#ifndef __HTMLDivElement_FWD_DEFINED__
#define __HTMLDivElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDivElement HTMLDivElement;
#else
typedef struct HTMLDivElement HTMLDivElement;
#endif /* __cplusplus */

#endif 	/* __HTMLDivElement_FWD_DEFINED__ */


#ifndef __IHTMLDDElement_FWD_DEFINED__
#define __IHTMLDDElement_FWD_DEFINED__
typedef interface IHTMLDDElement IHTMLDDElement;
#endif 	/* __IHTMLDDElement_FWD_DEFINED__ */


#ifndef __DispHTMLDDElement_FWD_DEFINED__
#define __DispHTMLDDElement_FWD_DEFINED__
typedef interface DispHTMLDDElement DispHTMLDDElement;
#endif 	/* __DispHTMLDDElement_FWD_DEFINED__ */


#ifndef __HTMLDDElement_FWD_DEFINED__
#define __HTMLDDElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDDElement HTMLDDElement;
#else
typedef struct HTMLDDElement HTMLDDElement;
#endif /* __cplusplus */

#endif 	/* __HTMLDDElement_FWD_DEFINED__ */


#ifndef __IHTMLDTElement_FWD_DEFINED__
#define __IHTMLDTElement_FWD_DEFINED__
typedef interface IHTMLDTElement IHTMLDTElement;
#endif 	/* __IHTMLDTElement_FWD_DEFINED__ */


#ifndef __DispHTMLDTElement_FWD_DEFINED__
#define __DispHTMLDTElement_FWD_DEFINED__
typedef interface DispHTMLDTElement DispHTMLDTElement;
#endif 	/* __DispHTMLDTElement_FWD_DEFINED__ */


#ifndef __HTMLDTElement_FWD_DEFINED__
#define __HTMLDTElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDTElement HTMLDTElement;
#else
typedef struct HTMLDTElement HTMLDTElement;
#endif /* __cplusplus */

#endif 	/* __HTMLDTElement_FWD_DEFINED__ */


#ifndef __IHTMLBRElement_FWD_DEFINED__
#define __IHTMLBRElement_FWD_DEFINED__
typedef interface IHTMLBRElement IHTMLBRElement;
#endif 	/* __IHTMLBRElement_FWD_DEFINED__ */


#ifndef __DispHTMLBRElement_FWD_DEFINED__
#define __DispHTMLBRElement_FWD_DEFINED__
typedef interface DispHTMLBRElement DispHTMLBRElement;
#endif 	/* __DispHTMLBRElement_FWD_DEFINED__ */


#ifndef __HTMLBRElement_FWD_DEFINED__
#define __HTMLBRElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBRElement HTMLBRElement;
#else
typedef struct HTMLBRElement HTMLBRElement;
#endif /* __cplusplus */

#endif 	/* __HTMLBRElement_FWD_DEFINED__ */


#ifndef __IHTMLDListElement_FWD_DEFINED__
#define __IHTMLDListElement_FWD_DEFINED__
typedef interface IHTMLDListElement IHTMLDListElement;
#endif 	/* __IHTMLDListElement_FWD_DEFINED__ */


#ifndef __DispHTMLDListElement_FWD_DEFINED__
#define __DispHTMLDListElement_FWD_DEFINED__
typedef interface DispHTMLDListElement DispHTMLDListElement;
#endif 	/* __DispHTMLDListElement_FWD_DEFINED__ */


#ifndef __HTMLDListElement_FWD_DEFINED__
#define __HTMLDListElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDListElement HTMLDListElement;
#else
typedef struct HTMLDListElement HTMLDListElement;
#endif /* __cplusplus */

#endif 	/* __HTMLDListElement_FWD_DEFINED__ */


#ifndef __IHTMLHRElement_FWD_DEFINED__
#define __IHTMLHRElement_FWD_DEFINED__
typedef interface IHTMLHRElement IHTMLHRElement;
#endif 	/* __IHTMLHRElement_FWD_DEFINED__ */


#ifndef __DispHTMLHRElement_FWD_DEFINED__
#define __DispHTMLHRElement_FWD_DEFINED__
typedef interface DispHTMLHRElement DispHTMLHRElement;
#endif 	/* __DispHTMLHRElement_FWD_DEFINED__ */


#ifndef __HTMLHRElement_FWD_DEFINED__
#define __HTMLHRElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHRElement HTMLHRElement;
#else
typedef struct HTMLHRElement HTMLHRElement;
#endif /* __cplusplus */

#endif 	/* __HTMLHRElement_FWD_DEFINED__ */


#ifndef __IHTMLParaElement_FWD_DEFINED__
#define __IHTMLParaElement_FWD_DEFINED__
typedef interface IHTMLParaElement IHTMLParaElement;
#endif 	/* __IHTMLParaElement_FWD_DEFINED__ */


#ifndef __DispHTMLParaElement_FWD_DEFINED__
#define __DispHTMLParaElement_FWD_DEFINED__
typedef interface DispHTMLParaElement DispHTMLParaElement;
#endif 	/* __DispHTMLParaElement_FWD_DEFINED__ */


#ifndef __HTMLParaElement_FWD_DEFINED__
#define __HTMLParaElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLParaElement HTMLParaElement;
#else
typedef struct HTMLParaElement HTMLParaElement;
#endif /* __cplusplus */

#endif 	/* __HTMLParaElement_FWD_DEFINED__ */


#ifndef __IHTMLElementCollection2_FWD_DEFINED__
#define __IHTMLElementCollection2_FWD_DEFINED__
typedef interface IHTMLElementCollection2 IHTMLElementCollection2;
#endif 	/* __IHTMLElementCollection2_FWD_DEFINED__ */


#ifndef __IHTMLElementCollection3_FWD_DEFINED__
#define __IHTMLElementCollection3_FWD_DEFINED__
typedef interface IHTMLElementCollection3 IHTMLElementCollection3;
#endif 	/* __IHTMLElementCollection3_FWD_DEFINED__ */


#ifndef __DispHTMLElementCollection_FWD_DEFINED__
#define __DispHTMLElementCollection_FWD_DEFINED__
typedef interface DispHTMLElementCollection DispHTMLElementCollection;
#endif 	/* __DispHTMLElementCollection_FWD_DEFINED__ */


#ifndef __HTMLElementCollection_FWD_DEFINED__
#define __HTMLElementCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLElementCollection HTMLElementCollection;
#else
typedef struct HTMLElementCollection HTMLElementCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLElementCollection_FWD_DEFINED__ */


#ifndef __IHTMLHeaderElement_FWD_DEFINED__
#define __IHTMLHeaderElement_FWD_DEFINED__
typedef interface IHTMLHeaderElement IHTMLHeaderElement;
#endif 	/* __IHTMLHeaderElement_FWD_DEFINED__ */


#ifndef __DispHTMLHeaderElement_FWD_DEFINED__
#define __DispHTMLHeaderElement_FWD_DEFINED__
typedef interface DispHTMLHeaderElement DispHTMLHeaderElement;
#endif 	/* __DispHTMLHeaderElement_FWD_DEFINED__ */


#ifndef __HTMLHeaderElement_FWD_DEFINED__
#define __HTMLHeaderElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHeaderElement HTMLHeaderElement;
#else
typedef struct HTMLHeaderElement HTMLHeaderElement;
#endif /* __cplusplus */

#endif 	/* __HTMLHeaderElement_FWD_DEFINED__ */


#ifndef __HTMLSelectElementEvents2_FWD_DEFINED__
#define __HTMLSelectElementEvents2_FWD_DEFINED__
typedef interface HTMLSelectElementEvents2 HTMLSelectElementEvents2;
#endif 	/* __HTMLSelectElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLSelectElementEvents_FWD_DEFINED__
#define __HTMLSelectElementEvents_FWD_DEFINED__
typedef interface HTMLSelectElementEvents HTMLSelectElementEvents;
#endif 	/* __HTMLSelectElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLSelectElementEx_FWD_DEFINED__
#define __IHTMLSelectElementEx_FWD_DEFINED__
typedef interface IHTMLSelectElementEx IHTMLSelectElementEx;
#endif 	/* __IHTMLSelectElementEx_FWD_DEFINED__ */


#ifndef __IHTMLSelectElement_FWD_DEFINED__
#define __IHTMLSelectElement_FWD_DEFINED__
typedef interface IHTMLSelectElement IHTMLSelectElement;
#endif 	/* __IHTMLSelectElement_FWD_DEFINED__ */


#ifndef __IHTMLSelectElement2_FWD_DEFINED__
#define __IHTMLSelectElement2_FWD_DEFINED__
typedef interface IHTMLSelectElement2 IHTMLSelectElement2;
#endif 	/* __IHTMLSelectElement2_FWD_DEFINED__ */


#ifndef __IHTMLSelectElement4_FWD_DEFINED__
#define __IHTMLSelectElement4_FWD_DEFINED__
typedef interface IHTMLSelectElement4 IHTMLSelectElement4;
#endif 	/* __IHTMLSelectElement4_FWD_DEFINED__ */


#ifndef __DispHTMLSelectElement_FWD_DEFINED__
#define __DispHTMLSelectElement_FWD_DEFINED__
typedef interface DispHTMLSelectElement DispHTMLSelectElement;
#endif 	/* __DispHTMLSelectElement_FWD_DEFINED__ */


#ifndef __HTMLSelectElement_FWD_DEFINED__
#define __HTMLSelectElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLSelectElement HTMLSelectElement;
#else
typedef struct HTMLSelectElement HTMLSelectElement;
#endif /* __cplusplus */

#endif 	/* __HTMLSelectElement_FWD_DEFINED__ */


#ifndef __DispHTMLWndSelectElement_FWD_DEFINED__
#define __DispHTMLWndSelectElement_FWD_DEFINED__
typedef interface DispHTMLWndSelectElement DispHTMLWndSelectElement;
#endif 	/* __DispHTMLWndSelectElement_FWD_DEFINED__ */


#ifndef __HTMLWndSelectElement_FWD_DEFINED__
#define __HTMLWndSelectElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLWndSelectElement HTMLWndSelectElement;
#else
typedef struct HTMLWndSelectElement HTMLWndSelectElement;
#endif /* __cplusplus */

#endif 	/* __HTMLWndSelectElement_FWD_DEFINED__ */


#ifndef __IHTMLSelectionObject_FWD_DEFINED__
#define __IHTMLSelectionObject_FWD_DEFINED__
typedef interface IHTMLSelectionObject IHTMLSelectionObject;
#endif 	/* __IHTMLSelectionObject_FWD_DEFINED__ */


#ifndef __IHTMLSelectionObject2_FWD_DEFINED__
#define __IHTMLSelectionObject2_FWD_DEFINED__
typedef interface IHTMLSelectionObject2 IHTMLSelectionObject2;
#endif 	/* __IHTMLSelectionObject2_FWD_DEFINED__ */


#ifndef __IHTMLOptionElement_FWD_DEFINED__
#define __IHTMLOptionElement_FWD_DEFINED__
typedef interface IHTMLOptionElement IHTMLOptionElement;
#endif 	/* __IHTMLOptionElement_FWD_DEFINED__ */


#ifndef __IHTMLOptionElement3_FWD_DEFINED__
#define __IHTMLOptionElement3_FWD_DEFINED__
typedef interface IHTMLOptionElement3 IHTMLOptionElement3;
#endif 	/* __IHTMLOptionElement3_FWD_DEFINED__ */


#ifndef __IHTMLOptionElementFactory_FWD_DEFINED__
#define __IHTMLOptionElementFactory_FWD_DEFINED__
typedef interface IHTMLOptionElementFactory IHTMLOptionElementFactory;
#endif 	/* __IHTMLOptionElementFactory_FWD_DEFINED__ */


#ifndef __DispHTMLOptionElement_FWD_DEFINED__
#define __DispHTMLOptionElement_FWD_DEFINED__
typedef interface DispHTMLOptionElement DispHTMLOptionElement;
#endif 	/* __DispHTMLOptionElement_FWD_DEFINED__ */


#ifndef __HTMLOptionElement_FWD_DEFINED__
#define __HTMLOptionElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLOptionElement HTMLOptionElement;
#else
typedef struct HTMLOptionElement HTMLOptionElement;
#endif /* __cplusplus */

#endif 	/* __HTMLOptionElement_FWD_DEFINED__ */


#ifndef __HTMLOptionElementFactory_FWD_DEFINED__
#define __HTMLOptionElementFactory_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLOptionElementFactory HTMLOptionElementFactory;
#else
typedef struct HTMLOptionElementFactory HTMLOptionElementFactory;
#endif /* __cplusplus */

#endif 	/* __HTMLOptionElementFactory_FWD_DEFINED__ */


#ifndef __DispHTMLWndOptionElement_FWD_DEFINED__
#define __DispHTMLWndOptionElement_FWD_DEFINED__
typedef interface DispHTMLWndOptionElement DispHTMLWndOptionElement;
#endif 	/* __DispHTMLWndOptionElement_FWD_DEFINED__ */


#ifndef __HTMLWndOptionElement_FWD_DEFINED__
#define __HTMLWndOptionElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLWndOptionElement HTMLWndOptionElement;
#else
typedef struct HTMLWndOptionElement HTMLWndOptionElement;
#endif /* __cplusplus */

#endif 	/* __HTMLWndOptionElement_FWD_DEFINED__ */


#ifndef __HTMLButtonElementEvents2_FWD_DEFINED__
#define __HTMLButtonElementEvents2_FWD_DEFINED__
typedef interface HTMLButtonElementEvents2 HTMLButtonElementEvents2;
#endif 	/* __HTMLButtonElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLButtonElementEvents_FWD_DEFINED__
#define __HTMLButtonElementEvents_FWD_DEFINED__
typedef interface HTMLButtonElementEvents HTMLButtonElementEvents;
#endif 	/* __HTMLButtonElementEvents_FWD_DEFINED__ */


#ifndef __HTMLInputTextElementEvents2_FWD_DEFINED__
#define __HTMLInputTextElementEvents2_FWD_DEFINED__
typedef interface HTMLInputTextElementEvents2 HTMLInputTextElementEvents2;
#endif 	/* __HTMLInputTextElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLOptionButtonElementEvents2_FWD_DEFINED__
#define __HTMLOptionButtonElementEvents2_FWD_DEFINED__
typedef interface HTMLOptionButtonElementEvents2 HTMLOptionButtonElementEvents2;
#endif 	/* __HTMLOptionButtonElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLInputFileElementEvents2_FWD_DEFINED__
#define __HTMLInputFileElementEvents2_FWD_DEFINED__
typedef interface HTMLInputFileElementEvents2 HTMLInputFileElementEvents2;
#endif 	/* __HTMLInputFileElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLInputImageEvents2_FWD_DEFINED__
#define __HTMLInputImageEvents2_FWD_DEFINED__
typedef interface HTMLInputImageEvents2 HTMLInputImageEvents2;
#endif 	/* __HTMLInputImageEvents2_FWD_DEFINED__ */


#ifndef __HTMLInputTextElementEvents_FWD_DEFINED__
#define __HTMLInputTextElementEvents_FWD_DEFINED__
typedef interface HTMLInputTextElementEvents HTMLInputTextElementEvents;
#endif 	/* __HTMLInputTextElementEvents_FWD_DEFINED__ */


#ifndef __HTMLOptionButtonElementEvents_FWD_DEFINED__
#define __HTMLOptionButtonElementEvents_FWD_DEFINED__
typedef interface HTMLOptionButtonElementEvents HTMLOptionButtonElementEvents;
#endif 	/* __HTMLOptionButtonElementEvents_FWD_DEFINED__ */


#ifndef __HTMLInputFileElementEvents_FWD_DEFINED__
#define __HTMLInputFileElementEvents_FWD_DEFINED__
typedef interface HTMLInputFileElementEvents HTMLInputFileElementEvents;
#endif 	/* __HTMLInputFileElementEvents_FWD_DEFINED__ */


#ifndef __HTMLInputImageEvents_FWD_DEFINED__
#define __HTMLInputImageEvents_FWD_DEFINED__
typedef interface HTMLInputImageEvents HTMLInputImageEvents;
#endif 	/* __HTMLInputImageEvents_FWD_DEFINED__ */


#ifndef __IHTMLInputElement_FWD_DEFINED__
#define __IHTMLInputElement_FWD_DEFINED__
typedef interface IHTMLInputElement IHTMLInputElement;
#endif 	/* __IHTMLInputElement_FWD_DEFINED__ */


#ifndef __IHTMLInputElement2_FWD_DEFINED__
#define __IHTMLInputElement2_FWD_DEFINED__
typedef interface IHTMLInputElement2 IHTMLInputElement2;
#endif 	/* __IHTMLInputElement2_FWD_DEFINED__ */


#ifndef __IHTMLInputButtonElement_FWD_DEFINED__
#define __IHTMLInputButtonElement_FWD_DEFINED__
typedef interface IHTMLInputButtonElement IHTMLInputButtonElement;
#endif 	/* __IHTMLInputButtonElement_FWD_DEFINED__ */


#ifndef __IHTMLInputHiddenElement_FWD_DEFINED__
#define __IHTMLInputHiddenElement_FWD_DEFINED__
typedef interface IHTMLInputHiddenElement IHTMLInputHiddenElement;
#endif 	/* __IHTMLInputHiddenElement_FWD_DEFINED__ */


#ifndef __IHTMLInputTextElement_FWD_DEFINED__
#define __IHTMLInputTextElement_FWD_DEFINED__
typedef interface IHTMLInputTextElement IHTMLInputTextElement;
#endif 	/* __IHTMLInputTextElement_FWD_DEFINED__ */


#ifndef __IHTMLInputFileElement_FWD_DEFINED__
#define __IHTMLInputFileElement_FWD_DEFINED__
typedef interface IHTMLInputFileElement IHTMLInputFileElement;
#endif 	/* __IHTMLInputFileElement_FWD_DEFINED__ */


#ifndef __IHTMLOptionButtonElement_FWD_DEFINED__
#define __IHTMLOptionButtonElement_FWD_DEFINED__
typedef interface IHTMLOptionButtonElement IHTMLOptionButtonElement;
#endif 	/* __IHTMLOptionButtonElement_FWD_DEFINED__ */


#ifndef __IHTMLInputImage_FWD_DEFINED__
#define __IHTMLInputImage_FWD_DEFINED__
typedef interface IHTMLInputImage IHTMLInputImage;
#endif 	/* __IHTMLInputImage_FWD_DEFINED__ */


#ifndef __DispHTMLInputElement_FWD_DEFINED__
#define __DispHTMLInputElement_FWD_DEFINED__
typedef interface DispHTMLInputElement DispHTMLInputElement;
#endif 	/* __DispHTMLInputElement_FWD_DEFINED__ */


#ifndef __HTMLInputElement_FWD_DEFINED__
#define __HTMLInputElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputElement HTMLInputElement;
#else
typedef struct HTMLInputElement HTMLInputElement;
#endif /* __cplusplus */

#endif 	/* __HTMLInputElement_FWD_DEFINED__ */


#ifndef __IHTMLTextAreaElement_FWD_DEFINED__
#define __IHTMLTextAreaElement_FWD_DEFINED__
typedef interface IHTMLTextAreaElement IHTMLTextAreaElement;
#endif 	/* __IHTMLTextAreaElement_FWD_DEFINED__ */


#ifndef __DispHTMLTextAreaElement_FWD_DEFINED__
#define __DispHTMLTextAreaElement_FWD_DEFINED__
typedef interface DispHTMLTextAreaElement DispHTMLTextAreaElement;
#endif 	/* __DispHTMLTextAreaElement_FWD_DEFINED__ */


#ifndef __HTMLTextAreaElement_FWD_DEFINED__
#define __HTMLTextAreaElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTextAreaElement HTMLTextAreaElement;
#else
typedef struct HTMLTextAreaElement HTMLTextAreaElement;
#endif /* __cplusplus */

#endif 	/* __HTMLTextAreaElement_FWD_DEFINED__ */


#ifndef __DispHTMLRichtextElement_FWD_DEFINED__
#define __DispHTMLRichtextElement_FWD_DEFINED__
typedef interface DispHTMLRichtextElement DispHTMLRichtextElement;
#endif 	/* __DispHTMLRichtextElement_FWD_DEFINED__ */


#ifndef __HTMLRichtextElement_FWD_DEFINED__
#define __HTMLRichtextElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLRichtextElement HTMLRichtextElement;
#else
typedef struct HTMLRichtextElement HTMLRichtextElement;
#endif /* __cplusplus */

#endif 	/* __HTMLRichtextElement_FWD_DEFINED__ */


#ifndef __IHTMLButtonElement_FWD_DEFINED__
#define __IHTMLButtonElement_FWD_DEFINED__
typedef interface IHTMLButtonElement IHTMLButtonElement;
#endif 	/* __IHTMLButtonElement_FWD_DEFINED__ */


#ifndef __DispHTMLButtonElement_FWD_DEFINED__
#define __DispHTMLButtonElement_FWD_DEFINED__
typedef interface DispHTMLButtonElement DispHTMLButtonElement;
#endif 	/* __DispHTMLButtonElement_FWD_DEFINED__ */


#ifndef __HTMLButtonElement_FWD_DEFINED__
#define __HTMLButtonElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLButtonElement HTMLButtonElement;
#else
typedef struct HTMLButtonElement HTMLButtonElement;
#endif /* __cplusplus */

#endif 	/* __HTMLButtonElement_FWD_DEFINED__ */


#ifndef __HTMLMarqueeElementEvents2_FWD_DEFINED__
#define __HTMLMarqueeElementEvents2_FWD_DEFINED__
typedef interface HTMLMarqueeElementEvents2 HTMLMarqueeElementEvents2;
#endif 	/* __HTMLMarqueeElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLMarqueeElementEvents_FWD_DEFINED__
#define __HTMLMarqueeElementEvents_FWD_DEFINED__
typedef interface HTMLMarqueeElementEvents HTMLMarqueeElementEvents;
#endif 	/* __HTMLMarqueeElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLMarqueeElement_FWD_DEFINED__
#define __IHTMLMarqueeElement_FWD_DEFINED__
typedef interface IHTMLMarqueeElement IHTMLMarqueeElement;
#endif 	/* __IHTMLMarqueeElement_FWD_DEFINED__ */


#ifndef __DispHTMLMarqueeElement_FWD_DEFINED__
#define __DispHTMLMarqueeElement_FWD_DEFINED__
typedef interface DispHTMLMarqueeElement DispHTMLMarqueeElement;
#endif 	/* __DispHTMLMarqueeElement_FWD_DEFINED__ */


#ifndef __HTMLMarqueeElement_FWD_DEFINED__
#define __HTMLMarqueeElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLMarqueeElement HTMLMarqueeElement;
#else
typedef struct HTMLMarqueeElement HTMLMarqueeElement;
#endif /* __cplusplus */

#endif 	/* __HTMLMarqueeElement_FWD_DEFINED__ */


#ifndef __IHTMLHtmlElement_FWD_DEFINED__
#define __IHTMLHtmlElement_FWD_DEFINED__
typedef interface IHTMLHtmlElement IHTMLHtmlElement;
#endif 	/* __IHTMLHtmlElement_FWD_DEFINED__ */


#ifndef __IHTMLHeadElement_FWD_DEFINED__
#define __IHTMLHeadElement_FWD_DEFINED__
typedef interface IHTMLHeadElement IHTMLHeadElement;
#endif 	/* __IHTMLHeadElement_FWD_DEFINED__ */


#ifndef __IHTMLTitleElement_FWD_DEFINED__
#define __IHTMLTitleElement_FWD_DEFINED__
typedef interface IHTMLTitleElement IHTMLTitleElement;
#endif 	/* __IHTMLTitleElement_FWD_DEFINED__ */


#ifndef __IHTMLMetaElement_FWD_DEFINED__
#define __IHTMLMetaElement_FWD_DEFINED__
typedef interface IHTMLMetaElement IHTMLMetaElement;
#endif 	/* __IHTMLMetaElement_FWD_DEFINED__ */


#ifndef __IHTMLMetaElement2_FWD_DEFINED__
#define __IHTMLMetaElement2_FWD_DEFINED__
typedef interface IHTMLMetaElement2 IHTMLMetaElement2;
#endif 	/* __IHTMLMetaElement2_FWD_DEFINED__ */


#ifndef __IHTMLBaseElement_FWD_DEFINED__
#define __IHTMLBaseElement_FWD_DEFINED__
typedef interface IHTMLBaseElement IHTMLBaseElement;
#endif 	/* __IHTMLBaseElement_FWD_DEFINED__ */


#ifndef __IHTMLIsIndexElement_FWD_DEFINED__
#define __IHTMLIsIndexElement_FWD_DEFINED__
typedef interface IHTMLIsIndexElement IHTMLIsIndexElement;
#endif 	/* __IHTMLIsIndexElement_FWD_DEFINED__ */


#ifndef __IHTMLIsIndexElement2_FWD_DEFINED__
#define __IHTMLIsIndexElement2_FWD_DEFINED__
typedef interface IHTMLIsIndexElement2 IHTMLIsIndexElement2;
#endif 	/* __IHTMLIsIndexElement2_FWD_DEFINED__ */


#ifndef __IHTMLNextIdElement_FWD_DEFINED__
#define __IHTMLNextIdElement_FWD_DEFINED__
typedef interface IHTMLNextIdElement IHTMLNextIdElement;
#endif 	/* __IHTMLNextIdElement_FWD_DEFINED__ */


#ifndef __DispHTMLHtmlElement_FWD_DEFINED__
#define __DispHTMLHtmlElement_FWD_DEFINED__
typedef interface DispHTMLHtmlElement DispHTMLHtmlElement;
#endif 	/* __DispHTMLHtmlElement_FWD_DEFINED__ */


#ifndef __HTMLHtmlElement_FWD_DEFINED__
#define __HTMLHtmlElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHtmlElement HTMLHtmlElement;
#else
typedef struct HTMLHtmlElement HTMLHtmlElement;
#endif /* __cplusplus */

#endif 	/* __HTMLHtmlElement_FWD_DEFINED__ */


#ifndef __DispHTMLHeadElement_FWD_DEFINED__
#define __DispHTMLHeadElement_FWD_DEFINED__
typedef interface DispHTMLHeadElement DispHTMLHeadElement;
#endif 	/* __DispHTMLHeadElement_FWD_DEFINED__ */


#ifndef __HTMLHeadElement_FWD_DEFINED__
#define __HTMLHeadElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHeadElement HTMLHeadElement;
#else
typedef struct HTMLHeadElement HTMLHeadElement;
#endif /* __cplusplus */

#endif 	/* __HTMLHeadElement_FWD_DEFINED__ */


#ifndef __DispHTMLTitleElement_FWD_DEFINED__
#define __DispHTMLTitleElement_FWD_DEFINED__
typedef interface DispHTMLTitleElement DispHTMLTitleElement;
#endif 	/* __DispHTMLTitleElement_FWD_DEFINED__ */


#ifndef __HTMLTitleElement_FWD_DEFINED__
#define __HTMLTitleElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTitleElement HTMLTitleElement;
#else
typedef struct HTMLTitleElement HTMLTitleElement;
#endif /* __cplusplus */

#endif 	/* __HTMLTitleElement_FWD_DEFINED__ */


#ifndef __DispHTMLMetaElement_FWD_DEFINED__
#define __DispHTMLMetaElement_FWD_DEFINED__
typedef interface DispHTMLMetaElement DispHTMLMetaElement;
#endif 	/* __DispHTMLMetaElement_FWD_DEFINED__ */


#ifndef __HTMLMetaElement_FWD_DEFINED__
#define __HTMLMetaElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLMetaElement HTMLMetaElement;
#else
typedef struct HTMLMetaElement HTMLMetaElement;
#endif /* __cplusplus */

#endif 	/* __HTMLMetaElement_FWD_DEFINED__ */


#ifndef __DispHTMLBaseElement_FWD_DEFINED__
#define __DispHTMLBaseElement_FWD_DEFINED__
typedef interface DispHTMLBaseElement DispHTMLBaseElement;
#endif 	/* __DispHTMLBaseElement_FWD_DEFINED__ */


#ifndef __HTMLBaseElement_FWD_DEFINED__
#define __HTMLBaseElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBaseElement HTMLBaseElement;
#else
typedef struct HTMLBaseElement HTMLBaseElement;
#endif /* __cplusplus */

#endif 	/* __HTMLBaseElement_FWD_DEFINED__ */


#ifndef __DispHTMLIsIndexElement_FWD_DEFINED__
#define __DispHTMLIsIndexElement_FWD_DEFINED__
typedef interface DispHTMLIsIndexElement DispHTMLIsIndexElement;
#endif 	/* __DispHTMLIsIndexElement_FWD_DEFINED__ */


#ifndef __HTMLIsIndexElement_FWD_DEFINED__
#define __HTMLIsIndexElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLIsIndexElement HTMLIsIndexElement;
#else
typedef struct HTMLIsIndexElement HTMLIsIndexElement;
#endif /* __cplusplus */

#endif 	/* __HTMLIsIndexElement_FWD_DEFINED__ */


#ifndef __DispHTMLNextIdElement_FWD_DEFINED__
#define __DispHTMLNextIdElement_FWD_DEFINED__
typedef interface DispHTMLNextIdElement DispHTMLNextIdElement;
#endif 	/* __DispHTMLNextIdElement_FWD_DEFINED__ */


#ifndef __HTMLNextIdElement_FWD_DEFINED__
#define __HTMLNextIdElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNextIdElement HTMLNextIdElement;
#else
typedef struct HTMLNextIdElement HTMLNextIdElement;
#endif /* __cplusplus */

#endif 	/* __HTMLNextIdElement_FWD_DEFINED__ */


#ifndef __IHTMLBaseFontElement_FWD_DEFINED__
#define __IHTMLBaseFontElement_FWD_DEFINED__
typedef interface IHTMLBaseFontElement IHTMLBaseFontElement;
#endif 	/* __IHTMLBaseFontElement_FWD_DEFINED__ */


#ifndef __DispHTMLBaseFontElement_FWD_DEFINED__
#define __DispHTMLBaseFontElement_FWD_DEFINED__
typedef interface DispHTMLBaseFontElement DispHTMLBaseFontElement;
#endif 	/* __DispHTMLBaseFontElement_FWD_DEFINED__ */


#ifndef __HTMLBaseFontElement_FWD_DEFINED__
#define __HTMLBaseFontElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBaseFontElement HTMLBaseFontElement;
#else
typedef struct HTMLBaseFontElement HTMLBaseFontElement;
#endif /* __cplusplus */

#endif 	/* __HTMLBaseFontElement_FWD_DEFINED__ */


#ifndef __IHTMLUnknownElement_FWD_DEFINED__
#define __IHTMLUnknownElement_FWD_DEFINED__
typedef interface IHTMLUnknownElement IHTMLUnknownElement;
#endif 	/* __IHTMLUnknownElement_FWD_DEFINED__ */


#ifndef __DispHTMLUnknownElement_FWD_DEFINED__
#define __DispHTMLUnknownElement_FWD_DEFINED__
typedef interface DispHTMLUnknownElement DispHTMLUnknownElement;
#endif 	/* __DispHTMLUnknownElement_FWD_DEFINED__ */


#ifndef __HTMLUnknownElement_FWD_DEFINED__
#define __HTMLUnknownElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLUnknownElement HTMLUnknownElement;
#else
typedef struct HTMLUnknownElement HTMLUnknownElement;
#endif /* __cplusplus */

#endif 	/* __HTMLUnknownElement_FWD_DEFINED__ */


#ifndef __IOmHistory_FWD_DEFINED__
#define __IOmHistory_FWD_DEFINED__
typedef interface IOmHistory IOmHistory;
#endif 	/* __IOmHistory_FWD_DEFINED__ */


#ifndef __IHTMLMimeTypesCollection_FWD_DEFINED__
#define __IHTMLMimeTypesCollection_FWD_DEFINED__
typedef interface IHTMLMimeTypesCollection IHTMLMimeTypesCollection;
#endif 	/* __IHTMLMimeTypesCollection_FWD_DEFINED__ */


#ifndef __IHTMLPluginsCollection_FWD_DEFINED__
#define __IHTMLPluginsCollection_FWD_DEFINED__
typedef interface IHTMLPluginsCollection IHTMLPluginsCollection;
#endif 	/* __IHTMLPluginsCollection_FWD_DEFINED__ */


#ifndef __IHTMLOpsProfile_FWD_DEFINED__
#define __IHTMLOpsProfile_FWD_DEFINED__
typedef interface IHTMLOpsProfile IHTMLOpsProfile;
#endif 	/* __IHTMLOpsProfile_FWD_DEFINED__ */


#ifndef __IOmNavigator_FWD_DEFINED__
#define __IOmNavigator_FWD_DEFINED__
typedef interface IOmNavigator IOmNavigator;
#endif 	/* __IOmNavigator_FWD_DEFINED__ */


#ifndef __IHTMLLocation_FWD_DEFINED__
#define __IHTMLLocation_FWD_DEFINED__
typedef interface IHTMLLocation IHTMLLocation;
#endif 	/* __IHTMLLocation_FWD_DEFINED__ */


#ifndef __HTMLHistory_FWD_DEFINED__
#define __HTMLHistory_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHistory HTMLHistory;
#else
typedef struct HTMLHistory HTMLHistory;
#endif /* __cplusplus */

#endif 	/* __HTMLHistory_FWD_DEFINED__ */


#ifndef __CMimeTypes_FWD_DEFINED__
#define __CMimeTypes_FWD_DEFINED__

#ifdef __cplusplus
typedef class CMimeTypes CMimeTypes;
#else
typedef struct CMimeTypes CMimeTypes;
#endif /* __cplusplus */

#endif 	/* __CMimeTypes_FWD_DEFINED__ */


#ifndef __CPlugins_FWD_DEFINED__
#define __CPlugins_FWD_DEFINED__

#ifdef __cplusplus
typedef class CPlugins CPlugins;
#else
typedef struct CPlugins CPlugins;
#endif /* __cplusplus */

#endif 	/* __CPlugins_FWD_DEFINED__ */


#ifndef __COpsProfile_FWD_DEFINED__
#define __COpsProfile_FWD_DEFINED__

#ifdef __cplusplus
typedef class COpsProfile COpsProfile;
#else
typedef struct COpsProfile COpsProfile;
#endif /* __cplusplus */

#endif 	/* __COpsProfile_FWD_DEFINED__ */


#ifndef __HTMLNavigator_FWD_DEFINED__
#define __HTMLNavigator_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNavigator HTMLNavigator;
#else
typedef struct HTMLNavigator HTMLNavigator;
#endif /* __cplusplus */

#endif 	/* __HTMLNavigator_FWD_DEFINED__ */


#ifndef __HTMLLocation_FWD_DEFINED__
#define __HTMLLocation_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLocation HTMLLocation;
#else
typedef struct HTMLLocation HTMLLocation;
#endif /* __cplusplus */

#endif 	/* __HTMLLocation_FWD_DEFINED__ */


#ifndef __IHTMLBookmarkCollection_FWD_DEFINED__
#define __IHTMLBookmarkCollection_FWD_DEFINED__
typedef interface IHTMLBookmarkCollection IHTMLBookmarkCollection;
#endif 	/* __IHTMLBookmarkCollection_FWD_DEFINED__ */


#ifndef __IHTMLDataTransfer_FWD_DEFINED__
#define __IHTMLDataTransfer_FWD_DEFINED__
typedef interface IHTMLDataTransfer IHTMLDataTransfer;
#endif 	/* __IHTMLDataTransfer_FWD_DEFINED__ */


#ifndef __IHTMLEventObj2_FWD_DEFINED__
#define __IHTMLEventObj2_FWD_DEFINED__
typedef interface IHTMLEventObj2 IHTMLEventObj2;
#endif 	/* __IHTMLEventObj2_FWD_DEFINED__ */


#ifndef __IHTMLEventObj3_FWD_DEFINED__
#define __IHTMLEventObj3_FWD_DEFINED__
typedef interface IHTMLEventObj3 IHTMLEventObj3;
#endif 	/* __IHTMLEventObj3_FWD_DEFINED__ */


#ifndef __IHTMLEventObj4_FWD_DEFINED__
#define __IHTMLEventObj4_FWD_DEFINED__
typedef interface IHTMLEventObj4 IHTMLEventObj4;
#endif 	/* __IHTMLEventObj4_FWD_DEFINED__ */


#ifndef __DispCEventObj_FWD_DEFINED__
#define __DispCEventObj_FWD_DEFINED__
typedef interface DispCEventObj DispCEventObj;
#endif 	/* __DispCEventObj_FWD_DEFINED__ */


#ifndef __CEventObj_FWD_DEFINED__
#define __CEventObj_FWD_DEFINED__

#ifdef __cplusplus
typedef class CEventObj CEventObj;
#else
typedef struct CEventObj CEventObj;
#endif /* __cplusplus */

#endif 	/* __CEventObj_FWD_DEFINED__ */


#ifndef __HTMLWindowEvents2_FWD_DEFINED__
#define __HTMLWindowEvents2_FWD_DEFINED__
typedef interface HTMLWindowEvents2 HTMLWindowEvents2;
#endif 	/* __HTMLWindowEvents2_FWD_DEFINED__ */


#ifndef __HTMLWindowEvents_FWD_DEFINED__
#define __HTMLWindowEvents_FWD_DEFINED__
typedef interface HTMLWindowEvents HTMLWindowEvents;
#endif 	/* __HTMLWindowEvents_FWD_DEFINED__ */


#ifndef __IHTMLDocument2_FWD_DEFINED__
#define __IHTMLDocument2_FWD_DEFINED__
typedef interface IHTMLDocument2 IHTMLDocument2;
#endif 	/* __IHTMLDocument2_FWD_DEFINED__ */


#ifndef __IHTMLFramesCollection2_FWD_DEFINED__
#define __IHTMLFramesCollection2_FWD_DEFINED__
typedef interface IHTMLFramesCollection2 IHTMLFramesCollection2;
#endif 	/* __IHTMLFramesCollection2_FWD_DEFINED__ */


#ifndef __IHTMLWindow2_FWD_DEFINED__
#define __IHTMLWindow2_FWD_DEFINED__
typedef interface IHTMLWindow2 IHTMLWindow2;
#endif 	/* __IHTMLWindow2_FWD_DEFINED__ */


#ifndef __IHTMLWindow3_FWD_DEFINED__
#define __IHTMLWindow3_FWD_DEFINED__
typedef interface IHTMLWindow3 IHTMLWindow3;
#endif 	/* __IHTMLWindow3_FWD_DEFINED__ */


#ifndef __IHTMLFrameBase_FWD_DEFINED__
#define __IHTMLFrameBase_FWD_DEFINED__
typedef interface IHTMLFrameBase IHTMLFrameBase;
#endif 	/* __IHTMLFrameBase_FWD_DEFINED__ */


#ifndef __IHTMLScreen_FWD_DEFINED__
#define __IHTMLScreen_FWD_DEFINED__
typedef interface IHTMLScreen IHTMLScreen;
#endif 	/* __IHTMLScreen_FWD_DEFINED__ */


#ifndef __IHTMLScreen2_FWD_DEFINED__
#define __IHTMLScreen2_FWD_DEFINED__
typedef interface IHTMLScreen2 IHTMLScreen2;
#endif 	/* __IHTMLScreen2_FWD_DEFINED__ */


#ifndef __IHTMLWindow4_FWD_DEFINED__
#define __IHTMLWindow4_FWD_DEFINED__
typedef interface IHTMLWindow4 IHTMLWindow4;
#endif 	/* __IHTMLWindow4_FWD_DEFINED__ */


#ifndef __IHTMLWindow5_FWD_DEFINED__
#define __IHTMLWindow5_FWD_DEFINED__
typedef interface IHTMLWindow5 IHTMLWindow5;
#endif 	/* __IHTMLWindow5_FWD_DEFINED__ */


#ifndef __FramesCollection_FWD_DEFINED__
#define __FramesCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class FramesCollection FramesCollection;
#else
typedef struct FramesCollection FramesCollection;
#endif /* __cplusplus */

#endif 	/* __FramesCollection_FWD_DEFINED__ */


#ifndef __DispHTMLScreen_FWD_DEFINED__
#define __DispHTMLScreen_FWD_DEFINED__
typedef interface DispHTMLScreen DispHTMLScreen;
#endif 	/* __DispHTMLScreen_FWD_DEFINED__ */


#ifndef __HTMLScreen_FWD_DEFINED__
#define __HTMLScreen_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLScreen HTMLScreen;
#else
typedef struct HTMLScreen HTMLScreen;
#endif /* __cplusplus */

#endif 	/* __HTMLScreen_FWD_DEFINED__ */


#ifndef __DispHTMLWindow2_FWD_DEFINED__
#define __DispHTMLWindow2_FWD_DEFINED__
typedef interface DispHTMLWindow2 DispHTMLWindow2;
#endif 	/* __DispHTMLWindow2_FWD_DEFINED__ */


#ifndef __HTMLWindow2_FWD_DEFINED__
#define __HTMLWindow2_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLWindow2 HTMLWindow2;
#else
typedef struct HTMLWindow2 HTMLWindow2;
#endif /* __cplusplus */

#endif 	/* __HTMLWindow2_FWD_DEFINED__ */


#ifndef __DispHTMLWindowProxy_FWD_DEFINED__
#define __DispHTMLWindowProxy_FWD_DEFINED__
typedef interface DispHTMLWindowProxy DispHTMLWindowProxy;
#endif 	/* __DispHTMLWindowProxy_FWD_DEFINED__ */


#ifndef __HTMLWindowProxy_FWD_DEFINED__
#define __HTMLWindowProxy_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLWindowProxy HTMLWindowProxy;
#else
typedef struct HTMLWindowProxy HTMLWindowProxy;
#endif /* __cplusplus */

#endif 	/* __HTMLWindowProxy_FWD_DEFINED__ */


#ifndef __HTMLDocumentEvents2_FWD_DEFINED__
#define __HTMLDocumentEvents2_FWD_DEFINED__
typedef interface HTMLDocumentEvents2 HTMLDocumentEvents2;
#endif 	/* __HTMLDocumentEvents2_FWD_DEFINED__ */


#ifndef __HTMLDocumentEvents_FWD_DEFINED__
#define __HTMLDocumentEvents_FWD_DEFINED__
typedef interface HTMLDocumentEvents HTMLDocumentEvents;
#endif 	/* __HTMLDocumentEvents_FWD_DEFINED__ */


#ifndef __IHTMLDocument3_FWD_DEFINED__
#define __IHTMLDocument3_FWD_DEFINED__
typedef interface IHTMLDocument3 IHTMLDocument3;
#endif 	/* __IHTMLDocument3_FWD_DEFINED__ */


#ifndef __IHTMLDocument4_FWD_DEFINED__
#define __IHTMLDocument4_FWD_DEFINED__
typedef interface IHTMLDocument4 IHTMLDocument4;
#endif 	/* __IHTMLDocument4_FWD_DEFINED__ */


#ifndef __IHTMLDocument5_FWD_DEFINED__
#define __IHTMLDocument5_FWD_DEFINED__
typedef interface IHTMLDocument5 IHTMLDocument5;
#endif 	/* __IHTMLDocument5_FWD_DEFINED__ */


#ifndef __DispHTMLDocument_FWD_DEFINED__
#define __DispHTMLDocument_FWD_DEFINED__
typedef interface DispHTMLDocument DispHTMLDocument;
#endif 	/* __DispHTMLDocument_FWD_DEFINED__ */


#ifndef __HTMLDocument_FWD_DEFINED__
#define __HTMLDocument_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDocument HTMLDocument;
#else
typedef struct HTMLDocument HTMLDocument;
#endif /* __cplusplus */

#endif 	/* __HTMLDocument_FWD_DEFINED__ */


#ifndef __DWebBridgeEvents_FWD_DEFINED__
#define __DWebBridgeEvents_FWD_DEFINED__
typedef interface DWebBridgeEvents DWebBridgeEvents;
#endif 	/* __DWebBridgeEvents_FWD_DEFINED__ */


#ifndef __IWebBridge_FWD_DEFINED__
#define __IWebBridge_FWD_DEFINED__
typedef interface IWebBridge IWebBridge;
#endif 	/* __IWebBridge_FWD_DEFINED__ */


#ifndef __IWBScriptControl_FWD_DEFINED__
#define __IWBScriptControl_FWD_DEFINED__
typedef interface IWBScriptControl IWBScriptControl;
#endif 	/* __IWBScriptControl_FWD_DEFINED__ */


#ifndef __Scriptlet_FWD_DEFINED__
#define __Scriptlet_FWD_DEFINED__

#ifdef __cplusplus
typedef class Scriptlet Scriptlet;
#else
typedef struct Scriptlet Scriptlet;
#endif /* __cplusplus */

#endif 	/* __Scriptlet_FWD_DEFINED__ */


#ifndef __IHTMLEmbedElement_FWD_DEFINED__
#define __IHTMLEmbedElement_FWD_DEFINED__
typedef interface IHTMLEmbedElement IHTMLEmbedElement;
#endif 	/* __IHTMLEmbedElement_FWD_DEFINED__ */


#ifndef __DispHTMLEmbed_FWD_DEFINED__
#define __DispHTMLEmbed_FWD_DEFINED__
typedef interface DispHTMLEmbed DispHTMLEmbed;
#endif 	/* __DispHTMLEmbed_FWD_DEFINED__ */


#ifndef __HTMLEmbed_FWD_DEFINED__
#define __HTMLEmbed_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLEmbed HTMLEmbed;
#else
typedef struct HTMLEmbed HTMLEmbed;
#endif /* __cplusplus */

#endif 	/* __HTMLEmbed_FWD_DEFINED__ */


#ifndef __HTMLMapEvents2_FWD_DEFINED__
#define __HTMLMapEvents2_FWD_DEFINED__
typedef interface HTMLMapEvents2 HTMLMapEvents2;
#endif 	/* __HTMLMapEvents2_FWD_DEFINED__ */


#ifndef __HTMLMapEvents_FWD_DEFINED__
#define __HTMLMapEvents_FWD_DEFINED__
typedef interface HTMLMapEvents HTMLMapEvents;
#endif 	/* __HTMLMapEvents_FWD_DEFINED__ */


#ifndef __IHTMLAreasCollection_FWD_DEFINED__
#define __IHTMLAreasCollection_FWD_DEFINED__
typedef interface IHTMLAreasCollection IHTMLAreasCollection;
#endif 	/* __IHTMLAreasCollection_FWD_DEFINED__ */


#ifndef __IHTMLAreasCollection2_FWD_DEFINED__
#define __IHTMLAreasCollection2_FWD_DEFINED__
typedef interface IHTMLAreasCollection2 IHTMLAreasCollection2;
#endif 	/* __IHTMLAreasCollection2_FWD_DEFINED__ */


#ifndef __IHTMLAreasCollection3_FWD_DEFINED__
#define __IHTMLAreasCollection3_FWD_DEFINED__
typedef interface IHTMLAreasCollection3 IHTMLAreasCollection3;
#endif 	/* __IHTMLAreasCollection3_FWD_DEFINED__ */


#ifndef __IHTMLMapElement_FWD_DEFINED__
#define __IHTMLMapElement_FWD_DEFINED__
typedef interface IHTMLMapElement IHTMLMapElement;
#endif 	/* __IHTMLMapElement_FWD_DEFINED__ */


#ifndef __DispHTMLAreasCollection_FWD_DEFINED__
#define __DispHTMLAreasCollection_FWD_DEFINED__
typedef interface DispHTMLAreasCollection DispHTMLAreasCollection;
#endif 	/* __DispHTMLAreasCollection_FWD_DEFINED__ */


#ifndef __HTMLAreasCollection_FWD_DEFINED__
#define __HTMLAreasCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAreasCollection HTMLAreasCollection;
#else
typedef struct HTMLAreasCollection HTMLAreasCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLAreasCollection_FWD_DEFINED__ */


#ifndef __DispHTMLMapElement_FWD_DEFINED__
#define __DispHTMLMapElement_FWD_DEFINED__
typedef interface DispHTMLMapElement DispHTMLMapElement;
#endif 	/* __DispHTMLMapElement_FWD_DEFINED__ */


#ifndef __HTMLMapElement_FWD_DEFINED__
#define __HTMLMapElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLMapElement HTMLMapElement;
#else
typedef struct HTMLMapElement HTMLMapElement;
#endif /* __cplusplus */

#endif 	/* __HTMLMapElement_FWD_DEFINED__ */


#ifndef __HTMLAreaEvents2_FWD_DEFINED__
#define __HTMLAreaEvents2_FWD_DEFINED__
typedef interface HTMLAreaEvents2 HTMLAreaEvents2;
#endif 	/* __HTMLAreaEvents2_FWD_DEFINED__ */


#ifndef __HTMLAreaEvents_FWD_DEFINED__
#define __HTMLAreaEvents_FWD_DEFINED__
typedef interface HTMLAreaEvents HTMLAreaEvents;
#endif 	/* __HTMLAreaEvents_FWD_DEFINED__ */


#ifndef __IHTMLAreaElement_FWD_DEFINED__
#define __IHTMLAreaElement_FWD_DEFINED__
typedef interface IHTMLAreaElement IHTMLAreaElement;
#endif 	/* __IHTMLAreaElement_FWD_DEFINED__ */


#ifndef __DispHTMLAreaElement_FWD_DEFINED__
#define __DispHTMLAreaElement_FWD_DEFINED__
typedef interface DispHTMLAreaElement DispHTMLAreaElement;
#endif 	/* __DispHTMLAreaElement_FWD_DEFINED__ */


#ifndef __HTMLAreaElement_FWD_DEFINED__
#define __HTMLAreaElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAreaElement HTMLAreaElement;
#else
typedef struct HTMLAreaElement HTMLAreaElement;
#endif /* __cplusplus */

#endif 	/* __HTMLAreaElement_FWD_DEFINED__ */


#ifndef __IHTMLTableCaption_FWD_DEFINED__
#define __IHTMLTableCaption_FWD_DEFINED__
typedef interface IHTMLTableCaption IHTMLTableCaption;
#endif 	/* __IHTMLTableCaption_FWD_DEFINED__ */


#ifndef __DispHTMLTableCaption_FWD_DEFINED__
#define __DispHTMLTableCaption_FWD_DEFINED__
typedef interface DispHTMLTableCaption DispHTMLTableCaption;
#endif 	/* __DispHTMLTableCaption_FWD_DEFINED__ */


#ifndef __HTMLTableCaption_FWD_DEFINED__
#define __HTMLTableCaption_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableCaption HTMLTableCaption;
#else
typedef struct HTMLTableCaption HTMLTableCaption;
#endif /* __cplusplus */

#endif 	/* __HTMLTableCaption_FWD_DEFINED__ */


#ifndef __IHTMLCommentElement_FWD_DEFINED__
#define __IHTMLCommentElement_FWD_DEFINED__
typedef interface IHTMLCommentElement IHTMLCommentElement;
#endif 	/* __IHTMLCommentElement_FWD_DEFINED__ */


#ifndef __IHTMLCommentElement2_FWD_DEFINED__
#define __IHTMLCommentElement2_FWD_DEFINED__
typedef interface IHTMLCommentElement2 IHTMLCommentElement2;
#endif 	/* __IHTMLCommentElement2_FWD_DEFINED__ */


#ifndef __DispHTMLCommentElement_FWD_DEFINED__
#define __DispHTMLCommentElement_FWD_DEFINED__
typedef interface DispHTMLCommentElement DispHTMLCommentElement;
#endif 	/* __DispHTMLCommentElement_FWD_DEFINED__ */


#ifndef __HTMLCommentElement_FWD_DEFINED__
#define __HTMLCommentElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLCommentElement HTMLCommentElement;
#else
typedef struct HTMLCommentElement HTMLCommentElement;
#endif /* __cplusplus */

#endif 	/* __HTMLCommentElement_FWD_DEFINED__ */


#ifndef __IHTMLPhraseElement_FWD_DEFINED__
#define __IHTMLPhraseElement_FWD_DEFINED__
typedef interface IHTMLPhraseElement IHTMLPhraseElement;
#endif 	/* __IHTMLPhraseElement_FWD_DEFINED__ */


#ifndef __IHTMLPhraseElement2_FWD_DEFINED__
#define __IHTMLPhraseElement2_FWD_DEFINED__
typedef interface IHTMLPhraseElement2 IHTMLPhraseElement2;
#endif 	/* __IHTMLPhraseElement2_FWD_DEFINED__ */


#ifndef __IHTMLSpanElement_FWD_DEFINED__
#define __IHTMLSpanElement_FWD_DEFINED__
typedef interface IHTMLSpanElement IHTMLSpanElement;
#endif 	/* __IHTMLSpanElement_FWD_DEFINED__ */


#ifndef __DispHTMLPhraseElement_FWD_DEFINED__
#define __DispHTMLPhraseElement_FWD_DEFINED__
typedef interface DispHTMLPhraseElement DispHTMLPhraseElement;
#endif 	/* __DispHTMLPhraseElement_FWD_DEFINED__ */


#ifndef __HTMLPhraseElement_FWD_DEFINED__
#define __HTMLPhraseElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLPhraseElement HTMLPhraseElement;
#else
typedef struct HTMLPhraseElement HTMLPhraseElement;
#endif /* __cplusplus */

#endif 	/* __HTMLPhraseElement_FWD_DEFINED__ */


#ifndef __DispHTMLSpanElement_FWD_DEFINED__
#define __DispHTMLSpanElement_FWD_DEFINED__
typedef interface DispHTMLSpanElement DispHTMLSpanElement;
#endif 	/* __DispHTMLSpanElement_FWD_DEFINED__ */


#ifndef __HTMLSpanElement_FWD_DEFINED__
#define __HTMLSpanElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLSpanElement HTMLSpanElement;
#else
typedef struct HTMLSpanElement HTMLSpanElement;
#endif /* __cplusplus */

#endif 	/* __HTMLSpanElement_FWD_DEFINED__ */


#ifndef __HTMLTableEvents2_FWD_DEFINED__
#define __HTMLTableEvents2_FWD_DEFINED__
typedef interface HTMLTableEvents2 HTMLTableEvents2;
#endif 	/* __HTMLTableEvents2_FWD_DEFINED__ */


#ifndef __HTMLTableEvents_FWD_DEFINED__
#define __HTMLTableEvents_FWD_DEFINED__
typedef interface HTMLTableEvents HTMLTableEvents;
#endif 	/* __HTMLTableEvents_FWD_DEFINED__ */


#ifndef __IHTMLTableSection_FWD_DEFINED__
#define __IHTMLTableSection_FWD_DEFINED__
typedef interface IHTMLTableSection IHTMLTableSection;
#endif 	/* __IHTMLTableSection_FWD_DEFINED__ */


#ifndef __IHTMLTable_FWD_DEFINED__
#define __IHTMLTable_FWD_DEFINED__
typedef interface IHTMLTable IHTMLTable;
#endif 	/* __IHTMLTable_FWD_DEFINED__ */


#ifndef __IHTMLTable2_FWD_DEFINED__
#define __IHTMLTable2_FWD_DEFINED__
typedef interface IHTMLTable2 IHTMLTable2;
#endif 	/* __IHTMLTable2_FWD_DEFINED__ */


#ifndef __IHTMLTable3_FWD_DEFINED__
#define __IHTMLTable3_FWD_DEFINED__
typedef interface IHTMLTable3 IHTMLTable3;
#endif 	/* __IHTMLTable3_FWD_DEFINED__ */


#ifndef __IHTMLTableCol_FWD_DEFINED__
#define __IHTMLTableCol_FWD_DEFINED__
typedef interface IHTMLTableCol IHTMLTableCol;
#endif 	/* __IHTMLTableCol_FWD_DEFINED__ */


#ifndef __IHTMLTableCol2_FWD_DEFINED__
#define __IHTMLTableCol2_FWD_DEFINED__
typedef interface IHTMLTableCol2 IHTMLTableCol2;
#endif 	/* __IHTMLTableCol2_FWD_DEFINED__ */


#ifndef __IHTMLTableSection2_FWD_DEFINED__
#define __IHTMLTableSection2_FWD_DEFINED__
typedef interface IHTMLTableSection2 IHTMLTableSection2;
#endif 	/* __IHTMLTableSection2_FWD_DEFINED__ */


#ifndef __IHTMLTableSection3_FWD_DEFINED__
#define __IHTMLTableSection3_FWD_DEFINED__
typedef interface IHTMLTableSection3 IHTMLTableSection3;
#endif 	/* __IHTMLTableSection3_FWD_DEFINED__ */


#ifndef __IHTMLTableRow_FWD_DEFINED__
#define __IHTMLTableRow_FWD_DEFINED__
typedef interface IHTMLTableRow IHTMLTableRow;
#endif 	/* __IHTMLTableRow_FWD_DEFINED__ */


#ifndef __IHTMLTableRow2_FWD_DEFINED__
#define __IHTMLTableRow2_FWD_DEFINED__
typedef interface IHTMLTableRow2 IHTMLTableRow2;
#endif 	/* __IHTMLTableRow2_FWD_DEFINED__ */


#ifndef __IHTMLTableRow3_FWD_DEFINED__
#define __IHTMLTableRow3_FWD_DEFINED__
typedef interface IHTMLTableRow3 IHTMLTableRow3;
#endif 	/* __IHTMLTableRow3_FWD_DEFINED__ */


#ifndef __IHTMLTableRowMetrics_FWD_DEFINED__
#define __IHTMLTableRowMetrics_FWD_DEFINED__
typedef interface IHTMLTableRowMetrics IHTMLTableRowMetrics;
#endif 	/* __IHTMLTableRowMetrics_FWD_DEFINED__ */


#ifndef __IHTMLTableCell_FWD_DEFINED__
#define __IHTMLTableCell_FWD_DEFINED__
typedef interface IHTMLTableCell IHTMLTableCell;
#endif 	/* __IHTMLTableCell_FWD_DEFINED__ */


#ifndef __IHTMLTableCell2_FWD_DEFINED__
#define __IHTMLTableCell2_FWD_DEFINED__
typedef interface IHTMLTableCell2 IHTMLTableCell2;
#endif 	/* __IHTMLTableCell2_FWD_DEFINED__ */


#ifndef __DispHTMLTable_FWD_DEFINED__
#define __DispHTMLTable_FWD_DEFINED__
typedef interface DispHTMLTable DispHTMLTable;
#endif 	/* __DispHTMLTable_FWD_DEFINED__ */


#ifndef __HTMLTable_FWD_DEFINED__
#define __HTMLTable_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTable HTMLTable;
#else
typedef struct HTMLTable HTMLTable;
#endif /* __cplusplus */

#endif 	/* __HTMLTable_FWD_DEFINED__ */


#ifndef __DispHTMLTableCol_FWD_DEFINED__
#define __DispHTMLTableCol_FWD_DEFINED__
typedef interface DispHTMLTableCol DispHTMLTableCol;
#endif 	/* __DispHTMLTableCol_FWD_DEFINED__ */


#ifndef __HTMLTableCol_FWD_DEFINED__
#define __HTMLTableCol_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableCol HTMLTableCol;
#else
typedef struct HTMLTableCol HTMLTableCol;
#endif /* __cplusplus */

#endif 	/* __HTMLTableCol_FWD_DEFINED__ */


#ifndef __DispHTMLTableSection_FWD_DEFINED__
#define __DispHTMLTableSection_FWD_DEFINED__
typedef interface DispHTMLTableSection DispHTMLTableSection;
#endif 	/* __DispHTMLTableSection_FWD_DEFINED__ */


#ifndef __HTMLTableSection_FWD_DEFINED__
#define __HTMLTableSection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableSection HTMLTableSection;
#else
typedef struct HTMLTableSection HTMLTableSection;
#endif /* __cplusplus */

#endif 	/* __HTMLTableSection_FWD_DEFINED__ */


#ifndef __DispHTMLTableRow_FWD_DEFINED__
#define __DispHTMLTableRow_FWD_DEFINED__
typedef interface DispHTMLTableRow DispHTMLTableRow;
#endif 	/* __DispHTMLTableRow_FWD_DEFINED__ */


#ifndef __HTMLTableRow_FWD_DEFINED__
#define __HTMLTableRow_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableRow HTMLTableRow;
#else
typedef struct HTMLTableRow HTMLTableRow;
#endif /* __cplusplus */

#endif 	/* __HTMLTableRow_FWD_DEFINED__ */


#ifndef __DispHTMLTableCell_FWD_DEFINED__
#define __DispHTMLTableCell_FWD_DEFINED__
typedef interface DispHTMLTableCell DispHTMLTableCell;
#endif 	/* __DispHTMLTableCell_FWD_DEFINED__ */


#ifndef __HTMLTableCell_FWD_DEFINED__
#define __HTMLTableCell_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableCell HTMLTableCell;
#else
typedef struct HTMLTableCell HTMLTableCell;
#endif /* __cplusplus */

#endif 	/* __HTMLTableCell_FWD_DEFINED__ */


#ifndef __HTMLScriptEvents2_FWD_DEFINED__
#define __HTMLScriptEvents2_FWD_DEFINED__
typedef interface HTMLScriptEvents2 HTMLScriptEvents2;
#endif 	/* __HTMLScriptEvents2_FWD_DEFINED__ */


#ifndef __HTMLScriptEvents_FWD_DEFINED__
#define __HTMLScriptEvents_FWD_DEFINED__
typedef interface HTMLScriptEvents HTMLScriptEvents;
#endif 	/* __HTMLScriptEvents_FWD_DEFINED__ */


#ifndef __IHTMLScriptElement_FWD_DEFINED__
#define __IHTMLScriptElement_FWD_DEFINED__
typedef interface IHTMLScriptElement IHTMLScriptElement;
#endif 	/* __IHTMLScriptElement_FWD_DEFINED__ */


#ifndef __IHTMLScriptElement2_FWD_DEFINED__
#define __IHTMLScriptElement2_FWD_DEFINED__
typedef interface IHTMLScriptElement2 IHTMLScriptElement2;
#endif 	/* __IHTMLScriptElement2_FWD_DEFINED__ */


#ifndef __DispHTMLScriptElement_FWD_DEFINED__
#define __DispHTMLScriptElement_FWD_DEFINED__
typedef interface DispHTMLScriptElement DispHTMLScriptElement;
#endif 	/* __DispHTMLScriptElement_FWD_DEFINED__ */


#ifndef __HTMLScriptElement_FWD_DEFINED__
#define __HTMLScriptElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLScriptElement HTMLScriptElement;
#else
typedef struct HTMLScriptElement HTMLScriptElement;
#endif /* __cplusplus */

#endif 	/* __HTMLScriptElement_FWD_DEFINED__ */


#ifndef __IHTMLNoShowElement_FWD_DEFINED__
#define __IHTMLNoShowElement_FWD_DEFINED__
typedef interface IHTMLNoShowElement IHTMLNoShowElement;
#endif 	/* __IHTMLNoShowElement_FWD_DEFINED__ */


#ifndef __DispHTMLNoShowElement_FWD_DEFINED__
#define __DispHTMLNoShowElement_FWD_DEFINED__
typedef interface DispHTMLNoShowElement DispHTMLNoShowElement;
#endif 	/* __DispHTMLNoShowElement_FWD_DEFINED__ */


#ifndef __HTMLNoShowElement_FWD_DEFINED__
#define __HTMLNoShowElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNoShowElement HTMLNoShowElement;
#else
typedef struct HTMLNoShowElement HTMLNoShowElement;
#endif /* __cplusplus */

#endif 	/* __HTMLNoShowElement_FWD_DEFINED__ */


#ifndef __HTMLObjectElementEvents2_FWD_DEFINED__
#define __HTMLObjectElementEvents2_FWD_DEFINED__
typedef interface HTMLObjectElementEvents2 HTMLObjectElementEvents2;
#endif 	/* __HTMLObjectElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLObjectElementEvents_FWD_DEFINED__
#define __HTMLObjectElementEvents_FWD_DEFINED__
typedef interface HTMLObjectElementEvents HTMLObjectElementEvents;
#endif 	/* __HTMLObjectElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLObjectElement_FWD_DEFINED__
#define __IHTMLObjectElement_FWD_DEFINED__
typedef interface IHTMLObjectElement IHTMLObjectElement;
#endif 	/* __IHTMLObjectElement_FWD_DEFINED__ */


#ifndef __IHTMLObjectElement2_FWD_DEFINED__
#define __IHTMLObjectElement2_FWD_DEFINED__
typedef interface IHTMLObjectElement2 IHTMLObjectElement2;
#endif 	/* __IHTMLObjectElement2_FWD_DEFINED__ */


#ifndef __IHTMLObjectElement3_FWD_DEFINED__
#define __IHTMLObjectElement3_FWD_DEFINED__
typedef interface IHTMLObjectElement3 IHTMLObjectElement3;
#endif 	/* __IHTMLObjectElement3_FWD_DEFINED__ */


#ifndef __IHTMLParamElement_FWD_DEFINED__
#define __IHTMLParamElement_FWD_DEFINED__
typedef interface IHTMLParamElement IHTMLParamElement;
#endif 	/* __IHTMLParamElement_FWD_DEFINED__ */


#ifndef __DispHTMLObjectElement_FWD_DEFINED__
#define __DispHTMLObjectElement_FWD_DEFINED__
typedef interface DispHTMLObjectElement DispHTMLObjectElement;
#endif 	/* __DispHTMLObjectElement_FWD_DEFINED__ */


#ifndef __HTMLObjectElement_FWD_DEFINED__
#define __HTMLObjectElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLObjectElement HTMLObjectElement;
#else
typedef struct HTMLObjectElement HTMLObjectElement;
#endif /* __cplusplus */

#endif 	/* __HTMLObjectElement_FWD_DEFINED__ */


#ifndef __DispHTMLParamElement_FWD_DEFINED__
#define __DispHTMLParamElement_FWD_DEFINED__
typedef interface DispHTMLParamElement DispHTMLParamElement;
#endif 	/* __DispHTMLParamElement_FWD_DEFINED__ */


#ifndef __HTMLParamElement_FWD_DEFINED__
#define __HTMLParamElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLParamElement HTMLParamElement;
#else
typedef struct HTMLParamElement HTMLParamElement;
#endif /* __cplusplus */

#endif 	/* __HTMLParamElement_FWD_DEFINED__ */


#ifndef __HTMLFrameSiteEvents2_FWD_DEFINED__
#define __HTMLFrameSiteEvents2_FWD_DEFINED__
typedef interface HTMLFrameSiteEvents2 HTMLFrameSiteEvents2;
#endif 	/* __HTMLFrameSiteEvents2_FWD_DEFINED__ */


#ifndef __HTMLFrameSiteEvents_FWD_DEFINED__
#define __HTMLFrameSiteEvents_FWD_DEFINED__
typedef interface HTMLFrameSiteEvents HTMLFrameSiteEvents;
#endif 	/* __HTMLFrameSiteEvents_FWD_DEFINED__ */


#ifndef __IHTMLFrameBase2_FWD_DEFINED__
#define __IHTMLFrameBase2_FWD_DEFINED__
typedef interface IHTMLFrameBase2 IHTMLFrameBase2;
#endif 	/* __IHTMLFrameBase2_FWD_DEFINED__ */


#ifndef __IHTMLFrameBase3_FWD_DEFINED__
#define __IHTMLFrameBase3_FWD_DEFINED__
typedef interface IHTMLFrameBase3 IHTMLFrameBase3;
#endif 	/* __IHTMLFrameBase3_FWD_DEFINED__ */


#ifndef __DispHTMLFrameBase_FWD_DEFINED__
#define __DispHTMLFrameBase_FWD_DEFINED__
typedef interface DispHTMLFrameBase DispHTMLFrameBase;
#endif 	/* __DispHTMLFrameBase_FWD_DEFINED__ */


#ifndef __HTMLFrameBase_FWD_DEFINED__
#define __HTMLFrameBase_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFrameBase HTMLFrameBase;
#else
typedef struct HTMLFrameBase HTMLFrameBase;
#endif /* __cplusplus */

#endif 	/* __HTMLFrameBase_FWD_DEFINED__ */


#ifndef __IHTMLFrameElement_FWD_DEFINED__
#define __IHTMLFrameElement_FWD_DEFINED__
typedef interface IHTMLFrameElement IHTMLFrameElement;
#endif 	/* __IHTMLFrameElement_FWD_DEFINED__ */


#ifndef __IHTMLFrameElement2_FWD_DEFINED__
#define __IHTMLFrameElement2_FWD_DEFINED__
typedef interface IHTMLFrameElement2 IHTMLFrameElement2;
#endif 	/* __IHTMLFrameElement2_FWD_DEFINED__ */


#ifndef __DispHTMLFrameElement_FWD_DEFINED__
#define __DispHTMLFrameElement_FWD_DEFINED__
typedef interface DispHTMLFrameElement DispHTMLFrameElement;
#endif 	/* __DispHTMLFrameElement_FWD_DEFINED__ */


#ifndef __HTMLFrameElement_FWD_DEFINED__
#define __HTMLFrameElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFrameElement HTMLFrameElement;
#else
typedef struct HTMLFrameElement HTMLFrameElement;
#endif /* __cplusplus */

#endif 	/* __HTMLFrameElement_FWD_DEFINED__ */


#ifndef __IHTMLIFrameElement_FWD_DEFINED__
#define __IHTMLIFrameElement_FWD_DEFINED__
typedef interface IHTMLIFrameElement IHTMLIFrameElement;
#endif 	/* __IHTMLIFrameElement_FWD_DEFINED__ */


#ifndef __IHTMLIFrameElement2_FWD_DEFINED__
#define __IHTMLIFrameElement2_FWD_DEFINED__
typedef interface IHTMLIFrameElement2 IHTMLIFrameElement2;
#endif 	/* __IHTMLIFrameElement2_FWD_DEFINED__ */


#ifndef __DispHTMLIFrame_FWD_DEFINED__
#define __DispHTMLIFrame_FWD_DEFINED__
typedef interface DispHTMLIFrame DispHTMLIFrame;
#endif 	/* __DispHTMLIFrame_FWD_DEFINED__ */


#ifndef __HTMLIFrame_FWD_DEFINED__
#define __HTMLIFrame_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLIFrame HTMLIFrame;
#else
typedef struct HTMLIFrame HTMLIFrame;
#endif /* __cplusplus */

#endif 	/* __HTMLIFrame_FWD_DEFINED__ */


#ifndef __IHTMLDivPosition_FWD_DEFINED__
#define __IHTMLDivPosition_FWD_DEFINED__
typedef interface IHTMLDivPosition IHTMLDivPosition;
#endif 	/* __IHTMLDivPosition_FWD_DEFINED__ */


#ifndef __IHTMLFieldSetElement_FWD_DEFINED__
#define __IHTMLFieldSetElement_FWD_DEFINED__
typedef interface IHTMLFieldSetElement IHTMLFieldSetElement;
#endif 	/* __IHTMLFieldSetElement_FWD_DEFINED__ */


#ifndef __IHTMLFieldSetElement2_FWD_DEFINED__
#define __IHTMLFieldSetElement2_FWD_DEFINED__
typedef interface IHTMLFieldSetElement2 IHTMLFieldSetElement2;
#endif 	/* __IHTMLFieldSetElement2_FWD_DEFINED__ */


#ifndef __IHTMLLegendElement_FWD_DEFINED__
#define __IHTMLLegendElement_FWD_DEFINED__
typedef interface IHTMLLegendElement IHTMLLegendElement;
#endif 	/* __IHTMLLegendElement_FWD_DEFINED__ */


#ifndef __IHTMLLegendElement2_FWD_DEFINED__
#define __IHTMLLegendElement2_FWD_DEFINED__
typedef interface IHTMLLegendElement2 IHTMLLegendElement2;
#endif 	/* __IHTMLLegendElement2_FWD_DEFINED__ */


#ifndef __DispHTMLDivPosition_FWD_DEFINED__
#define __DispHTMLDivPosition_FWD_DEFINED__
typedef interface DispHTMLDivPosition DispHTMLDivPosition;
#endif 	/* __DispHTMLDivPosition_FWD_DEFINED__ */


#ifndef __HTMLDivPosition_FWD_DEFINED__
#define __HTMLDivPosition_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDivPosition HTMLDivPosition;
#else
typedef struct HTMLDivPosition HTMLDivPosition;
#endif /* __cplusplus */

#endif 	/* __HTMLDivPosition_FWD_DEFINED__ */


#ifndef __DispHTMLFieldSetElement_FWD_DEFINED__
#define __DispHTMLFieldSetElement_FWD_DEFINED__
typedef interface DispHTMLFieldSetElement DispHTMLFieldSetElement;
#endif 	/* __DispHTMLFieldSetElement_FWD_DEFINED__ */


#ifndef __HTMLFieldSetElement_FWD_DEFINED__
#define __HTMLFieldSetElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFieldSetElement HTMLFieldSetElement;
#else
typedef struct HTMLFieldSetElement HTMLFieldSetElement;
#endif /* __cplusplus */

#endif 	/* __HTMLFieldSetElement_FWD_DEFINED__ */


#ifndef __DispHTMLLegendElement_FWD_DEFINED__
#define __DispHTMLLegendElement_FWD_DEFINED__
typedef interface DispHTMLLegendElement DispHTMLLegendElement;
#endif 	/* __DispHTMLLegendElement_FWD_DEFINED__ */


#ifndef __HTMLLegendElement_FWD_DEFINED__
#define __HTMLLegendElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLegendElement HTMLLegendElement;
#else
typedef struct HTMLLegendElement HTMLLegendElement;
#endif /* __cplusplus */

#endif 	/* __HTMLLegendElement_FWD_DEFINED__ */


#ifndef __IHTMLSpanFlow_FWD_DEFINED__
#define __IHTMLSpanFlow_FWD_DEFINED__
typedef interface IHTMLSpanFlow IHTMLSpanFlow;
#endif 	/* __IHTMLSpanFlow_FWD_DEFINED__ */


#ifndef __DispHTMLSpanFlow_FWD_DEFINED__
#define __DispHTMLSpanFlow_FWD_DEFINED__
typedef interface DispHTMLSpanFlow DispHTMLSpanFlow;
#endif 	/* __DispHTMLSpanFlow_FWD_DEFINED__ */


#ifndef __HTMLSpanFlow_FWD_DEFINED__
#define __HTMLSpanFlow_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLSpanFlow HTMLSpanFlow;
#else
typedef struct HTMLSpanFlow HTMLSpanFlow;
#endif /* __cplusplus */

#endif 	/* __HTMLSpanFlow_FWD_DEFINED__ */


#ifndef __IHTMLFrameSetElement_FWD_DEFINED__
#define __IHTMLFrameSetElement_FWD_DEFINED__
typedef interface IHTMLFrameSetElement IHTMLFrameSetElement;
#endif 	/* __IHTMLFrameSetElement_FWD_DEFINED__ */


#ifndef __IHTMLFrameSetElement2_FWD_DEFINED__
#define __IHTMLFrameSetElement2_FWD_DEFINED__
typedef interface IHTMLFrameSetElement2 IHTMLFrameSetElement2;
#endif 	/* __IHTMLFrameSetElement2_FWD_DEFINED__ */


#ifndef __DispHTMLFrameSetSite_FWD_DEFINED__
#define __DispHTMLFrameSetSite_FWD_DEFINED__
typedef interface DispHTMLFrameSetSite DispHTMLFrameSetSite;
#endif 	/* __DispHTMLFrameSetSite_FWD_DEFINED__ */


#ifndef __HTMLFrameSetSite_FWD_DEFINED__
#define __HTMLFrameSetSite_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFrameSetSite HTMLFrameSetSite;
#else
typedef struct HTMLFrameSetSite HTMLFrameSetSite;
#endif /* __cplusplus */

#endif 	/* __HTMLFrameSetSite_FWD_DEFINED__ */


#ifndef __IHTMLBGsound_FWD_DEFINED__
#define __IHTMLBGsound_FWD_DEFINED__
typedef interface IHTMLBGsound IHTMLBGsound;
#endif 	/* __IHTMLBGsound_FWD_DEFINED__ */


#ifndef __DispHTMLBGsound_FWD_DEFINED__
#define __DispHTMLBGsound_FWD_DEFINED__
typedef interface DispHTMLBGsound DispHTMLBGsound;
#endif 	/* __DispHTMLBGsound_FWD_DEFINED__ */


#ifndef __HTMLBGsound_FWD_DEFINED__
#define __HTMLBGsound_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBGsound HTMLBGsound;
#else
typedef struct HTMLBGsound HTMLBGsound;
#endif /* __cplusplus */

#endif 	/* __HTMLBGsound_FWD_DEFINED__ */


#ifndef __IHTMLFontNamesCollection_FWD_DEFINED__
#define __IHTMLFontNamesCollection_FWD_DEFINED__
typedef interface IHTMLFontNamesCollection IHTMLFontNamesCollection;
#endif 	/* __IHTMLFontNamesCollection_FWD_DEFINED__ */


#ifndef __IHTMLFontSizesCollection_FWD_DEFINED__
#define __IHTMLFontSizesCollection_FWD_DEFINED__
typedef interface IHTMLFontSizesCollection IHTMLFontSizesCollection;
#endif 	/* __IHTMLFontSizesCollection_FWD_DEFINED__ */


#ifndef __IHTMLOptionsHolder_FWD_DEFINED__
#define __IHTMLOptionsHolder_FWD_DEFINED__
typedef interface IHTMLOptionsHolder IHTMLOptionsHolder;
#endif 	/* __IHTMLOptionsHolder_FWD_DEFINED__ */


#ifndef __HTMLStyleElementEvents2_FWD_DEFINED__
#define __HTMLStyleElementEvents2_FWD_DEFINED__
typedef interface HTMLStyleElementEvents2 HTMLStyleElementEvents2;
#endif 	/* __HTMLStyleElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLStyleElementEvents_FWD_DEFINED__
#define __HTMLStyleElementEvents_FWD_DEFINED__
typedef interface HTMLStyleElementEvents HTMLStyleElementEvents;
#endif 	/* __HTMLStyleElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLStyleElement_FWD_DEFINED__
#define __IHTMLStyleElement_FWD_DEFINED__
typedef interface IHTMLStyleElement IHTMLStyleElement;
#endif 	/* __IHTMLStyleElement_FWD_DEFINED__ */


#ifndef __DispHTMLStyleElement_FWD_DEFINED__
#define __DispHTMLStyleElement_FWD_DEFINED__
typedef interface DispHTMLStyleElement DispHTMLStyleElement;
#endif 	/* __DispHTMLStyleElement_FWD_DEFINED__ */


#ifndef __HTMLStyleElement_FWD_DEFINED__
#define __HTMLStyleElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleElement HTMLStyleElement;
#else
typedef struct HTMLStyleElement HTMLStyleElement;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleElement_FWD_DEFINED__ */


#ifndef __IHTMLStyleFontFace_FWD_DEFINED__
#define __IHTMLStyleFontFace_FWD_DEFINED__
typedef interface IHTMLStyleFontFace IHTMLStyleFontFace;
#endif 	/* __IHTMLStyleFontFace_FWD_DEFINED__ */


#ifndef __HTMLStyleFontFace_FWD_DEFINED__
#define __HTMLStyleFontFace_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleFontFace HTMLStyleFontFace;
#else
typedef struct HTMLStyleFontFace HTMLStyleFontFace;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleFontFace_FWD_DEFINED__ */


#ifndef __ICSSFilterSite_FWD_DEFINED__
#define __ICSSFilterSite_FWD_DEFINED__
typedef interface ICSSFilterSite ICSSFilterSite;
#endif 	/* __ICSSFilterSite_FWD_DEFINED__ */


#ifndef __IMarkupPointer_FWD_DEFINED__
#define __IMarkupPointer_FWD_DEFINED__
typedef interface IMarkupPointer IMarkupPointer;
#endif 	/* __IMarkupPointer_FWD_DEFINED__ */


#ifndef __IMarkupContainer_FWD_DEFINED__
#define __IMarkupContainer_FWD_DEFINED__
typedef interface IMarkupContainer IMarkupContainer;
#endif 	/* __IMarkupContainer_FWD_DEFINED__ */


#ifndef __IMarkupContainer2_FWD_DEFINED__
#define __IMarkupContainer2_FWD_DEFINED__
typedef interface IMarkupContainer2 IMarkupContainer2;
#endif 	/* __IMarkupContainer2_FWD_DEFINED__ */


#ifndef __IHTMLChangeLog_FWD_DEFINED__
#define __IHTMLChangeLog_FWD_DEFINED__
typedef interface IHTMLChangeLog IHTMLChangeLog;
#endif 	/* __IHTMLChangeLog_FWD_DEFINED__ */


#ifndef __IHTMLChangeSink_FWD_DEFINED__
#define __IHTMLChangeSink_FWD_DEFINED__
typedef interface IHTMLChangeSink IHTMLChangeSink;
#endif 	/* __IHTMLChangeSink_FWD_DEFINED__ */


#ifndef __IActiveIMMApp_FWD_DEFINED__
#define __IActiveIMMApp_FWD_DEFINED__
typedef interface IActiveIMMApp IActiveIMMApp;
#endif 	/* __IActiveIMMApp_FWD_DEFINED__ */


#ifndef __ISegmentList_FWD_DEFINED__
#define __ISegmentList_FWD_DEFINED__
typedef interface ISegmentList ISegmentList;
#endif 	/* __ISegmentList_FWD_DEFINED__ */


#ifndef __ISegmentListIterator_FWD_DEFINED__
#define __ISegmentListIterator_FWD_DEFINED__
typedef interface ISegmentListIterator ISegmentListIterator;
#endif 	/* __ISegmentListIterator_FWD_DEFINED__ */


#ifndef __IHTMLCaret_FWD_DEFINED__
#define __IHTMLCaret_FWD_DEFINED__
typedef interface IHTMLCaret IHTMLCaret;
#endif 	/* __IHTMLCaret_FWD_DEFINED__ */


#ifndef __ISegment_FWD_DEFINED__
#define __ISegment_FWD_DEFINED__
typedef interface ISegment ISegment;
#endif 	/* __ISegment_FWD_DEFINED__ */


#ifndef __IElementSegment_FWD_DEFINED__
#define __IElementSegment_FWD_DEFINED__
typedef interface IElementSegment IElementSegment;
#endif 	/* __IElementSegment_FWD_DEFINED__ */


#ifndef __IHighlightSegment_FWD_DEFINED__
#define __IHighlightSegment_FWD_DEFINED__
typedef interface IHighlightSegment IHighlightSegment;
#endif 	/* __IHighlightSegment_FWD_DEFINED__ */


#ifndef __IHighlightRenderingServices_FWD_DEFINED__
#define __IHighlightRenderingServices_FWD_DEFINED__
typedef interface IHighlightRenderingServices IHighlightRenderingServices;
#endif 	/* __IHighlightRenderingServices_FWD_DEFINED__ */


#ifndef __ILineInfo_FWD_DEFINED__
#define __ILineInfo_FWD_DEFINED__
typedef interface ILineInfo ILineInfo;
#endif 	/* __ILineInfo_FWD_DEFINED__ */


#ifndef __IDisplayPointer_FWD_DEFINED__
#define __IDisplayPointer_FWD_DEFINED__
typedef interface IDisplayPointer IDisplayPointer;
#endif 	/* __IDisplayPointer_FWD_DEFINED__ */


#ifndef __IDisplayServices_FWD_DEFINED__
#define __IDisplayServices_FWD_DEFINED__
typedef interface IDisplayServices IDisplayServices;
#endif 	/* __IDisplayServices_FWD_DEFINED__ */


#ifndef __IHtmlDlgSafeHelper_FWD_DEFINED__
#define __IHtmlDlgSafeHelper_FWD_DEFINED__
typedef interface IHtmlDlgSafeHelper IHtmlDlgSafeHelper;
#endif 	/* __IHtmlDlgSafeHelper_FWD_DEFINED__ */


#ifndef __IBlockFormats_FWD_DEFINED__
#define __IBlockFormats_FWD_DEFINED__
typedef interface IBlockFormats IBlockFormats;
#endif 	/* __IBlockFormats_FWD_DEFINED__ */


#ifndef __IFontNames_FWD_DEFINED__
#define __IFontNames_FWD_DEFINED__
typedef interface IFontNames IFontNames;
#endif 	/* __IFontNames_FWD_DEFINED__ */


#ifndef __ICSSFilter_FWD_DEFINED__
#define __ICSSFilter_FWD_DEFINED__
typedef interface ICSSFilter ICSSFilter;
#endif 	/* __ICSSFilter_FWD_DEFINED__ */


#ifndef __ISecureUrlHost_FWD_DEFINED__
#define __ISecureUrlHost_FWD_DEFINED__
typedef interface ISecureUrlHost ISecureUrlHost;
#endif 	/* __ISecureUrlHost_FWD_DEFINED__ */


#ifndef __IMarkupServices_FWD_DEFINED__
#define __IMarkupServices_FWD_DEFINED__
typedef interface IMarkupServices IMarkupServices;
#endif 	/* __IMarkupServices_FWD_DEFINED__ */


#ifndef __IMarkupServices2_FWD_DEFINED__
#define __IMarkupServices2_FWD_DEFINED__
typedef interface IMarkupServices2 IMarkupServices2;
#endif 	/* __IMarkupServices2_FWD_DEFINED__ */


#ifndef __IHTMLChangePlayback_FWD_DEFINED__
#define __IHTMLChangePlayback_FWD_DEFINED__
typedef interface IHTMLChangePlayback IHTMLChangePlayback;
#endif 	/* __IHTMLChangePlayback_FWD_DEFINED__ */


#ifndef __IMarkupPointer2_FWD_DEFINED__
#define __IMarkupPointer2_FWD_DEFINED__
typedef interface IMarkupPointer2 IMarkupPointer2;
#endif 	/* __IMarkupPointer2_FWD_DEFINED__ */


#ifndef __IMarkupTextFrags_FWD_DEFINED__
#define __IMarkupTextFrags_FWD_DEFINED__
typedef interface IMarkupTextFrags IMarkupTextFrags;
#endif 	/* __IMarkupTextFrags_FWD_DEFINED__ */


#ifndef __IXMLGenericParse_FWD_DEFINED__
#define __IXMLGenericParse_FWD_DEFINED__
typedef interface IXMLGenericParse IXMLGenericParse;
#endif 	/* __IXMLGenericParse_FWD_DEFINED__ */


#ifndef __IHTMLEditHost_FWD_DEFINED__
#define __IHTMLEditHost_FWD_DEFINED__
typedef interface IHTMLEditHost IHTMLEditHost;
#endif 	/* __IHTMLEditHost_FWD_DEFINED__ */


#ifndef __IHTMLEditHost2_FWD_DEFINED__
#define __IHTMLEditHost2_FWD_DEFINED__
typedef interface IHTMLEditHost2 IHTMLEditHost2;
#endif 	/* __IHTMLEditHost2_FWD_DEFINED__ */


#ifndef __ISequenceNumber_FWD_DEFINED__
#define __ISequenceNumber_FWD_DEFINED__
typedef interface ISequenceNumber ISequenceNumber;
#endif 	/* __ISequenceNumber_FWD_DEFINED__ */


#ifndef __IIMEServices_FWD_DEFINED__
#define __IIMEServices_FWD_DEFINED__
typedef interface IIMEServices IIMEServices;
#endif 	/* __IIMEServices_FWD_DEFINED__ */


#ifndef __ISelectionServicesListener_FWD_DEFINED__
#define __ISelectionServicesListener_FWD_DEFINED__
typedef interface ISelectionServicesListener ISelectionServicesListener;
#endif 	/* __ISelectionServicesListener_FWD_DEFINED__ */


#ifndef __ISelectionServices_FWD_DEFINED__
#define __ISelectionServices_FWD_DEFINED__
typedef interface ISelectionServices ISelectionServices;
#endif 	/* __ISelectionServices_FWD_DEFINED__ */


#ifndef __IHTMLEditDesigner_FWD_DEFINED__
#define __IHTMLEditDesigner_FWD_DEFINED__
typedef interface IHTMLEditDesigner IHTMLEditDesigner;
#endif 	/* __IHTMLEditDesigner_FWD_DEFINED__ */


#ifndef __IHTMLEditServices_FWD_DEFINED__
#define __IHTMLEditServices_FWD_DEFINED__
typedef interface IHTMLEditServices IHTMLEditServices;
#endif 	/* __IHTMLEditServices_FWD_DEFINED__ */


#ifndef __IHTMLEditServices2_FWD_DEFINED__
#define __IHTMLEditServices2_FWD_DEFINED__
typedef interface IHTMLEditServices2 IHTMLEditServices2;
#endif 	/* __IHTMLEditServices2_FWD_DEFINED__ */


#ifndef __IHTMLComputedStyle_FWD_DEFINED__
#define __IHTMLComputedStyle_FWD_DEFINED__
typedef interface IHTMLComputedStyle IHTMLComputedStyle;
#endif 	/* __IHTMLComputedStyle_FWD_DEFINED__ */


#ifndef __HtmlDlgSafeHelper_FWD_DEFINED__
#define __HtmlDlgSafeHelper_FWD_DEFINED__

#ifdef __cplusplus
typedef class HtmlDlgSafeHelper HtmlDlgSafeHelper;
#else
typedef struct HtmlDlgSafeHelper HtmlDlgSafeHelper;
#endif /* __cplusplus */

#endif 	/* __HtmlDlgSafeHelper_FWD_DEFINED__ */


#ifndef __BlockFormats_FWD_DEFINED__
#define __BlockFormats_FWD_DEFINED__

#ifdef __cplusplus
typedef class BlockFormats BlockFormats;
#else
typedef struct BlockFormats BlockFormats;
#endif /* __cplusplus */

#endif 	/* __BlockFormats_FWD_DEFINED__ */


#ifndef __FontNames_FWD_DEFINED__
#define __FontNames_FWD_DEFINED__

#ifdef __cplusplus
typedef class FontNames FontNames;
#else
typedef struct FontNames FontNames;
#endif /* __cplusplus */

#endif 	/* __FontNames_FWD_DEFINED__ */


#ifndef __HTMLNamespaceEvents_FWD_DEFINED__
#define __HTMLNamespaceEvents_FWD_DEFINED__
typedef interface HTMLNamespaceEvents HTMLNamespaceEvents;
#endif 	/* __HTMLNamespaceEvents_FWD_DEFINED__ */


#ifndef __IHTMLNamespace_FWD_DEFINED__
#define __IHTMLNamespace_FWD_DEFINED__
typedef interface IHTMLNamespace IHTMLNamespace;
#endif 	/* __IHTMLNamespace_FWD_DEFINED__ */


#ifndef __IHTMLNamespaceCollection_FWD_DEFINED__
#define __IHTMLNamespaceCollection_FWD_DEFINED__
typedef interface IHTMLNamespaceCollection IHTMLNamespaceCollection;
#endif 	/* __IHTMLNamespaceCollection_FWD_DEFINED__ */


#ifndef __HTMLNamespace_FWD_DEFINED__
#define __HTMLNamespace_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNamespace HTMLNamespace;
#else
typedef struct HTMLNamespace HTMLNamespace;
#endif /* __cplusplus */

#endif 	/* __HTMLNamespace_FWD_DEFINED__ */


#ifndef __HTMLNamespaceCollection_FWD_DEFINED__
#define __HTMLNamespaceCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNamespaceCollection HTMLNamespaceCollection;
#else
typedef struct HTMLNamespaceCollection HTMLNamespaceCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLNamespaceCollection_FWD_DEFINED__ */


#ifndef __IHTMLPainter_FWD_DEFINED__
#define __IHTMLPainter_FWD_DEFINED__
typedef interface IHTMLPainter IHTMLPainter;
#endif 	/* __IHTMLPainter_FWD_DEFINED__ */


#ifndef __IHTMLPaintSite_FWD_DEFINED__
#define __IHTMLPaintSite_FWD_DEFINED__
typedef interface IHTMLPaintSite IHTMLPaintSite;
#endif 	/* __IHTMLPaintSite_FWD_DEFINED__ */


#ifndef __IHTMLPainterEventInfo_FWD_DEFINED__
#define __IHTMLPainterEventInfo_FWD_DEFINED__
typedef interface IHTMLPainterEventInfo IHTMLPainterEventInfo;
#endif 	/* __IHTMLPainterEventInfo_FWD_DEFINED__ */


#ifndef __IHTMLPainterOverlay_FWD_DEFINED__
#define __IHTMLPainterOverlay_FWD_DEFINED__
typedef interface IHTMLPainterOverlay IHTMLPainterOverlay;
#endif 	/* __IHTMLPainterOverlay_FWD_DEFINED__ */


#ifndef __IHTMLIPrintCollection_FWD_DEFINED__
#define __IHTMLIPrintCollection_FWD_DEFINED__
typedef interface IHTMLIPrintCollection IHTMLIPrintCollection;
#endif 	/* __IHTMLIPrintCollection_FWD_DEFINED__ */


#ifndef __IEnumPrivacyRecords_FWD_DEFINED__
#define __IEnumPrivacyRecords_FWD_DEFINED__
typedef interface IEnumPrivacyRecords IEnumPrivacyRecords;
#endif 	/* __IEnumPrivacyRecords_FWD_DEFINED__ */


#ifndef __INavigateServices_FWD_DEFINED__
#define __INavigateServices_FWD_DEFINED__
typedef interface INavigateServices INavigateServices;
#endif 	/* __INavigateServices_FWD_DEFINED__ */


#ifndef __IWPCBlockedUrls_FWD_DEFINED__
#define __IWPCBlockedUrls_FWD_DEFINED__
typedef interface IWPCBlockedUrls IWPCBlockedUrls;
#endif 	/* __IWPCBlockedUrls_FWD_DEFINED__ */


#ifndef __IHTMLDialog_FWD_DEFINED__
#define __IHTMLDialog_FWD_DEFINED__
typedef interface IHTMLDialog IHTMLDialog;
#endif 	/* __IHTMLDialog_FWD_DEFINED__ */


#ifndef __IHTMLDialog2_FWD_DEFINED__
#define __IHTMLDialog2_FWD_DEFINED__
typedef interface IHTMLDialog2 IHTMLDialog2;
#endif 	/* __IHTMLDialog2_FWD_DEFINED__ */


#ifndef __IHTMLDialog3_FWD_DEFINED__
#define __IHTMLDialog3_FWD_DEFINED__
typedef interface IHTMLDialog3 IHTMLDialog3;
#endif 	/* __IHTMLDialog3_FWD_DEFINED__ */


#ifndef __IHTMLModelessInit_FWD_DEFINED__
#define __IHTMLModelessInit_FWD_DEFINED__
typedef interface IHTMLModelessInit IHTMLModelessInit;
#endif 	/* __IHTMLModelessInit_FWD_DEFINED__ */


#ifndef __ThreadDialogProcParam_FWD_DEFINED__
#define __ThreadDialogProcParam_FWD_DEFINED__

#ifdef __cplusplus
typedef class ThreadDialogProcParam ThreadDialogProcParam;
#else
typedef struct ThreadDialogProcParam ThreadDialogProcParam;
#endif /* __cplusplus */

#endif 	/* __ThreadDialogProcParam_FWD_DEFINED__ */


#ifndef __HTMLDialog_FWD_DEFINED__
#define __HTMLDialog_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDialog HTMLDialog;
#else
typedef struct HTMLDialog HTMLDialog;
#endif /* __cplusplus */

#endif 	/* __HTMLDialog_FWD_DEFINED__ */


#ifndef __IHTMLPopup_FWD_DEFINED__
#define __IHTMLPopup_FWD_DEFINED__
typedef interface IHTMLPopup IHTMLPopup;
#endif 	/* __IHTMLPopup_FWD_DEFINED__ */


#ifndef __DispHTMLPopup_FWD_DEFINED__
#define __DispHTMLPopup_FWD_DEFINED__
typedef interface DispHTMLPopup DispHTMLPopup;
#endif 	/* __DispHTMLPopup_FWD_DEFINED__ */


#ifndef __HTMLPopup_FWD_DEFINED__
#define __HTMLPopup_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLPopup HTMLPopup;
#else
typedef struct HTMLPopup HTMLPopup;
#endif /* __cplusplus */

#endif 	/* __HTMLPopup_FWD_DEFINED__ */


#ifndef __IHTMLAppBehavior_FWD_DEFINED__
#define __IHTMLAppBehavior_FWD_DEFINED__
typedef interface IHTMLAppBehavior IHTMLAppBehavior;
#endif 	/* __IHTMLAppBehavior_FWD_DEFINED__ */


#ifndef __IHTMLAppBehavior2_FWD_DEFINED__
#define __IHTMLAppBehavior2_FWD_DEFINED__
typedef interface IHTMLAppBehavior2 IHTMLAppBehavior2;
#endif 	/* __IHTMLAppBehavior2_FWD_DEFINED__ */


#ifndef __IHTMLAppBehavior3_FWD_DEFINED__
#define __IHTMLAppBehavior3_FWD_DEFINED__
typedef interface IHTMLAppBehavior3 IHTMLAppBehavior3;
#endif 	/* __IHTMLAppBehavior3_FWD_DEFINED__ */


#ifndef __DispHTMLAppBehavior_FWD_DEFINED__
#define __DispHTMLAppBehavior_FWD_DEFINED__
typedef interface DispHTMLAppBehavior DispHTMLAppBehavior;
#endif 	/* __DispHTMLAppBehavior_FWD_DEFINED__ */


#ifndef __HTMLAppBehavior_FWD_DEFINED__
#define __HTMLAppBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAppBehavior HTMLAppBehavior;
#else
typedef struct HTMLAppBehavior HTMLAppBehavior;
#endif /* __cplusplus */

#endif 	/* __HTMLAppBehavior_FWD_DEFINED__ */


#ifndef __OldHTMLDocument_FWD_DEFINED__
#define __OldHTMLDocument_FWD_DEFINED__

#ifdef __cplusplus
typedef class OldHTMLDocument OldHTMLDocument;
#else
typedef struct OldHTMLDocument OldHTMLDocument;
#endif /* __cplusplus */

#endif 	/* __OldHTMLDocument_FWD_DEFINED__ */


#ifndef __OldHTMLFormElement_FWD_DEFINED__
#define __OldHTMLFormElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class OldHTMLFormElement OldHTMLFormElement;
#else
typedef struct OldHTMLFormElement OldHTMLFormElement;
#endif /* __cplusplus */

#endif 	/* __OldHTMLFormElement_FWD_DEFINED__ */


#ifndef __DispIHTMLInputButtonElement_FWD_DEFINED__
#define __DispIHTMLInputButtonElement_FWD_DEFINED__
typedef interface DispIHTMLInputButtonElement DispIHTMLInputButtonElement;
#endif 	/* __DispIHTMLInputButtonElement_FWD_DEFINED__ */


#ifndef __HTMLInputButtonElement_FWD_DEFINED__
#define __HTMLInputButtonElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputButtonElement HTMLInputButtonElement;
#else
typedef struct HTMLInputButtonElement HTMLInputButtonElement;
#endif /* __cplusplus */

#endif 	/* __HTMLInputButtonElement_FWD_DEFINED__ */


#ifndef __DispIHTMLInputTextElement_FWD_DEFINED__
#define __DispIHTMLInputTextElement_FWD_DEFINED__
typedef interface DispIHTMLInputTextElement DispIHTMLInputTextElement;
#endif 	/* __DispIHTMLInputTextElement_FWD_DEFINED__ */


#ifndef __HTMLInputTextElement_FWD_DEFINED__
#define __HTMLInputTextElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputTextElement HTMLInputTextElement;
#else
typedef struct HTMLInputTextElement HTMLInputTextElement;
#endif /* __cplusplus */

#endif 	/* __HTMLInputTextElement_FWD_DEFINED__ */


#ifndef __DispIHTMLInputFileElement_FWD_DEFINED__
#define __DispIHTMLInputFileElement_FWD_DEFINED__
typedef interface DispIHTMLInputFileElement DispIHTMLInputFileElement;
#endif 	/* __DispIHTMLInputFileElement_FWD_DEFINED__ */


#ifndef __HTMLInputFileElement_FWD_DEFINED__
#define __HTMLInputFileElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputFileElement HTMLInputFileElement;
#else
typedef struct HTMLInputFileElement HTMLInputFileElement;
#endif /* __cplusplus */

#endif 	/* __HTMLInputFileElement_FWD_DEFINED__ */


#ifndef __DispIHTMLOptionButtonElement_FWD_DEFINED__
#define __DispIHTMLOptionButtonElement_FWD_DEFINED__
typedef interface DispIHTMLOptionButtonElement DispIHTMLOptionButtonElement;
#endif 	/* __DispIHTMLOptionButtonElement_FWD_DEFINED__ */


#ifndef __HTMLOptionButtonElement_FWD_DEFINED__
#define __HTMLOptionButtonElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLOptionButtonElement HTMLOptionButtonElement;
#else
typedef struct HTMLOptionButtonElement HTMLOptionButtonElement;
#endif /* __cplusplus */

#endif 	/* __HTMLOptionButtonElement_FWD_DEFINED__ */


#ifndef __DispIHTMLInputImage_FWD_DEFINED__
#define __DispIHTMLInputImage_FWD_DEFINED__
typedef interface DispIHTMLInputImage DispIHTMLInputImage;
#endif 	/* __DispIHTMLInputImage_FWD_DEFINED__ */


#ifndef __HTMLInputImage_FWD_DEFINED__
#define __HTMLInputImage_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputImage HTMLInputImage;
#else
typedef struct HTMLInputImage HTMLInputImage;
#endif /* __cplusplus */

#endif 	/* __HTMLInputImage_FWD_DEFINED__ */


#ifndef __IElementNamespace_FWD_DEFINED__
#define __IElementNamespace_FWD_DEFINED__
typedef interface IElementNamespace IElementNamespace;
#endif 	/* __IElementNamespace_FWD_DEFINED__ */


#ifndef __IElementNamespaceTable_FWD_DEFINED__
#define __IElementNamespaceTable_FWD_DEFINED__
typedef interface IElementNamespaceTable IElementNamespaceTable;
#endif 	/* __IElementNamespaceTable_FWD_DEFINED__ */


#ifndef __IElementNamespaceFactory_FWD_DEFINED__
#define __IElementNamespaceFactory_FWD_DEFINED__
typedef interface IElementNamespaceFactory IElementNamespaceFactory;
#endif 	/* __IElementNamespaceFactory_FWD_DEFINED__ */


#ifndef __IElementNamespaceFactory2_FWD_DEFINED__
#define __IElementNamespaceFactory2_FWD_DEFINED__
typedef interface IElementNamespaceFactory2 IElementNamespaceFactory2;
#endif 	/* __IElementNamespaceFactory2_FWD_DEFINED__ */


#ifndef __IElementNamespaceFactoryCallback_FWD_DEFINED__
#define __IElementNamespaceFactoryCallback_FWD_DEFINED__
typedef interface IElementNamespaceFactoryCallback IElementNamespaceFactoryCallback;
#endif 	/* __IElementNamespaceFactoryCallback_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteOM2_FWD_DEFINED__
#define __IElementBehaviorSiteOM2_FWD_DEFINED__
typedef interface IElementBehaviorSiteOM2 IElementBehaviorSiteOM2;
#endif 	/* __IElementBehaviorSiteOM2_FWD_DEFINED__ */


#ifndef __IElementBehaviorCategory_FWD_DEFINED__
#define __IElementBehaviorCategory_FWD_DEFINED__
typedef interface IElementBehaviorCategory IElementBehaviorCategory;
#endif 	/* __IElementBehaviorCategory_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteCategory_FWD_DEFINED__
#define __IElementBehaviorSiteCategory_FWD_DEFINED__
typedef interface IElementBehaviorSiteCategory IElementBehaviorSiteCategory;
#endif 	/* __IElementBehaviorSiteCategory_FWD_DEFINED__ */


#ifndef __IElementBehaviorSubmit_FWD_DEFINED__
#define __IElementBehaviorSubmit_FWD_DEFINED__
typedef interface IElementBehaviorSubmit IElementBehaviorSubmit;
#endif 	/* __IElementBehaviorSubmit_FWD_DEFINED__ */


#ifndef __IElementBehaviorFocus_FWD_DEFINED__
#define __IElementBehaviorFocus_FWD_DEFINED__
typedef interface IElementBehaviorFocus IElementBehaviorFocus;
#endif 	/* __IElementBehaviorFocus_FWD_DEFINED__ */


#ifndef __IElementBehaviorLayout_FWD_DEFINED__
#define __IElementBehaviorLayout_FWD_DEFINED__
typedef interface IElementBehaviorLayout IElementBehaviorLayout;
#endif 	/* __IElementBehaviorLayout_FWD_DEFINED__ */


#ifndef __IElementBehaviorLayout2_FWD_DEFINED__
#define __IElementBehaviorLayout2_FWD_DEFINED__
typedef interface IElementBehaviorLayout2 IElementBehaviorLayout2;
#endif 	/* __IElementBehaviorLayout2_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteLayout_FWD_DEFINED__
#define __IElementBehaviorSiteLayout_FWD_DEFINED__
typedef interface IElementBehaviorSiteLayout IElementBehaviorSiteLayout;
#endif 	/* __IElementBehaviorSiteLayout_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteLayout2_FWD_DEFINED__
#define __IElementBehaviorSiteLayout2_FWD_DEFINED__
typedef interface IElementBehaviorSiteLayout2 IElementBehaviorSiteLayout2;
#endif 	/* __IElementBehaviorSiteLayout2_FWD_DEFINED__ */


#ifndef __IHostBehaviorInit_FWD_DEFINED__
#define __IHostBehaviorInit_FWD_DEFINED__
typedef interface IHostBehaviorInit IHostBehaviorInit;
#endif 	/* __IHostBehaviorInit_FWD_DEFINED__ */


/* header files for imported files */
#include "ocidl.h"
#include "dimm.h"
#include "shtypes.h"

#ifdef __cplusplus
extern "C"{
#endif 

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_mshtml_0000 */
/* [local] */ 


#include <olectl.h>
EXTERN_C const GUID CMDSETID_Forms3;
EXTERN_C const GUID CLSID_MHTMLDocument;
EXTERN_C const GUID CLSID_HTADocument;
EXTERN_C const GUID CLSID_HTMLApplication;
EXTERN_C const GUID CLSID_HTMLPluginDocument;
DEFINE_GUID(SID_SEditCommandTarget,0x3050f4b5,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);
DEFINE_GUID(CGID_EditStateCommands,0x3050f4b6,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);
DEFINE_GUID(SID_SHTMLEditHost,0x3050f6a0,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);
DEFINE_GUID(SID_SHTMLEditServices,0x3050f7f9,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);
#define SID_SHTMLWindow IID_IHTMLWindow2
#define SID_SElementBehaviorFactory IID_IElementBehaviorFactory
// This information will be the LOWORD of the privacy flags stored in the privacy record
#define COOKIEACTION_NONE           0x00000000
#define COOKIEACTION_ACCEPT         0x00000001
#define COOKIEACTION_REJECT         0x00000002
#define COOKIEACTION_DOWNGRADE      0x00000004
#define COOKIEACTION_LEASH          0x00000008
#define COOKIEACTION_SUPPRESS       0x00000010
#define COOKIEACTION_READ           0x00000020
// Privacy info related to the url
// This information will be the HIWORD of the privacy flags stored in the privacy record
#define PRIVACY_URLISTOPLEVEL          0x00010000                   // Is this a top level url?
#define PRIVACY_URLHASCOMPACTPOLICY    0x00020000                   // Did the url have a compact policy used for privacy evaluations
#define PRIVACY_URLHASPOSTDATA         0x00080000                   // Is this a POST request?
#define PRIVACY_URLHASPOLICYREFLINK    0x00100000                   // Did the url have a privacy ref url in a link tag
#define PRIVACY_URLHASPOLICYREFHEADER  0x00200000                   // Did the url have a privacy ref url in a header tag
#define PRIVACY_URLHASP3PHEADER        0x00400000                   // Did the url have a privacy ref url in a header tag


extern RPC_IF_HANDLE __MIDL_itf_mshtml_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mshtml_0000_v0_0_s_ifspec;

#ifndef __IHTMLFiltersCollection_INTERFACE_DEFINED__
#define __IHTMLFiltersCollection_INTERFACE_DEFINED__

/* interface IHTMLFiltersCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFiltersCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f3ee-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFiltersCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ VARIANT __RPC_FAR *pvarIndex,
            /* [out][retval] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLFiltersCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLFiltersCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLFiltersCollection __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLFiltersCollection __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLFiltersCollection __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLFiltersCollection __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLFiltersCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLFiltersCollection __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_length )( 
            IHTMLFiltersCollection __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__newEnum )( 
            IHTMLFiltersCollection __RPC_FAR * This,
            /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *item )( 
            IHTMLFiltersCollection __RPC_FAR * This,
            /* [in] */ VARIANT __RPC_FAR *pvarIndex,
            /* [out][retval] */ VARIANT __RPC_FAR *pvarResult);
        
        END_INTERFACE
    } IHTMLFiltersCollectionVtbl;

    interface IHTMLFiltersCollection
    {
        CONST_VTBL struct IHTMLFiltersCollectionVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLFiltersCollection_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLFiltersCollection_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLFiltersCollection_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLFiltersCollection_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLFiltersCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLFiltersCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLFiltersCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLFiltersCollection_get_length(This,p)	\
    (This)->lpVtbl -> get_length(This,p)

#define IHTMLFiltersCollection_get__newEnum(This,p)	\
    (This)->lpVtbl -> get__newEnum(This,p)

#define IHTMLFiltersCollection_item(This,pvarIndex,pvarResult)	\
    (This)->lpVtbl -> item(This,pvarIndex,pvarResult)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFiltersCollection_get_length_Proxy( 
    IHTMLFiltersCollection __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLFiltersCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFiltersCollection_get__newEnum_Proxy( 
    IHTMLFiltersCollection __RPC_FAR * This,
    /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLFiltersCollection_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLFiltersCollection_item_Proxy( 
    IHTMLFiltersCollection __RPC_FAR * This,
    /* [in] */ VARIANT __RPC_FAR *pvarIndex,
    /* [out][retval] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB IHTMLFiltersCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFiltersCollection_INTERFACE_DEFINED__ */



#ifndef __MSHTML_LIBRARY_DEFINED__
#define __MSHTML_LIBRARY_DEFINED__

/* library MSHTML */
/* [uuid][version][helpstring][lcid] */ 












typedef 
enum _htmlDesignMode
    {	htmlDesignModeInherit	= -2,
	htmlDesignModeOn	= -1,
	htmlDesignModeOff	= 0,
	htmlDesignMode_Max	= 2147483647L
    }	htmlDesignMode;

typedef 
enum _htmlZOrder
    {	htmlZOrderFront	= 0,
	htmlZOrderBack	= 1,
	htmlZOrder_Max	= 2147483647L
    }	htmlZOrder;

typedef 
enum _htmlClear
    {	htmlClearNotSet	= 0,
	htmlClearAll	= 1,
	htmlClearLeft	= 2,
	htmlClearRight	= 3,
	htmlClearBoth	= 4,
	htmlClearNone	= 5,
	htmlClear_Max	= 2147483647L
    }	htmlClear;

typedef 
enum _htmlControlAlign
    {	htmlControlAlignNotSet	= 0,
	htmlControlAlignLeft	= 1,
	htmlControlAlignCenter	= 2,
	htmlControlAlignRight	= 3,
	htmlControlAlignTextTop	= 4,
	htmlControlAlignAbsMiddle	= 5,
	htmlControlAlignBaseline	= 6,
	htmlControlAlignAbsBottom	= 7,
	htmlControlAlignBottom	= 8,
	htmlControlAlignMiddle	= 9,
	htmlControlAlignTop	= 10,
	htmlControlAlign_Max	= 2147483647L
    }	htmlControlAlign;

typedef 
enum _htmlBlockAlign
    {	htmlBlockAlignNotSet	= 0,
	htmlBlockAlignLeft	= 1,
	htmlBlockAlignCenter	= 2,
	htmlBlockAlignRight	= 3,
	htmlBlockAlignJustify	= 4,
	htmlBlockAlign_Max	= 2147483647L
    }	htmlBlockAlign;

typedef 
enum _htmlReadyState
    {	htmlReadyStateuninitialized	= 0,
	htmlReadyStateloading	= 1,
	htmlReadyStateloaded	= 2,
	htmlReadyStateinteractive	= 3,
	htmlReadyStatecomplete	= 4,
	htmlReadyState_Max	= 2147483647L
    }	htmlReadyState;

typedef 
enum _htmlLoop
    {	htmlLoopLoopInfinite	= -1,
	htmlLoop_Max	= 2147483647L
    }	htmlLoop;

typedef 
enum _mediaType
    {	mediaTypeNotSet	= 0,
	mediaTypeAll	= 511,
	mediaTypeAural	= 1,
	mediaTypeBraille	= 2,
	mediaTypeEmbossed	= 4,
	mediaTypeHandheld	= 8,
	mediaTypePrint	= 16,
	mediaTypeProjection	= 32,
	mediaTypeScreen	= 64,
	mediaTypeTty	= 128,
	mediaTypeTv	= 256,
	mediaType_Max	= 2147483647L
    }	mediaType;

typedef 
enum _styleTextTransform
    {	styleTextTransformNotSet	= 0,
	styleTextTransformCapitalize	= 1,
	styleTextTransformLowercase	= 2,
	styleTextTransformUppercase	= 3,
	styleTextTransformNone	= 4,
	styleTextTransform_Max	= 2147483647L
    }	styleTextTransform;

typedef 
enum _styleDataRepeat
    {	styleDataRepeatNone	= 0,
	styleDataRepeatInner	= 1,
	styleDataRepeat_Max	= 2147483647L
    }	styleDataRepeat;

typedef 
enum _styleOverflow
    {	styleOverflowNotSet	= 0,
	styleOverflowAuto	= 1,
	styleOverflowHidden	= 2,
	styleOverflowVisible	= 3,
	styleOverflowScroll	= 4,
	styleOverflow_Max	= 2147483647L
    }	styleOverflow;

typedef 
enum _styleTableLayout
    {	styleTableLayoutNotSet	= 0,
	styleTableLayoutAuto	= 1,
	styleTableLayoutFixed	= 2,
	styleTableLayout_Max	= 2147483647L
    }	styleTableLayout;

typedef 
enum _styleBorderCollapse
    {	styleBorderCollapseNotSet	= 0,
	styleBorderCollapseSeparate	= 1,
	styleBorderCollapseCollapse	= 2,
	styleBorderCollapse_Max	= 2147483647L
    }	styleBorderCollapse;

typedef 
enum _styleFontStyle
    {	styleFontStyleNotSet	= 0,
	styleFontStyleItalic	= 1,
	styleFontStyleOblique	= 2,
	styleFontStyleNormal	= 3,
	styleFontStyle_Max	= 2147483647L
    }	styleFontStyle;

typedef 
enum _styleFontVariant
    {	styleFontVariantNotSet	= 0,
	styleFontVariantSmallCaps	= 1,
	styleFontVariantNormal	= 2,
	styleFontVariant_Max	= 2147483647L
    }	styleFontVariant;

typedef 
enum _styleBackgroundRepeat
    {	styleBackgroundRepeatRepeat	= 0,
	styleBackgroundRepeatRepeatX	= 1,
	styleBackgroundRepeatRepeatY	= 2,
	styleBackgroundRepeatNoRepeat	= 3,
	styleBackgroundRepeatNotSet	= 4,
	styleBackgroundRepeat_Max	= 2147483647L
    }	styleBackgroundRepeat;

typedef 
enum _styleBackgroundAttachment
    {	styleBackgroundAttachmentFixed	= 0,
	styleBackgroundAttachmentScroll	= 1,
	styleBackgroundAttachmentNotSet	= 2,
	styleBackgroundAttachment_Max	= 2147483647L
    }	styleBackgroundAttachment;

typedef 
enum _styleVerticalAlign
    {	styleVerticalAlignAuto	= 0,
	styleVerticalAlignBaseline	= 1,
	styleVerticalAlignSub	= 2,
	styleVerticalAlignSuper	= 3,
	styleVerticalAlignTop	= 4,
	styleVerticalAlignTextTop	= 5,
	styleVerticalAlignMiddle	= 6,
	styleVerticalAlignBottom	= 7,
	styleVerticalAlignTextBottom	= 8,
	styleVerticalAlignInherit	= 9,
	styleVerticalAlignNotSet	= 10,
	styleVerticalAlign_Max	= 2147483647L
    }	styleVerticalAlign;

typedef 
enum _styleFontWeight
    {	styleFontWeightNotSet	= 0,
	styleFontWeight100	= 1,
	styleFontWeight200	= 2,
	styleFontWeight300	= 3,
	styleFontWeight400	= 4,
	styleFontWeight500	= 5,
	styleFontWeight600	= 6,
	styleFontWeight700	= 7,
	styleFontWeight800	= 8,
	styleFontWeight900	= 9,
	styleFontWeightNormal	= 10,
	styleFontWeightBold	= 11,
	styleFontWeightBolder	= 12,
	styleFontWeightLighter	= 13,
	styleFontWeight_Max	= 2147483647L
    }	styleFontWeight;

typedef 
enum _styleBackgroundPositionX
    {	styleBackgroundPositionXNotSet	= 0,
	styleBackgroundPositionXLeft	= 1,
	styleBackgroundPositionXCenter	= 2,
	styleBackgroundPositionXRight	= 3,
	styleBackgroundPositionX_Max	= 2147483647L
    }	styleBackgroundPositionX;

typedef 
enum _styleBackgroundPositionY
    {	styleBackgroundPositionYNotSet	= 0,
	styleBackgroundPositionYTop	= 1,
	styleBackgroundPositionYCenter	= 2,
	styleBackgroundPositionYBottom	= 3,
	styleBackgroundPositionY_Max	= 2147483647L
    }	styleBackgroundPositionY;

typedef 
enum _styleFontSize
    {	styleFontSizeXXSmall	= 0,
	styleFontSizeXSmall	= 1,
	styleFontSizeSmall	= 2,
	styleFontSizeMedium	= 3,
	styleFontSizeLarge	= 4,
	styleFontSizeXLarge	= 5,
	styleFontSizeXXLarge	= 6,
	styleFontSizeSmaller	= 7,
	styleFontSizeLarger	= 8,
	styleFontSize_Max	= 2147483647L
    }	styleFontSize;

typedef 
enum _styleAuto
    {	styleAutoAuto	= 0,
	styleAuto_Max	= 2147483647L
    }	styleAuto;

typedef 
enum _styleNone
    {	styleNoneNone	= 0,
	styleNone_Max	= 2147483647L
    }	styleNone;

typedef 
enum _styleNormal
    {	styleNormalNormal	= 0,
	styleNormal_Max	= 2147483647L
    }	styleNormal;

typedef 
enum _styleBorderWidth
    {	styleBorderWidthThin	= 0,
	styleBorderWidthMedium	= 1,
	styleBorderWidthThick	= 2,
	styleBorderWidth_Max	= 2147483647L
    }	styleBorderWidth;

typedef 
enum _stylePosition
    {	stylePositionNotSet	= 0,
	stylePositionstatic	= 1,
	stylePositionrelative	= 2,
	stylePositionabsolute	= 3,
	stylePositionfixed	= 4,
	stylePosition_Max	= 2147483647L
    }	stylePosition;

typedef 
enum _styleBorderStyle
    {	styleBorderStyleNotSet	= 0,
	styleBorderStyleDotted	= 1,
	styleBorderStyleDashed	= 2,
	styleBorderStyleSolid	= 3,
	styleBorderStyleDouble	= 4,
	styleBorderStyleGroove	= 5,
	styleBorderStyleRidge	= 6,
	styleBorderStyleInset	= 7,
	styleBorderStyleOutset	= 8,
	styleBorderStyleWindowInset	= 9,
	styleBorderStyleNone	= 10,
	styleBorderStyle_Max	= 2147483647L
    }	styleBorderStyle;

typedef 
enum _styleStyleFloat
    {	styleStyleFloatNotSet	= 0,
	styleStyleFloatLeft	= 1,
	styleStyleFloatRight	= 2,
	styleStyleFloatNone	= 3,
	styleStyleFloat_Max	= 2147483647L
    }	styleStyleFloat;

typedef 
enum _styleDisplay
    {	styleDisplayNotSet	= 0,
	styleDisplayBlock	= 1,
	styleDisplayInline	= 2,
	styleDisplayListItem	= 3,
	styleDisplayNone	= 4,
	styleDisplayTableHeaderGroup	= 5,
	styleDisplayTableFooterGroup	= 6,
	styleDisplayInlineBlock	= 7,
	styleDisplay_Max	= 2147483647L
    }	styleDisplay;

typedef 
enum _styleVisibility
    {	styleVisibilityNotSet	= 0,
	styleVisibilityInherit	= 1,
	styleVisibilityVisible	= 2,
	styleVisibilityHidden	= 3,
	styleVisibility_Max	= 2147483647L
    }	styleVisibility;

typedef 
enum _styleListStyleType
    {	styleListStyleTypeNotSet	= 0,
	styleListStyleTypeDisc	= 1,
	styleListStyleTypeCircle	= 2,
	styleListStyleTypeSquare	= 3,
	styleListStyleTypeDecimal	= 4,
	styleListStyleTypeLowerRoman	= 5,
	styleListStyleTypeUpperRoman	= 6,
	styleListStyleTypeLowerAlpha	= 7,
	styleListStyleTypeUpperAlpha	= 8,
	styleListStyleTypeNone	= 9,
	styleListStyleType_Max	= 2147483647L
    }	styleListStyleType;

typedef 
enum _styleListStylePosition
    {	styleListStylePositionNotSet	= 0,
	styleListStylePositionInside	= 1,
	styleListStylePositionOutSide	= 2,
	styleListStylePosition_Max	= 2147483647L
    }	styleListStylePosition;

typedef 
enum _styleWhiteSpace
    {	styleWhiteSpaceNotSet	= 0,
	styleWhiteSpaceNormal	= 1,
	styleWhiteSpacePre	= 2,
	styleWhiteSpaceNowrap	= 3,
	styleWhiteSpace_Max	= 2147483647L
    }	styleWhiteSpace;

typedef 
enum _stylePageBreak
    {	stylePageBreakNotSet	= 0,
	stylePageBreakAuto	= 1,
	stylePageBreakAlways	= 2,
	stylePageBreakLeft	= 3,
	stylePageBreakRight	= 4,
	stylePageBreak_Max	= 2147483647L
    }	stylePageBreak;

typedef 
enum _styleCursor
    {	styleCursorAuto	= 0,
	styleCursorCrosshair	= 1,
	styleCursorDefault	= 2,
	styleCursorHand	= 3,
	styleCursorMove	= 4,
	styleCursorE_resize	= 5,
	styleCursorNe_resize	= 6,
	styleCursorNw_resize	= 7,
	styleCursorN_resize	= 8,
	styleCursorSe_resize	= 9,
	styleCursorSw_resize	= 10,
	styleCursorS_resize	= 11,
	styleCursorW_resize	= 12,
	styleCursorText	= 13,
	styleCursorWait	= 14,
	styleCursorHelp	= 15,
	styleCursorPointer	= 16,
	styleCursorProgress	= 17,
	styleCursorNot_allowed	= 18,
	styleCursorNo_drop	= 19,
	styleCursorVertical_text	= 20,
	styleCursorall_scroll	= 21,
	styleCursorcol_resize	= 22,
	styleCursorrow_resize	= 23,
	styleCursorcustom	= 24,
	styleCursorNotSet	= 25,
	styleCursor_Max	= 2147483647L
    }	styleCursor;

typedef 
enum _styleDir
    {	styleDirNotSet	= 0,
	styleDirLeftToRight	= 1,
	styleDirRightToLeft	= 2,
	styleDirInherit	= 3,
	styleDir_Max	= 2147483647L
    }	styleDir;

typedef 
enum _styleBidi
    {	styleBidiNotSet	= 0,
	styleBidiNormal	= 1,
	styleBidiEmbed	= 2,
	styleBidiOverride	= 3,
	styleBidiInherit	= 4,
	styleBidi_Max	= 2147483647L
    }	styleBidi;

typedef 
enum _styleImeMode
    {	styleImeModeAuto	= 0,
	styleImeModeActive	= 1,
	styleImeModeInactive	= 2,
	styleImeModeDisabled	= 3,
	styleImeModeNotSet	= 4,
	styleImeMode_Max	= 2147483647L
    }	styleImeMode;

typedef 
enum _styleRubyAlign
    {	styleRubyAlignNotSet	= 0,
	styleRubyAlignAuto	= 1,
	styleRubyAlignLeft	= 2,
	styleRubyAlignCenter	= 3,
	styleRubyAlignRight	= 4,
	styleRubyAlignDistributeLetter	= 5,
	styleRubyAlignDistributeSpace	= 6,
	styleRubyAlignLineEdge	= 7,
	styleRubyAlign_Max	= 2147483647L
    }	styleRubyAlign;

typedef 
enum _styleRubyPosition
    {	styleRubyPositionNotSet	= 0,
	styleRubyPositionAbove	= 1,
	styleRubyPositionInline	= 2,
	styleRubyPosition_Max	= 2147483647L
    }	styleRubyPosition;

typedef 
enum _styleRubyOverhang
    {	styleRubyOverhangNotSet	= 0,
	styleRubyOverhangAuto	= 1,
	styleRubyOverhangWhitespace	= 2,
	styleRubyOverhangNone	= 3,
	styleRubyOverhang_Max	= 2147483647L
    }	styleRubyOverhang;

typedef 
enum _styleLayoutGridChar
    {	styleLayoutGridCharNotSet	= 0,
	styleLayoutGridCharAuto	= 1,
	styleLayoutGridCharNone	= 2,
	styleLayoutGridChar_Max	= 2147483647L
    }	styleLayoutGridChar;

typedef 
enum _styleLayoutGridLine
    {	styleLayoutGridLineNotSet	= 0,
	styleLayoutGridLineAuto	= 1,
	styleLayoutGridLineNone	= 2,
	styleLayoutGridLine_Max	= 2147483647L
    }	styleLayoutGridLine;

typedef 
enum _styleLayoutGridMode
    {	styleLayoutGridModeNotSet	= 0,
	styleLayoutGridModeChar	= 1,
	styleLayoutGridModeLine	= 2,
	styleLayoutGridModeBoth	= 3,
	styleLayoutGridModeNone	= 4,
	styleLayoutGridMode_Max	= 2147483647L
    }	styleLayoutGridMode;

typedef 
enum _styleLayoutGridType
    {	styleLayoutGridTypeNotSet	= 0,
	styleLayoutGridTypeLoose	= 1,
	styleLayoutGridTypeStrict	= 2,
	styleLayoutGridTypeFixed	= 3,
	styleLayoutGridType_Max	= 2147483647L
    }	styleLayoutGridType;

typedef 
enum _styleLineBreak
    {	styleLineBreakNotSet	= 0,
	styleLineBreakNormal	= 1,
	styleLineBreakStrict	= 2,
	styleLineBreak_Max	= 2147483647L
    }	styleLineBreak;

typedef 
enum _styleWordBreak
    {	styleWordBreakNotSet	= 0,
	styleWordBreakNormal	= 1,
	styleWordBreakBreakAll	= 2,
	styleWordBreakKeepAll	= 3,
	styleWordBreak_Max	= 2147483647L
    }	styleWordBreak;

typedef 
enum _styleWordWrap
    {	styleWordWrapNotSet	= 0,
	styleWordWrapOff	= 1,
	styleWordWrapOn	= 2,
	styleWordWrap_Max	= 2147483647L
    }	styleWordWrap;

typedef 
enum _styleTextJustify
    {	styleTextJustifyNotSet	= 0,
	styleTextJustifyInterWord	= 1,
	styleTextJustifyNewspaper	= 2,
	styleTextJustifyDistribute	= 3,
	styleTextJustifyDistributeAllLines	= 4,
	styleTextJustifyInterIdeograph	= 5,
	styleTextJustifyInterCluster	= 6,
	styleTextJustifyKashida	= 7,
	styleTextJustifyAuto	= 8,
	styleTextJustify_Max	= 2147483647L
    }	styleTextJustify;

typedef 
enum _styleTextAlignLast
    {	styleTextAlignLastNotSet	= 0,
	styleTextAlignLastLeft	= 1,
	styleTextAlignLastCenter	= 2,
	styleTextAlignLastRight	= 3,
	styleTextAlignLastJustify	= 4,
	styleTextAlignLastAuto	= 5,
	styleTextAlignLast_Max	= 2147483647L
    }	styleTextAlignLast;

typedef 
enum _styleTextJustifyTrim
    {	styleTextJustifyTrimNotSet	= 0,
	styleTextJustifyTrimNone	= 1,
	styleTextJustifyTrimPunctuation	= 2,
	styleTextJustifyTrimPunctAndKana	= 3,
	styleTextJustifyTrim_Max	= 2147483647L
    }	styleTextJustifyTrim;

typedef 
enum _styleAccelerator
    {	styleAcceleratorFalse	= 0,
	styleAcceleratorTrue	= 1,
	styleAccelerator_Max	= 2147483647L
    }	styleAccelerator;

typedef 
enum _styleLayoutFlow
    {	styleLayoutFlowHorizontal	= 0,
	styleLayoutFlowVerticalIdeographic	= 1,
	styleLayoutFlowNotSet	= 2,
	styleLayoutFlow_Max	= 2147483647L
    }	styleLayoutFlow;

typedef 
enum _styleWritingMode
    {	styleWritingModeLrtb	= 0,
	styleWritingModeTbrl	= 1,
	styleWritingModeRltb	= 2,
	styleWritingModeBtrl	= 3,
	styleWritingModeNotSet	= 4,
	styleWritingMode_Max	= 2147483647L
    }	styleWritingMode;

typedef 
enum _styleBool
    {	styleBoolFalse	= 0,
	styleBoolTrue	= 1,
	styleBool_Max	= 2147483647L
    }	styleBool;

typedef 
enum _styleTextUnderlinePosition
    {	styleTextUnderlinePositionBelow	= 0,
	styleTextUnderlinePositionAbove	= 1,
	styleTextUnderlinePositionAuto	= 2,
	styleTextUnderlinePositionNotSet	= 3,
	styleTextUnderlinePosition_Max	= 2147483647L
    }	styleTextUnderlinePosition;

typedef 
enum _styleTextOverflow
    {	styleTextOverflowClip	= 0,
	styleTextOverflowEllipsis	= 1,
	styleTextOverflowNotSet	= 2,
	styleTextOverflow_Max	= 2147483647L
    }	styleTextOverflow;

typedef 
enum _styleInterpolation
    {	styleInterpolationNotSet	= 0,
	styleInterpolationNN	= 1,
	styleInterpolationBCH	= 2,
	styleInterpolation_Max	= 2147483647L
    }	styleInterpolation;

EXTERN_C const GUID CLSID_CStyle;
EXTERN_C const GUID CLSID_CRuleStyle;
typedef 
enum _styleTextLineThroughStyle
    {	styleTextLineThroughStyleUndefined	= 0,
	styleTextLineThroughStyleSingle	= 1,
	styleTextLineThroughStyleDouble	= 2,
	styleTextLineThroughStyle_Max	= 2147483647L
    }	styleTextLineThroughStyle;

typedef 
enum _styleTextUnderlineStyle
    {	styleTextUnderlineStyleUndefined	= 0,
	styleTextUnderlineStyleSingle	= 1,
	styleTextUnderlineStyleDouble	= 2,
	styleTextUnderlineStyleWords	= 3,
	styleTextUnderlineStyleDotted	= 4,
	styleTextUnderlineStyleThick	= 5,
	styleTextUnderlineStyleDash	= 6,
	styleTextUnderlineStyleDotDash	= 7,
	styleTextUnderlineStyleDotDotDash	= 8,
	styleTextUnderlineStyleWave	= 9,
	styleTextUnderlineStyleSingleAccounting	= 10,
	styleTextUnderlineStyleDoubleAccounting	= 11,
	styleTextUnderlineStyleThickDash	= 12,
	styleTextUnderlineStyle_Max	= 2147483647L
    }	styleTextUnderlineStyle;

typedef 
enum _styleTextEffect
    {	styleTextEffectNone	= 0,
	styleTextEffectEmboss	= 1,
	styleTextEffectEngrave	= 2,
	styleTextEffectOutline	= 3,
	styleTextEffect_Max	= 2147483647L
    }	styleTextEffect;

typedef 
enum _styleDefaultTextSelection
    {	styleDefaultTextSelectionFalse	= 0,
	styleDefaultTextSelectionTrue	= 1,
	styleDefaultTextSelection_Max	= 2147483647L
    }	styleDefaultTextSelection;

typedef 
enum _styleTextDecoration
    {	styleTextDecorationNone	= 0,
	styleTextDecorationUnderline	= 1,
	styleTextDecorationOverline	= 2,
	styleTextDecorationLineThrough	= 3,
	styleTextDecorationBlink	= 4,
	styleTextDecoration_Max	= 2147483647L
    }	styleTextDecoration;

EXTERN_C const GUID CLSID_CRenderStyle;
typedef 
enum _textDecoration
    {	textDecorationNone	= 0,
	textDecorationUnderline	= 1,
	textDecorationOverline	= 2,
	textDecorationLineThrough	= 3,
	textDecorationBlink	= 4,
	textDecoration_Max	= 2147483647L
    }	textDecoration;

EXTERN_C const GUID CLSID_CCurrentStyle;

EXTERN_C const GUID CLSID_CAttribute;
EXTERN_C const GUID CLSID_CDOMTextNode;
EXTERN_C const GUID CLSID_CDOMImplementation;
EXTERN_C const GUID CLSID_CAttrCollectionator;
EXTERN_C const GUID CLSID_CDOMChildrenCollection;
typedef 
enum _htmlListType
    {	htmlListTypeNotSet	= 0,
	htmlListTypeLargeAlpha	= 1,
	htmlListTypeSmallAlpha	= 2,
	htmlListTypeLargeRoman	= 3,
	htmlListTypeSmallRoman	= 4,
	htmlListTypeNumbers	= 5,
	htmlListTypeDisc	= 6,
	htmlListTypeCircle	= 7,
	htmlListTypeSquare	= 8,
	htmlListType_Max	= 2147483647L
    }	htmlListType;

typedef 
enum _htmlMethod
    {	htmlMethodNotSet	= 0,
	htmlMethodGet	= 1,
	htmlMethodPost	= 2,
	htmlMethod_Max	= 2147483647L
    }	htmlMethod;

typedef 
enum _htmlWrap
    {	htmlWrapOff	= 1,
	htmlWrapSoft	= 2,
	htmlWrapHard	= 3,
	htmlWrap_Max	= 2147483647L
    }	htmlWrap;

typedef 
enum _htmlDir
    {	htmlDirNotSet	= 0,
	htmlDirLeftToRight	= 1,
	htmlDirRightToLeft	= 2,
	htmlDir_Max	= 2147483647L
    }	htmlDir;

typedef 
enum _htmlEditable
    {	htmlEditableInherit	= 0,
	htmlEditableTrue	= 1,
	htmlEditableFalse	= 2,
	htmlEditable_Max	= 2147483647L
    }	htmlEditable;

typedef 
enum _htmlInput
    {	htmlInputNotSet	= 0,
	htmlInputButton	= 1,
	htmlInputCheckbox	= 2,
	htmlInputFile	= 3,
	htmlInputHidden	= 4,
	htmlInputImage	= 5,
	htmlInputPassword	= 6,
	htmlInputRadio	= 7,
	htmlInputReset	= 8,
	htmlInputSelectOne	= 9,
	htmlInputSelectMultiple	= 10,
	htmlInputSubmit	= 11,
	htmlInputText	= 12,
	htmlInputTextarea	= 13,
	htmlInputRichtext	= 14,
	htmlInput_Max	= 2147483647L
    }	htmlInput;

typedef 
enum _htmlEncoding
    {	htmlEncodingURL	= 0,
	htmlEncodingMultipart	= 1,
	htmlEncodingText	= 2,
	htmlEncoding_Max	= 2147483647L
    }	htmlEncoding;

typedef 
enum _htmlAdjacency
    {	htmlAdjacencyBeforeBegin	= 1,
	htmlAdjacencyAfterBegin	= 2,
	htmlAdjacencyBeforeEnd	= 3,
	htmlAdjacencyAfterEnd	= 4,
	htmlAdjacency_Max	= 2147483647L
    }	htmlAdjacency;

typedef 
enum _htmlTabIndex
    {	htmlTabIndexNotSet	= -32768,
	htmlTabIndex_Max	= 2147483647L
    }	htmlTabIndex;

typedef 
enum _htmlComponent
    {	htmlComponentClient	= 0,
	htmlComponentSbLeft	= 1,
	htmlComponentSbPageLeft	= 2,
	htmlComponentSbHThumb	= 3,
	htmlComponentSbPageRight	= 4,
	htmlComponentSbRight	= 5,
	htmlComponentSbUp	= 6,
	htmlComponentSbPageUp	= 7,
	htmlComponentSbVThumb	= 8,
	htmlComponentSbPageDown	= 9,
	htmlComponentSbDown	= 10,
	htmlComponentSbLeft2	= 11,
	htmlComponentSbPageLeft2	= 12,
	htmlComponentSbRight2	= 13,
	htmlComponentSbPageRight2	= 14,
	htmlComponentSbUp2	= 15,
	htmlComponentSbPageUp2	= 16,
	htmlComponentSbDown2	= 17,
	htmlComponentSbPageDown2	= 18,
	htmlComponentSbTop	= 19,
	htmlComponentSbBottom	= 20,
	htmlComponentOutside	= 21,
	htmlComponentGHTopLeft	= 22,
	htmlComponentGHLeft	= 23,
	htmlComponentGHTop	= 24,
	htmlComponentGHBottomLeft	= 25,
	htmlComponentGHTopRight	= 26,
	htmlComponentGHBottom	= 27,
	htmlComponentGHRight	= 28,
	htmlComponentGHBottomRight	= 29,
	htmlComponent_Max	= 2147483647L
    }	htmlComponent;

typedef 
enum _htmlApplyLocation
    {	htmlApplyLocationInside	= 0,
	htmlApplyLocationOutside	= 1,
	htmlApplyLocation_Max	= 2147483647L
    }	htmlApplyLocation;

typedef 
enum _htmlGlyphMode
    {	htmlGlyphModeNone	= 0,
	htmlGlyphModeBegin	= 1,
	htmlGlyphModeEnd	= 2,
	htmlGlyphModeBoth	= 3,
	htmlGlyphMode_Max	= 2147483647L
    }	htmlGlyphMode;





EXTERN_C const GUID CLSID_CDefaults;

EXTERN_C const GUID CLSID_CHtmlComponentDD;
EXTERN_C const GUID CLSID_CHtmlComponentProperty;
EXTERN_C const GUID CLSID_CHtmlComponentMethod;
EXTERN_C const GUID CLSID_CHtmlComponentEvent;
EXTERN_C const GUID CLSID_CHtmlComponentAttach;
EXTERN_C const GUID CLSID_CHtmlComponentDesc;
EXTERN_C const GUID CLSID_CPeerUrnCollection;
EXTERN_C const GUID CLSID_CGenericElement;
EXTERN_C const GUID CLSID_CStyleSheetRule;
EXTERN_C const GUID CLSID_CStyleSheetRuleArray;
EXTERN_C const GUID CLSID_CStyleSheetPage;
EXTERN_C const GUID CLSID_CStyleSheetPageArray;

EXTERN_C const GUID CLSID_CStyleSheet;
EXTERN_C const GUID CLSID_CStyleSheetArray;
EXTERN_C const GUID CLSID_CLinkElement;
typedef 
enum _htmlUnit
    {	htmlUnitCharacter	= 1,
	htmlUnitWord	= 2,
	htmlUnitSentence	= 3,
	htmlUnitTextEdit	= 6,
	htmlUnit_Max	= 2147483647L
    }	htmlUnit;

typedef 
enum _htmlEndPoints
    {	htmlEndPointsStartToStart	= 1,
	htmlEndPointsStartToEnd	= 2,
	htmlEndPointsEndToStart	= 3,
	htmlEndPointsEndToEnd	= 4,
	htmlEndPoints_Max	= 2147483647L
    }	htmlEndPoints;

typedef 
enum _htmlDirection
    {	htmlDirectionForward	= 99999,
	htmlDirectionBackward	= -99999,
	htmlDirection_Max	= 2147483647L
    }	htmlDirection;

EXTERN_C const GUID CLSID_CFormElement;
typedef 
enum _htmlStart
    {	htmlStartfileopen	= 0,
	htmlStartmouseover	= 1,
	htmlStart_Max	= 2147483647L
    }	htmlStart;

EXTERN_C const GUID CLSID_CTextElement;
EXTERN_C const GUID CLSID_CImgElement;
EXTERN_C const GUID CLSID_CImageElementFactory;
EXTERN_C const GUID CLSID_CXMLHttpRequest;
EXTERN_C const GUID CLSID_CXMLHttpRequestFactory;
typedef 
enum _bodyScroll
    {	bodyScrollyes	= 1,
	bodyScrollno	= 2,
	bodyScrollauto	= 4,
	bodyScrolldefault	= 3,
	bodyScroll_Max	= 2147483647L
    }	bodyScroll;

EXTERN_C const GUID CLSID_CBodyElement;
EXTERN_C const GUID CLSID_CFontElement;
EXTERN_C const GUID CLSID_CAnchorElement;
EXTERN_C const GUID CLSID_CLabelElement;
EXTERN_C const GUID CLSID_CListElement;
EXTERN_C const GUID CLSID_CUListElement;
EXTERN_C const GUID CLSID_COListElement;
EXTERN_C const GUID CLSID_CLIElement;
EXTERN_C const GUID CLSID_CBlockElement;
EXTERN_C const GUID CLSID_CDivElement;
EXTERN_C const GUID CLSID_CDDElement;
EXTERN_C const GUID CLSID_CDTElement;
EXTERN_C const GUID CLSID_CBRElement;
EXTERN_C const GUID CLSID_CDListElement;
EXTERN_C const GUID CLSID_CHRElement;
EXTERN_C const GUID CLSID_CParaElement;
EXTERN_C const GUID CLSID_CElementCollection;
EXTERN_C const GUID CLSID_CHeaderElement;
typedef 
enum _htmlSelectType
    {	htmlSelectTypeSelectOne	= 1,
	htmlSelectTypeSelectMultiple	= 2,
	htmlSelectType_Max	= 2147483647L
    }	htmlSelectType;

typedef 
enum _htmlSelectExFlag
    {	htmlSelectExFlagNone	= 0,
	htmlSelectExFlagHideSelectionInDesign	= 0x1,
	htmlSelectExFlag_Max	= 2147483647L
    }	htmlSelectExFlag;

EXTERN_C const GUID CLSID_CSelectElement;
EXTERN_C const GUID CLSID_CWndSelectElement;
typedef 
enum _htmlSelection
    {	htmlSelectionNone	= 0,
	htmlSelectionText	= 1,
	htmlSelectionControl	= 2,
	htmlSelectionTable	= 3,
	htmlSelection_Max	= 2147483647L
    }	htmlSelection;

EXTERN_C const GUID CLSID_COptionElement;
EXTERN_C const GUID CLSID_COptionElementFactory;
EXTERN_C const GUID CLSID_CWndOptionElement;
EXTERN_C const GUID CLSID_CInput;
EXTERN_C const GUID CLSID_CTextArea;
EXTERN_C const GUID CLSID_CRichtext;
EXTERN_C const GUID CLSID_CButton;
typedef 
enum _htmlMarqueeBehavior
    {	htmlMarqueeBehaviorscroll	= 1,
	htmlMarqueeBehaviorslide	= 2,
	htmlMarqueeBehavioralternate	= 3,
	htmlMarqueeBehavior_Max	= 2147483647L
    }	htmlMarqueeBehavior;

typedef 
enum _htmlMarqueeDirection
    {	htmlMarqueeDirectionleft	= 1,
	htmlMarqueeDirectionright	= 3,
	htmlMarqueeDirectionup	= 5,
	htmlMarqueeDirectiondown	= 7,
	htmlMarqueeDirection_Max	= 2147483647L
    }	htmlMarqueeDirection;

EXTERN_C const GUID CLSID_CMarquee;
EXTERN_C const GUID CLSID_CHtmlElement;
EXTERN_C const GUID CLSID_CHeadElement;
EXTERN_C const GUID CLSID_CTitleElement;
EXTERN_C const GUID CLSID_CMetaElement;
EXTERN_C const GUID CLSID_CBaseElement;
EXTERN_C const GUID CLSID_CIsIndexElement;
EXTERN_C const GUID CLSID_CNextIdElement;
EXTERN_C const GUID CLSID_CBaseFontElement;
EXTERN_C const GUID CLSID_CUnknownElement;
EXTERN_C const GUID CLSID_COmHistory;
EXTERN_C const GUID CLSID_CMimeTypes;
EXTERN_C const GUID CLSID_CPlugins;
EXTERN_C const GUID CLSID_COpsProfile;
EXTERN_C const GUID CLSID_COmNavigator;
EXTERN_C const GUID CLSID_COmLocation;
typedef 
enum _htmlPersistState
    {	htmlPersistStateNormal	= 0,
	htmlPersistStateFavorite	= 1,
	htmlPersistStateHistory	= 2,
	htmlPersistStateSnapshot	= 3,
	htmlPersistStateUserData	= 4,
	htmlPersistState_Max	= 2147483647L
    }	htmlPersistState;

typedef 
enum _htmlDropEffect
    {	htmlDropEffectCopy	= 0,
	htmlDropEffectLink	= 1,
	htmlDropEffectMove	= 2,
	htmlDropEffectNone	= 3,
	htmlDropEffect_Max	= 2147483647L
    }	htmlDropEffect;

typedef 
enum _htmlEffectAllowed
    {	htmlEffectAllowedCopy	= 0,
	htmlEffectAllowedLink	= 1,
	htmlEffectAllowedMove	= 2,
	htmlEffectAllowedCopyLink	= 3,
	htmlEffectAllowedCopyMove	= 4,
	htmlEffectAllowedLinkMove	= 5,
	htmlEffectAllowedAll	= 6,
	htmlEffectAllowedNone	= 7,
	htmlEffectAllowedUninitialized	= 8,
	htmlEffectAllowed_Max	= 2147483647L
    }	htmlEffectAllowed;

EXTERN_C const GUID CLSID_CEventObj;






EXTERN_C const GUID CLSID_CFramesCollection;
EXTERN_C const GUID CLSID_CScreen;
EXTERN_C const GUID CLSID_CWindow;
EXTERN_C const GUID CLSID_COmWindowProxy;
typedef 
enum _htmlCompatMode
    {	htmlCompatModeBackCompat	= 0,
	htmlCompatModeCSS1Compat	= 1,
	htmlCompatMode_Max	= 2147483647L
    }	htmlCompatMode;

EXTERN_C const GUID CLSID_CDocument;
EXTERN_C const GUID CLSID_CScriptlet;
typedef 
enum _BoolValue
    {	True	= 1,
	False	= 0,
	BoolValue_Max	= 2147483647L
    }	BoolValue;

EXTERN_C const GUID CLSID_CPluginSite;
EXTERN_C const GUID CLSID_CAreasCollection;
EXTERN_C const GUID CLSID_CMapElement;
EXTERN_C const GUID CLSID_CAreaElement;
typedef 
enum _htmlCaptionAlign
    {	htmlCaptionAlignNotSet	= 0,
	htmlCaptionAlignLeft	= 1,
	htmlCaptionAlignCenter	= 2,
	htmlCaptionAlignRight	= 3,
	htmlCaptionAlignJustify	= 4,
	htmlCaptionAlignTop	= 5,
	htmlCaptionAlignBottom	= 6,
	htmlCaptionAlign_Max	= 2147483647L
    }	htmlCaptionAlign;

typedef 
enum _htmlCaptionVAlign
    {	htmlCaptionVAlignNotSet	= 0,
	htmlCaptionVAlignTop	= 1,
	htmlCaptionVAlignBottom	= 2,
	htmlCaptionVAlign_Max	= 2147483647L
    }	htmlCaptionVAlign;

EXTERN_C const GUID CLSID_CTableCaption;
EXTERN_C const GUID CLSID_CCommentElement;
EXTERN_C const GUID CLSID_CPhraseElement;
EXTERN_C const GUID CLSID_CSpanElement;
typedef 
enum _htmlFrame
    {	htmlFrameNotSet	= 0,
	htmlFramevoid	= 1,
	htmlFrameabove	= 2,
	htmlFramebelow	= 3,
	htmlFramehsides	= 4,
	htmlFramelhs	= 5,
	htmlFramerhs	= 6,
	htmlFramevsides	= 7,
	htmlFramebox	= 8,
	htmlFrameborder	= 9,
	htmlFrame_Max	= 2147483647L
    }	htmlFrame;

typedef 
enum _htmlRules
    {	htmlRulesNotSet	= 0,
	htmlRulesnone	= 1,
	htmlRulesgroups	= 2,
	htmlRulesrows	= 3,
	htmlRulescols	= 4,
	htmlRulesall	= 5,
	htmlRules_Max	= 2147483647L
    }	htmlRules;

typedef 
enum _htmlCellAlign
    {	htmlCellAlignNotSet	= 0,
	htmlCellAlignLeft	= 1,
	htmlCellAlignCenter	= 2,
	htmlCellAlignRight	= 3,
	htmlCellAlignMiddle	= htmlCellAlignCenter,
	htmlCellAlign_Max	= 2147483647L
    }	htmlCellAlign;

typedef 
enum _htmlCellVAlign
    {	htmlCellVAlignNotSet	= 0,
	htmlCellVAlignTop	= 1,
	htmlCellVAlignMiddle	= 2,
	htmlCellVAlignBottom	= 3,
	htmlCellVAlignBaseline	= 4,
	htmlCellVAlignCenter	= htmlCellVAlignMiddle,
	htmlCellVAlign_Max	= 2147483647L
    }	htmlCellVAlign;


EXTERN_C const GUID CLSID_CTable;
EXTERN_C const GUID CLSID_CTableCol;
EXTERN_C const GUID CLSID_CTableSection;
EXTERN_C const GUID CLSID_CTableRow;
EXTERN_C const GUID CLSID_CTableCell;
EXTERN_C const GUID CLSID_CScriptElement;
EXTERN_C const GUID CLSID_CNoShowElement;
EXTERN_C const GUID CLSID_CObjectElement;
EXTERN_C const GUID CLSID_CParamElement;
typedef 
enum _frameScrolling
    {	frameScrollingyes	= 1,
	frameScrollingno	= 2,
	frameScrollingauto	= 4,
	frameScrolling_Max	= 2147483647L
    }	frameScrolling;

EXTERN_C const GUID CLSID_CFrameSite;
EXTERN_C const GUID CLSID_CFrameElement;
EXTERN_C const GUID CLSID_CIFrameElement;
EXTERN_C const GUID CLSID_C1DElement;
EXTERN_C const GUID CLSID_CFieldSetElement;
EXTERN_C const GUID CLSID_CLegendElement;
EXTERN_C const GUID CLSID_CSpanSite;
EXTERN_C const GUID CLSID_CFrameSetSite;
EXTERN_C const GUID CLSID_CBGsound;
EXTERN_C const GUID CLSID_CStyleElement;
EXTERN_C const GUID CLSID_CFontFace;
typedef 
enum _ELEMENT_CORNER
    {	ELEMENT_CORNER_NONE	= 0,
	ELEMENT_CORNER_TOP	= 1,
	ELEMENT_CORNER_LEFT	= 2,
	ELEMENT_CORNER_BOTTOM	= 3,
	ELEMENT_CORNER_RIGHT	= 4,
	ELEMENT_CORNER_TOPLEFT	= 5,
	ELEMENT_CORNER_TOPRIGHT	= 6,
	ELEMENT_CORNER_BOTTOMLEFT	= 7,
	ELEMENT_CORNER_BOTTOMRIGHT	= 8,
	ELEMENT_CORNER_Max	= 2147483647L
    }	ELEMENT_CORNER;

typedef 
enum _SECUREURLHOSTVALIDATE_FLAGS
    {	SUHV_PROMPTBEFORENO	= 0x1,
	SUHV_SILENTYES	= 0x2,
	SUHV_UNSECURESOURCE	= 0x4,
	SECUREURLHOSTVALIDATE_FLAGS_Max	= 2147483647L
    }	SECUREURLHOSTVALIDATE_FLAGS;

typedef 
enum _POINTER_GRAVITY
    {	POINTER_GRAVITY_Left	= 0,
	POINTER_GRAVITY_Right	= 1,
	POINTER_GRAVITY_Max	= 2147483647L
    }	POINTER_GRAVITY;

typedef 
enum _ELEMENT_ADJACENCY
    {	ELEM_ADJ_BeforeBegin	= 0,
	ELEM_ADJ_AfterBegin	= 1,
	ELEM_ADJ_BeforeEnd	= 2,
	ELEM_ADJ_AfterEnd	= 3,
	ELEMENT_ADJACENCY_Max	= 2147483647L
    }	ELEMENT_ADJACENCY;

typedef 
enum _MARKUP_CONTEXT_TYPE
    {	CONTEXT_TYPE_None	= 0,
	CONTEXT_TYPE_Text	= 1,
	CONTEXT_TYPE_EnterScope	= 2,
	CONTEXT_TYPE_ExitScope	= 3,
	CONTEXT_TYPE_NoScope	= 4,
	MARKUP_CONTEXT_TYPE_Max	= 2147483647L
    }	MARKUP_CONTEXT_TYPE;

typedef 
enum _FINDTEXT_FLAGS
    {	FINDTEXT_BACKWARDS	= 0x1,
	FINDTEXT_WHOLEWORD	= 0x2,
	FINDTEXT_MATCHCASE	= 0x4,
	FINDTEXT_RAW	= 0x20000,
	FINDTEXT_MATCHDIAC	= 0x20000000,
	FINDTEXT_MATCHKASHIDA	= 0x40000000,
	FINDTEXT_MATCHALEFHAMZA	= 0x80000000,
	FINDTEXT_FLAGS_Max	= 2147483647L
    }	FINDTEXT_FLAGS;

typedef 
enum _MOVEUNIT_ACTION
    {	MOVEUNIT_PREVCHAR	= 0,
	MOVEUNIT_NEXTCHAR	= 1,
	MOVEUNIT_PREVCLUSTERBEGIN	= 2,
	MOVEUNIT_NEXTCLUSTERBEGIN	= 3,
	MOVEUNIT_PREVCLUSTEREND	= 4,
	MOVEUNIT_NEXTCLUSTEREND	= 5,
	MOVEUNIT_PREVWORDBEGIN	= 6,
	MOVEUNIT_NEXTWORDBEGIN	= 7,
	MOVEUNIT_PREVWORDEND	= 8,
	MOVEUNIT_NEXTWORDEND	= 9,
	MOVEUNIT_PREVPROOFWORD	= 10,
	MOVEUNIT_NEXTPROOFWORD	= 11,
	MOVEUNIT_NEXTURLBEGIN	= 12,
	MOVEUNIT_PREVURLBEGIN	= 13,
	MOVEUNIT_NEXTURLEND	= 14,
	MOVEUNIT_PREVURLEND	= 15,
	MOVEUNIT_PREVSENTENCE	= 16,
	MOVEUNIT_NEXTSENTENCE	= 17,
	MOVEUNIT_PREVBLOCK	= 18,
	MOVEUNIT_NEXTBLOCK	= 19,
	MOVEUNIT_ACTION_Max	= 2147483647L
    }	MOVEUNIT_ACTION;

typedef 
enum _PARSE_FLAGS
    {	PARSE_ABSOLUTIFYIE40URLS	= 0x1,
	PARSE_FLAGS_Max	= 2147483647L
    }	PARSE_FLAGS;

typedef 
enum _ELEMENT_TAG_ID
    {	TAGID_NULL	= 0,
	TAGID_UNKNOWN	= 1,
	TAGID_A	= 2,
	TAGID_ACRONYM	= 3,
	TAGID_ADDRESS	= 4,
	TAGID_APPLET	= 5,
	TAGID_AREA	= 6,
	TAGID_B	= 7,
	TAGID_BASE	= 8,
	TAGID_BASEFONT	= 9,
	TAGID_BDO	= 10,
	TAGID_BGSOUND	= 11,
	TAGID_BIG	= 12,
	TAGID_BLINK	= 13,
	TAGID_BLOCKQUOTE	= 14,
	TAGID_BODY	= 15,
	TAGID_BR	= 16,
	TAGID_BUTTON	= 17,
	TAGID_CAPTION	= 18,
	TAGID_CENTER	= 19,
	TAGID_CITE	= 20,
	TAGID_CODE	= 21,
	TAGID_COL	= 22,
	TAGID_COLGROUP	= 23,
	TAGID_COMMENT	= 24,
	TAGID_COMMENT_RAW	= 25,
	TAGID_DD	= 26,
	TAGID_DEL	= 27,
	TAGID_DFN	= 28,
	TAGID_DIR	= 29,
	TAGID_DIV	= 30,
	TAGID_DL	= 31,
	TAGID_DT	= 32,
	TAGID_EM	= 33,
	TAGID_EMBED	= 34,
	TAGID_FIELDSET	= 35,
	TAGID_FONT	= 36,
	TAGID_FORM	= 37,
	TAGID_FRAME	= 38,
	TAGID_FRAMESET	= 39,
	TAGID_GENERIC	= 40,
	TAGID_H1	= 41,
	TAGID_H2	= 42,
	TAGID_H3	= 43,
	TAGID_H4	= 44,
	TAGID_H5	= 45,
	TAGID_H6	= 46,
	TAGID_HEAD	= 47,
	TAGID_HR	= 48,
	TAGID_HTML	= 49,
	TAGID_I	= 50,
	TAGID_IFRAME	= 51,
	TAGID_IMG	= 52,
	TAGID_INPUT	= 53,
	TAGID_INS	= 54,
	TAGID_KBD	= 55,
	TAGID_LABEL	= 56,
	TAGID_LEGEND	= 57,
	TAGID_LI	= 58,
	TAGID_LINK	= 59,
	TAGID_LISTING	= 60,
	TAGID_MAP	= 61,
	TAGID_MARQUEE	= 62,
	TAGID_MENU	= 63,
	TAGID_META	= 64,
	TAGID_NEXTID	= 65,
	TAGID_NOBR	= 66,
	TAGID_NOEMBED	= 67,
	TAGID_NOFRAMES	= 68,
	TAGID_NOSCRIPT	= 69,
	TAGID_OBJECT	= 70,
	TAGID_OL	= 71,
	TAGID_OPTION	= 72,
	TAGID_P	= 73,
	TAGID_PARAM	= 74,
	TAGID_PLAINTEXT	= 75,
	TAGID_PRE	= 76,
	TAGID_Q	= 77,
	TAGID_RP	= 78,
	TAGID_RT	= 79,
	TAGID_RUBY	= 80,
	TAGID_S	= 81,
	TAGID_SAMP	= 82,
	TAGID_SCRIPT	= 83,
	TAGID_SELECT	= 84,
	TAGID_SMALL	= 85,
	TAGID_SPAN	= 86,
	TAGID_STRIKE	= 87,
	TAGID_STRONG	= 88,
	TAGID_STYLE	= 89,
	TAGID_SUB	= 90,
	TAGID_SUP	= 91,
	TAGID_TABLE	= 92,
	TAGID_TBODY	= 93,
	TAGID_TC	= 94,
	TAGID_TD	= 95,
	TAGID_TEXTAREA	= 96,
	TAGID_TFOOT	= 97,
	TAGID_TH	= 98,
	TAGID_THEAD	= 99,
	TAGID_TITLE	= 100,
	TAGID_TR	= 101,
	TAGID_TT	= 102,
	TAGID_U	= 103,
	TAGID_UL	= 104,
	TAGID_VAR	= 105,
	TAGID_WBR	= 106,
	TAGID_XMP	= 107,
	TAGID_ROOT	= 108,
	TAGID_OPTGROUP	= 109,
	TAGID_ABBR	= 110,
	TAGID_COUNT	= 111,
	TAGID_LAST_PREDEFINED	= 10000,
	ELEMENT_TAG_ID_Max	= 2147483647L
    }	ELEMENT_TAG_ID;

typedef 
enum _SELECTION_TYPE
    {	SELECTION_TYPE_None	= 0,
	SELECTION_TYPE_Caret	= 1,
	SELECTION_TYPE_Text	= 2,
	SELECTION_TYPE_Control	= 3,
	SELECTION_TYPE_Max	= 2147483647L
    }	SELECTION_TYPE;

typedef 
enum _SAVE_SEGMENTS_FLAGS
    {	SAVE_SEGMENTS_NoIE4SelectionCompat	= 0x1,
	SAVE_SEGMENTS_FLAGS_Max	= 2147483647L
    }	SAVE_SEGMENTS_FLAGS;

typedef 
enum _CARET_DIRECTION
    {	CARET_DIRECTION_INDETERMINATE	= 0,
	CARET_DIRECTION_SAME	= 1,
	CARET_DIRECTION_BACKWARD	= 2,
	CARET_DIRECTION_FORWARD	= 3,
	CARET_DIRECTION_Max	= 2147483647L
    }	CARET_DIRECTION;

typedef 
enum _LINE_DIRECTION
    {	LINE_DIRECTION_RightToLeft	= 1,
	LINE_DIRECTION_LeftToRight	= 2,
	LINE_DIRECTION_Max	= 2147483647L
    }	LINE_DIRECTION;

typedef 
enum _HT_OPTIONS
    {	HT_OPT_AllowAfterEOL	= 0x1,
	HT_OPTIONS_Max	= 2147483647L
    }	HT_OPTIONS;

typedef 
enum _HT_RESULTS
    {	HT_RESULTS_Glyph	= 0x1,
	HT_RESULTS_Max	= 2147483647L
    }	HT_RESULTS;

typedef 
enum _DISPLAY_MOVEUNIT
    {	DISPLAY_MOVEUNIT_PreviousLine	= 1,
	DISPLAY_MOVEUNIT_NextLine	= 2,
	DISPLAY_MOVEUNIT_CurrentLineStart	= 3,
	DISPLAY_MOVEUNIT_CurrentLineEnd	= 4,
	DISPLAY_MOVEUNIT_TopOfWindow	= 5,
	DISPLAY_MOVEUNIT_BottomOfWindow	= 6,
	DISPLAY_MOVEUNIT_Max	= 2147483647L
    }	DISPLAY_MOVEUNIT;

typedef 
enum _DISPLAY_GRAVITY
    {	DISPLAY_GRAVITY_PreviousLine	= 1,
	DISPLAY_GRAVITY_NextLine	= 2,
	DISPLAY_GRAVITY_Max	= 2147483647L
    }	DISPLAY_GRAVITY;

typedef 
enum _DISPLAY_BREAK
    {	DISPLAY_BREAK_None	= 0,
	DISPLAY_BREAK_Block	= 0x1,
	DISPLAY_BREAK_Break	= 0x2,
	DISPLAY_BREAK_Max	= 2147483647L
    }	DISPLAY_BREAK;

typedef 
enum _COORD_SYSTEM
    {	COORD_SYSTEM_GLOBAL	= 0,
	COORD_SYSTEM_PARENT	= 1,
	COORD_SYSTEM_CONTAINER	= 2,
	COORD_SYSTEM_CONTENT	= 3,
	COORD_SYSTEM_FRAME	= 4,
	COORD_SYSTEM_Max	= 2147483647L
    }	COORD_SYSTEM;























EXTERN_C const GUID CLSID_HtmlDlgSafeHelper;
EXTERN_C const GUID CLSID_BlockFormats;
EXTERN_C const GUID CLSID_FontNames;
EXTERN_C const GUID CLSID_CHTMLNamespace;
EXTERN_C const GUID CLSID_CHTMLNamespaceCollection;
typedef 
enum _HTML_PAINTER
    {	HTMLPAINTER_OPAQUE	= 0x1,
	HTMLPAINTER_TRANSPARENT	= 0x2,
	HTMLPAINTER_ALPHA	= 0x4,
	HTMLPAINTER_COMPLEX	= 0x8,
	HTMLPAINTER_OVERLAY	= 0x10,
	HTMLPAINTER_HITTEST	= 0x20,
	HTMLPAINTER_SURFACE	= 0x100,
	HTMLPAINTER_3DSURFACE	= 0x200,
	HTMLPAINTER_NOBAND	= 0x400,
	HTMLPAINTER_NODC	= 0x1000,
	HTMLPAINTER_NOPHYSICALCLIP	= 0x2000,
	HTMLPAINTER_NOSAVEDC	= 0x4000,
	HTMLPAINTER_SUPPORTS_XFORM	= 0x8000,
	HTMLPAINTER_EXPAND	= 0x10000,
	HTMLPAINTER_NOSCROLLBITS	= 0x20000,
	HTML_PAINTER_Max	= 2147483647L
    }	HTML_PAINTER;

typedef 
enum _HTML_PAINT_ZORDER
    {	HTMLPAINT_ZORDER_NONE	= 0,
	HTMLPAINT_ZORDER_REPLACE_ALL	= 1,
	HTMLPAINT_ZORDER_REPLACE_CONTENT	= 2,
	HTMLPAINT_ZORDER_REPLACE_BACKGROUND	= 3,
	HTMLPAINT_ZORDER_BELOW_CONTENT	= 4,
	HTMLPAINT_ZORDER_BELOW_FLOW	= 5,
	HTMLPAINT_ZORDER_ABOVE_FLOW	= 6,
	HTMLPAINT_ZORDER_ABOVE_CONTENT	= 7,
	HTMLPAINT_ZORDER_WINDOW_TOP	= 8,
	HTML_PAINT_ZORDER_Max	= 2147483647L
    }	HTML_PAINT_ZORDER;

typedef 
enum _HTML_PAINT_DRAW_FLAGS
    {	HTMLPAINT_DRAW_UPDATEREGION	= 0x1,
	HTMLPAINT_DRAW_USE_XFORM	= 0x2,
	HTML_PAINT_DRAW_FLAGS_Max	= 2147483647L
    }	HTML_PAINT_DRAW_FLAGS;

typedef 
enum _HTML_PAINT_EVENT_FLAGS
    {	HTMLPAINT_EVENT_TARGET	= 0x1,
	HTMLPAINT_EVENT_SETCURSOR	= 0x2,
	HTML_PAINT_EVENT_FLAGS_Max	= 2147483647L
    }	HTML_PAINT_EVENT_FLAGS;

typedef 
enum _HTML_PAINT_DRAW_INFO_FLAGS
    {	HTMLPAINT_DRAWINFO_VIEWPORT	= 0x1,
	HTMLPAINT_DRAWINFO_UPDATEREGION	= 0x2,
	HTMLPAINT_DRAWINFO_XFORM	= 0x4,
	HTML_PAINT_DRAW_INFO_FLAGS_Max	= 2147483647L
    }	HTML_PAINT_DRAW_INFO_FLAGS;

typedef struct _HTML_PAINTER_INFO
    {
    LONG lFlags;
    LONG lZOrder;
    IID iidDrawObject;
    RECT rcExpand;
    }	HTML_PAINTER_INFO;

typedef struct _HTML_PAINT_XFORM
    {
    FLOAT eM11;
    FLOAT eM12;
    FLOAT eM21;
    FLOAT eM22;
    FLOAT eDx;
    FLOAT eDy;
    }	HTML_PAINT_XFORM;

typedef struct _HTML_PAINT_DRAW_INFO
    {
    RECT rcViewport;
    HRGN hrgnUpdate;
    HTML_PAINT_XFORM xform;
    }	HTML_PAINT_DRAW_INFO;


typedef 
enum _NAVIGATION_STATE
    {	NAVIGATION_STATE_NORMAL	= 0,
	NAVIGATION_STATE_SETSELECTIONSTART	= 1,
	NAVIGATION_STATE_SETSELECTIONEND	= 2,
	NAVIGATION_STATE_Max	= 2147483647L
    } 	NAVIGATION_STATE;


typedef 
enum _HTMLDlgFlag
    {	HTMLDlgFlagNo	= 0,
	HTMLDlgFlagOff	= 0,
	HTMLDlgFlag0	= 0,
	HTMLDlgFlagYes	= 1,
	HTMLDlgFlagOn	= 1,
	HTMLDlgFlag1	= 1,
	HTMLDlgFlagNotSet	= -1,
	HTMLDlgFlag_Max	= 2147483647L
    }	HTMLDlgFlag;

typedef 
enum _HTMLDlgBorder
    {	HTMLDlgBorderThin	= 0,
	HTMLDlgBorderThick	= 0x40000L,
	HTMLDlgBorder_Max	= 2147483647L
    }	HTMLDlgBorder;

typedef 
enum _HTMLDlgEdge
    {	HTMLDlgEdgeSunken	= 0,
	HTMLDlgEdgeRaised	= 16,
	HTMLDlgEdge_Max	= 2147483647L
    }	HTMLDlgEdge;

typedef 
enum _HTMLDlgCenter
    {	HTMLDlgCenterNo	= 0,
	HTMLDlgCenterOff	= 0,
	HTMLDlgCenter0	= 0,
	HTMLDlgCenterYes	= 1,
	HTMLDlgCenterOn	= 1,
	HTMLDlgCenter1	= 1,
	HTMLDlgCenterParent	= 1,
	HTMLDlgCenterDesktop	= 2,
	HTMLDlgCenter_Max	= 2147483647L
    }	HTMLDlgCenter;

EXTERN_C const GUID CLSID_CThreadDialogProcParam;
EXTERN_C const GUID CLSID_CHTMLDlg;
EXTERN_C const GUID CLSID_CHTMLPopup;
typedef 
enum _HTMLAppFlag
    {	HTMLAppFlagNo	= 0,
	HTMLAppFlagOff	= 0,
	HTMLAppFlag0	= 0,
	HTMLAppFlagYes	= 1,
	HTMLAppFlagOn	= 1,
	HTMLAppFlag1	= 1,
	HTMLAppFlag_Max	= 2147483647L
    }	HTMLAppFlag;

typedef 
enum _HTMLMinimizeFlag
    {	HTMLMinimizeFlagNo	= 0,
	HTMLMinimizeFlagYes	= 0x20000L,
	HTMLMinimizeFlag_Max	= 2147483647L
    }	HTMLMinimizeFlag;

typedef 
enum _HTMLMaximizeFlag
    {	HTMLMaximizeFlagNo	= 0,
	HTMLMaximizeFlagYes	= 0x10000L,
	HTMLMaximizeFlag_Max	= 2147483647L
    }	HTMLMaximizeFlag;

typedef 
enum _HTMLCaptionFlag
    {	HTMLCaptionFlagNo	= 0,
	HTMLCaptionFlagYes	= 0xc00000L,
	HTMLCaptionFlag_Max	= 2147483647L
    }	HTMLCaptionFlag;

typedef 
enum _HTMLSysMenuFlag
    {	HTMLSysMenuFlagNo	= 0,
	HTMLSysMenuFlagYes	= 0x80000L,
	HTMLSysMenuFlag_Max	= 2147483647L
    }	HTMLSysMenuFlag;

typedef 
enum _HTMLBorder
    {	HTMLBorderNone	= 0,
	HTMLBorderThick	= 0x40000L,
	HTMLBorderDialog	= 0x400000L,
	HTMLBorderThin	= 0x800000L,
	HTMLBorder_Max	= 2147483647L
    }	HTMLBorder;

typedef 
enum _HTMLBorderStyle
    {	HTMLBorderStyleNormal	= 0,
	HTMLBorderStyleRaised	= 0x100L,
	HTMLBorderStyleSunken	= 0x200L,
	HTMLBorderStylecombined	= 0x300L,
	HTMLBorderStyleStatic	= 0x20000L,
	HTMLBorderStyle_Max	= 2147483647L
    }	HTMLBorderStyle;

typedef 
enum _HTMLWindowState
    {	HTMLWindowStateNormal	= 1,
	HTMLWindowStateMaximize	= 3,
	HTMLWindowStateMinimize	= 6,
	HTMLWindowState_Max	= 2147483647L
    }	HTMLWindowState;

EXTERN_C const GUID CLSID_CAppBehavior;
typedef 
enum _BEHAVIOR_EVENT
    {	BEHAVIOREVENT_FIRST	= 0,
	BEHAVIOREVENT_CONTENTREADY	= 0,
	BEHAVIOREVENT_DOCUMENTREADY	= 1,
	BEHAVIOREVENT_APPLYSTYLE	= 2,
	BEHAVIOREVENT_DOCUMENTCONTEXTCHANGE	= 3,
	BEHAVIOREVENT_CONTENTSAVE	= 4,
	BEHAVIOREVENT_LAST	= 4,
	BEHAVIOR_EVENT_Max	= 2147483647L
    }	BEHAVIOR_EVENT;

typedef 
enum _BEHAVIOR_EVENT_FLAGS
    {	BEHAVIOREVENTFLAGS_BUBBLE	= 1,
	BEHAVIOREVENTFLAGS_STANDARDADDITIVE	= 2,
	BEHAVIOR_EVENT_FLAGS_Max	= 2147483647L
    }	BEHAVIOR_EVENT_FLAGS;

typedef 
enum _BEHAVIOR_RENDER_INFO
    {	BEHAVIORRENDERINFO_BEFOREBACKGROUND	= 0x1,
	BEHAVIORRENDERINFO_AFTERBACKGROUND	= 0x2,
	BEHAVIORRENDERINFO_BEFORECONTENT	= 0x4,
	BEHAVIORRENDERINFO_AFTERCONTENT	= 0x8,
	BEHAVIORRENDERINFO_AFTERFOREGROUND	= 0x20,
	BEHAVIORRENDERINFO_ABOVECONTENT	= 0x28,
	BEHAVIORRENDERINFO_ALLLAYERS	= 0xff,
	BEHAVIORRENDERINFO_DISABLEBACKGROUND	= 0x100,
	BEHAVIORRENDERINFO_DISABLENEGATIVEZ	= 0x200,
	BEHAVIORRENDERINFO_DISABLECONTENT	= 0x400,
	BEHAVIORRENDERINFO_DISABLEPOSITIVEZ	= 0x800,
	BEHAVIORRENDERINFO_DISABLEALLLAYERS	= 0xf00,
	BEHAVIORRENDERINFO_HITTESTING	= 0x1000,
	BEHAVIORRENDERINFO_SURFACE	= 0x100000,
	BEHAVIORRENDERINFO_3DSURFACE	= 0x200000,
	BEHAVIOR_RENDER_INFO_Max	= 2147483647L
    }	BEHAVIOR_RENDER_INFO;

typedef 
enum _BEHAVIOR_RELATION
    {	BEHAVIOR_FIRSTRELATION	= 0,
	BEHAVIOR_SAMEELEMENT	= 0,
	BEHAVIOR_PARENT	= 1,
	BEHAVIOR_CHILD	= 2,
	BEHAVIOR_SIBLING	= 3,
	BEHAVIOR_LASTRELATION	= 3,
	BEHAVIOR_RELATION_Max	= 2147483647L
    }	BEHAVIOR_RELATION;

typedef 
enum _BEHAVIOR_LAYOUT_INFO
    {	BEHAVIORLAYOUTINFO_FULLDELEGATION	= 0x1,
	BEHAVIORLAYOUTINFO_MODIFYNATURAL	= 0x2,
	BEHAVIORLAYOUTINFO_MAPSIZE	= 0x4,
	BEHAVIOR_LAYOUT_INFO_Max	= 2147483647L
    }	BEHAVIOR_LAYOUT_INFO;

typedef 
enum _BEHAVIOR_LAYOUT_MODE
    {	BEHAVIORLAYOUTMODE_NATURAL	= 0x1,
	BEHAVIORLAYOUTMODE_MINWIDTH	= 0x2,
	BEHAVIORLAYOUTMODE_MAXWIDTH	= 0x4,
	BEHAVIORLAYOUTMODE_MEDIA_RESOLUTION	= 0x4000,
	BEHAVIORLAYOUTMODE_FINAL_PERCENT	= 0x8000,
	BEHAVIOR_LAYOUT_MODE_Max	= 2147483647L
    }	BEHAVIOR_LAYOUT_MODE;

typedef 
enum _ELEMENTDESCRIPTOR_FLAGS
    {	ELEMENTDESCRIPTORFLAGS_LITERAL	= 1,
	ELEMENTDESCRIPTORFLAGS_NESTED_LITERAL	= 2,
	ELEMENTDESCRIPTOR_FLAGS_Max	= 2147483647L
    }	ELEMENTDESCRIPTOR_FLAGS;

typedef 
enum _ELEMENTNAMESPACE_FLAGS
    {	ELEMENTNAMESPACEFLAGS_ALLOWANYTAG	= 0x1,
	ELEMENTNAMESPACEFLAGS_QUERYFORUNKNOWNTAGS	= 0x2,
	ELEMENTNAMESPACE_FLAGS_Max	= 2147483647L
    }	ELEMENTNAMESPACE_FLAGS;





EXTERN_C const IID LIBID_MSHTML;

#ifndef __IHTMLEventObj_INTERFACE_DEFINED__
#define __IHTMLEventObj_INTERFACE_DEFINED__

/* interface IHTMLEventObj */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLEventObj;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f32d-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEventObj : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_srcElement( 
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_altKey( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ctrlKey( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_shiftKey( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_returnValue( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_returnValue( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_cancelBubble( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cancelBubble( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fromElement( 
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_toElement( 
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_keyCode( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_keyCode( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_button( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_qualifier( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_reason( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_x( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_y( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_clientX( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_clientY( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetX( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetY( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_screenX( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_screenY( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_srcFilter( 
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLEventObjVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLEventObj __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLEventObj __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_srcElement )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_altKey )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ctrlKey )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_shiftKey )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_returnValue )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_returnValue )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_cancelBubble )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_cancelBubble )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fromElement )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_toElement )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_keyCode )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_keyCode )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_button )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_type )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_qualifier )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_reason )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_x )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_y )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clientX )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clientY )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_offsetX )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_offsetY )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_screenX )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_screenY )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_srcFilter )( 
            IHTMLEventObj __RPC_FAR * This,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLEventObjVtbl;

    interface IHTMLEventObj
    {
        CONST_VTBL struct IHTMLEventObjVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLEventObj_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLEventObj_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLEventObj_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLEventObj_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLEventObj_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLEventObj_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLEventObj_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLEventObj_get_srcElement(This,p)	\
    (This)->lpVtbl -> get_srcElement(This,p)

#define IHTMLEventObj_get_altKey(This,p)	\
    (This)->lpVtbl -> get_altKey(This,p)

#define IHTMLEventObj_get_ctrlKey(This,p)	\
    (This)->lpVtbl -> get_ctrlKey(This,p)

#define IHTMLEventObj_get_shiftKey(This,p)	\
    (This)->lpVtbl -> get_shiftKey(This,p)

#define IHTMLEventObj_put_returnValue(This,v)	\
    (This)->lpVtbl -> put_returnValue(This,v)

#define IHTMLEventObj_get_returnValue(This,p)	\
    (This)->lpVtbl -> get_returnValue(This,p)

#define IHTMLEventObj_put_cancelBubble(This,v)	\
    (This)->lpVtbl -> put_cancelBubble(This,v)

#define IHTMLEventObj_get_cancelBubble(This,p)	\
    (This)->lpVtbl -> get_cancelBubble(This,p)

#define IHTMLEventObj_get_fromElement(This,p)	\
    (This)->lpVtbl -> get_fromElement(This,p)

#define IHTMLEventObj_get_toElement(This,p)	\
    (This)->lpVtbl -> get_toElement(This,p)

#define IHTMLEventObj_put_keyCode(This,v)	\
    (This)->lpVtbl -> put_keyCode(This,v)

#define IHTMLEventObj_get_keyCode(This,p)	\
    (This)->lpVtbl -> get_keyCode(This,p)

#define IHTMLEventObj_get_button(This,p)	\
    (This)->lpVtbl -> get_button(This,p)

#define IHTMLEventObj_get_type(This,p)	\
    (This)->lpVtbl -> get_type(This,p)

#define IHTMLEventObj_get_qualifier(This,p)	\
    (This)->lpVtbl -> get_qualifier(This,p)

#define IHTMLEventObj_get_reason(This,p)	\
    (This)->lpVtbl -> get_reason(This,p)

#define IHTMLEventObj_get_x(This,p)	\
    (This)->lpVtbl -> get_x(This,p)

#define IHTMLEventObj_get_y(This,p)	\
    (This)->lpVtbl -> get_y(This,p)

#define IHTMLEventObj_get_clientX(This,p)	\
    (This)->lpVtbl -> get_clientX(This,p)

#define IHTMLEventObj_get_clientY(This,p)	\
    (This)->lpVtbl -> get_clientY(This,p)

#define IHTMLEventObj_get_offsetX(This,p)	\
    (This)->lpVtbl -> get_offsetX(This,p)

#define IHTMLEventObj_get_offsetY(This,p)	\
    (This)->lpVtbl -> get_offsetY(This,p)

#define IHTMLEventObj_get_screenX(This,p)	\
    (This)->lpVtbl -> get_screenX(This,p)

#define IHTMLEventObj_get_screenY(This,p)	\
    (This)->lpVtbl -> get_screenY(This,p)

#define IHTMLEventObj_get_srcFilter(This,p)	\
    (This)->lpVtbl -> get_srcFilter(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_srcElement_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_srcElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_altKey_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_altKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_ctrlKey_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_ctrlKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_shiftKey_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_shiftKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_put_returnValue_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLEventObj_put_returnValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_returnValue_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_returnValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_put_cancelBubble_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLEventObj_put_cancelBubble_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_cancelBubble_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_cancelBubble_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_fromElement_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_fromElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_toElement_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_toElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_put_keyCode_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLEventObj_put_keyCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_keyCode_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_keyCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_button_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_button_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_type_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_qualifier_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_qualifier_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_reason_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_reason_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_x_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_x_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_y_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_y_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_clientX_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_clientX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_clientY_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_clientY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_offsetX_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_offsetX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_offsetY_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_offsetY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_screenX_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_screenX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_screenY_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_screenY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_srcFilter_Proxy( 
    IHTMLEventObj __RPC_FAR * This,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLEventObj_get_srcFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLEventObj_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSite_INTERFACE_DEFINED__
#define __IElementBehaviorSite_INTERFACE_DEFINED__

/* interface IElementBehaviorSite */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSite;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f427-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *ppElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterNotification( 
            /* [in] */ LONG lEvent) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorSiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IElementBehaviorSite __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IElementBehaviorSite __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IElementBehaviorSite __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetElement )( 
            IElementBehaviorSite __RPC_FAR * This,
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *ppElement);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterNotification )( 
            IElementBehaviorSite __RPC_FAR * This,
            /* [in] */ LONG lEvent);
        
        END_INTERFACE
    } IElementBehaviorSiteVtbl;

    interface IElementBehaviorSite
    {
        CONST_VTBL struct IElementBehaviorSiteVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorSite_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IElementBehaviorSite_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IElementBehaviorSite_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IElementBehaviorSite_GetElement(This,ppElement)	\
    (This)->lpVtbl -> GetElement(This,ppElement)

#define IElementBehaviorSite_RegisterNotification(This,lEvent)	\
    (This)->lpVtbl -> RegisterNotification(This,lEvent)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IElementBehaviorSite_GetElement_Proxy( 
    IElementBehaviorSite __RPC_FAR * This,
    /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *ppElement);


void __RPC_STUB IElementBehaviorSite_GetElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSite_RegisterNotification_Proxy( 
    IElementBehaviorSite __RPC_FAR * This,
    /* [in] */ LONG lEvent);


void __RPC_STUB IElementBehaviorSite_RegisterNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorSite_INTERFACE_DEFINED__ */


#ifndef __IElementBehavior_INTERFACE_DEFINED__
#define __IElementBehavior_INTERFACE_DEFINED__

/* interface IElementBehavior */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f425-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehavior : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Init( 
            /* [in] */ IElementBehaviorSite __RPC_FAR *pBehaviorSite) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Notify( 
            /* [in] */ LONG lEvent,
            /* [out][in] */ VARIANT __RPC_FAR *pVar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Detach( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IElementBehavior __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IElementBehavior __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IElementBehavior __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Init )( 
            IElementBehavior __RPC_FAR * This,
            /* [in] */ IElementBehaviorSite __RPC_FAR *pBehaviorSite);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Notify )( 
            IElementBehavior __RPC_FAR * This,
            /* [in] */ LONG lEvent,
            /* [out][in] */ VARIANT __RPC_FAR *pVar);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Detach )( 
            IElementBehavior __RPC_FAR * This);
        
        END_INTERFACE
    } IElementBehaviorVtbl;

    interface IElementBehavior
    {
        CONST_VTBL struct IElementBehaviorVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehavior_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IElementBehavior_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IElementBehavior_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IElementBehavior_Init(This,pBehaviorSite)	\
    (This)->lpVtbl -> Init(This,pBehaviorSite)

#define IElementBehavior_Notify(This,lEvent,pVar)	\
    (This)->lpVtbl -> Notify(This,lEvent,pVar)

#define IElementBehavior_Detach(This)	\
    (This)->lpVtbl -> Detach(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IElementBehavior_Init_Proxy( 
    IElementBehavior __RPC_FAR * This,
    /* [in] */ IElementBehaviorSite __RPC_FAR *pBehaviorSite);


void __RPC_STUB IElementBehavior_Init_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehavior_Notify_Proxy( 
    IElementBehavior __RPC_FAR * This,
    /* [in] */ LONG lEvent,
    /* [out][in] */ VARIANT __RPC_FAR *pVar);


void __RPC_STUB IElementBehavior_Notify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehavior_Detach_Proxy( 
    IElementBehavior __RPC_FAR * This);


void __RPC_STUB IElementBehavior_Detach_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehavior_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorFactory_INTERFACE_DEFINED__
#define __IElementBehaviorFactory_INTERFACE_DEFINED__

/* interface IElementBehaviorFactory */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f429-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE FindBehavior( 
            /* [in] */ BSTR bstrBehavior,
            /* [in] */ BSTR bstrBehaviorUrl,
            /* [in] */ IElementBehaviorSite __RPC_FAR *pSite,
            /* [out][retval] */ IElementBehavior __RPC_FAR *__RPC_FAR *ppBehavior) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IElementBehaviorFactory __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IElementBehaviorFactory __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IElementBehaviorFactory __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FindBehavior )( 
            IElementBehaviorFactory __RPC_FAR * This,
            /* [in] */ BSTR bstrBehavior,
            /* [in] */ BSTR bstrBehaviorUrl,
            /* [in] */ IElementBehaviorSite __RPC_FAR *pSite,
            /* [out][retval] */ IElementBehavior __RPC_FAR *__RPC_FAR *ppBehavior);
        
        END_INTERFACE
    } IElementBehaviorFactoryVtbl;

    interface IElementBehaviorFactory
    {
        CONST_VTBL struct IElementBehaviorFactoryVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorFactory_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IElementBehaviorFactory_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IElementBehaviorFactory_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IElementBehaviorFactory_FindBehavior(This,bstrBehavior,bstrBehaviorUrl,pSite,ppBehavior)	\
    (This)->lpVtbl -> FindBehavior(This,bstrBehavior,bstrBehaviorUrl,pSite,ppBehavior)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IElementBehaviorFactory_FindBehavior_Proxy( 
    IElementBehaviorFactory __RPC_FAR * This,
    /* [in] */ BSTR bstrBehavior,
    /* [in] */ BSTR bstrBehaviorUrl,
    /* [in] */ IElementBehaviorSite __RPC_FAR *pSite,
    /* [out][retval] */ IElementBehavior __RPC_FAR *__RPC_FAR *ppBehavior);


void __RPC_STUB IElementBehaviorFactory_FindBehavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorFactory_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteOM_INTERFACE_DEFINED__
#define __IElementBehaviorSiteOM_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteOM */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteOM;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f489-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteOM : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RegisterEvent( 
            /* [in] */ LPOLESTR pchEvent,
            /* [in] */ LONG lFlags,
            /* [out][retval] */ LONG __RPC_FAR *plCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEventCookie( 
            /* [in] */ LPOLESTR pchEvent,
            /* [out][retval] */ LONG __RPC_FAR *plCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FireEvent( 
            /* [in] */ LONG lCookie,
            /* [in] */ IHTMLEventObj __RPC_FAR *pEventObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateEventObject( 
            /* [out][retval] */ IHTMLEventObj __RPC_FAR *__RPC_FAR *ppEventObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterName( 
            /* [in] */ LPOLESTR pchName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterUrn( 
            /* [in] */ LPOLESTR pchUrn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorSiteOMVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IElementBehaviorSiteOM __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IElementBehaviorSiteOM __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IElementBehaviorSiteOM __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterEvent )( 
            IElementBehaviorSiteOM __RPC_FAR * This,
            /* [in] */ LPOLESTR pchEvent,
            /* [in] */ LONG lFlags,
            /* [out][retval] */ LONG __RPC_FAR *plCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEventCookie )( 
            IElementBehaviorSiteOM __RPC_FAR * This,
            /* [in] */ LPOLESTR pchEvent,
            /* [out][retval] */ LONG __RPC_FAR *plCookie);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FireEvent )( 
            IElementBehaviorSiteOM __RPC_FAR * This,
            /* [in] */ LONG lCookie,
            /* [in] */ IHTMLEventObj __RPC_FAR *pEventObject);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateEventObject )( 
            IElementBehaviorSiteOM __RPC_FAR * This,
            /* [out][retval] */ IHTMLEventObj __RPC_FAR *__RPC_FAR *ppEventObject);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterName )( 
            IElementBehaviorSiteOM __RPC_FAR * This,
            /* [in] */ LPOLESTR pchName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterUrn )( 
            IElementBehaviorSiteOM __RPC_FAR * This,
            /* [in] */ LPOLESTR pchUrn);
        
        END_INTERFACE
    } IElementBehaviorSiteOMVtbl;

    interface IElementBehaviorSiteOM
    {
        CONST_VTBL struct IElementBehaviorSiteOMVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorSiteOM_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IElementBehaviorSiteOM_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IElementBehaviorSiteOM_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IElementBehaviorSiteOM_RegisterEvent(This,pchEvent,lFlags,plCookie)	\
    (This)->lpVtbl -> RegisterEvent(This,pchEvent,lFlags,plCookie)

#define IElementBehaviorSiteOM_GetEventCookie(This,pchEvent,plCookie)	\
    (This)->lpVtbl -> GetEventCookie(This,pchEvent,plCookie)

#define IElementBehaviorSiteOM_FireEvent(This,lCookie,pEventObject)	\
    (This)->lpVtbl -> FireEvent(This,lCookie,pEventObject)

#define IElementBehaviorSiteOM_CreateEventObject(This,ppEventObject)	\
    (This)->lpVtbl -> CreateEventObject(This,ppEventObject)

#define IElementBehaviorSiteOM_RegisterName(This,pchName)	\
    (This)->lpVtbl -> RegisterName(This,pchName)

#define IElementBehaviorSiteOM_RegisterUrn(This,pchUrn)	\
    (This)->lpVtbl -> RegisterUrn(This,pchUrn)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM_RegisterEvent_Proxy( 
    IElementBehaviorSiteOM __RPC_FAR * This,
    /* [in] */ LPOLESTR pchEvent,
    /* [in] */ LONG lFlags,
    /* [out][retval] */ LONG __RPC_FAR *plCookie);


void __RPC_STUB IElementBehaviorSiteOM_RegisterEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM_GetEventCookie_Proxy( 
    IElementBehaviorSiteOM __RPC_FAR * This,
    /* [in] */ LPOLESTR pchEvent,
    /* [out][retval] */ LONG __RPC_FAR *plCookie);


void __RPC_STUB IElementBehaviorSiteOM_GetEventCookie_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM_FireEvent_Proxy( 
    IElementBehaviorSiteOM __RPC_FAR * This,
    /* [in] */ LONG lCookie,
    /* [in] */ IHTMLEventObj __RPC_FAR *pEventObject);


void __RPC_STUB IElementBehaviorSiteOM_FireEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM_CreateEventObject_Proxy( 
    IElementBehaviorSiteOM __RPC_FAR * This,
    /* [out][retval] */ IHTMLEventObj __RPC_FAR *__RPC_FAR *ppEventObject);


void __RPC_STUB IElementBehaviorSiteOM_CreateEventObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM_RegisterName_Proxy( 
    IElementBehaviorSiteOM __RPC_FAR * This,
    /* [in] */ LPOLESTR pchName);


void __RPC_STUB IElementBehaviorSiteOM_RegisterName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM_RegisterUrn_Proxy( 
    IElementBehaviorSiteOM __RPC_FAR * This,
    /* [in] */ LPOLESTR pchUrn);


void __RPC_STUB IElementBehaviorSiteOM_RegisterUrn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorSiteOM_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorRender_INTERFACE_DEFINED__
#define __IElementBehaviorRender_INTERFACE_DEFINED__

/* interface IElementBehaviorRender */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorRender;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4aa-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorRender : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Draw( 
            /* [in] */ HDC hdc,
            /* [in] */ LONG lLayer,
            /* [in] */ RECT __RPC_FAR *pRect,
            /* [in] */ IUnknown __RPC_FAR *pReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRenderInfo( 
            /* [out][retval] */ LONG __RPC_FAR *plRenderInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HitTestPoint( 
            /* [in] */ POINT __RPC_FAR *pPoint,
            /* [in] */ IUnknown __RPC_FAR *pReserved,
            /* [out][retval] */ BOOL __RPC_FAR *pbHit) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorRenderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IElementBehaviorRender __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IElementBehaviorRender __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IElementBehaviorRender __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Draw )( 
            IElementBehaviorRender __RPC_FAR * This,
            /* [in] */ HDC hdc,
            /* [in] */ LONG lLayer,
            /* [in] */ RECT __RPC_FAR *pRect,
            /* [in] */ IUnknown __RPC_FAR *pReserved);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetRenderInfo )( 
            IElementBehaviorRender __RPC_FAR * This,
            /* [out][retval] */ LONG __RPC_FAR *plRenderInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HitTestPoint )( 
            IElementBehaviorRender __RPC_FAR * This,
            /* [in] */ POINT __RPC_FAR *pPoint,
            /* [in] */ IUnknown __RPC_FAR *pReserved,
            /* [out][retval] */ BOOL __RPC_FAR *pbHit);
        
        END_INTERFACE
    } IElementBehaviorRenderVtbl;

    interface IElementBehaviorRender
    {
        CONST_VTBL struct IElementBehaviorRenderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorRender_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IElementBehaviorRender_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IElementBehaviorRender_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IElementBehaviorRender_Draw(This,hdc,lLayer,pRect,pReserved)	\
    (This)->lpVtbl -> Draw(This,hdc,lLayer,pRect,pReserved)

#define IElementBehaviorRender_GetRenderInfo(This,plRenderInfo)	\
    (This)->lpVtbl -> GetRenderInfo(This,plRenderInfo)

#define IElementBehaviorRender_HitTestPoint(This,pPoint,pReserved,pbHit)	\
    (This)->lpVtbl -> HitTestPoint(This,pPoint,pReserved,pbHit)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IElementBehaviorRender_Draw_Proxy( 
    IElementBehaviorRender __RPC_FAR * This,
    /* [in] */ HDC hdc,
    /* [in] */ LONG lLayer,
    /* [in] */ RECT __RPC_FAR *pRect,
    /* [in] */ IUnknown __RPC_FAR *pReserved);


void __RPC_STUB IElementBehaviorRender_Draw_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorRender_GetRenderInfo_Proxy( 
    IElementBehaviorRender __RPC_FAR * This,
    /* [out][retval] */ LONG __RPC_FAR *plRenderInfo);


void __RPC_STUB IElementBehaviorRender_GetRenderInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorRender_HitTestPoint_Proxy( 
    IElementBehaviorRender __RPC_FAR * This,
    /* [in] */ POINT __RPC_FAR *pPoint,
    /* [in] */ IUnknown __RPC_FAR *pReserved,
    /* [out][retval] */ BOOL __RPC_FAR *pbHit);


void __RPC_STUB IElementBehaviorRender_HitTestPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorRender_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteRender_INTERFACE_DEFINED__
#define __IElementBehaviorSiteRender_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteRender */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteRender;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a7-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteRender : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invalidate( 
            /* [in] */ RECT __RPC_FAR *pRect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateRenderInfo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateStyle( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorSiteRenderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IElementBehaviorSiteRender __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IElementBehaviorSiteRender __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IElementBehaviorSiteRender __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invalidate )( 
            IElementBehaviorSiteRender __RPC_FAR * This,
            /* [in] */ RECT __RPC_FAR *pRect);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InvalidateRenderInfo )( 
            IElementBehaviorSiteRender __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InvalidateStyle )( 
            IElementBehaviorSiteRender __RPC_FAR * This);
        
        END_INTERFACE
    } IElementBehaviorSiteRenderVtbl;

    interface IElementBehaviorSiteRender
    {
        CONST_VTBL struct IElementBehaviorSiteRenderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorSiteRender_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IElementBehaviorSiteRender_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IElementBehaviorSiteRender_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IElementBehaviorSiteRender_Invalidate(This,pRect)	\
    (This)->lpVtbl -> Invalidate(This,pRect)

#define IElementBehaviorSiteRender_InvalidateRenderInfo(This)	\
    (This)->lpVtbl -> InvalidateRenderInfo(This)

#define IElementBehaviorSiteRender_InvalidateStyle(This)	\
    (This)->lpVtbl -> InvalidateStyle(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IElementBehaviorSiteRender_Invalidate_Proxy( 
    IElementBehaviorSiteRender __RPC_FAR * This,
    /* [in] */ RECT __RPC_FAR *pRect);


void __RPC_STUB IElementBehaviorSiteRender_Invalidate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteRender_InvalidateRenderInfo_Proxy( 
    IElementBehaviorSiteRender __RPC_FAR * This);


void __RPC_STUB IElementBehaviorSiteRender_InvalidateRenderInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteRender_InvalidateStyle_Proxy( 
    IElementBehaviorSiteRender __RPC_FAR * This);


void __RPC_STUB IElementBehaviorSiteRender_InvalidateStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorSiteRender_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle_INTERFACE_DEFINED__
#define __IHTMLStyle_INTERFACE_DEFINED__

/* interface IHTMLStyle */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f25e-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontFamily( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontFamily( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontVariant( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontVariant( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontWeight( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontWeight( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontSize( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontSize( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_font( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_font( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_color( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_color( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_background( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_background( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundImage( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundImage( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundRepeat( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundRepeat( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundAttachment( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundAttachment( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPosition( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPositionX( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionX( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPositionY( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionY( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordSpacing( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_letterSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_letterSpacing( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecoration( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecoration( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationNone( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationNone( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationUnderline( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationUnderline( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationOverline( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationOverline( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationLineThrough( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationLineThrough( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationBlink( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationBlink( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_verticalAlign( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_verticalAlign( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textTransform( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textTransform( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlign( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textIndent( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textIndent( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lineHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineHeight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginTop( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginRight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginRight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginBottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginBottom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginLeft( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_margin( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_margin( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingTop( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingRight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingRight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingBottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingBottom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingLeft( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_padding( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_padding( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTop( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTop( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRight( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRight( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottom( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottom( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeft( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeft( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColor( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderWidth( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderWidth( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_styleFloat( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_styleFloat( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_clear( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clear( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_display( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_display( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_visibility( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_visibility( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyleType( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleType( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStylePosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStylePosition( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyleImage( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleImage( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_whiteSpace( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_whiteSpace( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_top( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_left( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_left( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_zIndex( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zIndex( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflow( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflow( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakBefore( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakBefore( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakAfter( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakAfter( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cssText( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cssText( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelTop( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelTop( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelLeft( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelLeft( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelWidth( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelWidth( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelHeight( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelHeight( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posTop( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posTop( 
            /* [out][retval] */ float __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posLeft( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posLeft( 
            /* [out][retval] */ float __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posWidth( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posWidth( 
            /* [out][retval] */ float __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posHeight( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posHeight( 
            /* [out][retval] */ float __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cursor( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cursor( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_clip( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clip( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_filter( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_filter( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags = 1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT __RPC_FAR *AttributeValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ BSTR __RPC_FAR *String) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLStyle __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLStyle __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_fontFamily )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontFamily )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_fontStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_fontVariant )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontVariant )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_fontWeight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontWeight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_fontSize )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontSize )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_font )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_font )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_color )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_color )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_background )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_background )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundColor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundColor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundImage )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundImage )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundRepeat )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundRepeat )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundAttachment )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundAttachment )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundPosition )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundPosition )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundPositionX )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundPositionX )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundPositionY )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundPositionY )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_wordSpacing )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_wordSpacing )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_letterSpacing )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_letterSpacing )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecoration )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecoration )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecorationNone )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecorationNone )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecorationUnderline )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecorationUnderline )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecorationOverline )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecorationOverline )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecorationLineThrough )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecorationLineThrough )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecorationBlink )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecorationBlink )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_verticalAlign )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_verticalAlign )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textTransform )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textTransform )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textAlign )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textAlign )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textIndent )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textIndent )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_lineHeight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_lineHeight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_marginTop )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_marginTop )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_marginRight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_marginRight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_marginBottom )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_marginBottom )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_marginLeft )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_marginLeft )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_margin )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_margin )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_paddingTop )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_paddingTop )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_paddingRight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_paddingRight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_paddingBottom )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_paddingBottom )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_paddingLeft )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_paddingLeft )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_padding )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_padding )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_border )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_border )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderTop )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderTop )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderRight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderRight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderBottom )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderBottom )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderLeft )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderLeft )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderColor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderColor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderTopColor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderTopColor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderRightColor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderRightColor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderBottomColor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderBottomColor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderLeftColor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderLeftColor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderTopWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderTopWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderRightWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderRightWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderBottomWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderBottomWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderLeftWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderLeftWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderTopStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderTopStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderRightStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderRightStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderBottomStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderBottomStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderLeftStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderLeftStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_width )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_width )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_height )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_height )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_styleFloat )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_styleFloat )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_clear )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clear )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_display )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_display )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_visibility )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_visibility )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_listStyleType )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_listStyleType )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_listStylePosition )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_listStylePosition )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_listStyleImage )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_listStyleImage )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_listStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_listStyle )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_whiteSpace )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_whiteSpace )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_top )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_top )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_left )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_left )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_position )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_zIndex )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_zIndex )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_overflow )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_overflow )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_pageBreakBefore )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pageBreakBefore )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_pageBreakAfter )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pageBreakAfter )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_cssText )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_cssText )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_pixelTop )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pixelTop )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_pixelLeft )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pixelLeft )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_pixelWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pixelWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_pixelHeight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pixelHeight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_posTop )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_posTop )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ float __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_posLeft )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_posLeft )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ float __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_posWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_posWidth )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ float __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_posHeight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_posHeight )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ float __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_cursor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_cursor )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_clip )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clip )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_filter )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_filter )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *setAttribute )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getAttribute )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT __RPC_FAR *AttributeValue);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *removeAttribute )( 
            IHTMLStyle __RPC_FAR * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *toString )( 
            IHTMLStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *String);
        
        END_INTERFACE
    } IHTMLStyleVtbl;

    interface IHTMLStyle
    {
        CONST_VTBL struct IHTMLStyleVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLStyle_put_fontFamily(This,v)	\
    (This)->lpVtbl -> put_fontFamily(This,v)

#define IHTMLStyle_get_fontFamily(This,p)	\
    (This)->lpVtbl -> get_fontFamily(This,p)

#define IHTMLStyle_put_fontStyle(This,v)	\
    (This)->lpVtbl -> put_fontStyle(This,v)

#define IHTMLStyle_get_fontStyle(This,p)	\
    (This)->lpVtbl -> get_fontStyle(This,p)

#define IHTMLStyle_put_fontVariant(This,v)	\
    (This)->lpVtbl -> put_fontVariant(This,v)

#define IHTMLStyle_get_fontVariant(This,p)	\
    (This)->lpVtbl -> get_fontVariant(This,p)

#define IHTMLStyle_put_fontWeight(This,v)	\
    (This)->lpVtbl -> put_fontWeight(This,v)

#define IHTMLStyle_get_fontWeight(This,p)	\
    (This)->lpVtbl -> get_fontWeight(This,p)

#define IHTMLStyle_put_fontSize(This,v)	\
    (This)->lpVtbl -> put_fontSize(This,v)

#define IHTMLStyle_get_fontSize(This,p)	\
    (This)->lpVtbl -> get_fontSize(This,p)

#define IHTMLStyle_put_font(This,v)	\
    (This)->lpVtbl -> put_font(This,v)

#define IHTMLStyle_get_font(This,p)	\
    (This)->lpVtbl -> get_font(This,p)

#define IHTMLStyle_put_color(This,v)	\
    (This)->lpVtbl -> put_color(This,v)

#define IHTMLStyle_get_color(This,p)	\
    (This)->lpVtbl -> get_color(This,p)

#define IHTMLStyle_put_background(This,v)	\
    (This)->lpVtbl -> put_background(This,v)

#define IHTMLStyle_get_background(This,p)	\
    (This)->lpVtbl -> get_background(This,p)

#define IHTMLStyle_put_backgroundColor(This,v)	\
    (This)->lpVtbl -> put_backgroundColor(This,v)

#define IHTMLStyle_get_backgroundColor(This,p)	\
    (This)->lpVtbl -> get_backgroundColor(This,p)

#define IHTMLStyle_put_backgroundImage(This,v)	\
    (This)->lpVtbl -> put_backgroundImage(This,v)

#define IHTMLStyle_get_backgroundImage(This,p)	\
    (This)->lpVtbl -> get_backgroundImage(This,p)

#define IHTMLStyle_put_backgroundRepeat(This,v)	\
    (This)->lpVtbl -> put_backgroundRepeat(This,v)

#define IHTMLStyle_get_backgroundRepeat(This,p)	\
    (This)->lpVtbl -> get_backgroundRepeat(This,p)

#define IHTMLStyle_put_backgroundAttachment(This,v)	\
    (This)->lpVtbl -> put_backgroundAttachment(This,v)

#define IHTMLStyle_get_backgroundAttachment(This,p)	\
    (This)->lpVtbl -> get_backgroundAttachment(This,p)

#define IHTMLStyle_put_backgroundPosition(This,v)	\
    (This)->lpVtbl -> put_backgroundPosition(This,v)

#define IHTMLStyle_get_backgroundPosition(This,p)	\
    (This)->lpVtbl -> get_backgroundPosition(This,p)

#define IHTMLStyle_put_backgroundPositionX(This,v)	\
    (This)->lpVtbl -> put_backgroundPositionX(This,v)

#define IHTMLStyle_get_backgroundPositionX(This,p)	\
    (This)->lpVtbl -> get_backgroundPositionX(This,p)

#define IHTMLStyle_put_backgroundPositionY(This,v)	\
    (This)->lpVtbl -> put_backgroundPositionY(This,v)

#define IHTMLStyle_get_backgroundPositionY(This,p)	\
    (This)->lpVtbl -> get_backgroundPositionY(This,p)

#define IHTMLStyle_put_wordSpacing(This,v)	\
    (This)->lpVtbl -> put_wordSpacing(This,v)

#define IHTMLStyle_get_wordSpacing(This,p)	\
    (This)->lpVtbl -> get_wordSpacing(This,p)

#define IHTMLStyle_put_letterSpacing(This,v)	\
    (This)->lpVtbl -> put_letterSpacing(This,v)

#define IHTMLStyle_get_letterSpacing(This,p)	\
    (This)->lpVtbl -> get_letterSpacing(This,p)

#define IHTMLStyle_put_textDecoration(This,v)	\
    (This)->lpVtbl -> put_textDecoration(This,v)

#define IHTMLStyle_get_textDecoration(This,p)	\
    (This)->lpVtbl -> get_textDecoration(This,p)

#define IHTMLStyle_put_textDecorationNone(This,v)	\
    (This)->lpVtbl -> put_textDecorationNone(This,v)

#define IHTMLStyle_get_textDecorationNone(This,p)	\
    (This)->lpVtbl -> get_textDecorationNone(This,p)

#define IHTMLStyle_put_textDecorationUnderline(This,v)	\
    (This)->lpVtbl -> put_textDecorationUnderline(This,v)

#define IHTMLStyle_get_textDecorationUnderline(This,p)	\
    (This)->lpVtbl -> get_textDecorationUnderline(This,p)

#define IHTMLStyle_put_textDecorationOverline(This,v)	\
    (This)->lpVtbl -> put_textDecorationOverline(This,v)

#define IHTMLStyle_get_textDecorationOverline(This,p)	\
    (This)->lpVtbl -> get_textDecorationOverline(This,p)

#define IHTMLStyle_put_textDecorationLineThrough(This,v)	\
    (This)->lpVtbl -> put_textDecorationLineThrough(This,v)

#define IHTMLStyle_get_textDecorationLineThrough(This,p)	\
    (This)->lpVtbl -> get_textDecorationLineThrough(This,p)

#define IHTMLStyle_put_textDecorationBlink(This,v)	\
    (This)->lpVtbl -> put_textDecorationBlink(This,v)

#define IHTMLStyle_get_textDecorationBlink(This,p)	\
    (This)->lpVtbl -> get_textDecorationBlink(This,p)

#define IHTMLStyle_put_verticalAlign(This,v)	\
    (This)->lpVtbl -> put_verticalAlign(This,v)

#define IHTMLStyle_get_verticalAlign(This,p)	\
    (This)->lpVtbl -> get_verticalAlign(This,p)

#define IHTMLStyle_put_textTransform(This,v)	\
    (This)->lpVtbl -> put_textTransform(This,v)

#define IHTMLStyle_get_textTransform(This,p)	\
    (This)->lpVtbl -> get_textTransform(This,p)

#define IHTMLStyle_put_textAlign(This,v)	\
    (This)->lpVtbl -> put_textAlign(This,v)

#define IHTMLStyle_get_textAlign(This,p)	\
    (This)->lpVtbl -> get_textAlign(This,p)

#define IHTMLStyle_put_textIndent(This,v)	\
    (This)->lpVtbl -> put_textIndent(This,v)

#define IHTMLStyle_get_textIndent(This,p)	\
    (This)->lpVtbl -> get_textIndent(This,p)

#define IHTMLStyle_put_lineHeight(This,v)	\
    (This)->lpVtbl -> put_lineHeight(This,v)

#define IHTMLStyle_get_lineHeight(This,p)	\
    (This)->lpVtbl -> get_lineHeight(This,p)

#define IHTMLStyle_put_marginTop(This,v)	\
    (This)->lpVtbl -> put_marginTop(This,v)

#define IHTMLStyle_get_marginTop(This,p)	\
    (This)->lpVtbl -> get_marginTop(This,p)

#define IHTMLStyle_put_marginRight(This,v)	\
    (This)->lpVtbl -> put_marginRight(This,v)

#define IHTMLStyle_get_marginRight(This,p)	\
    (This)->lpVtbl -> get_marginRight(This,p)

#define IHTMLStyle_put_marginBottom(This,v)	\
    (This)->lpVtbl -> put_marginBottom(This,v)

#define IHTMLStyle_get_marginBottom(This,p)	\
    (This)->lpVtbl -> get_marginBottom(This,p)

#define IHTMLStyle_put_marginLeft(This,v)	\
    (This)->lpVtbl -> put_marginLeft(This,v)

#define IHTMLStyle_get_marginLeft(This,p)	\
    (This)->lpVtbl -> get_marginLeft(This,p)

#define IHTMLStyle_put_margin(This,v)	\
    (This)->lpVtbl -> put_margin(This,v)

#define IHTMLStyle_get_margin(This,p)	\
    (This)->lpVtbl -> get_margin(This,p)

#define IHTMLStyle_put_paddingTop(This,v)	\
    (This)->lpVtbl -> put_paddingTop(This,v)

#define IHTMLStyle_get_paddingTop(This,p)	\
    (This)->lpVtbl -> get_paddingTop(This,p)

#define IHTMLStyle_put_paddingRight(This,v)	\
    (This)->lpVtbl -> put_paddingRight(This,v)

#define IHTMLStyle_get_paddingRight(This,p)	\
    (This)->lpVtbl -> get_paddingRight(This,p)

#define IHTMLStyle_put_paddingBottom(This,v)	\
    (This)->lpVtbl -> put_paddingBottom(This,v)

#define IHTMLStyle_get_paddingBottom(This,p)	\
    (This)->lpVtbl -> get_paddingBottom(This,p)

#define IHTMLStyle_put_paddingLeft(This,v)	\
    (This)->lpVtbl -> put_paddingLeft(This,v)

#define IHTMLStyle_get_paddingLeft(This,p)	\
    (This)->lpVtbl -> get_paddingLeft(This,p)

#define IHTMLStyle_put_padding(This,v)	\
    (This)->lpVtbl -> put_padding(This,v)

#define IHTMLStyle_get_padding(This,p)	\
    (This)->lpVtbl -> get_padding(This,p)

#define IHTMLStyle_put_border(This,v)	\
    (This)->lpVtbl -> put_border(This,v)

#define IHTMLStyle_get_border(This,p)	\
    (This)->lpVtbl -> get_border(This,p)

#define IHTMLStyle_put_borderTop(This,v)	\
    (This)->lpVtbl -> put_borderTop(This,v)

#define IHTMLStyle_get_borderTop(This,p)	\
    (This)->lpVtbl -> get_borderTop(This,p)

#define IHTMLStyle_put_borderRight(This,v)	\
    (This)->lpVtbl -> put_borderRight(This,v)

#define IHTMLStyle_get_borderRight(This,p)	\
    (This)->lpVtbl -> get_borderRight(This,p)

#define IHTMLStyle_put_borderBottom(This,v)	\
    (This)->lpVtbl -> put_borderBottom(This,v)

#define IHTMLStyle_get_borderBottom(This,p)	\
    (This)->lpVtbl -> get_borderBottom(This,p)

#define IHTMLStyle_put_borderLeft(This,v)	\
    (This)->lpVtbl -> put_borderLeft(This,v)

#define IHTMLStyle_get_borderLeft(This,p)	\
    (This)->lpVtbl -> get_borderLeft(This,p)

#define IHTMLStyle_put_borderColor(This,v)	\
    (This)->lpVtbl -> put_borderColor(This,v)

#define IHTMLStyle_get_borderColor(This,p)	\
    (This)->lpVtbl -> get_borderColor(This,p)

#define IHTMLStyle_put_borderTopColor(This,v)	\
    (This)->lpVtbl -> put_borderTopColor(This,v)

#define IHTMLStyle_get_borderTopColor(This,p)	\
    (This)->lpVtbl -> get_borderTopColor(This,p)

#define IHTMLStyle_put_borderRightColor(This,v)	\
    (This)->lpVtbl -> put_borderRightColor(This,v)

#define IHTMLStyle_get_borderRightColor(This,p)	\
    (This)->lpVtbl -> get_borderRightColor(This,p)

#define IHTMLStyle_put_borderBottomColor(This,v)	\
    (This)->lpVtbl -> put_borderBottomColor(This,v)

#define IHTMLStyle_get_borderBottomColor(This,p)	\
    (This)->lpVtbl -> get_borderBottomColor(This,p)

#define IHTMLStyle_put_borderLeftColor(This,v)	\
    (This)->lpVtbl -> put_borderLeftColor(This,v)

#define IHTMLStyle_get_borderLeftColor(This,p)	\
    (This)->lpVtbl -> get_borderLeftColor(This,p)

#define IHTMLStyle_put_borderWidth(This,v)	\
    (This)->lpVtbl -> put_borderWidth(This,v)

#define IHTMLStyle_get_borderWidth(This,p)	\
    (This)->lpVtbl -> get_borderWidth(This,p)

#define IHTMLStyle_put_borderTopWidth(This,v)	\
    (This)->lpVtbl -> put_borderTopWidth(This,v)

#define IHTMLStyle_get_borderTopWidth(This,p)	\
    (This)->lpVtbl -> get_borderTopWidth(This,p)

#define IHTMLStyle_put_borderRightWidth(This,v)	\
    (This)->lpVtbl -> put_borderRightWidth(This,v)

#define IHTMLStyle_get_borderRightWidth(This,p)	\
    (This)->lpVtbl -> get_borderRightWidth(This,p)

#define IHTMLStyle_put_borderBottomWidth(This,v)	\
    (This)->lpVtbl -> put_borderBottomWidth(This,v)

#define IHTMLStyle_get_borderBottomWidth(This,p)	\
    (This)->lpVtbl -> get_borderBottomWidth(This,p)

#define IHTMLStyle_put_borderLeftWidth(This,v)	\
    (This)->lpVtbl -> put_borderLeftWidth(This,v)

#define IHTMLStyle_get_borderLeftWidth(This,p)	\
    (This)->lpVtbl -> get_borderLeftWidth(This,p)

#define IHTMLStyle_put_borderStyle(This,v)	\
    (This)->lpVtbl -> put_borderStyle(This,v)

#define IHTMLStyle_get_borderStyle(This,p)	\
    (This)->lpVtbl -> get_borderStyle(This,p)

#define IHTMLStyle_put_borderTopStyle(This,v)	\
    (This)->lpVtbl -> put_borderTopStyle(This,v)

#define IHTMLStyle_get_borderTopStyle(This,p)	\
    (This)->lpVtbl -> get_borderTopStyle(This,p)

#define IHTMLStyle_put_borderRightStyle(This,v)	\
    (This)->lpVtbl -> put_borderRightStyle(This,v)

#define IHTMLStyle_get_borderRightStyle(This,p)	\
    (This)->lpVtbl -> get_borderRightStyle(This,p)

#define IHTMLStyle_put_borderBottomStyle(This,v)	\
    (This)->lpVtbl -> put_borderBottomStyle(This,v)

#define IHTMLStyle_get_borderBottomStyle(This,p)	\
    (This)->lpVtbl -> get_borderBottomStyle(This,p)

#define IHTMLStyle_put_borderLeftStyle(This,v)	\
    (This)->lpVtbl -> put_borderLeftStyle(This,v)

#define IHTMLStyle_get_borderLeftStyle(This,p)	\
    (This)->lpVtbl -> get_borderLeftStyle(This,p)

#define IHTMLStyle_put_width(This,v)	\
    (This)->lpVtbl -> put_width(This,v)

#define IHTMLStyle_get_width(This,p)	\
    (This)->lpVtbl -> get_width(This,p)

#define IHTMLStyle_put_height(This,v)	\
    (This)->lpVtbl -> put_height(This,v)

#define IHTMLStyle_get_height(This,p)	\
    (This)->lpVtbl -> get_height(This,p)

#define IHTMLStyle_put_styleFloat(This,v)	\
    (This)->lpVtbl -> put_styleFloat(This,v)

#define IHTMLStyle_get_styleFloat(This,p)	\
    (This)->lpVtbl -> get_styleFloat(This,p)

#define IHTMLStyle_put_clear(This,v)	\
    (This)->lpVtbl -> put_clear(This,v)

#define IHTMLStyle_get_clear(This,p)	\
    (This)->lpVtbl -> get_clear(This,p)

#define IHTMLStyle_put_display(This,v)	\
    (This)->lpVtbl -> put_display(This,v)

#define IHTMLStyle_get_display(This,p)	\
    (This)->lpVtbl -> get_display(This,p)

#define IHTMLStyle_put_visibility(This,v)	\
    (This)->lpVtbl -> put_visibility(This,v)

#define IHTMLStyle_get_visibility(This,p)	\
    (This)->lpVtbl -> get_visibility(This,p)

#define IHTMLStyle_put_listStyleType(This,v)	\
    (This)->lpVtbl -> put_listStyleType(This,v)

#define IHTMLStyle_get_listStyleType(This,p)	\
    (This)->lpVtbl -> get_listStyleType(This,p)

#define IHTMLStyle_put_listStylePosition(This,v)	\
    (This)->lpVtbl -> put_listStylePosition(This,v)

#define IHTMLStyle_get_listStylePosition(This,p)	\
    (This)->lpVtbl -> get_listStylePosition(This,p)

#define IHTMLStyle_put_listStyleImage(This,v)	\
    (This)->lpVtbl -> put_listStyleImage(This,v)

#define IHTMLStyle_get_listStyleImage(This,p)	\
    (This)->lpVtbl -> get_listStyleImage(This,p)

#define IHTMLStyle_put_listStyle(This,v)	\
    (This)->lpVtbl -> put_listStyle(This,v)

#define IHTMLStyle_get_listStyle(This,p)	\
    (This)->lpVtbl -> get_listStyle(This,p)

#define IHTMLStyle_put_whiteSpace(This,v)	\
    (This)->lpVtbl -> put_whiteSpace(This,v)

#define IHTMLStyle_get_whiteSpace(This,p)	\
    (This)->lpVtbl -> get_whiteSpace(This,p)

#define IHTMLStyle_put_top(This,v)	\
    (This)->lpVtbl -> put_top(This,v)

#define IHTMLStyle_get_top(This,p)	\
    (This)->lpVtbl -> get_top(This,p)

#define IHTMLStyle_put_left(This,v)	\
    (This)->lpVtbl -> put_left(This,v)

#define IHTMLStyle_get_left(This,p)	\
    (This)->lpVtbl -> get_left(This,p)

#define IHTMLStyle_get_position(This,p)	\
    (This)->lpVtbl -> get_position(This,p)

#define IHTMLStyle_put_zIndex(This,v)	\
    (This)->lpVtbl -> put_zIndex(This,v)

#define IHTMLStyle_get_zIndex(This,p)	\
    (This)->lpVtbl -> get_zIndex(This,p)

#define IHTMLStyle_put_overflow(This,v)	\
    (This)->lpVtbl -> put_overflow(This,v)

#define IHTMLStyle_get_overflow(This,p)	\
    (This)->lpVtbl -> get_overflow(This,p)

#define IHTMLStyle_put_pageBreakBefore(This,v)	\
    (This)->lpVtbl -> put_pageBreakBefore(This,v)

#define IHTMLStyle_get_pageBreakBefore(This,p)	\
    (This)->lpVtbl -> get_pageBreakBefore(This,p)

#define IHTMLStyle_put_pageBreakAfter(This,v)	\
    (This)->lpVtbl -> put_pageBreakAfter(This,v)

#define IHTMLStyle_get_pageBreakAfter(This,p)	\
    (This)->lpVtbl -> get_pageBreakAfter(This,p)

#define IHTMLStyle_put_cssText(This,v)	\
    (This)->lpVtbl -> put_cssText(This,v)

#define IHTMLStyle_get_cssText(This,p)	\
    (This)->lpVtbl -> get_cssText(This,p)

#define IHTMLStyle_put_pixelTop(This,v)	\
    (This)->lpVtbl -> put_pixelTop(This,v)

#define IHTMLStyle_get_pixelTop(This,p)	\
    (This)->lpVtbl -> get_pixelTop(This,p)

#define IHTMLStyle_put_pixelLeft(This,v)	\
    (This)->lpVtbl -> put_pixelLeft(This,v)

#define IHTMLStyle_get_pixelLeft(This,p)	\
    (This)->lpVtbl -> get_pixelLeft(This,p)

#define IHTMLStyle_put_pixelWidth(This,v)	\
    (This)->lpVtbl -> put_pixelWidth(This,v)

#define IHTMLStyle_get_pixelWidth(This,p)	\
    (This)->lpVtbl -> get_pixelWidth(This,p)

#define IHTMLStyle_put_pixelHeight(This,v)	\
    (This)->lpVtbl -> put_pixelHeight(This,v)

#define IHTMLStyle_get_pixelHeight(This,p)	\
    (This)->lpVtbl -> get_pixelHeight(This,p)

#define IHTMLStyle_put_posTop(This,v)	\
    (This)->lpVtbl -> put_posTop(This,v)

#define IHTMLStyle_get_posTop(This,p)	\
    (This)->lpVtbl -> get_posTop(This,p)

#define IHTMLStyle_put_posLeft(This,v)	\
    (This)->lpVtbl -> put_posLeft(This,v)

#define IHTMLStyle_get_posLeft(This,p)	\
    (This)->lpVtbl -> get_posLeft(This,p)

#define IHTMLStyle_put_posWidth(This,v)	\
    (This)->lpVtbl -> put_posWidth(This,v)

#define IHTMLStyle_get_posWidth(This,p)	\
    (This)->lpVtbl -> get_posWidth(This,p)

#define IHTMLStyle_put_posHeight(This,v)	\
    (This)->lpVtbl -> put_posHeight(This,v)

#define IHTMLStyle_get_posHeight(This,p)	\
    (This)->lpVtbl -> get_posHeight(This,p)

#define IHTMLStyle_put_cursor(This,v)	\
    (This)->lpVtbl -> put_cursor(This,v)

#define IHTMLStyle_get_cursor(This,p)	\
    (This)->lpVtbl -> get_cursor(This,p)

#define IHTMLStyle_put_clip(This,v)	\
    (This)->lpVtbl -> put_clip(This,v)

#define IHTMLStyle_get_clip(This,p)	\
    (This)->lpVtbl -> get_clip(This,p)

#define IHTMLStyle_put_filter(This,v)	\
    (This)->lpVtbl -> put_filter(This,v)

#define IHTMLStyle_get_filter(This,p)	\
    (This)->lpVtbl -> get_filter(This,p)

#define IHTMLStyle_setAttribute(This,strAttributeName,AttributeValue,lFlags)	\
    (This)->lpVtbl -> setAttribute(This,strAttributeName,AttributeValue,lFlags)

#define IHTMLStyle_getAttribute(This,strAttributeName,lFlags,AttributeValue)	\
    (This)->lpVtbl -> getAttribute(This,strAttributeName,lFlags,AttributeValue)

#define IHTMLStyle_removeAttribute(This,strAttributeName,lFlags,pfSuccess)	\
    (This)->lpVtbl -> removeAttribute(This,strAttributeName,lFlags,pfSuccess)

#define IHTMLStyle_toString(This,String)	\
    (This)->lpVtbl -> toString(This,String)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_fontFamily_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_fontFamily_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_fontFamily_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_fontFamily_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_fontStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_fontStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_fontStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_fontStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_fontVariant_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_fontVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_fontVariant_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_fontVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_fontWeight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_fontWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_fontWeight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_fontWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_fontSize_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_fontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_fontSize_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_fontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_font_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_font_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_font_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_font_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_color_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_color_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_background_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_background_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_background_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_background_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundColor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_backgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundColor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_backgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundImage_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_backgroundImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundImage_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_backgroundImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundRepeat_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_backgroundRepeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundRepeat_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_backgroundRepeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundAttachment_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_backgroundAttachment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundAttachment_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_backgroundAttachment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundPosition_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_backgroundPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundPosition_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_backgroundPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundPositionX_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_backgroundPositionX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundPositionX_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_backgroundPositionX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundPositionY_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_backgroundPositionY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundPositionY_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_backgroundPositionY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_wordSpacing_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_wordSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_wordSpacing_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_wordSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_letterSpacing_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_letterSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_letterSpacing_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_letterSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textDecoration_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textDecoration_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textDecorationNone_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLStyle_put_textDecorationNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textDecorationNone_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_textDecorationNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textDecorationUnderline_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLStyle_put_textDecorationUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textDecorationUnderline_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_textDecorationUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textDecorationOverline_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLStyle_put_textDecorationOverline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textDecorationOverline_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_textDecorationOverline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textDecorationLineThrough_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLStyle_put_textDecorationLineThrough_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textDecorationLineThrough_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_textDecorationLineThrough_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textDecorationBlink_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLStyle_put_textDecorationBlink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textDecorationBlink_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_textDecorationBlink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_verticalAlign_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_verticalAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_verticalAlign_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_verticalAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textTransform_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_textTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textTransform_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_textTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textAlign_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_textAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textAlign_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_textAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textIndent_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_textIndent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textIndent_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_textIndent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_lineHeight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_lineHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_lineHeight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_lineHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_marginTop_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_marginTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_marginTop_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_marginTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_marginRight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_marginRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_marginRight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_marginRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_marginBottom_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_marginBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_marginBottom_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_marginBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_marginLeft_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_marginLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_marginLeft_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_marginLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_margin_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_margin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_margin_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_margin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_paddingTop_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_paddingTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_paddingTop_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_paddingTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_paddingRight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_paddingRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_paddingRight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_paddingRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_paddingBottom_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_paddingBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_paddingBottom_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_paddingBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_paddingLeft_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_paddingLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_paddingLeft_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_paddingLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_padding_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_padding_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_padding_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_padding_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_border_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_border_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderTop_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderTop_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderRight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderRight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderBottom_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderBottom_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderLeft_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderLeft_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderColor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderColor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderTopColor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderTopColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderTopColor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderTopColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderRightColor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderRightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderRightColor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderRightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderBottomColor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderBottomColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderBottomColor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderBottomColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderLeftColor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderLeftColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderLeftColor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderLeftColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderTopWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderTopWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderTopWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderTopWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderRightWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderRightWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderRightWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderRightWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderBottomWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderBottomWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderBottomWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderBottomWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderLeftWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderLeftWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderLeftWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderLeftWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderTopStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderTopStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderTopStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderTopStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderRightStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderRightStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderRightStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderRightStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderBottomStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderBottomStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderBottomStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderBottomStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderLeftStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderLeftStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderLeftStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_borderLeftStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_width_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_width_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_height_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_height_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_styleFloat_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_styleFloat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_styleFloat_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_styleFloat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_clear_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_clear_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_display_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_display_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_visibility_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_visibility_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_listStyleType_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_listStyleType_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_listStylePosition_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_listStylePosition_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_listStyleImage_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_listStyleImage_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_listStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_listStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_listStyle_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_listStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_whiteSpace_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_whiteSpace_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_top_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_top_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_left_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_left_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_position_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_zIndex_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_zIndex_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_overflow_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_overflow_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pageBreakBefore_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pageBreakBefore_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pageBreakAfter_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pageBreakAfter_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_cssText_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_cssText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_cssText_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_cssText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pixelTop_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle_put_pixelTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pixelTop_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_pixelTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pixelLeft_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle_put_pixelLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pixelLeft_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_pixelLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pixelWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle_put_pixelWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pixelWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_pixelWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pixelHeight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle_put_pixelHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pixelHeight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_pixelHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_posTop_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle_put_posTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_posTop_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ float __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_posTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_posLeft_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle_put_posLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_posLeft_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ float __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_posLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_posWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle_put_posWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_posWidth_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ float __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_posWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_posHeight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle_put_posHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_posHeight_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ float __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_posHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_cursor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_cursor_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_clip_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_clip_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_filter_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_filter_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle_get_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_setAttribute_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR strAttributeName,
    /* [in] */ VARIANT AttributeValue,
    /* [in][defaultvalue] */ LONG lFlags);


void __RPC_STUB IHTMLStyle_setAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_getAttribute_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT __RPC_FAR *AttributeValue);


void __RPC_STUB IHTMLStyle_getAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_removeAttribute_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess);


void __RPC_STUB IHTMLStyle_removeAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_toString_Proxy( 
    IHTMLStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *String);


void __RPC_STUB IHTMLStyle_toString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLStyle_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle2_INTERFACE_DEFINED__
#define __IHTMLStyle2_INTERFACE_DEFINED__

/* interface IHTMLStyle2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a2-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_tableLayout( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_tableLayout( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderCollapse( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderCollapse( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_direction( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_direction( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_behavior( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_behavior( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setExpression( 
            /* [in] */ BSTR propname,
            /* [in] */ BSTR expression,
            /* [in][defaultvalue] */ BSTR language = L"") = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getExpression( 
            /* [in] */ BSTR propname,
            /* [out][retval] */ VARIANT __RPC_FAR *expression) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeExpression( 
            /* [in] */ BSTR propname,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_position( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_unicodeBidi( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_unicodeBidi( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_bottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_bottom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_right( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_right( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelBottom( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelBottom( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelRight( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelRight( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posBottom( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posBottom( 
            /* [out][retval] */ float __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posRight( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posRight( 
            /* [out][retval] */ float __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_imeMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeMode( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyAlign( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyPosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyPosition( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyOverhang( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyOverhang( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridChar( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridChar( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridLine( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridLine( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridMode( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridType( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridType( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGrid( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGrid( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordBreak( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordBreak( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lineBreak( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineBreak( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textJustify( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustify( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textJustifyTrim( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustifyTrim( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textKashida( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashida( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAutospace( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAutospace( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflowX( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowX( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflowY( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowY( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_accelerator( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_accelerator( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyle2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLStyle2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLStyle2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_tableLayout )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_tableLayout )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderCollapse )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderCollapse )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_direction )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_direction )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_behavior )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_behavior )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *setExpression )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR propname,
            /* [in] */ BSTR expression,
            /* [in][defaultvalue] */ BSTR language);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getExpression )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR propname,
            /* [out][retval] */ VARIANT __RPC_FAR *expression);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *removeExpression )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR propname,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_position )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_position )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_unicodeBidi )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_unicodeBidi )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_bottom )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_bottom )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_right )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_right )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_pixelBottom )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pixelBottom )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_pixelRight )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pixelRight )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_posBottom )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_posBottom )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ float __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_posRight )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_posRight )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ float __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_imeMode )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_imeMode )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_rubyAlign )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_rubyAlign )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_rubyPosition )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_rubyPosition )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_rubyOverhang )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_rubyOverhang )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_layoutGridChar )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGridChar )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_layoutGridLine )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGridLine )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_layoutGridMode )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGridMode )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_layoutGridType )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGridType )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_layoutGrid )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGrid )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_wordBreak )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_wordBreak )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_lineBreak )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_lineBreak )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textJustify )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textJustify )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textJustifyTrim )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textJustifyTrim )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textKashida )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textKashida )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textAutospace )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textAutospace )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_overflowX )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_overflowX )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_overflowY )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_overflowY )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_accelerator )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_accelerator )( 
            IHTMLStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLStyle2Vtbl;

    interface IHTMLStyle2
    {
        CONST_VTBL struct IHTMLStyle2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLStyle2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLStyle2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLStyle2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLStyle2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLStyle2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLStyle2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLStyle2_put_tableLayout(This,v)	\
    (This)->lpVtbl -> put_tableLayout(This,v)

#define IHTMLStyle2_get_tableLayout(This,p)	\
    (This)->lpVtbl -> get_tableLayout(This,p)

#define IHTMLStyle2_put_borderCollapse(This,v)	\
    (This)->lpVtbl -> put_borderCollapse(This,v)

#define IHTMLStyle2_get_borderCollapse(This,p)	\
    (This)->lpVtbl -> get_borderCollapse(This,p)

#define IHTMLStyle2_put_direction(This,v)	\
    (This)->lpVtbl -> put_direction(This,v)

#define IHTMLStyle2_get_direction(This,p)	\
    (This)->lpVtbl -> get_direction(This,p)

#define IHTMLStyle2_put_behavior(This,v)	\
    (This)->lpVtbl -> put_behavior(This,v)

#define IHTMLStyle2_get_behavior(This,p)	\
    (This)->lpVtbl -> get_behavior(This,p)

#define IHTMLStyle2_setExpression(This,propname,expression,language)	\
    (This)->lpVtbl -> setExpression(This,propname,expression,language)

#define IHTMLStyle2_getExpression(This,propname,expression)	\
    (This)->lpVtbl -> getExpression(This,propname,expression)

#define IHTMLStyle2_removeExpression(This,propname,pfSuccess)	\
    (This)->lpVtbl -> removeExpression(This,propname,pfSuccess)

#define IHTMLStyle2_put_position(This,v)	\
    (This)->lpVtbl -> put_position(This,v)

#define IHTMLStyle2_get_position(This,p)	\
    (This)->lpVtbl -> get_position(This,p)

#define IHTMLStyle2_put_unicodeBidi(This,v)	\
    (This)->lpVtbl -> put_unicodeBidi(This,v)

#define IHTMLStyle2_get_unicodeBidi(This,p)	\
    (This)->lpVtbl -> get_unicodeBidi(This,p)

#define IHTMLStyle2_put_bottom(This,v)	\
    (This)->lpVtbl -> put_bottom(This,v)

#define IHTMLStyle2_get_bottom(This,p)	\
    (This)->lpVtbl -> get_bottom(This,p)

#define IHTMLStyle2_put_right(This,v)	\
    (This)->lpVtbl -> put_right(This,v)

#define IHTMLStyle2_get_right(This,p)	\
    (This)->lpVtbl -> get_right(This,p)

#define IHTMLStyle2_put_pixelBottom(This,v)	\
    (This)->lpVtbl -> put_pixelBottom(This,v)

#define IHTMLStyle2_get_pixelBottom(This,p)	\
    (This)->lpVtbl -> get_pixelBottom(This,p)

#define IHTMLStyle2_put_pixelRight(This,v)	\
    (This)->lpVtbl -> put_pixelRight(This,v)

#define IHTMLStyle2_get_pixelRight(This,p)	\
    (This)->lpVtbl -> get_pixelRight(This,p)

#define IHTMLStyle2_put_posBottom(This,v)	\
    (This)->lpVtbl -> put_posBottom(This,v)

#define IHTMLStyle2_get_posBottom(This,p)	\
    (This)->lpVtbl -> get_posBottom(This,p)

#define IHTMLStyle2_put_posRight(This,v)	\
    (This)->lpVtbl -> put_posRight(This,v)

#define IHTMLStyle2_get_posRight(This,p)	\
    (This)->lpVtbl -> get_posRight(This,p)

#define IHTMLStyle2_put_imeMode(This,v)	\
    (This)->lpVtbl -> put_imeMode(This,v)

#define IHTMLStyle2_get_imeMode(This,p)	\
    (This)->lpVtbl -> get_imeMode(This,p)

#define IHTMLStyle2_put_rubyAlign(This,v)	\
    (This)->lpVtbl -> put_rubyAlign(This,v)

#define IHTMLStyle2_get_rubyAlign(This,p)	\
    (This)->lpVtbl -> get_rubyAlign(This,p)

#define IHTMLStyle2_put_rubyPosition(This,v)	\
    (This)->lpVtbl -> put_rubyPosition(This,v)

#define IHTMLStyle2_get_rubyPosition(This,p)	\
    (This)->lpVtbl -> get_rubyPosition(This,p)

#define IHTMLStyle2_put_rubyOverhang(This,v)	\
    (This)->lpVtbl -> put_rubyOverhang(This,v)

#define IHTMLStyle2_get_rubyOverhang(This,p)	\
    (This)->lpVtbl -> get_rubyOverhang(This,p)

#define IHTMLStyle2_put_layoutGridChar(This,v)	\
    (This)->lpVtbl -> put_layoutGridChar(This,v)

#define IHTMLStyle2_get_layoutGridChar(This,p)	\
    (This)->lpVtbl -> get_layoutGridChar(This,p)

#define IHTMLStyle2_put_layoutGridLine(This,v)	\
    (This)->lpVtbl -> put_layoutGridLine(This,v)

#define IHTMLStyle2_get_layoutGridLine(This,p)	\
    (This)->lpVtbl -> get_layoutGridLine(This,p)

#define IHTMLStyle2_put_layoutGridMode(This,v)	\
    (This)->lpVtbl -> put_layoutGridMode(This,v)

#define IHTMLStyle2_get_layoutGridMode(This,p)	\
    (This)->lpVtbl -> get_layoutGridMode(This,p)

#define IHTMLStyle2_put_layoutGridType(This,v)	\
    (This)->lpVtbl -> put_layoutGridType(This,v)

#define IHTMLStyle2_get_layoutGridType(This,p)	\
    (This)->lpVtbl -> get_layoutGridType(This,p)

#define IHTMLStyle2_put_layoutGrid(This,v)	\
    (This)->lpVtbl -> put_layoutGrid(This,v)

#define IHTMLStyle2_get_layoutGrid(This,p)	\
    (This)->lpVtbl -> get_layoutGrid(This,p)

#define IHTMLStyle2_put_wordBreak(This,v)	\
    (This)->lpVtbl -> put_wordBreak(This,v)

#define IHTMLStyle2_get_wordBreak(This,p)	\
    (This)->lpVtbl -> get_wordBreak(This,p)

#define IHTMLStyle2_put_lineBreak(This,v)	\
    (This)->lpVtbl -> put_lineBreak(This,v)

#define IHTMLStyle2_get_lineBreak(This,p)	\
    (This)->lpVtbl -> get_lineBreak(This,p)

#define IHTMLStyle2_put_textJustify(This,v)	\
    (This)->lpVtbl -> put_textJustify(This,v)

#define IHTMLStyle2_get_textJustify(This,p)	\
    (This)->lpVtbl -> get_textJustify(This,p)

#define IHTMLStyle2_put_textJustifyTrim(This,v)	\
    (This)->lpVtbl -> put_textJustifyTrim(This,v)

#define IHTMLStyle2_get_textJustifyTrim(This,p)	\
    (This)->lpVtbl -> get_textJustifyTrim(This,p)

#define IHTMLStyle2_put_textKashida(This,v)	\
    (This)->lpVtbl -> put_textKashida(This,v)

#define IHTMLStyle2_get_textKashida(This,p)	\
    (This)->lpVtbl -> get_textKashida(This,p)

#define IHTMLStyle2_put_textAutospace(This,v)	\
    (This)->lpVtbl -> put_textAutospace(This,v)

#define IHTMLStyle2_get_textAutospace(This,p)	\
    (This)->lpVtbl -> get_textAutospace(This,p)

#define IHTMLStyle2_put_overflowX(This,v)	\
    (This)->lpVtbl -> put_overflowX(This,v)

#define IHTMLStyle2_get_overflowX(This,p)	\
    (This)->lpVtbl -> get_overflowX(This,p)

#define IHTMLStyle2_put_overflowY(This,v)	\
    (This)->lpVtbl -> put_overflowY(This,v)

#define IHTMLStyle2_get_overflowY(This,p)	\
    (This)->lpVtbl -> get_overflowY(This,p)

#define IHTMLStyle2_put_accelerator(This,v)	\
    (This)->lpVtbl -> put_accelerator(This,v)

#define IHTMLStyle2_get_accelerator(This,p)	\
    (This)->lpVtbl -> get_accelerator(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_tableLayout_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_tableLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_tableLayout_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_tableLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_borderCollapse_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_borderCollapse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_borderCollapse_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_borderCollapse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_direction_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_direction_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_behavior_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_behavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_behavior_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_behavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_setExpression_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR propname,
    /* [in] */ BSTR expression,
    /* [in][defaultvalue] */ BSTR language);


void __RPC_STUB IHTMLStyle2_setExpression_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_getExpression_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR propname,
    /* [out][retval] */ VARIANT __RPC_FAR *expression);


void __RPC_STUB IHTMLStyle2_getExpression_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_removeExpression_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR propname,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess);


void __RPC_STUB IHTMLStyle2_removeExpression_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_position_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_position_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_unicodeBidi_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_unicodeBidi_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_unicodeBidi_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_unicodeBidi_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_bottom_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle2_put_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_bottom_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_right_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle2_put_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_right_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_pixelBottom_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle2_put_pixelBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_pixelBottom_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_pixelBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_pixelRight_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle2_put_pixelRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_pixelRight_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_pixelRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_posBottom_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle2_put_posBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_posBottom_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ float __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_posBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_posRight_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle2_put_posRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_posRight_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ float __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_posRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_imeMode_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_imeMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_imeMode_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_imeMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_rubyAlign_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_rubyAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_rubyAlign_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_rubyAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_rubyPosition_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_rubyPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_rubyPosition_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_rubyPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_rubyOverhang_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_rubyOverhang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_rubyOverhang_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_rubyOverhang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_layoutGridChar_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle2_put_layoutGridChar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_layoutGridChar_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_layoutGridChar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_layoutGridLine_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle2_put_layoutGridLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_layoutGridLine_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_layoutGridLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_layoutGridMode_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_layoutGridMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_layoutGridMode_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_layoutGridMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_layoutGridType_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_layoutGridType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_layoutGridType_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_layoutGridType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_layoutGrid_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_layoutGrid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_layoutGrid_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_layoutGrid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_wordBreak_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_wordBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_wordBreak_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_wordBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_lineBreak_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_lineBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_lineBreak_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_lineBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_textJustify_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_textJustify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_textJustify_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_textJustify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_textJustifyTrim_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_textJustifyTrim_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_textJustifyTrim_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_textJustifyTrim_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_textKashida_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle2_put_textKashida_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_textKashida_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_textKashida_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_textAutospace_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_textAutospace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_textAutospace_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_textAutospace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_overflowX_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_overflowX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_overflowX_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_overflowX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_overflowY_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_overflowY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_overflowY_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_overflowY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_accelerator_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_accelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_accelerator_Proxy( 
    IHTMLStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle2_get_accelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLStyle2_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle3_INTERFACE_DEFINED__
#define __IHTMLStyle3_INTERFACE_DEFINED__

/* interface IHTMLStyle3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f656-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutFlow( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutFlow( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_zoom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zoom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordWrap( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordWrap( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textUnderlinePosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textUnderlinePosition( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarBaseColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarBaseColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarFaceColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarFaceColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbar3dLightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbar3dLightColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarShadowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarShadowColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarHighlightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarHighlightColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarDarkShadowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarDarkShadowColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarArrowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarArrowColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarTrackColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarTrackColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_writingMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_writingMode( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAlignLast( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlignLast( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textKashidaSpace( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashidaSpace( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyle3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLStyle3 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLStyle3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_layoutFlow )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutFlow )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_zoom )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_zoom )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_wordWrap )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_wordWrap )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textUnderlinePosition )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textUnderlinePosition )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarBaseColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarBaseColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarFaceColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarFaceColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbar3dLightColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbar3dLightColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarShadowColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarShadowColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarHighlightColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarHighlightColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarDarkShadowColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarDarkShadowColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarArrowColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarArrowColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarTrackColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarTrackColor )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_writingMode )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_writingMode )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textAlignLast )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textAlignLast )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textKashidaSpace )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textKashidaSpace )( 
            IHTMLStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLStyle3Vtbl;

    interface IHTMLStyle3
    {
        CONST_VTBL struct IHTMLStyle3Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLStyle3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLStyle3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLStyle3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLStyle3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLStyle3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLStyle3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLStyle3_put_layoutFlow(This,v)	\
    (This)->lpVtbl -> put_layoutFlow(This,v)

#define IHTMLStyle3_get_layoutFlow(This,p)	\
    (This)->lpVtbl -> get_layoutFlow(This,p)

#define IHTMLStyle3_put_zoom(This,v)	\
    (This)->lpVtbl -> put_zoom(This,v)

#define IHTMLStyle3_get_zoom(This,p)	\
    (This)->lpVtbl -> get_zoom(This,p)

#define IHTMLStyle3_put_wordWrap(This,v)	\
    (This)->lpVtbl -> put_wordWrap(This,v)

#define IHTMLStyle3_get_wordWrap(This,p)	\
    (This)->lpVtbl -> get_wordWrap(This,p)

#define IHTMLStyle3_put_textUnderlinePosition(This,v)	\
    (This)->lpVtbl -> put_textUnderlinePosition(This,v)

#define IHTMLStyle3_get_textUnderlinePosition(This,p)	\
    (This)->lpVtbl -> get_textUnderlinePosition(This,p)

#define IHTMLStyle3_put_scrollbarBaseColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarBaseColor(This,v)

#define IHTMLStyle3_get_scrollbarBaseColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarBaseColor(This,p)

#define IHTMLStyle3_put_scrollbarFaceColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarFaceColor(This,v)

#define IHTMLStyle3_get_scrollbarFaceColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarFaceColor(This,p)

#define IHTMLStyle3_put_scrollbar3dLightColor(This,v)	\
    (This)->lpVtbl -> put_scrollbar3dLightColor(This,v)

#define IHTMLStyle3_get_scrollbar3dLightColor(This,p)	\
    (This)->lpVtbl -> get_scrollbar3dLightColor(This,p)

#define IHTMLStyle3_put_scrollbarShadowColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarShadowColor(This,v)

#define IHTMLStyle3_get_scrollbarShadowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarShadowColor(This,p)

#define IHTMLStyle3_put_scrollbarHighlightColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarHighlightColor(This,v)

#define IHTMLStyle3_get_scrollbarHighlightColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarHighlightColor(This,p)

#define IHTMLStyle3_put_scrollbarDarkShadowColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarDarkShadowColor(This,v)

#define IHTMLStyle3_get_scrollbarDarkShadowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarDarkShadowColor(This,p)

#define IHTMLStyle3_put_scrollbarArrowColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarArrowColor(This,v)

#define IHTMLStyle3_get_scrollbarArrowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarArrowColor(This,p)

#define IHTMLStyle3_put_scrollbarTrackColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarTrackColor(This,v)

#define IHTMLStyle3_get_scrollbarTrackColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarTrackColor(This,p)

#define IHTMLStyle3_put_writingMode(This,v)	\
    (This)->lpVtbl -> put_writingMode(This,v)

#define IHTMLStyle3_get_writingMode(This,p)	\
    (This)->lpVtbl -> get_writingMode(This,p)

#define IHTMLStyle3_put_textAlignLast(This,v)	\
    (This)->lpVtbl -> put_textAlignLast(This,v)

#define IHTMLStyle3_get_textAlignLast(This,p)	\
    (This)->lpVtbl -> get_textAlignLast(This,p)

#define IHTMLStyle3_put_textKashidaSpace(This,v)	\
    (This)->lpVtbl -> put_textKashidaSpace(This,v)

#define IHTMLStyle3_get_textKashidaSpace(This,p)	\
    (This)->lpVtbl -> get_textKashidaSpace(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_layoutFlow_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle3_put_layoutFlow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_layoutFlow_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_layoutFlow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_zoom_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_zoom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_zoom_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_zoom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_wordWrap_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle3_put_wordWrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_wordWrap_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_wordWrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_textUnderlinePosition_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle3_put_textUnderlinePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_textUnderlinePosition_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_textUnderlinePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarBaseColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarBaseColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarBaseColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarBaseColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarFaceColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarFaceColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarFaceColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarFaceColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbar3dLightColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbar3dLightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbar3dLightColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_scrollbar3dLightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarShadowColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarShadowColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarHighlightColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarHighlightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarHighlightColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarHighlightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarDarkShadowColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarDarkShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarDarkShadowColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarDarkShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarArrowColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarArrowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarArrowColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarArrowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarTrackColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarTrackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarTrackColor_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarTrackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_writingMode_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle3_put_writingMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_writingMode_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_writingMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_textAlignLast_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle3_put_textAlignLast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_textAlignLast_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_textAlignLast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_textKashidaSpace_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_textKashidaSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_textKashidaSpace_Proxy( 
    IHTMLStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle3_get_textKashidaSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLStyle3_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle4_INTERFACE_DEFINED__
#define __IHTMLStyle4_INTERFACE_DEFINED__

/* interface IHTMLStyle4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f816-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle4 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textOverflow( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textOverflow( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_minHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minHeight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyle4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLStyle4 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLStyle4 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLStyle4 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLStyle4 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLStyle4 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLStyle4 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLStyle4 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textOverflow )( 
            IHTMLStyle4 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textOverflow )( 
            IHTMLStyle4 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_minHeight )( 
            IHTMLStyle4 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_minHeight )( 
            IHTMLStyle4 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLStyle4Vtbl;

    interface IHTMLStyle4
    {
        CONST_VTBL struct IHTMLStyle4Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle4_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLStyle4_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLStyle4_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLStyle4_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLStyle4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLStyle4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLStyle4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLStyle4_put_textOverflow(This,v)	\
    (This)->lpVtbl -> put_textOverflow(This,v)

#define IHTMLStyle4_get_textOverflow(This,p)	\
    (This)->lpVtbl -> get_textOverflow(This,p)

#define IHTMLStyle4_put_minHeight(This,v)	\
    (This)->lpVtbl -> put_minHeight(This,v)

#define IHTMLStyle4_get_minHeight(This,p)	\
    (This)->lpVtbl -> get_minHeight(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle4_put_textOverflow_Proxy( 
    IHTMLStyle4 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle4_put_textOverflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle4_get_textOverflow_Proxy( 
    IHTMLStyle4 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle4_get_textOverflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle4_put_minHeight_Proxy( 
    IHTMLStyle4 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle4_put_minHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle4_get_minHeight_Proxy( 
    IHTMLStyle4 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle4_get_minHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLStyle4_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle5_INTERFACE_DEFINED__
#define __IHTMLStyle5_INTERFACE_DEFINED__

/* interface IHTMLStyle5 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f33a-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle5 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_msInterpolationMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_msInterpolationMode( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_maxHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxHeight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_minWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_maxWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyle5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLStyle5 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLStyle5 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_msInterpolationMode )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_msInterpolationMode )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_maxHeight )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_maxHeight )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_minWidth )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_minWidth )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_maxWidth )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_maxWidth )( 
            IHTMLStyle5 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLStyle5Vtbl;

    interface IHTMLStyle5
    {
        CONST_VTBL struct IHTMLStyle5Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle5_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLStyle5_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLStyle5_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLStyle5_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLStyle5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLStyle5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLStyle5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLStyle5_put_msInterpolationMode(This,v)	\
    (This)->lpVtbl -> put_msInterpolationMode(This,v)

#define IHTMLStyle5_get_msInterpolationMode(This,p)	\
    (This)->lpVtbl -> get_msInterpolationMode(This,p)

#define IHTMLStyle5_put_maxHeight(This,v)	\
    (This)->lpVtbl -> put_maxHeight(This,v)

#define IHTMLStyle5_get_maxHeight(This,p)	\
    (This)->lpVtbl -> get_maxHeight(This,p)

#define IHTMLStyle5_put_minWidth(This,v)	\
    (This)->lpVtbl -> put_minWidth(This,v)

#define IHTMLStyle5_get_minWidth(This,p)	\
    (This)->lpVtbl -> get_minWidth(This,p)

#define IHTMLStyle5_put_maxWidth(This,v)	\
    (This)->lpVtbl -> put_maxWidth(This,v)

#define IHTMLStyle5_get_maxWidth(This,p)	\
    (This)->lpVtbl -> get_maxWidth(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle5_put_msInterpolationMode_Proxy( 
    IHTMLStyle5 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle5_put_msInterpolationMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle5_get_msInterpolationMode_Proxy( 
    IHTMLStyle5 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLStyle5_get_msInterpolationMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle5_put_maxHeight_Proxy( 
    IHTMLStyle5 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle5_put_maxHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle5_get_maxHeight_Proxy( 
    IHTMLStyle5 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle5_get_maxHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle5_put_minWidth_Proxy( 
    IHTMLStyle5 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle5_put_minWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle5_get_minWidth_Proxy( 
    IHTMLStyle5 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle5_get_minWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle5_put_maxWidth_Proxy( 
    IHTMLStyle5 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle5_put_maxWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle5_get_maxWidth_Proxy( 
    IHTMLStyle5 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLStyle5_get_maxWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLStyle5_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle_INTERFACE_DEFINED__
#define __IHTMLRuleStyle_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f3cf-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontFamily( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontFamily( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontVariant( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontVariant( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontWeight( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontWeight( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontSize( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontSize( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_font( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_font( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_color( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_color( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_background( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_background( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundImage( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundImage( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundRepeat( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundRepeat( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundAttachment( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundAttachment( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPosition( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPositionX( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionX( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPositionY( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionY( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordSpacing( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_letterSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_letterSpacing( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecoration( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecoration( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationNone( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationNone( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationUnderline( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationUnderline( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationOverline( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationOverline( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationLineThrough( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationLineThrough( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationBlink( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationBlink( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_verticalAlign( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_verticalAlign( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textTransform( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textTransform( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlign( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textIndent( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textIndent( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lineHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineHeight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginTop( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginRight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginRight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginBottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginBottom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginLeft( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_margin( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_margin( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingTop( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingRight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingRight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingBottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingBottom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingLeft( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_padding( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_padding( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTop( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTop( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRight( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRight( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottom( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottom( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeft( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeft( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColor( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderWidth( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderWidth( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_styleFloat( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_styleFloat( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_clear( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clear( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_display( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_display( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_visibility( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_visibility( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyleType( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleType( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStylePosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStylePosition( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyleImage( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleImage( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_whiteSpace( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_whiteSpace( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_top( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_left( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_left( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_zIndex( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zIndex( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflow( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflow( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakBefore( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakBefore( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakAfter( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakAfter( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cssText( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cssText( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cursor( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cursor( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_clip( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clip( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_filter( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_filter( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags = 1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT __RPC_FAR *AttributeValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLRuleStyle __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLRuleStyle __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_fontFamily )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontFamily )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_fontStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_fontVariant )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontVariant )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_fontWeight )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontWeight )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_fontSize )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontSize )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_font )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_font )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_color )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_color )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_background )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_background )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundColor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundColor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundImage )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundImage )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundRepeat )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundRepeat )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundAttachment )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundAttachment )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundPosition )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundPosition )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundPositionX )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundPositionX )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_backgroundPositionY )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundPositionY )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_wordSpacing )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_wordSpacing )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_letterSpacing )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_letterSpacing )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecoration )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecoration )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecorationNone )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecorationNone )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecorationUnderline )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecorationUnderline )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecorationOverline )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecorationOverline )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecorationLineThrough )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecorationLineThrough )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecorationBlink )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecorationBlink )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_verticalAlign )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_verticalAlign )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textTransform )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textTransform )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textAlign )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textAlign )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textIndent )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textIndent )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_lineHeight )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_lineHeight )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_marginTop )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_marginTop )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_marginRight )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_marginRight )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_marginBottom )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_marginBottom )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_marginLeft )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_marginLeft )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_margin )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_margin )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_paddingTop )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_paddingTop )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_paddingRight )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_paddingRight )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_paddingBottom )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_paddingBottom )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_paddingLeft )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_paddingLeft )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_padding )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_padding )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_border )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_border )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderTop )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderTop )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderRight )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderRight )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderBottom )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderBottom )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderLeft )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderLeft )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderColor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderColor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderTopColor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderTopColor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderRightColor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderRightColor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderBottomColor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderBottomColor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderLeftColor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderLeftColor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderWidth )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderWidth )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderTopWidth )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderTopWidth )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderRightWidth )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderRightWidth )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderBottomWidth )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderBottomWidth )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderLeftWidth )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderLeftWidth )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderTopStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderTopStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderRightStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderRightStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderBottomStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderBottomStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderLeftStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderLeftStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_width )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_width )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_height )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_height )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_styleFloat )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_styleFloat )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_clear )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clear )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_display )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_display )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_visibility )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_visibility )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_listStyleType )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_listStyleType )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_listStylePosition )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_listStylePosition )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_listStyleImage )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_listStyleImage )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_listStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_listStyle )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_whiteSpace )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_whiteSpace )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_top )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_top )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_left )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_left )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_position )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_zIndex )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_zIndex )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_overflow )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_overflow )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_pageBreakBefore )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pageBreakBefore )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_pageBreakAfter )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pageBreakAfter )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_cssText )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_cssText )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_cursor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_cursor )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_clip )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clip )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_filter )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_filter )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *setAttribute )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getAttribute )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT __RPC_FAR *AttributeValue);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *removeAttribute )( 
            IHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess);
        
        END_INTERFACE
    } IHTMLRuleStyleVtbl;

    interface IHTMLRuleStyle
    {
        CONST_VTBL struct IHTMLRuleStyleVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRuleStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRuleStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRuleStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRuleStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRuleStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRuleStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRuleStyle_put_fontFamily(This,v)	\
    (This)->lpVtbl -> put_fontFamily(This,v)

#define IHTMLRuleStyle_get_fontFamily(This,p)	\
    (This)->lpVtbl -> get_fontFamily(This,p)

#define IHTMLRuleStyle_put_fontStyle(This,v)	\
    (This)->lpVtbl -> put_fontStyle(This,v)

#define IHTMLRuleStyle_get_fontStyle(This,p)	\
    (This)->lpVtbl -> get_fontStyle(This,p)

#define IHTMLRuleStyle_put_fontVariant(This,v)	\
    (This)->lpVtbl -> put_fontVariant(This,v)

#define IHTMLRuleStyle_get_fontVariant(This,p)	\
    (This)->lpVtbl -> get_fontVariant(This,p)

#define IHTMLRuleStyle_put_fontWeight(This,v)	\
    (This)->lpVtbl -> put_fontWeight(This,v)

#define IHTMLRuleStyle_get_fontWeight(This,p)	\
    (This)->lpVtbl -> get_fontWeight(This,p)

#define IHTMLRuleStyle_put_fontSize(This,v)	\
    (This)->lpVtbl -> put_fontSize(This,v)

#define IHTMLRuleStyle_get_fontSize(This,p)	\
    (This)->lpVtbl -> get_fontSize(This,p)

#define IHTMLRuleStyle_put_font(This,v)	\
    (This)->lpVtbl -> put_font(This,v)

#define IHTMLRuleStyle_get_font(This,p)	\
    (This)->lpVtbl -> get_font(This,p)

#define IHTMLRuleStyle_put_color(This,v)	\
    (This)->lpVtbl -> put_color(This,v)

#define IHTMLRuleStyle_get_color(This,p)	\
    (This)->lpVtbl -> get_color(This,p)

#define IHTMLRuleStyle_put_background(This,v)	\
    (This)->lpVtbl -> put_background(This,v)

#define IHTMLRuleStyle_get_background(This,p)	\
    (This)->lpVtbl -> get_background(This,p)

#define IHTMLRuleStyle_put_backgroundColor(This,v)	\
    (This)->lpVtbl -> put_backgroundColor(This,v)

#define IHTMLRuleStyle_get_backgroundColor(This,p)	\
    (This)->lpVtbl -> get_backgroundColor(This,p)

#define IHTMLRuleStyle_put_backgroundImage(This,v)	\
    (This)->lpVtbl -> put_backgroundImage(This,v)

#define IHTMLRuleStyle_get_backgroundImage(This,p)	\
    (This)->lpVtbl -> get_backgroundImage(This,p)

#define IHTMLRuleStyle_put_backgroundRepeat(This,v)	\
    (This)->lpVtbl -> put_backgroundRepeat(This,v)

#define IHTMLRuleStyle_get_backgroundRepeat(This,p)	\
    (This)->lpVtbl -> get_backgroundRepeat(This,p)

#define IHTMLRuleStyle_put_backgroundAttachment(This,v)	\
    (This)->lpVtbl -> put_backgroundAttachment(This,v)

#define IHTMLRuleStyle_get_backgroundAttachment(This,p)	\
    (This)->lpVtbl -> get_backgroundAttachment(This,p)

#define IHTMLRuleStyle_put_backgroundPosition(This,v)	\
    (This)->lpVtbl -> put_backgroundPosition(This,v)

#define IHTMLRuleStyle_get_backgroundPosition(This,p)	\
    (This)->lpVtbl -> get_backgroundPosition(This,p)

#define IHTMLRuleStyle_put_backgroundPositionX(This,v)	\
    (This)->lpVtbl -> put_backgroundPositionX(This,v)

#define IHTMLRuleStyle_get_backgroundPositionX(This,p)	\
    (This)->lpVtbl -> get_backgroundPositionX(This,p)

#define IHTMLRuleStyle_put_backgroundPositionY(This,v)	\
    (This)->lpVtbl -> put_backgroundPositionY(This,v)

#define IHTMLRuleStyle_get_backgroundPositionY(This,p)	\
    (This)->lpVtbl -> get_backgroundPositionY(This,p)

#define IHTMLRuleStyle_put_wordSpacing(This,v)	\
    (This)->lpVtbl -> put_wordSpacing(This,v)

#define IHTMLRuleStyle_get_wordSpacing(This,p)	\
    (This)->lpVtbl -> get_wordSpacing(This,p)

#define IHTMLRuleStyle_put_letterSpacing(This,v)	\
    (This)->lpVtbl -> put_letterSpacing(This,v)

#define IHTMLRuleStyle_get_letterSpacing(This,p)	\
    (This)->lpVtbl -> get_letterSpacing(This,p)

#define IHTMLRuleStyle_put_textDecoration(This,v)	\
    (This)->lpVtbl -> put_textDecoration(This,v)

#define IHTMLRuleStyle_get_textDecoration(This,p)	\
    (This)->lpVtbl -> get_textDecoration(This,p)

#define IHTMLRuleStyle_put_textDecorationNone(This,v)	\
    (This)->lpVtbl -> put_textDecorationNone(This,v)

#define IHTMLRuleStyle_get_textDecorationNone(This,p)	\
    (This)->lpVtbl -> get_textDecorationNone(This,p)

#define IHTMLRuleStyle_put_textDecorationUnderline(This,v)	\
    (This)->lpVtbl -> put_textDecorationUnderline(This,v)

#define IHTMLRuleStyle_get_textDecorationUnderline(This,p)	\
    (This)->lpVtbl -> get_textDecorationUnderline(This,p)

#define IHTMLRuleStyle_put_textDecorationOverline(This,v)	\
    (This)->lpVtbl -> put_textDecorationOverline(This,v)

#define IHTMLRuleStyle_get_textDecorationOverline(This,p)	\
    (This)->lpVtbl -> get_textDecorationOverline(This,p)

#define IHTMLRuleStyle_put_textDecorationLineThrough(This,v)	\
    (This)->lpVtbl -> put_textDecorationLineThrough(This,v)

#define IHTMLRuleStyle_get_textDecorationLineThrough(This,p)	\
    (This)->lpVtbl -> get_textDecorationLineThrough(This,p)

#define IHTMLRuleStyle_put_textDecorationBlink(This,v)	\
    (This)->lpVtbl -> put_textDecorationBlink(This,v)

#define IHTMLRuleStyle_get_textDecorationBlink(This,p)	\
    (This)->lpVtbl -> get_textDecorationBlink(This,p)

#define IHTMLRuleStyle_put_verticalAlign(This,v)	\
    (This)->lpVtbl -> put_verticalAlign(This,v)

#define IHTMLRuleStyle_get_verticalAlign(This,p)	\
    (This)->lpVtbl -> get_verticalAlign(This,p)

#define IHTMLRuleStyle_put_textTransform(This,v)	\
    (This)->lpVtbl -> put_textTransform(This,v)

#define IHTMLRuleStyle_get_textTransform(This,p)	\
    (This)->lpVtbl -> get_textTransform(This,p)

#define IHTMLRuleStyle_put_textAlign(This,v)	\
    (This)->lpVtbl -> put_textAlign(This,v)

#define IHTMLRuleStyle_get_textAlign(This,p)	\
    (This)->lpVtbl -> get_textAlign(This,p)

#define IHTMLRuleStyle_put_textIndent(This,v)	\
    (This)->lpVtbl -> put_textIndent(This,v)

#define IHTMLRuleStyle_get_textIndent(This,p)	\
    (This)->lpVtbl -> get_textIndent(This,p)

#define IHTMLRuleStyle_put_lineHeight(This,v)	\
    (This)->lpVtbl -> put_lineHeight(This,v)

#define IHTMLRuleStyle_get_lineHeight(This,p)	\
    (This)->lpVtbl -> get_lineHeight(This,p)

#define IHTMLRuleStyle_put_marginTop(This,v)	\
    (This)->lpVtbl -> put_marginTop(This,v)

#define IHTMLRuleStyle_get_marginTop(This,p)	\
    (This)->lpVtbl -> get_marginTop(This,p)

#define IHTMLRuleStyle_put_marginRight(This,v)	\
    (This)->lpVtbl -> put_marginRight(This,v)

#define IHTMLRuleStyle_get_marginRight(This,p)	\
    (This)->lpVtbl -> get_marginRight(This,p)

#define IHTMLRuleStyle_put_marginBottom(This,v)	\
    (This)->lpVtbl -> put_marginBottom(This,v)

#define IHTMLRuleStyle_get_marginBottom(This,p)	\
    (This)->lpVtbl -> get_marginBottom(This,p)

#define IHTMLRuleStyle_put_marginLeft(This,v)	\
    (This)->lpVtbl -> put_marginLeft(This,v)

#define IHTMLRuleStyle_get_marginLeft(This,p)	\
    (This)->lpVtbl -> get_marginLeft(This,p)

#define IHTMLRuleStyle_put_margin(This,v)	\
    (This)->lpVtbl -> put_margin(This,v)

#define IHTMLRuleStyle_get_margin(This,p)	\
    (This)->lpVtbl -> get_margin(This,p)

#define IHTMLRuleStyle_put_paddingTop(This,v)	\
    (This)->lpVtbl -> put_paddingTop(This,v)

#define IHTMLRuleStyle_get_paddingTop(This,p)	\
    (This)->lpVtbl -> get_paddingTop(This,p)

#define IHTMLRuleStyle_put_paddingRight(This,v)	\
    (This)->lpVtbl -> put_paddingRight(This,v)

#define IHTMLRuleStyle_get_paddingRight(This,p)	\
    (This)->lpVtbl -> get_paddingRight(This,p)

#define IHTMLRuleStyle_put_paddingBottom(This,v)	\
    (This)->lpVtbl -> put_paddingBottom(This,v)

#define IHTMLRuleStyle_get_paddingBottom(This,p)	\
    (This)->lpVtbl -> get_paddingBottom(This,p)

#define IHTMLRuleStyle_put_paddingLeft(This,v)	\
    (This)->lpVtbl -> put_paddingLeft(This,v)

#define IHTMLRuleStyle_get_paddingLeft(This,p)	\
    (This)->lpVtbl -> get_paddingLeft(This,p)

#define IHTMLRuleStyle_put_padding(This,v)	\
    (This)->lpVtbl -> put_padding(This,v)

#define IHTMLRuleStyle_get_padding(This,p)	\
    (This)->lpVtbl -> get_padding(This,p)

#define IHTMLRuleStyle_put_border(This,v)	\
    (This)->lpVtbl -> put_border(This,v)

#define IHTMLRuleStyle_get_border(This,p)	\
    (This)->lpVtbl -> get_border(This,p)

#define IHTMLRuleStyle_put_borderTop(This,v)	\
    (This)->lpVtbl -> put_borderTop(This,v)

#define IHTMLRuleStyle_get_borderTop(This,p)	\
    (This)->lpVtbl -> get_borderTop(This,p)

#define IHTMLRuleStyle_put_borderRight(This,v)	\
    (This)->lpVtbl -> put_borderRight(This,v)

#define IHTMLRuleStyle_get_borderRight(This,p)	\
    (This)->lpVtbl -> get_borderRight(This,p)

#define IHTMLRuleStyle_put_borderBottom(This,v)	\
    (This)->lpVtbl -> put_borderBottom(This,v)

#define IHTMLRuleStyle_get_borderBottom(This,p)	\
    (This)->lpVtbl -> get_borderBottom(This,p)

#define IHTMLRuleStyle_put_borderLeft(This,v)	\
    (This)->lpVtbl -> put_borderLeft(This,v)

#define IHTMLRuleStyle_get_borderLeft(This,p)	\
    (This)->lpVtbl -> get_borderLeft(This,p)

#define IHTMLRuleStyle_put_borderColor(This,v)	\
    (This)->lpVtbl -> put_borderColor(This,v)

#define IHTMLRuleStyle_get_borderColor(This,p)	\
    (This)->lpVtbl -> get_borderColor(This,p)

#define IHTMLRuleStyle_put_borderTopColor(This,v)	\
    (This)->lpVtbl -> put_borderTopColor(This,v)

#define IHTMLRuleStyle_get_borderTopColor(This,p)	\
    (This)->lpVtbl -> get_borderTopColor(This,p)

#define IHTMLRuleStyle_put_borderRightColor(This,v)	\
    (This)->lpVtbl -> put_borderRightColor(This,v)

#define IHTMLRuleStyle_get_borderRightColor(This,p)	\
    (This)->lpVtbl -> get_borderRightColor(This,p)

#define IHTMLRuleStyle_put_borderBottomColor(This,v)	\
    (This)->lpVtbl -> put_borderBottomColor(This,v)

#define IHTMLRuleStyle_get_borderBottomColor(This,p)	\
    (This)->lpVtbl -> get_borderBottomColor(This,p)

#define IHTMLRuleStyle_put_borderLeftColor(This,v)	\
    (This)->lpVtbl -> put_borderLeftColor(This,v)

#define IHTMLRuleStyle_get_borderLeftColor(This,p)	\
    (This)->lpVtbl -> get_borderLeftColor(This,p)

#define IHTMLRuleStyle_put_borderWidth(This,v)	\
    (This)->lpVtbl -> put_borderWidth(This,v)

#define IHTMLRuleStyle_get_borderWidth(This,p)	\
    (This)->lpVtbl -> get_borderWidth(This,p)

#define IHTMLRuleStyle_put_borderTopWidth(This,v)	\
    (This)->lpVtbl -> put_borderTopWidth(This,v)

#define IHTMLRuleStyle_get_borderTopWidth(This,p)	\
    (This)->lpVtbl -> get_borderTopWidth(This,p)

#define IHTMLRuleStyle_put_borderRightWidth(This,v)	\
    (This)->lpVtbl -> put_borderRightWidth(This,v)

#define IHTMLRuleStyle_get_borderRightWidth(This,p)	\
    (This)->lpVtbl -> get_borderRightWidth(This,p)

#define IHTMLRuleStyle_put_borderBottomWidth(This,v)	\
    (This)->lpVtbl -> put_borderBottomWidth(This,v)

#define IHTMLRuleStyle_get_borderBottomWidth(This,p)	\
    (This)->lpVtbl -> get_borderBottomWidth(This,p)

#define IHTMLRuleStyle_put_borderLeftWidth(This,v)	\
    (This)->lpVtbl -> put_borderLeftWidth(This,v)

#define IHTMLRuleStyle_get_borderLeftWidth(This,p)	\
    (This)->lpVtbl -> get_borderLeftWidth(This,p)

#define IHTMLRuleStyle_put_borderStyle(This,v)	\
    (This)->lpVtbl -> put_borderStyle(This,v)

#define IHTMLRuleStyle_get_borderStyle(This,p)	\
    (This)->lpVtbl -> get_borderStyle(This,p)

#define IHTMLRuleStyle_put_borderTopStyle(This,v)	\
    (This)->lpVtbl -> put_borderTopStyle(This,v)

#define IHTMLRuleStyle_get_borderTopStyle(This,p)	\
    (This)->lpVtbl -> get_borderTopStyle(This,p)

#define IHTMLRuleStyle_put_borderRightStyle(This,v)	\
    (This)->lpVtbl -> put_borderRightStyle(This,v)

#define IHTMLRuleStyle_get_borderRightStyle(This,p)	\
    (This)->lpVtbl -> get_borderRightStyle(This,p)

#define IHTMLRuleStyle_put_borderBottomStyle(This,v)	\
    (This)->lpVtbl -> put_borderBottomStyle(This,v)

#define IHTMLRuleStyle_get_borderBottomStyle(This,p)	\
    (This)->lpVtbl -> get_borderBottomStyle(This,p)

#define IHTMLRuleStyle_put_borderLeftStyle(This,v)	\
    (This)->lpVtbl -> put_borderLeftStyle(This,v)

#define IHTMLRuleStyle_get_borderLeftStyle(This,p)	\
    (This)->lpVtbl -> get_borderLeftStyle(This,p)

#define IHTMLRuleStyle_put_width(This,v)	\
    (This)->lpVtbl -> put_width(This,v)

#define IHTMLRuleStyle_get_width(This,p)	\
    (This)->lpVtbl -> get_width(This,p)

#define IHTMLRuleStyle_put_height(This,v)	\
    (This)->lpVtbl -> put_height(This,v)

#define IHTMLRuleStyle_get_height(This,p)	\
    (This)->lpVtbl -> get_height(This,p)

#define IHTMLRuleStyle_put_styleFloat(This,v)	\
    (This)->lpVtbl -> put_styleFloat(This,v)

#define IHTMLRuleStyle_get_styleFloat(This,p)	\
    (This)->lpVtbl -> get_styleFloat(This,p)

#define IHTMLRuleStyle_put_clear(This,v)	\
    (This)->lpVtbl -> put_clear(This,v)

#define IHTMLRuleStyle_get_clear(This,p)	\
    (This)->lpVtbl -> get_clear(This,p)

#define IHTMLRuleStyle_put_display(This,v)	\
    (This)->lpVtbl -> put_display(This,v)

#define IHTMLRuleStyle_get_display(This,p)	\
    (This)->lpVtbl -> get_display(This,p)

#define IHTMLRuleStyle_put_visibility(This,v)	\
    (This)->lpVtbl -> put_visibility(This,v)

#define IHTMLRuleStyle_get_visibility(This,p)	\
    (This)->lpVtbl -> get_visibility(This,p)

#define IHTMLRuleStyle_put_listStyleType(This,v)	\
    (This)->lpVtbl -> put_listStyleType(This,v)

#define IHTMLRuleStyle_get_listStyleType(This,p)	\
    (This)->lpVtbl -> get_listStyleType(This,p)

#define IHTMLRuleStyle_put_listStylePosition(This,v)	\
    (This)->lpVtbl -> put_listStylePosition(This,v)

#define IHTMLRuleStyle_get_listStylePosition(This,p)	\
    (This)->lpVtbl -> get_listStylePosition(This,p)

#define IHTMLRuleStyle_put_listStyleImage(This,v)	\
    (This)->lpVtbl -> put_listStyleImage(This,v)

#define IHTMLRuleStyle_get_listStyleImage(This,p)	\
    (This)->lpVtbl -> get_listStyleImage(This,p)

#define IHTMLRuleStyle_put_listStyle(This,v)	\
    (This)->lpVtbl -> put_listStyle(This,v)

#define IHTMLRuleStyle_get_listStyle(This,p)	\
    (This)->lpVtbl -> get_listStyle(This,p)

#define IHTMLRuleStyle_put_whiteSpace(This,v)	\
    (This)->lpVtbl -> put_whiteSpace(This,v)

#define IHTMLRuleStyle_get_whiteSpace(This,p)	\
    (This)->lpVtbl -> get_whiteSpace(This,p)

#define IHTMLRuleStyle_put_top(This,v)	\
    (This)->lpVtbl -> put_top(This,v)

#define IHTMLRuleStyle_get_top(This,p)	\
    (This)->lpVtbl -> get_top(This,p)

#define IHTMLRuleStyle_put_left(This,v)	\
    (This)->lpVtbl -> put_left(This,v)

#define IHTMLRuleStyle_get_left(This,p)	\
    (This)->lpVtbl -> get_left(This,p)

#define IHTMLRuleStyle_get_position(This,p)	\
    (This)->lpVtbl -> get_position(This,p)

#define IHTMLRuleStyle_put_zIndex(This,v)	\
    (This)->lpVtbl -> put_zIndex(This,v)

#define IHTMLRuleStyle_get_zIndex(This,p)	\
    (This)->lpVtbl -> get_zIndex(This,p)

#define IHTMLRuleStyle_put_overflow(This,v)	\
    (This)->lpVtbl -> put_overflow(This,v)

#define IHTMLRuleStyle_get_overflow(This,p)	\
    (This)->lpVtbl -> get_overflow(This,p)

#define IHTMLRuleStyle_put_pageBreakBefore(This,v)	\
    (This)->lpVtbl -> put_pageBreakBefore(This,v)

#define IHTMLRuleStyle_get_pageBreakBefore(This,p)	\
    (This)->lpVtbl -> get_pageBreakBefore(This,p)

#define IHTMLRuleStyle_put_pageBreakAfter(This,v)	\
    (This)->lpVtbl -> put_pageBreakAfter(This,v)

#define IHTMLRuleStyle_get_pageBreakAfter(This,p)	\
    (This)->lpVtbl -> get_pageBreakAfter(This,p)

#define IHTMLRuleStyle_put_cssText(This,v)	\
    (This)->lpVtbl -> put_cssText(This,v)

#define IHTMLRuleStyle_get_cssText(This,p)	\
    (This)->lpVtbl -> get_cssText(This,p)

#define IHTMLRuleStyle_put_cursor(This,v)	\
    (This)->lpVtbl -> put_cursor(This,v)

#define IHTMLRuleStyle_get_cursor(This,p)	\
    (This)->lpVtbl -> get_cursor(This,p)

#define IHTMLRuleStyle_put_clip(This,v)	\
    (This)->lpVtbl -> put_clip(This,v)

#define IHTMLRuleStyle_get_clip(This,p)	\
    (This)->lpVtbl -> get_clip(This,p)

#define IHTMLRuleStyle_put_filter(This,v)	\
    (This)->lpVtbl -> put_filter(This,v)

#define IHTMLRuleStyle_get_filter(This,p)	\
    (This)->lpVtbl -> get_filter(This,p)

#define IHTMLRuleStyle_setAttribute(This,strAttributeName,AttributeValue,lFlags)	\
    (This)->lpVtbl -> setAttribute(This,strAttributeName,AttributeValue,lFlags)

#define IHTMLRuleStyle_getAttribute(This,strAttributeName,lFlags,AttributeValue)	\
    (This)->lpVtbl -> getAttribute(This,strAttributeName,lFlags,AttributeValue)

#define IHTMLRuleStyle_removeAttribute(This,strAttributeName,lFlags,pfSuccess)	\
    (This)->lpVtbl -> removeAttribute(This,strAttributeName,lFlags,pfSuccess)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_fontFamily_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_fontFamily_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_fontFamily_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_fontFamily_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_fontStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_fontStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_fontStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_fontStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_fontVariant_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_fontVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_fontVariant_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_fontVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_fontWeight_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_fontWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_fontWeight_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_fontWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_fontSize_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_fontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_fontSize_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_fontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_font_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_font_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_font_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_font_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_color_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_color_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_background_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_background_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_background_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_background_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundColor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundColor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundImage_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundImage_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundRepeat_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundRepeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundRepeat_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundRepeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundAttachment_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundAttachment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundAttachment_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundAttachment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundPosition_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundPosition_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundPositionX_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundPositionX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundPositionX_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundPositionX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundPositionY_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundPositionY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundPositionY_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundPositionY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_wordSpacing_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_wordSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_wordSpacing_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_wordSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_letterSpacing_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_letterSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_letterSpacing_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_letterSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textDecoration_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textDecoration_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textDecorationNone_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLRuleStyle_put_textDecorationNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textDecorationNone_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_textDecorationNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textDecorationUnderline_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLRuleStyle_put_textDecorationUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textDecorationUnderline_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_textDecorationUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textDecorationOverline_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLRuleStyle_put_textDecorationOverline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textDecorationOverline_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_textDecorationOverline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textDecorationLineThrough_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLRuleStyle_put_textDecorationLineThrough_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textDecorationLineThrough_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_textDecorationLineThrough_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textDecorationBlink_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLRuleStyle_put_textDecorationBlink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textDecorationBlink_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_textDecorationBlink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_verticalAlign_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_verticalAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_verticalAlign_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_verticalAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textTransform_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_textTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textTransform_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_textTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textAlign_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_textAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textAlign_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_textAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textIndent_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_textIndent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textIndent_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_textIndent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_lineHeight_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_lineHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_lineHeight_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_lineHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_marginTop_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_marginTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_marginTop_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_marginTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_marginRight_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_marginRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_marginRight_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_marginRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_marginBottom_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_marginBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_marginBottom_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_marginBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_marginLeft_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_marginLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_marginLeft_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_marginLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_margin_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_margin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_margin_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_margin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_paddingTop_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_paddingTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_paddingTop_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_paddingTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_paddingRight_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_paddingRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_paddingRight_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_paddingRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_paddingBottom_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_paddingBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_paddingBottom_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_paddingBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_paddingLeft_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_paddingLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_paddingLeft_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_paddingLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_padding_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_padding_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_padding_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_padding_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_border_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_border_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderTop_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderTop_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderRight_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderRight_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderBottom_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderBottom_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderLeft_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderLeft_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderColor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderColor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderTopColor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderTopColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderTopColor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderTopColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderRightColor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderRightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderRightColor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderRightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderBottomColor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderBottomColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderBottomColor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderBottomColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderLeftColor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderLeftColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderLeftColor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderLeftColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderWidth_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderWidth_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderTopWidth_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderTopWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderTopWidth_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderTopWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderRightWidth_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderRightWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderRightWidth_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderRightWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderBottomWidth_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderBottomWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderBottomWidth_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderBottomWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderLeftWidth_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderLeftWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderLeftWidth_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderLeftWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderTopStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderTopStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderTopStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderTopStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderRightStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderRightStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderRightStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderRightStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderBottomStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderBottomStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderBottomStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderBottomStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderLeftStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderLeftStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderLeftStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderLeftStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_width_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_width_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_height_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_height_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_styleFloat_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_styleFloat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_styleFloat_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_styleFloat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_clear_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_clear_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_display_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_display_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_visibility_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_visibility_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_listStyleType_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_listStyleType_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_listStylePosition_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_listStylePosition_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_listStyleImage_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_listStyleImage_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_listStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_listStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_listStyle_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_listStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_whiteSpace_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_whiteSpace_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_top_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_top_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_left_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_left_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_position_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_zIndex_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_zIndex_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_overflow_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_overflow_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_pageBreakBefore_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_pageBreakBefore_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_pageBreakAfter_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_pageBreakAfter_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_cssText_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_cssText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_cssText_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_cssText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_cursor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_cursor_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_clip_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_clip_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_filter_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_filter_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle_get_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_setAttribute_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR strAttributeName,
    /* [in] */ VARIANT AttributeValue,
    /* [in][defaultvalue] */ LONG lFlags);


void __RPC_STUB IHTMLRuleStyle_setAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_getAttribute_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT __RPC_FAR *AttributeValue);


void __RPC_STUB IHTMLRuleStyle_getAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_removeAttribute_Proxy( 
    IHTMLRuleStyle __RPC_FAR * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess);


void __RPC_STUB IHTMLRuleStyle_removeAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRuleStyle_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle2_INTERFACE_DEFINED__
#define __IHTMLRuleStyle2_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4ac-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_tableLayout( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_tableLayout( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderCollapse( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderCollapse( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_direction( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_direction( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_behavior( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_behavior( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_position( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_unicodeBidi( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_unicodeBidi( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_bottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_bottom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_right( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_right( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelBottom( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelBottom( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelRight( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelRight( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posBottom( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posBottom( 
            /* [out][retval] */ float __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posRight( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posRight( 
            /* [out][retval] */ float __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_imeMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeMode( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyAlign( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyPosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyPosition( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyOverhang( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyOverhang( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridChar( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridChar( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridLine( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridLine( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridMode( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridType( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridType( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGrid( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGrid( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAutospace( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAutospace( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordBreak( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordBreak( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lineBreak( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineBreak( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textJustify( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustify( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textJustifyTrim( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustifyTrim( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textKashida( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashida( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflowX( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowX( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflowY( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowY( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_accelerator( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_accelerator( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyle2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLRuleStyle2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLRuleStyle2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_tableLayout )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_tableLayout )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_borderCollapse )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderCollapse )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_direction )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_direction )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_behavior )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_behavior )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_position )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_position )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_unicodeBidi )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_unicodeBidi )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_bottom )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_bottom )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_right )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_right )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_pixelBottom )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pixelBottom )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_pixelRight )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pixelRight )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_posBottom )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_posBottom )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ float __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_posRight )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_posRight )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ float __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_imeMode )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_imeMode )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_rubyAlign )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_rubyAlign )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_rubyPosition )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_rubyPosition )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_rubyOverhang )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_rubyOverhang )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_layoutGridChar )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGridChar )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_layoutGridLine )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGridLine )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_layoutGridMode )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGridMode )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_layoutGridType )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGridType )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_layoutGrid )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGrid )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textAutospace )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textAutospace )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_wordBreak )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_wordBreak )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_lineBreak )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_lineBreak )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textJustify )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textJustify )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textJustifyTrim )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textJustifyTrim )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textKashida )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textKashida )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_overflowX )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_overflowX )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_overflowY )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_overflowY )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_accelerator )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_accelerator )( 
            IHTMLRuleStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLRuleStyle2Vtbl;

    interface IHTMLRuleStyle2
    {
        CONST_VTBL struct IHTMLRuleStyle2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRuleStyle2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRuleStyle2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRuleStyle2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRuleStyle2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRuleStyle2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRuleStyle2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRuleStyle2_put_tableLayout(This,v)	\
    (This)->lpVtbl -> put_tableLayout(This,v)

#define IHTMLRuleStyle2_get_tableLayout(This,p)	\
    (This)->lpVtbl -> get_tableLayout(This,p)

#define IHTMLRuleStyle2_put_borderCollapse(This,v)	\
    (This)->lpVtbl -> put_borderCollapse(This,v)

#define IHTMLRuleStyle2_get_borderCollapse(This,p)	\
    (This)->lpVtbl -> get_borderCollapse(This,p)

#define IHTMLRuleStyle2_put_direction(This,v)	\
    (This)->lpVtbl -> put_direction(This,v)

#define IHTMLRuleStyle2_get_direction(This,p)	\
    (This)->lpVtbl -> get_direction(This,p)

#define IHTMLRuleStyle2_put_behavior(This,v)	\
    (This)->lpVtbl -> put_behavior(This,v)

#define IHTMLRuleStyle2_get_behavior(This,p)	\
    (This)->lpVtbl -> get_behavior(This,p)

#define IHTMLRuleStyle2_put_position(This,v)	\
    (This)->lpVtbl -> put_position(This,v)

#define IHTMLRuleStyle2_get_position(This,p)	\
    (This)->lpVtbl -> get_position(This,p)

#define IHTMLRuleStyle2_put_unicodeBidi(This,v)	\
    (This)->lpVtbl -> put_unicodeBidi(This,v)

#define IHTMLRuleStyle2_get_unicodeBidi(This,p)	\
    (This)->lpVtbl -> get_unicodeBidi(This,p)

#define IHTMLRuleStyle2_put_bottom(This,v)	\
    (This)->lpVtbl -> put_bottom(This,v)

#define IHTMLRuleStyle2_get_bottom(This,p)	\
    (This)->lpVtbl -> get_bottom(This,p)

#define IHTMLRuleStyle2_put_right(This,v)	\
    (This)->lpVtbl -> put_right(This,v)

#define IHTMLRuleStyle2_get_right(This,p)	\
    (This)->lpVtbl -> get_right(This,p)

#define IHTMLRuleStyle2_put_pixelBottom(This,v)	\
    (This)->lpVtbl -> put_pixelBottom(This,v)

#define IHTMLRuleStyle2_get_pixelBottom(This,p)	\
    (This)->lpVtbl -> get_pixelBottom(This,p)

#define IHTMLRuleStyle2_put_pixelRight(This,v)	\
    (This)->lpVtbl -> put_pixelRight(This,v)

#define IHTMLRuleStyle2_get_pixelRight(This,p)	\
    (This)->lpVtbl -> get_pixelRight(This,p)

#define IHTMLRuleStyle2_put_posBottom(This,v)	\
    (This)->lpVtbl -> put_posBottom(This,v)

#define IHTMLRuleStyle2_get_posBottom(This,p)	\
    (This)->lpVtbl -> get_posBottom(This,p)

#define IHTMLRuleStyle2_put_posRight(This,v)	\
    (This)->lpVtbl -> put_posRight(This,v)

#define IHTMLRuleStyle2_get_posRight(This,p)	\
    (This)->lpVtbl -> get_posRight(This,p)

#define IHTMLRuleStyle2_put_imeMode(This,v)	\
    (This)->lpVtbl -> put_imeMode(This,v)

#define IHTMLRuleStyle2_get_imeMode(This,p)	\
    (This)->lpVtbl -> get_imeMode(This,p)

#define IHTMLRuleStyle2_put_rubyAlign(This,v)	\
    (This)->lpVtbl -> put_rubyAlign(This,v)

#define IHTMLRuleStyle2_get_rubyAlign(This,p)	\
    (This)->lpVtbl -> get_rubyAlign(This,p)

#define IHTMLRuleStyle2_put_rubyPosition(This,v)	\
    (This)->lpVtbl -> put_rubyPosition(This,v)

#define IHTMLRuleStyle2_get_rubyPosition(This,p)	\
    (This)->lpVtbl -> get_rubyPosition(This,p)

#define IHTMLRuleStyle2_put_rubyOverhang(This,v)	\
    (This)->lpVtbl -> put_rubyOverhang(This,v)

#define IHTMLRuleStyle2_get_rubyOverhang(This,p)	\
    (This)->lpVtbl -> get_rubyOverhang(This,p)

#define IHTMLRuleStyle2_put_layoutGridChar(This,v)	\
    (This)->lpVtbl -> put_layoutGridChar(This,v)

#define IHTMLRuleStyle2_get_layoutGridChar(This,p)	\
    (This)->lpVtbl -> get_layoutGridChar(This,p)

#define IHTMLRuleStyle2_put_layoutGridLine(This,v)	\
    (This)->lpVtbl -> put_layoutGridLine(This,v)

#define IHTMLRuleStyle2_get_layoutGridLine(This,p)	\
    (This)->lpVtbl -> get_layoutGridLine(This,p)

#define IHTMLRuleStyle2_put_layoutGridMode(This,v)	\
    (This)->lpVtbl -> put_layoutGridMode(This,v)

#define IHTMLRuleStyle2_get_layoutGridMode(This,p)	\
    (This)->lpVtbl -> get_layoutGridMode(This,p)

#define IHTMLRuleStyle2_put_layoutGridType(This,v)	\
    (This)->lpVtbl -> put_layoutGridType(This,v)

#define IHTMLRuleStyle2_get_layoutGridType(This,p)	\
    (This)->lpVtbl -> get_layoutGridType(This,p)

#define IHTMLRuleStyle2_put_layoutGrid(This,v)	\
    (This)->lpVtbl -> put_layoutGrid(This,v)

#define IHTMLRuleStyle2_get_layoutGrid(This,p)	\
    (This)->lpVtbl -> get_layoutGrid(This,p)

#define IHTMLRuleStyle2_put_textAutospace(This,v)	\
    (This)->lpVtbl -> put_textAutospace(This,v)

#define IHTMLRuleStyle2_get_textAutospace(This,p)	\
    (This)->lpVtbl -> get_textAutospace(This,p)

#define IHTMLRuleStyle2_put_wordBreak(This,v)	\
    (This)->lpVtbl -> put_wordBreak(This,v)

#define IHTMLRuleStyle2_get_wordBreak(This,p)	\
    (This)->lpVtbl -> get_wordBreak(This,p)

#define IHTMLRuleStyle2_put_lineBreak(This,v)	\
    (This)->lpVtbl -> put_lineBreak(This,v)

#define IHTMLRuleStyle2_get_lineBreak(This,p)	\
    (This)->lpVtbl -> get_lineBreak(This,p)

#define IHTMLRuleStyle2_put_textJustify(This,v)	\
    (This)->lpVtbl -> put_textJustify(This,v)

#define IHTMLRuleStyle2_get_textJustify(This,p)	\
    (This)->lpVtbl -> get_textJustify(This,p)

#define IHTMLRuleStyle2_put_textJustifyTrim(This,v)	\
    (This)->lpVtbl -> put_textJustifyTrim(This,v)

#define IHTMLRuleStyle2_get_textJustifyTrim(This,p)	\
    (This)->lpVtbl -> get_textJustifyTrim(This,p)

#define IHTMLRuleStyle2_put_textKashida(This,v)	\
    (This)->lpVtbl -> put_textKashida(This,v)

#define IHTMLRuleStyle2_get_textKashida(This,p)	\
    (This)->lpVtbl -> get_textKashida(This,p)

#define IHTMLRuleStyle2_put_overflowX(This,v)	\
    (This)->lpVtbl -> put_overflowX(This,v)

#define IHTMLRuleStyle2_get_overflowX(This,p)	\
    (This)->lpVtbl -> get_overflowX(This,p)

#define IHTMLRuleStyle2_put_overflowY(This,v)	\
    (This)->lpVtbl -> put_overflowY(This,v)

#define IHTMLRuleStyle2_get_overflowY(This,p)	\
    (This)->lpVtbl -> get_overflowY(This,p)

#define IHTMLRuleStyle2_put_accelerator(This,v)	\
    (This)->lpVtbl -> put_accelerator(This,v)

#define IHTMLRuleStyle2_get_accelerator(This,p)	\
    (This)->lpVtbl -> get_accelerator(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_tableLayout_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_tableLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_tableLayout_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_tableLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_borderCollapse_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_borderCollapse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_borderCollapse_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_borderCollapse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_direction_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_direction_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_behavior_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_behavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_behavior_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_behavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_position_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_position_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_unicodeBidi_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_unicodeBidi_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_unicodeBidi_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_unicodeBidi_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_bottom_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle2_put_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_bottom_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_right_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle2_put_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_right_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_pixelBottom_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRuleStyle2_put_pixelBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_pixelBottom_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_pixelBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_pixelRight_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRuleStyle2_put_pixelRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_pixelRight_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_pixelRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_posBottom_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLRuleStyle2_put_posBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_posBottom_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ float __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_posBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_posRight_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLRuleStyle2_put_posRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_posRight_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ float __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_posRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_imeMode_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_imeMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_imeMode_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_imeMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_rubyAlign_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_rubyAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_rubyAlign_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_rubyAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_rubyPosition_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_rubyPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_rubyPosition_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_rubyPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_rubyOverhang_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_rubyOverhang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_rubyOverhang_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_rubyOverhang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_layoutGridChar_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle2_put_layoutGridChar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_layoutGridChar_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_layoutGridChar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_layoutGridLine_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle2_put_layoutGridLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_layoutGridLine_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_layoutGridLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_layoutGridMode_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_layoutGridMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_layoutGridMode_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_layoutGridMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_layoutGridType_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_layoutGridType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_layoutGridType_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_layoutGridType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_layoutGrid_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_layoutGrid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_layoutGrid_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_layoutGrid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_textAutospace_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_textAutospace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_textAutospace_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_textAutospace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_wordBreak_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_wordBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_wordBreak_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_wordBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_lineBreak_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_lineBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_lineBreak_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_lineBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_textJustify_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_textJustify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_textJustify_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_textJustify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_textJustifyTrim_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_textJustifyTrim_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_textJustifyTrim_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_textJustifyTrim_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_textKashida_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle2_put_textKashida_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_textKashida_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_textKashida_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_overflowX_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_overflowX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_overflowX_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_overflowX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_overflowY_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_overflowY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_overflowY_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_overflowY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_accelerator_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_accelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_accelerator_Proxy( 
    IHTMLRuleStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle2_get_accelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRuleStyle2_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle3_INTERFACE_DEFINED__
#define __IHTMLRuleStyle3_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f657-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutFlow( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutFlow( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_zoom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zoom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordWrap( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordWrap( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textUnderlinePosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textUnderlinePosition( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarBaseColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarBaseColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarFaceColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarFaceColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbar3dLightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbar3dLightColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarShadowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarShadowColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarHighlightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarHighlightColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarDarkShadowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarDarkShadowColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarArrowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarArrowColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarTrackColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarTrackColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_writingMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_writingMode( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAlignLast( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlignLast( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textKashidaSpace( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashidaSpace( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyle3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLRuleStyle3 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLRuleStyle3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_layoutFlow )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutFlow )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_zoom )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_zoom )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_wordWrap )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_wordWrap )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textUnderlinePosition )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textUnderlinePosition )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarBaseColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarBaseColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarFaceColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarFaceColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbar3dLightColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbar3dLightColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarShadowColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarShadowColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarHighlightColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarHighlightColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarDarkShadowColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarDarkShadowColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarArrowColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarArrowColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollbarTrackColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarTrackColor )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_writingMode )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_writingMode )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textAlignLast )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textAlignLast )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textKashidaSpace )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textKashidaSpace )( 
            IHTMLRuleStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLRuleStyle3Vtbl;

    interface IHTMLRuleStyle3
    {
        CONST_VTBL struct IHTMLRuleStyle3Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRuleStyle3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRuleStyle3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRuleStyle3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRuleStyle3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRuleStyle3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRuleStyle3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRuleStyle3_put_layoutFlow(This,v)	\
    (This)->lpVtbl -> put_layoutFlow(This,v)

#define IHTMLRuleStyle3_get_layoutFlow(This,p)	\
    (This)->lpVtbl -> get_layoutFlow(This,p)

#define IHTMLRuleStyle3_put_zoom(This,v)	\
    (This)->lpVtbl -> put_zoom(This,v)

#define IHTMLRuleStyle3_get_zoom(This,p)	\
    (This)->lpVtbl -> get_zoom(This,p)

#define IHTMLRuleStyle3_put_wordWrap(This,v)	\
    (This)->lpVtbl -> put_wordWrap(This,v)

#define IHTMLRuleStyle3_get_wordWrap(This,p)	\
    (This)->lpVtbl -> get_wordWrap(This,p)

#define IHTMLRuleStyle3_put_textUnderlinePosition(This,v)	\
    (This)->lpVtbl -> put_textUnderlinePosition(This,v)

#define IHTMLRuleStyle3_get_textUnderlinePosition(This,p)	\
    (This)->lpVtbl -> get_textUnderlinePosition(This,p)

#define IHTMLRuleStyle3_put_scrollbarBaseColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarBaseColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarBaseColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarBaseColor(This,p)

#define IHTMLRuleStyle3_put_scrollbarFaceColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarFaceColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarFaceColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarFaceColor(This,p)

#define IHTMLRuleStyle3_put_scrollbar3dLightColor(This,v)	\
    (This)->lpVtbl -> put_scrollbar3dLightColor(This,v)

#define IHTMLRuleStyle3_get_scrollbar3dLightColor(This,p)	\
    (This)->lpVtbl -> get_scrollbar3dLightColor(This,p)

#define IHTMLRuleStyle3_put_scrollbarShadowColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarShadowColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarShadowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarShadowColor(This,p)

#define IHTMLRuleStyle3_put_scrollbarHighlightColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarHighlightColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarHighlightColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarHighlightColor(This,p)

#define IHTMLRuleStyle3_put_scrollbarDarkShadowColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarDarkShadowColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarDarkShadowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarDarkShadowColor(This,p)

#define IHTMLRuleStyle3_put_scrollbarArrowColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarArrowColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarArrowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarArrowColor(This,p)

#define IHTMLRuleStyle3_put_scrollbarTrackColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarTrackColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarTrackColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarTrackColor(This,p)

#define IHTMLRuleStyle3_put_writingMode(This,v)	\
    (This)->lpVtbl -> put_writingMode(This,v)

#define IHTMLRuleStyle3_get_writingMode(This,p)	\
    (This)->lpVtbl -> get_writingMode(This,p)

#define IHTMLRuleStyle3_put_textAlignLast(This,v)	\
    (This)->lpVtbl -> put_textAlignLast(This,v)

#define IHTMLRuleStyle3_get_textAlignLast(This,p)	\
    (This)->lpVtbl -> get_textAlignLast(This,p)

#define IHTMLRuleStyle3_put_textKashidaSpace(This,v)	\
    (This)->lpVtbl -> put_textKashidaSpace(This,v)

#define IHTMLRuleStyle3_get_textKashidaSpace(This,p)	\
    (This)->lpVtbl -> get_textKashidaSpace(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_layoutFlow_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle3_put_layoutFlow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_layoutFlow_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_layoutFlow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_zoom_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_zoom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_zoom_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_zoom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_wordWrap_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle3_put_wordWrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_wordWrap_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_wordWrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_textUnderlinePosition_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle3_put_textUnderlinePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_textUnderlinePosition_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_textUnderlinePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarBaseColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarBaseColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarBaseColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarBaseColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarFaceColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarFaceColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarFaceColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarFaceColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbar3dLightColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbar3dLightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbar3dLightColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbar3dLightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarShadowColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarShadowColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarHighlightColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarHighlightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarHighlightColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarHighlightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarDarkShadowColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarDarkShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarDarkShadowColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarDarkShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarArrowColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarArrowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarArrowColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarArrowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarTrackColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarTrackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarTrackColor_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarTrackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_writingMode_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle3_put_writingMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_writingMode_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_writingMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_textAlignLast_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle3_put_textAlignLast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_textAlignLast_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_textAlignLast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_textKashidaSpace_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_textKashidaSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_textKashidaSpace_Proxy( 
    IHTMLRuleStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle3_get_textKashidaSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRuleStyle3_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle4_INTERFACE_DEFINED__
#define __IHTMLRuleStyle4_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f817-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle4 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textOverflow( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textOverflow( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_minHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minHeight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyle4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLRuleStyle4 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLRuleStyle4 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLRuleStyle4 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLRuleStyle4 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLRuleStyle4 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLRuleStyle4 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLRuleStyle4 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textOverflow )( 
            IHTMLRuleStyle4 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textOverflow )( 
            IHTMLRuleStyle4 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_minHeight )( 
            IHTMLRuleStyle4 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_minHeight )( 
            IHTMLRuleStyle4 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLRuleStyle4Vtbl;

    interface IHTMLRuleStyle4
    {
        CONST_VTBL struct IHTMLRuleStyle4Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle4_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRuleStyle4_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRuleStyle4_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRuleStyle4_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRuleStyle4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRuleStyle4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRuleStyle4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRuleStyle4_put_textOverflow(This,v)	\
    (This)->lpVtbl -> put_textOverflow(This,v)

#define IHTMLRuleStyle4_get_textOverflow(This,p)	\
    (This)->lpVtbl -> get_textOverflow(This,p)

#define IHTMLRuleStyle4_put_minHeight(This,v)	\
    (This)->lpVtbl -> put_minHeight(This,v)

#define IHTMLRuleStyle4_get_minHeight(This,p)	\
    (This)->lpVtbl -> get_minHeight(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle4_put_textOverflow_Proxy( 
    IHTMLRuleStyle4 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle4_put_textOverflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle4_get_textOverflow_Proxy( 
    IHTMLRuleStyle4 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle4_get_textOverflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle4_put_minHeight_Proxy( 
    IHTMLRuleStyle4 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle4_put_minHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle4_get_minHeight_Proxy( 
    IHTMLRuleStyle4 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle4_get_minHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRuleStyle4_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle5_INTERFACE_DEFINED__
#define __IHTMLRuleStyle5_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle5 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f335-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle5 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_msInterpolationMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_msInterpolationMode( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_maxHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxHeight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_minWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_maxWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyle5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLRuleStyle5 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLRuleStyle5 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_msInterpolationMode )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_msInterpolationMode )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_maxHeight )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_maxHeight )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_minWidth )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_minWidth )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_maxWidth )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_maxWidth )( 
            IHTMLRuleStyle5 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLRuleStyle5Vtbl;

    interface IHTMLRuleStyle5
    {
        CONST_VTBL struct IHTMLRuleStyle5Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle5_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRuleStyle5_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRuleStyle5_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRuleStyle5_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRuleStyle5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRuleStyle5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRuleStyle5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRuleStyle5_put_msInterpolationMode(This,v)	\
    (This)->lpVtbl -> put_msInterpolationMode(This,v)

#define IHTMLRuleStyle5_get_msInterpolationMode(This,p)	\
    (This)->lpVtbl -> get_msInterpolationMode(This,p)

#define IHTMLRuleStyle5_put_maxHeight(This,v)	\
    (This)->lpVtbl -> put_maxHeight(This,v)

#define IHTMLRuleStyle5_get_maxHeight(This,p)	\
    (This)->lpVtbl -> get_maxHeight(This,p)

#define IHTMLRuleStyle5_put_minWidth(This,v)	\
    (This)->lpVtbl -> put_minWidth(This,v)

#define IHTMLRuleStyle5_get_minWidth(This,p)	\
    (This)->lpVtbl -> get_minWidth(This,p)

#define IHTMLRuleStyle5_put_maxWidth(This,v)	\
    (This)->lpVtbl -> put_maxWidth(This,v)

#define IHTMLRuleStyle5_get_maxWidth(This,p)	\
    (This)->lpVtbl -> get_maxWidth(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle5_put_msInterpolationMode_Proxy( 
    IHTMLRuleStyle5 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle5_put_msInterpolationMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle5_get_msInterpolationMode_Proxy( 
    IHTMLRuleStyle5 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle5_get_msInterpolationMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle5_put_maxHeight_Proxy( 
    IHTMLRuleStyle5 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle5_put_maxHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle5_get_maxHeight_Proxy( 
    IHTMLRuleStyle5 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle5_get_maxHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle5_put_minWidth_Proxy( 
    IHTMLRuleStyle5 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle5_put_minWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle5_get_minWidth_Proxy( 
    IHTMLRuleStyle5 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle5_get_minWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle5_put_maxWidth_Proxy( 
    IHTMLRuleStyle5 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle5_put_maxWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle5_get_maxWidth_Proxy( 
    IHTMLRuleStyle5 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRuleStyle5_get_maxWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRuleStyle5_INTERFACE_DEFINED__ */


#ifndef __DispHTMLStyle_DISPINTERFACE_DEFINED__
#define __DispHTMLStyle_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLStyle */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f55a-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLStyle : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            DispHTMLStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            DispHTMLStyle __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            DispHTMLStyle __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            DispHTMLStyle __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            DispHTMLStyle __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            DispHTMLStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            DispHTMLStyle __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } DispHTMLStyleVtbl;

    interface DispHTMLStyle
    {
        CONST_VTBL struct DispHTMLStyleVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispHTMLStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispHTMLStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispHTMLStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispHTMLStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispHTMLStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispHTMLStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLStyle_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f285-98b5-11cf-bb82-00aa00bdce0b")
HTMLStyle;
#endif

#ifndef __DispHTMLRuleStyle_DISPINTERFACE_DEFINED__
#define __DispHTMLRuleStyle_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLRuleStyle */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLRuleStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f55c-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLRuleStyle : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLRuleStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            DispHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            DispHTMLRuleStyle __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            DispHTMLRuleStyle __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            DispHTMLRuleStyle __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            DispHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            DispHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            DispHTMLRuleStyle __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } DispHTMLRuleStyleVtbl;

    interface DispHTMLRuleStyle
    {
        CONST_VTBL struct DispHTMLRuleStyleVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLRuleStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispHTMLRuleStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispHTMLRuleStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispHTMLRuleStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispHTMLRuleStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispHTMLRuleStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispHTMLRuleStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLRuleStyle_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLRuleStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3d0-98b5-11cf-bb82-00aa00bdce0b")
HTMLRuleStyle;
#endif

#ifndef __IHTMLRenderStyle_INTERFACE_DEFINED__
#define __IHTMLRenderStyle_INTERFACE_DEFINED__

/* interface IHTMLRenderStyle */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRenderStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f6ae-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRenderStyle : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textLineThroughStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textLineThroughStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textUnderlineStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textUnderlineStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textEffect( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textEffect( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textBackgroundColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textBackgroundColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_renderingPriority( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_renderingPriority( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_defaultTextSelection( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_defaultTextSelection( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecoration( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecoration( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRenderStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLRenderStyle __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLRenderStyle __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textLineThroughStyle )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textLineThroughStyle )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textUnderlineStyle )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textUnderlineStyle )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textEffect )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textEffect )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textColor )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textColor )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textBackgroundColor )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textBackgroundColor )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecorationColor )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecorationColor )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_renderingPriority )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_renderingPriority )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_defaultTextSelection )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_defaultTextSelection )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_textDecoration )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecoration )( 
            IHTMLRenderStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLRenderStyleVtbl;

    interface IHTMLRenderStyle
    {
        CONST_VTBL struct IHTMLRenderStyleVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRenderStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRenderStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRenderStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRenderStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRenderStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRenderStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRenderStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRenderStyle_put_textLineThroughStyle(This,v)	\
    (This)->lpVtbl -> put_textLineThroughStyle(This,v)

#define IHTMLRenderStyle_get_textLineThroughStyle(This,p)	\
    (This)->lpVtbl -> get_textLineThroughStyle(This,p)

#define IHTMLRenderStyle_put_textUnderlineStyle(This,v)	\
    (This)->lpVtbl -> put_textUnderlineStyle(This,v)

#define IHTMLRenderStyle_get_textUnderlineStyle(This,p)	\
    (This)->lpVtbl -> get_textUnderlineStyle(This,p)

#define IHTMLRenderStyle_put_textEffect(This,v)	\
    (This)->lpVtbl -> put_textEffect(This,v)

#define IHTMLRenderStyle_get_textEffect(This,p)	\
    (This)->lpVtbl -> get_textEffect(This,p)

#define IHTMLRenderStyle_put_textColor(This,v)	\
    (This)->lpVtbl -> put_textColor(This,v)

#define IHTMLRenderStyle_get_textColor(This,p)	\
    (This)->lpVtbl -> get_textColor(This,p)

#define IHTMLRenderStyle_put_textBackgroundColor(This,v)	\
    (This)->lpVtbl -> put_textBackgroundColor(This,v)

#define IHTMLRenderStyle_get_textBackgroundColor(This,p)	\
    (This)->lpVtbl -> get_textBackgroundColor(This,p)

#define IHTMLRenderStyle_put_textDecorationColor(This,v)	\
    (This)->lpVtbl -> put_textDecorationColor(This,v)

#define IHTMLRenderStyle_get_textDecorationColor(This,p)	\
    (This)->lpVtbl -> get_textDecorationColor(This,p)

#define IHTMLRenderStyle_put_renderingPriority(This,v)	\
    (This)->lpVtbl -> put_renderingPriority(This,v)

#define IHTMLRenderStyle_get_renderingPriority(This,p)	\
    (This)->lpVtbl -> get_renderingPriority(This,p)

#define IHTMLRenderStyle_put_defaultTextSelection(This,v)	\
    (This)->lpVtbl -> put_defaultTextSelection(This,v)

#define IHTMLRenderStyle_get_defaultTextSelection(This,p)	\
    (This)->lpVtbl -> get_defaultTextSelection(This,p)

#define IHTMLRenderStyle_put_textDecoration(This,v)	\
    (This)->lpVtbl -> put_textDecoration(This,v)

#define IHTMLRenderStyle_get_textDecoration(This,p)	\
    (This)->lpVtbl -> get_textDecoration(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textLineThroughStyle_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRenderStyle_put_textLineThroughStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textLineThroughStyle_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRenderStyle_get_textLineThroughStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textUnderlineStyle_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRenderStyle_put_textUnderlineStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textUnderlineStyle_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRenderStyle_get_textUnderlineStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textEffect_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRenderStyle_put_textEffect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textEffect_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRenderStyle_get_textEffect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textColor_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRenderStyle_put_textColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textColor_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRenderStyle_get_textColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textBackgroundColor_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRenderStyle_put_textBackgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textBackgroundColor_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRenderStyle_get_textBackgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textDecorationColor_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRenderStyle_put_textDecorationColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textDecorationColor_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLRenderStyle_get_textDecorationColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_renderingPriority_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRenderStyle_put_renderingPriority_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_renderingPriority_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLRenderStyle_get_renderingPriority_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_defaultTextSelection_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRenderStyle_put_defaultTextSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_defaultTextSelection_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRenderStyle_get_defaultTextSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textDecoration_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRenderStyle_put_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textDecoration_Proxy( 
    IHTMLRenderStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLRenderStyle_get_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRenderStyle_INTERFACE_DEFINED__ */


#ifndef __DispHTMLRenderStyle_DISPINTERFACE_DEFINED__
#define __DispHTMLRenderStyle_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLRenderStyle */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLRenderStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f58b-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLRenderStyle : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLRenderStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            DispHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            DispHTMLRenderStyle __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            DispHTMLRenderStyle __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            DispHTMLRenderStyle __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            DispHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            DispHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            DispHTMLRenderStyle __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } DispHTMLRenderStyleVtbl;

    interface DispHTMLRenderStyle
    {
        CONST_VTBL struct DispHTMLRenderStyleVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLRenderStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispHTMLRenderStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispHTMLRenderStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispHTMLRenderStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispHTMLRenderStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispHTMLRenderStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispHTMLRenderStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLRenderStyle_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLRenderStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f6aa-98b5-11cf-bb82-00aa00bdce0b")
HTMLRenderStyle;
#endif

#ifndef __IHTMLCurrentStyle_INTERFACE_DEFINED__
#define __IHTMLCurrentStyle_INTERFACE_DEFINED__

/* interface IHTMLCurrentStyle */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCurrentStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f3db-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCurrentStyle : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_styleFloat( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_color( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontFamily( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontVariant( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontWeight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontSize( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundImage( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionX( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionY( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundRepeat( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_left( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingLeft( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingTop( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingRight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingBottom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlign( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecoration( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_display( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_visibility( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zIndex( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_letterSpacing( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineHeight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textIndent( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_verticalAlign( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundAttachment( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginTop( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginRight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginBottom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginLeft( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clear( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleType( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStylePosition( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleImage( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clipTop( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clipRight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clipBottom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clipLeft( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflow( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakBefore( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakAfter( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cursor( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_tableLayout( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderCollapse( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_direction( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_behavior( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT __RPC_FAR *AttributeValue) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_unicodeBidi( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_right( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_bottom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeMode( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyAlign( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyPosition( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyOverhang( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAutospace( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineBreak( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordBreak( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustify( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustifyTrim( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashida( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_blockDirection( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridChar( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridLine( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridMode( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridType( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderStyle( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderWidth( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_padding( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_margin( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_accelerator( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowX( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowY( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textTransform( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLCurrentStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLCurrentStyle __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLCurrentStyle __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_position )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_styleFloat )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_color )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundColor )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontFamily )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontStyle )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontVariant )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontWeight )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_fontSize )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundImage )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundPositionX )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundPositionY )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundRepeat )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderLeftColor )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderTopColor )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderRightColor )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderBottomColor )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderTopStyle )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderRightStyle )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderBottomStyle )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderLeftStyle )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderTopWidth )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderRightWidth )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderBottomWidth )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderLeftWidth )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_left )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_top )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_width )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_height )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_paddingLeft )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_paddingTop )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_paddingRight )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_paddingBottom )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textAlign )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textDecoration )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_display )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_visibility )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_zIndex )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_letterSpacing )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_lineHeight )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textIndent )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_verticalAlign )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_backgroundAttachment )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_marginTop )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_marginRight )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_marginBottom )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_marginLeft )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clear )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_listStyleType )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_listStylePosition )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_listStyleImage )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clipTop )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clipRight )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clipBottom )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clipLeft )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_overflow )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pageBreakBefore )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_pageBreakAfter )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_cursor )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_tableLayout )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderCollapse )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_direction )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_behavior )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getAttribute )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT __RPC_FAR *AttributeValue);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_unicodeBidi )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_right )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_bottom )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_imeMode )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_rubyAlign )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_rubyPosition )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_rubyOverhang )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textAutospace )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_lineBreak )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_wordBreak )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textJustify )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textJustifyTrim )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textKashida )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_blockDirection )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGridChar )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGridLine )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGridMode )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutGridType )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderStyle )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderColor )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_borderWidth )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_padding )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_margin )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_accelerator )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_overflowX )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_overflowY )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textTransform )( 
            IHTMLCurrentStyle __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLCurrentStyleVtbl;

    interface IHTMLCurrentStyle
    {
        CONST_VTBL struct IHTMLCurrentStyleVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLCurrentStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLCurrentStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLCurrentStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLCurrentStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLCurrentStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLCurrentStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLCurrentStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLCurrentStyle_get_position(This,p)	\
    (This)->lpVtbl -> get_position(This,p)

#define IHTMLCurrentStyle_get_styleFloat(This,p)	\
    (This)->lpVtbl -> get_styleFloat(This,p)

#define IHTMLCurrentStyle_get_color(This,p)	\
    (This)->lpVtbl -> get_color(This,p)

#define IHTMLCurrentStyle_get_backgroundColor(This,p)	\
    (This)->lpVtbl -> get_backgroundColor(This,p)

#define IHTMLCurrentStyle_get_fontFamily(This,p)	\
    (This)->lpVtbl -> get_fontFamily(This,p)

#define IHTMLCurrentStyle_get_fontStyle(This,p)	\
    (This)->lpVtbl -> get_fontStyle(This,p)

#define IHTMLCurrentStyle_get_fontVariant(This,p)	\
    (This)->lpVtbl -> get_fontVariant(This,p)

#define IHTMLCurrentStyle_get_fontWeight(This,p)	\
    (This)->lpVtbl -> get_fontWeight(This,p)

#define IHTMLCurrentStyle_get_fontSize(This,p)	\
    (This)->lpVtbl -> get_fontSize(This,p)

#define IHTMLCurrentStyle_get_backgroundImage(This,p)	\
    (This)->lpVtbl -> get_backgroundImage(This,p)

#define IHTMLCurrentStyle_get_backgroundPositionX(This,p)	\
    (This)->lpVtbl -> get_backgroundPositionX(This,p)

#define IHTMLCurrentStyle_get_backgroundPositionY(This,p)	\
    (This)->lpVtbl -> get_backgroundPositionY(This,p)

#define IHTMLCurrentStyle_get_backgroundRepeat(This,p)	\
    (This)->lpVtbl -> get_backgroundRepeat(This,p)

#define IHTMLCurrentStyle_get_borderLeftColor(This,p)	\
    (This)->lpVtbl -> get_borderLeftColor(This,p)

#define IHTMLCurrentStyle_get_borderTopColor(This,p)	\
    (This)->lpVtbl -> get_borderTopColor(This,p)

#define IHTMLCurrentStyle_get_borderRightColor(This,p)	\
    (This)->lpVtbl -> get_borderRightColor(This,p)

#define IHTMLCurrentStyle_get_borderBottomColor(This,p)	\
    (This)->lpVtbl -> get_borderBottomColor(This,p)

#define IHTMLCurrentStyle_get_borderTopStyle(This,p)	\
    (This)->lpVtbl -> get_borderTopStyle(This,p)

#define IHTMLCurrentStyle_get_borderRightStyle(This,p)	\
    (This)->lpVtbl -> get_borderRightStyle(This,p)

#define IHTMLCurrentStyle_get_borderBottomStyle(This,p)	\
    (This)->lpVtbl -> get_borderBottomStyle(This,p)

#define IHTMLCurrentStyle_get_borderLeftStyle(This,p)	\
    (This)->lpVtbl -> get_borderLeftStyle(This,p)

#define IHTMLCurrentStyle_get_borderTopWidth(This,p)	\
    (This)->lpVtbl -> get_borderTopWidth(This,p)

#define IHTMLCurrentStyle_get_borderRightWidth(This,p)	\
    (This)->lpVtbl -> get_borderRightWidth(This,p)

#define IHTMLCurrentStyle_get_borderBottomWidth(This,p)	\
    (This)->lpVtbl -> get_borderBottomWidth(This,p)

#define IHTMLCurrentStyle_get_borderLeftWidth(This,p)	\
    (This)->lpVtbl -> get_borderLeftWidth(This,p)

#define IHTMLCurrentStyle_get_left(This,p)	\
    (This)->lpVtbl -> get_left(This,p)

#define IHTMLCurrentStyle_get_top(This,p)	\
    (This)->lpVtbl -> get_top(This,p)

#define IHTMLCurrentStyle_get_width(This,p)	\
    (This)->lpVtbl -> get_width(This,p)

#define IHTMLCurrentStyle_get_height(This,p)	\
    (This)->lpVtbl -> get_height(This,p)

#define IHTMLCurrentStyle_get_paddingLeft(This,p)	\
    (This)->lpVtbl -> get_paddingLeft(This,p)

#define IHTMLCurrentStyle_get_paddingTop(This,p)	\
    (This)->lpVtbl -> get_paddingTop(This,p)

#define IHTMLCurrentStyle_get_paddingRight(This,p)	\
    (This)->lpVtbl -> get_paddingRight(This,p)

#define IHTMLCurrentStyle_get_paddingBottom(This,p)	\
    (This)->lpVtbl -> get_paddingBottom(This,p)

#define IHTMLCurrentStyle_get_textAlign(This,p)	\
    (This)->lpVtbl -> get_textAlign(This,p)

#define IHTMLCurrentStyle_get_textDecoration(This,p)	\
    (This)->lpVtbl -> get_textDecoration(This,p)

#define IHTMLCurrentStyle_get_display(This,p)	\
    (This)->lpVtbl -> get_display(This,p)

#define IHTMLCurrentStyle_get_visibility(This,p)	\
    (This)->lpVtbl -> get_visibility(This,p)

#define IHTMLCurrentStyle_get_zIndex(This,p)	\
    (This)->lpVtbl -> get_zIndex(This,p)

#define IHTMLCurrentStyle_get_letterSpacing(This,p)	\
    (This)->lpVtbl -> get_letterSpacing(This,p)

#define IHTMLCurrentStyle_get_lineHeight(This,p)	\
    (This)->lpVtbl -> get_lineHeight(This,p)

#define IHTMLCurrentStyle_get_textIndent(This,p)	\
    (This)->lpVtbl -> get_textIndent(This,p)

#define IHTMLCurrentStyle_get_verticalAlign(This,p)	\
    (This)->lpVtbl -> get_verticalAlign(This,p)

#define IHTMLCurrentStyle_get_backgroundAttachment(This,p)	\
    (This)->lpVtbl -> get_backgroundAttachment(This,p)

#define IHTMLCurrentStyle_get_marginTop(This,p)	\
    (This)->lpVtbl -> get_marginTop(This,p)

#define IHTMLCurrentStyle_get_marginRight(This,p)	\
    (This)->lpVtbl -> get_marginRight(This,p)

#define IHTMLCurrentStyle_get_marginBottom(This,p)	\
    (This)->lpVtbl -> get_marginBottom(This,p)

#define IHTMLCurrentStyle_get_marginLeft(This,p)	\
    (This)->lpVtbl -> get_marginLeft(This,p)

#define IHTMLCurrentStyle_get_clear(This,p)	\
    (This)->lpVtbl -> get_clear(This,p)

#define IHTMLCurrentStyle_get_listStyleType(This,p)	\
    (This)->lpVtbl -> get_listStyleType(This,p)

#define IHTMLCurrentStyle_get_listStylePosition(This,p)	\
    (This)->lpVtbl -> get_listStylePosition(This,p)

#define IHTMLCurrentStyle_get_listStyleImage(This,p)	\
    (This)->lpVtbl -> get_listStyleImage(This,p)

#define IHTMLCurrentStyle_get_clipTop(This,p)	\
    (This)->lpVtbl -> get_clipTop(This,p)

#define IHTMLCurrentStyle_get_clipRight(This,p)	\
    (This)->lpVtbl -> get_clipRight(This,p)

#define IHTMLCurrentStyle_get_clipBottom(This,p)	\
    (This)->lpVtbl -> get_clipBottom(This,p)

#define IHTMLCurrentStyle_get_clipLeft(This,p)	\
    (This)->lpVtbl -> get_clipLeft(This,p)

#define IHTMLCurrentStyle_get_overflow(This,p)	\
    (This)->lpVtbl -> get_overflow(This,p)

#define IHTMLCurrentStyle_get_pageBreakBefore(This,p)	\
    (This)->lpVtbl -> get_pageBreakBefore(This,p)

#define IHTMLCurrentStyle_get_pageBreakAfter(This,p)	\
    (This)->lpVtbl -> get_pageBreakAfter(This,p)

#define IHTMLCurrentStyle_get_cursor(This,p)	\
    (This)->lpVtbl -> get_cursor(This,p)

#define IHTMLCurrentStyle_get_tableLayout(This,p)	\
    (This)->lpVtbl -> get_tableLayout(This,p)

#define IHTMLCurrentStyle_get_borderCollapse(This,p)	\
    (This)->lpVtbl -> get_borderCollapse(This,p)

#define IHTMLCurrentStyle_get_direction(This,p)	\
    (This)->lpVtbl -> get_direction(This,p)

#define IHTMLCurrentStyle_get_behavior(This,p)	\
    (This)->lpVtbl -> get_behavior(This,p)

#define IHTMLCurrentStyle_getAttribute(This,strAttributeName,lFlags,AttributeValue)	\
    (This)->lpVtbl -> getAttribute(This,strAttributeName,lFlags,AttributeValue)

#define IHTMLCurrentStyle_get_unicodeBidi(This,p)	\
    (This)->lpVtbl -> get_unicodeBidi(This,p)

#define IHTMLCurrentStyle_get_right(This,p)	\
    (This)->lpVtbl -> get_right(This,p)

#define IHTMLCurrentStyle_get_bottom(This,p)	\
    (This)->lpVtbl -> get_bottom(This,p)

#define IHTMLCurrentStyle_get_imeMode(This,p)	\
    (This)->lpVtbl -> get_imeMode(This,p)

#define IHTMLCurrentStyle_get_rubyAlign(This,p)	\
    (This)->lpVtbl -> get_rubyAlign(This,p)

#define IHTMLCurrentStyle_get_rubyPosition(This,p)	\
    (This)->lpVtbl -> get_rubyPosition(This,p)

#define IHTMLCurrentStyle_get_rubyOverhang(This,p)	\
    (This)->lpVtbl -> get_rubyOverhang(This,p)

#define IHTMLCurrentStyle_get_textAutospace(This,p)	\
    (This)->lpVtbl -> get_textAutospace(This,p)

#define IHTMLCurrentStyle_get_lineBreak(This,p)	\
    (This)->lpVtbl -> get_lineBreak(This,p)

#define IHTMLCurrentStyle_get_wordBreak(This,p)	\
    (This)->lpVtbl -> get_wordBreak(This,p)

#define IHTMLCurrentStyle_get_textJustify(This,p)	\
    (This)->lpVtbl -> get_textJustify(This,p)

#define IHTMLCurrentStyle_get_textJustifyTrim(This,p)	\
    (This)->lpVtbl -> get_textJustifyTrim(This,p)

#define IHTMLCurrentStyle_get_textKashida(This,p)	\
    (This)->lpVtbl -> get_textKashida(This,p)

#define IHTMLCurrentStyle_get_blockDirection(This,p)	\
    (This)->lpVtbl -> get_blockDirection(This,p)

#define IHTMLCurrentStyle_get_layoutGridChar(This,p)	\
    (This)->lpVtbl -> get_layoutGridChar(This,p)

#define IHTMLCurrentStyle_get_layoutGridLine(This,p)	\
    (This)->lpVtbl -> get_layoutGridLine(This,p)

#define IHTMLCurrentStyle_get_layoutGridMode(This,p)	\
    (This)->lpVtbl -> get_layoutGridMode(This,p)

#define IHTMLCurrentStyle_get_layoutGridType(This,p)	\
    (This)->lpVtbl -> get_layoutGridType(This,p)

#define IHTMLCurrentStyle_get_borderStyle(This,p)	\
    (This)->lpVtbl -> get_borderStyle(This,p)

#define IHTMLCurrentStyle_get_borderColor(This,p)	\
    (This)->lpVtbl -> get_borderColor(This,p)

#define IHTMLCurrentStyle_get_borderWidth(This,p)	\
    (This)->lpVtbl -> get_borderWidth(This,p)

#define IHTMLCurrentStyle_get_padding(This,p)	\
    (This)->lpVtbl -> get_padding(This,p)

#define IHTMLCurrentStyle_get_margin(This,p)	\
    (This)->lpVtbl -> get_margin(This,p)

#define IHTMLCurrentStyle_get_accelerator(This,p)	\
    (This)->lpVtbl -> get_accelerator(This,p)

#define IHTMLCurrentStyle_get_overflowX(This,p)	\
    (This)->lpVtbl -> get_overflowX(This,p)

#define IHTMLCurrentStyle_get_overflowY(This,p)	\
    (This)->lpVtbl -> get_overflowY(This,p)

#define IHTMLCurrentStyle_get_textTransform(This,p)	\
    (This)->lpVtbl -> get_textTransform(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_position_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_styleFloat_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_styleFloat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_color_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_backgroundColor_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_backgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_fontFamily_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_fontFamily_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_fontStyle_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_fontStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_fontVariant_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_fontVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_fontWeight_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_fontWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_fontSize_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_fontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_backgroundImage_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_backgroundImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_backgroundPositionX_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_backgroundPositionX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_backgroundPositionY_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_backgroundPositionY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_backgroundRepeat_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_backgroundRepeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderLeftColor_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderLeftColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderTopColor_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderTopColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderRightColor_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderRightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderBottomColor_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderBottomColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderTopStyle_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderTopStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderRightStyle_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderRightStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderBottomStyle_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderBottomStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderLeftStyle_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderLeftStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderTopWidth_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderTopWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderRightWidth_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderRightWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderBottomWidth_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderBottomWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderLeftWidth_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderLeftWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_left_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_top_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_width_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_height_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_paddingLeft_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_paddingLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_paddingTop_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_paddingTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_paddingRight_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_paddingRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_paddingBottom_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_paddingBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textAlign_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textDecoration_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_display_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_visibility_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_zIndex_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_letterSpacing_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_letterSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_lineHeight_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_lineHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textIndent_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textIndent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_verticalAlign_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_verticalAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_backgroundAttachment_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_backgroundAttachment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_marginTop_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_marginTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_marginRight_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_marginRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_marginBottom_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_marginBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_marginLeft_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_marginLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_clear_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_listStyleType_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_listStylePosition_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_listStyleImage_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_clipTop_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_clipTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_clipRight_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_clipRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_clipBottom_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_clipBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_clipLeft_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_clipLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_overflow_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_pageBreakBefore_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_pageBreakAfter_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_cursor_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_tableLayout_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_tableLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderCollapse_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderCollapse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_direction_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_behavior_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_behavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_getAttribute_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT __RPC_FAR *AttributeValue);


void __RPC_STUB IHTMLCurrentStyle_getAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_unicodeBidi_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_unicodeBidi_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_right_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_bottom_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_imeMode_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_imeMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_rubyAlign_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_rubyAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_rubyPosition_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_rubyPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_rubyOverhang_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_rubyOverhang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textAutospace_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textAutospace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_lineBreak_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_lineBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_wordBreak_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_wordBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textJustify_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textJustify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textJustifyTrim_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textJustifyTrim_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textKashida_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textKashida_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_blockDirection_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_blockDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_layoutGridChar_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_layoutGridChar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_layoutGridLine_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_layoutGridLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_layoutGridMode_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_layoutGridMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_layoutGridType_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_layoutGridType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderStyle_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderColor_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderWidth_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_padding_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_padding_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_margin_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_margin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_accelerator_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_accelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_overflowX_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_overflowX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_overflowY_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_overflowY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textTransform_Proxy( 
    IHTMLCurrentStyle __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLCurrentStyle_INTERFACE_DEFINED__ */


#ifndef __IHTMLCurrentStyle2_INTERFACE_DEFINED__
#define __IHTMLCurrentStyle2_INTERFACE_DEFINED__

/* interface IHTMLCurrentStyle2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCurrentStyle2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f658-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCurrentStyle2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutFlow( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordWrap( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textUnderlinePosition( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_hasLayout( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarBaseColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarFaceColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbar3dLightColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarShadowColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarHighlightColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarDarkShadowColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarArrowColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarTrackColor( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_writingMode( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zoom( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_filter( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlignLast( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashidaSpace( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][restricted][hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_isBlock( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLCurrentStyle2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLCurrentStyle2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLCurrentStyle2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_layoutFlow )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_wordWrap )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textUnderlinePosition )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_hasLayout )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarBaseColor )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarFaceColor )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbar3dLightColor )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarShadowColor )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarHighlightColor )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarDarkShadowColor )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarArrowColor )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollbarTrackColor )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_writingMode )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_zoom )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_filter )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textAlignLast )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textKashidaSpace )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [nonbrowsable][restricted][hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_isBlock )( 
            IHTMLCurrentStyle2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLCurrentStyle2Vtbl;

    interface IHTMLCurrentStyle2
    {
        CONST_VTBL struct IHTMLCurrentStyle2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLCurrentStyle2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLCurrentStyle2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLCurrentStyle2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLCurrentStyle2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLCurrentStyle2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLCurrentStyle2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLCurrentStyle2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLCurrentStyle2_get_layoutFlow(This,p)	\
    (This)->lpVtbl -> get_layoutFlow(This,p)

#define IHTMLCurrentStyle2_get_wordWrap(This,p)	\
    (This)->lpVtbl -> get_wordWrap(This,p)

#define IHTMLCurrentStyle2_get_textUnderlinePosition(This,p)	\
    (This)->lpVtbl -> get_textUnderlinePosition(This,p)

#define IHTMLCurrentStyle2_get_hasLayout(This,p)	\
    (This)->lpVtbl -> get_hasLayout(This,p)

#define IHTMLCurrentStyle2_get_scrollbarBaseColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarBaseColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbarFaceColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarFaceColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbar3dLightColor(This,p)	\
    (This)->lpVtbl -> get_scrollbar3dLightColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbarShadowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarShadowColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbarHighlightColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarHighlightColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbarDarkShadowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarDarkShadowColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbarArrowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarArrowColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbarTrackColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarTrackColor(This,p)

#define IHTMLCurrentStyle2_get_writingMode(This,p)	\
    (This)->lpVtbl -> get_writingMode(This,p)

#define IHTMLCurrentStyle2_get_zoom(This,p)	\
    (This)->lpVtbl -> get_zoom(This,p)

#define IHTMLCurrentStyle2_get_filter(This,p)	\
    (This)->lpVtbl -> get_filter(This,p)

#define IHTMLCurrentStyle2_get_textAlignLast(This,p)	\
    (This)->lpVtbl -> get_textAlignLast(This,p)

#define IHTMLCurrentStyle2_get_textKashidaSpace(This,p)	\
    (This)->lpVtbl -> get_textKashidaSpace(This,p)

#define IHTMLCurrentStyle2_get_isBlock(This,p)	\
    (This)->lpVtbl -> get_isBlock(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_layoutFlow_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_layoutFlow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_wordWrap_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_wordWrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_textUnderlinePosition_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_textUnderlinePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_hasLayout_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_hasLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarBaseColor_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarBaseColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarFaceColor_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarFaceColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbar3dLightColor_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbar3dLightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarShadowColor_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarHighlightColor_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarHighlightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarDarkShadowColor_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarDarkShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarArrowColor_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarArrowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarTrackColor_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarTrackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_writingMode_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_writingMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_zoom_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_zoom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_filter_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_textAlignLast_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_textAlignLast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_textKashidaSpace_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_textKashidaSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][restricted][hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_isBlock_Proxy( 
    IHTMLCurrentStyle2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_isBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLCurrentStyle2_INTERFACE_DEFINED__ */


#ifndef __IHTMLCurrentStyle3_INTERFACE_DEFINED__
#define __IHTMLCurrentStyle3_INTERFACE_DEFINED__

/* interface IHTMLCurrentStyle3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCurrentStyle3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f818-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCurrentStyle3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textOverflow( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minHeight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordSpacing( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_whiteSpace( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLCurrentStyle3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLCurrentStyle3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLCurrentStyle3 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLCurrentStyle3 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLCurrentStyle3 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLCurrentStyle3 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLCurrentStyle3 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLCurrentStyle3 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_textOverflow )( 
            IHTMLCurrentStyle3 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_minHeight )( 
            IHTMLCurrentStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_wordSpacing )( 
            IHTMLCurrentStyle3 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_whiteSpace )( 
            IHTMLCurrentStyle3 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLCurrentStyle3Vtbl;

    interface IHTMLCurrentStyle3
    {
        CONST_VTBL struct IHTMLCurrentStyle3Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLCurrentStyle3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLCurrentStyle3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLCurrentStyle3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLCurrentStyle3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLCurrentStyle3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLCurrentStyle3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLCurrentStyle3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLCurrentStyle3_get_textOverflow(This,p)	\
    (This)->lpVtbl -> get_textOverflow(This,p)

#define IHTMLCurrentStyle3_get_minHeight(This,p)	\
    (This)->lpVtbl -> get_minHeight(This,p)

#define IHTMLCurrentStyle3_get_wordSpacing(This,p)	\
    (This)->lpVtbl -> get_wordSpacing(This,p)

#define IHTMLCurrentStyle3_get_whiteSpace(This,p)	\
    (This)->lpVtbl -> get_whiteSpace(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle3_get_textOverflow_Proxy( 
    IHTMLCurrentStyle3 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle3_get_textOverflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle3_get_minHeight_Proxy( 
    IHTMLCurrentStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle3_get_minHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle3_get_wordSpacing_Proxy( 
    IHTMLCurrentStyle3 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle3_get_wordSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle3_get_whiteSpace_Proxy( 
    IHTMLCurrentStyle3 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle3_get_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLCurrentStyle3_INTERFACE_DEFINED__ */


#ifndef __IHTMLCurrentStyle4_INTERFACE_DEFINED__
#define __IHTMLCurrentStyle4_INTERFACE_DEFINED__

/* interface IHTMLCurrentStyle4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCurrentStyle4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f33b-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCurrentStyle4 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_msInterpolationMode( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxHeight( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxWidth( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLCurrentStyle4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLCurrentStyle4 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLCurrentStyle4 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLCurrentStyle4 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLCurrentStyle4 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLCurrentStyle4 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLCurrentStyle4 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLCurrentStyle4 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_msInterpolationMode )( 
            IHTMLCurrentStyle4 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_maxHeight )( 
            IHTMLCurrentStyle4 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_minWidth )( 
            IHTMLCurrentStyle4 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_maxWidth )( 
            IHTMLCurrentStyle4 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLCurrentStyle4Vtbl;

    interface IHTMLCurrentStyle4
    {
        CONST_VTBL struct IHTMLCurrentStyle4Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLCurrentStyle4_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLCurrentStyle4_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLCurrentStyle4_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLCurrentStyle4_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLCurrentStyle4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLCurrentStyle4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLCurrentStyle4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLCurrentStyle4_get_msInterpolationMode(This,p)	\
    (This)->lpVtbl -> get_msInterpolationMode(This,p)

#define IHTMLCurrentStyle4_get_maxHeight(This,p)	\
    (This)->lpVtbl -> get_maxHeight(This,p)

#define IHTMLCurrentStyle4_get_minWidth(This,p)	\
    (This)->lpVtbl -> get_minWidth(This,p)

#define IHTMLCurrentStyle4_get_maxWidth(This,p)	\
    (This)->lpVtbl -> get_maxWidth(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle4_get_msInterpolationMode_Proxy( 
    IHTMLCurrentStyle4 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle4_get_msInterpolationMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle4_get_maxHeight_Proxy( 
    IHTMLCurrentStyle4 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle4_get_maxHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle4_get_minWidth_Proxy( 
    IHTMLCurrentStyle4 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle4_get_minWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle4_get_maxWidth_Proxy( 
    IHTMLCurrentStyle4 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLCurrentStyle4_get_maxWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLCurrentStyle4_INTERFACE_DEFINED__ */


#ifndef __DispHTMLCurrentStyle_DISPINTERFACE_DEFINED__
#define __DispHTMLCurrentStyle_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLCurrentStyle */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLCurrentStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f557-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLCurrentStyle : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLCurrentStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            DispHTMLCurrentStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            DispHTMLCurrentStyle __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            DispHTMLCurrentStyle __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            DispHTMLCurrentStyle __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            DispHTMLCurrentStyle __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            DispHTMLCurrentStyle __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            DispHTMLCurrentStyle __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } DispHTMLCurrentStyleVtbl;

    interface DispHTMLCurrentStyle
    {
        CONST_VTBL struct DispHTMLCurrentStyleVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLCurrentStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispHTMLCurrentStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispHTMLCurrentStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispHTMLCurrentStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispHTMLCurrentStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispHTMLCurrentStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispHTMLCurrentStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLCurrentStyle_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLCurrentStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3dc-98b5-11cf-bb82-00aa00bdce0b")
HTMLCurrentStyle;
#endif

#ifndef __IHTMLElement_INTERFACE_DEFINED__
#define __IHTMLElement_INTERFACE_DEFINED__

/* interface IHTMLElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f1ff-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLElement : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags = 1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT __RPC_FAR *AttributeValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_className( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_className( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_id( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_id( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_tagName( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentElement( 
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][id][propget] */ HRESULT STDMETHODCALLTYPE get_style( 
            /* [out][retval] */ IHTMLStyle __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onhelp( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onhelp( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onclick( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onclick( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondblclick( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondblclick( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onkeydown( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onkeydown( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onkeyup( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onkeyup( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onkeypress( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onkeypress( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseout( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseout( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseover( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseover( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmousemove( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmousemove( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmousedown( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmousedown( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseup( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseup( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_document( 
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_title( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_title( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_language( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_language( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onselectstart( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onselectstart( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE scrollIntoView( 
            /* [in][optional] */ VARIANT varargStart) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE contains( 
            /* [in] */ IHTMLElement __RPC_FAR *pChild,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfResult) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_sourceIndex( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_recordNumber( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_lang( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_lang( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetLeft( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetTop( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetWidth( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetHeight( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetParent( 
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_innerHTML( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_innerHTML( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_innerText( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_innerText( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_outerHTML( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_outerHTML( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_outerText( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_outerText( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertAdjacentHTML( 
            /* [in] */ BSTR where,
            /* [in] */ BSTR html) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertAdjacentText( 
            /* [in] */ BSTR where,
            /* [in] */ BSTR text) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentTextEdit( 
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_isTextEdit( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE click( void) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_filters( 
            /* [out][retval] */ IHTMLFiltersCollection __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondragstart( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondragstart( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ BSTR __RPC_FAR *String) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeupdate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeupdate( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onafterupdate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onafterupdate( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onerrorupdate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onerrorupdate( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowexit( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowexit( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowenter( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowenter( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondatasetchanged( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondatasetchanged( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondataavailable( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondataavailable( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondatasetcomplete( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondatasetcomplete( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onfilterchange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onfilterchange( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_children( 
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_all( 
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLElement __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLElement __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLElement __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *setAttribute )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getAttribute )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT __RPC_FAR *AttributeValue);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *removeAttribute )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess);
        
        /* [bindable][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_className )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_className )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_id )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_id )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_tagName )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_parentElement )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p);
        
        /* [nonbrowsable][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_style )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ IHTMLStyle __RPC_FAR *__RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onhelp )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onhelp )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onclick )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onclick )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ondblclick )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ondblclick )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onkeydown )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onkeydown )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onkeyup )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onkeyup )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onkeypress )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onkeypress )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onmouseout )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onmouseout )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onmouseover )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onmouseover )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onmousemove )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onmousemove )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onmousedown )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onmousedown )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onmouseup )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onmouseup )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_document )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_title )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_title )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_language )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_language )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onselectstart )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onselectstart )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *scrollIntoView )( 
            IHTMLElement __RPC_FAR * This,
            /* [in][optional] */ VARIANT varargStart);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *contains )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ IHTMLElement __RPC_FAR *pChild,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfResult);
        
        /* [bindable][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_sourceIndex )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_recordNumber )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_lang )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_lang )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_offsetLeft )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_offsetTop )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_offsetWidth )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_offsetHeight )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_offsetParent )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_innerHTML )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_innerHTML )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_innerText )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_innerText )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_outerHTML )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_outerHTML )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_outerText )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_outerText )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *insertAdjacentHTML )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR where,
            /* [in] */ BSTR html);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *insertAdjacentText )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ BSTR where,
            /* [in] */ BSTR text);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_parentTextEdit )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_isTextEdit )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *click )( 
            IHTMLElement __RPC_FAR * This);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_filters )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ IHTMLFiltersCollection __RPC_FAR *__RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ondragstart )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ondragstart )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *toString )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *String);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onbeforeupdate )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onbeforeupdate )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onafterupdate )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onafterupdate )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onerrorupdate )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onerrorupdate )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onrowexit )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onrowexit )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onrowenter )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onrowenter )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ondatasetchanged )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ondatasetchanged )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ondataavailable )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ondataavailable )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ondatasetcomplete )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ondatasetcomplete )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onfilterchange )( 
            IHTMLElement __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onfilterchange )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_children )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_all )( 
            IHTMLElement __RPC_FAR * This,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLElementVtbl;

    interface IHTMLElement
    {
        CONST_VTBL struct IHTMLElementVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLElement_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLElement_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLElement_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLElement_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLElement_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLElement_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLElement_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLElement_setAttribute(This,strAttributeName,AttributeValue,lFlags)	\
    (This)->lpVtbl -> setAttribute(This,strAttributeName,AttributeValue,lFlags)

#define IHTMLElement_getAttribute(This,strAttributeName,lFlags,AttributeValue)	\
    (This)->lpVtbl -> getAttribute(This,strAttributeName,lFlags,AttributeValue)

#define IHTMLElement_removeAttribute(This,strAttributeName,lFlags,pfSuccess)	\
    (This)->lpVtbl -> removeAttribute(This,strAttributeName,lFlags,pfSuccess)

#define IHTMLElement_put_className(This,v)	\
    (This)->lpVtbl -> put_className(This,v)

#define IHTMLElement_get_className(This,p)	\
    (This)->lpVtbl -> get_className(This,p)

#define IHTMLElement_put_id(This,v)	\
    (This)->lpVtbl -> put_id(This,v)

#define IHTMLElement_get_id(This,p)	\
    (This)->lpVtbl -> get_id(This,p)

#define IHTMLElement_get_tagName(This,p)	\
    (This)->lpVtbl -> get_tagName(This,p)

#define IHTMLElement_get_parentElement(This,p)	\
    (This)->lpVtbl -> get_parentElement(This,p)

#define IHTMLElement_get_style(This,p)	\
    (This)->lpVtbl -> get_style(This,p)

#define IHTMLElement_put_onhelp(This,v)	\
    (This)->lpVtbl -> put_onhelp(This,v)

#define IHTMLElement_get_onhelp(This,p)	\
    (This)->lpVtbl -> get_onhelp(This,p)

#define IHTMLElement_put_onclick(This,v)	\
    (This)->lpVtbl -> put_onclick(This,v)

#define IHTMLElement_get_onclick(This,p)	\
    (This)->lpVtbl -> get_onclick(This,p)

#define IHTMLElement_put_ondblclick(This,v)	\
    (This)->lpVtbl -> put_ondblclick(This,v)

#define IHTMLElement_get_ondblclick(This,p)	\
    (This)->lpVtbl -> get_ondblclick(This,p)

#define IHTMLElement_put_onkeydown(This,v)	\
    (This)->lpVtbl -> put_onkeydown(This,v)

#define IHTMLElement_get_onkeydown(This,p)	\
    (This)->lpVtbl -> get_onkeydown(This,p)

#define IHTMLElement_put_onkeyup(This,v)	\
    (This)->lpVtbl -> put_onkeyup(This,v)

#define IHTMLElement_get_onkeyup(This,p)	\
    (This)->lpVtbl -> get_onkeyup(This,p)

#define IHTMLElement_put_onkeypress(This,v)	\
    (This)->lpVtbl -> put_onkeypress(This,v)

#define IHTMLElement_get_onkeypress(This,p)	\
    (This)->lpVtbl -> get_onkeypress(This,p)

#define IHTMLElement_put_onmouseout(This,v)	\
    (This)->lpVtbl -> put_onmouseout(This,v)

#define IHTMLElement_get_onmouseout(This,p)	\
    (This)->lpVtbl -> get_onmouseout(This,p)

#define IHTMLElement_put_onmouseover(This,v)	\
    (This)->lpVtbl -> put_onmouseover(This,v)

#define IHTMLElement_get_onmouseover(This,p)	\
    (This)->lpVtbl -> get_onmouseover(This,p)

#define IHTMLElement_put_onmousemove(This,v)	\
    (This)->lpVtbl -> put_onmousemove(This,v)

#define IHTMLElement_get_onmousemove(This,p)	\
    (This)->lpVtbl -> get_onmousemove(This,p)

#define IHTMLElement_put_onmousedown(This,v)	\
    (This)->lpVtbl -> put_onmousedown(This,v)

#define IHTMLElement_get_onmousedown(This,p)	\
    (This)->lpVtbl -> get_onmousedown(This,p)

#define IHTMLElement_put_onmouseup(This,v)	\
    (This)->lpVtbl -> put_onmouseup(This,v)

#define IHTMLElement_get_onmouseup(This,p)	\
    (This)->lpVtbl -> get_onmouseup(This,p)

#define IHTMLElement_get_document(This,p)	\
    (This)->lpVtbl -> get_document(This,p)

#define IHTMLElement_put_title(This,v)	\
    (This)->lpVtbl -> put_title(This,v)

#define IHTMLElement_get_title(This,p)	\
    (This)->lpVtbl -> get_title(This,p)

#define IHTMLElement_put_language(This,v)	\
    (This)->lpVtbl -> put_language(This,v)

#define IHTMLElement_get_language(This,p)	\
    (This)->lpVtbl -> get_language(This,p)

#define IHTMLElement_put_onselectstart(This,v)	\
    (This)->lpVtbl -> put_onselectstart(This,v)

#define IHTMLElement_get_onselectstart(This,p)	\
    (This)->lpVtbl -> get_onselectstart(This,p)

#define IHTMLElement_scrollIntoView(This,varargStart)	\
    (This)->lpVtbl -> scrollIntoView(This,varargStart)

#define IHTMLElement_contains(This,pChild,pfResult)	\
    (This)->lpVtbl -> contains(This,pChild,pfResult)

#define IHTMLElement_get_sourceIndex(This,p)	\
    (This)->lpVtbl -> get_sourceIndex(This,p)

#define IHTMLElement_get_recordNumber(This,p)	\
    (This)->lpVtbl -> get_recordNumber(This,p)

#define IHTMLElement_put_lang(This,v)	\
    (This)->lpVtbl -> put_lang(This,v)

#define IHTMLElement_get_lang(This,p)	\
    (This)->lpVtbl -> get_lang(This,p)

#define IHTMLElement_get_offsetLeft(This,p)	\
    (This)->lpVtbl -> get_offsetLeft(This,p)

#define IHTMLElement_get_offsetTop(This,p)	\
    (This)->lpVtbl -> get_offsetTop(This,p)

#define IHTMLElement_get_offsetWidth(This,p)	\
    (This)->lpVtbl -> get_offsetWidth(This,p)

#define IHTMLElement_get_offsetHeight(This,p)	\
    (This)->lpVtbl -> get_offsetHeight(This,p)

#define IHTMLElement_get_offsetParent(This,p)	\
    (This)->lpVtbl -> get_offsetParent(This,p)

#define IHTMLElement_put_innerHTML(This,v)	\
    (This)->lpVtbl -> put_innerHTML(This,v)

#define IHTMLElement_get_innerHTML(This,p)	\
    (This)->lpVtbl -> get_innerHTML(This,p)

#define IHTMLElement_put_innerText(This,v)	\
    (This)->lpVtbl -> put_innerText(This,v)

#define IHTMLElement_get_innerText(This,p)	\
    (This)->lpVtbl -> get_innerText(This,p)

#define IHTMLElement_put_outerHTML(This,v)	\
    (This)->lpVtbl -> put_outerHTML(This,v)

#define IHTMLElement_get_outerHTML(This,p)	\
    (This)->lpVtbl -> get_outerHTML(This,p)

#define IHTMLElement_put_outerText(This,v)	\
    (This)->lpVtbl -> put_outerText(This,v)

#define IHTMLElement_get_outerText(This,p)	\
    (This)->lpVtbl -> get_outerText(This,p)

#define IHTMLElement_insertAdjacentHTML(This,where,html)	\
    (This)->lpVtbl -> insertAdjacentHTML(This,where,html)

#define IHTMLElement_insertAdjacentText(This,where,text)	\
    (This)->lpVtbl -> insertAdjacentText(This,where,text)

#define IHTMLElement_get_parentTextEdit(This,p)	\
    (This)->lpVtbl -> get_parentTextEdit(This,p)

#define IHTMLElement_get_isTextEdit(This,p)	\
    (This)->lpVtbl -> get_isTextEdit(This,p)

#define IHTMLElement_click(This)	\
    (This)->lpVtbl -> click(This)

#define IHTMLElement_get_filters(This,p)	\
    (This)->lpVtbl -> get_filters(This,p)

#define IHTMLElement_put_ondragstart(This,v)	\
    (This)->lpVtbl -> put_ondragstart(This,v)

#define IHTMLElement_get_ondragstart(This,p)	\
    (This)->lpVtbl -> get_ondragstart(This,p)

#define IHTMLElement_toString(This,String)	\
    (This)->lpVtbl -> toString(This,String)

#define IHTMLElement_put_onbeforeupdate(This,v)	\
    (This)->lpVtbl -> put_onbeforeupdate(This,v)

#define IHTMLElement_get_onbeforeupdate(This,p)	\
    (This)->lpVtbl -> get_onbeforeupdate(This,p)

#define IHTMLElement_put_onafterupdate(This,v)	\
    (This)->lpVtbl -> put_onafterupdate(This,v)

#define IHTMLElement_get_onafterupdate(This,p)	\
    (This)->lpVtbl -> get_onafterupdate(This,p)

#define IHTMLElement_put_onerrorupdate(This,v)	\
    (This)->lpVtbl -> put_onerrorupdate(This,v)

#define IHTMLElement_get_onerrorupdate(This,p)	\
    (This)->lpVtbl -> get_onerrorupdate(This,p)

#define IHTMLElement_put_onrowexit(This,v)	\
    (This)->lpVtbl -> put_onrowexit(This,v)

#define IHTMLElement_get_onrowexit(This,p)	\
    (This)->lpVtbl -> get_onrowexit(This,p)

#define IHTMLElement_put_onrowenter(This,v)	\
    (This)->lpVtbl -> put_onrowenter(This,v)

#define IHTMLElement_get_onrowenter(This,p)	\
    (This)->lpVtbl -> get_onrowenter(This,p)

#define IHTMLElement_put_ondatasetchanged(This,v)	\
    (This)->lpVtbl -> put_ondatasetchanged(This,v)

#define IHTMLElement_get_ondatasetchanged(This,p)	\
    (This)->lpVtbl -> get_ondatasetchanged(This,p)

#define IHTMLElement_put_ondataavailable(This,v)	\
    (This)->lpVtbl -> put_ondataavailable(This,v)

#define IHTMLElement_get_ondataavailable(This,p)	\
    (This)->lpVtbl -> get_ondataavailable(This,p)

#define IHTMLElement_put_ondatasetcomplete(This,v)	\
    (This)->lpVtbl -> put_ondatasetcomplete(This,v)

#define IHTMLElement_get_ondatasetcomplete(This,p)	\
    (This)->lpVtbl -> get_ondatasetcomplete(This,p)

#define IHTMLElement_put_onfilterchange(This,v)	\
    (This)->lpVtbl -> put_onfilterchange(This,v)

#define IHTMLElement_get_onfilterchange(This,p)	\
    (This)->lpVtbl -> get_onfilterchange(This,p)

#define IHTMLElement_get_children(This,p)	\
    (This)->lpVtbl -> get_children(This,p)

#define IHTMLElement_get_all(This,p)	\
    (This)->lpVtbl -> get_all(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_setAttribute_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR strAttributeName,
    /* [in] */ VARIANT AttributeValue,
    /* [in][defaultvalue] */ LONG lFlags);


void __RPC_STUB IHTMLElement_setAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_getAttribute_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT __RPC_FAR *AttributeValue);


void __RPC_STUB IHTMLElement_getAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_removeAttribute_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess);


void __RPC_STUB IHTMLElement_removeAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_className_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_className_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_className_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_className_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_id_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_id_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_id_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_id_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_tagName_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_tagName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_parentElement_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_parentElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_style_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ IHTMLStyle __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_style_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onhelp_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onhelp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onhelp_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onhelp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onclick_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onclick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onclick_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onclick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_ondblclick_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_ondblclick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_ondblclick_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_ondblclick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onkeydown_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onkeydown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onkeydown_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onkeydown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onkeyup_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onkeyup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onkeyup_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onkeyup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onkeypress_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onkeypress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onkeypress_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onkeypress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onmouseout_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onmouseout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onmouseout_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onmouseout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onmouseover_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onmouseover_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onmouseover_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onmouseover_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onmousemove_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onmousemove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onmousemove_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onmousemove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onmousedown_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onmousedown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onmousedown_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onmousedown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onmouseup_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onmouseup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onmouseup_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onmouseup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_document_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_document_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_title_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_title_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_title_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_title_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_language_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_language_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onselectstart_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onselectstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onselectstart_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onselectstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_scrollIntoView_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in][optional] */ VARIANT varargStart);


void __RPC_STUB IHTMLElement_scrollIntoView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_contains_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ IHTMLElement __RPC_FAR *pChild,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfResult);


void __RPC_STUB IHTMLElement_contains_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_sourceIndex_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_sourceIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_recordNumber_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_recordNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_lang_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_lang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_lang_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_lang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_offsetLeft_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_offsetLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_offsetTop_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_offsetTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_offsetWidth_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_offsetWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_offsetHeight_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_offsetHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_offsetParent_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_offsetParent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_innerHTML_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_innerHTML_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_innerHTML_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_innerHTML_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_innerText_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_innerText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_innerText_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_innerText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_outerHTML_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_outerHTML_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_outerHTML_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_outerHTML_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_outerText_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_outerText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_outerText_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_outerText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_insertAdjacentHTML_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR where,
    /* [in] */ BSTR html);


void __RPC_STUB IHTMLElement_insertAdjacentHTML_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_insertAdjacentText_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ BSTR where,
    /* [in] */ BSTR text);


void __RPC_STUB IHTMLElement_insertAdjacentText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_parentTextEdit_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_parentTextEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_isTextEdit_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_isTextEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_click_Proxy( 
    IHTMLElement __RPC_FAR * This);


void __RPC_STUB IHTMLElement_click_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_filters_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ IHTMLFiltersCollection __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_filters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_ondragstart_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_ondragstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_ondragstart_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_ondragstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_toString_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *String);


void __RPC_STUB IHTMLElement_toString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onbeforeupdate_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onbeforeupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onbeforeupdate_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onbeforeupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onafterupdate_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onafterupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onafterupdate_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onafterupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onerrorupdate_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onerrorupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onerrorupdate_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onerrorupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onrowexit_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onrowexit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onrowexit_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onrowexit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onrowenter_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onrowenter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onrowenter_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onrowenter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_ondatasetchanged_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_ondatasetchanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_ondatasetchanged_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_ondatasetchanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_ondataavailable_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_ondataavailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_ondataavailable_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_ondataavailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_ondatasetcomplete_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_ondatasetcomplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_ondatasetcomplete_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_ondatasetcomplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onfilterchange_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onfilterchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onfilterchange_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_onfilterchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_children_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_children_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_all_Proxy( 
    IHTMLElement __RPC_FAR * This,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLElement_get_all_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLRect_INTERFACE_DEFINED__
#define __IHTMLRect_INTERFACE_DEFINED__

/* interface IHTMLRect */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRect;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a3-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRect : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_left( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_left( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_top( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_right( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_right( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_bottom( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bottom( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLRect __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLRect __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLRect __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLRect __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLRect __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLRect __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLRect __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_left )( 
            IHTMLRect __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_left )( 
            IHTMLRect __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_top )( 
            IHTMLRect __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_top )( 
            IHTMLRect __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_right )( 
            IHTMLRect __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_right )( 
            IHTMLRect __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_bottom )( 
            IHTMLRect __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_bottom )( 
            IHTMLRect __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLRectVtbl;

    interface IHTMLRect
    {
        CONST_VTBL struct IHTMLRectVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRect_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRect_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRect_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRect_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRect_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRect_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRect_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRect_put_left(This,v)	\
    (This)->lpVtbl -> put_left(This,v)

#define IHTMLRect_get_left(This,p)	\
    (This)->lpVtbl -> get_left(This,p)

#define IHTMLRect_put_top(This,v)	\
    (This)->lpVtbl -> put_top(This,v)

#define IHTMLRect_get_top(This,p)	\
    (This)->lpVtbl -> get_top(This,p)

#define IHTMLRect_put_right(This,v)	\
    (This)->lpVtbl -> put_right(This,v)

#define IHTMLRect_get_right(This,p)	\
    (This)->lpVtbl -> get_right(This,p)

#define IHTMLRect_put_bottom(This,v)	\
    (This)->lpVtbl -> put_bottom(This,v)

#define IHTMLRect_get_bottom(This,p)	\
    (This)->lpVtbl -> get_bottom(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRect_put_left_Proxy( 
    IHTMLRect __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRect_put_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRect_get_left_Proxy( 
    IHTMLRect __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLRect_get_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRect_put_top_Proxy( 
    IHTMLRect __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRect_put_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRect_get_top_Proxy( 
    IHTMLRect __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLRect_get_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRect_put_right_Proxy( 
    IHTMLRect __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRect_put_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRect_get_right_Proxy( 
    IHTMLRect __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLRect_get_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRect_put_bottom_Proxy( 
    IHTMLRect __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRect_put_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRect_get_bottom_Proxy( 
    IHTMLRect __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLRect_get_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRect_INTERFACE_DEFINED__ */


#ifndef __IHTMLRectCollection_INTERFACE_DEFINED__
#define __IHTMLRectCollection_INTERFACE_DEFINED__

/* interface IHTMLRectCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRectCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a4-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRectCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ VARIANT __RPC_FAR *pvarIndex,
            /* [out][retval] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRectCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLRectCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLRectCollection __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLRectCollection __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLRectCollection __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLRectCollection __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLRectCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLRectCollection __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_length )( 
            IHTMLRectCollection __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__newEnum )( 
            IHTMLRectCollection __RPC_FAR * This,
            /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *item )( 
            IHTMLRectCollection __RPC_FAR * This,
            /* [in] */ VARIANT __RPC_FAR *pvarIndex,
            /* [out][retval] */ VARIANT __RPC_FAR *pvarResult);
        
        END_INTERFACE
    } IHTMLRectCollectionVtbl;

    interface IHTMLRectCollection
    {
        CONST_VTBL struct IHTMLRectCollectionVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRectCollection_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRectCollection_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRectCollection_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRectCollection_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRectCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRectCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRectCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRectCollection_get_length(This,p)	\
    (This)->lpVtbl -> get_length(This,p)

#define IHTMLRectCollection_get__newEnum(This,p)	\
    (This)->lpVtbl -> get__newEnum(This,p)

#define IHTMLRectCollection_item(This,pvarIndex,pvarResult)	\
    (This)->lpVtbl -> item(This,pvarIndex,pvarResult)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRectCollection_get_length_Proxy( 
    IHTMLRectCollection __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLRectCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRectCollection_get__newEnum_Proxy( 
    IHTMLRectCollection __RPC_FAR * This,
    /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLRectCollection_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLRectCollection_item_Proxy( 
    IHTMLRectCollection __RPC_FAR * This,
    /* [in] */ VARIANT __RPC_FAR *pvarIndex,
    /* [out][retval] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB IHTMLRectCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRectCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMNode_INTERFACE_DEFINED__
#define __IHTMLDOMNode_INTERFACE_DEFINED__

/* interface IHTMLDOMNode */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMNode;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f5da-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMNode : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeType( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentNode( 
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hasChildNodes( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *fChildren) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_childNodes( 
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_attributes( 
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertBefore( 
            /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
            /* [in][optional] */ VARIANT refChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeChild( 
            /* [in] */ IHTMLDOMNode __RPC_FAR *oldChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceChild( 
            /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
            /* [in] */ IHTMLDOMNode __RPC_FAR *oldChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE cloneNode( 
            /* [in] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *clonedNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeNode( 
            /* [in][defaultvalue] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *removed) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE swapNode( 
            /* [in] */ IHTMLDOMNode __RPC_FAR *otherNode,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *swappedNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceNode( 
            /* [in] */ IHTMLDOMNode __RPC_FAR *replacement,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *replaced) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE appendChild( 
            /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeName( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_nodeValue( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeValue( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_firstChild( 
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_lastChild( 
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_previousSibling( 
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nextSibling( 
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMNodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLDOMNode __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLDOMNode __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_nodeType )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_parentNode )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *hasChildNodes )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *fChildren);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_childNodes )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_attributes )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *insertBefore )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
            /* [in][optional] */ VARIANT refChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *removeChild )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in] */ IHTMLDOMNode __RPC_FAR *oldChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *replaceChild )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
            /* [in] */ IHTMLDOMNode __RPC_FAR *oldChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *cloneNode )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *clonedNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *removeNode )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in][defaultvalue] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *removed);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *swapNode )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in] */ IHTMLDOMNode __RPC_FAR *otherNode,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *swappedNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *replaceNode )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in] */ IHTMLDOMNode __RPC_FAR *replacement,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *replaced);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *appendChild )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_nodeName )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_nodeValue )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_nodeValue )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_firstChild )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_lastChild )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_previousSibling )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_nextSibling )( 
            IHTMLDOMNode __RPC_FAR * This,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLDOMNodeVtbl;

    interface IHTMLDOMNode
    {
        CONST_VTBL struct IHTMLDOMNodeVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMNode_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLDOMNode_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLDOMNode_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLDOMNode_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLDOMNode_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLDOMNode_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLDOMNode_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLDOMNode_get_nodeType(This,p)	\
    (This)->lpVtbl -> get_nodeType(This,p)

#define IHTMLDOMNode_get_parentNode(This,p)	\
    (This)->lpVtbl -> get_parentNode(This,p)

#define IHTMLDOMNode_hasChildNodes(This,fChildren)	\
    (This)->lpVtbl -> hasChildNodes(This,fChildren)

#define IHTMLDOMNode_get_childNodes(This,p)	\
    (This)->lpVtbl -> get_childNodes(This,p)

#define IHTMLDOMNode_get_attributes(This,p)	\
    (This)->lpVtbl -> get_attributes(This,p)

#define IHTMLDOMNode_insertBefore(This,newChild,refChild,node)	\
    (This)->lpVtbl -> insertBefore(This,newChild,refChild,node)

#define IHTMLDOMNode_removeChild(This,oldChild,node)	\
    (This)->lpVtbl -> removeChild(This,oldChild,node)

#define IHTMLDOMNode_replaceChild(This,newChild,oldChild,node)	\
    (This)->lpVtbl -> replaceChild(This,newChild,oldChild,node)

#define IHTMLDOMNode_cloneNode(This,fDeep,clonedNode)	\
    (This)->lpVtbl -> cloneNode(This,fDeep,clonedNode)

#define IHTMLDOMNode_removeNode(This,fDeep,removed)	\
    (This)->lpVtbl -> removeNode(This,fDeep,removed)

#define IHTMLDOMNode_swapNode(This,otherNode,swappedNode)	\
    (This)->lpVtbl -> swapNode(This,otherNode,swappedNode)

#define IHTMLDOMNode_replaceNode(This,replacement,replaced)	\
    (This)->lpVtbl -> replaceNode(This,replacement,replaced)

#define IHTMLDOMNode_appendChild(This,newChild,node)	\
    (This)->lpVtbl -> appendChild(This,newChild,node)

#define IHTMLDOMNode_get_nodeName(This,p)	\
    (This)->lpVtbl -> get_nodeName(This,p)

#define IHTMLDOMNode_put_nodeValue(This,v)	\
    (This)->lpVtbl -> put_nodeValue(This,v)

#define IHTMLDOMNode_get_nodeValue(This,p)	\
    (This)->lpVtbl -> get_nodeValue(This,p)

#define IHTMLDOMNode_get_firstChild(This,p)	\
    (This)->lpVtbl -> get_firstChild(This,p)

#define IHTMLDOMNode_get_lastChild(This,p)	\
    (This)->lpVtbl -> get_lastChild(This,p)

#define IHTMLDOMNode_get_previousSibling(This,p)	\
    (This)->lpVtbl -> get_previousSibling(This,p)

#define IHTMLDOMNode_get_nextSibling(This,p)	\
    (This)->lpVtbl -> get_nextSibling(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_nodeType_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLDOMNode_get_nodeType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_parentNode_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMNode_get_parentNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_hasChildNodes_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *fChildren);


void __RPC_STUB IHTMLDOMNode_hasChildNodes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_childNodes_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMNode_get_childNodes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_attributes_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMNode_get_attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_insertBefore_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
    /* [in][optional] */ VARIANT refChild,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);


void __RPC_STUB IHTMLDOMNode_insertBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_removeChild_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [in] */ IHTMLDOMNode __RPC_FAR *oldChild,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);


void __RPC_STUB IHTMLDOMNode_removeChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_replaceChild_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
    /* [in] */ IHTMLDOMNode __RPC_FAR *oldChild,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);


void __RPC_STUB IHTMLDOMNode_replaceChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_cloneNode_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL fDeep,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *clonedNode);


void __RPC_STUB IHTMLDOMNode_cloneNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_removeNode_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [in][defaultvalue] */ VARIANT_BOOL fDeep,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *removed);


void __RPC_STUB IHTMLDOMNode_removeNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_swapNode_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [in] */ IHTMLDOMNode __RPC_FAR *otherNode,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *swappedNode);


void __RPC_STUB IHTMLDOMNode_swapNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_replaceNode_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [in] */ IHTMLDOMNode __RPC_FAR *replacement,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *replaced);


void __RPC_STUB IHTMLDOMNode_replaceNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_appendChild_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);


void __RPC_STUB IHTMLDOMNode_appendChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_nodeName_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLDOMNode_get_nodeName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_put_nodeValue_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDOMNode_put_nodeValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_nodeValue_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLDOMNode_get_nodeValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_firstChild_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMNode_get_firstChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_lastChild_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMNode_get_lastChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_previousSibling_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMNode_get_previousSibling_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_nextSibling_Proxy( 
    IHTMLDOMNode __RPC_FAR * This,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMNode_get_nextSibling_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDOMNode_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMNode2_INTERFACE_DEFINED__
#define __IHTMLDOMNode2_INTERFACE_DEFINED__

/* interface IHTMLDOMNode2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMNode2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f80b-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMNode2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ownerDocument( 
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMNode2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLDOMNode2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLDOMNode2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLDOMNode2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLDOMNode2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLDOMNode2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLDOMNode2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLDOMNode2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ownerDocument )( 
            IHTMLDOMNode2 __RPC_FAR * This,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLDOMNode2Vtbl;

    interface IHTMLDOMNode2
    {
        CONST_VTBL struct IHTMLDOMNode2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMNode2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLDOMNode2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLDOMNode2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLDOMNode2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLDOMNode2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLDOMNode2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLDOMNode2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLDOMNode2_get_ownerDocument(This,p)	\
    (This)->lpVtbl -> get_ownerDocument(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode2_get_ownerDocument_Proxy( 
    IHTMLDOMNode2 __RPC_FAR * This,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMNode2_get_ownerDocument_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDOMNode2_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMAttribute_INTERFACE_DEFINED__
#define __IHTMLDOMAttribute_INTERFACE_DEFINED__

/* interface IHTMLDOMAttribute */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4b0-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMAttribute : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeName( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_nodeValue( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeValue( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_specified( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLDOMAttribute __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLDOMAttribute __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLDOMAttribute __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLDOMAttribute __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLDOMAttribute __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLDOMAttribute __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLDOMAttribute __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_nodeName )( 
            IHTMLDOMAttribute __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_nodeValue )( 
            IHTMLDOMAttribute __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_nodeValue )( 
            IHTMLDOMAttribute __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_specified )( 
            IHTMLDOMAttribute __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        END_INTERFACE
    } IHTMLDOMAttributeVtbl;

    interface IHTMLDOMAttribute
    {
        CONST_VTBL struct IHTMLDOMAttributeVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMAttribute_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLDOMAttribute_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLDOMAttribute_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLDOMAttribute_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLDOMAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLDOMAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLDOMAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLDOMAttribute_get_nodeName(This,p)	\
    (This)->lpVtbl -> get_nodeName(This,p)

#define IHTMLDOMAttribute_put_nodeValue(This,v)	\
    (This)->lpVtbl -> put_nodeValue(This,v)

#define IHTMLDOMAttribute_get_nodeValue(This,p)	\
    (This)->lpVtbl -> get_nodeValue(This,p)

#define IHTMLDOMAttribute_get_specified(This,p)	\
    (This)->lpVtbl -> get_specified(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute_get_nodeName_Proxy( 
    IHTMLDOMAttribute __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute_get_nodeName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute_put_nodeValue_Proxy( 
    IHTMLDOMAttribute __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDOMAttribute_put_nodeValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute_get_nodeValue_Proxy( 
    IHTMLDOMAttribute __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute_get_nodeValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute_get_specified_Proxy( 
    IHTMLDOMAttribute __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute_get_specified_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDOMAttribute_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMAttribute2_INTERFACE_DEFINED__
#define __IHTMLDOMAttribute2_INTERFACE_DEFINED__

/* interface IHTMLDOMAttribute2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMAttribute2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f810-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMAttribute2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_expando( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeType( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentNode( 
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_childNodes( 
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_firstChild( 
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_lastChild( 
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_previousSibling( 
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nextSibling( 
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_attributes( 
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ownerDocument( 
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertBefore( 
            /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
            /* [in][optional] */ VARIANT refChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceChild( 
            /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
            /* [in] */ IHTMLDOMNode __RPC_FAR *oldChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeChild( 
            /* [in] */ IHTMLDOMNode __RPC_FAR *oldChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE appendChild( 
            /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hasChildNodes( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *fChildren) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE cloneNode( 
            /* [in] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ IHTMLDOMAttribute __RPC_FAR *__RPC_FAR *clonedNode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMAttribute2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLDOMAttribute2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLDOMAttribute2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_name )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_value )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_value )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_expando )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_nodeType )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_parentNode )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_childNodes )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_firstChild )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_lastChild )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_previousSibling )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_nextSibling )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_attributes )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ownerDocument )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *insertBefore )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
            /* [in][optional] */ VARIANT refChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *replaceChild )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
            /* [in] */ IHTMLDOMNode __RPC_FAR *oldChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *removeChild )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [in] */ IHTMLDOMNode __RPC_FAR *oldChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *appendChild )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *hasChildNodes )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *fChildren);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *cloneNode )( 
            IHTMLDOMAttribute2 __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ IHTMLDOMAttribute __RPC_FAR *__RPC_FAR *clonedNode);
        
        END_INTERFACE
    } IHTMLDOMAttribute2Vtbl;

    interface IHTMLDOMAttribute2
    {
        CONST_VTBL struct IHTMLDOMAttribute2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMAttribute2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLDOMAttribute2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLDOMAttribute2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLDOMAttribute2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLDOMAttribute2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLDOMAttribute2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLDOMAttribute2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLDOMAttribute2_get_name(This,p)	\
    (This)->lpVtbl -> get_name(This,p)

#define IHTMLDOMAttribute2_put_value(This,v)	\
    (This)->lpVtbl -> put_value(This,v)

#define IHTMLDOMAttribute2_get_value(This,p)	\
    (This)->lpVtbl -> get_value(This,p)

#define IHTMLDOMAttribute2_get_expando(This,p)	\
    (This)->lpVtbl -> get_expando(This,p)

#define IHTMLDOMAttribute2_get_nodeType(This,p)	\
    (This)->lpVtbl -> get_nodeType(This,p)

#define IHTMLDOMAttribute2_get_parentNode(This,p)	\
    (This)->lpVtbl -> get_parentNode(This,p)

#define IHTMLDOMAttribute2_get_childNodes(This,p)	\
    (This)->lpVtbl -> get_childNodes(This,p)

#define IHTMLDOMAttribute2_get_firstChild(This,p)	\
    (This)->lpVtbl -> get_firstChild(This,p)

#define IHTMLDOMAttribute2_get_lastChild(This,p)	\
    (This)->lpVtbl -> get_lastChild(This,p)

#define IHTMLDOMAttribute2_get_previousSibling(This,p)	\
    (This)->lpVtbl -> get_previousSibling(This,p)

#define IHTMLDOMAttribute2_get_nextSibling(This,p)	\
    (This)->lpVtbl -> get_nextSibling(This,p)

#define IHTMLDOMAttribute2_get_attributes(This,p)	\
    (This)->lpVtbl -> get_attributes(This,p)

#define IHTMLDOMAttribute2_get_ownerDocument(This,p)	\
    (This)->lpVtbl -> get_ownerDocument(This,p)

#define IHTMLDOMAttribute2_insertBefore(This,newChild,refChild,node)	\
    (This)->lpVtbl -> insertBefore(This,newChild,refChild,node)

#define IHTMLDOMAttribute2_replaceChild(This,newChild,oldChild,node)	\
    (This)->lpVtbl -> replaceChild(This,newChild,oldChild,node)

#define IHTMLDOMAttribute2_removeChild(This,oldChild,node)	\
    (This)->lpVtbl -> removeChild(This,oldChild,node)

#define IHTMLDOMAttribute2_appendChild(This,newChild,node)	\
    (This)->lpVtbl -> appendChild(This,newChild,node)

#define IHTMLDOMAttribute2_hasChildNodes(This,fChildren)	\
    (This)->lpVtbl -> hasChildNodes(This,fChildren)

#define IHTMLDOMAttribute2_cloneNode(This,fDeep,clonedNode)	\
    (This)->lpVtbl -> cloneNode(This,fDeep,clonedNode)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_get_name_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute2_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_put_value_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDOMAttribute2_put_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_get_value_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute2_get_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_get_expando_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute2_get_expando_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_get_nodeType_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute2_get_nodeType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_get_parentNode_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute2_get_parentNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_get_childNodes_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute2_get_childNodes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_get_firstChild_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute2_get_firstChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_get_lastChild_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute2_get_lastChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_get_previousSibling_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute2_get_previousSibling_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_get_nextSibling_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute2_get_nextSibling_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_get_attributes_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute2_get_attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_get_ownerDocument_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMAttribute2_get_ownerDocument_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_insertBefore_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
    /* [in][optional] */ VARIANT refChild,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);


void __RPC_STUB IHTMLDOMAttribute2_insertBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_replaceChild_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
    /* [in] */ IHTMLDOMNode __RPC_FAR *oldChild,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);


void __RPC_STUB IHTMLDOMAttribute2_replaceChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_removeChild_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [in] */ IHTMLDOMNode __RPC_FAR *oldChild,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);


void __RPC_STUB IHTMLDOMAttribute2_removeChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_appendChild_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [in] */ IHTMLDOMNode __RPC_FAR *newChild,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *node);


void __RPC_STUB IHTMLDOMAttribute2_appendChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_hasChildNodes_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *fChildren);


void __RPC_STUB IHTMLDOMAttribute2_hasChildNodes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute2_cloneNode_Proxy( 
    IHTMLDOMAttribute2 __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL fDeep,
    /* [out][retval] */ IHTMLDOMAttribute __RPC_FAR *__RPC_FAR *clonedNode);


void __RPC_STUB IHTMLDOMAttribute2_cloneNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDOMAttribute2_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMTextNode_INTERFACE_DEFINED__
#define __IHTMLDOMTextNode_INTERFACE_DEFINED__

/* interface IHTMLDOMTextNode */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMTextNode;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4b1-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMTextNode : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_data( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_data( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ BSTR __RPC_FAR *String) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE splitText( 
            /* [in] */ long offset,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *pRetNode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMTextNodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLDOMTextNode __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLDOMTextNode __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLDOMTextNode __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLDOMTextNode __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLDOMTextNode __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLDOMTextNode __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLDOMTextNode __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_data )( 
            IHTMLDOMTextNode __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_data )( 
            IHTMLDOMTextNode __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *toString )( 
            IHTMLDOMTextNode __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *String);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_length )( 
            IHTMLDOMTextNode __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *splitText )( 
            IHTMLDOMTextNode __RPC_FAR * This,
            /* [in] */ long offset,
            /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *pRetNode);
        
        END_INTERFACE
    } IHTMLDOMTextNodeVtbl;

    interface IHTMLDOMTextNode
    {
        CONST_VTBL struct IHTMLDOMTextNodeVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMTextNode_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLDOMTextNode_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLDOMTextNode_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLDOMTextNode_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLDOMTextNode_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLDOMTextNode_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLDOMTextNode_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLDOMTextNode_put_data(This,v)	\
    (This)->lpVtbl -> put_data(This,v)

#define IHTMLDOMTextNode_get_data(This,p)	\
    (This)->lpVtbl -> get_data(This,p)

#define IHTMLDOMTextNode_toString(This,String)	\
    (This)->lpVtbl -> toString(This,String)

#define IHTMLDOMTextNode_get_length(This,p)	\
    (This)->lpVtbl -> get_length(This,p)

#define IHTMLDOMTextNode_splitText(This,offset,pRetNode)	\
    (This)->lpVtbl -> splitText(This,offset,pRetNode)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDOMTextNode_put_data_Proxy( 
    IHTMLDOMTextNode __RPC_FAR * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDOMTextNode_put_data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMTextNode_get_data_Proxy( 
    IHTMLDOMTextNode __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLDOMTextNode_get_data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMTextNode_toString_Proxy( 
    IHTMLDOMTextNode __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *String);


void __RPC_STUB IHTMLDOMTextNode_toString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMTextNode_get_length_Proxy( 
    IHTMLDOMTextNode __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLDOMTextNode_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMTextNode_splitText_Proxy( 
    IHTMLDOMTextNode __RPC_FAR * This,
    /* [in] */ long offset,
    /* [out][retval] */ IHTMLDOMNode __RPC_FAR *__RPC_FAR *pRetNode);


void __RPC_STUB IHTMLDOMTextNode_splitText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDOMTextNode_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMTextNode2_INTERFACE_DEFINED__
#define __IHTMLDOMTextNode2_INTERFACE_DEFINED__

/* interface IHTMLDOMTextNode2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMTextNode2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f809-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMTextNode2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE substringData( 
            /* [in] */ long offset,
            /* [in] */ long Count,
            /* [out][retval] */ BSTR __RPC_FAR *pbstrsubString) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE appendData( 
            /* [in] */ BSTR bstrstring) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertData( 
            /* [in] */ long offset,
            /* [in] */ BSTR bstrstring) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE deleteData( 
            /* [in] */ long offset,
            /* [in] */ long Count) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceData( 
            /* [in] */ long offset,
            /* [in] */ long Count,
            /* [in] */ BSTR bstrstring) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMTextNode2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLDOMTextNode2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLDOMTextNode2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLDOMTextNode2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLDOMTextNode2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLDOMTextNode2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLDOMTextNode2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLDOMTextNode2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *substringData )( 
            IHTMLDOMTextNode2 __RPC_FAR * This,
            /* [in] */ long offset,
            /* [in] */ long Count,
            /* [out][retval] */ BSTR __RPC_FAR *pbstrsubString);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *appendData )( 
            IHTMLDOMTextNode2 __RPC_FAR * This,
            /* [in] */ BSTR bstrstring);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *insertData )( 
            IHTMLDOMTextNode2 __RPC_FAR * This,
            /* [in] */ long offset,
            /* [in] */ BSTR bstrstring);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *deleteData )( 
            IHTMLDOMTextNode2 __RPC_FAR * This,
            /* [in] */ long offset,
            /* [in] */ long Count);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *replaceData )( 
            IHTMLDOMTextNode2 __RPC_FAR * This,
            /* [in] */ long offset,
            /* [in] */ long Count,
            /* [in] */ BSTR bstrstring);
        
        END_INTERFACE
    } IHTMLDOMTextNode2Vtbl;

    interface IHTMLDOMTextNode2
    {
        CONST_VTBL struct IHTMLDOMTextNode2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMTextNode2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLDOMTextNode2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLDOMTextNode2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLDOMTextNode2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLDOMTextNode2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLDOMTextNode2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLDOMTextNode2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLDOMTextNode2_substringData(This,offset,Count,pbstrsubString)	\
    (This)->lpVtbl -> substringData(This,offset,Count,pbstrsubString)

#define IHTMLDOMTextNode2_appendData(This,bstrstring)	\
    (This)->lpVtbl -> appendData(This,bstrstring)

#define IHTMLDOMTextNode2_insertData(This,offset,bstrstring)	\
    (This)->lpVtbl -> insertData(This,offset,bstrstring)

#define IHTMLDOMTextNode2_deleteData(This,offset,Count)	\
    (This)->lpVtbl -> deleteData(This,offset,Count)

#define IHTMLDOMTextNode2_replaceData(This,offset,Count,bstrstring)	\
    (This)->lpVtbl -> replaceData(This,offset,Count,bstrstring)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMTextNode2_substringData_Proxy( 
    IHTMLDOMTextNode2 __RPC_FAR * This,
    /* [in] */ long offset,
    /* [in] */ long Count,
    /* [out][retval] */ BSTR __RPC_FAR *pbstrsubString);


void __RPC_STUB IHTMLDOMTextNode2_substringData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMTextNode2_appendData_Proxy( 
    IHTMLDOMTextNode2 __RPC_FAR * This,
    /* [in] */ BSTR bstrstring);


void __RPC_STUB IHTMLDOMTextNode2_appendData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMTextNode2_insertData_Proxy( 
    IHTMLDOMTextNode2 __RPC_FAR * This,
    /* [in] */ long offset,
    /* [in] */ BSTR bstrstring);


void __RPC_STUB IHTMLDOMTextNode2_insertData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMTextNode2_deleteData_Proxy( 
    IHTMLDOMTextNode2 __RPC_FAR * This,
    /* [in] */ long offset,
    /* [in] */ long Count);


void __RPC_STUB IHTMLDOMTextNode2_deleteData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMTextNode2_replaceData_Proxy( 
    IHTMLDOMTextNode2 __RPC_FAR * This,
    /* [in] */ long offset,
    /* [in] */ long Count,
    /* [in] */ BSTR bstrstring);


void __RPC_STUB IHTMLDOMTextNode2_replaceData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDOMTextNode2_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMImplementation_INTERFACE_DEFINED__
#define __IHTMLDOMImplementation_INTERFACE_DEFINED__

/* interface IHTMLDOMImplementation */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMImplementation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f80d-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMImplementation : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hasFeature( 
            /* [in] */ BSTR bstrfeature,
            /* [in][optional] */ VARIANT version,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfHasFeature) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMImplementationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLDOMImplementation __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLDOMImplementation __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLDOMImplementation __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLDOMImplementation __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLDOMImplementation __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLDOMImplementation __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLDOMImplementation __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *hasFeature )( 
            IHTMLDOMImplementation __RPC_FAR * This,
            /* [in] */ BSTR bstrfeature,
            /* [in][optional] */ VARIANT version,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfHasFeature);
        
        END_INTERFACE
    } IHTMLDOMImplementationVtbl;

    interface IHTMLDOMImplementation
    {
        CONST_VTBL struct IHTMLDOMImplementationVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMImplementation_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLDOMImplementation_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLDOMImplementation_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLDOMImplementation_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLDOMImplementation_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLDOMImplementation_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLDOMImplementation_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLDOMImplementation_hasFeature(This,bstrfeature,version,pfHasFeature)	\
    (This)->lpVtbl -> hasFeature(This,bstrfeature,version,pfHasFeature)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMImplementation_hasFeature_Proxy( 
    IHTMLDOMImplementation __RPC_FAR * This,
    /* [in] */ BSTR bstrfeature,
    /* [in][optional] */ VARIANT version,
    /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfHasFeature);


void __RPC_STUB IHTMLDOMImplementation_hasFeature_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDOMImplementation_INTERFACE_DEFINED__ */


#ifndef __DispHTMLDOMAttribute_DISPINTERFACE_DEFINED__
#define __DispHTMLDOMAttribute_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLDOMAttribute */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLDOMAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f564-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLDOMAttribute : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLDOMAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            DispHTMLDOMAttribute __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            DispHTMLDOMAttribute __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            DispHTMLDOMAttribute __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            DispHTMLDOMAttribute __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            DispHTMLDOMAttribute __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            DispHTMLDOMAttribute __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            DispHTMLDOMAttribute __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } DispHTMLDOMAttributeVtbl;

    interface DispHTMLDOMAttribute
    {
        CONST_VTBL struct DispHTMLDOMAttributeVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLDOMAttribute_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispHTMLDOMAttribute_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispHTMLDOMAttribute_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispHTMLDOMAttribute_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispHTMLDOMAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispHTMLDOMAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispHTMLDOMAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLDOMAttribute_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLDOMAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f4b2-98b5-11cf-bb82-00aa00bdce0b")
HTMLDOMAttribute;
#endif

#ifndef __DispHTMLDOMTextNode_DISPINTERFACE_DEFINED__
#define __DispHTMLDOMTextNode_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLDOMTextNode */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLDOMTextNode;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f565-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLDOMTextNode : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLDOMTextNodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            DispHTMLDOMTextNode __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            DispHTMLDOMTextNode __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            DispHTMLDOMTextNode __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            DispHTMLDOMTextNode __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            DispHTMLDOMTextNode __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            DispHTMLDOMTextNode __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            DispHTMLDOMTextNode __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } DispHTMLDOMTextNodeVtbl;

    interface DispHTMLDOMTextNode
    {
        CONST_VTBL struct DispHTMLDOMTextNodeVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLDOMTextNode_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispHTMLDOMTextNode_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispHTMLDOMTextNode_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispHTMLDOMTextNode_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispHTMLDOMTextNode_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispHTMLDOMTextNode_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispHTMLDOMTextNode_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLDOMTextNode_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLDOMTextNode;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f4ba-98b5-11cf-bb82-00aa00bdce0b")
HTMLDOMTextNode;
#endif

#ifndef __DispHTMLDOMImplementation_DISPINTERFACE_DEFINED__
#define __DispHTMLDOMImplementation_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLDOMImplementation */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLDOMImplementation;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f58f-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLDOMImplementation : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLDOMImplementationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            DispHTMLDOMImplementation __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            DispHTMLDOMImplementation __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            DispHTMLDOMImplementation __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            DispHTMLDOMImplementation __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            DispHTMLDOMImplementation __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            DispHTMLDOMImplementation __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            DispHTMLDOMImplementation __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } DispHTMLDOMImplementationVtbl;

    interface DispHTMLDOMImplementation
    {
        CONST_VTBL struct DispHTMLDOMImplementationVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLDOMImplementation_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispHTMLDOMImplementation_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispHTMLDOMImplementation_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispHTMLDOMImplementation_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispHTMLDOMImplementation_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispHTMLDOMImplementation_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispHTMLDOMImplementation_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLDOMImplementation_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLDOMImplementation;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f80e-98b5-11cf-bb82-00aa00bdce0b")
HTMLDOMImplementation;
#endif

#ifndef __IHTMLAttributeCollection_INTERFACE_DEFINED__
#define __IHTMLAttributeCollection_INTERFACE_DEFINED__

/* interface IHTMLAttributeCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAttributeCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4c3-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAttributeCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in][optional] */ VARIANT __RPC_FAR *name,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *pdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLAttributeCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLAttributeCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLAttributeCollection __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLAttributeCollection __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLAttributeCollection __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLAttributeCollection __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLAttributeCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLAttributeCollection __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_length )( 
            IHTMLAttributeCollection __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__newEnum )( 
            IHTMLAttributeCollection __RPC_FAR * This,
            /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *item )( 
            IHTMLAttributeCollection __RPC_FAR * This,
            /* [in][optional] */ VARIANT __RPC_FAR *name,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *pdisp);
        
        END_INTERFACE
    } IHTMLAttributeCollectionVtbl;

    interface IHTMLAttributeCollection
    {
        CONST_VTBL struct IHTMLAttributeCollectionVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLAttributeCollection_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLAttributeCollection_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLAttributeCollection_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLAttributeCollection_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLAttributeCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLAttributeCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLAttributeCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLAttributeCollection_get_length(This,p)	\
    (This)->lpVtbl -> get_length(This,p)

#define IHTMLAttributeCollection_get__newEnum(This,p)	\
    (This)->lpVtbl -> get__newEnum(This,p)

#define IHTMLAttributeCollection_item(This,name,pdisp)	\
    (This)->lpVtbl -> item(This,name,pdisp)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAttributeCollection_get_length_Proxy( 
    IHTMLAttributeCollection __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLAttributeCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAttributeCollection_get__newEnum_Proxy( 
    IHTMLAttributeCollection __RPC_FAR * This,
    /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLAttributeCollection_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLAttributeCollection_item_Proxy( 
    IHTMLAttributeCollection __RPC_FAR * This,
    /* [in][optional] */ VARIANT __RPC_FAR *name,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *pdisp);


void __RPC_STUB IHTMLAttributeCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLAttributeCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLAttributeCollection2_INTERFACE_DEFINED__
#define __IHTMLAttributeCollection2_INTERFACE_DEFINED__

/* interface IHTMLAttributeCollection2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAttributeCollection2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f80a-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAttributeCollection2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getNamedItem( 
            /* [in] */ BSTR bstrName,
            /* [out][retval] */ IHTMLDOMAttribute __RPC_FAR *__RPC_FAR *newretNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setNamedItem( 
            /* [in] */ IHTMLDOMAttribute __RPC_FAR *ppNode,
            /* [out][retval] */ IHTMLDOMAttribute __RPC_FAR *__RPC_FAR *newretNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeNamedItem( 
            /* [in] */ BSTR bstrName,
            /* [out][retval] */ IHTMLDOMAttribute __RPC_FAR *__RPC_FAR *newretNode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLAttributeCollection2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLAttributeCollection2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLAttributeCollection2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLAttributeCollection2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLAttributeCollection2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLAttributeCollection2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLAttributeCollection2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLAttributeCollection2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getNamedItem )( 
            IHTMLAttributeCollection2 __RPC_FAR * This,
            /* [in] */ BSTR bstrName,
            /* [out][retval] */ IHTMLDOMAttribute __RPC_FAR *__RPC_FAR *newretNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *setNamedItem )( 
            IHTMLAttributeCollection2 __RPC_FAR * This,
            /* [in] */ IHTMLDOMAttribute __RPC_FAR *ppNode,
            /* [out][retval] */ IHTMLDOMAttribute __RPC_FAR *__RPC_FAR *newretNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *removeNamedItem )( 
            IHTMLAttributeCollection2 __RPC_FAR * This,
            /* [in] */ BSTR bstrName,
            /* [out][retval] */ IHTMLDOMAttribute __RPC_FAR *__RPC_FAR *newretNode);
        
        END_INTERFACE
    } IHTMLAttributeCollection2Vtbl;

    interface IHTMLAttributeCollection2
    {
        CONST_VTBL struct IHTMLAttributeCollection2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLAttributeCollection2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLAttributeCollection2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLAttributeCollection2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLAttributeCollection2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLAttributeCollection2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLAttributeCollection2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLAttributeCollection2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLAttributeCollection2_getNamedItem(This,bstrName,newretNode)	\
    (This)->lpVtbl -> getNamedItem(This,bstrName,newretNode)

#define IHTMLAttributeCollection2_setNamedItem(This,ppNode,newretNode)	\
    (This)->lpVtbl -> setNamedItem(This,ppNode,newretNode)

#define IHTMLAttributeCollection2_removeNamedItem(This,bstrName,newretNode)	\
    (This)->lpVtbl -> removeNamedItem(This,bstrName,newretNode)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLAttributeCollection2_getNamedItem_Proxy( 
    IHTMLAttributeCollection2 __RPC_FAR * This,
    /* [in] */ BSTR bstrName,
    /* [out][retval] */ IHTMLDOMAttribute __RPC_FAR *__RPC_FAR *newretNode);


void __RPC_STUB IHTMLAttributeCollection2_getNamedItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLAttributeCollection2_setNamedItem_Proxy( 
    IHTMLAttributeCollection2 __RPC_FAR * This,
    /* [in] */ IHTMLDOMAttribute __RPC_FAR *ppNode,
    /* [out][retval] */ IHTMLDOMAttribute __RPC_FAR *__RPC_FAR *newretNode);


void __RPC_STUB IHTMLAttributeCollection2_setNamedItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLAttributeCollection2_removeNamedItem_Proxy( 
    IHTMLAttributeCollection2 __RPC_FAR * This,
    /* [in] */ BSTR bstrName,
    /* [out][retval] */ IHTMLDOMAttribute __RPC_FAR *__RPC_FAR *newretNode);


void __RPC_STUB IHTMLAttributeCollection2_removeNamedItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLAttributeCollection2_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMChildrenCollection_INTERFACE_DEFINED__
#define __IHTMLDOMChildrenCollection_INTERFACE_DEFINED__

/* interface IHTMLDOMChildrenCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMChildrenCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f5ab-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMChildrenCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ long index,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMChildrenCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLDOMChildrenCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLDOMChildrenCollection __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLDOMChildrenCollection __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLDOMChildrenCollection __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLDOMChildrenCollection __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLDOMChildrenCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLDOMChildrenCollection __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_length )( 
            IHTMLDOMChildrenCollection __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__newEnum )( 
            IHTMLDOMChildrenCollection __RPC_FAR * This,
            /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *item )( 
            IHTMLDOMChildrenCollection __RPC_FAR * This,
            /* [in] */ long index,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *ppItem);
        
        END_INTERFACE
    } IHTMLDOMChildrenCollectionVtbl;

    interface IHTMLDOMChildrenCollection
    {
        CONST_VTBL struct IHTMLDOMChildrenCollectionVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMChildrenCollection_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLDOMChildrenCollection_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLDOMChildrenCollection_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLDOMChildrenCollection_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLDOMChildrenCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLDOMChildrenCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLDOMChildrenCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLDOMChildrenCollection_get_length(This,p)	\
    (This)->lpVtbl -> get_length(This,p)

#define IHTMLDOMChildrenCollection_get__newEnum(This,p)	\
    (This)->lpVtbl -> get__newEnum(This,p)

#define IHTMLDOMChildrenCollection_item(This,index,ppItem)	\
    (This)->lpVtbl -> item(This,index,ppItem)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMChildrenCollection_get_length_Proxy( 
    IHTMLDOMChildrenCollection __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLDOMChildrenCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMChildrenCollection_get__newEnum_Proxy( 
    IHTMLDOMChildrenCollection __RPC_FAR * This,
    /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLDOMChildrenCollection_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMChildrenCollection_item_Proxy( 
    IHTMLDOMChildrenCollection __RPC_FAR * This,
    /* [in] */ long index,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *ppItem);


void __RPC_STUB IHTMLDOMChildrenCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDOMChildrenCollection_INTERFACE_DEFINED__ */


#ifndef __DispHTMLAttributeCollection_DISPINTERFACE_DEFINED__
#define __DispHTMLAttributeCollection_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLAttributeCollection */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLAttributeCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f56c-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLAttributeCollection : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLAttributeCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            DispHTMLAttributeCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            DispHTMLAttributeCollection __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            DispHTMLAttributeCollection __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            DispHTMLAttributeCollection __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            DispHTMLAttributeCollection __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            DispHTMLAttributeCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            DispHTMLAttributeCollection __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } DispHTMLAttributeCollectionVtbl;

    interface DispHTMLAttributeCollection
    {
        CONST_VTBL struct DispHTMLAttributeCollectionVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLAttributeCollection_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispHTMLAttributeCollection_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispHTMLAttributeCollection_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispHTMLAttributeCollection_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispHTMLAttributeCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispHTMLAttributeCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispHTMLAttributeCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLAttributeCollection_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLAttributeCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f4cc-98b5-11cf-bb82-00aa00bdce0b")
HTMLAttributeCollection;
#endif

#ifndef __DispDOMChildrenCollection_DISPINTERFACE_DEFINED__
#define __DispDOMChildrenCollection_DISPINTERFACE_DEFINED__

/* dispinterface DispDOMChildrenCollection */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispDOMChildrenCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f577-98b5-11cf-bb82-00aa00bdce0b")
    DispDOMChildrenCollection : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispDOMChildrenCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            DispDOMChildrenCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            DispDOMChildrenCollection __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            DispDOMChildrenCollection __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            DispDOMChildrenCollection __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            DispDOMChildrenCollection __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            DispDOMChildrenCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            DispDOMChildrenCollection __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } DispDOMChildrenCollectionVtbl;

    interface DispDOMChildrenCollection
    {
        CONST_VTBL struct DispDOMChildrenCollectionVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispDOMChildrenCollection_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispDOMChildrenCollection_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispDOMChildrenCollection_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispDOMChildrenCollection_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispDOMChildrenCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispDOMChildrenCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispDOMChildrenCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispDOMChildrenCollection_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_DOMChildrenCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f5aa-98b5-11cf-bb82-00aa00bdce0b")
DOMChildrenCollection;
#endif

#ifndef __HTMLElementEvents2_DISPINTERFACE_DEFINED__
#define __HTMLElementEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLElementEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLElementEvents2;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f60f-98b5-11cf-bb82-00aa00bdce0b")
    HTMLElementEvents2 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct HTMLElementEvents2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            HTMLElementEvents2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            HTMLElementEvents2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            HTMLElementEvents2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            HTMLElementEvents2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            HTMLElementEvents2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            HTMLElementEvents2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            HTMLElementEvents2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } HTMLElementEvents2Vtbl;

    interface HTMLElementEvents2
    {
        CONST_VTBL struct HTMLElementEvents2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLElementEvents2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define HTMLElementEvents2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define HTMLElementEvents2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define HTMLElementEvents2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define HTMLElementEvents2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define HTMLElementEvents2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define HTMLElementEvents2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __HTMLElementEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLElementEvents_DISPINTERFACE_DEFINED__
#define __HTMLElementEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLElementEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLElementEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f33c-98b5-11cf-bb82-00aa00bdce0b")
    HTMLElementEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct HTMLElementEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            HTMLElementEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            HTMLElementEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            HTMLElementEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            HTMLElementEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            HTMLElementEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            HTMLElementEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            HTMLElementEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } HTMLElementEventsVtbl;

    interface HTMLElementEvents
    {
        CONST_VTBL struct HTMLElementEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLElementEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define HTMLElementEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define HTMLElementEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define HTMLElementEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define HTMLElementEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define HTMLElementEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define HTMLElementEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __HTMLElementEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLElementCollection_INTERFACE_DEFINED__
#define __IHTMLElementCollection_INTERFACE_DEFINED__

/* interface IHTMLElementCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLElementCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f21f-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLElementCollection : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ BSTR __RPC_FAR *String) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_length( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in][optional] */ VARIANT name,
            /* [in][optional] */ VARIANT index,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *pdisp) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE tags( 
            /* [in] */ VARIANT tagName,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *pdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLElementCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLElementCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLElementCollection __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLElementCollection __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLElementCollection __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLElementCollection __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLElementCollection __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLElementCollection __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *toString )( 
            IHTMLElementCollection __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *String);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_length )( 
            IHTMLElementCollection __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_length )( 
            IHTMLElementCollection __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__newEnum )( 
            IHTMLElementCollection __RPC_FAR * This,
            /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *item )( 
            IHTMLElementCollection __RPC_FAR * This,
            /* [in][optional] */ VARIANT name,
            /* [in][optional] */ VARIANT index,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *pdisp);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *tags )( 
            IHTMLElementCollection __RPC_FAR * This,
            /* [in] */ VARIANT tagName,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *pdisp);
        
        END_INTERFACE
    } IHTMLElementCollectionVtbl;

    interface IHTMLElementCollection
    {
        CONST_VTBL struct IHTMLElementCollectionVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLElementCollection_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLElementCollection_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLElementCollection_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLElementCollection_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLElementCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLElementCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLElementCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLElementCollection_toString(This,String)	\
    (This)->lpVtbl -> toString(This,String)

#define IHTMLElementCollection_put_length(This,v)	\
    (This)->lpVtbl -> put_length(This,v)

#define IHTMLElementCollection_get_length(This,p)	\
    (This)->lpVtbl -> get_length(This,p)

#define IHTMLElementCollection_get__newEnum(This,p)	\
    (This)->lpVtbl -> get__newEnum(This,p)

#define IHTMLElementCollection_item(This,name,index,pdisp)	\
    (This)->lpVtbl -> item(This,name,index,pdisp)

#define IHTMLElementCollection_tags(This,tagName,pdisp)	\
    (This)->lpVtbl -> tags(This,tagName,pdisp)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElementCollection_toString_Proxy( 
    IHTMLElementCollection __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *String);


void __RPC_STUB IHTMLElementCollection_toString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElementCollection_put_length_Proxy( 
    IHTMLElementCollection __RPC_FAR * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLElementCollection_put_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElementCollection_get_length_Proxy( 
    IHTMLElementCollection __RPC_FAR * This,
    /* [out][retval] */ long __RPC_FAR *p);


void __RPC_STUB IHTMLElementCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElementCollection_get__newEnum_Proxy( 
    IHTMLElementCollection __RPC_FAR * This,
    /* [out][retval] */ IUnknown __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLElementCollection_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElementCollection_item_Proxy( 
    IHTMLElementCollection __RPC_FAR * This,
    /* [in][optional] */ VARIANT name,
    /* [in][optional] */ VARIANT index,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *pdisp);


void __RPC_STUB IHTMLElementCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElementCollection_tags_Proxy( 
    IHTMLElementCollection __RPC_FAR * This,
    /* [in] */ VARIANT tagName,
    /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *pdisp);


void __RPC_STUB IHTMLElementCollection_tags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLElementCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLElement2_INTERFACE_DEFINED__
#define __IHTMLElement2_INTERFACE_DEFINED__

/* interface IHTMLElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLElement2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f434-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLElement2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_scopeName( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setCapture( 
            /* [in][defaultvalue] */ VARIANT_BOOL containerCapture = -1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE releaseCapture( void) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onlosecapture( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onlosecapture( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE componentFromPoint( 
            /* [in] */ long x,
            /* [in] */ long y,
            /* [out][retval] */ BSTR __RPC_FAR *component) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE doScroll( 
            /* [in][optional] */ VARIANT component) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onscroll( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onscroll( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondrag( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondrag( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondragend( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondragend( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondragenter( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondragenter( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondragover( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondragover( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondragleave( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondragleave( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondrop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondrop( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforecut( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforecut( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_oncut( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_oncut( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforecopy( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforecopy( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_oncopy( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_oncopy( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforepaste( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforepaste( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onpaste( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onpaste( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [nonbrowsable][id][propget] */ HRESULT STDMETHODCALLTYPE get_currentStyle( 
            /* [out][retval] */ IHTMLCurrentStyle __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onpropertychange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onpropertychange( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getClientRects( 
            /* [out][retval] */ IHTMLRectCollection __RPC_FAR *__RPC_FAR *pRectCol) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getBoundingClientRect( 
            /* [out][retval] */ IHTMLRect __RPC_FAR *__RPC_FAR *pRect) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setExpression( 
            /* [in] */ BSTR propname,
            /* [in] */ BSTR expression,
            /* [in][defaultvalue] */ BSTR language = L"") = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getExpression( 
            /* [in] */ BSTR propname,
            /* [out][retval] */ VARIANT __RPC_FAR *expression) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeExpression( 
            /* [in] */ BSTR propname,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_tabIndex( 
            /* [in] */ short v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_tabIndex( 
            /* [out][retval] */ short __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE focus( void) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_accessKey( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_accessKey( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onblur( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onblur( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onfocus( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onfocus( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onresize( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onresize( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE blur( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE addFilter( 
            /* [in] */ IUnknown __RPC_FAR *pUnk) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeFilter( 
            /* [in] */ IUnknown __RPC_FAR *pUnk) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clientHeight( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clientWidth( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clientTop( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clientLeft( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE attachEvent( 
            /* [in] */ BSTR event,
            /* [in] */ IDispatch __RPC_FAR *pDisp,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfResult) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE detachEvent( 
            /* [in] */ BSTR event,
            /* [in] */ IDispatch __RPC_FAR *pDisp) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onreadystatechange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onreadystatechange( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowsdelete( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowsdelete( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowsinserted( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowsinserted( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_oncellchange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_oncellchange( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_dir( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_dir( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createControlRange( 
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *range) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollHeight( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollWidth( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollTop( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollTop( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollLeft( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollLeft( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE clearAttributes( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE mergeAttributes( 
            /* [in] */ IHTMLElement __RPC_FAR *mergeThis) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_oncontextmenu( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_oncontextmenu( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertAdjacentElement( 
            /* [in] */ BSTR where,
            /* [in] */ IHTMLElement __RPC_FAR *insertedElement,
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *inserted) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE applyElement( 
            /* [in] */ IHTMLElement __RPC_FAR *apply,
            /* [in] */ BSTR where,
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *applied) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAdjacentText( 
            /* [in] */ BSTR where,
            /* [out][retval] */ BSTR __RPC_FAR *text) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceAdjacentText( 
            /* [in] */ BSTR where,
            /* [in] */ BSTR newText,
            /* [out][retval] */ BSTR __RPC_FAR *oldText) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_canHaveChildren( 
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE addBehavior( 
            /* [in] */ BSTR bstrUrl,
            /* [in][optional] */ VARIANT __RPC_FAR *pvarFactory,
            /* [out][retval] */ long __RPC_FAR *pCookie) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeBehavior( 
            /* [in] */ long cookie,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfResult) = 0;
        
        virtual /* [nonbrowsable][id][propget] */ HRESULT STDMETHODCALLTYPE get_runtimeStyle( 
            /* [out][retval] */ IHTMLStyle __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_behaviorUrns( 
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_tagUrn( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_tagUrn( 
            /* [out][retval] */ BSTR __RPC_FAR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeeditfocus( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeeditfocus( 
            /* [out][retval] */ VARIANT __RPC_FAR *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_readyStateValue( 
            /* [out][retval] */ long __RPC_FAR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getElementsByTagName( 
            /* [in] */ BSTR v,
            /* [out][retval] */ IHTMLElementCollection __RPC_FAR *__RPC_FAR *pelColl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLElement2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IHTMLElement2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IHTMLElement2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scopeName )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *setCapture )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in][defaultvalue] */ VARIANT_BOOL containerCapture);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *releaseCapture )( 
            IHTMLElement2 __RPC_FAR * This);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onlosecapture )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onlosecapture )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *componentFromPoint )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [out][retval] */ BSTR __RPC_FAR *component);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *doScroll )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in][optional] */ VARIANT component);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onscroll )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onscroll )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ondrag )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ondrag )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ondragend )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ondragend )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ondragenter )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ondragenter )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ondragover )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ondragover )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ondragleave )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ondragleave )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ondrop )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ondrop )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onbeforecut )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onbeforecut )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_oncut )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_oncut )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onbeforecopy )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onbeforecopy )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_oncopy )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_oncopy )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onbeforepaste )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onbeforepaste )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onpaste )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onpaste )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [nonbrowsable][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_currentStyle )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ IHTMLCurrentStyle __RPC_FAR *__RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onpropertychange )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onpropertychange )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getClientRects )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ IHTMLRectCollection __RPC_FAR *__RPC_FAR *pRectCol);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getBoundingClientRect )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ IHTMLRect __RPC_FAR *__RPC_FAR *pRect);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *setExpression )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR propname,
            /* [in] */ BSTR expression,
            /* [in][defaultvalue] */ BSTR language);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getExpression )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR propname,
            /* [out][retval] */ VARIANT __RPC_FAR *expression);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *removeExpression )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR propname,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfSuccess);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_tabIndex )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ short v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_tabIndex )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ short __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *focus )( 
            IHTMLElement2 __RPC_FAR * This);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_accessKey )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_accessKey )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onblur )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onblur )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onfocus )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onfocus )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onresize )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onresize )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *blur )( 
            IHTMLElement2 __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *addFilter )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *pUnk);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *removeFilter )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *pUnk);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clientHeight )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clientWidth )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clientTop )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_clientLeft )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *attachEvent )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR event,
            /* [in] */ IDispatch __RPC_FAR *pDisp,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfResult);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *detachEvent )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR event,
            /* [in] */ IDispatch __RPC_FAR *pDisp);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_readyState )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onreadystatechange )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onreadystatechange )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onrowsdelete )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onrowsdelete )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onrowsinserted )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onrowsinserted )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_oncellchange )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_oncellchange )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_dir )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_dir )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *createControlRange )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *range);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollHeight )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollWidth )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollTop )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollTop )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_scrollLeft )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ long v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_scrollLeft )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *clearAttributes )( 
            IHTMLElement2 __RPC_FAR * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *mergeAttributes )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ IHTMLElement __RPC_FAR *mergeThis);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_oncontextmenu )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_oncontextmenu )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *insertAdjacentElement )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR where,
            /* [in] */ IHTMLElement __RPC_FAR *insertedElement,
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *inserted);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *applyElement )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ IHTMLElement __RPC_FAR *apply,
            /* [in] */ BSTR where,
            /* [out][retval] */ IHTMLElement __RPC_FAR *__RPC_FAR *applied);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getAdjacentText )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR where,
            /* [out][retval] */ BSTR __RPC_FAR *text);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *replaceAdjacentText )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR where,
            /* [in] */ BSTR newText,
            /* [out][retval] */ BSTR __RPC_FAR *oldText);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_canHaveChildren )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *addBehavior )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR bstrUrl,
            /* [in][optional] */ VARIANT __RPC_FAR *pvarFactory,
            /* [out][retval] */ long __RPC_FAR *pCookie);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *removeBehavior )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ long cookie,
            /* [out][retval] */ VARIANT_BOOL __RPC_FAR *pfResult);
        
        /* [nonbrowsable][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_runtimeStyle )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ IHTMLStyle __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_behaviorUrns )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ IDispatch __RPC_FAR *__RPC_FAR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_tagUrn )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_tagUrn )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ BSTR __RPC_FAR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_onbeforeeditfocus )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_onbeforeeditfocus )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ VARIANT __RPC_FAR *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_readyStateValue )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [out][retval] */ long __RPC_FAR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getElementsByTagName )( 
            IHTMLElement2 __RPC_FAR * This,
            /* [in] */ BSTR v,
            /* [out][retval] */ IHTMLElementCollection __RPC_FAR *__RPC_FAR *pelColl);
        
        END_INTERFACE
    } IHTMLElement2Vtbl;

    interface IHTMLElement2
    {
        CONST_VTBL struct IHTMLElement2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLElement2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLElement2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLElement2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLElement2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLElement2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLElement2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLElement2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLElement2_get_scopeName(This,p)	\
    (This)->lpVtbl -> get_scopeName(This,p)

#define IHTMLElement2_setCapture(This,containerCapture)	\
    (This)->lpVtbl -> setCapture(This,containerCapture)

#define IHTMLElement2_releaseCapture(This)	\
    (This)->lpVtbl -> releaseCapture(This)

#define IHTMLElement2_put_onlosecapture(This,v)	\
    (This)->lpVtbl -> put_onlosecapture(This,v)

#define IHTMLElement2_get_onlosecapture(This,p)	\
    (This)->lpVtbl -> get_onlosecapture(This,p)

#define IHTMLElement2_componentFromPoint(This,x,y,component)	\
    (This)->lpVtbl -> componentFromPoint(This,x,y,component)

#define IHTMLElement2_doScroll(This,component)	\
    (This)->lpVtbl -> doScroll(This,component)

#define IHTMLElement2_put_onscroll(This,v)	\
    (This)->lpVtbl -> put_onscroll(This,v)

#define IHTMLElement2_get_onscroll(This,p)	\
    (This)->lpVtbl -> get_onscroll(This,p)

#define IHTMLElement2_put_ondrag(This,v)	\
    (This)->lpVtbl -> put_ondrag(This,v)

#define IHTMLElement2_get_ondrag(This,p)	\
    (This)->lpVtbl -> get_ondrag(This,p)

#define IHTMLElement2_put_ondragend(This,v)	\
    (This)->lpVtbl -> put_ondragend(This,v)

#define IHTMLElement2_get_ondragend(This,p)	\
    (This)->lpVtbl -> get_ondragend(This,p)

#define IHTMLElement2_put_ondragenter(This,v)	\
    (This)->lpVtbl -> put_ondragenter(This,v)

#define IHTMLElement2_get_ondragenter(This,p)	\
    (This)->lpVtbl -> get_ondragenter(This,p)

#define IHTMLElement2_put_ondragover(This,v)	\
    (This)->lpVtbl -> put_ondragover(This,v)

#define IHTMLElement2_get_ondragover(This,p)	\
    (This)->lpVtbl -> get_ondragover(This,p)

#define IHTMLElement2_put_ondragleave(This,v)	\
    (This)->lpVtbl -> put_ondragleave(This,v)

#define IHTMLElement2_get_ondragleave(This,p)	\
    (This)->lpVtbl -> get_ondragleave(This,p)

#define IHTMLElement2_put_ondrop(This,v)	\
    (This)->lpVtbl -> put_ondrop(This,v)

#define IHTMLElement2_get_ondrop(This,p)	\
    (This)->lpVtbl -> get_ondrop(This,p)

#define IHTMLElement2_put_onbeforecut(This,v)	\
    (This)->lpVtbl -> put_onbeforecut(This,v)

#define IHTMLElement2_get_onbeforecut(This,p)	\
    (This)->lpVtbl -> get_onbeforecut(This,p)

#define IHTMLElement2_put_oncut(This,v)	\
    (This)->lpVtbl -> put_oncut(This,v)

#define IHTMLElement2_get_oncut(This,p)	\
    (This)->lpVtbl -> get_oncut(This,p)

#define IHTMLElement2_put_onbeforecopy(This,v)	\
    (This)->lpVtbl -> put_onbeforecopy(This,v)

#define IHTMLElement2_get_onbeforecopy(This,p)	\
    (This)->lpVtbl -> get_onbeforecopy(This,p)

#define IHTMLElement2_put_oncopy(This,v)	\
    (This)->lpVtbl -> put_oncopy(This,v)

#define IHTMLElement2_get_oncopy(This,p)	\
    (This)->lpVtbl -> get_oncopy(This,p)

#define IHTMLElement2_put_onbeforepaste(This,v)	\
    (This)->lpVtbl -> put_onbeforepaste(This,v)

#define IHTMLElement2_get_onbeforepaste(This,p)	\
    (This)->lpVtbl -> get_onbeforepaste(This,p)

#define IHTMLElement2_put_onpaste(This,v)	\
    (This)->lpVtbl -> put_onpaste(This,v)

#define IHTMLElement2_get_onpaste(This,p)	\
    (This)->lpVtbl -> get_onpaste(This,p)

#define IHTMLElement2_get_currentStyle(This,p)	\
    (This)->lpVtbl -> get_currentStyle(This,p)

#define IHTMLElement2_put_onpropertychange(This,v)	\
    (This)->lpVtbl -> put_onpropertychange(This,v)

#define IHTMLElement2_get_onpropertychange(This,p)	\
    (This)->lpVtbl -> get_onpropertychange(This,p)

#define IHTMLElement2_getClientRects(This,pRectCol)	\
    (This)->lpVtbl -> getClientRects(This,pRectCol)

#define IHTMLElement2_getBoundingClientRect(This,pRect)	\
    (This)->lpVtbl -> getBoundingClientRect(This,pRect)

#define IHTMLElement2_setExpression(This,propname,expression,language)	\
    (This)->lpVtbl -> setExpression(This,propname,expression,language)

#define IHTMLElement2_getExpression(This,propname,expression)	\
    (This)->lpVtbl -> getExpression(This,propname,expression)

#define IHTMLElement2_removeExpression(This,propname,pfSuccess)	\
    (This)->lpVtbl -> removeExpression(This,propname,pfSuccess)

#define IHTMLElement2_put_tabIndex(This,v)	\
    (This)->lpVtbl -> put_tabIndex(This,v)

#define IHTMLElement2_get_tabIndex(This,p)	\
    (This)->lpVtbl -> get_tabIndex(This,p)

#define IHTMLElement2_focus(This)	\
    (This)->lpVtbl -> focus(This)

#define IHTMLElement2_put_accessKey(This,v)	\
    (This)->lpVtbl -> put_accessKey(This,v)

#define IHTMLElement2_get_accessKey(This,p)	\
    (This)->lpVtbl -> get_accessKey(This,p)

#define IHTMLElement2_put_onblur(This,v)	\
    (This)->lpVtbl -> put_onblur(This,v)

#define IHTMLElement2_get_onblur(This,p)	\
    (This)->lpVtbl -> get_onblur(This,p)

#define IHTMLElement2_put_onfocus(This,v)	\
    (This)->lpVtbl -> put_onfocus(This,v)

#define IHTMLElement2_get_onfocus(This,p)	\
    (This)->lpVtbl -> get_onfocus(This,p)

#define IHTMLElement2_put_onresize(This,v)	\
    (This)->lpVtbl -> put_onresize(This,v)

#define IHTMLElement2_get_onresize(This,p)	\
    (This)->lpVtbl -> get_onresize(This,p)

#define IHTMLElement2_blur(This)	\
    (This)->lpVtbl -> blur(This)

#define IHTMLElement2_addFilter(This,pUnk)	\
    (This)->lpVtbl -> addFilter(This,pUnk)

#define IHTMLElement2_removeFilter(This,pUnk)	\
    (This)->lpVtbl -> removeFilter(This,pUnk)

#define IHTMLElement2_get_clientHeight(This,p)	\
    (This)->lpVtbl -> get_clientHeight(This,p)

#define IHTMLElement2_get_clientWidth(This,p)	\
    (This)->lpVtbl -> get_clientWidth(This,p)

#define IHTMLElement2_get_clientTop(This,p)	\
    (This)->lpVtbl -> get_clientTop(This,p)

#define IHTMLElement2_get_clientLeft(This,p)	\
    (This)->lpVtbl -> get_clientLeft(This,p)

#define IHTMLElement2_attachEvent(This,event,pDisp,pfResult)	\
    (This)->lpVtbl -> attachEvent(This,event,pDisp,pfResult)

#define IHTMLElement2_detachEvent(This,event,pDisp)	\
    (This)->lpVtbl -> detachEvent(This,event,pDisp)

#define IHTMLElement2_get_readyState(This,p)	\
    (This)->lpVtbl -> get_readyState(This,p)

#define IHTMLElement2_put_onreadystatechange(This,v)	\
    (This)->lpVtbl -> put_onreadystatechange(This,v)

#define IHTMLElement2_get_onreadystatechange(This,p)	\
    (This)->lpVtbl -> get_onreadystatechange(This,p)

#define IHTMLElement2_put_onrowsdelete(This,v)	\
    (This)->lpVtbl -> put_onrowsdelete(This,v)

#define IHTMLElement2_get_onrowsdelete(This,p)	\
    (This)->lpVtbl -> get_onrowsdelete(This,p)

#define IHTMLElement2_put_onrowsinserted(This,v)	\
    (This)->lpVtbl -> put_onrowsinserted(This,v)

#define IHTMLElement2_get_onrowsinserted(This,p)	\
    (This)->lpVtbl -> get_onrowsinserted(This,p)

#define IHTMLElement2_put_oncellchange(This,v)	\
    (This)->lpVtbl -> put_oncellchange(This,v)

#define IHTMLElement2_get_oncellchange(This,p)	\
    (This)->lpVtbl -> get_oncellchange(This,p)

#define IHTMLElement2_put_dir(This,v)	\
    (This)->lpVtbl -> put_dir(This,v)

#define IHTMLElement2_get_dir(This,p)	\
    (This)->lpVtbl -> get_dir(This,p)

#define IHTMLElement2_createControlRange(This,range)	\
    (This)->lpVtbl -> createControlRange(This,range)

#define IHTMLElement2_get_scrollHeight(This,p)	\
    (This)->lpVtbl -> get_scrollHeight(This,p)

#define IHTMLElement2_get_scrollWidth(This,p)	\
    (This)->lpVtbl -> get_scrollWidth(This,p)

#define IHTMLElement2_put_scrollTop(This,v)	\
    (This)->lpVtbl -> put_scrollTop(This,v)

#define IHTMLElement2_get_scrollTop(This,p)	\
    (This)->lpVtbl -> get_scrollTop(This,p)

#define IHTMLElement2_put_scrollLeft(This,v)	\
    (This)->lpVtbl -> put_scrollLeft(This,v)

#define IHTMLElement2_get_scrollLeft(This,p)	\
    (This)->lpVtbl -> get_scrollLeft(This,p)

#define IHTMLElement2_clearAttributes(This)	\
    (This)->lpVtbl -> clearAttributes(This)

#define IHTMLElement2_mergeAttributes(This,mergeThis)	\
    (This)->lpVtbl -> mergeAttributes(This,mergeThis)

#define IHTMLElement2_put_oncontextmenu(This,v)	\
    (This)->lpVtbl -> put_oncontextmenu(This,v)

#define IHTMLElement2_get_oncontextmenu(This,p)	\
    (This)->lpVtbl -> get_oncontextmenu(This,p)

#define IHTMLElement2_insertAdjacentElement(This,where,insertedElement,inserted)	\
    (This)->lpVtbl -> insertAdjacentElement(This,where,insertedElement,inserted)

#define IHTMLElement2_applyElement(This,apply,where,applied)	\
    (This)->lpVtbl -> applyElement(This,apply,where,applied)

#define IHTMLElement2_getAdjacentText(This,where,text)	\
    (This)->lpVtbl -> getAdjacentText(This,where,text)

#define IHTMLElement2_replaceAdjacentText(This,where,newText,oldText)	\
    (This)->lpVtbl -> replaceAdjacentText(This,where,newText,oldText)

#define IHTMLElement2_get_canHaveChildren(This,p)	\
    (This)->lpVtbl -> get_canHaveChildren(This,p)

#define IHTMLElement2_addBehavior(This,bstrUrl,pvarFactory,pCookie)	\
    (This)->lpVtbl -> addBehavior(This,bstrUrl,pvarFactory,pCookie)

#define IHTMLElement2_removeBehavior(This,cookie,pfResult)	\
    (This)->lpVtbl -> removeBehavior(This,cookie,pfResult)

#define IHTMLElement2_get_runtimeStyle(This,p)	\
    (This)->lpVtbl -> get_runtimeStyle(This,p)

#define IHTMLElement2_get_behaviorUrns(This,p)	\
    (This)->lpVtbl -> get_behaviorUrns(This,p)

#define IHTMLElement2_put_tagUrn(This,v)	\
    (This)->lpVtbl -> put_tagUrn(This,v)

#define IHTMLElement2_get_tagUrn(This,p)	\
    (This)->lpVtbl -> get_tagUrn(This,p)

#define IHTMLElement2_put_onbeforeeditfocus(This,v)	\
    (This)->lpVtbl -> put_onbeforeeditfocus(This,v)

#define IHTMLElement2_get_onbeforeeditfocus(This,p)	\
    (This)->lpVtbl -> get_onbeforeeditfocus(This,p)

#define IHTMLElement2_get_readyStateValue(This,p)	\
    (This)->lpVtbl -> get_readyStateValue(This,p)

#define IHTMLElement2_getElementsByTagName(This,v,pelColl)	\
    (This)->lpVtbl -> getElementsByTagName(This,v,pelColl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_scopeName_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ BSTR __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_scopeName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_setCapture_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in][defaultvalue] */ VARIANT_BOOL containerCapture);


void __RPC_STUB IHTMLElement2_setCapture_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_releaseCapture_Proxy( 
    IHTMLElement2 __RPC_FAR * This);


void __RPC_STUB IHTMLElement2_releaseCapture_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_onlosecapture_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_onlosecapture_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_onlosecapture_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_onlosecapture_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_componentFromPoint_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ long x,
    /* [in] */ long y,
    /* [out][retval] */ BSTR __RPC_FAR *component);


void __RPC_STUB IHTMLElement2_componentFromPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_doScroll_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in][optional] */ VARIANT component);


void __RPC_STUB IHTMLElement2_doScroll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_onscroll_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_onscroll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_onscroll_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_onscroll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_ondrag_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_ondrag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_ondrag_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_ondrag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_ondragend_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_ondragend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_ondragend_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_ondragend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_ondragenter_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_ondragenter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_ondragenter_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_ondragenter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_ondragover_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_ondragover_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_ondragover_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_ondragover_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_ondragleave_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_ondragleave_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_ondragleave_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_ondragleave_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_ondrop_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_ondrop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_ondrop_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_ondrop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_onbeforecut_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_onbeforecut_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_onbeforecut_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_onbeforecut_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_oncut_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_oncut_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_oncut_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_oncut_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_onbeforecopy_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_onbeforecopy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_onbeforecopy_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_onbeforecopy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_oncopy_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_oncopy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_oncopy_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_oncopy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_onbeforepaste_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_onbeforepaste_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_onbeforepaste_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_onbeforepaste_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_put_onpaste_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement2_put_onpaste_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_onpaste_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ VARIANT __RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_onpaste_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement2_get_currentStyle_Proxy( 
    IHTMLElement2 __RPC_FAR * This,
    /* [out][retval] */ IHTMLCurrentStyle __RPC_FAR *__RPC_FAR *p);


void __RPC_STUB IHTMLElement2_get_currentStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


