ILocalRegistryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILocalRegistry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILocalRegistry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILocalRegistry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILocalRegistry_CreateInstance(This,clsid,punkOuter,riid,dwFlags,ppvObj)	\
    ( (This)->lpVtbl -> CreateInstance(This,clsid,punkOuter,riid,dwFlags,ppvObj) ) 

#define ILocalRegistry_GetTypeLibOfClsid(This,clsid,pptlib)	\
    ( (This)->lpVtbl -> GetTypeLibOfClsid(This,clsid,pptlib) ) 

#define ILocalRegistry_GetClassObjectOfClsid(This,clsid,dwFlags,lpReserved,riid,ppvClassObject)	\
    ( (This)->lpVtbl -> GetClassObjectOfClsid(This,clsid,dwFlags,lpReserved,riid,ppvClassObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILocalRegistry_INTERFACE_DEFINED__ */


#ifndef __ILocalRegistry2_INTERFACE_DEFINED__
#define __ILocalRegistry2_INTERFACE_DEFINED__

/* interface ILocalRegistry2 */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_ILocalRegistry2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("77BB19B0-0462-11d1-AAF6-00A0C9055A90")
    ILocalRegistry2 : public ILocalRegistry
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetLocalRegistryRoot( 
            /* [out] */ BSTR *pbstrRoot) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ILocalRegistry2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILocalRegistry2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILocalRegistry2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILocalRegistry2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            ILocalRegistry2 * This,
            /* [in] */ CLSID clsid,
            /* [in] */ IUnknown *punkOuter,
            /* [in] */ REFIID riid,
            /* [in] */ DWORD dwFlags,
            /* [out] */ void **ppvObj);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeLibOfClsid )( 
            ILocalRegistry2 * This,
            /* [in] */ CLSID clsid,
            /* [out] */ ITypeLib **pptlib);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassObjectOfClsid )( 
            ILocalRegistry2 * This,
            /* [in] */ REFCLSID clsid,
            /* [in] */ DWORD dwFlags,
            /* [in] */ LPVOID lpReserved,
            /* [in] */ REFIID riid,
            /* [in] */ void **ppvClassObject);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocalRegistryRoot )( 
            ILocalRegistry2 * This,
            /* [out] */ BSTR *pbstrRoot);
        
        END_INTERFACE
    } ILocalRegistry2Vtbl;

    interface ILocalRegistry2
    {
        CONST_VTBL struct ILocalRegistry2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILocalRegistry2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILocalRegistry2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILocalRegistry2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILocalRegistry2_CreateInstance(This,clsid,punkOuter,riid,dwFlags,ppvObj)	\
    ( (This)->lpVtbl -> CreateInstance(This,clsid,punkOuter,riid,dwFlags,ppvObj) ) 

#define ILocalRegistry2_GetTypeLibOfClsid(This,clsid,pptlib)	\
    ( (This)->lpVtbl -> GetTypeLibOfClsid(This,clsid,pptlib) ) 

#define ILocalRegistry2_GetClassObjectOfClsid(This,clsid,dwFlags,lpReserved,riid,ppvClassObject)	\
    ( (This)->lpVtbl -> GetClassObjectOfClsid(This,clsid,dwFlags,lpReserved,riid,ppvClassObject) ) 


#define ILocalRegistry2_GetLocalRegistryRoot(This,pbstrRoot)	\
    ( (This)->lpVtbl -> GetLocalRegistryRoot(This,pbstrRoot) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILocalRegistry2_INTERFACE_DEFINED__ */


#ifndef __ILocalRegistry3_INTERFACE_DEFINED__
#define __ILocalRegistry3_INTERFACE_DEFINED__

/* interface ILocalRegistry3 */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_ILocalRegistry3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1B01F13F-ABEE-4761-91AF-76CE6B4C9E7A")
    ILocalRegistry3 : public ILocalRegistry2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateManagedInstance( 
            /* [in] */ LPCWSTR codeBase,
            /* [in] */ LPCWSTR assemblyName,
            /* [in] */ LPCWSTR typeName,
            /* [in] */ REFIID riid,
            /* [out] */ void **ppvObj) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClassObjectOfManagedClass( 
            /* [in] */ LPCWSTR codeBase,
            /* [in] */ LPCWSTR assemblyName,
            /* [in] */ LPCWSTR typeName,
            /* [in] */ REFIID riid,
            /* [out] */ void **ppvClassObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ILocalRegistry3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILocalRegistry3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILocalRegistry3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILocalRegistry3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            ILocalRegistry3 * This,
            /* [in] */ CLSID clsid,
            /* [in] */ IUnknown *punkOuter,
            /* [in] */ REFIID riid,
            /* [in] */ DWORD dwFlags,
            /* [out] */ void **ppvObj);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeLibOfClsid )( 
            ILocalRegistry3 * This,
            /* [in] */ CLSID clsid,
            /* [out] */ ITypeLib **pptlib);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassObjectOfClsid )( 
            ILocalRegistry3 * This,
            /* [in] */ REFCLSID clsid,
            /* [in] */ DWORD dwFlags,
            /* [in] */ LPVOID lpReserved,
            /* [in] */ REFIID riid,
            /* [in] */ void **ppvClassObject);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocalRegistryRoot )( 
            ILocalRegistry3 * This,
            /* [out] */ BSTR *pbstrRoot);
        
        HRESULT ( STDMETHODCALLTYPE *CreateManagedInstance )( 
            ILocalRegistry3 * This,
            /* [in] */ LPCWSTR codeBase,
            /* [in] */ LPCWSTR assemblyName,
            /* [in] */ LPCWSTR typeName,
            /* [in] */ REFIID riid,
            /* [out] */ void **ppvObj);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassObjectOfManagedClass )( 
            ILocalRegistry3 * This,
            /* [in] */ LPCWSTR codeBase,
            /* [in] */ LPCWSTR assemblyName,
            /* [in] */ LPCWSTR typeName,
            /* [in] */ REFIID riid,
            /* [out] */ void **ppvClassObject);
        
        END_INTERFACE
    } ILocalRegistry3Vtbl;

    interface ILocalRegistry3
    {
        CONST_VTBL struct ILocalRegistry3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILocalRegistry3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILocalRegistry3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILocalRegistry3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILocalRegistry3_CreateInstance(This,clsid,punkOuter,riid,dwFlags,ppvObj)	\
    ( (This)->lpVtbl -> CreateInstance(This,clsid,punkOuter,riid,dwFlags,ppvObj) ) 

#define ILocalRegistry3_GetTypeLibOfClsid(This,clsid,pptlib)	\
    ( (This)->lpVtbl -> GetTypeLibOfClsid(This,clsid,pptlib) ) 

#define ILocalRegistry3_GetClassObjectOfClsid(This,clsid,dwFlags,lpReserved,riid,ppvClassObject)	\
    ( (This)->lpVtbl -> GetClassObjectOfClsid(This,clsid,dwFlags,lpReserved,riid,ppvClassObject) ) 


#define ILocalRegistry3_GetLocalRegistryRoot(This,pbstrRoot)	\
    ( (This)->lpVtbl -> GetLocalRegistryRoot(This,pbstrRoot) ) 


#define ILocalRegistry3_CreateManagedInstance(This,codeBase,assemblyName,typeName,riid,ppvObj)	\
    ( (This)->lpVtbl -> CreateManagedInstance(This,codeBase,assemblyName,typeName,riid,ppvObj) ) 

#define ILocalRegistry3_GetClassObjectOfManagedClass(This,codeBase,assemblyName,typeName,riid,ppvClassObject)	\
    ( (This)->lpVtbl -> GetClassObjectOfManagedClass(This,codeBase,assemblyName,typeName,riid,ppvClassObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILocalRegistry3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_objext_0000_0008 */
/* [local] */ 

#define SID_SLocalRegistry IID_ILocalRegistry


extern RPC_IF_HANDLE __MIDL_itf_objext_0000_0008_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objext_0000_0008_v0_0_s_ifspec;

#ifndef __IUIElement_INTERFACE_DEFINED__
#define __IUIElement_INTERFACE_DEFINED__

/* interface IUIElement */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IUIElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("759d0500-d979-11ce-84ec-00aa00614f3e")
    IUIElement : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Show( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Hide( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsVisible( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IUIElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IUIElement * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IUIElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *Show )( 
            IUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *Hide )( 
            IUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *IsVisible )( 
            IUIElement * This);
        
        END_INTERFACE
    } IUIElementVtbl;

    interface IUIElement
    {
        CONST_VTBL struct IUIElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IUIElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IUIElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IUIElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IUIElement_Show(This)	\
    ( (This)->lpVtbl -> Show(This) ) 

#define IUIElement_Hide(This)	\
    ( (This)->lpVtbl -> Hide(This) ) 

#define IUIElement_IsVisible(This)	\
    ( (This)->lpVtbl -> IsVisible(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IUIElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_objext_0000_0009 */
/* [local] */ 

typedef int PROPCAT;



extern RPC_IF_HANDLE __MIDL_itf_objext_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objext_0000_0009_v0_0_s_ifspec;

#ifndef __ICategorizeProperties_INTERFACE_DEFINED__
#define __ICategorizeProperties_INTERFACE_DEFINED__

/* interface ICategorizeProperties */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_ICategorizeProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4D07FC10-F931-11ce-B001-00AA006884E5")
    ICategorizeProperties : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MapPropertyToCategory( 
            /* [in] */ DISPID dispid,
            /* [out] */ PROPCAT *ppropcat) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCategoryName( 
            /* [in] */ PROPCAT propcat,
            /* [in] */ LCID lcid,
            /* [out] */ BSTR *pbstrName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICategorizePropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICategorizeProperties * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICategorizeProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICategorizeProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *MapPropertyToCategory )( 
            ICategorizeProperties * This,
            /* [in] */ DISPID dispid,
            /* [out] */ PROPCAT *ppropcat);
        
        HRESULT ( STDMETHODCALLTYPE *GetCategoryName )( 
            ICategorizeProperties * This,
            /* [in] */ PROPCAT propcat,
            /* [in] */ LCID lcid,
            /* [out] */ BSTR *pbstrName);
        
        END_INTERFACE
    } ICategorizePropertiesVtbl;

    interface ICategorizeProperties
    {
        CONST_VTBL struct ICategorizePropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICategorizeProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICategorizeProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICategorizeProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICategorizeProperties_MapPropertyToCategory(This,dispid,ppropcat)	\
    ( (This)->lpVtbl -> MapPropertyToCategory(This,dispid,ppropcat) ) 

#define ICategorizeProperties_GetCategoryName(This,propcat,lcid,pbstrName)	\
    ( (This)->lpVtbl -> GetCategoryName(This,propcat,lcid,pbstrName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICategorizeProperties_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_objext_0000_0010 */
/* [local] */ 

typedef ICategorizeProperties *LPCATEGORIZEPROPERTIES;

#define PROPCAT_Nil -1
#define PROPCAT_Misc -2
#define PROPCAT_Font -3
#define PROPCAT_Position -4
#define PROPCAT_Appearance -5
#define PROPCAT_Behavior -6
#define PROPCAT_Data -7
#define PROPCAT_List -8
#define PROPCAT_Text -9
#define PROPCAT_Scale -10
#define PROPCAT_DDE -11
#define HELPINFO_WHATS_THIS_MODE_ON     1


extern RPC_IF_HANDLE __MIDL_itf_objext_0000_0010_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objext_0000_0010_v0_0_s_ifspec;

#ifndef __IHelp_INTERFACE_DEFINED__
#define __IHelp_INTERFACE_DEFINED__

/* interface IHelp */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IHelp;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6d5140c8-7436-11ce-8034-00aa006009fa")
    IHelp : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetHelpFile( 
            /* [out] */ BSTR *pbstr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpInfo( 
            /* [out] */ DWORD *pdwHelpInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ShowHelp( 
            /* [in] */ LPOLESTR szHelp,
            /* [in] */ UINT fuCommand,
            /* [in] */ DWORD dwHelpContext) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHelpVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHelp * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHelp * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHelp * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetHelpFile )( 
            IHelp * This,
            /* [out] */ BSTR *pbstr);
        
        HRESULT ( STDMETHODCALLTYPE *GetHelpInfo )( 
            IHelp * This,
            /* [out] */ DWORD *pdwHelpInfo);
        
        HRESULT ( STDMETHODCALLTYPE *ShowHelp )( 
            IHelp * This,
            /* [in] */ LPOLESTR szHelp,
            /* [in] */ UINT fuCommand,
            /* [in] */ DWORD dwHelpContext);
        
        END_INTERFACE
    } IHelpVtbl;

    interface IHelp
    {
        CONST_VTBL struct IHelpVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHelp_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHelp_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHelp_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHelp_GetHelpFile(This,pbstr)	\
    ( (This)->lpVtbl -> GetHelpFile(This,pbstr) ) 

#define IHelp_GetHelpInfo(This,pdwHelpInfo)	\
    ( (This)->lpVtbl -> GetHelpInfo(This,pdwHelpInfo) ) 

#define IHelp_ShowHelp(This,szHelp,fuCommand,dwHelpContext)	\
    ( (This)->lpVtbl -> ShowHelp(This,szHelp,fuCommand,dwHelpContext) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHelp_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_objext_0000_0011 */
/* [local] */ 

EXTERN_C const IID SID_SHelp;
#endif


extern RPC_IF_HANDLE __MIDL_itf_objext_0000_0011_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objext_0000_0011_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\olecm.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for olecm.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __olecm_h__
#define __olecm_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IOleComponent_FWD_DEFINED__
#define __IOleComponent_FWD_DEFINED__
typedef interface IOleComponent IOleComponent;
#endif 	/* __IOleComponent_FWD_DEFINED__ */


#ifndef __IOleComponentManager_FWD_DEFINED__
#define __IOleComponentManager_FWD_DEFINED__
typedef interface IOleComponentManager IOleComponentManager;
#endif 	/* __IOleComponentManager_FWD_DEFINED__ */


/* header files for imported files */
#include "oleidl.h"
#include "servprov.h"
#include "oaidl.h"
#include "docobj.h"
#include "designer.h"
#include "textmgr.h"
#include "oleipc.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_olecm_0000_0000 */
/* [local] */ 


enum _OLECRF
    {	olecrfNeedIdleTime	= 1,
	olecrfNeedPeriodicIdleTime	= 2,
	olecrfPreTranslateKeys	= 4,
	olecrfPreTranslateAll	= 8,
	olecrfNeedSpecActiveNotifs	= 16,
	olecrfNeedAllActiveNotifs	= 32,
	olecrfExclusiveBorderSpace	= 64,
	olecrfExclusiveActivation	= 128
    } ;
typedef DWORD OLECRF;


enum _OLECADVF
    {	olecadvfModal	= 1,
	olecadvfRedrawOff	= 2,
	olecadvfWarningsOff	= 4,
	olecadvfRecording	= 8
    } ;
typedef DWORD OLECADVF;

typedef struct _OLECRINFO
    {
    ULONG cbSize;
    ULONG uIdleTimeInterval;
    OLECRF grfcrf;
    OLECADVF grfcadvf;
    } 	OLECRINFO;


enum _OLECHOSTF
    {	olechostfExclusiveBorderSpace	= 1
    } ;
typedef DWORD OLECHOSTF;

typedef struct _OLECHOSTINFO
    {
    ULONG cbSize;
    OLECHOSTF grfchostf;
    } 	OLECHOSTINFO;


enum _OLEIDLEF
    {	oleidlefPeriodic	= 1,
	oleidlefNonPeriodic	= 2,
	oleidlefPriority	= 4,
	oleidlefAll	= -1
    } ;
typedef DWORD OLEIDLEF;


enum _OLELOOP
    {	oleloopFocusWait	= 1,
	oleloopDoEvents	= 2,
	oleloopDebug	= 3,
	oleloopModalForm	= 4
    } ;
typedef ULONG OLELOOP;


enum _OLECSTATE
    {	olecstateModal	= 1,
	olecstateRedrawOff	= 2,
	olecstateWarningsOff	= 3,
	olecstateRecording	= 4
    } ;
typedef ULONG OLECSTATE;


enum _OLECCONTEXT
    {	oleccontextAll	= 0,
	oleccontextMine	= 1,
	oleccontextOthers	= 2
    } ;
typedef ULONG OLECCONTEXT;


enum _OLEGAC
    {	olegacActive	= 0,
	olegacTracking	= 1,
	olegacTrackingOrActive	= 2
    } ;
typedef DWORD OLEGAC;


enum _OLECWINDOW
    {	olecWindowFrameToplevel	= 0,
	olecWindowFrameOwner	= 1,
	olecWindowComponent	= 2,
	olecWindowDlgOwner	= 3
    } ;
typedef DWORD OLECWINDOW;



extern RPC_IF_HANDLE __MIDL_itf_olecm_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_olecm_0000_0000_v0_0_s_ifspec;

#ifndef __IOleComponent_INTERFACE_DEFINED__
#define __IOleComponent_INTERFACE_DEFINED__

/* interface IOleComponent */
/* [object][local][unique][version][uuid] */ 


EXTERN_C const IID IID_IOleComponent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0600-0000-0000-C000-000000000046")
    IOleComponent : public IUnknown
    {
    public:
        virtual BOOL STDMETHODCALLTYPE FReserved1( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ UINT message,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FPreTranslateMessage( 
            /* [out][in] */ MSG *pMsg) = 0;
        
        virtual void STDMETHODCALLTYPE OnEnterState( 
            /* [in] */ OLECSTATE uStateID,
            /* [in] */ BOOL fEnter) = 0;
        
        virtual void STDMETHODCALLTYPE OnAppActivate( 
            /* [in] */ BOOL fActive,
            /* [in] */ DWORD dwOtherThreadID) = 0;
        
        virtual void STDMETHODCALLTYPE OnLoseActivation( void) = 0;
        
        virtual void STDMETHODCALLTYPE OnActivationChange( 
            /* [in] */ IOleComponent *pic,
            /* [in] */ BOOL fSameComponent,
            /* [in] */ const OLECRINFO *pcrinfo,
            /* [in] */ BOOL fHostIsActivating,
            /* [in] */ const OLECHOSTINFO *pchostinfo,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FDoIdle( 
            /* [in] */ OLEIDLEF grfidlef) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FContinueMessageLoop( 
            /* [in] */ OLELOOP uReason,
            /* [in] */ void *pvLoopData,
            /* [in] */ MSG *pMsgPeeked) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FQueryTerminate( 
            /* [in] */ BOOL fPromptUser) = 0;
        
        virtual void STDMETHODCALLTYPE Terminate( void) = 0;
        
        virtual HWND STDMETHODCALLTYPE HwndGetWindow( 
            /* [in] */ OLECWINDOW dwWhich,
            /* [in] */ DWORD dwReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOleComponentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOleComponent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOleComponent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOleComponent * This);
        
        BOOL ( STDMETHODCALLTYPE *FReserved1 )( 
            IOleComponent * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ UINT message,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam);
        
        BOOL ( STDMETHODCALLTYPE *FPreTranslateMessage )( 
            IOleComponent * This,
            /* [out][in] */ MSG *pMsg);
        
        void ( STDMETHODCALLTYPE *OnEnterState )( 
            IOleComponent * This,
            /* [in] */ OLECSTATE uStateID,
            /* [in] */ BOOL fEnter);
        
        void ( STDMETHODCALLTYPE *OnAppActivate )( 
            IOleComponent * This,
            /* [in] */ BOOL fActive,
            /* [in] */ DWORD dwOtherThreadID);
        
        void ( STDMETHODCALLTYPE *OnLoseActivation )( 
            IOleComponent * This);
        
        void ( STDMETHODCALLTYPE *OnActivationChange )( 
            IOleComponent * This,
            /* [in] */ IOleComponent *pic,
            /* [in] */ BOOL fSameComponent,
            /* [in] */ const OLECRINFO *pcrinfo,
            /* [in] */ BOOL fHostIsActivating,
            /* [in] */ const OLECHOSTINFO *pchostinfo,
            /* [in] */ DWORD dwReserved);
        
        BOOL ( STDMETHODCALLTYPE *FDoIdle )( 
            IOleComponent * This,
            /* [in] */ OLEIDLEF grfidlef);
        
        BOOL ( STDMETHODCALLTYPE *FContinueMessageLoop )( 
            IOleComponent * This,
            /* [in] */ OLELOOP uReason,
            /* [in] */ void *pvLoopData,
            /* [in] */ MSG *pMsgPeeked);
        
        BOOL ( STDMETHODCALLTYPE *FQueryTerminate )( 
            IOleComponent * This,
            /* [in] */ BOOL fPromptUser);
        
        void ( STDMETHODCALLTYPE *Terminate )( 
            IOleComponent * This);
        
        HWND ( STDMETHODCALLTYPE *HwndGetWindow )( 
            IOleComponent * This,
            /* [in] */ OLECWINDOW dwWhich,
            /* [in] */ DWORD dwReserved);
        
        END_INTERFACE
    } IOleComponentVtbl;

    interface IOleComponent
    {
        CONST_VTBL struct IOleComponentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOleComponent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IOleComponent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IOleComponent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IOleComponent_FReserved1(This,dwReserved,message,wParam,lParam)	\
    ( (This)->lpVtbl -> FReserved1(This,dwReserved,message,wParam,lParam) ) 

#define IOleComponent_FPreTranslateMessage(This,pMsg)	\
    ( (This)->lpVtbl -> FPreTranslateMessage(This,pMsg) ) 

#define IOleComponent_OnEnterState(This,uStateID,fEnter)	\
    ( (This)->lpVtbl -> OnEnterState(This,uStateID,fEnter) ) 

#define IOleComponent_OnAppActivate(This,fActive,dwOtherThreadID)	\
    ( (This)->lpVtbl -> OnAppActivate(This,fActive,dwOtherThreadID) ) 

#define IOleComponent_OnLoseActivation(This)	\
    ( (This)->lpVtbl -> OnLoseActivation(This) ) 

#define IOleComponent_OnActivationChange(This,pic,fSameComponent,pcrinfo,fHostIsActivating,pchostinfo,dwReserved)	\
    ( (This)->lpVtbl -> OnActivationChange(This,pic,fSameComponent,pcrinfo,fHostIsActivating,pchostinfo,dwReserved) ) 

#define IOleComponent_FDoIdle(This,grfidlef)	\
    ( (This)->lpVtbl -> FDoIdle(This,grfidlef) ) 

#define IOleComponent_FContinueMessageLoop(This,uReason,pvLoopData,pMsgPeeked)	\
    ( (This)->lpVtbl -> FContinueMessageLoop(This,uReason,pvLoopData,pMsgPeeked) ) 

#define IOleComponent_FQueryTerminate(This,fPromptUser)	\
    ( (This)->lpVtbl -> FQueryTerminate(This,fPromptUser) ) 

#define IOleComponent_Terminate(This)	\
    ( (This)->lpVtbl -> Terminate(This) ) 

#define IOleComponent_HwndGetWindow(This,dwWhich,dwReserved)	\
    ( (This)->lpVtbl -> HwndGetWindow(This,dwWhich,dwReserved) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IOleComponent_INTERFACE_DEFINED__ */


#ifndef __IOleComponentManager_INTERFACE_DEFINED__
#define __IOleComponentManager_INTERFACE_DEFINED__

/* interface IOleComponentManager */
/* [object][local][unique][version][uuid] */ 


EXTERN_C const IID IID_IOleComponentManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0601-0000-0000-C000-000000000046")
    IOleComponentManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE QueryService( 
            /* [in] */ REFGUID guidService,
            /* [in] */ REFIID iid,
            /* [out] */ void **ppvObj) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FReserved1( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ UINT message,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FRegisterComponent( 
            /* [in] */ IOleComponent *piComponent,
            /* [in] */ const OLECRINFO *pcrinfo,
            /* [out] */ DWORD_PTR *pdwComponentID) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FRevokeComponent( 
            /* [in] */ DWORD_PTR dwComponentID) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FUpdateComponentRegistration( 
            /* [in] */ DWORD_PTR dwComponentID,
            /* [in] */ const OLECRINFO *pcrinfo) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FOnComponentActivate( 
            /* [in] */ DWORD_PTR dwComponentID) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FSetTrackingComponent( 
            /* [in] */ DWORD_PTR dwComponentID,
            /* [in] */ BOOL fTrack) = 0;
        
        virtual void STDMETHODCALLTYPE OnComponentEnterState( 
            /* [in] */ DWORD_PTR dwComponentID,
            /* [in] */ OLECSTATE uStateID,
            /* [in] */ OLECCONTEXT uContext,
            /* [in] */ ULONG cpicmExclude,
            /* [in] */ IOleComponentManager **rgpicmExclude,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FOnComponentExitState( 
            /* [in] */ DWORD_PTR dwComponentID,
            /* [in] */ OLECSTATE uStateID,
            /* [in] */ OLECCONTEXT uContext,
            /* [in] */ ULONG cpicmExclude,
            /* [in] */ IOleComponentManager **rgpicmExclude) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FInState( 
            /* [in] */ OLECSTATE uStateID,
            /* [in] */ void *pvoid) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FContinueIdle( void) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FPushMessageLoop( 
            /* [in] */ DWORD_PTR dwComponentID,
            /* [in] */ OLELOOP uReason,
            /* [in] */ void *pvLoopData) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FCreateSubComponentManager( 
            /* [in] */ IUnknown *piunkOuter,
            /* [in] */ IUnknown *piunkServProv,
            /* [in] */ REFIID riid,
            /* [out] */ void **ppvObj) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FGetParentComponentManager( 
            /* [out] */ IOleComponentManager **ppicm) = 0;
        
        virtual BOOL STDMETHODCALLTYPE FGetActiveComponent( 
            /* [in] */ OLEGAC dwgac,
            /* [out] */ IOleComponent **ppic,
            /* [out][in] */ OLECRINFO *pcrinfo,
            /* [in] */ DWORD dwReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOleComponentManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOleComponentManager * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOleComponentManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOleComponentManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *QueryService )( 
            IOleComponentManager * This,
            /* [in] */ REFGUID guidService,
            /* [in] */ REFIID iid,
            /* [out] */ void **ppvObj);
        
        BOOL ( STDMETHODCALLTYPE *FReserved1 )( 
            IOleComponentManager * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ UINT message,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam);
        
        BOOL ( STDMETHODCALLTYPE *FRegisterComponent )( 
            IOleComponentManager * This,
            /* [in] */ IOleComponent *piComponent,
            /* [in] */ const OLECRINFO *pcrinfo,
            /* [out] */ DWORD_PTR *pdwComponentID);
        
        BOOL ( STDMETHODCALLTYPE *FRevokeComponent )( 
            IOleComponentManager * This,
            /* [in] */ DWORD_PTR dwComponentID);
        
        BOOL ( STDMETHODCALLTYPE *FUpdateComponentRegistration )( 
            IOleComponentManager * This,
            /* [in] */ DWORD_PTR dwComponentID,
            /* [in] */ const OLECRINFO *pcrinfo);
        
        BOOL ( STDMETHODCALLTYPE *FOnComponentActivate )( 
            IOleComponentManager * This,
            /* [in] */ DWORD_PTR dwComponentID);
        
        BOOL ( STDMETHODCALLTYPE *FSetTrackingComponent )( 
            IOleComponentManager * This,
            /* [in] */ DWORD_PTR dwComponentID,
            /* [in] */ BOOL fTrack);
        
        void ( STDMETHODCALLTYPE *OnComponentEnterState )( 
            IOleComponentManager * This,
            /* [in] */ DWORD_PTR dwComponentID,
            /* [in] */ OLECSTATE uStateID,
            /* [in] */ OLECCONTEXT uContext,
            /* [in] */ ULONG cpicmExclude,
            /* [in] */ IOleComponentManager **rgpicmExclude,
            /* [in] */ DWORD dwReserved);
        
        BOOL ( STDMETHODCALLTYPE *FOnComponentExitState )( 
            IOleComponentManager * This,
            /* [in] */ DWORD_PTR dwComponentID,
            /* [in] */ OLECSTATE uStateID,
            /* [in] */ OLECCONTEXT uContext,
            /* [in] */ ULONG cpicmExclude,
            /* [in] */ IOleComponentManager **rgpicmExclude);
        
        BOOL ( STDMETHODCALLTYPE *FInState )( 
            IOleComponentManager * This,
            /* [in] */ OLECSTATE uStateID,
            /* [in] */ void *pvoid);
        
        BOOL ( STDMETHODCALLTYPE *FContinueIdle )( 
            IOleComponentManager * This);
        
        BOOL ( STDMETHODCALLTYPE *FPushMessageLoop )( 
            IOleComponentManager * This,
            /* [in] */ DWORD_PTR dwComponentID,
            /* [in] */ OLELOOP uReason,
            /* [in] */ void *pvLoopData);
        
        BOOL ( STDMETHODCALLTYPE *FCreateSubComponentManager )( 
            IOleComponentManager * This,
            /* [in] */ IUnknown *piunkOuter,
            /* [in] */ IUnknown *piunkServProv,
            /* [in] */ REFIID riid,
            /* [out] */ void **ppvObj);
        
        BOOL ( STDMETHODCALLTYPE *FGetParentComponentManager )( 
            IOleComponentManager * This,
            /* [out] */ IOleComponentManager **ppicm);
        
        BOOL ( STDMETHODCALLTYPE *FGetActiveComponent )( 
            IOleComponentManager * This,
            /* [in] */ OLEGAC dwgac,
            /* [out] */ IOleComponent **ppic,
            /* [out][in] */ OLECRINFO *pcrinfo,
            /* [in] */ DWORD dwReserved);
        
        END_INTERFACE
    } IOleComponentManagerVtbl;

    interface IOleComponentManager
    {
        CONST_VTBL struct IOleComponentManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOleComponentManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IOleComponentManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IOleComponentManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IOleComponentManager_QueryService(This,guidService,iid,ppvObj)	\
    ( (This)->lpVtbl -> QueryService(This,guidService,iid,ppvObj) ) 

#define IOleComponentManager_FReserved1(This,dwReserved,message,wParam,lParam)	\
    ( (This)->lpVtbl -> FReserved1(This,dwReserved,message,wParam,lParam) ) 

#define IOleComponentManager_FRegisterComponent(This,piComponent,pcrinfo,pdwComponentID)	\
    ( (This)->lpVtbl -> FRegisterComponent(This,piComponent,pcrinfo,pdwComponentID) ) 

#define IOleComponentManager_FRevokeComponent(This,dwComponentID)	\
    ( (This)->lpVtbl -> FRevokeComponent(This,dwComponentID) ) 

#define IOleComponentManager_FUpdateComponentRegistration(This,dwComponentID,pcrinfo)	\
    ( (This)->lpVtbl -> FUpdateComponentRegistration(This,dwComponentID,pcrinfo) ) 

#define IOleComponentManager_FOnComponentActivate(This,dwComponentID)	\
    ( (This)->lpVtbl -> FOnComponentActivate(This,dwComponentID) ) 

#define IOleComponentManager_FSetTrackingComponent(This,dwComponentID,fTrack)	\
    ( (This)->lpVtbl -> FSetTrackingComponent(This,dwComponentID,fTrack) ) 

#define IOleComponentManager_OnComponentEnterState(This,dwComponentID,uStateID,uContext,cpicmExclude,rgpicmExclude,dwReserved)	\
    ( (This)->lpVtbl -> OnComponentEnterState(This,dwComponentID,uStateID,uContext,cpicmExclude,rgpicmExclude,dwReserved) ) 

#define IOleComponentManager_FOnComponentExitState(This,dwComponentID,uStateID,uContext,cpicmExclude,rgpicmExclude)	\
    ( (This)->lpVtbl -> FOnComponentExitState(This,dwComponentID,uStateID,uContext,cpicmExclude,rgpicmExclude) ) 

#define IOleComponentManager_FInState(This,uStateID,pvoid)	\
    ( (This)->lpVtbl -> FInState(This,uStateID,pvoid) ) 

#define IOleComponentManager_FContinueIdle(This)	\
    ( (This)->lpVtbl -> FContinueIdle(This) ) 

#define IOleComponentManager_FPushMessageLoop(This,dwComponentID,uReason,pvLoopData)	\
    ( (This)->lpVtbl -> FPushMessageLoop(This,dwComponentID,uReason,pvLoopData) ) 

#define IOleComponentManager_FCreateSubComponentManager(This,piunkOuter,piunkServProv,riid,ppvObj)	\
    ( (This)->lpVtbl -> FCreateSubComponentManager(This,piunkOuter,piunkServProv,riid,ppvObj) ) 

#define IOleComponentManager_FGetParentComponentManager(This,ppicm)	\
    ( (This)->lpVtbl -> FGetParentComponentManager(This,ppicm) ) 

#define IOleComponentManager_FGetActiveComponent(This,dwgac,ppic,pcrinfo,dwReserved)	\
    ( (This)->lpVtbl -> FGetActiveComponent(This,dwgac,ppic,pcrinfo,dwReserved) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IOleComponentManager_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_olecm_0000_0002 */
/* [local] */ 

EXTERN_C const IID SID_SOleComponentManager;


extern RPC_IF_HANDLE __MIDL_itf_olecm_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_olecm_0000_0002_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\ocdesign.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for ocdesign.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __ocdesign_h__
#define __ocdesign_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IBuilderWizardManager_FWD_DEFINED__
#define __IBuilderWizardManager_FWD_DEFINED__
typedef interface IBuilderWizardManager IBuilderWizardManager;
#endif 	/* __IBuilderWizardManager_FWD_DEFINED__ */


#ifndef __IProvidePropertyBuilder_FWD_DEFINED__
#define __IProvidePropertyBuilder_FWD_DEFINED__
typedef interface IProvidePropertyBuilder IProvidePropertyBuilder;
#endif 	/* __IProvidePropertyBuilder_FWD_DEFINED__ */


#ifndef __IPerPropertyBrowsing2_FWD_DEFINED__
#define __IPerPropertyBrowsing2_FWD_DEFINED__
typedef interface IPerPropertyBrowsing2 IPerPropertyBrowsing2;
#endif 	/* __IPerPropertyBrowsing2_FWD_DEFINED__ */


#ifndef __IPropertyPageUndoString_FWD_DEFINED__
#define __IPropertyPageUndoString_FWD_DEFINED__
typedef interface IPropertyPageUndoString IPropertyPageUndoString;
#endif 	/* __IPropertyPageUndoString_FWD_DEFINED__ */


#ifndef __IProvideRuntimeHTML_FWD_DEFINED__
#define __IProvideRuntimeHTML_FWD_DEFINED__
typedef interface IProvideRuntimeHTML IProvideRuntimeHTML;
#endif 	/* __IProvideRuntimeHTML_FWD_DEFINED__ */


#ifndef __IProvideAltHTML_FWD_DEFINED__
#define __IProvideAltHTML_FWD_DEFINED__
typedef interface IProvideAltHTML IProvideAltHTML;
#endif 	/* __IProvideAltHTML_FWD_DEFINED__ */


#ifndef __IBuilderWizardManager_FWD_DEFINED__
#define __IBuilderWizardManager_FWD_DEFINED__
typedef interface IBuilderWizardManager IBuilderWizardManager;
#endif 	/* __IBuilderWizardManager_FWD_DEFINED__ */


#ifndef __IProvidePropertyBuilder_FWD_DEFINED__
#define __IProvidePropertyBuilder_FWD_DEFINED__
typedef interface IProvidePropertyBuilder IProvidePropertyBuilder;
#endif 	/* __IProvidePropertyBuilder_FWD_DEFINED__ */


#ifndef __IPerPropertyBrowsing2_FWD_DEFINED__
#define __IPerPropertyBrowsing2_FWD_DEFINED__
typedef interface IPerPropertyBrowsing2 IPerPropertyBrowsing2;
#endif 	/* __IPerPropertyBrowsing2_FWD_DEFINED__ */


#ifndef __IPropertyPageUndoString_FWD_DEFINED__
#define __IPropertyPageUndoString_FWD_DEFINED__
typedef interface IPropertyPageUndoString IPropertyPageUndoString;
#endif 	/* __IPropertyPageUndoString_FWD_DEFINED__ */


#ifndef __IProvideRuntimeHTML_FWD_DEFINED__
#define __IProvideRuntimeHTML_FWD_DEFINED__
typedef interface IProvideRuntimeHTML IProvideRuntimeHTML;
#endif 	/* __IProvideRuntimeHTML_FWD_DEFINED__ */


#ifndef __IProvideAltHTML_FWD_DEFINED__
#define __IProvideAltHTML_FWD_DEFINED__
typedef interface IProvideAltHTML IProvideAltHTML;
#endif 	/* __IProvideAltHTML_FWD_DEFINED__ */


/* header files for imported files */
#include "oleidl.h"
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_ocdesign_0000_0000 */
/* [local] */ 








DEFINE_GUID(IID_IUseImmediateCommitPropertyPages, 0xfd6feba0, 0x24ac, 0x11d1, 0xab, 0x1b, 0x0, 0xa0, 0xc9, 0x5, 0x5a, 0x90);
DEFINE_GUID(CATID_HTMLBuilder, 0x73cef3d4, 0xae85, 0x11cf, 0xa4, 0x6, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);
DEFINE_GUID(CATID_ObjectBuilder, 0x73cef3d5, 0xae85, 0x11cf, 0xa4, 0x6, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);
DEFINE_GUID(CATID_PropertyBuilder, 0x73cef3d6, 0xae85, 0x11cf, 0xa4, 0x6, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);
DEFINE_GUID(CATID_URLBuilder, 0x73cef3d9, 0xae85, 0x11cf, 0xa4, 0x6, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);
DEFINE_GUID(CATID_ColorBuilder, 0x73cef3da, 0xae85, 0x11cf, 0xa4, 0x6, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);
DEFINE_GUID(CATID_FontBuilder, 0x73cef3db, 0xae85, 0x11cf, 0xa4, 0x6, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);
DEFINE_GUID(CATID_ActiveXControlBuilder, 0x73cef3de, 0xae85, 0x11cf, 0xa4, 0x6, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);
DEFINE_GUID(CATID_ScriptBuilder, 0x73cef3df, 0xae85, 0x11cf, 0xa4, 0x6, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);
DEFINE_GUID(CATID_PictureBuilder, 0x73cef3e0, 0xae85, 0x11cf, 0xa4, 0x6, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);
DEFINE_GUID(SID_SBuilderWizardManager, 0x95fc88c2, 0x9fcb, 0x11cf, 0xa4, 0x5, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);
DEFINE_GUID(SID_IBuilderWizardManager, 0x95fc88c2, 0x9fcb, 0x11cf, 0xa4, 0x5, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);
typedef 
enum tagBLDPROMPTOPT
    {	BLDPROMPTOPT_PROMPTIFMULTIPLE	= 0,
	BLDPROMPTOPT_PROMPTALWAYS	= 1,
	BLDPROMPTOPT_PROMPTNEVER	= 2
    } 	BLDPROMPTOPT;

typedef 
enum tagBLDGETOPT
    {	BLDGETOPT_FAUTOMAPGUID	= 0x1,
	BLDGETOPT_FAUTOMAPENABLEPROMPT	= 0x2,
	BLDGETOPT_FAUTOMAPPROMPTALWAYS	= 0x4,
	BLDGETOPT_FOBJECTBUILDER	= 0x8,
	BLDGETOPT_FNOINTRINSICS	= 0x80000000
    } 	BLDGETFLAGS;



extern RPC_IF_HANDLE __MIDL_itf_ocdesign_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ocdesign_0000_0000_v0_0_s_ifspec;

#ifndef __IBuilderWizardManager_INTERFACE_DEFINED__
#define __IBuilderWizardManager_INTERFACE_DEFINED__

/* interface IBuilderWizardManager */
/* [unique][version][uuid][object] */ 


EXTERN_C const IID IID_IBuilderWizardManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("95FC88C3-9FCB-11cf-A405-00AA00C00940")
    IBuilderWizardManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE DoesBuilderExist( 
            /* [in] */ __RPC__in REFGUID rguidBuilder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MapObjectToBuilderCLSID( 
            /* [in] */ __RPC__in REFCLSID rclsidObject,
            /* [in] */ DWORD dwPromptOpt,
            /* [in] */ __RPC__in HWND hwndPromptOwner,
            /* [out] */ __RPC__out CLSID *pclsidBuilder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MapBuilderCATIDToCLSID( 
            /* [in] */ __RPC__in REFGUID rguidBuilder,
            /* [in] */ DWORD dwPromptOpt,
            /* [in] */ __RPC__in HWND hwndPromptOwner,
            /* [out] */ __RPC__out CLSID *pclsidBuilder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBuilder( 
            /* [in] */ __RPC__in REFGUID rguidBuilder,
            /* [in] */ DWORD grfGetOpt,
            /* [in] */ __RPC__in HWND hwndPromptOwner,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppdispApp,
            /* [out] */ __RPC__deref_out_opt HWND *pwndBuilderOwner,
            /* [in] */ __RPC__in REFIID riidBuilder,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppunkBuilder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnableModeless( 
            /* [in] */ BOOL fEnable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBuilderWizardManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBuilderWizardManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBuilderWizardManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBuilderWizardManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *DoesBuilderExist )( 
            IBuilderWizardManager * This,
            /* [in] */ __RPC__in REFGUID rguidBuilder);
        
        HRESULT ( STDMETHODCALLTYPE *MapObjectToBuilderCLSID )( 
            IBuilderWizardManager * This,
            /* [in] */ __RPC__in REFCLSID rclsidObject,
            /* [in] */ DWORD dwPromptOpt,
            /* [in] */ __RPC__in HWND hwndPromptOwner,
            /* [out] */ __RPC__out CLSID *pclsidBuilder);
        
        HRESULT ( STDMETHODCALLTYPE *MapBuilderCATIDToCLSID )( 
            IBuilderWizardManager * This,
            /* [in] */ __RPC__in REFGUID rguidBuilder,
            /* [in] */ DWORD dwPromptOpt,
            /* [in] */ __RPC__in HWND hwndPromptOwner,
            /* [out] */ __RPC__out CLSID *pclsidBuilder);
        
        HRESULT ( STDMETHODCALLTYPE *GetBuilder )( 
            IBuilderWizardManager * This,
            /* [in] */ __RPC__in REFGUID rguidBuilder,
            /* [in] */ DWORD grfGetOpt,
            /* [in] */ __RPC__in HWND hwndPromptOwner,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppdispApp,
            /* [out] */ __RPC__deref_out_opt HWND *pwndBuilderOwner,
            /* [in] */ __RPC__in REFIID riidBuilder,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppunkBuilder);
        
        HRESULT ( STDMETHODCALLTYPE *EnableModeless )( 
            IBuilderWizardManager * This,
            /* [in] */ BOOL fEnable);
        
        END_INTERFACE
    } IBuilderWizardManagerVtbl;

    interface IBuilderWizardManager
    {
        CONST_VTBL struct IBuilderWizardManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBuilderWizardManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBuilderWizardManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBuilderWizardManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBuilderWizardManager_DoesBuilderExist(This,rguidBuilder)	\
    ( (This)->lpVtbl -> DoesBuilderExist(This,rguidBuilder) ) 

#define IBuilderWizardManager_MapObjectToBuilderCLSID(This,rclsidObject,dwPromptOpt,hwndPromptOwner,pclsidBuilder)	\
    ( (This)->lpVtbl -> MapObjectToBuilderCLSID(This,rclsidObject,dwPromptOpt,hwndPromptOwner,pclsidBuilder) ) 

#define IBuilderWizardManager_MapBuilderCATIDToCLSID(This,rguidBuilder,dwPromptOpt,hwndPromptOwner,pclsidBuilder)	\
    ( (This)->lpVtbl -> MapBuilderCATIDToCLSID(This,rguidBuilder,dwPromptOpt,hwndPromptOwner,pclsidBuilder) ) 

#define IBuilderWizardManager_GetBuilder(This,rguidBuilder,grfGetOpt,hwndPromptOwner,ppdispApp,pwndBuilderOwner,riidBuilder,ppunkBuilder)	\
    ( (This)->lpVtbl -> GetBuilder(This,rguidBuilder,grfGetOpt,hwndPromptOwner,ppdispApp,pwndBuilderOwner,riidBuilder,ppunkBuilder) ) 

#define IBuilderWizardManager_EnableModeless(This,fEnable)	\
    ( (This)->lpVtbl -> EnableModeless(This,fEnable) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBuilderWizardManager_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ocdesign_0000_0001 */
/* [local] */ 

typedef 
enum tagCTLBLDTYPE
    {	CTLBLDTYPE_FSTDPROPBUILDER	= 0x1,
	CTLBLDTYPE_FINTERNALBUILDER	= 0x2,
	CTLBLDTYPE_FEDITSOBJDIRECTLY	= 0x4
    } 	CTLBLDTYPE;



extern RPC_IF_HANDLE __MIDL_itf_ocdesign_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ocdesign_0000_0001_v0_0_s_ifspec;

#ifndef __IProvidePropertyBuilder_INTERFACE_DEFINED__
#define __IProvidePropertyBuilder_INTERFACE_DEFINED__

/* interface IProvidePropertyBuilder */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IProvidePropertyBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33C0C1D8-33CF-11d3-BFF2-00C04F990235")
    IProvidePropertyBuilder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MapPropertyToBuilder( 
            /* [in] */ LONG dispid,
            /* [out][in] */ __RPC__inout LONG *pdwCtlBldType,
            /* [out][in] */ __RPC__deref_inout_opt BSTR *pbstrGuidBldr,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ExecuteBuilder( 
            /* [in] */ LONG dispid,
            /* [in] */ __RPC__in BSTR bstrGuidBldr,
            /* [in] */ __RPC__in_opt IDispatch *pdispApp,
            /* [in] */ LONG_PTR hwndBldrOwner,
            /* [out][in] */ __RPC__inout VARIANT *pvarValue,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IProvidePropertyBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IProvidePropertyBuilder * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IProvidePropertyBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IProvidePropertyBuilder * This);
        
        HRESULT ( STDMETHODCALLTYPE *MapPropertyToBuilder )( 
            IProvidePropertyBuilder * This,
            /* [in] */ LONG dispid,
            /* [out][in] */ __RPC__inout LONG *pdwCtlBldType,
            /* [out][in] */ __RPC__deref_inout_opt BSTR *pbstrGuidBldr,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *ExecuteBuilder )( 
            IProvidePropertyBuilder * This,
            /* [in] */ LONG dispid,
            /* [in] */ __RPC__in BSTR bstrGuidBldr,
            /* [in] */ __RPC__in_opt IDispatch *pdispApp,
            /* [in] */ LONG_PTR hwndBldrOwner,
            /* [out][in] */ __RPC__inout VARIANT *pvarValue,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfRetVal);
        
        END_INTERFACE
    } IProvidePropertyBuilderVtbl;

    interface IProvidePropertyBuilder
    {
        CONST_VTBL struct IProvidePropertyBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IProvidePropertyBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IProvidePropertyBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IProvidePropertyBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IProvidePropertyBuilder_MapPropertyToBuilder(This,dispid,pdwCtlBldType,pbstrGuidBldr,pfRetVal)	\
    ( (This)->lpVtbl -> MapPropertyToBuilder(This,dispid,pdwCtlBldType,pbstrGuidBldr,pfRetVal) ) 

#define IProvidePropertyBuilder_ExecuteBuilder(This,dispid,bstrGuidBldr,pdispApp,hwndBldrOwner,pvarValue,pfRetVal)	\
    ( (This)->lpVtbl -> ExecuteBuilder(This,dispid,bstrGuidBldr,pdispApp,hwndBldrOwner,pvarValue,pfRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IProvidePropertyBuilder_INTERFACE_DEFINED__ */


#ifndef __IPerPropertyBrowsing2_INTERFACE_DEFINED__
#define __IPerPropertyBrowsing2_INTERFACE_DEFINED__

/* interface IPerPropertyBrowsing2 */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IPerPropertyBrowsing2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33C0C1DA-33CF-11d3-BFF2-00C04F990235")
    IPerPropertyBrowsing2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MapPropertyToBuilder( 
            /* [in] */ DISPID dispid,
            /* [out] */ __RPC__out GUID *pguidBuilder,
            /* [out] */ __RPC__out DWORD *pdwType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ExecuteBuilder( 
            /* [in] */ DISPID dispid,
            /* [in] */ __RPC__in REFGUID rguidBuilder,
            /* [in] */ __RPC__in_opt IDispatch *pdispApp,
            /* [in] */ __RPC__in HWND hwndBuilderOwner,
            /* [out][in] */ __RPC__inout VARIANT *pvarValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPerPropertyBrowsing2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPerPropertyBrowsing2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPerPropertyBrowsing2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPerPropertyBrowsing2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *MapPropertyToBuilder )( 
            IPerPropertyBrowsing2 * This,
            /* [in] */ DISPID dispid,
            /* [out] */ __RPC__out GUID *pguidBuilder,
            /* [out] */ __RPC__out DWORD *pdwType);
        
        HRESULT ( STDMETHODCALLTYPE *ExecuteBuilder )( 
            IPerPropertyBrowsing2 * This,
            /* [in] */ DISPID dispid,
            /* [in] */ __RPC__in REFGUID rguidBuilder,
            /* [in] */ __RPC__in_opt IDispatch *pdispApp,
            /* [in] */ __RPC__in HWND hwndBuilderOwner,
            /* [out][in] */ __RPC__inout VARIANT *pvarValue);
        
        END_INTERFACE
    } IPerPropertyBrowsing2Vtbl;

    interface IPerPropertyBrowsing2
    {
        CONST_VTBL struct IPerPropertyBrowsing2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPerPropertyBrowsing2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPerPropertyBrowsing2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPerPropertyBrowsing2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPerPropertyBrowsing2_MapPropertyToBuilder(This,dispid,pguidBuilder,pdwType)	\
    ( (This)->lpVtbl -> MapPropertyToBuilder(This,dispid,pguidBuilder,pdwType) ) 

#define IPerPropertyBrowsing2_ExecuteBuilder(This,dispid,rguidBuilder,pdispApp,hwndBuilderOwner,pvarValue)	\
    ( (This)->lpVtbl -> ExecuteBuilder(This,dispid,rguidBuilder,pdispApp,hwndBuilderOwner,pvarValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPerPropertyBrowsing2_INTERFACE_DEFINED__ */


#ifndef __IPropertyPageUndoString_INTERFACE_DEFINED__
#define __IPropertyPageUndoString_INTERFACE_DEFINED__

/* interface IPropertyPageUndoString */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IPropertyPageUndoString;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33C0C1DB-33CF-11d3-BFF2-00C04F990235")
    IPropertyPageUndoString : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetUndoString( 
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppszUndo) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPropertyPageUndoStringVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPropertyPageUndoString * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPropertyPageUndoString * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPropertyPageUndoString * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetUndoString )( 
            IPropertyPageUndoString * This,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppszUndo);
        
        END_INTERFACE
    } IPropertyPageUndoStringVtbl;

    interface IPropertyPageUndoString
    {
        CONST_VTBL struct IPropertyPageUndoStringVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPropertyPageUndoString_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPropertyPageUndoString_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPropertyPageUndoString_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPropertyPageUndoString_GetUndoString(This,ppszUndo)	\
    ( (This)->lpVtbl -> GetUndoString(This,ppszUndo) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPropertyPageUndoString_INTERFACE_DEFINED__ */


#ifndef __IProvideRuntimeHTML_INTERFACE_DEFINED__
#define __IProvideRuntimeHTML_INTERFACE_DEFINED__

/* interface IProvideRuntimeHTML */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IProvideRuntimeHTML;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33C0C1DC-33CF-11d3-BFF2-00C04F990235")
    IProvideRuntimeHTML : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetRuntimeHTML( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrRuntimeHTML) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IProvideRuntimeHTMLVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IProvideRuntimeHTML * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IProvideRuntimeHTML * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IProvideRuntimeHTML * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeHTML )( 
            IProvideRuntimeHTML * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrRuntimeHTML);
        
        END_INTERFACE
    } IProvideRuntimeHTMLVtbl;

    interface IProvideRuntimeHTML
    {
        CONST_VTBL struct IProvideRuntimeHTMLVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IProvideRuntimeHTML_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IProvideRuntimeHTML_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IProvideRuntimeHTML_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IProvideRuntimeHTML_GetRuntimeHTML(This,pstrRuntimeHTML)	\
    ( (This)->lpVtbl -> GetRuntimeHTML(This,pstrRuntimeHTML) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IProvideRuntimeHTML_INTERFACE_DEFINED__ */


#ifndef __IProvideAltHTML_INTERFACE_DEFINED__
#define __IProvideAltHTML_INTERFACE_DEFINED__

/* interface IProvideAltHTML */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IProvideAltHTML;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33C0C1DD-33CF-11d3-BFF2-00C04F990235")
    IProvideAltHTML : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAltHTML( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrAltHTML) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsAltHTMLEditable( 
            /* [retval][out] */ __RPC__out boolean *pfIsEditable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IProvideAltHTMLVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IProvideAltHTML * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IProvideAltHTML * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IProvideAltHTML * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetAltHTML )( 
            IProvideAltHTML * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrAltHTML);
        
        HRESULT ( STDMETHODCALLTYPE *IsAltHTMLEditable )( 
            IProvideAltHTML * This,
            /* [retval][out] */ __RPC__out boolean *pfIsEditable);
        
        END_INTERFACE
    } IProvideAltHTMLVtbl;

    interface IProvideAltHTML
    {
        CONST_VTBL struct IProvideAltHTMLVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IProvideAltHTML_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IProvideAltHTML_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IProvideAltHTML_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IProvideAltHTML_GetAltHTML(This,pstrAltHTML)	\
    ( (This)->lpVtbl -> GetAltHTML(This,pstrAltHTML) ) 

#define IProvideAltHTML_IsAltHTMLEditable(This,pfIsEditable)	\
    ( (This)->lpVtbl -> IsAltHTMLEditable(This,pfIsEditable) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IProvideAltHTML_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ocdesign_0000_0006 */
/* [local] */ 

DEFINE_GUID(IID_IPersistHTMLStream, 0x56223fe3, 0xd397, 0x11cf, 0xa4, 0x2e, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);
DEFINE_GUID(IID_IPersistAltHTMLStream, 0x56223fe4, 0xd397, 0x11cf, 0xa4, 0x2e, 0x0, 0xaa, 0x0, 0xc0, 0x9, 0x40);


extern RPC_IF_HANDLE __MIDL_itf_ocdesign_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ocdesign_0000_0006_v0_0_s_ifspec;


#ifndef __OCDesign_LIBRARY_DEFINED__
#define __OCDesign_LIBRARY_DEFINED__

/* library OCDesign */
/* [helpstring][version][uuid] */ 












EXTERN_C const IID LIBID_OCDesign;
#endif /* __OCDesign_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

unsigned long             __RPC_USER  HWND_UserSize(     unsigned long *, unsigned long            , HWND * ); 
unsigned char * __RPC_USER  HWND_UserMarshal(  unsigned long *, unsigned char *, HWND * ); 
unsigned char * __RPC_USER  HWND_UserUnmarshal(unsigned long *, unsigned char *, HWND * ); 
void                      __RPC_USER  HWND_UserFree(     unsigned long *, HWND * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long *, unsigned long            , VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  unsigned long *, unsigned char *, VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(unsigned long *, unsigned char *, VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long *, VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\msdbg90.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for msdbg90.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __msdbg90_h__
#define __msdbg90_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IDebugCoreServer90_FWD_DEFINED__
#define __IDebugCoreServer90_FWD_DEFINED__
typedef interface IDebugCoreServer90 IDebugCoreServer90;
#endif 	/* __IDebugCoreServer90_FWD_DEFINED__ */


#ifndef __IDebugThread90_FWD_DEFINED__
#define __IDebugThread90_FWD_DEFINED__
typedef interface IDebugThread90 IDebugThread90;
#endif 	/* __IDebugThread90_FWD_DEFINED__ */


#ifndef __IDebugStepper90_FWD_DEFINED__
#define __IDebugStepper90_FWD_DEFINED__
typedef interface IDebugStepper90 IDebugStepper90;
#endif 	/* __IDebugStepper90_FWD_DEFINED__ */


#ifndef __IDebugCodePath90_FWD_DEFINED__
#define __IDebugCodePath90_FWD_DEFINED__
typedef interface IDebugCodePath90 IDebugCodePath90;
#endif 	/* __IDebugCodePath90_FWD_DEFINED__ */


#ifndef __IEnumDebugCodePaths90_FWD_DEFINED__
#define __IEnumDebugCodePaths90_FWD_DEFINED__
typedef interface IEnumDebugCodePaths90 IEnumDebugCodePaths90;
#endif 	/* __IEnumDebugCodePaths90_FWD_DEFINED__ */


#ifndef __IDebugProgramEnhancedStep90_FWD_DEFINED__
#define __IDebugProgramEnhancedStep90_FWD_DEFINED__
typedef interface IDebugProgramEnhancedStep90 IDebugProgramEnhancedStep90;
#endif 	/* __IDebugProgramEnhancedStep90_FWD_DEFINED__ */


#ifndef __IDebugProcessEnhancedStep90_FWD_DEFINED__
#define __IDebugProcessEnhancedStep90_FWD_DEFINED__
typedef interface IDebugProcessEnhancedStep90 IDebugProcessEnhancedStep90;
#endif 	/* __IDebugProcessEnhancedStep90_FWD_DEFINED__ */


#ifndef __IDebugEngineStepFilterManager90_FWD_DEFINED__
#define __IDebugEngineStepFilterManager90_FWD_DEFINED__
typedef interface IDebugEngineStepFilterManager90 IDebugEngineStepFilterManager90;
#endif 	/* __IDebugEngineStepFilterManager90_FWD_DEFINED__ */


#ifndef __IDebugStepCompleteEvent90_FWD_DEFINED__
#define __IDebugStepCompleteEvent90_FWD_DEFINED__
typedef interface IDebugStepCompleteEvent90 IDebugStepCompleteEvent90;
#endif 	/* __IDebugStepCompleteEvent90_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "msdbg.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_msdbg90_0000_0000 */
/* [local] */ 


enum enum_EVALFLAGS90
    {	EVAL90_RETURNVALUE	= 0x2,
	EVAL90_NOSIDEEFFECTS	= 0x4,
	EVAL90_ALLOWBPS	= 0x8,
	EVAL90_ALLOWERRORREPORT	= 0x10,
	EVAL90_FUNCTION_AS_ADDRESS	= 0x40,
	EVAL90_NOFUNCEVAL	= 0x80,
	EVAL90_NOEVENTS	= 0x1000,
	EVAL90_DESIGN_TIME_EXPR_EVAL	= 0x2000,
	EVAL90_ALLOW_IMPLICIT_VARS	= 0x4000,
	EVAL90_FORCE_EVALUATION_NOW	= 0x8000
    } ;

enum enum_BP_FLAGS90
    {	BP90_FLAG_NONE	= 0,
	BP90_FLAG_MAP_DOCPOSITION	= 0x1,
	BP90_FLAG_DONT_STOP	= 0x2,
	BP90_FLAG_TRACEPOINT_CONTINUE	= 0x4,
	BP90_FLAG_ALLOW_NON_USER	= 0x8,
	BP90_FLAG_USE_REQUEST_LANGUAGE	= 0x10
    } ;

enum enum_BPREQI_FIELDS90
    {	BPREQI90_BPLOCATION	= 0x1,
	BPREQI90_LANGUAGE	= 0x2,
	BPREQI90_PROGRAM	= 0x4,
	BPREQI90_PROGRAMNAME	= 0x8,
	BPREQI90_THREAD	= 0x10,
	BPREQI90_THREADNAME	= 0x20,
	BPREQI90_PASSCOUNT	= 0x40,
	BPREQI90_CONDITION	= 0x80,
	BPREQI90_FLAGS	= 0x100,
	BPREQI90_ALLOLDFIELDS	= 0x1ff,
	BPREQI90_VENDOR	= 0x200,
	BPREQI90_CONSTRAINT	= 0x400,
	BPREQI90_TRACEPOINT	= 0x800,
	BPREQI90_MACROTRACEPOINT	= 0x1000,
	BPREQI90_ALLFIELDS	= 0xffff
    } ;

enum enum_LAUNCH_FLAGS90
    {	LAUNCH_WAIT_FOR_EVENT	= 0x8
    } ;
typedef DWORD LAUNCH_FLAGS90;


enum enum_ENUMERATED_PROCESS_FLAGS90
    {	EPFLAG90_SHOW_SECURITY_WARNING	= 0x1,
	EPFLAG90_SYSTEM_PROCESS	= 0x2,
	EPFLAG90_INTEGRITY_LEVEL_MASK	= ( 7 << 2 ) ,
	EPFLAG90_INTEGRITY_LEVEL_NONE	= ( 0 << 2 ) ,
	EPFLAG90_INTEGRITY_LEVEL_UNTRUSTED	= ( 1 << 2 ) ,
	EPFLAG90_INTEGRITY_LEVEL_LOW	= ( 2 << 2 ) ,
	EPFLAG90_INTEGRITY_LEVEL_MEDIUM	= ( 3 << 2 ) ,
	EPFLAG90_INTEGRITY_LEVEL_HIGH	= ( 4 << 2 ) ,
	EPFLAG90_INTEGRITY_LEVEL_SYSTEM	= ( 5 << 2 ) ,
	EPFLAG90_INTEGRITY_LEVEL_PROTECTED	= ( 6 << 2 ) 
    } ;


extern RPC_IF_HANDLE __MIDL_itf_msdbg90_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msdbg90_0000_0000_v0_0_s_ifspec;

#ifndef __IDebugCoreServer90_INTERFACE_DEFINED__
#define __IDebugCoreServer90_INTERFACE_DEFINED__

/* interface IDebugCoreServer90 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugCoreServer90;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1a1b5760-fe45-4958-aa3f-819060b16de9")
    IDebugCoreServer90 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateManagedInstanceInServer( 
            /* [in] */ __RPC__in LPCWSTR szClass,
            /* [in] */ __RPC__in LPCWSTR szAssembly,
            /* [in] */ WORD wLangId,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt void **ppvObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugCoreServer90Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugCoreServer90 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugCoreServer90 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugCoreServer90 * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateManagedInstanceInServer )( 
            IDebugCoreServer90 * This,
            /* [in] */ __RPC__in LPCWSTR szClass,
            /* [in] */ __RPC__in LPCWSTR szAssembly,
            /* [in] */ WORD wLangId,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt void **ppvObject);
        
        END_INTERFACE
    } IDebugCoreServer90Vtbl;

    interface IDebugCoreServer90
    {
        CONST_VTBL struct IDebugCoreServer90Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugCoreServer90_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugCoreServer90_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugCoreServer90_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugCoreServer90_CreateManagedInstanceInServer(This,szClass,szAssembly,wLangId,riid,ppvObject)	\
    ( (This)->lpVtbl -> CreateManagedInstanceInServer(This,szClass,szAssembly,wLangId,riid,ppvObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugCoreServer90_INTERFACE_DEFINED__ */


#ifndef __IDebugThread90_INTERFACE_DEFINED__
#define __IDebugThread90_INTERFACE_DEFINED__

/* interface IDebugThread90 */
/* [unique][uuid][object] */ 


enum enum_THREADPROPERTY_FIELDS90
    {	TPF90_ID	= 0x1,
	TPF90_SUSPENDCOUNT	= 0x2,
	TPF90_STATE	= 0x4,
	TPF90_PRIORITY	= 0x8,
	TPF90_NAME	= 0x10,
	TPF90_LOCATION	= 0x20,
	TPF90_ALLFIELDS	= 0xffffffff,
	TPF90_DISPLAY_NAME	= 0x40,
	TPF90_DISPLAY_NAME_PRIORITY	= 0x80,
	TPF90_CATEGORY	= 0x100
    } ;
typedef DWORD THREADPROPERTY_FIELDS90;


enum enum_DISPLAY_NAME_PRIORITY
    {	DISPLAY_NAME_PRI_LOWEST_CONFIDENCY	= 0x1,
	DISPLAY_NAME_PRI_LOW_CONFIDENCY	= 0x10,
	DISPLAY_NAM_PRI_DEFAULT	= 0x100,
	DISPLAY_NAME_PRI_NORMAL	= 0x1000,
	DISPLAY_NAME_PRI_HIGH	= 0x10000,
	DISPLAY_NAME_PRI_HIGHEST	= 0x100000
    } ;
typedef enum enum_DISPLAY_NAME_PRIORITY DISPLAY_NAME_PRIORITY;

typedef struct _tagTHREADPROPERTIES90
    {
    THREADPROPERTY_FIELDS90 dwFields;
    DWORD dwThreadId;
    DWORD dwSuspendCount;
    DWORD dwThreadState;
    BSTR bstrPriority;
    BSTR bstrName;
    BSTR bstrLocation;
    BSTR bstrDisplayName;
    DWORD DisplayNamePriority;
    DWORD dwThreadCategory;
    } 	THREADPROPERTIES90;


EXTERN_C const IID IID_IDebugThread90;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8FD7F3BB-C09E-4c0c-830F-114FFA8BF4F8")
    IDebugThread90 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetThreadProperties90( 
            /* [in] */ THREADPROPERTY_FIELDS90 dwFields,
            /* [out] */ __RPC__out THREADPROPERTIES90 *ptp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugThread90Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugThread90 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugThread90 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugThread90 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetThreadProperties90 )( 
            IDebugThread90 * This,
            /* [in] */ THREADPROPERTY_FIELDS90 dwFields,
            /* [out] */ __RPC__out THREADPROPERTIES90 *ptp);
        
        END_INTERFACE
    } IDebugThread90Vtbl;

    interface IDebugThread90
    {
        CONST_VTBL struct IDebugThread90Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugThread90_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugThread90_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugThread90_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugThread90_GetThreadProperties90(This,dwFields,ptp)	\
    ( (This)->lpVtbl -> GetThreadProperties90(This,dwFields,ptp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugThread90_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msdbg90_0000_0002 */
/* [local] */ 


enum enum_DEBUGPROP_INFO_FLAGS90
    {	DEBUGPROP90_INFO_FULLNAME	= 0x1,
	DEBUGPROP90_INFO_NAME	= 0x2,
	DEBUGPROP90_INFO_TYPE	= 0x4,
	DEBUGPROP90_INFO_VALUE	= 0x8,
	DEBUGPROP90_INFO_ATTRIB	= 0x10,
	DEBUGPROP90_INFO_PROP	= 0x20,
	DEBUGPROP90_INFO_VALUE_AUTOEXPAND	= 0x10000,
	DEBUGPROP90_INFO_NOFUNCEVAL	= 0x20000,
	DEBUGPROP90_INFO_VALUE_RAW	= 0x40000,
	DEBUGPROP90_INFO_VALUE_NO_TOSTRING	= 0x80000,
	DEBUGPROP90_INFO_NO_NONPUBLIC_MEMBERS	= 0x100000,
	DEBUGPROP90_INFO_NONE	= 0,
	DEBUGPROP90_INFO_STANDARD	= ( ( ( DEBUGPROP90_INFO_ATTRIB | DEBUGPROP90_INFO_NAME )  | DEBUGPROP90_INFO_TYPE )  | DEBUGPROP90_INFO_VALUE ) ,
	DEBUGPROP90_INFO_ALL	= 0xffffffff,
	DEBUGPROP90_INFO_NOSIDEEFFECTS	= 0x200000
    } ;
typedef DWORD DEBUGPROP90_INFO_FLAGS;


enum enum_STEPSTATUS
    {	STEPSTATUS_UNKNOWN	= 0,
	STEPSTATUS_IN	= 1,
	STEPSTATUS_NORMAL	= 2,
	STEPSTATUS_OUT	= 4,
	STEPSTATUS_THREAD_EXIT	= 8,
	STEPSTATUS_CUSTOM	= 16
    } ;
typedef DWORD STEPSTATUS;



extern RPC_IF_HANDLE __MIDL_itf_msdbg90_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msdbg90_0000_0002_v0_0_s_ifspec;

#ifndef __IDebugStepper90_INTERFACE_DEFINED__
#define __IDebugStepper90_INTERFACE_DEFINED__

/* interface IDebugStepper90 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugStepper90;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c0aa96a2-ae7c-4d80-8831-c7c720f14cca")
    IDebugStepper90 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Step( 
            /* [in] */ __RPC__in_opt IDebugProgram2 *pProgram,
            /* [in] */ __RPC__in_opt IDebugThread2 *pThread) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStepKind( 
            /* [out] */ __RPC__out STEPKIND *pSK) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugStepper90Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugStepper90 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugStepper90 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugStepper90 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Step )( 
            IDebugStepper90 * This,
            /* [in] */ __RPC__in_opt IDebugProgram2 *pProgram,
            /* [in] */ __RPC__in_opt IDebugThread2 *pThread);
        
        HRESULT ( STDMETHODCALLTYPE *GetStepKind )( 
            IDebugStepper90 * This,
            /* [out] */ __RPC__out STEPKIND *pSK);
        
        END_INTERFACE
    } IDebugStepper90Vtbl;

    interface IDebugStepper90
    {
        CONST_VTBL struct IDebugStepper90Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugStepper90_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugStepper90_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugStepper90_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugStepper90_Step(This,pProgram,pThread)	\
    ( (This)->lpVtbl -> Step(This,pProgram,pThread) ) 

#define IDebugStepper90_GetStepKind(This,pSK)	\
    ( (This)->lpVtbl -> GetStepKind(This,pSK) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugStepper90_INTERFACE_DEFINED__ */


#ifndef __IDebugCodePath90_INTERFACE_DEFINED__
#define __IDebugCodePath90_INTERFACE_DEFINED__

/* interface IDebugCodePath90 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugCodePath90;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7372dce0-f816-4e35-8b42-64b7f50e6395")
    IDebugCodePath90 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetName( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStepper( 
            /* [out] */ __RPC__deref_out_opt IDebugStepper90 **ppStepper) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugCodePath90Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugCodePath90 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugCodePath90 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugCodePath90 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetName )( 
            IDebugCodePath90 * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        HRESULT ( STDMETHODCALLTYPE *GetStepper )( 
            IDebugCodePath90 * This,
            /* [out] */ __RPC__deref_out_opt IDebugStepper90 **ppStepper);
        
        END_INTERFACE
    } IDebugCodePath90Vtbl;

    interface IDebugCodePath90
    {
        CONST_VTBL struct IDebugCodePath90Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugCodePath90_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugCodePath90_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugCodePath90_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugCodePath90_GetName(This,pbstrName)	\
    ( (This)->lpVtbl -> GetName(This,pbstrName) ) 

#define IDebugCodePath90_GetStepper(This,ppStepper)	\
    ( (This)->lpVtbl -> GetStepper(This,ppStepper) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugCodePath90_INTERFACE_DEFINED__ */


#ifndef __IEnumDebugCodePaths90_INTERFACE_DEFINED__
#define __IEnumDebugCodePaths90_INTERFACE_DEFINED__

/* interface IEnumDebugCodePaths90 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IEnumDebugCodePaths90;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0b6520fb-1417-4599-9806-0d254f3c1869")
    IEnumDebugCodePaths90 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IDebugCodePath90 **rgelt,
            /* [out][in] */ __RPC__inout ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugCodePaths90 **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *pcelt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumDebugCodePaths90Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumDebugCodePaths90 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumDebugCodePaths90 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumDebugCodePaths90 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumDebugCodePaths90 * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IDebugCodePath90 **rgelt,
            /* [out][in] */ __RPC__inout ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumDebugCodePaths90 * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumDebugCodePaths90 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumDebugCodePaths90 * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugCodePaths90 **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IEnumDebugCodePaths90 * This,
            /* [out] */ __RPC__out ULONG *pcelt);
        
        END_INTERFACE
    } IEnumDebugCodePaths90Vtbl;

    interface IEnumDebugCodePaths90
    {
        CONST_VTBL struct IEnumDebugCodePaths90Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumDebugCodePaths90_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumDebugCodePaths90_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumDebugCodePaths90_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumDebugCodePaths90_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumDebugCodePaths90_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumDebugCodePaths90_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumDebugCodePaths90_Clone(This,ppEnum)	\
    ( (This)->lpVtbl -> Clone(This,ppEnum) ) 

#define IEnumDebugCodePaths90_GetCount(This,pcelt)	\
    ( (This)->lpVtbl -> GetCount(This,pcelt) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumDebugCodePaths90_INTERFACE_DEFINED__ */


#ifndef __IDebugProgramEnhancedStep90_INTERFACE_DEFINED__
#define __IDebugProgramEnhancedStep90_INTERFACE_DEFINED__

/* interface IDebugProgramEnhancedStep90 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugProgramEnhancedStep90;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6d07112f-b30d-47b4-b5ce-45b26c29205a")
    IDebugProgramEnhancedStep90 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE EnumCodePaths( 
            /* [in] */ __RPC__in_opt IDebugThread2 *pThread,
            /* [in] */ __RPC__in_opt IDebugCodeContext2 *pStart,
            STEPUNIT stepUnit,
            /* [out] */ __RPC__deref_out_opt IEnumDebugCodePaths90 **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugProgramEnhancedStep90Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugProgramEnhancedStep90 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugProgramEnhancedStep90 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugProgramEnhancedStep90 * This);
        
        HRESULT ( STDMETHODCALLTYPE *EnumCodePaths )( 
            IDebugProgramEnhancedStep90 * This,
            /* [in] */ __RPC__in_opt IDebugThread2 *pThread,
            /* [in] */ __RPC__in_opt IDebugCodeContext2 *pStart,
            STEPUNIT stepUnit,
            /* [out] */ __RPC__deref_out_opt IEnumDebugCodePaths90 **ppEnum);
        
        END_INTERFACE
    } IDebugProgramEnhancedStep90Vtbl;

    interface IDebugProgramEnhancedStep90
    {
        CONST_VTBL struct IDebugProgramEnhancedStep90Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugProgramEnhancedStep90_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugProgramEnhancedStep90_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugProgramEnhancedStep90_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugProgramEnhancedStep90_EnumCodePaths(This,pThread,pStart,stepUnit,ppEnum)	\
    ( (This)->lpVtbl -> EnumCodePaths(This,pThread,pStart,stepUnit,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugProgramEnhancedStep90_INTERFACE_DEFINED__ */


#ifndef __IDebugProcessEnhancedStep90_INTERFACE_DEFINED__
#define __IDebugProcessEnhancedStep90_INTERFACE_DEFINED__

/* interface IDebugProcessEnhancedStep90 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugProcessEnhancedStep90;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c446ca51-979a-4096-b996-5934b7ab0455")
    IDebugProcessEnhancedStep90 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Step( 
            __RPC__in_opt IDebugThread2 *pThread,
            __RPC__in_opt IDebugStepper90 *pStepper) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugProcessEnhancedStep90Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugProcessEnhancedStep90 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugProcessEnhancedStep90 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugProcessEnhancedStep90 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Step )( 
            IDebugProcessEnhancedStep90 * This,
            __RPC__in_opt IDebugThread2 *pThread,
            __RPC__in_opt IDebugStepper90 *pStepper);
        
        END_INTERFACE
    } IDebugProcessEnhancedStep90Vtbl;

    interface IDebugProcessEnhancedStep90
    {
        CONST_VTBL struct IDebugProcessEnhancedStep90Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugProcessEnhancedStep90_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugProcessEnhancedStep90_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugProcessEnhancedStep90_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugProcessEnhancedStep90_Step(This,pThread,pStepper)	\
    ( (This)->lpVtbl -> Step(This,pThread,pStepper) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugProcessEnhancedStep90_INTERFACE_DEFINED__ */


#ifndef __IDebugEngineStepFilterManager90_INTERFACE_DEFINED__
#define __IDebugEngineStepFilterManager90_INTERFACE_DEFINED__

/* interface IDebugEngineStepFilterManager90 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugEngineStepFilterManager90;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("de74abe1-c625-4768-81b3-8eddab72ca20")
    IDebugEngineStepFilterManager90 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ReceiveStepFilterSettings( 
            __RPC__in BSTR stepFilterSettingsFile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugEngineStepFilterManager90Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugEngineStepFilterManager90 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugEngineStepFilterManager90 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugEngineStepFilterManager90 * This);
        
        HRESULT ( STDMETHODCALLTYPE *ReceiveStepFilterSettings )( 
            IDebugEngineStepFilterManager90 * This,
            __RPC__in BSTR stepFilterSettingsFile);
        
        END_INTERFACE
    } IDebugEngineStepFilterManager90Vtbl;

    interface IDebugEngineStepFilterManager90
    {
        CONST_VTBL struct IDebugEngineStepFilterManager90Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugEngineStepFilterManager90_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugEngineStepFilterManager90_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugEngineStepFilterManager90_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugEngineStepFilterManager90_ReceiveStepFilterSettings(This,stepFilterSettingsFile)	\
    ( (This)->lpVtbl -> ReceiveStepFilterSettings(This,stepFilterSettingsFile) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugEngineStepFilterManager90_INTERFACE_DEFINED__ */


#ifndef __IDebugStepCompleteEvent90_INTERFACE_DEFINED__
#define __IDebugStepCompleteEvent90_INTERFACE_DEFINED__

/* interface IDebugStepCompleteEvent90 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugStepCompleteEvent90;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("82d3f946-c2f8-495b-8b5f-9c30acdc6c81")
    IDebugStepCompleteEvent90 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStepStatus( 
            /* [out] */ __RPC__out STEPSTATUS *pStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumBreakpoints( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugBoundBreakpoints2 **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugStepCompleteEvent90Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugStepCompleteEvent90 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugStepCompleteEvent90 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugStepCompleteEvent90 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetStepStatus )( 
            IDebugStepCompleteEvent90 * This,
            /* [out] */ __RPC__out STEPSTATUS *pStatus);
        
        HRESULT ( STDMETHODCALLTYPE *EnumBreakpoints )( 
            IDebugStepCompleteEvent90 * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugBoundBreakpoints2 **ppEnum);
        
        END_INTERFACE
    } IDebugStepCompleteEvent90Vtbl;

    interface IDebugStepCompleteEvent90
    {
        CONST_VTBL struct IDebugStepCompleteEvent90Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugStepCompleteEvent90_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugStepCompleteEvent90_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugStepCompleteEvent90_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugStepCompleteEvent90_GetStepStatus(This,pStatus)	\
    ( (This)->lpVtbl -> GetStepStatus(This,pStatus) ) 

#define IDebugStepCompleteEvent90_EnumBreakpoints(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumBreakpoints(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugStepCompleteEvent90_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_msdbg90_0000_0009 */
/* [local] */ 


enum enum_MESSAGETYPE90
    {	MT_REASON_STEP_FILTER	= 0x300,
	MT_REASON_JMC_PROMPT	= 0x400,
	MT_REASON_STEP_FILTER_PROMPT	= 0x500
    } ;


extern RPC_IF_HANDLE __MIDL_itf_msdbg90_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msdbg90_0000_0009_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\oleipc.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for oleipc.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __oleipc_h__
#define __oleipc_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IOleInPlaceComponent_FWD_DEFINED__
#define __IOleInPlaceComponent_FWD_DEFINED__
typedef interface IOleInPlaceComponent IOleInPlaceComponent;
#endif 	/* __IOleInPlaceComponent_FWD_DEFINED__ */


#ifndef __IOleInPlaceComponentSite_FWD_DEFINED__
#define __IOleInPlaceComponentSite_FWD_DEFINED__
typedef interface IOleInPlaceComponentSite IOleInPlaceComponentSite;
#endif 	/* __IOleInPlaceComponentSite_FWD_DEFINED__ */


#ifndef __IOleComponentUIManager_FWD_DEFINED__
#define __IOleComponentUIManager_FWD_DEFINED__
typedef interface IOleComponentUIManager IOleComponentUIManager;
#endif 	/* __IOleComponentUIManager_FWD_DEFINED__ */


#ifndef __IOleInPlaceComponentUIManager_FWD_DEFINED__
#define __IOleInPlaceComponentUIManager_FWD_DEFINED__
typedef interface IOleInPlaceComponentUIManager IOleInPlaceComponentUIManager;
#endif 	/* __IOleInPlaceComponentUIManager_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "docobj.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_oleipc_0000_0000 */
/* [local] */ 





#define OLECMDSTATE_DISABLED						OLECMDF_SUPPORTED
#define OLECMDSTATE_UP			    (OLECMDF_SUPPORTED | OLECMDF_ENABLED)
#define OLECMDSTATE_DOWN	  (OLECMDF_SUPPORTED | OLECMDF_ENABLED | OLECMDF_LATCHED)
#define OLECMDSTATE_NINCHED 	  (OLECMDF_SUPPORTED | OLECMDF_ENABLED | OLECMDF_NINCHED)
#define OLECMDSTATE_INVISIBLE		  (OLECMDF_SUPPORTED | OLECMDF_INVISIBLE)
typedef 
enum tagOLEROLE
    {	OLEROLE_UNKNOWN	= -1,
	OLEROLE_COMPONENTHOST	= 0,
	OLEROLE_HOSTEXTENSION	= 0,
	OLEROLE_MAINCOMPONENT	= 1,
	OLEROLE_SUBCOMPONENT	= 2,
	OLEROLE_COMPONENTCONTROL	= 3,
	OLEROLE_TOPLEVELCOMPONENT	= 0
    } 	OLEROLE;

typedef 
enum tagOLECOMPFLAG
    {	OLECOMPFLAG_ROUTEACTIVEASCNTRCMD	= 1,
	OLECOMPFLAG_INHIBITNESTEDCOMPUI	= 2
    } 	OLECOMPFLAG;

typedef 
enum tagOLEMENU
    {	OLEMENU_MENUMERGE	= 1,
	OLEMENU_CNTRMENUONLY	= 2,
	OLEMENU_OBJECTMENUONLY	= 4,
	OLEMENU_ROUTEACTIVEASCNTRCMD	= 8
    } 	OLEMENU;

#define OLECONTEXT_NULLMENU 		-1
typedef 
enum tagOLEACTIVATE
    {	OLEACTIVATE_FRAMEWINDOW	= 1,
	OLEACTIVATE_DOCWINDOW	= 2
    } 	OLEACTIVATE;

typedef struct tagOLEMENUID
    {
    long nMenuId;
    ULONG cwBuf;
    LPOLESTR pwszNameBuf;
    } 	OLEMENUID;

#if 0
typedef struct tagPOINTS
    {
    SHORT x;
    SHORT y;
    } 	POINTS;

typedef struct tagPOINTS *PPOINTS;

typedef struct tagPOINTS *LPPOINTS;

typedef POINTS *REFPOINTS;

#endif
#if defined(__cplusplus)
#ifndef _REFPOINTS_DEFINED
#define _REFPOINTS_DEFINED
#define REFPOINTS POINTS &
#endif // !_REFPOINTS_DEFINED
#else // !__cplusplus
#ifndef _REFPOINTS_DEFINED
#define _REFPOINTS_DEFINED
#define REFPOINTS POINTS * const
#endif // !_REFPOINTS_DEFINED
#endif // !__cplusplus
typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_oleipc_0000_0000_0001
    {	OLEMSGBUTTON_OK	= 0,
	OLEMSGBUTTON_OKCANCEL	= 1,
	OLEMSGBUTTON_ABORTRETRYIGNORE	= 2,
	OLEMSGBUTTON_YESNOCANCEL	= 3,
	OLEMSGBUTTON_YESNO	= 4,
	OLEMSGBUTTON_RETRYCANCEL	= 5,
	OLEMSGBUTTON_YESALLNOCANCEL	= 6
    } 	OLEMSGBUTTON;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_oleipc_0000_0000_0002
    {	OLEMSGDEFBUTTON_FIRST	= 0,
	OLEMSGDEFBUTTON_SECOND	= 1,
	OLEMSGDEFBUTTON_THIRD	= 2,
	OLEMSGDEFBUTTON_FOURTH	= 3
    } 	OLEMSGDEFBUTTON;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_oleipc_0000_0000_0003
    {	OLEMSGICON_NOICON	= 0,
	OLEMSGICON_CRITICAL	= 1,
	OLEMSGICON_QUERY	= 2,
	OLEMSGICON_WARNING	= 3,
	OLEMSGICON_INFO	= 4
    } 	OLEMSGICON;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_oleipc_0000_0000_0004
    {	OLEHELPCMD_CONTEXT	= 0,
	OLEHELPCMD_CONTEXTPOPUP	= 1
    } 	OLEHELPCMD;

typedef 
enum tagOLEUIEVENTSTATUS
    {	OLEUIEVENTSTATUS_OCCURRED	= 0,
	OLEUIEVENTSTATUS_START	= 1,
	OLEUIEVENTSTATUS_STOP	= 2,
	OLEUIEVENTSTATUS_STARTNODIALOG	= 1,
	OLEUIEVENTSTATUS_STARTBEFOREDIALOG	= 3,
	OLEUIEVENTSTATUS_CONTINUEINDIALOG	= 4,
	OLEUIEVENTSTATUS_CONTINUEAFTERDIALOG	= 5
    } 	OLEUIEVENTSTATUS;

typedef 
enum tagOLEUIEVENTFREQ
    {	OLEUIEVENTFREQ_NULL	= 0,
	OLEUIEVENTFREQ_CONSISTENTLY	= 2,
	OLEUIEVENTFREQ_FREQUENTLY	= 4,
	OLEUIEVENTFREQ_OFTEN	= 6,
	OLEUIEVENTFREQ_SOMETIMES	= 8,
	OLEUIEVENTFREQ_SELDOM	= 10
    } 	OLEUIEVENTFREQ;

typedef 
enum tagOLEIPCSTATE
    {	OLEIPCSTATE_MODAL	= 1,
	OLEIPCSTATE_REDRAWOFF	= 2,
	OLEIPCSTATE_WARNINGSOFF	= 3,
	OLEIPCSTATE_RECORDING	= 4
    } 	OLEIPCSTATE;

#define OLEIPCOMPERR_E_FIRST			MAKE_SCODE(SEVERITY_ERROR, FACILITY_ITF, 0x200)
#define OLEIPCOMPERR_E_MUSTBEMAINCOMP				 (OLEIPCOMPERR_E_FIRST)


extern RPC_IF_HANDLE __MIDL_itf_oleipc_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_oleipc_0000_0000_v0_0_s_ifspec;

#ifndef __IOleInPlaceComponent_INTERFACE_DEFINED__
#define __IOleInPlaceComponent_INTERFACE_DEFINED__

/* interface IOleInPlaceComponent */
/* [object][version][uuid] */ 


EXTERN_C const IID IID_IOleInPlaceComponent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5efc7970-14bc-11cf-9b2b-00aa00573819")
    IOleInPlaceComponent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE UseComponentUIManager( 
            /* [in] */ DWORD dwCompRole,
            /* [out] */ __RPC__out DWORD *pgrfCompFlags,
            /* [in] */ __RPC__in_opt IOleComponentUIManager *pCompUIMgr,
            /* [in] */ __RPC__in_opt IOleInPlaceComponentSite *pIPCompSite) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnWindowActivate( 
            /* [in] */ DWORD dwWindowType,
            /* [in] */ BOOL fActivate) = 0;
        
        virtual /* [local] */ void STDMETHODCALLTYPE OnEnterState( 
            /* [in] */ DWORD dwStateId,
            /* [in] */ BOOL fEnter) = 0;
        
        virtual /* [local] */ BOOL STDMETHODCALLTYPE FDoIdle( 
            /* [in] */ DWORD grfidlef) = 0;
        
        virtual /* [local] */ BOOL STDMETHODCALLTYPE FQueryClose( 
            /* [in] */ BOOL fPromptUser) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TranslateCntrAccelerator( 
            /* [in] */ __RPC__in MSG *pMsg) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCntrContextMenu( 
            /* [in] */ DWORD dwRoleActiveObj,
            /* [in] */ __RPC__in REFCLSID rclsidActiveObj,
            /* [in] */ LONG nMenuIdActiveObj,
            /* [in] */ __RPC__in REFPOINTS pos,
            /* [out] */ __RPC__out CLSID *pclsidCntr,
            /* [out] */ __RPC__out OLEMENUID *menuid,
            /* [out] */ __RPC__out DWORD *pgrf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCntrHelp( 
            /* [out][in] */ __RPC__inout DWORD *pdwRole,
            /* [out][in] */ __RPC__inout CLSID *pclsid,
            /* [in] */ POINT posMouse,
            /* [in] */ DWORD dwHelpCmd,
            /* [in] */ __RPC__in LPOLESTR pszHelpFileIn,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppszHelpFileOut,
            /* [in] */ DWORD dwDataIn,
            /* [out] */ __RPC__out DWORD *pdwDataOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCntrMessage( 
            /* [out][in] */ __RPC__inout DWORD *pdwRole,
            /* [out][in] */ __RPC__inout CLSID *pclsid,
            /* [in] */ __RPC__in LPOLESTR pszTitleIn,
            /* [in] */ __RPC__in LPOLESTR pszTextIn,
            /* [in] */ __RPC__in LPOLESTR pszHelpFileIn,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppszTitleOut,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppszTextOut,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppszHelpFileOut,
            /* [out][in] */ __RPC__inout DWORD *pdwHelpContextID,
            /* [out][in] */ __RPC__inout OLEMSGBUTTON *pmsgbtn,
            /* [out][in] */ __RPC__inout OLEMSGDEFBUTTON *pmsgdefbtn,
            /* [out][in] */ __RPC__inout OLEMSGICON *pmsgicon,
            /* [out][in] */ __RPC__inout BOOL *pfSysAlert) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOleInPlaceComponentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOleInPlaceComponent * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOleInPlaceComponent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOleInPlaceComponent * This);
        
        HRESULT ( STDMETHODCALLTYPE *UseComponentUIManager )( 
            IOleInPlaceComponent * This,
            /* [in] */ DWORD dwCompRole,
            /* [out] */ __RPC__out DWORD *pgrfCompFlags,
            /* [in] */ __RPC__in_opt IOleComponentUIManager *pCompUIMgr,
            /* [in] */ __RPC__in_opt IOleInPlaceComponentSite *pIPCompSite);
        
        HRESULT ( STDMETHODCALLTYPE *OnWindowActivate )( 
            IOleInPlaceComponent * This,
            /* [in] */ DWORD dwWindowType,
            /* [in] */ BOOL fActivate);
        
        /* [local] */ void ( STDMETHODCALLTYPE *OnEnterState )( 
            IOleInPlaceComponent * This,
            /* [in] */ DWORD dwStateId,
            /* [in] */ BOOL fEnter);
        
        /* [local] */ BOOL ( STDMETHODCALLTYPE *FDoIdle )( 
            IOleInPlaceComponent * This,
            /* [in] */ DWORD grfidlef);
        
        /* [local] */ BOOL ( STDMETHODCALLTYPE *FQueryClose )( 
            IOleInPlaceComponent * This,
            /* [in] */ BOOL fPromptUser);
        
        HRESULT ( STDMETHODCALLTYPE *TranslateCntrAccelerator )( 
            IOleInPlaceComponent * This,
            /* [in] */ __RPC__in MSG *pMsg);
        
        HRESULT ( STDMETHODCALLTYPE *GetCntrContextMenu )( 
            IOleInPlaceComponent * This,
            /* [in] */ DWORD dwRoleActiveObj,
            /* [in] */ __RPC__in REFCLSID rclsidActiveObj,
            /* [in] */ LONG nMenuIdActiveObj,
            /* [in] */ __RPC__in REFPOINTS pos,
            /* [out] */ __RPC__out CLSID *pclsidCntr,
            /* [out] */ __RPC__out OLEMENUID *menuid,
            /* [out] */ __RPC__out DWORD *pgrf);
        
        HRESULT ( STDMETHODCALLTYPE *GetCntrHelp )( 
            IOleInPlaceComponent * This,
            /* [out][in] */ __RPC__inout DWORD *pdwRole,
            /* [out][in] */ __RPC__inout CLSID *pclsid,
            /* [in] */ POINT posMouse,
            /* [in] */ DWORD dwHelpCmd,
            /* [in] */ __RPC__in LPOLESTR pszHelpFileIn,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppszHelpFileOut,
            /* [in] */ DWORD dwDataIn,
            /* [out] */ __RPC__out DWORD *pdwDataOut);
        
        HRESULT ( STDMETHODCALLTYPE *GetCntrMessage )( 
            IOleInPlaceComponent * This,
            /* [out][in] */ __RPC__inout DWORD *pdwRole,
            /* [out][in] */ __RPC__inout CLSID *pclsid,
            /* [in] */ __RPC__in LPOLESTR pszTitleIn,
            /* [in] */ __RPC__in LPOLESTR pszTextIn,
            /* [in] */ __RPC__in LPOLESTR pszHelpFileIn,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppszTitleOut,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppszTextOut,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppszHelpFileOut,
            /* [out][in] */ __RPC__inout DWORD *pdwHelpContextID,
            /* [out][in] */ __RPC__inout OLEMSGBUTTON *pmsgbtn,
            /* [out][in] */ __RPC__inout OLEMSGDEFBUTTON *pmsgdefbtn,
            /* [out][in] */ __RPC__inout OLEMSGICON *pmsgicon,
            /* [out][in] */ __RPC__inout BOOL *pfSysAlert);
        
        END_INTERFACE
    } IOleInPlaceComponentVtbl;

    interface IOleInPlaceComponent
    {
        CONST_VTBL struct IOleInPlaceComponentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOleInPlaceComponent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IOleInPlaceComponent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IOleInPlaceComponent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IOleInPlaceComponent_UseComponentUIManager(This,dwCompRole,pgrfCompFlags,pCompUIMgr,pIPCompSite)	\
    ( (This)->lpVtbl -> UseComponentUIManager(This,dwCompRole,pgrfCompFlags,pCompUIMgr,pIPCompSite) ) 

#define IOleInPlaceComponent_OnWindowActivate(This,dwWindowType,fActivate)	\
    ( (This)->lpVtbl -> OnWindowActivate(This,dwWindowType,fActivate) ) 

#define IOleInPlaceComponent_OnEnterState(This,dwStateId,fEnter)	\
    ( (This)->lpVtbl -> OnEnterState(This,dwStateId,fEnter) ) 

#define IOleInPlaceComponent_FDoIdle(This,grfidlef)	\
    ( (This)->lpVtbl -> FDoIdle(This,grfidlef) ) 

#define IOleInPlaceComponent_FQueryClose(This,fPromptUser)	\
    ( (This)->lpVtbl -> FQueryClose(This,fPromptUser) ) 

#define IOleInPlaceComponent_TranslateCntrAccelerator(This,pMsg)	\
    ( (This)->lpVtbl -> TranslateCntrAccelerator(This,pMsg) ) 

#define IOleInPlaceComponent_GetCntrContextMenu(This,dwRoleActiveObj,rclsidActiveObj,nMenuIdActiveObj,pos,pclsidCntr,menuid,pgrf)	\
    ( (This)->lpVtbl -> GetCntrContextMenu(This,dwRoleActiveObj,rclsidActiveObj,nMenuIdActiveObj,pos,pclsidCntr,menuid,pgrf) ) 

#define IOleInPlaceComponent_GetCntrHelp(This,pdwRole,pclsid,posMouse,dwHelpCmd,pszHelpFileIn,ppszHelpFileOut,dwDataIn,pdwDataOut)	\
    ( (This)->lpVtbl -> GetCntrHelp(This,pdwRole,pclsid,posMouse,dwHelpCmd,pszHelpFileIn,ppszHelpFileOut,dwDataIn,pdwDataOut) ) 

#define IOleInPlaceComponent_GetCntrMessage(This,pdwRole,pclsid,pszTitleIn,pszTextIn,pszHelpFileIn,ppszTitleOut,ppszTextOut,ppszHelpFileOut,pdwHelpContextID,pmsgbtn,pmsgdefbtn,pmsgicon,pfSysAlert)	\
    ( (This)->lpVtbl -> GetCntrMessage(This,pdwRole,pclsid,pszTitleIn,pszTextIn,pszHelpFileIn,ppszTitleOut,ppszTextOut,ppszHelpFileOut,pdwHelpContextID,pmsgbtn,pmsgdefbtn,pmsgicon,pfSysAlert) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IOleInPlaceComponent_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_oleipc_0000_0001 */
/* [local] */ 

#define SID_SOleInPlaceComponent IID_IOleInPlaceComponent


extern RPC_IF_HANDLE __MIDL_itf_oleipc_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_oleipc_0000_0001_v0_0_s_ifspec;

#ifndef __IOleInPlaceComponentSite_INTERFACE_DEFINED__
#define __IOleInPlaceComponentSite_INTERFACE_DEFINED__

/* interface IOleInPlaceComponentSite */
/* [object][version][uuid] */ 


EXTERN_C const IID IID_IOleInPlaceComponentSite;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5efc7971-14bc-11cf-9b2b-00aa00573819")
    IOleInPlaceComponentSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetUIMode( 
            /* [in] */ DWORD dwUIMode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOleInPlaceComponentSiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOleInPlaceComponentSite * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOleInPlaceComponentSite * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOleInPlaceComponentSite * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUIMode )( 
            IOleInPlaceComponentSite * This,
            /* [in] */ DWORD dwUIMode);
        
        END_INTERFACE
    } IOleInPlaceComponentSiteVtbl;

    interface IOleInPlaceComponentSite
    {
        CONST_VTBL struct IOleInPlaceComponentSiteVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOleInPlaceComponentSite_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IOleInPlaceComponentSite_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IOleInPlaceComponentSite_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IOleInPlaceComponentSite_SetUIMode(This,dwUIMode)	\
    ( (This)->lpVtbl -> SetUIMode(This,dwUIMode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IOleInPlaceComponentSite_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_oleipc_0000_0002 */
/* [local] */ 

#define SID_SOleInPlaceComponentSite IID_IOleInPlaceComponentSite
#pragma warning(push)
#pragma warning(disable:28718)	


extern RPC_IF_HANDLE __MIDL_itf_oleipc_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_oleipc_0000_0002_v0_0_s_ifspec;

#ifndef __IOleComponentUIManager_INTERFACE_DEFINED__
#define __IOleComponentUIManager_INTERFACE_DEFINED__

/* interface IOleComponentUIManager */
/* [object][version][uuid] */ 


EXTERN_C const IID IID_IOleComponentUIManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5efc7972-14bc-11cf-9b2b-00aa00573819")
    IOleComponentUIManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Deleted1( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Deleted2( void) = 0;
        
        virtual /* [local] */ void STDMETHODCALLTYPE OnUIEvent( 
            /* [in] */ DWORD dwCompRole,
            /* [in] */ REFCLSID rclsidComp,
            /* [in] */ const GUID *pguidUIEventGroup,
            /* [in] */ DWORD nUIEventId,
            /* [in] */ DWORD dwUIEventStatus,
            /* [in] */ DWORD dwEventFreq,
            /* [in] */ RECT *prcEventRegion,
            /* [in] */ VARIANT *pvarEventArg) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnUIEventProgress( 
            /* [out][in] */ __RPC__inout DWORD_PTR *pdwCookie,
            /* [in] */ BOOL fInProgress,
            /* [in] */ __RPC__in LPOLESTR pwszLabel,
            /* [in] */ ULONG nComplete,
            /* [in] */ ULONG nTotal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStatus( 
            /* [in] */ __RPC__in LPCOLESTR pwszStatusText,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ShowContextMenu( 
            /* [in] */ DWORD dwCompRole,
            /* [in] */ __RPC__in REFCLSID rclsidActive,
            /* [in] */ LONG nMenuId,
            /* [in] */ __RPC__in REFPOINTS pos,
            /* [in] */ __RPC__in_opt IOleCommandTarget *pCmdTrgtActive) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ShowHelp( 
            /* [in] */ DWORD dwCompRole,
            /* [in] */ __RPC__in REFCLSID rclsidComp,
            /* [in] */ POINT posMouse,
            /* [in] */ DWORD dwHelpCmd,
            /* [in] */ __RPC__in LPOLESTR pszHelpFile,
            /* [in] */ DWORD dwData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ShowMessage( 
            /* [in] */ DWORD dwCompRole,
            /* [in] */ __RPC__in REFCLSID rclsidComp,
            /* [in] */ __RPC__in LPOLESTR pszTitle,
            /* [in] */ __RPC__in LPOLESTR pszText,
            /* [in] */ __RPC__in LPOLESTR pszHelpFile,
            /* [in] */ DWORD dwHelpContextID,
            /* [in] */ OLEMSGBUTTON msgbtn,
            /* [in] */ OLEMSGDEFBUTTON msgdefbtn,
            /* [in] */ OLEMSGICON msgicon,
            /* [in] */ BOOL fSysAlert,
            /* [retval][out] */ __RPC__out LONG *pnResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOleComponentUIManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOleComponentUIManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOleComponentUIManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOleComponentUIManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *Deleted1 )( 
            IOleComponentUIManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *Deleted2 )( 
            IOleComponentUIManager * This);
        
        /* [local] */ void ( STDMETHODCALLTYPE *OnUIEvent )( 
            IOleComponentUIManager * This,
            /* [in] */ DWORD dwCompRole,
            /* [in] */ REFCLSID rclsidComp,
            /* [in] */ const GUID *pguidUIEventGroup,
            /* [in] */ DWORD nUIEventId,
            /* [in] */ DWORD dwUIEventStatus,
            /* [in] */ DWORD dwEventFreq,
            /* [in] */ RECT *prcEventRegion,
            /* [in] */ VARIANT *pvarEventArg);
        
        HRESULT ( STDMETHODCALLTYPE *OnUIEventProgress )( 
            IOleComponentUIManager * This,
            /* [out][in] */ __RPC__inout DWORD_PTR *pdwCookie,
            /* [in] */ BOOL fInProgress,
            /* [in] */ __RPC__in LPOLESTR pwszLabel,
            /* [in] */ ULONG nComplete,
            /* [in] */ ULONG nTotal);
        
        HRESULT ( STDMETHODCALLTYPE *SetStatus )( 
            IOleComponentUIManager * This,
            /* [in] */ __RPC__in LPCOLESTR pwszStatusText,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE *ShowContextMenu )( 
            IOleComponentUIManager * This,
            /* [in] */ DWORD dwCompRole,
            /* [in] */ __RPC__in REFCLSID rclsidActive,
            /* [in] */ LONG nMenuId,
            /* [in] */ __RPC__in REFPOINTS pos,
            /* [in] */ __RPC__in_opt IOleCommandTarget *pCmdTrgtActive);
        
        HRESULT ( STDMETHODCALLTYPE *ShowHelp )( 
            IOleComponentUIManager * This,
            /* [in] */ DWORD dwCompRole,
            /* [in] */ __RPC__in REFCLSID rclsidComp,
            /* [in] */ POINT posMouse,
            /* [in] */ DWORD dwHelpCmd,
            /* [in] */ __RPC__in LPOLESTR pszHelpFile,
            /* [in] */ DWORD dwData);
        
        HRESULT ( STDMETHODCALLTYPE *ShowMessage )( 
            IOleComponentUIManager * This,
            /* [in] */ DWORD dwCompRole,
            /* [in] */ __RPC__in REFCLSID rclsidComp,
            /* [in] */ __RPC__in LPOLESTR pszTitle,
            /* [in] */ __RPC__in LPOLESTR pszText,
            /* [in] */ __RPC__in LPOLESTR pszHelpFile,
            /* [in] */ DWORD dwHelpContextID,
            /* [in] */ OLEMSGBUTTON msgbtn,
            /* [in] */ OLEMSGDEFBUTTON msgdefbtn,
            /* [in] */ OLEMSGICON msgicon,
            /* [in] */ BOOL fSysAlert,
            /* [retval][out] */ __RPC__out LONG *pnResult);
        
        END_INTERFACE
    } IOleComponentUIManagerVtbl;

    interface IOleComponentUIManager
    {
        CONST_VTBL struct IOleComponentUIManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOleComponentUIManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IOleComponentUIManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IOleComponentUIManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IOleComponentUIManager_Deleted1(This)	\
    ( (This)->lpVtbl -> Deleted1(This) ) 

#define IOleComponentUIManager_Deleted2(This)	\
    ( (This)->lpVtbl -> Deleted2(This) ) 

#define IOleComponentUIManager_OnUIEvent(This,dwCompRole,rclsidComp,pguidUIEventGroup,nUIEventId,dwUIEventStatus,dwEventFreq,prcEventRegion,pvarEventArg)	\
    ( (This)->lpVtbl -> OnUIEvent(This,dwCompRole,rclsidComp,pguidUIEventGroup,nUIEventId,dwUIEventStatus,dwEventFreq,prcEventRegion,pvarEventArg) ) 

#define IOleComponentUIManager_OnUIEventProgress(This,pdwCookie,fInProgress,pwszLabel,nComplete,nTotal)	\
    ( (This)->lpVtbl -> OnUIEventProgress(This,pdwCookie,fInProgress,pwszLabel,nComplete,nTotal) ) 

#define IOleComponentUIManager_SetStatus(This,pwszStatusText,dwReserved)	\
    ( (This)->lpVtbl -> SetStatus(This,pwszStatusText,dwReserved) ) 

#define IOleComponentUIManager_ShowContextMenu(This,dwCompRole,rclsidActive,nMenuId,pos,pCmdTrgtActive)	\
    ( (This)->lpVtbl -> ShowContextMenu(This,dwCompRole,rclsidActive,nMenuId,pos,pCmdTrgtActive) ) 

#define IOleComponentUIManager_ShowHelp(This,dwCompRole,rclsidComp,posMouse,dwHelpCmd,pszHelpFile,dwData)	\
    ( (This)->lpVtbl -> ShowHelp(This,dwCompRole,rclsidComp,posMouse,dwHelpCmd,pszHelpFile,dwData) ) 

#define IOleComponentUIManager_ShowMessage(This,dwCompRole,rclsidComp,pszTitle,pszText,pszHelpFile,dwHelpContextID,msgbtn,msgdefbtn,msgicon,fSysAlert,pnResult)	\
    ( (This)->lpVtbl -> ShowMessage(This,dwCompRole,rclsidComp,pszTitle,pszText,pszHelpFile,dwHelpContextID,msgbtn,msgdefbtn,msgicon,fSysAlert,pnResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IOleComponentUIManager_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_oleipc_0000_0003 */
/* [local] */ 

#pragma warning(pop)
extern const __declspec(selectany) GUID SID_SOleComponentUIManager = { 0x5efc7974, 0x14bc, 0x11cf, { 0x9b, 0x2b, 0x00, 0xaa, 0x00, 0x57, 0x38, 0x19 } };
#define SID_OleComponentUIManager SID_SOleComponentUIManager
extern const __declspec(selectany) GUID CMDSETID_StandardCommandSet97 = { 0x5efc7975, 0x14bc, 0x11cf, { 0x9b, 0x2b, 0x00, 0xaa, 0x00, 0x57, 0x38, 0x19} };
#define CLSID_StandardCommandSet97 CMDSETID_StandardCommandSet97


extern RPC_IF_HANDLE __MIDL_itf_oleipc_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_oleipc_0000_0003_v0_0_s_ifspec;

#ifndef __IOleInPlaceComponentUIManager_INTERFACE_DEFINED__
#define __IOleInPlaceComponentUIManager_INTERFACE_DEFINED__

/* interface IOleInPlaceComponentUIManager */
/* [object][version][uuid] */ 


EXTERN_C const IID IID_IOleInPlaceComponentUIManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5efc7973-14bc-11cf-9b2b-00aa00573819")
    IOleInPlaceComponentUIManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE UIActivateForMe( 
            /* [in] */ DWORD dwCompRole,
            /* [in] */ __RPC__in REFCLSID rclsidActive,
            /* [in] */ __RPC__in_opt IOleInPlaceActiveObject *pIPActObj,
            /* [in] */ __RPC__in_opt IOleCommandTarget *pCmdTrgtActive,
            /* [in] */ ULONG cCmdGrpId,
            /* [in] */ __RPC__in LONG *rgnCmdGrpId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateUI( 
            /* [in] */ DWORD dwCompRole,
            /* [in] */ BOOL fImmediateUpdate,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetActiveUI( 
            /* [in] */ DWORD dwCompRole,
            /* [in] */ __RPC__in REFCLSID rclsid,
            /* [in] */ ULONG cCmdGrpId,
            /* [in] */ __RPC__in LONG *rgnCmdGrpId) = 0;
        
        virtual /* [local] */ void STDMETHODCALLTYPE OnUIComponentEnterState( 
            /* [in] */ DWORD dwCompRole,
            /* [in] */ DWORD dwStateId,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual /* [local] */ BOOL STDMETHODCALLTYPE FOnUIComponentExitState( 
            /* [in] */ DWORD dwCompRole,
            /* [in] */ DWORD dwStateId,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual /* [local] */ BOOL STDMETHODCALLTYPE FUIComponentInState( 
            /* [in] */ DWORD dwStateId) = 0;
        
        virtual /* [local] */ BOOL STDMETHODCALLTYPE FContinueIdle( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOleInPlaceComponentUIManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOleInPlaceComponentUIManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOleInPlaceComponentUIManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOleInPlaceComponentUIManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *UIActivateForMe )( 
            IOleInPlaceComponentUIManager * This,
            /* [in] */ DWORD dwCompRole,
            /* [in] */ __RPC__in REFCLSID rclsidActive,
            /* [in] */ __RPC__in_opt IOleInPlaceActiveObject *pIPActObj,
            /* [in] */ __RPC__in_opt IOleCommandTarget *pCmdTrgtActive,
            /* [in] */ ULONG cCmdGrpId,
            /* [in] */ __RPC__in LONG *rgnCmdGrpId);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateUI )( 
            IOleInPlaceComponentUIManager * This,
            /* [in] */ DWORD dwCompRole,
            /* [in] */ BOOL fImmediateUpdate,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE *SetActiveUI )( 
            IOleInPlaceComponentUIManager * This,
            /* [in] */ DWORD dwCompRole,
            /* [in] */ __RPC__in REFCLSID rclsid,
            /* [in] */ ULONG cCmdGrpId,
            /* [in] */ __RPC__in LONG *rgnCmdGrpId);
        
        /* [local] */ void ( STDMETHODCALLTYPE *OnUIComponentEnterState )( 
            IOleInPlaceComponentUIManager * This,
            /* [in] */ DWORD dwCompRole,
            /* [in] */ DWORD dwStateId,
            /* [in] */ DWORD dwReserved);
        
        /* [local] */ BOOL ( STDMETHODCALLTYPE *FOnUIComponentExitState )( 
            IOleInPlaceComponentUIManager * This,
            /* [in] */ DWORD dwCompRole,
            /* [in] */ DWORD dwStateId,
            /* [in] */ DWORD dwReserved);
        
        /* [local] */ BOOL ( STDMETHODCALLTYPE *FUIComponentInState )( 
            IOleInPlaceComponentUIManager * This,
            /* [in] */ DWORD dwStateId);
        
        /* [local] */ BOOL ( STDMETHODCALLTYPE *FContinueIdle )( 
            IOleInPlaceComponentUIManager * This);
        
        END_INTERFACE
    } IOleInPlaceComponentUIManagerVtbl;

    interface IOleInPlaceComponentUIManager
    {
        CONST_VTBL struct IOleInPlaceComponentUIManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOleInPlaceComponentUIManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IOleInPlaceComponentUIManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IOleInPlaceComponentUIManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IOleInPlaceComponentUIManager_UIActivateForMe(This,dwCompRole,rclsidActive,pIPActObj,pCmdTrgtActive,cCmdGrpId,rgnCmdGrpId)	\
    ( (This)->lpVtbl -> UIActivateForMe(This,dwCompRole,rclsidActive,pIPActObj,pCmdTrgtActive,cCmdGrpId,rgnCmdGrpId) ) 

#define IOleInPlaceComponentUIManager_UpdateUI(This,dwCompRole,fImmediateUpdate,dwReserved)	\
    ( (This)->lpVtbl -> UpdateUI(This,dwCompRole,fImmediateUpdate,dwReserved) ) 

#define IOleInPlaceComponentUIManager_SetActiveUI(This,dwCompRole,rclsid,cCmdGrpId,rgnCmdGrpId)	\
    ( (This)->lpVtbl -> SetActiveUI(This,dwCompRole,rclsid,cCmdGrpId,rgnCmdGrpId) ) 

#define IOleInPlaceComponentUIManager_OnUIComponentEnterState(This,dwCompRole,dwStateId,dwReserved)	\
    ( (This)->lpVtbl -> OnUIComponentEnterState(This,dwCompRole,dwStateId,dwReserved) ) 

#define IOleInPlaceComponentUIManager_FOnUIComponentExitState(This,dwCompRole,dwStateId,dwReserved)	\
    ( (This)->lpVtbl -> FOnUIComponentExitState(This,dwCompRole,dwStateId,dwReserved) ) 

#define IOleInPlaceComponentUIManager_FUIComponentInState(This,dwStateId)	\
    ( (This)->lpVtbl -> FUIComponentInState(This,dwStateId) ) 

#define IOleInPlaceComponentUIManager_FContinueIdle(This)	\
    ( (This)->lpVtbl -> FContinueIdle(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IOleInPlaceComponentUIManager_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_oleipc_0000_0004 */
/* [local] */ 

#define MSOCMDSTATE_DISABLED	   OLECMDSTATE_DISABLED
#define MSOCMDSTATE_UP 		 OLECMDSTATE_UP
#define MSOCMDSTATE_DOWN	       OLECMDSTATE_DOWN
#define MSOCMDSTATE_NINCHED 	    OLECMDSTATE_NINCHED
#define MSOCMDSTATE_INVISIBLE  OLECMDSTATE_INVISIBLE


extern RPC_IF_HANDLE __MIDL_itf_oleipc_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_oleipc_0000_0004_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  HWND_UserSize(     unsigned long *, unsigned long            , HWND * ); 
unsigned char * __RPC_USER  HWND_UserMarshal(  unsigned long *, unsigned char *, HWND * ); 
unsigned char * __RPC_USER  HWND_UserUnmarshal(unsigned long *, unsigned char *, HWND * ); 
void                      __RPC_USER  HWND_UserFree(     unsigned long *, HWND * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\PMUResourceManager.c ===
//--------------------------------------------------------------------------
// Microsoft Visual Studio Sampling Profiler Driver
//
// Copyright (c) 2005 Microsoft Corporation Inc.
// All rights reserved
//
// PMUResourceManager.c
//
// PMU resource management.
//
//---------------------------------------------------------------------------
#include "PMUResourceManager.h"

/*
    Implementation Details:


    The following is an implementation of a cooperative, masterless resource
    management scheme.  In this case, the resource is the collection of 
    performance monitoring units (PMUs) on an SMP system.
    
    Resources are assigned to "Participants".  Participants may own one, 
    several, or all of the PMUs in a system.  Paricipants track their 
    own PMU usage.  When requesting PMU resources, a Participant queries all
    other Participants for their current usage.  If no other Participant 
    is using the resource, then the requestor takes ownership.
    
    Obviously, the above requires synchronization around acquisition and 
    relinquishment of the resources.  It also requires a guaranteed 
    communication mechanism that all participants can use to request and 
    release resources.  We use named callback objects for both.
    
    Drivers must initialize the Resource Manager by calling PmuRmInit.  This
    creates the callback that Participants will use to communicate.  When
    finished, the driver must call PmuRmUninit.
    
    To register a Participant, the driver must call PmuRmParticipate.  On
    success, this function returns an opaque pointer to a PMURM_PARTICIPANT
    structure.  The driver uses this pointer in subsequent calls to the 
    Resource Manager.  When a Participant no longer needs access to the 
    Resource Manager, it calls PmuRmResign to free the structure.  The
    structure keeps information that associates the Participant with a 
    DRIVER_OBJECT, and optional DEVICE_OBJECT, and a unicode string that is
    to be used as a friendly name.
    
    When a participant requires PMU resources, it calls PmuRmAcquire, passing
    it the affinity mask for the CPUs on which it requests the PMU.  On 
    success, the PMURM_PARTICIPANT structure is updated internally with a 
    copy of this affinity mask.  On failure, the PMURM_PARTICIPANT structure's
    internal affinity mask is cleared.  If desired, the call also returns the
    friendly name of the Participant that denied the request.
    
    If PmuRmAcquire's callback fails to obtain the resources, then it will 
    block on an event.  The timeout for this event is specified in a parameter
    to PmuRmAcquire.  The event is set any time a Participant releases PMU
    resources.  PmuRmAcquire will then retry the request.  This continues 
    until the request is successful, or the timeout expires.
*/

//
// Our named callback.
//
static const WCHAR CallbackName_buffer[] = L"\\Callback\\VSPerf_PmuManager";
static UNICODE_STRING CallbackName =
{
    sizeof(CallbackName_buffer) - sizeof(WCHAR),   \
    sizeof(CallbackName_buffer),                   \
    (PWSTR)(CallbackName_buffer)                   \
};    

PCALLBACK_OBJECT CallbackObject = NULL;


//
// Our pool tag, in case anyone asks
//
ULONG PmuRmTag = 'mrmp';


//
// Each participant supplies a valid structure for its ownership data.
// This data will be passed in the callback.
//
typedef struct _PMURM_PARTICIPANT
{
    // 
    // Current ownership mask
    //
    KAFFINITY       CpuMask;
    
    //
    // State of vote (only used during acquisition callbacks)
    //
    BOOLEAN         Vote;

    //
    // Driver and (optional) Device objects for this participant.
    //
    PDRIVER_OBJECT  DriverObject;
    PDEVICE_OBJECT  DeviceObject;

    //
    // Callback handle for this participant
    //
    PVOID           CallbackHandle;

    //
    // Signal event for waits
    //
    KEVENT          WaitEvent;

    //
    // Friendly name of participant (for error messages).
    //
    UNICODE_STRING  FriendlyName;

    //
    // Buffer for FriendlyName immediately follows this structure.
    //
    
} PMURM_PARTICIPANT, * PPMURM_PARTICIPANT;


//
// Parameters to the callback notification function
//
typedef struct _PMURM_CB_IN_PARMS
{
    // 
    // TRUE if this is an acquisition request, FALSE if it is a release.
    //
    BOOLEAN             Acquiring;

    //
    // The desired CPU mask (for an acquisition), or the released CPU
    // mask (for a release).
    //
    KAFFINITY           CpuMask;
    
    //
    // A pointer to the participant requesting the PMU.
    //
    PPMURM_PARTICIPANT  Participant;
    
} PMURM_CB_IN_PARMS, * PPMURM_CB_IN_PARMS;


//
// For a failed acquisiton, the last 'NO' vote will populate the output
// parms with its info, which may be used in an error message.
//
typedef struct _PMURM_CB_OUT_PARMS
{
    //
    // Driver and (optional) Device objects for declining voter.
    //
    PDRIVER_OBJECT  DriverObject;
    PDEVICE_OBJECT  DeviceObject;
    
    //
    // A friendly name for debugging or issuing an error message to user mode
    // profiling components.
    //
    PUNICODE_STRING FriendlyName;
    
} PMURM_CB_OUT_PARMS, * PPMURM_CB_OUT_PARMS;


/*
    As part of the PmuRm scheme, we must request notifications so that we
    can vote on requests.
*/
VOID
ParticipantCallback(
    IN PVOID CallbackContext,
    IN PVOID Argument1,
    IN PVOID Argument2
    )
{
    // Context is the participant (us)
    // Argument1 is the input parms
    // Argument2 is the output parms
    PPMURM_PARTICIPANT  Participant = (PPMURM_PARTICIPANT) CallbackContext;
    PPMURM_CB_IN_PARMS  InParms     = (PPMURM_CB_IN_PARMS) Argument1;
    PPMURM_CB_OUT_PARMS OutParms    = (PPMURM_CB_OUT_PARMS)Argument2;

    if ( InParms->Acquiring )
    {
        // Someone is requesting ownership of the PMU.
        // Only need to check when no one else has rejected the request
        if ( InParms->Participant->Vote )
        {
            // Always vote yes for ourselves.  Otherwise, verify that our
            // current mask doesn't include any bits in the request.
            if ( (InParms->Participant == Participant) || 
                 (InParms->CpuMask & Participant->CpuMask) == 0 )
            {
                // Vote YES
                InParms->Participant->CpuMask |= InParms->CpuMask;
            }
            else
            {
                // Vote NO
                InParms->Participant->Vote    = FALSE;
                InParms->Participant->CpuMask &= ~(InParms->CpuMask);
                
                // Populate the output parameters with information on who
                // voted NO.
                OutParms->DriverObject = Participant->DriverObject;
                OutParms->DeviceObject = Participant->DeviceObject;
                if ( OutParms->FriendlyName != NULL )
                {
                    RtlCopyUnicodeString(
                        OutParms->FriendlyName, 
                        &Participant->FriendlyName
                        );
                }
            }
        }
    }
    else
    {
        // Someone is releasing their PMU ownership.  Set an event 
        // to wake me up if I am waiting.
        KeSetEvent(&Participant->WaitEvent, 0, FALSE);
    }
}


/*------------------------------------------------------------------------
    Public facing APIs
------------------------------------------------------------------------*/

NTSTATUS
NTAPI
PmuRmInit(
	VOID
	)
/*++

Routine Description:

    This function initializes the PMU resource manager.

Arguments:

Return Value:

    NTSTATUS.

Notes:

    Always called at PASSIVE_LEVEL.
    
--*/
{
    //
    // Create our callback object for driver-driver communication.
    //
    OBJECT_ATTRIBUTES   ObjectAttributes;
    NTSTATUS Status;
    
    InitializeObjectAttributes(
        &ObjectAttributes,
        &CallbackName,
        OBJ_CASE_INSENSITIVE | OBJ_PERMANENT,
        NULL,
        NULL
        );
        
    Status = ExCreateCallback(
                &CallbackObject,
                &ObjectAttributes,
                TRUE,
                TRUE);
                            
    if ( !NT_SUCCESS(Status) )
        CallbackObject = NULL;
        
    return Status;
}


NTSTATUS
NTAPI
PmuRmUninit(
	VOID
	)
/*++

Routine Description:

    This function is used to release the PMU resource manager.

Arguments:

Return Value:

    NTSTATUS.

Notes:

    Always called at PASSIVE_LEVEL.

--*/
{
    // 
    // Release callback
    //
    if ( CallbackObject != NULL )
    {
        ObDereferenceObject(CallbackObject);
        CallbackObject = NULL;
    }

    return STATUS_SUCCESS;
}


NTSTATUS
NTAPI
PmuRmParticipate(
    IN  PDRIVER_OBJECT       DriverObject,
    IN  PDEVICE_OBJECT       DeviceObject OPTIONAL,
    IN  PUNICODE_STRING      FriendlyName,
    OUT PPMURM_PARTICIPANT * Participant
    )
/*++

Routine Description:

    This function registers a participant in the resource management scheme.

Arguments:

    DriverObject - Specifies the associated driver for the participant.
    
    DeviceObject - Specifies the associated device for the participant.  This
        parameter can be NULL if there is no associated device.
                   
    FriendlyName - Specifies a friendly name for the participant.  This string
        will be used in warning messages from other participants.
        
    Participant - PPMURM_PARTICIPANT pointer that will receive an initialized
        structure to be used in other PMURM calls.

Return Value:

    NTSTATUS.

Notes:

    Always called at PASSIVE_LEVEL.

--*/
{
    PPMURM_PARTICIPANT  TempParticipant;
    SIZE_T              StructSize;
    
    *Participant = NULL;

    //
    // The callback has to have been created
    //
    if ( CallbackObject == NULL )
        return STATUS_UNSUCCESSFUL;
    
    // 
    // Need room for the participant struct and the friendly name
    //
    StructSize = sizeof(PMURM_PARTICIPANT) + 
                 FriendlyName->Length + sizeof(WCHAR);
    
    // 
    // Callbacks will be done at DISPATCH_LEVEL, so our objects must come
    // from the non-paged pool.
    //
    TempParticipant = ExAllocatePoolWithTag(
                        NonPagedPool,
                        StructSize,
                        PmuRmTag);
                        
    if ( TempParticipant == NULL )
        return STATUS_NO_MEMORY;

    //
    // Initialize participant struct
    //
    TempParticipant->CpuMask      = 0;
    TempParticipant->Vote         = FALSE;
    TempParticipant->DriverObject = DriverObject;
    TempParticipant->DeviceObject = DeviceObject;
    
    //
    // Copy the friendly name to the end of the participant struct.
    //
    TempParticipant->FriendlyName.MaximumLength = 
        FriendlyName->Length + sizeof(WCHAR);

    TempParticipant->FriendlyName.Buffer = 
        (PWSTR)(TempParticipant + 1);

    RtlCopyUnicodeString(
        &TempParticipant->FriendlyName, 
        FriendlyName
        );
    
	//
    // Initialize wait event structure.
    //
    KeInitializeEvent(
        &TempParticipant->WaitEvent,
        NotificationEvent,
        FALSE
        );

	//
    // Register this participant for a callback.
    //
    TempParticipant->CallbackHandle =
        ExRegisterCallback(
            CallbackObject,
            ParticipantCallback,
            TempParticipant
            );
            
    if ( TempParticipant->CallbackHandle == NULL )
    {
        ExFreePool(TempParticipant);
        return STATUS_UNSUCCESSFUL;
    }

    *Participant = TempParticipant;
    return STATUS_SUCCESS;
}


NTSTATUS
NTAPI
PmuRmResign(
    IN  PPMURM_PARTICIPANT  Participant
    )
/*++

Routine Description:

    This function removes a participant in the resource management scheme.

Arguments:

    Participant - The original PMURM_PARTICIPANT pointer returned from 
        PmuRmParticipate.

Return Value:

    NTSTATUS.

Notes:

    Always called at PASSIVE_LEVEL.

--*/
{
    if ( Participant == NULL ||
         Participant->CallbackHandle == NULL )
    {
        return STATUS_INVALID_PARAMETER;
    }
    
    //
    // If we own resources, wake up anyone who might be waiting.
    //
    if ( Participant->CpuMask != 0 )
        PmuRmRelease(Participant, Participant->CpuMask);
    
    // 
    // Unregister the participant's callback.
    //
    ExUnregisterCallback(Participant->CallbackHandle);
    
    //
    // Free participant structure.
    //
    ExFreePool(Participant);
    
    return STATUS_SUCCESS;
}


NTSTATUS
NTAPI
PmuRmAcquire(
    IN  PPMURM_PARTICIPANT  Participant,
	IN	KAFFINITY           CpuMask,
    IN  PLARGE_INTEGER      Timeout      OPTIONAL,
    OUT PUNICODE_STRING     NoVoteText   OPTIONAL
	)
/*++

Routine Description:

    This function attempts to acquire PMU resources for the given CPUs.

Arguments:

    Participant - The PMURM_PARTICIPANT pointer returned from PmuRmParticipate.

    CpuMask - A bit mask indicating which CPUs to acquire PMU resources for.
    
    Timeout - An optional timeout value.  If omitted, this function blocks 
        until the PMU resources become available.  If set to zero, the function
        returns success or failure immediately.
                   
    NoVoteText - If the function fails because the resource is currently held,
        this string will hold the friendly name of the participant that holds 
        the resource.

Return Value:

    NTSTATUS.

Notes:

    Always called at PASSIVE_LEVEL.

--*/
{
    KIRQL         OldIrql;
    NTSTATUS      Status = STATUS_UNSUCCESSFUL;
    LARGE_INTEGER CurrentTimeout = {0};
    LARGE_INTEGER StartTime;
    LARGE_INTEGER ElapsedTime;
    
    PMURM_CB_IN_PARMS InParms;
    PMURM_CB_OUT_PARMS OutParms;

    // 
    // You cannot acquire resources you already own.
    // 
    if ( (Participant->CpuMask & CpuMask) != 0 )
        return STATUS_INVALID_PARAMETER;

    //
    // The callback has to have been created
    //
    if ( CallbackObject == NULL )
        return STATUS_UNSUCCESSFUL;

    // Copy timeout value (if present)
    if ( Timeout != NULL )
    {
        CurrentTimeout = *Timeout;
        // Reassign pointer so we don't trash the caller's data
        Timeout = &CurrentTimeout;
    }
    
    // 
    // Set up in and out parms
    //
    InParms.Acquiring = TRUE;
    InParms.CpuMask = CpuMask;
    InParms.Participant = Participant;

    OutParms.FriendlyName = NoVoteText;
    
    //
    // We will continue attempting to get the resource until either we 
    // succeed or we time out.
    //
    while ( TRUE )
    {
        //
        // Get base for elapsed time
        //
        KeQuerySystemTime(&StartTime);
        
        // 
        // This callback *must* happen synchronously.  
        //
		IoAcquireCancelSpinLock(&OldIrql);
        {
            Participant->Vote = TRUE;
            KeClearEvent(&Participant->WaitEvent);
            ExNotifyCallback(CallbackObject, &InParms, &OutParms);
        }    
        IoReleaseCancelSpinLock(OldIrql);

        //
        // We are done if our CpuMask was updated.
        //
        if ( (Participant->CpuMask & CpuMask) == CpuMask )
             return STATUS_SUCCESS;
    
        //
        // We lose!  Wait until someone releases or we time out.
        // 
        Status = KeWaitForSingleObject(
                    &Participant->WaitEvent,
                    Executive,
                    KernelMode,
                    FALSE,
                    Timeout
                    );

        //
        // Calculate time spent waiting.
        //
        KeQuerySystemTime(&ElapsedTime);
        ElapsedTime.QuadPart -= StartTime.QuadPart;
    
        if ( Status == STATUS_TIMEOUT )
            return STATUS_TIMEOUT;
        
        //
        // We've been woken up, let's adjust our timeout and retry.  If the 
        // timeout is negative, it's relative to the start time, and we adjust 
        // for elapsed time above.  Otherwise, the timeout is NULL (infinite) 
        // or an absolute time, and no adjustment is necessary.
        //
        if ( Timeout != NULL && Timeout->QuadPart < 0 )
        {
            Timeout->QuadPart += ElapsedTime.QuadPart;
            if ( Timeout->QuadPart >= 0 )
                return STATUS_TIMEOUT;
        }
    }

    // Should never get here.
    return Status;
}
	

NTSTATUS
NTAPI
PmuRmRelease(
    IN  PPMURM_PARTICIPANT  Participant,
	IN  KAFFINITY	        CpuMask
	)
/*++

Routine Description:

    This function returns PMU resources for the given CPUs.

Arguments:

    Participant - The PMURM_PARTICIPANT pointer returned from PmuRmParticipate.

    CpuMask - A bit mask indicating which CPUs to return PMU resources for.

Return Value:

    NTSTATUS.

Notes:

    Always called at PASSIVE_LEVEL.

--*/
{
    PMURM_CB_IN_PARMS InParms;
    KIRQL    OldIrql;

    //
    // The callback has to have been created
    //
    if ( CallbackObject == NULL )
        return STATUS_UNSUCCESSFUL;

    //
    // Don't bother releasing what we don't have.
    //
    if ( (Participant->CpuMask & CpuMask) == 0 )
        return STATUS_UNSUCCESSFUL;

    // Set up in parms
    InParms.Acquiring   = FALSE;
    InParms.CpuMask     = CpuMask;
    InParms.Participant = Participant;
    
    // 
    // This callback *must* happen synchronously.  
    //
	IoAcquireCancelSpinLock(&OldIrql);
    {
        //
        // Slam our CpuMask.
        //
        Participant->CpuMask &= ~CpuMask;
        
        //
        // Notify everyone that PMU resources have become available.
        //
        ExNotifyCallback(CallbackObject, &InParms, NULL);
    }    
    IoReleaseCancelSpinLock(OldIrql);

    return STATUS_SUCCESS;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\RazorGuids.h ===
/////////////////////////////////////////////////////////////////////////////
//                     Razor Package
//
// NOTE: make sure any changes to this file is synchronized with Guids.cs
//
//
// Guid of the client package
#define guidRazorPackage { 0xBEB01DDF, 0x9D2B, 0x435B, { 0xA9, 0xE7, 0x76, 0x55, 0x7E, 0x2B, 0x6B, 0x52 } }

// Guid of the command set containing the command IDs of the client package
#define guidRazorCmdSet { 0x5289d302, 0x2432, 0x4761, { 0x8c, 0x45, 0x5, 0x1c, 0x64, 0xbd, 0x0, 0xc4 } }

#define guidVsDebugPresentationIcon { 0x271f465f, 0x409, 0x4cbc, { 0x95, 0xf6, 0x56, 0x30, 0x85, 0x77, 0xdc, 0xe6 } }

// Guid of our icons for toolbar buttons
#define guidRazorToolbarIcons {0xC760F489, 0xE2D2, 0x4D20, {0xB5, 0x9B, 0xAD, 0x53, 0x65, 0xF2, 0xF8, 0xD9 } }
//
/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\RegistryRoots.h ===
#pragma once

#define REGKEY_VISUALSTUDIOROOT_90        "Software\\Microsoft\\VisualStudio\\9.0"
#define LREGKEY_VISUALSTUDIOROOT_90       L"Software\\Microsoft\\VisualStudio\\9.0"

#define REGKEY_VISUALSTUDIOROOT_100       "Software\\Microsoft\\VisualStudio\\10.0"
#define LREGKEY_VISUALSTUDIOROOT_100      L"Software\\Microsoft\\VisualStudio\\10.0"

#define REGKEY_VISUALSTUDIOROOT_CURRENT   "Software\\Microsoft\\VisualStudio\\10.0"
#define LREGKEY_VISUALSTUDIOROOT_CURRENT  L"Software\\Microsoft\\VisualStudio\\10.0"

#define VISUALSTUDIO_PROGID_VERSION_100        L"10.0"
#define VISUALSTUDIO_DDE_NAME_10               L"VisualStudio.10.0"

#define VISUALSTUDIO_PROGID_VERSION_CURRENT    L"10.0"
#define VISUALSTUDIO_DDE_NAME_CURRENT          L"VisualStudio.10.0"

#define REGKEY_APPENVROOT_90              "Software\\Microsoft\\AppEnv\\9.0\\Apps"
#define LREGKEY_APPENVROOT_90             L"Software\\Microsoft\\AppEnv\\9.0\\Apps"

#define REGKEY_APPENVROOT_100             "Software\\Microsoft\\AppEnv\\10.0"
#define LREGKEY_APPENVROOT_100            L"Software\\Microsoft\\AppEnv\\10.0"

#define REGKEY_APPENVROOT_CURRENT         "Software\\Microsoft\\AppEnv\\10.0"
#define LREGKEY_APPENVROOT_CURRENT        L"Software\\Microsoft\\AppEnv\\10.0"

#define LREGKEY_SQMREGROOT_90             L"Software\\Microsoft\\VSCommon\\9.0\\SQM"
#define REGKEY_SQMREGROOT_90              "Software\\Microsoft\\VSCommon\\9.0\\SQM"

#define LREGKEY_SQMREGROOT_100            L"Software\\Microsoft\\VSCommon\\10.0\\SQM"
#define REGKEY_SQMREGROOT_100             "Software\\Microsoft\\VSCommon\\10.0\\SQM"

#define LREGKEY_SQMREGROOT_CURRENT        L"Software\\Microsoft\\VSCommon\\10.0\\SQM"
#define REGKEY_SQMREGROOT_CURRENT         "Software\\Microsoft\\VSCommon\\10.0\\SQM"

#define LREGKEY_DEXPLOREROOT_90           L"Software\\Microsoft\\MSDN\\9.0"
#define REGKEY_DEXPLOREROOT_90            "Software\\Microsoft\\MSDN\\9.0"

#define LREGKEY_DEXPLOREROOT_100          L"Software\\Microsoft\\MSDN\\10.0"
#define REGKEY_DEXPLOREROOT_100           "Software\\Microsoft\\MSDN\\10.0"

#define LREGKEY_DEXPLOREROOT_CURRENT      L"Software\\Microsoft\\MSDN\\10.0"
#define REGKEY_DEXPLOREROOT_CURRENT       "Software\\Microsoft\\MSDN\\10.0"

#define REGKEY_VBEXPRESSROOT_90           "Software\\Microsoft\\VBExpress\\9.0"
#define LREGKEY_VBEXPRESSROOT_90          L"Software\\Microsoft\\VBExpress\\9.0"

#define REGKEY_VBEXPRESSROOT_100          "Software\\Microsoft\\VBExpress\\10.0"
#define LREGKEY_VBEXPRESSROOT_100         L"Software\\Microsoft\\VBExpress\\10.0"

#define REGKEY_VBEXPRESSROOT_CURRENT      "Software\\Microsoft\\VBExpress\\10.0"
#define LREGKEY_VBEXPRESSROOT_CURRENT     L"Software\\Microsoft\\VBExpress\\10.0"

#define VBEXPRESS_PROGID_VERSION_100        L"10.0"
#define VBEXPRESS_DDE_NAME_10               L"VBExpress.10.0"

#define VBEXPRESS_PROGID_VERSION_CURRENT    L"10.0"
#define VBEXPRESS_DDE_NAME_CURRENT          L"VBExpress.10.0"

#define REGKEY_VCEXPRESSROOT_90           "Software\\Microsoft\\VCExpress\\9.0"
#define LREGKEY_VCEXPRESSROOT_90          L"Software\\Microsoft\\VCExpress\\9.0"

#define REGKEY_VCEXPRESSROOT_100          "Software\\Microsoft\\VCExpress\\10.0"
#define LREGKEY_VCEXPRESSROOT_100         L"Software\\Microsoft\\VCExpress\\10.0"

#define REGKEY_VCEXPRESSROOT_CURRENT      "Software\\Microsoft\\VCExpress\\10.0"
#define LREGKEY_VCEXPRESSROOT_CURRENT     L"Software\\Microsoft\\VCExpress\\10.0"

#define VCEXPRESS_PROGID_VERSION_100        L"10.0"
#define VCEXPRESS_DDE_NAME_10               L"VCExpress.10.0"

#define VCEXPRESS_PROGID_VERSION_CURRENT    L"10.0"
#define VCEXPRESS_DDE_NAME_CURRENT          L"VCExpress.10.0"

#define REGKEY_VCSEXPRESSROOT_90          "Software\\Microsoft\\VCSExpress\\9.0"
#define LREGKEY_VCSEXPRESSROOT_90         L"Software\\Microsoft\\VCSExpress\\9.0"

#define REGKEY_VCSEXPRESSROOT_100         "Software\\Microsoft\\VCSExpress\\10.0"
#define LREGKEY_VCSEXPRESSROOT_100        L"Software\\Microsoft\\VCSExpress\\10.0"

#define REGKEY_VCSEXPRESSROOT_CURRENT     "Software\\Microsoft\\VCSExpress\\10.0"
#define LREGKEY_VCSEXPRESSROOT_CURRENT    L"Software\\Microsoft\\VCSExpress\\10.0"

#define VCSEXPRESS_PROGID_VERSION_100        L"10.0"
#define VCSEXPRESS_DDE_NAME_10               L"VCSExpress.10.0"

#define VCSEXPRESS_PROGID_VERSION_CURRENT    L"10.0"
#define VCSEXPRESS_DDE_NAME_CURRENT          L"VCSExpress.10.0"

#define LREGKEY_VSAROOT_90                L"Software\\Microsoft\\VSA\\9.0"
#define REGKEY_VSAROOT_90                 "Software\\Microsoft\\VSA\\9.0"

#define LREGKEY_VSAROOT_100               L"Software\\Microsoft\\VSA\\10.0"
#define REGKEY_VSAROOT_100                "Software\\Microsoft\\VSA\\10.0"

#define LREGKEY_VSAROOT_CURRENT           L"Software\\Microsoft\\VSA\\10.0"
#define REGKEY_VSAROOT_CURRENT            "Software\\Microsoft\\VSA\\10.0"

#define REGKEY_VSTAROOT_90                "Software\\Microsoft\\VSTA\\9.0" 
#define LREGKEY_VSTAROOT_90               L"Software\\Microsoft\\VSTA\\9.0"

#define REGKEY_VSTAROOT_100               "Software\\Microsoft\\VSTA\\10.0" 
#define LREGKEY_VSTAROOT_100              L"Software\\Microsoft\\VSTA\\10.0"

#define REGKEY_VSTAROOT_CURRENT           "Software\\Microsoft\\VSTA\\10.0" 
#define LREGKEY_VSTAROOT_CURRENT          L"Software\\Microsoft\\VSTA\\10.0"

#define LREGKEY_VSTAROOT_InVS_90          L"Software\\Microsoft\\VisualStudio\\9.0\\VSTA"

#define LREGKEY_VSTAROOT_InVS_10          L"Software\\Microsoft\\VisualStudio\\10.0\\VSTA"

#define LREGKEY_VSTAROOT_InVS_CURRENT     L"Software\\Microsoft\\VisualStudio\\10.0\\VSTA"

#define REGKEY_VWDEXPRESSROOT_90          "Software\\Microsoft\\VWDExpress\\9.0" 
#define LREGKEY_VWDEXPRESSROOT_90         L"Software\\Microsoft\\VWDExpress\\9.0"

#define REGKEY_VWDEXPRESSROOT_100         "Software\\Microsoft\\VWDExpress\\10.0" 
#define LREGKEY_VWDEXPRESSROOT_100        L"Software\\Microsoft\\VWDExpress\\10.0"

#define REGKEY_VWDEXPRESSROOT_CURRENT     "Software\\Microsoft\\VWDExpress\\10.0" 
#define LREGKEY_VWDEXPRESSROOT_CURRENT    L"Software\\Microsoft\\VWDExpress\\10.0"

#define REGKEY_VSSERVICINGROOT_CURRENT    "Software\\Microsoft\\Devdiv\\VS\\Servicing\\10.0"
#define LREGKEY_VSSERVICINGROOT_CURRENT   L"Software\\Microsoft\\Devdiv\\VS\\Servicing\\10.0"

#define VWDEXPRESS_PROGID_VERSION_100        L"10.0"
#define VWDEXPRESS_DDE_NAME_10               L"VWDExpress.10.0"

#define VWDEXPRESS_PROGID_VERSION_CURRENT    L"10.0"
#define VWDEXPRESS_DDE_NAME_CURRENT          L"VWDExpress.10.0"

#define REGKEY_ADDIN_WIZARD               "Software\\Microsoft\\Shared Tools\\AddinWizard10.0"
#define LREGKEY_ADDIN_WIZARD              L"Software\\Microsoft\\Shared Tools\\AddinWizard10.0"

#define REGKEY_VPDEXPRESSROOT_100         "Software\\Microsoft\\VPDExpress\\10.0"
#define LREGKEY_VPDEXPRESSROOT_100        L"Software\\Microsoft\\VPDExpress\\10.0"

#define REGKEY_VPDEXPRESSROOT_CURRENT     "Software\\Microsoft\\VPDExpress\\10.0"
#define LREGKEY_VPDEXPRESSROOT_CURRENT    L"Software\\Microsoft\\VPDExpress\\10.0"

#define VPDEXPRESS_PROGID_VERSION_100        L"10.0"
#define VPDEXPRESS_DDE_NAME_10               L"VPDExpress.10.0"

#define VPDEXPRESS_PROGID_VERSION_CURRENT    L"10.0"
#define VPDEXPRESS_DDE_NAME_CURRENT          L"VPDExpress.10.0"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\proffserv.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for proffserv.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __proffserv_h__
#define __proffserv_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IProfferService_FWD_DEFINED__
#define __IProfferService_FWD_DEFINED__
typedef interface IProfferService IProfferService;
#endif 	/* __IProfferService_FWD_DEFINED__ */


/* header files for imported files */
#include "servprov.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_proffserv_0000_0000 */
/* [local] */ 

//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright 1995 - 1997 Microsoft Corporation. All Rights Reserved.
//
//  File: proffserv.h
//
//--------------------------------------------------------------------------
#ifndef _PROFFSERV_H_
#define _PROFFSERV_H_


extern RPC_IF_HANDLE __MIDL_itf_proffserv_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_proffserv_0000_0000_v0_0_s_ifspec;

#ifndef __IProfferService_INTERFACE_DEFINED__
#define __IProfferService_INTERFACE_DEFINED__

/* interface IProfferService */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IProfferService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CB728B20-F786-11ce-92AD-00AA00A74CD0")
    IProfferService : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ProfferService( 
            /* [in] */ REFGUID rguidService,
            /* [in] */ IServiceProvider *psp,
            /* [out] */ DWORD *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RevokeService( 
            /* [in] */ DWORD dwCookie) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IProfferServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IProfferService * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IProfferService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IProfferService * This);
        
        HRESULT ( STDMETHODCALLTYPE *ProfferService )( 
            IProfferService * This,
            /* [in] */ REFGUID rguidService,
            /* [in] */ IServiceProvider *psp,
            /* [out] */ DWORD *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE *RevokeService )( 
            IProfferService * This,
            /* [in] */ DWORD dwCookie);
        
        END_INTERFACE
    } IProfferServiceVtbl;

    interface IProfferService
    {
        CONST_VTBL struct IProfferServiceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IProfferService_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IProfferService_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IProfferService_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IProfferService_ProfferService(This,rguidService,psp,pdwCookie)	\
    ( (This)->lpVtbl -> ProfferService(This,rguidService,psp,pdwCookie) ) 

#define IProfferService_RevokeService(This,dwCookie)	\
    ( (This)->lpVtbl -> RevokeService(This,dwCookie) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IProfferService_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_proffserv_0000_0001 */
/* [local] */ 

#define SID_SProfferService IID_IProfferService
#endif


extern RPC_IF_HANDLE __MIDL_itf_proffserv_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_proffserv_0000_0001_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\RazorCmdId.h ===
//------------------------------------------------------------------------------
// <copyright from='1997' to='2007' company='Microsoft Corporation'>           
//    Copyright (c) Microsoft Corporation. All Rights Reserved.                
//    Information Contained Herein is Proprietary and Confidential.            
// </copyright>                                                                
//------------------------------------------------------------------------------
//
// Definition of the numeric part of the IDs for the VSCT elements of this
// package.
//
// NOTE: if you make any changes here, make sure to make the same changes in
// PkgCmdId.cs.
//

/////////////////////////////////////////////////////////////////////
// Menus
//
#define IDM_DEBUGGER_PROJECT_CONTEXT_MENU               0x0201
#define IDG_DEBUGGER_PROJECT_CONTEXT_MENU_MAIN_GROUP    0x0202
#define IDG_DATA_TIPS_ON_DEBUG                          0x0205
#define IDM_THREAD_WINDOW_TOOLBAR						0x0206
#define IDG_THREAD_WINDOW_TOOLBAR_FLAG					0x0207
#define IDG_THREAD_WINDOW_TOOLBAR_STACKS				0x0208
#define IDG_THREAD_WINDOW_TOOLBAR_GROUPS				0x0209
#define IDG_THREAD_WINDOW_TOOLBAR_SEARCH				0x0210
#define IDG_THREAD_WINDOW_TOOLBAR_FLAG_MENU				0x0211
#define IDG_THREAD_WINDOW_TOOLBAR_FLAG_MENU_GROUP		0x0212
#define IDG_THREAD_WINDOW_TOOLBAR_ARRANGE				0x0213
#define IDG_THREAD_WINDOW_TOOLBAR_TOGGLE_SUSPENDED	    0x0214
#define IDG_DATA_TIPS_CONTEXT                           0x0215
#define IDM_DATA_TIPS_CONTEXT                           0x0216
#define IDG_DATA_TIPS_CONTEXT_CLEAR                     0x0217
#define IDG_DATA_TIPS_MENU_CLEAR                        0x0218
#define IDG_THREAD_WINDOW_SELECT_COLUMNS                0x0219
#define IDM_DATA_TIPS_WATCH_ITEM_CONTEXT				0x021A
#define IDM_DATA_TIPS_TEXT_BOX_CONTEXT					0x021B
#define IDG_DATATIP_TEXTBOX_CLIPBOARD                   0x021C
#define IDG_DATATIP_RADIX                               0x021D
#define IDG_DATATIP_EXPRESSIONS                         0x021E
#define IDM_DISASSEMBLY_WINDOW_TOOLBAR					0x0220
#define IDG_DISASSEMBLY_WINDOW_TOOLBAR_ADDRESS			0x0221

// TODO: re-enabled this constant
#define cmdidClearAllTips 0x00000101
#define cmdidRazorThreadWindowToolbarExpandStacks		0x00000103
#define cmdidRazorThreadWindowToolbarCollapseStacks		0x00000104
#define cmdidRazorThreadWindowToolbarExpandGroups		0x00000105
#define cmdidRazorThreadWindowToolbarCollapseGroups		0x00000106
#define cmdidRazorThreadWindowToolbarSearchCombo		0x00000107
#define cmdidRazorThreadWindowToolbarSearchHandler		0x00000108
#define cmdidRazorThreadWindowToolbarClearSearch		0x00000109
#define cmdidRazorThreadWindowToolbarSearchCallStack	0x00000110
#define cmdidRazorThreadWindowToolbarFlagJustMyCode		0x00000111
#define cmdidRazorThreadWindowToolbarFlagCustomModules  0x00000112
#define cmdidRazorThreadWindowToolbarFlag				0x00000113
#define cmdidToolsProgramToDebug						0x00000114
#define cmdidDebugProgramToDebug                        0x00000115
#define cmdidInstallJitDebugger                         0x00000116
#define cmdidClearDataTipsSubMenu                       0x00000119
#define cmdidClearDataTipsContextRoot                   0x0000011A
#define cmdidClearDataTipsContextSingle                 0x0000011B
#define cmdidClearDataTipsContextFirst                  0x0000011C
#define cmdidClearDataTipsContextLast                   0x0000021C
#define cmdidClearDataTipsMenuFirst                     0x0000021D
#define cmdidClearDataTipsMenuLast                      0x0000031D
#define cmdidClearActivePinnedTips                      0x0000031E
#define cmdidArrangePinnedTipsOnLine                    0x0000031F
#define cmdidExportDataTips                             0x00000320
#define cmdidImportDataTips                             0x00000321
#define cmdidRazorThreadWindowToolbarGroupCombo         0x00000322
#define cmdidRazorThreadWindowToolbarGroupHandler       0x00000323
#define cmdidRazorThreadWindowToolbarColumnsMenu        0x00000324
#define cmdidThreadWindowToolbarSelectColumnFirst       0x00000325
#define cmdidThreadWindowToolbarSelectColumnLast        0x00000345
#define cmdidRazorThreadWindowToolbarFreezeThreads      0x00000346
#define cmdidRazorThreadWindowToolbarThawThreads        0x00000347
#define cmdidPinExpression                              0x00000348
#define cmdidAddExpression								0x00000349
#define cmdidRemoveExpression							0x0000034A
#define cmdidRazorDisassemblyWindowToolbarAddressCombo   0x00000360

// Bitmaps
#define bmpShieldIcon 1

// Thread window icon strip (image well)
#define imgThreadsExpandCallstack						1
#define imgThreadsCollapseCallstack						2
#define imgThreadsExpandGroups							3
#define imgThreadsCollapseGroups						4
#define imgThreadsFreezeThreads							5
#define imgThreadsThawThreads   						6
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\PooledString.h ===
/*--------------------------------------------------------------------------*
 *
 *  Microsoft Visual Studio
 *  Copyright (C) Microsoft Corporation, 1995 - 2008
 *
 *  File:       PooledString.h
 *
 *  Contents:   Implementation file for CPooledString
 *
 *  History:    8-Feb-2008 jeffro    Created
 *
 *--------------------------------------------------------------------------*/

#pragma once

#include <map>
#include <hash_map>


_STDEXT_BEGIN

/*
 * define overloads of stdext::hash_value(CString) so CStrings can be key values 
 * in hashed collections (stdext::hash_map, stdext::hash_set, etc.)
 */
template<typename BaseType, class StringTraits>
inline size_t hash_value(const CStringT<BaseType, StringTraits>& str)
{
    return (CElementTraits<CStringT<BaseType, StringTraits>>::Hash (str));
}

_STDEXT_END


/*+-------------------------------------------------------------------------*
 * CPooledStringT
 *
 * This class is intended to reduce the memory consumed by multiple, identical
 * CString objects.  The linker will fold identical C-style strings (char* or
 * wchar_t*) into a single instance, but no such mechanism exists for CStrings.
 * 
 * This code:
 * 
 *      CString s1 = "Some text";
 *      CString s2 = "Some text";
 * 
 * will result in a single instance of the string "Some text" embedded in the 
 * binary, but at runtime there will be two dynamically-allocated buffers:
 * 
 *          +-----------+
 *      s1: | m_pszData | ----------+
 *          +-----------+           |
 *                                  V
 *                        +----------------------+
 *                        | header | "Some text" |
 *                        +----------------------+
 *      
 *          +-----------+
 *      s2: | m_pszData | ----------+
 *          +-----------+           |
 *                                  V
 *                        +----------------------+
 *                        | header | "Some text" |
 *                        +----------------------+
 * 
 * CString supports refcounting so if one CString is initialized from another,
 * we end up with a more efficient story:
 * 
 *      CString s1 = "Some text";
 *      CString s2 = s1;
 * 
 * There's still only one copy of "Some text" embedded in the binary, but 
 * now the runtime memory layout looks like this:
 * 
 *          +-----------+
 *      s1: | m_pszData | ----------+
 *          +-----------+           |
 *                                  V
 *                        +----------------------+
 *                        | header | "Some text" |
 *                        +----------------------+
 *                                  ^
 *          +-----------+           |
 *      s2: | m_pszData | ----------+
 *          +-----------+           
 * 
 * CPooledString takes advantage of this.  It maintains a static pool of
 * strings that are contained by CPooledString objects.  Each string in the
 * pool as a reference count, independent of the internal refcount maintained
 * in the header portion of a CString object.  As CPooledStrings are created, 
 * the pool is searched for a CString matching the content of the CPooledString.  
 * If it's in the pool already, the refcount is bumped; if it's not there yet 
 * it's added with a refcount of 1.  As CPooledStrings are destroyed, the 
 * refcount is decremented and if it goes to zero the CString is removed from 
 * the pool.
 * 
 * Each CPooledString contains a CString and achieves its memory savings by 
 * ensuring that its contained CString is initialized from the CString in the
 * pool, taking advantage of CString's internal refcounting system to achieve
 * the memory sharing.
 * 
 * CPooledString isn't intended to be a full-service replacement for CString.
 * Specifically, CPooledStrings are immutable.  (Well, almost immutable. 
 * They can be changed by assignment (i.e. by completely replacing the 
 * contained CString), but not by mutating the contained CString in place.)
 * It defines a set of constructors and assignment operators, a set of
 * comparison operators, and implicit conversions to const CString& and
 * LPCxSTR.  If you want to do other CString-like things (find its length,
 * tokenize it, extract a substring, etc.), you can obtain a const reference
 * to the inner string by using the implicit conversion or by using 
 * GetStringObject.
 *-----------------------------------------------------------------(jeffro)-*/
template<class StringType>
class CPooledStringT
{
public:
    typedef typename StringType                 StringType;
    typedef typename StringType::XCHAR          XCHAR;
    typedef typename StringType::PXSTR          PXSTR;
    typedef typename StringType::PCXSTR         PCXSTR;

    typedef typename stdext::hash_map<StringType, size_t> PoolType;

    /*+-------------------------------------------------------------------------*
     * CPooledStringT
     *
     * Constructs a CPooledStringT object. 
     *-----------------------------------------------------------------(jeffro)-*/
    CPooledStringT (const StringType& s = StringType())
    {
        InitFrom (Lookup (s));
    }

    CPooledStringT (const CPooledStringT& other)
    {
        InitFrom (other.m_s);
    }

    CPooledStringT (PCXSTR psz)
    {
        InitFrom (Lookup (CCachedInitString(psz)));
    }


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::~CPooledStringT
     *
     * Destroys a CPooledStringT object.
     *-----------------------------------------------------------------(jeffro)-*/
    ~CPooledStringT()
    {
        Release();
    }


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::operator=
     *
     * Assignment operators.
     *-----------------------------------------------------------------(jeffro)-*/
    CPooledStringT& operator= (const StringType& s) 
    {
        CopyFrom (s);
        return (*this);
    }

    CPooledStringT& operator= (const CPooledStringT& other)
    {
        CopyFrom (other.m_s);
        return (*this);
    }

    CPooledStringT& operator= (PCXSTR psz)
    {
        CopyFrom (CCachedInitString(psz));
        return (*this);
    }


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::operator==
     * CPooledStringT::operator!=
     *
     * (In-) equality operators.
     *-----------------------------------------------------------------(jeffro)-*/
    bool operator== (const StringType& s) const
    {
        return (m_s == s);
    }

    bool operator== (const CPooledStringT& other) const
    {
        /*
         * optimize by comparing pointers, since we know that two idendtical
         * pooled strings will share a string representation
         */
        return (m_s.GetString() == other.GetString());
    }

    bool operator== (PCXSTR psz) const
    {
        return (m_s == psz);
    }

    bool operator!= (const StringType& s) const
    {
        return !(*this == s);
    }

    bool operator!= (const CPooledStringT& other) const
    {
        return !(*this == other);
    }

    bool operator!= (PCXSTR psz) const
    {
        return !(*this == psz);
    }


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::operator<
     *
     * This operator is required for sorting by STL collections and algorithms.
     *-----------------------------------------------------------------(jeffro)-*/
    bool operator< (const StringType& s) const
    {
        return (m_s < s);
    }

    bool operator< (const CPooledStringT& other) const
    {
        return (m_s < other.m_s);
    }

    bool operator< (PCXSTR psz) const
    {
        return (m_s < psz);
    }


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::operator PCXSTR
     * CPooledStringT::operator const StringType&
     *
     * Casting operators
     *-----------------------------------------------------------------(jeffro)-*/
    operator PCXSTR() const
    {
        return (m_s);
    }

    operator const StringType&() const
    {
        return (m_s);
    }


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::GetString
     * CPooledStringT::GetStringObject
     *
     * Allow access to the contained string as an object or a character pointer.
     *-----------------------------------------------------------------(jeffro)-*/
    PCXSTR GetString() const
    {
        return (m_s);
    }

    const StringType& GetStringObject() const
    {
        return (m_s);
    }

    int GetLength() const throw()
    {
        return (m_s.GetLength());
    }

    bool IsEmpty() const throw()
    {
        return (m_s.IsEmpty());
    }

    /*+-------------------------------------------------------------------------*
     * CPooledStringT::GetPoolSize
     *
     * Returns the number of strings in the string pool.  Mostly useful for
     * debugging purposes.
     *-----------------------------------------------------------------(jeffro)-*/
    static size_t GetPoolSize()
    {
        return (s_pool.size());
    }


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::GetPoolMemUsage
     *
     * Returns the memory occupied by the strings in the pool (not including
     * the overhead of the pool itself).  If the optional pcbWouldBe parameter
     * is passed, then the amount of memory that the strings would occupy if
     * not pooled.
     * 
     * This function is useful for diagnostics only.
     *-----------------------------------------------------------------(jeffro)-*/
    static size_t GetPoolMemUsage (size_t* pcbWouldBe = NULL)
    {
        size_t cbTotal = 0;

        if (pcbWouldBe != NULL)
            *pcbWouldBe = 0;

        PoolType::const_iterator it;

        for (it = s_pool.begin(); it != s_pool.end(); ++it)
        {
            const StringType& s     = it->first;
            const size_t&     cRefs = it->second;

            /*
             * ATL allocates memory blocks for strings in multiples of 8 characters
             */
            const size_t cb = sizeof(XCHAR) * AtlAlignUp (s.GetLength()+1, 8);

            cbTotal += cb;

            if (pcbWouldBe != NULL)
                *pcbWouldBe += cb * cRefs;
        }

        return (cbTotal);
    }

#ifdef DEBUG
    /*+-------------------------------------------------------------------------*
     * CPooledStringT::ShowPoolStats
     *
     * Shows statistics for the string pool, optionally dumping the pool contents
     * to the debugger.
     *-----------------------------------------------------------------(jeffro)-*/
    static void ShowPoolStats (bool fDumpPool)
    {
        if (fDumpPool)
        {  
            CWaitCursor wait;
            DumpPool();
        }

        size_t cbWouldBe;
        size_t cbTotal   = GetPoolMemUsage (&cbWouldBe);
        size_t cbSavings = cbWouldBe - cbTotal;

        StringType strFormat = L"Pooled string count:\t\t\t%d\n"
                               L"Pool memory usage:  \t\t%d bytes\n"
                               L"Individual strings would have used:\t%d bytes\n"
                               L"Memory savings:\t\t\t%d bytes (%d%%)";

        StringType strMessage;
        strMessage.Format (strFormat,
                           GetPoolSize(),
                           cbTotal,
                           cbWouldBe,
                           cbSavings,
                           (cbSavings * 100) / cbWouldBe);

        if (fDumpPool)
        {
            strMessage += L"\n\nSee debugger Output window for string pool contents.";
        }

        MessageBox (Main_hwndMainFrame, strMessage, L"String Pool Stats", MB_OK);
    }

    static void DumpPool()
    {
        StringType strMessage;
        StringType strFormat = L"String pool (%d elements)\n"
                               L"Refs String\n"
                               L"---- ---------------------\n";

        strMessage.Format (strFormat, s_pool.size());
        OutputDebugString (strMessage);

        /*
         * copy from a hash map to a normal map so strings will be sorted
         * alphabetically instead of by hash value
         */
        typedef std::map<StringType, size_t> SortedPoolType;
        SortedPoolType sortedPool;
        std::copy (s_pool.begin(), s_pool.end(), std::inserter(sortedPool, sortedPool.end()));

        strFormat = L"%4d %s\n";

        SortedPoolType::const_iterator it;
        for (it = sortedPool.begin(); it != sortedPool.end(); ++it)
        {
            const StringType& s     = it->first;
            const size_t&     cRefs = it->second;

            strMessage.Format (strFormat, cRefs, s);
            OutputDebugString (strMessage);
        }
    }
#endif

    
private:
    /*+-------------------------------------------------------------------------*
     * CPooledStringT::InitFrom
     *
     *
     *-----------------------------------------------------------------(jeffro)-*/
    void InitFrom (const StringType& s)
    {
        m_s = s;
        AddRef();
    }

    void InitFrom (typename PoolType::iterator it)
    {
        m_s = it->first;
        it->second++;
    }


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::CopyFrom
     *
     *
     *-----------------------------------------------------------------(jeffro)-*/
    void CopyFrom (const StringType& s)
    {
        if (m_s != s)
        {
            Release();
            InitFrom (s);
        }
    }


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::AddRef
     *
     *
     *-----------------------------------------------------------------(jeffro)-*/
    void AddRef()
    {
        s_pool[m_s]++;
    }


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::Release
     *
     *
     *-----------------------------------------------------------------(jeffro)-*/
    void Release()
    {
        PoolType::iterator it = s_pool.find (m_s);

        /*
         * last ref on this pool string?  remove it from the pool
         */
        if (it != s_pool.end())
        {
            if (--it->second == 0)
            {
                VSASSERT (it != s_itEmptyString, "shouldn't erase the empty string (see GetEmptyStringIterator)");
                s_pool.erase (it);
            }
        }
        else
        {
            VSFAIL ("string should be in the pool");
        }

        m_s.Empty();
    }


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::Lookup
     *
     * Finds the given string in the pool (adding if necessary) and returns an
     * iterator to the string's entry in the pool.
     *-----------------------------------------------------------------(jeffro)-*/
    static typename PoolType::iterator Lookup (const StringType& s)
    {
        /*
         * optimze the common case of looking up an empty string
         */
        if (s.IsEmpty())
            return (GetEmptyStringIterator());

        /*
         * Insert the string.  If the string was already in the pool,
         * pr.first will be an iterator to its existing entry; if it's 
         * a new string, pr.first will be an iterator to the new entry
         */
        std::pair<PoolType::iterator, bool> pr = s_pool.insert (std::make_pair(s,0));
        PoolType::iterator itEntry   = pr.first;
        bool               fInserted = pr.second;

        /*
         * make sure that for a new item the refcount in zero and for
         * an existing item the refcount is non-zero
         */
        VSASSERT (( fInserted && (itEntry->second == 0)) ||
                  (!fInserted && (itEntry->second >  0)),
                  "Unexpected refcount for string pool entry");

        return (itEntry);
    }


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::GetEmptyStringIterator
     *
     * Returns an iterator to the entry in the pool for the empty string, inserting
     * an empty string if necessary.  Profiling indicated that we spent a lot of
     * time in Lookup searching for empty strings.  We can avoid this by caching
     * the iterator for the common empty string.
     *-----------------------------------------------------------------(jeffro)-*/
    static typename PoolType::iterator GetEmptyStringIterator()
    {
        /*
         * if we haven't yet inserted an empty string in the pool yet,
         * do so now with a refcount of 1, so it will never be erased
         */
        if (s_itEmptyString == s_pool.end())
            s_itEmptyString = s_pool.insert(std::make_pair(StringType(),1)).first;

        return (s_itEmptyString);
    }


private:
    StringType  m_s;

    static typename PoolType             s_pool;
    static typename PoolType::iterator   s_itEmptyString;


    /*+-------------------------------------------------------------------------*
     * CPooledStringT::CCachedInitString
     *
     * This class serves as a cached location for initializing CPooledStringTs.
     * CPooledStringT's PCXSTR constructor must create a temporary StringType to
     * use as a key for use in Lookup.  Profiling indicated that the PCXSTR
     * constructor was called very frequently, so the alloc/copy/free overhead
     * for the temporary StringType was significant.
     * 
     * By using this cache we can remove the most expensive portion of that
     * overhead, namely the alloc/free.
     *-----------------------------------------------------------------(jeffro)-*/
    class CCachedInitString
    {
    public:
        CCachedInitString (PCXSTR psz) 
        {
            s_cache = psz;
        }

        ~CCachedInitString()
        {
            /*
             * if our cached string has grown larger that we want to keep
             * around long-term, empty it out
             */
            if (s_cache.GetLength() > cchMaxCacheThreshold)
            {
                s_cache.Empty();
            }
        }

        operator const StringType&() const
        {
            return (s_cache);
        }

    private:
        static const size_t cchMaxCacheThreshold = 64;
        static StringType s_cache;
    };
};


typedef CPooledStringT<CStringW> CPooledStringW;
typedef CPooledStringT<CStringA> CPooledStringA;
typedef CPooledStringT<CString>  CPooledString;

#ifdef _MANAGED
#define POOLEDSTRINGDECL __declspec(selectany) __declspec(process)
#else
#define POOLEDSTRINGDECL __declspec(selectany)
#endif

#define DECLARE_POOLEDSTRING_STATICS(PooledStringType)  \
    POOLEDSTRINGDECL PooledStringType::PoolType             PooledStringType::s_pool; \
    POOLEDSTRINGDECL PooledStringType::PoolType::iterator   PooledStringType::s_itEmptyString = PooledStringType::s_pool.end(); \
    POOLEDSTRINGDECL PooledStringType::StringType           PooledStringType::CCachedInitString::s_cache;

DECLARE_POOLEDSTRING_STATICS (CPooledStringW);
DECLARE_POOLEDSTRING_STATICS (CPooledStringA);

_STDEXT_BEGIN

/*
 * define overloads of stdext::hash_value(CPooledString) so CPooledStrings can be 
 * key values in hashed collections (stdext::hash_map, stdext::hash_set, etc.)
 */
template<class StringType>
inline size_t hash_value(const CPooledStringT<StringType>& s)
{   
    return (hash_value (s.GetStringObject()));
}

_STDEXT_END
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\PMUResourceManager.h ===
#pragma once
//--------------------------------------------------------------------------
// Microsoft Visual Studio Sampling Profiler Driver
//
// Copyright (c) 2005 Microsoft Corporation Inc.
// All rights reserved
//
// PMUResourceManager.h
//
// PMU resource management.
//
//---------------------------------------------------------------------------

#ifdef __cplusplus
extern "C" {
#endif

#include <ntddk.h>

/*---------------------------------------------------------------------------

Usage:
	
	Any driver wishing to politely share the PMU should use the Performance 
	Monitoring Unit Resource Manager (PmuRm) API in this module.

    The driver must initialize the PmuRm using PmuRmInit.  It must
    deinitialize using PmuRmUninit.  Typically this would be done in 
    DriverEntry and DriverUnload.
    
    Each entity in the driver that wishes to participate in the PmuRm 
    framework must call PmuRmParticipate.  Participation is resigned using
    PmuRmResign.  This could be done in a driver's AddDevice/RemoveDevice
    routines, for instance if multiple devices will participate independently
    in the management scheme.
    
    When a participant wishes to acquire PMU resources, it calls
    PmuRmAcquire, passing the affinity mask for the processors on which it
    will acquire resources, along with an optional timeout.  This call
    will block until the timeout expires or the resources are acquired.
    
    The participant must eventually release the resource using PmuRmRelease.
    
Example:

    // Assuming driver exposes a single device
    
    DEVICE_OBJECT MyDevice;
    UNICODE_STRING MyFriendlyName;
    
    PPMURM_PARTICIPANT Participant;
    
    NTSTATUS
    DriverEntry(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegPath)
    {
        NTSTATUS Status;
        
        // Initialize PmuRm.
        Status = PmuRmInit();
        
        if ( !NT_SUCCESS( Status ) )
            // bail...
        
        // Create the device
        IoCreateDevice(..., &DeviceObject);
        
        // Create a PmuRmParticipant
        RtlInitUnicodeString(&MyFriendlyName, L"My Excellent Driver");
        
        Status = PmuRmParticipate(
                    DriverObject,
                    DeviceObject,
                    &MyFriendlyName,
                    &Participant);
                    
        if ( !NT_SUCCESS( Status ) )
            // bail...
    
        ...
    }    

    NTSTATUS
    DriverUnload()
    {
        PmuRmResign(Participant);
        PmuRmUninit();
        [...]
    }
    
    NTSTATUS
    DeviceIoctl(DEVICE_OBJECT *	Device, IRP * Irp)
    {
        [...]
        
        case IOCTL_GET_PMU:

            // Wait 10 seconds
            LARGE_INTEGER   Timeout;
            Timeout.QuadPart = -(10 * 1000 * 1000 * 10);

            // Get PMUs for CPUs 0 and 1
            Status = PmuRmAcquire(Participant, 0x000000003, &Timeout, NULL);
            
            break;
            
        case IOCTL_RETURN_PMU:
        
            // Return CPUs 0 and 1
            PmuRmRelease(0x00000003);
            
            break;
            
        [...]
    }
    
    
---------------------------------------------------------------------------*/


typedef struct _PMURM_PARTICIPANT PMURM_PARTICIPANT, *PPMURM_PARTICIPANT;


NTSTATUS
NTAPI
PmuRmInit(
	VOID
	);
/*++

Routine Description:

    This function initializes the PMU resource manager.

Arguments:

Return Value:

    NTSTATUS.

Notes:

    Must be called at PASSIVE_LEVEL.
    
--*/


	
NTSTATUS
NTAPI
PmuRmUninit(
	VOID
	);
/*++

Routine Description:

    This function is used to release the PMU resource manager.

Arguments:

Return Value:

    NTSTATUS.

Notes:

    Must be called at PASSIVE_LEVEL.

--*/


	
NTSTATUS
NTAPI
PmuRmParticipate(
    IN  PDRIVER_OBJECT       DriverObject,
    IN  PDEVICE_OBJECT       DeviceObject OPTIONAL,
    IN  PUNICODE_STRING      FriendlyName,
    OUT PPMURM_PARTICIPANT * Participant
    );
/*++

Routine Description:

    This function registers a participant in the resource management scheme.

Arguments:

    DriverObject - Specifies the associated driver for the participant.
    
    DeviceObject - Specifies the associated device for the participant.  This
        parameter can be NULL if there is no associated device.
                   
    FriendlyName - Specifies a friendly name for the participant.  This string
        will be used in warning messages from other participants.
        
    Participant - PPMURM_PARTICIPANT pointer that will receive an initialized
        structure to be used in other PMURM calls.

Return Value:

    NTSTATUS.

Notes:

    Must be called at PASSIVE_LEVEL.

--*/



NTSTATUS
NTAPI
PmuRmResign(
    IN  PPMURM_PARTICIPANT  Participant
    );
/*++

Routine Description:

    This function removes a participant in the resource management scheme.

Arguments:

    Participant - The original PMURM_PARTICIPANT pointer returned from 
        PmuRmParticipate.

Return Value:

    NTSTATUS.

Notes:

    Must be called at PASSIVE_LEVEL.

--*/



NTSTATUS
NTAPI
PmuRmAcquire(
    IN  PPMURM_PARTICIPANT  Participant,
	IN	KAFFINITY           CpuMask,
    IN  PLARGE_INTEGER      Timeout      OPTIONAL,
    OUT PUNICODE_STRING     NoVoteText   OPTIONAL
	);
/*++

Routine Description:

    This function attempts to acquire PMU resources for the given CPUs.

Arguments:

    Participant - The PMURM_PARTICIPANT pointer returned from PmuRmParticipate.

    CpuMask - A bit mask indicating which CPUs to acquire PMU resources for.
    
    Timeout - An optional timeout value.  The semantics of this value are the 
        same as the timeout parameter to KeWaitForSingleObject.  If omitted, 
        this function blocks until the PMU resources become available.  If set 
        to zero, the function returns success or failure immediately.  A 
        negative value implies a relative timeout, based from the current time,
        and a positive value describes an absolute time.  
                   
    NoVoteText - If the function fails because the resource is currently held,
        this string will hold the friendly name of the participant that holds 
        the resource.

Return Value:

    NTSTATUS.

Notes:

    Must be called at PASSIVE_LEVEL.

--*/



NTSTATUS
NTAPI
PmuRmRelease(
    IN  PPMURM_PARTICIPANT  Participant,
	IN  KAFFINITY	        CpuMask
	);
/*++

Routine Description:

    This function returns PMU resources for the given CPUs.

Arguments:

    Participant - The PMURM_PARTICIPANT pointer returned from PmuRmParticipate.

    CpuMask - A bit mask indicating which CPUs to return PMU resources for.

Return Value:

    NTSTATUS.

Notes:

    Must be called at PASSIVE_LEVEL.

--*/


#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\portpriv.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for portpriv.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __portpriv_h__
#define __portpriv_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IDebugPortSupplierEx2_FWD_DEFINED__
#define __IDebugPortSupplierEx2_FWD_DEFINED__
typedef interface IDebugPortSupplierEx2 IDebugPortSupplierEx2;
#endif 	/* __IDebugPortSupplierEx2_FWD_DEFINED__ */


#ifndef __IDebugPortSupplierLocale2_FWD_DEFINED__
#define __IDebugPortSupplierLocale2_FWD_DEFINED__
typedef interface IDebugPortSupplierLocale2 IDebugPortSupplierLocale2;
#endif 	/* __IDebugPortSupplierLocale2_FWD_DEFINED__ */


#ifndef __IDebugNativePort2_FWD_DEFINED__
#define __IDebugNativePort2_FWD_DEFINED__
typedef interface IDebugNativePort2 IDebugNativePort2;
#endif 	/* __IDebugNativePort2_FWD_DEFINED__ */


#ifndef __IDebugPortEx2_FWD_DEFINED__
#define __IDebugPortEx2_FWD_DEFINED__
typedef interface IDebugPortEx2 IDebugPortEx2;
#endif 	/* __IDebugPortEx2_FWD_DEFINED__ */


#ifndef __IDebugPortEventsEx2_FWD_DEFINED__
#define __IDebugPortEventsEx2_FWD_DEFINED__
typedef interface IDebugPortEventsEx2 IDebugPortEventsEx2;
#endif 	/* __IDebugPortEventsEx2_FWD_DEFINED__ */


#ifndef __IDebugProcessEx2_FWD_DEFINED__
#define __IDebugProcessEx2_FWD_DEFINED__
typedef interface IDebugProcessEx2 IDebugProcessEx2;
#endif 	/* __IDebugProcessEx2_FWD_DEFINED__ */


#ifndef __IDebugProgramEx2_FWD_DEFINED__
#define __IDebugProgramEx2_FWD_DEFINED__
typedef interface IDebugProgramEx2 IDebugProgramEx2;
#endif 	/* __IDebugProgramEx2_FWD_DEFINED__ */


#ifndef __IDebugAD1Program2_V7_FWD_DEFINED__
#define __IDebugAD1Program2_V7_FWD_DEFINED__
typedef interface IDebugAD1Program2_V7 IDebugAD1Program2_V7;
#endif 	/* __IDebugAD1Program2_V7_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "msdbg.h"
#include "activdbg.h"

#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __IDebugPortSupplierEx2_INTERFACE_DEFINED__
#define __IDebugPortSupplierEx2_INTERFACE_DEFINED__

/* interface IDebugPortSupplierEx2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugPortSupplierEx2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c1f9ba1d-f70f-49f8-839e-5e0caa230306")
    IDebugPortSupplierEx2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetServer( 
            /* [in] */ __RPC__in_opt IDebugCoreServer2 *pServer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugPortSupplierEx2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugPortSupplierEx2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugPortSupplierEx2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugPortSupplierEx2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetServer )( 
            IDebugPortSupplierEx2 * This,
            /* [in] */ __RPC__in_opt IDebugCoreServer2 *pServer);
        
        END_INTERFACE
    } IDebugPortSupplierEx2Vtbl;

    interface IDebugPortSupplierEx2
    {
        CONST_VTBL struct IDebugPortSupplierEx2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugPortSupplierEx2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugPortSupplierEx2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugPortSupplierEx2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugPortSupplierEx2_SetServer(This,pServer)	\
    ( (This)->lpVtbl -> SetServer(This,pServer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugPortSupplierEx2_INTERFACE_DEFINED__ */


#ifndef __IDebugPortSupplierLocale2_INTERFACE_DEFINED__
#define __IDebugPortSupplierLocale2_INTERFACE_DEFINED__

/* interface IDebugPortSupplierLocale2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugPortSupplierLocale2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1bbab55e-6d13-4a5e-8c81-34ab2a3a6269")
    IDebugPortSupplierLocale2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetLocale( 
            /* [in] */ WORD wLangID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugPortSupplierLocale2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugPortSupplierLocale2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugPortSupplierLocale2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugPortSupplierLocale2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetLocale )( 
            IDebugPortSupplierLocale2 * This,
            /* [in] */ WORD wLangID);
        
        END_INTERFACE
    } IDebugPortSupplierLocale2Vtbl;

    interface IDebugPortSupplierLocale2
    {
        CONST_VTBL struct IDebugPortSupplierLocale2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugPortSupplierLocale2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugPortSupplierLocale2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugPortSupplierLocale2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugPortSupplierLocale2_SetLocale(This,wLangID)	\
    ( (This)->lpVtbl -> SetLocale(This,wLangID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugPortSupplierLocale2_INTERFACE_DEFINED__ */


#ifndef __IDebugNativePort2_INTERFACE_DEFINED__
#define __IDebugNativePort2_INTERFACE_DEFINED__

/* interface IDebugNativePort2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugNativePort2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("521b4726-04e9-47e7-b3a5-cd93a7f74f5b")
    IDebugNativePort2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddProcess( 
            /* [in] */ AD_PROCESS_ID processId,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszProcessName,
            /* [in] */ BOOL fCanDetach,
            /* [out] */ __RPC__deref_out_opt IDebugProcess2 **ppPortProcess) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugNativePort2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugNativePort2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugNativePort2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugNativePort2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddProcess )( 
            IDebugNativePort2 * This,
            /* [in] */ AD_PROCESS_ID processId,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszProcessName,
            /* [in] */ BOOL fCanDetach,
            /* [out] */ __RPC__deref_out_opt IDebugProcess2 **ppPortProcess);
        
        END_INTERFACE
    } IDebugNativePort2Vtbl;

    interface IDebugNativePort2
    {
        CONST_VTBL struct IDebugNativePort2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugNativePort2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugNativePort2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugNativePort2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugNativePort2_AddProcess(This,processId,pszProcessName,fCanDetach,ppPortProcess)	\
    ( (This)->lpVtbl -> AddProcess(This,processId,pszProcessName,fCanDetach,ppPortProcess) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugNativePort2_INTERFACE_DEFINED__ */


#ifndef __IDebugPortEx2_INTERFACE_DEFINED__
#define __IDebugPortEx2_INTERFACE_DEFINED__

/* interface IDebugPortEx2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugPortEx2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e2314ee1-5c8c-4a9d-ad32-0c9a3574f685")
    IDebugPortEx2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE LaunchSuspended( 
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszExe,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszArgs,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszDir,
            /* [full][in] */ __RPC__in_opt BSTR bstrEnv,
            /* [in] */ DWORD hStdInput,
            /* [in] */ DWORD hStdOutput,
            /* [in] */ DWORD hStdError,
            /* [out] */ __RPC__deref_out_opt IDebugProcess2 **ppPortProcess) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResumeProcess( 
            /* [in] */ __RPC__in_opt IDebugProcess2 *pPortProcess) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CanTerminateProcess( 
            /* [in] */ __RPC__in_opt IDebugProcess2 *pPortProcess) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TerminateProcess( 
            /* [in] */ __RPC__in_opt IDebugProcess2 *pPortProcess) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPortProcessId( 
            /* [out] */ __RPC__out DWORD *pdwProcessId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProgram( 
            /* [in] */ __RPC__in_opt IDebugProgramNode2 *pProgramNode,
            /* [out] */ __RPC__deref_out_opt IDebugProgram2 **ppProgram) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugPortEx2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugPortEx2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugPortEx2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugPortEx2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *LaunchSuspended )( 
            IDebugPortEx2 * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszExe,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszArgs,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszDir,
            /* [full][in] */ __RPC__in_opt BSTR bstrEnv,
            /* [in] */ DWORD hStdInput,
            /* [in] */ DWORD hStdOutput,
            /* [in] */ DWORD hStdError,
            /* [out] */ __RPC__deref_out_opt IDebugProcess2 **ppPortProcess);
        
        HRESULT ( STDMETHODCALLTYPE *ResumeProcess )( 
            IDebugPortEx2 * This,
            /* [in] */ __RPC__in_opt IDebugProcess2 *pPortProcess);
        
        HRESULT ( STDMETHODCALLTYPE *CanTerminateProcess )( 
            IDebugPortEx2 * This,
            /* [in] */ __RPC__in_opt IDebugProcess2 *pPortProcess);
        
        HRESULT ( STDMETHODCALLTYPE *TerminateProcess )( 
            IDebugPortEx2 * This,
            /* [in] */ __RPC__in_opt IDebugProcess2 *pPortProcess);
        
        HRESULT ( STDMETHODCALLTYPE *GetPortProcessId )( 
            IDebugPortEx2 * This,
            /* [out] */ __RPC__out DWORD *pdwProcessId);
        
        HRESULT ( STDMETHODCALLTYPE *GetProgram )( 
            IDebugPortEx2 * This,
            /* [in] */ __RPC__in_opt IDebugProgramNode2 *pProgramNode,
            /* [out] */ __RPC__deref_out_opt IDebugProgram2 **ppProgram);
        
        END_INTERFACE
    } IDebugPortEx2Vtbl;

    interface IDebugPortEx2
    {
        CONST_VTBL struct IDebugPortEx2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugPortEx2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugPortEx2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugPortEx2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugPortEx2_LaunchSuspended(This,pszExe,pszArgs,pszDir,bstrEnv,hStdInput,hStdOutput,hStdError,ppPortProcess)	\
    ( (This)->lpVtbl -> LaunchSuspended(This,pszExe,pszArgs,pszDir,bstrEnv,hStdInput,hStdOutput,hStdError,ppPortProcess) ) 

#define IDebugPortEx2_ResumeProcess(This,pPortProcess)	\
    ( (This)->lpVtbl -> ResumeProcess(This,pPortProcess) ) 

#define IDebugPortEx2_CanTerminateProcess(This,pPortProcess)	\
    ( (This)->lpVtbl -> CanTerminateProcess(This,pPortProcess) ) 

#define IDebugPortEx2_TerminateProcess(This,pPortProcess)	\
    ( (This)->lpVtbl -> TerminateProcess(This,pPortProcess) ) 

#define IDebugPortEx2_GetPortProcessId(This,pdwProcessId)	\
    ( (This)->lpVtbl -> GetPortProcessId(This,pdwProcessId) ) 

#define IDebugPortEx2_GetProgram(This,pProgramNode,ppProgram)	\
    ( (This)->lpVtbl -> GetProgram(This,pProgramNode,ppProgram) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugPortEx2_INTERFACE_DEFINED__ */


#ifndef __IDebugPortEventsEx2_INTERFACE_DEFINED__
#define __IDebugPortEventsEx2_INTERFACE_DEFINED__

/* interface IDebugPortEventsEx2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugPortEventsEx2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("608a5912-e66b-4278-b6ed-847ac9318405")
    IDebugPortEventsEx2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSession( 
            /* [out] */ __RPC__deref_out_opt IDebugSession2 **ppSession) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugPortEventsEx2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugPortEventsEx2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugPortEventsEx2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugPortEventsEx2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetSession )( 
            IDebugPortEventsEx2 * This,
            /* [out] */ __RPC__deref_out_opt IDebugSession2 **ppSession);
        
        END_INTERFACE
    } IDebugPortEventsEx2Vtbl;

    interface IDebugPortEventsEx2
    {
        CONST_VTBL struct IDebugPortEventsEx2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugPortEventsEx2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugPortEventsEx2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugPortEventsEx2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugPortEventsEx2_GetSession(This,ppSession)	\
    ( (This)->lpVtbl -> GetSession(This,ppSession) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugPortEventsEx2_INTERFACE_DEFINED__ */


#ifndef __IDebugProcessEx2_INTERFACE_DEFINED__
#define __IDebugProcessEx2_INTERFACE_DEFINED__

/* interface IDebugProcessEx2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugProcessEx2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("82d71df5-6597-48c4-b5d5-b8b697fa36b5")
    IDebugProcessEx2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Attach( 
            /* [in] */ __RPC__in_opt IDebugSession2 *pSession) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Detach( 
            /* [in] */ __RPC__in_opt IDebugSession2 *pSession) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddImplicitProgramNodes( 
            /* [in] */ __RPC__in REFGUID guidLaunchingEngine,
            /* [size_is][in][full] */ __RPC__in_ecount_full_opt(celtSpecificEngines) GUID *rgguidSpecificEngines,
            /* [in] */ DWORD celtSpecificEngines) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugProcessEx2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugProcessEx2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugProcessEx2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugProcessEx2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Attach )( 
            IDebugProcessEx2 * This,
            /* [in] */ __RPC__in_opt IDebugSession2 *pSession);
        
        HRESULT ( STDMETHODCALLTYPE *Detach )( 
            IDebugProcessEx2 * This,
            /* [in] */ __RPC__in_opt IDebugSession2 *pSession);
        
        HRESULT ( STDMETHODCALLTYPE *AddImplicitProgramNodes )( 
            IDebugProcessEx2 * This,
            /* [in] */ __RPC__in REFGUID guidLaunchingEngine,
            /* [size_is][in][full] */ __RPC__in_ecount_full_opt(celtSpecificEngines) GUID *rgguidSpecificEngines,
            /* [in] */ DWORD celtSpecificEngines);
        
        END_INTERFACE
    } IDebugProcessEx2Vtbl;

    interface IDebugProcessEx2
    {
        CONST_VTBL struct IDebugProcessEx2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugProcessEx2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugProcessEx2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugProcessEx2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugProcessEx2_Attach(This,pSession)	\
    ( (This)->lpVtbl -> Attach(This,pSession) ) 

#define IDebugProcessEx2_Detach(This,pSession)	\
    ( (This)->lpVtbl -> Detach(This,pSession) ) 

#define IDebugProcessEx2_AddImplicitProgramNodes(This,guidLaunchingEngine,rgguidSpecificEngines,celtSpecificEngines)	\
    ( (This)->lpVtbl -> AddImplicitProgramNodes(This,guidLaunchingEngine,rgguidSpecificEngines,celtSpecificEngines) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugProcessEx2_INTERFACE_DEFINED__ */


#ifndef __IDebugProgramEx2_INTERFACE_DEFINED__
#define __IDebugProgramEx2_INTERFACE_DEFINED__

/* interface IDebugProgramEx2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugProgramEx2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2959618a-a692-48ff-8cef-7a28a4f50954")
    IDebugProgramEx2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Attach( 
            /* [in] */ __RPC__in_opt IDebugEventCallback2 *pCallback,
            /* [in] */ DWORD dwReason,
            /* [in] */ __RPC__in_opt IDebugSession2 *pSession) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProgramNode( 
            /* [out] */ __RPC__deref_out_opt IDebugProgramNode2 **ppProgramNode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugProgramEx2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugProgramEx2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugProgramEx2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugProgramEx2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Attach )( 
            IDebugProgramEx2 * This,
            /* [in] */ __RPC__in_opt IDebugEventCallback2 *pCallback,
            /* [in] */ DWORD dwReason,
            /* [in] */ __RPC__in_opt IDebugSession2 *pSession);
        
        HRESULT ( STDMETHODCALLTYPE *GetProgramNode )( 
            IDebugProgramEx2 * This,
            /* [out] */ __RPC__deref_out_opt IDebugProgramNode2 **ppProgramNode);
        
        END_INTERFACE
    } IDebugProgramEx2Vtbl;

    interface IDebugProgramEx2
    {
        CONST_VTBL struct IDebugProgramEx2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugProgramEx2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugProgramEx2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugProgramEx2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugProgramEx2_Attach(This,pCallback,dwReason,pSession)	\
    ( (This)->lpVtbl -> Attach(This,pCallback,dwReason,pSession) ) 

#define IDebugProgramEx2_GetProgramNode(This,ppProgramNode)	\
    ( (This)->lpVtbl -> GetProgramNode(This,ppProgramNode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugProgramEx2_INTERFACE_DEFINED__ */


#ifndef __IDebugAD1Program2_V7_INTERFACE_DEFINED__
#define __IDebugAD1Program2_V7_INTERFACE_DEFINED__

/* interface IDebugAD1Program2_V7 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugAD1Program2_V7;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b7bdab6c-9077-43d0-87c4-96d1fd851446")
    IDebugAD1Program2_V7 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetApplication( 
            /* [out] */ __RPC__deref_out_opt IRemoteDebugApplication **ppApp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugAD1Program2_V7Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugAD1Program2_V7 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugAD1Program2_V7 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugAD1Program2_V7 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetApplication )( 
            IDebugAD1Program2_V7 * This,
            /* [out] */ __RPC__deref_out_opt IRemoteDebugApplication **ppApp);
        
        END_INTERFACE
    } IDebugAD1Program2_V7Vtbl;

    interface IDebugAD1Program2_V7
    {
        CONST_VTBL struct IDebugAD1Program2_V7Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugAD1Program2_V7_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugAD1Program2_V7_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugAD1Program2_V7_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugAD1Program2_V7_GetApplication(This,ppApp)	\
    ( (This)->lpVtbl -> GetApplication(This,ppApp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugAD1Program2_V7_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\scpmnuid.h ===
//////////////////////////////////////////////////////////////////////////////
//
//Microsoft Confidential
//Copyright 1996-1997 Microsoft Corporation.  All Rights Reserved.
//
//File: ScpMnuID.H
//
//Contents:
//
//////////////////////////////////////////////////////////////////////////////
#ifndef _SCPMNUID_H_
#define _SCPMNUID_H_

#include "scpedtid.h"  // This lives in %DEVBIN%

//////////////////////////////////////////////////////////////////////////////
//
// Guids defined and used by script editor
//
//////////////////////////////////////////////////////////////////////////////
#define NOICON	guidOfficeIcon:msotcidNoIcon

#ifndef __ScpEdit_h

#ifdef DEFINE_GUID
  DEFINE_GUID(CLSID_ScrptEdtPkg, 
  0xfa14be31, 0xab8c, 0x11d0, 0xb1, 0x2e, 0x0, 0xa0, 0xc9, 0xf, 0x27, 0x32);
#else
  #define CLSID_ScrptEdtPkg {0xfa14be31, 0xab8c, 0x11d0, { 0xb1, 0x2e, 0x0, 0xa0, 0xc9, 0xf, 0x27, 0x32} }
#endif

#endif



//////////////////////////////////////////////////////////////////////////////
//
// Command Identifiers, created by Script Editor
//
//////////////////////////////////////////////////////////////////////////////
#define cmdSCPClassView		0x0100

#define cmdSCPSortAlphabetically   0x0500
#define cmdSCPSortByDeclaration    0x0600


//////////////////////////////////////////////////////////////////////////////
//
// Toolbar Identifiers, created by Script Editor
//
//////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
//
// Menu Identifiers, created by Script Editor
//
//////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
//
// Group Identifiers, created by Script Editor
//
//////////////////////////////////////////////////////////////////////////////

// Run Menu Groups
#define IDG_SCP_TEXTVIEW	0x0200

#define IDG_SCP_TREEOUTLINE    	0x0400
#define IDG_SCP_SORT            0x0500
#define IDG_SCP_SORTCASCADE     0x0600
#define IDG_SCP_GOTODEFN        0x0700
#define IDG_SCP_BREAKPOINTS     0x0800


//////////////////////////////////////////////////////////////////////////////
//
// Cascading Menu Identifiers, created by Script Editor
//
//////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
//
// Context Menu Identifiers, created by Script Editor
//
//////////////////////////////////////////////////////////////////////////////

#define IDM_SCP_CTXT_TEXTVIEW	0x1200
#define IDM_SCP_CTXT_SCRIPTTREE	0x1300
#define IDM_SCP_CTXT_CSCD_SORT  0x1400

//////////////////////////////////////////////////////////////////////////////
//
// Menu Controller dentifiers, created by Script Editor
//
//////////////////////////////////////////////////////////////////////////////


#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\scpedtid.h ===
//////////////////////////////////////////////////////////////////////////////
//
//Microsoft Confidential
//Copyright 1996-1997 Microsoft Corporation.  All Rights Reserved.
//
//File: scpedtid.h
//
//Contents:
//
//////////////////////////////////////////////////////////////////////////////


#ifndef _SCPEDTID_H_
#define _SCPEDTID_H_

#ifndef NOGUIDS

#ifdef DEFINE_GUID

  // Guids for the script editor package.
  DEFINE_GUID(guidSCPGrpId, 
  0xd842f011, 0xdd01, 0x11d0, 0xa7, 0x68, 0x0, 0xa0, 0xc9, 0x11, 0x10, 0xc3);

  DEFINE_GUID(guidSCPCmdId, 
  0xd842f010, 0xdd01, 0x11d0, 0xa7, 0x68, 0x0, 0xa0, 0xc9, 0x11, 0x10, 0xc3);

#else

  // Guids for the script editor
  #define guidSCPCmdId { 0xd842f010, 0xdd01, 0x11d0, { 0xa7, 0x68, 0x0, 0xa0, 0xc9, 0x11, 0x10, 0xc3 } }
  #define guidSCPGrpId { 0xd842f011, 0xdd01, 0x11d0, { 0xa7, 0x68, 0x0, 0xa0, 0xc9, 0x11, 0x10, 0xc3 } }
#endif

#endif  // NOGUIDS



// Script Editor Group
#define IDG_SCP_MainMenu        0x0900

// Script Editor Commands.
#define cmdSCPSynchTree            0x0300
#define cmdSCPGotoDefinition       0x0400
#define cmdSCPSortCascade          0x0700
#define cmdSCPToggleUnimplEvents   0x0800


#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\sh.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for sh.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __sh_h__
#define __sh_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IDebugSymbolProvider_FWD_DEFINED__
#define __IDebugSymbolProvider_FWD_DEFINED__
typedef interface IDebugSymbolProvider IDebugSymbolProvider;
#endif 	/* __IDebugSymbolProvider_FWD_DEFINED__ */


#ifndef __IDebugSymbolProviderDirect_FWD_DEFINED__
#define __IDebugSymbolProviderDirect_FWD_DEFINED__
typedef interface IDebugSymbolProviderDirect IDebugSymbolProviderDirect;
#endif 	/* __IDebugSymbolProviderDirect_FWD_DEFINED__ */


#ifndef __IDebugComPlusSymbolProvider_FWD_DEFINED__
#define __IDebugComPlusSymbolProvider_FWD_DEFINED__
typedef interface IDebugComPlusSymbolProvider IDebugComPlusSymbolProvider;
#endif 	/* __IDebugComPlusSymbolProvider_FWD_DEFINED__ */


#ifndef __IDebugComPlusSymbolProvider2_FWD_DEFINED__
#define __IDebugComPlusSymbolProvider2_FWD_DEFINED__
typedef interface IDebugComPlusSymbolProvider2 IDebugComPlusSymbolProvider2;
#endif 	/* __IDebugComPlusSymbolProvider2_FWD_DEFINED__ */


#ifndef __IDebugSymbolProviderGroup_FWD_DEFINED__
#define __IDebugSymbolProviderGroup_FWD_DEFINED__
typedef interface IDebugSymbolProviderGroup IDebugSymbolProviderGroup;
#endif 	/* __IDebugSymbolProviderGroup_FWD_DEFINED__ */


#ifndef __IDebugGenericFieldDefinition_FWD_DEFINED__
#define __IDebugGenericFieldDefinition_FWD_DEFINED__
typedef interface IDebugGenericFieldDefinition IDebugGenericFieldDefinition;
#endif 	/* __IDebugGenericFieldDefinition_FWD_DEFINED__ */


#ifndef __IDebugGenericFieldInstance_FWD_DEFINED__
#define __IDebugGenericFieldInstance_FWD_DEFINED__
typedef interface IDebugGenericFieldInstance IDebugGenericFieldInstance;
#endif 	/* __IDebugGenericFieldInstance_FWD_DEFINED__ */


#ifndef __IDebugField_FWD_DEFINED__
#define __IDebugField_FWD_DEFINED__
typedef interface IDebugField IDebugField;
#endif 	/* __IDebugField_FWD_DEFINED__ */


#ifndef __IDebugGenericParamField_FWD_DEFINED__
#define __IDebugGenericParamField_FWD_DEFINED__
typedef interface IDebugGenericParamField IDebugGenericParamField;
#endif 	/* __IDebugGenericParamField_FWD_DEFINED__ */


#ifndef __IDebugComPlusSymbolSearchInfo_FWD_DEFINED__
#define __IDebugComPlusSymbolSearchInfo_FWD_DEFINED__
typedef interface IDebugComPlusSymbolSearchInfo IDebugComPlusSymbolSearchInfo;
#endif 	/* __IDebugComPlusSymbolSearchInfo_FWD_DEFINED__ */


#ifndef __IDebugTypeFieldBuilder_FWD_DEFINED__
#define __IDebugTypeFieldBuilder_FWD_DEFINED__
typedef interface IDebugTypeFieldBuilder IDebugTypeFieldBuilder;
#endif 	/* __IDebugTypeFieldBuilder_FWD_DEFINED__ */


#ifndef __IDebugTypeFieldBuilder2_FWD_DEFINED__
#define __IDebugTypeFieldBuilder2_FWD_DEFINED__
typedef interface IDebugTypeFieldBuilder2 IDebugTypeFieldBuilder2;
#endif 	/* __IDebugTypeFieldBuilder2_FWD_DEFINED__ */


#ifndef __IDebugNativeSymbolProvider_FWD_DEFINED__
#define __IDebugNativeSymbolProvider_FWD_DEFINED__
typedef interface IDebugNativeSymbolProvider IDebugNativeSymbolProvider;
#endif 	/* __IDebugNativeSymbolProvider_FWD_DEFINED__ */


#ifndef __IDebugExtendedField_FWD_DEFINED__
#define __IDebugExtendedField_FWD_DEFINED__
typedef interface IDebugExtendedField IDebugExtendedField;
#endif 	/* __IDebugExtendedField_FWD_DEFINED__ */


#ifndef __IDebugPrimitiveTypeField_FWD_DEFINED__
#define __IDebugPrimitiveTypeField_FWD_DEFINED__
typedef interface IDebugPrimitiveTypeField IDebugPrimitiveTypeField;
#endif 	/* __IDebugPrimitiveTypeField_FWD_DEFINED__ */


#ifndef __IDebugContainerField_FWD_DEFINED__
#define __IDebugContainerField_FWD_DEFINED__
typedef interface IDebugContainerField IDebugContainerField;
#endif 	/* __IDebugContainerField_FWD_DEFINED__ */


#ifndef __IDebugMethodField_FWD_DEFINED__
#define __IDebugMethodField_FWD_DEFINED__
typedef interface IDebugMethodField IDebugMethodField;
#endif 	/* __IDebugMethodField_FWD_DEFINED__ */


#ifndef __IDebugThisAdjust_FWD_DEFINED__
#define __IDebugThisAdjust_FWD_DEFINED__
typedef interface IDebugThisAdjust IDebugThisAdjust;
#endif 	/* __IDebugThisAdjust_FWD_DEFINED__ */


#ifndef __IDebugClassField_FWD_DEFINED__
#define __IDebugClassField_FWD_DEFINED__
typedef interface IDebugClassField IDebugClassField;
#endif 	/* __IDebugClassField_FWD_DEFINED__ */


#ifndef __IDebugModOpt_FWD_DEFINED__
#define __IDebugModOpt_FWD_DEFINED__
typedef interface IDebugModOpt IDebugModOpt;
#endif 	/* __IDebugModOpt_FWD_DEFINED__ */


#ifndef __IDebugPropertyField_FWD_DEFINED__
#define __IDebugPropertyField_FWD_DEFINED__
typedef interface IDebugPropertyField IDebugPropertyField;
#endif 	/* __IDebugPropertyField_FWD_DEFINED__ */


#ifndef __IDebugArrayField_FWD_DEFINED__
#define __IDebugArrayField_FWD_DEFINED__
typedef interface IDebugArrayField IDebugArrayField;
#endif 	/* __IDebugArrayField_FWD_DEFINED__ */


#ifndef __IDebugPointerField_FWD_DEFINED__
#define __IDebugPointerField_FWD_DEFINED__
typedef interface IDebugPointerField IDebugPointerField;
#endif 	/* __IDebugPointerField_FWD_DEFINED__ */


#ifndef __IDebugEnumField_FWD_DEFINED__
#define __IDebugEnumField_FWD_DEFINED__
typedef interface IDebugEnumField IDebugEnumField;
#endif 	/* __IDebugEnumField_FWD_DEFINED__ */


#ifndef __IDebugBitField_FWD_DEFINED__
#define __IDebugBitField_FWD_DEFINED__
typedef interface IDebugBitField IDebugBitField;
#endif 	/* __IDebugBitField_FWD_DEFINED__ */


#ifndef __IDebugDynamicField_FWD_DEFINED__
#define __IDebugDynamicField_FWD_DEFINED__
typedef interface IDebugDynamicField IDebugDynamicField;
#endif 	/* __IDebugDynamicField_FWD_DEFINED__ */


#ifndef __IDebugDynamicFieldCOMPlus_FWD_DEFINED__
#define __IDebugDynamicFieldCOMPlus_FWD_DEFINED__
typedef interface IDebugDynamicFieldCOMPlus IDebugDynamicFieldCOMPlus;
#endif 	/* __IDebugDynamicFieldCOMPlus_FWD_DEFINED__ */


#ifndef __IDebugEngineSymbolProviderServices_FWD_DEFINED__
#define __IDebugEngineSymbolProviderServices_FWD_DEFINED__
typedef interface IDebugEngineSymbolProviderServices IDebugEngineSymbolProviderServices;
#endif 	/* __IDebugEngineSymbolProviderServices_FWD_DEFINED__ */


#ifndef __IDebugEngineSymbolProviderServices2_FWD_DEFINED__
#define __IDebugEngineSymbolProviderServices2_FWD_DEFINED__
typedef interface IDebugEngineSymbolProviderServices2 IDebugEngineSymbolProviderServices2;
#endif 	/* __IDebugEngineSymbolProviderServices2_FWD_DEFINED__ */


#ifndef __IDebugAddress_FWD_DEFINED__
#define __IDebugAddress_FWD_DEFINED__
typedef interface IDebugAddress IDebugAddress;
#endif 	/* __IDebugAddress_FWD_DEFINED__ */


#ifndef __IDebugAddress2_FWD_DEFINED__
#define __IDebugAddress2_FWD_DEFINED__
typedef interface IDebugAddress2 IDebugAddress2;
#endif 	/* __IDebugAddress2_FWD_DEFINED__ */


#ifndef __IEnumDebugFields_FWD_DEFINED__
#define __IEnumDebugFields_FWD_DEFINED__
typedef interface IEnumDebugFields IEnumDebugFields;
#endif 	/* __IEnumDebugFields_FWD_DEFINED__ */


#ifndef __IEnumDebugAddresses_FWD_DEFINED__
#define __IEnumDebugAddresses_FWD_DEFINED__
typedef interface IEnumDebugAddresses IEnumDebugAddresses;
#endif 	/* __IEnumDebugAddresses_FWD_DEFINED__ */


#ifndef __IDebugCustomAttributeQuery_FWD_DEFINED__
#define __IDebugCustomAttributeQuery_FWD_DEFINED__
typedef interface IDebugCustomAttributeQuery IDebugCustomAttributeQuery;
#endif 	/* __IDebugCustomAttributeQuery_FWD_DEFINED__ */


#ifndef __IDebugCustomAttribute_FWD_DEFINED__
#define __IDebugCustomAttribute_FWD_DEFINED__
typedef interface IDebugCustomAttribute IDebugCustomAttribute;
#endif 	/* __IDebugCustomAttribute_FWD_DEFINED__ */


#ifndef __IDebugCustomAttributeQuery2_FWD_DEFINED__
#define __IDebugCustomAttributeQuery2_FWD_DEFINED__
typedef interface IDebugCustomAttributeQuery2 IDebugCustomAttributeQuery2;
#endif 	/* __IDebugCustomAttributeQuery2_FWD_DEFINED__ */


#ifndef __IEnumDebugCustomAttributes_FWD_DEFINED__
#define __IEnumDebugCustomAttributes_FWD_DEFINED__
typedef interface IEnumDebugCustomAttributes IEnumDebugCustomAttributes;
#endif 	/* __IEnumDebugCustomAttributes_FWD_DEFINED__ */


#ifndef __SHManaged_FWD_DEFINED__
#define __SHManaged_FWD_DEFINED__

#ifdef __cplusplus
typedef class SHManaged SHManaged;
#else
typedef struct SHManaged SHManaged;
#endif /* __cplusplus */

#endif 	/* __SHManaged_FWD_DEFINED__ */


/* header files for imported files */
#include "wtypes.h"
#include "msdbg.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_sh_0000_0000 */
/* [local] */ 
























// Symbol provider HRESULTs
//
// HRESULTs: General
static const int E_SH_SYMBOL_STORE_NOT_INITIALIZED			= MAKE_HRESULT(1, FACILITY_ITF, 0x0001);
static const int E_SH_SYMBOL_STORE_ALREADY_INITIALIZED		= MAKE_HRESULT(1, FACILITY_ITF, 0x0002);
// HRESULTs: GetContainerField and GetTypeFromAddress
static const int E_SH_INVALID_ADDRESS						= MAKE_HRESULT(1, FACILITY_ITF, 0x0003);
// HRESULTs: GetAddressesFromPosition
static const int E_SH_NO_SYMBOLS_FOR_POSITION				= MAKE_HRESULT(1, FACILITY_ITF, 0x0004);
static const int E_SH_INVALID_POSITION						= MAKE_HRESULT(1, FACILITY_ITF, 0x0005);
// HRESULTs: GetContextFromAddress
static const int E_SH_NO_SYMBOLS_FOR_ADDRESS					= MAKE_HRESULT(1, FACILITY_ITF, 0x0006);
static const int S_SH_ENC_OLD_CONTEXT						= MAKE_HRESULT(0, FACILITY_ITF, 0x0040);
// HRESULTs: GetAddress
static const int E_SH_NO_ADDRESS								= MAKE_HRESULT(1, FACILITY_ITF, 0x0007);
// HRESULTs: GetType
static const int E_SH_NO_TYPE								= MAKE_HRESULT(1, FACILITY_ITF, 0x0008);
static const int E_SH_DYNAMIC_TYPE							= MAKE_HRESULT(1, FACILITY_ITF, 0x0009);
// HRESULTs: GetContainer
static const int S_SH_NO_CONTAINER							= MAKE_HRESULT(0, FACILITY_ITF, 0x000a);
// HRESULTs: GetSize
static const int S_SH_NO_SIZE								= MAKE_HRESULT(0, FACILITY_ITF, 0x000b);
static const int E_SH_DYNAMIC_SIZE							= MAKE_HRESULT(1, FACILITY_ITF, 0x000c);
// HRESULTs: EnumFields
static const int S_SH_NO_FIELDS								= MAKE_HRESULT(0, FACILITY_ITF, 0x000d);
// HRESULTs: GetThis
static const int S_SH_METHOD_NO_THIS							= MAKE_HRESULT(0, FACILITY_ITF, 0x000e);
// HRESULTs: EnumBaseClasses
static const int S_SH_NO_BASE_CLASSES						= MAKE_HRESULT(0, FACILITY_ITF, 0x000f);
static const int E_SH_FILE_NOT_FOUND						    = MAKE_HRESULT(1, FACILITY_ITF, 0x0010);
static const int E_SH_SYMBOLS_NOT_FOUND                      = MAKE_HRESULT(1, FACILITY_ITF, 0x0020);
extern GUID guidSymStoreMetaPDB;
extern GUID guidConstantValue;
extern GUID guidConstantType;
extern GUID guidIntPtr;
extern GUID guidValueType;
// HRESULTS: GetContextInfo
static const int E_SH_NO_DOC_CONTEXT						    = MAKE_HRESULT(1, FACILITY_ITF, 0x0011);
// HRESULTS: ClassRefToClassDef
static const int E_SH_CLASSDEFINITION_NOT_LOADED				= MAKE_HRESULT(1, FACILITY_ITF, 0x0012);
static const int E_SH_MODULE_NOT_LOADED				        = MAKE_HRESULT(1, FACILITY_ITF, 0x0013);
// HRESULTS: ConvertDiaHR
static const int E_SH_OK										= MAKE_HRESULT(1, FACILITY_ITF, 0x0021);
static const int E_SH_USAGE									= MAKE_HRESULT(1, FACILITY_ITF, 0x0022);
static const int E_SH_OUT_OF_MEMORY							= MAKE_HRESULT(1, FACILITY_ITF, 0x0023);
static const int E_SH_FILE_SYSTEM							= MAKE_HRESULT(1, FACILITY_ITF, 0x0024);
static const int E_SH_NOT_FOUND								= MAKE_HRESULT(1, FACILITY_ITF, 0x0025);
static const int E_SH_INVALID_SIG							= MAKE_HRESULT(1, FACILITY_ITF, 0x0026);
static const int E_SH_INVALID_AGE							= MAKE_HRESULT(1, FACILITY_ITF, 0x0027);
static const int E_SH_V1_PDB									= MAKE_HRESULT(1, FACILITY_ITF, 0x0028);
static const int E_SH_FORMAT									= MAKE_HRESULT(1, FACILITY_ITF, 0x0029);
static const int E_SH_CORRUPT								= MAKE_HRESULT(1, FACILITY_ITF, 0x002a);
static const int E_SH_ACCESS_DENIED							= MAKE_HRESULT(1, FACILITY_ITF, 0x002b);
static const int E_SH_INVALID_EXECUTABLE						= MAKE_HRESULT(1, FACILITY_ITF, 0x002c);
static const int E_SH_NO_DEBUG_INFO							= MAKE_HRESULT(1, FACILITY_ITF, 0x002d);
static const int E_SH_INVALID_EXE_TIMESTAMP					= MAKE_HRESULT(1, FACILITY_ITF, 0x002e);
static const int E_SH_DEBUG_INFO_NOT_IN_PDB					= MAKE_HRESULT(1, FACILITY_ITF, 0x0030);
// HRESULTS: ConstructInstantiation
static const int E_SH_TYPE_ARG_NOT_CLOSED					= MAKE_HRESULT(1, FACILITY_ITF, 0x0050);
typedef INT32 _mdToken;

typedef 
enum NameMatchOptions
    {	nmNone	= 0,
	nmCaseSensitive	= ( nmNone + 1 ) ,
	nmCaseInsensitive	= ( nmCaseSensitive + 1 ) 
    } 	NAME_MATCH;



extern RPC_IF_HANDLE __MIDL_itf_sh_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_sh_0000_0000_v0_0_s_ifspec;

#ifndef __IDebugSymbolProvider_INTERFACE_DEFINED__
#define __IDebugSymbolProvider_INTERFACE_DEFINED__

/* interface IDebugSymbolProvider */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugSymbolProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34eae-8b9d-11d2-9014-00c04fa38338")
    IDebugSymbolProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt IDebugEngineSymbolProviderServices *pServices) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Uninitialize( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContainerField( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetField( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddressCur,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAddressesFromPosition( 
            /* [in] */ __RPC__in_opt IDebugDocumentPosition2 *pDocPos,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAddressesFromContext( 
            /* [in] */ __RPC__in_opt IDebugDocumentContext2 *pDocContext,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContextFromAddress( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugDocumentContext2 **ppDocContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLanguage( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__out GUID *pguidLanguage,
            /* [out] */ __RPC__out GUID *pguidLanguageVendor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGlobalContainer( 
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **pField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMethodFieldsByName( 
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszFullName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClassTypeByName( 
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszClassName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNamespacesUsedAtAddress( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTypeByName( 
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszClassName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNextAddress( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugSymbolProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugSymbolProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugSymbolProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugSymbolProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IDebugSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugEngineSymbolProviderServices *pServices);
        
        HRESULT ( STDMETHODCALLTYPE *Uninitialize )( 
            IDebugSymbolProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainerField )( 
            IDebugSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetField )( 
            IDebugSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddressCur,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddressesFromPosition )( 
            IDebugSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugDocumentPosition2 *pDocPos,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddressesFromContext )( 
            IDebugSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugDocumentContext2 *pDocContext,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextFromAddress )( 
            IDebugSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugDocumentContext2 **ppDocContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguage )( 
            IDebugSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__out GUID *pguidLanguage,
            /* [out] */ __RPC__out GUID *pguidLanguageVendor);
        
        HRESULT ( STDMETHODCALLTYPE *GetGlobalContainer )( 
            IDebugSymbolProvider * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetMethodFieldsByName )( 
            IDebugSymbolProvider * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszFullName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassTypeByName )( 
            IDebugSymbolProvider * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszClassName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetNamespacesUsedAtAddress )( 
            IDebugSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeByName )( 
            IDebugSymbolProvider * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszClassName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetNextAddress )( 
            IDebugSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        END_INTERFACE
    } IDebugSymbolProviderVtbl;

    interface IDebugSymbolProvider
    {
        CONST_VTBL struct IDebugSymbolProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugSymbolProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugSymbolProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugSymbolProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugSymbolProvider_Initialize(This,pServices)	\
    ( (This)->lpVtbl -> Initialize(This,pServices) ) 

#define IDebugSymbolProvider_Uninitialize(This)	\
    ( (This)->lpVtbl -> Uninitialize(This) ) 

#define IDebugSymbolProvider_GetContainerField(This,pAddress,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainerField(This,pAddress,ppContainerField) ) 

#define IDebugSymbolProvider_GetField(This,pAddress,pAddressCur,ppField)	\
    ( (This)->lpVtbl -> GetField(This,pAddress,pAddressCur,ppField) ) 

#define IDebugSymbolProvider_GetAddressesFromPosition(This,pDocPos,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses)	\
    ( (This)->lpVtbl -> GetAddressesFromPosition(This,pDocPos,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses) ) 

#define IDebugSymbolProvider_GetAddressesFromContext(This,pDocContext,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses)	\
    ( (This)->lpVtbl -> GetAddressesFromContext(This,pDocContext,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses) ) 

#define IDebugSymbolProvider_GetContextFromAddress(This,pAddress,ppDocContext)	\
    ( (This)->lpVtbl -> GetContextFromAddress(This,pAddress,ppDocContext) ) 

#define IDebugSymbolProvider_GetLanguage(This,pAddress,pguidLanguage,pguidLanguageVendor)	\
    ( (This)->lpVtbl -> GetLanguage(This,pAddress,pguidLanguage,pguidLanguageVendor) ) 

#define IDebugSymbolProvider_GetGlobalContainer(This,pField)	\
    ( (This)->lpVtbl -> GetGlobalContainer(This,pField) ) 

#define IDebugSymbolProvider_GetMethodFieldsByName(This,pszFullName,nameMatch,ppEnum)	\
    ( (This)->lpVtbl -> GetMethodFieldsByName(This,pszFullName,nameMatch,ppEnum) ) 

#define IDebugSymbolProvider_GetClassTypeByName(This,pszClassName,nameMatch,ppField)	\
    ( (This)->lpVtbl -> GetClassTypeByName(This,pszClassName,nameMatch,ppField) ) 

#define IDebugSymbolProvider_GetNamespacesUsedAtAddress(This,pAddress,ppEnum)	\
    ( (This)->lpVtbl -> GetNamespacesUsedAtAddress(This,pAddress,ppEnum) ) 

#define IDebugSymbolProvider_GetTypeByName(This,pszClassName,nameMatch,ppField)	\
    ( (This)->lpVtbl -> GetTypeByName(This,pszClassName,nameMatch,ppField) ) 

#define IDebugSymbolProvider_GetNextAddress(This,pAddress,fStatmentOnly,ppAddress)	\
    ( (This)->lpVtbl -> GetNextAddress(This,pAddress,fStatmentOnly,ppAddress) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugSymbolProvider_INTERFACE_DEFINED__ */


#ifndef __IDebugSymbolProviderDirect_INTERFACE_DEFINED__
#define __IDebugSymbolProviderDirect_INTERFACE_DEFINED__

/* interface IDebugSymbolProviderDirect */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugSymbolProviderDirect;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("533A62E9-FDDD-4fef-B7C3-BE4117773087")
    IDebugSymbolProviderDirect : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrentModulesState( 
            /* [out] */ __RPC__out DWORD *pState,
            /* [out] */ __RPC__out unsigned long *count) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMethodFromAddress( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__out GUID *pGuid,
            /* [out] */ __RPC__out DWORD *pAppID,
            /* [out] */ __RPC__out _mdToken *pTokenClass,
            /* [out] */ __RPC__out _mdToken *pTokenMethod,
            /* [out] */ __RPC__out DWORD *pdwOffset,
            /* [out] */ __RPC__out DWORD *pdwVersion) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAppIDFromAddress( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__out DWORD *pAppID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMetaDataImport( 
            /* [in] */ __RPC__in GUID *guid,
            /* [in] */ DWORD appID,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppImport) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSymUnmanagedReader( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppSymUnmanagedReader) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentModulesInfo( 
            /* [out][in] */ __RPC__inout unsigned long *pCount,
            /* [length_is][size_is][out][in] */ __RPC__inout_ecount_part(*pCount, *pCount) GUID *ppGuids,
            /* [length_is][size_is][out][in] */ __RPC__inout_ecount_part(*pCount, *pCount) DWORD *pADIds,
            /* [length_is][size_is][out][in] */ __RPC__inout_ecount_part(*pCount, *pCount) DWORD *pCurrentState,
            /* [length_is][size_is][full][out][in] */ __RPC__inout_ecount_part_opt(*pCount, *pCount) IUnknown **ppCDModItfs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugSymbolProviderDirectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugSymbolProviderDirect * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugSymbolProviderDirect * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugSymbolProviderDirect * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentModulesState )( 
            IDebugSymbolProviderDirect * This,
            /* [out] */ __RPC__out DWORD *pState,
            /* [out] */ __RPC__out unsigned long *count);
        
        HRESULT ( STDMETHODCALLTYPE *GetMethodFromAddress )( 
            IDebugSymbolProviderDirect * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__out GUID *pGuid,
            /* [out] */ __RPC__out DWORD *pAppID,
            /* [out] */ __RPC__out _mdToken *pTokenClass,
            /* [out] */ __RPC__out _mdToken *pTokenMethod,
            /* [out] */ __RPC__out DWORD *pdwOffset,
            /* [out] */ __RPC__out DWORD *pdwVersion);
        
        HRESULT ( STDMETHODCALLTYPE *GetAppIDFromAddress )( 
            IDebugSymbolProviderDirect * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__out DWORD *pAppID);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetaDataImport )( 
            IDebugSymbolProviderDirect * This,
            /* [in] */ __RPC__in GUID *guid,
            /* [in] */ DWORD appID,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppImport);
        
        HRESULT ( STDMETHODCALLTYPE *GetSymUnmanagedReader )( 
            IDebugSymbolProviderDirect * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppSymUnmanagedReader);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentModulesInfo )( 
            IDebugSymbolProviderDirect * This,
            /* [out][in] */ __RPC__inout unsigned long *pCount,
            /* [length_is][size_is][out][in] */ __RPC__inout_ecount_part(*pCount, *pCount) GUID *ppGuids,
            /* [length_is][size_is][out][in] */ __RPC__inout_ecount_part(*pCount, *pCount) DWORD *pADIds,
            /* [length_is][size_is][out][in] */ __RPC__inout_ecount_part(*pCount, *pCount) DWORD *pCurrentState,
            /* [length_is][size_is][full][out][in] */ __RPC__inout_ecount_part_opt(*pCount, *pCount) IUnknown **ppCDModItfs);
        
        END_INTERFACE
    } IDebugSymbolProviderDirectVtbl;

    interface IDebugSymbolProviderDirect
    {
        CONST_VTBL struct IDebugSymbolProviderDirectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugSymbolProviderDirect_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugSymbolProviderDirect_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugSymbolProviderDirect_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugSymbolProviderDirect_GetCurrentModulesState(This,pState,count)	\
    ( (This)->lpVtbl -> GetCurrentModulesState(This,pState,count) ) 

#define IDebugSymbolProviderDirect_GetMethodFromAddress(This,pAddress,pGuid,pAppID,pTokenClass,pTokenMethod,pdwOffset,pdwVersion)	\
    ( (This)->lpVtbl -> GetMethodFromAddress(This,pAddress,pGuid,pAppID,pTokenClass,pTokenMethod,pdwOffset,pdwVersion) ) 

#define IDebugSymbolProviderDirect_GetAppIDFromAddress(This,pAddress,pAppID)	\
    ( (This)->lpVtbl -> GetAppIDFromAddress(This,pAddress,pAppID) ) 

#define IDebugSymbolProviderDirect_GetMetaDataImport(This,guid,appID,ppImport)	\
    ( (This)->lpVtbl -> GetMetaDataImport(This,guid,appID,ppImport) ) 

#define IDebugSymbolProviderDirect_GetSymUnmanagedReader(This,ulAppDomainID,guidModule,ppSymUnmanagedReader)	\
    ( (This)->lpVtbl -> GetSymUnmanagedReader(This,ulAppDomainID,guidModule,ppSymUnmanagedReader) ) 

#define IDebugSymbolProviderDirect_GetCurrentModulesInfo(This,pCount,ppGuids,pADIds,pCurrentState,ppCDModItfs)	\
    ( (This)->lpVtbl -> GetCurrentModulesInfo(This,pCount,ppGuids,pADIds,pCurrentState,ppCDModItfs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugSymbolProviderDirect_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_sh_0000_0002 */
/* [local] */ 

#pragma warning(push)
#pragma warning(disable:28718)


extern RPC_IF_HANDLE __MIDL_itf_sh_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_sh_0000_0002_v0_0_s_ifspec;

#ifndef __IDebugComPlusSymbolProvider_INTERFACE_DEFINED__
#define __IDebugComPlusSymbolProvider_INTERFACE_DEFINED__

/* interface IDebugComPlusSymbolProvider */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugComPlusSymbolProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34eaf-8b9d-11d2-9014-00c04fa38338")
    IDebugComPlusSymbolProvider : public IDebugSymbolProvider
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE LoadSymbols( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONGLONG baseAddress,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in BSTR bstrModuleName,
            /* [in] */ __RPC__in BSTR bstrSymSearchPath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnloadSymbols( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEntryPoint( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTypeFromAddress( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateSymbols( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in_opt IStream *pUpdateStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateTypeFromPrimitive( 
            /* [in] */ DWORD dwPrimType,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ __RPC__deref_in_opt IDebugField **ppType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFunctionLineOffset( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ DWORD dwLine,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppNewAddress) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAddressesInModuleFromPosition( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in_opt IDebugDocumentPosition2 *pDocPos,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetArrayTypeFromAddress( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [length_is][size_is][in] */ __RPC__in_ecount_part(dwSigLength, dwSigLength) BYTE *pSig,
            /* [in] */ DWORD dwSigLength,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSymAttribute( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ _mdToken tokParent,
            /* [in] */ __RPC__in LPOLESTR pstrName,
            /* [in] */ ULONG32 cBuffer,
            /* [out] */ __RPC__out ULONG32 *pcBuffer,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(cBuffer, *pcBuffer) BYTE *buffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceSymbols( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in_opt IStream *pStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AreSymbolsLoaded( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LoadSymbolsFromStream( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONGLONG baseAddress,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in_opt IStream *pStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSymUnmanagedReader( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppSymUnmanagedReader) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAttributedClassesinModule( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in LPOLESTR pstrAttribute,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAttributedClassesForLanguage( 
            /* [in] */ GUID guidLanguage,
            /* [in] */ __RPC__in LPOLESTR pstrAttribute,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsHiddenCode( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsFunctionDeleted( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNameFromToken( 
            /* [in] */ __RPC__in_opt IUnknown *pMetadataImport,
            /* [in] */ DWORD dwToken,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsFunctionStale( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLocalVariablelayout( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONG32 cMethods,
            /* [size_is][in] */ __RPC__in_ecount_full(cMethods) _mdToken rgMethodTokens[  ],
            /* [out] */ __RPC__deref_out_opt IStream **pStreamLayout) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAssemblyName( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugComPlusSymbolProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugComPlusSymbolProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugComPlusSymbolProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugEngineSymbolProviderServices *pServices);
        
        HRESULT ( STDMETHODCALLTYPE *Uninitialize )( 
            IDebugComPlusSymbolProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainerField )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetField )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddressCur,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddressesFromPosition )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugDocumentPosition2 *pDocPos,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddressesFromContext )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugDocumentContext2 *pDocContext,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextFromAddress )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugDocumentContext2 **ppDocContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguage )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__out GUID *pguidLanguage,
            /* [out] */ __RPC__out GUID *pguidLanguageVendor);
        
        HRESULT ( STDMETHODCALLTYPE *GetGlobalContainer )( 
            IDebugComPlusSymbolProvider * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetMethodFieldsByName )( 
            IDebugComPlusSymbolProvider * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszFullName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassTypeByName )( 
            IDebugComPlusSymbolProvider * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszClassName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetNamespacesUsedAtAddress )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeByName )( 
            IDebugComPlusSymbolProvider * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszClassName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetNextAddress )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *LoadSymbols )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONGLONG baseAddress,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in BSTR bstrModuleName,
            /* [in] */ __RPC__in BSTR bstrSymSearchPath);
        
        HRESULT ( STDMETHODCALLTYPE *UnloadSymbols )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule);
        
        HRESULT ( STDMETHODCALLTYPE *GetEntryPoint )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeFromAddress )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateSymbols )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in_opt IStream *pUpdateStream);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTypeFromPrimitive )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ DWORD dwPrimType,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ __RPC__deref_in_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetFunctionLineOffset )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ DWORD dwLine,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppNewAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddressesInModuleFromPosition )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in_opt IDebugDocumentPosition2 *pDocPos,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *GetArrayTypeFromAddress )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [length_is][size_is][in] */ __RPC__in_ecount_part(dwSigLength, dwSigLength) BYTE *pSig,
            /* [in] */ DWORD dwSigLength,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetSymAttribute )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ _mdToken tokParent,
            /* [in] */ __RPC__in LPOLESTR pstrName,
            /* [in] */ ULONG32 cBuffer,
            /* [out] */ __RPC__out ULONG32 *pcBuffer,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(cBuffer, *pcBuffer) BYTE *buffer);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceSymbols )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in_opt IStream *pStream);
        
        HRESULT ( STDMETHODCALLTYPE *AreSymbolsLoaded )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule);
        
        HRESULT ( STDMETHODCALLTYPE *LoadSymbolsFromStream )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONGLONG baseAddress,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in_opt IStream *pStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetSymUnmanagedReader )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppSymUnmanagedReader);
        
        HRESULT ( STDMETHODCALLTYPE *GetAttributedClassesinModule )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in LPOLESTR pstrAttribute,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetAttributedClassesForLanguage )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ GUID guidLanguage,
            /* [in] */ __RPC__in LPOLESTR pstrAttribute,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *IsHiddenCode )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress);
        
        HRESULT ( STDMETHODCALLTYPE *IsFunctionDeleted )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetNameFromToken )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IUnknown *pMetadataImport,
            /* [in] */ DWORD dwToken,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        HRESULT ( STDMETHODCALLTYPE *IsFunctionStale )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocalVariablelayout )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONG32 cMethods,
            /* [size_is][in] */ __RPC__in_ecount_full(cMethods) _mdToken rgMethodTokens[  ],
            /* [out] */ __RPC__deref_out_opt IStream **pStreamLayout);
        
        HRESULT ( STDMETHODCALLTYPE *GetAssemblyName )( 
            IDebugComPlusSymbolProvider * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        END_INTERFACE
    } IDebugComPlusSymbolProviderVtbl;

    interface IDebugComPlusSymbolProvider
    {
        CONST_VTBL struct IDebugComPlusSymbolProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugComPlusSymbolProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugComPlusSymbolProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugComPlusSymbolProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugComPlusSymbolProvider_Initialize(This,pServices)	\
    ( (This)->lpVtbl -> Initialize(This,pServices) ) 

#define IDebugComPlusSymbolProvider_Uninitialize(This)	\
    ( (This)->lpVtbl -> Uninitialize(This) ) 

#define IDebugComPlusSymbolProvider_GetContainerField(This,pAddress,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainerField(This,pAddress,ppContainerField) ) 

#define IDebugComPlusSymbolProvider_GetField(This,pAddress,pAddressCur,ppField)	\
    ( (This)->lpVtbl -> GetField(This,pAddress,pAddressCur,ppField) ) 

#define IDebugComPlusSymbolProvider_GetAddressesFromPosition(This,pDocPos,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses)	\
    ( (This)->lpVtbl -> GetAddressesFromPosition(This,pDocPos,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses) ) 

#define IDebugComPlusSymbolProvider_GetAddressesFromContext(This,pDocContext,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses)	\
    ( (This)->lpVtbl -> GetAddressesFromContext(This,pDocContext,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses) ) 

#define IDebugComPlusSymbolProvider_GetContextFromAddress(This,pAddress,ppDocContext)	\
    ( (This)->lpVtbl -> GetContextFromAddress(This,pAddress,ppDocContext) ) 

#define IDebugComPlusSymbolProvider_GetLanguage(This,pAddress,pguidLanguage,pguidLanguageVendor)	\
    ( (This)->lpVtbl -> GetLanguage(This,pAddress,pguidLanguage,pguidLanguageVendor) ) 

#define IDebugComPlusSymbolProvider_GetGlobalContainer(This,pField)	\
    ( (This)->lpVtbl -> GetGlobalContainer(This,pField) ) 

#define IDebugComPlusSymbolProvider_GetMethodFieldsByName(This,pszFullName,nameMatch,ppEnum)	\
    ( (This)->lpVtbl -> GetMethodFieldsByName(This,pszFullName,nameMatch,ppEnum) ) 

#define IDebugComPlusSymbolProvider_GetClassTypeByName(This,pszClassName,nameMatch,ppField)	\
    ( (This)->lpVtbl -> GetClassTypeByName(This,pszClassName,nameMatch,ppField) ) 

#define IDebugComPlusSymbolProvider_GetNamespacesUsedAtAddress(This,pAddress,ppEnum)	\
    ( (This)->lpVtbl -> GetNamespacesUsedAtAddress(This,pAddress,ppEnum) ) 

#define IDebugComPlusSymbolProvider_GetTypeByName(This,pszClassName,nameMatch,ppField)	\
    ( (This)->lpVtbl -> GetTypeByName(This,pszClassName,nameMatch,ppField) ) 

#define IDebugComPlusSymbolProvider_GetNextAddress(This,pAddress,fStatmentOnly,ppAddress)	\
    ( (This)->lpVtbl -> GetNextAddress(This,pAddress,fStatmentOnly,ppAddress) ) 


#define IDebugComPlusSymbolProvider_LoadSymbols(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,bstrModuleName,bstrSymSearchPath)	\
    ( (This)->lpVtbl -> LoadSymbols(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,bstrModuleName,bstrSymSearchPath) ) 

#define IDebugComPlusSymbolProvider_UnloadSymbols(This,ulAppDomainID,guidModule)	\
    ( (This)->lpVtbl -> UnloadSymbols(This,ulAppDomainID,guidModule) ) 

#define IDebugComPlusSymbolProvider_GetEntryPoint(This,ulAppDomainID,guidModule,ppAddress)	\
    ( (This)->lpVtbl -> GetEntryPoint(This,ulAppDomainID,guidModule,ppAddress) ) 

#define IDebugComPlusSymbolProvider_GetTypeFromAddress(This,pAddress,ppField)	\
    ( (This)->lpVtbl -> GetTypeFromAddress(This,pAddress,ppField) ) 

#define IDebugComPlusSymbolProvider_UpdateSymbols(This,ulAppDomainID,guidModule,pUpdateStream)	\
    ( (This)->lpVtbl -> UpdateSymbols(This,ulAppDomainID,guidModule,pUpdateStream) ) 

#define IDebugComPlusSymbolProvider_CreateTypeFromPrimitive(This,dwPrimType,pAddress,ppType)	\
    ( (This)->lpVtbl -> CreateTypeFromPrimitive(This,dwPrimType,pAddress,ppType) ) 

#define IDebugComPlusSymbolProvider_GetFunctionLineOffset(This,pAddress,dwLine,ppNewAddress)	\
    ( (This)->lpVtbl -> GetFunctionLineOffset(This,pAddress,dwLine,ppNewAddress) ) 

#define IDebugComPlusSymbolProvider_GetAddressesInModuleFromPosition(This,ulAppDomainID,guidModule,pDocPos,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses)	\
    ( (This)->lpVtbl -> GetAddressesInModuleFromPosition(This,ulAppDomainID,guidModule,pDocPos,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses) ) 

#define IDebugComPlusSymbolProvider_GetArrayTypeFromAddress(This,pAddress,pSig,dwSigLength,ppField)	\
    ( (This)->lpVtbl -> GetArrayTypeFromAddress(This,pAddress,pSig,dwSigLength,ppField) ) 

#define IDebugComPlusSymbolProvider_GetSymAttribute(This,ulAppDomainID,guidModule,tokParent,pstrName,cBuffer,pcBuffer,buffer)	\
    ( (This)->lpVtbl -> GetSymAttribute(This,ulAppDomainID,guidModule,tokParent,pstrName,cBuffer,pcBuffer,buffer) ) 

#define IDebugComPlusSymbolProvider_ReplaceSymbols(This,ulAppDomainID,guidModule,pStream)	\
    ( (This)->lpVtbl -> ReplaceSymbols(This,ulAppDomainID,guidModule,pStream) ) 

#define IDebugComPlusSymbolProvider_AreSymbolsLoaded(This,ulAppDomainID,guidModule)	\
    ( (This)->lpVtbl -> AreSymbolsLoaded(This,ulAppDomainID,guidModule) ) 

#define IDebugComPlusSymbolProvider_LoadSymbolsFromStream(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,pStream)	\
    ( (This)->lpVtbl -> LoadSymbolsFromStream(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,pStream) ) 

#define IDebugComPlusSymbolProvider_GetSymUnmanagedReader(This,ulAppDomainID,guidModule,ppSymUnmanagedReader)	\
    ( (This)->lpVtbl -> GetSymUnmanagedReader(This,ulAppDomainID,guidModule,ppSymUnmanagedReader) ) 

#define IDebugComPlusSymbolProvider_GetAttributedClassesinModule(This,ulAppDomainID,guidModule,pstrAttribute,ppEnum)	\
    ( (This)->lpVtbl -> GetAttributedClassesinModule(This,ulAppDomainID,guidModule,pstrAttribute,ppEnum) ) 

#define IDebugComPlusSymbolProvider_GetAttributedClassesForLanguage(This,guidLanguage,pstrAttribute,ppEnum)	\
    ( (This)->lpVtbl -> GetAttributedClassesForLanguage(This,guidLanguage,pstrAttribute,ppEnum) ) 

#define IDebugComPlusSymbolProvider_IsHiddenCode(This,pAddress)	\
    ( (This)->lpVtbl -> IsHiddenCode(This,pAddress) ) 

#define IDebugComPlusSymbolProvider_IsFunctionDeleted(This,pAddress)	\
    ( (This)->lpVtbl -> IsFunctionDeleted(This,pAddress) ) 

#define IDebugComPlusSymbolProvider_GetNameFromToken(This,pMetadataImport,dwToken,pbstrName)	\
    ( (This)->lpVtbl -> GetNameFromToken(This,pMetadataImport,dwToken,pbstrName) ) 

#define IDebugComPlusSymbolProvider_IsFunctionStale(This,pAddress)	\
    ( (This)->lpVtbl -> IsFunctionStale(This,pAddress) ) 

#define IDebugComPlusSymbolProvider_GetLocalVariablelayout(This,ulAppDomainID,guidModule,cMethods,rgMethodTokens,pStreamLayout)	\
    ( (This)->lpVtbl -> GetLocalVariablelayout(This,ulAppDomainID,guidModule,cMethods,rgMethodTokens,pStreamLayout) ) 

#define IDebugComPlusSymbolProvider_GetAssemblyName(This,ulAppDomainID,guidModule,pbstrName)	\
    ( (This)->lpVtbl -> GetAssemblyName(This,ulAppDomainID,guidModule,pbstrName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugComPlusSymbolProvider_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_sh_0000_0003 */
/* [local] */ 

#pragma warning(pop)


extern RPC_IF_HANDLE __MIDL_itf_sh_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_sh_0000_0003_v0_0_s_ifspec;

#ifndef __IDebugComPlusSymbolProvider2_INTERFACE_DEFINED__
#define __IDebugComPlusSymbolProvider2_INTERFACE_DEFINED__

/* interface IDebugComPlusSymbolProvider2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugComPlusSymbolProvider2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("29D97D99-2C50-4855-BC74-B3E372DDD602")
    IDebugComPlusSymbolProvider2 : public IDebugComPlusSymbolProvider
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE LoadSymbolsFromCallback( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in_opt IUnknown *pUnkCorDebugModule,
            /* [in] */ __RPC__in BSTR bstrModuleName,
            /* [in] */ __RPC__in BSTR bstrSymSearchPath,
            /* [in] */ __RPC__in_opt IUnknown *pCallback) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsAddressSequencePoint( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FunctionHasLineInfo( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTypesByName( 
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszClassName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LoadSymbolsWithCorModule( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONGLONG baseAddress,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in_opt IUnknown *pUnkCorDebugModule,
            /* [in] */ __RPC__in BSTR bstrModuleName,
            /* [in] */ __RPC__in BSTR bstrSymSearchPath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LoadSymbolsFromStreamWithCorModule( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONGLONG baseAddress,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in_opt IUnknown *pUnkCorDebugModule,
            /* [in] */ __RPC__in_opt IStream *pStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTypeFromToken( 
            /* [in] */ ULONG32 appDomain,
            /* [in] */ GUID guidModule,
            /* [in] */ DWORD tdToken,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugComPlusSymbolProvider2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugComPlusSymbolProvider2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugComPlusSymbolProvider2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugEngineSymbolProviderServices *pServices);
        
        HRESULT ( STDMETHODCALLTYPE *Uninitialize )( 
            IDebugComPlusSymbolProvider2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainerField )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetField )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddressCur,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddressesFromPosition )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugDocumentPosition2 *pDocPos,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddressesFromContext )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugDocumentContext2 *pDocContext,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextFromAddress )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugDocumentContext2 **ppDocContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguage )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__out GUID *pguidLanguage,
            /* [out] */ __RPC__out GUID *pguidLanguageVendor);
        
        HRESULT ( STDMETHODCALLTYPE *GetGlobalContainer )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetMethodFieldsByName )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszFullName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassTypeByName )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszClassName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetNamespacesUsedAtAddress )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeByName )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszClassName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetNextAddress )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *LoadSymbols )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONGLONG baseAddress,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in BSTR bstrModuleName,
            /* [in] */ __RPC__in BSTR bstrSymSearchPath);
        
        HRESULT ( STDMETHODCALLTYPE *UnloadSymbols )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule);
        
        HRESULT ( STDMETHODCALLTYPE *GetEntryPoint )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeFromAddress )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateSymbols )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in_opt IStream *pUpdateStream);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTypeFromPrimitive )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ DWORD dwPrimType,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ __RPC__deref_in_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetFunctionLineOffset )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ DWORD dwLine,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppNewAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddressesInModuleFromPosition )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in_opt IDebugDocumentPosition2 *pDocPos,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *GetArrayTypeFromAddress )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [length_is][size_is][in] */ __RPC__in_ecount_part(dwSigLength, dwSigLength) BYTE *pSig,
            /* [in] */ DWORD dwSigLength,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetSymAttribute )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ _mdToken tokParent,
            /* [in] */ __RPC__in LPOLESTR pstrName,
            /* [in] */ ULONG32 cBuffer,
            /* [out] */ __RPC__out ULONG32 *pcBuffer,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(cBuffer, *pcBuffer) BYTE *buffer);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceSymbols )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in_opt IStream *pStream);
        
        HRESULT ( STDMETHODCALLTYPE *AreSymbolsLoaded )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule);
        
        HRESULT ( STDMETHODCALLTYPE *LoadSymbolsFromStream )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONGLONG baseAddress,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in_opt IStream *pStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetSymUnmanagedReader )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppSymUnmanagedReader);
        
        HRESULT ( STDMETHODCALLTYPE *GetAttributedClassesinModule )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in LPOLESTR pstrAttribute,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetAttributedClassesForLanguage )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ GUID guidLanguage,
            /* [in] */ __RPC__in LPOLESTR pstrAttribute,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *IsHiddenCode )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress);
        
        HRESULT ( STDMETHODCALLTYPE *IsFunctionDeleted )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetNameFromToken )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IUnknown *pMetadataImport,
            /* [in] */ DWORD dwToken,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        HRESULT ( STDMETHODCALLTYPE *IsFunctionStale )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocalVariablelayout )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONG32 cMethods,
            /* [size_is][in] */ __RPC__in_ecount_full(cMethods) _mdToken rgMethodTokens[  ],
            /* [out] */ __RPC__deref_out_opt IStream **pStreamLayout);
        
        HRESULT ( STDMETHODCALLTYPE *GetAssemblyName )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        HRESULT ( STDMETHODCALLTYPE *LoadSymbolsFromCallback )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in_opt IUnknown *pUnkCorDebugModule,
            /* [in] */ __RPC__in BSTR bstrModuleName,
            /* [in] */ __RPC__in BSTR bstrSymSearchPath,
            /* [in] */ __RPC__in_opt IUnknown *pCallback);
        
        HRESULT ( STDMETHODCALLTYPE *IsAddressSequencePoint )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress);
        
        HRESULT ( STDMETHODCALLTYPE *FunctionHasLineInfo )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypesByName )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszClassName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *LoadSymbolsWithCorModule )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONGLONG baseAddress,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in_opt IUnknown *pUnkCorDebugModule,
            /* [in] */ __RPC__in BSTR bstrModuleName,
            /* [in] */ __RPC__in BSTR bstrSymSearchPath);
        
        HRESULT ( STDMETHODCALLTYPE *LoadSymbolsFromStreamWithCorModule )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONGLONG baseAddress,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in_opt IUnknown *pUnkCorDebugModule,
            /* [in] */ __RPC__in_opt IStream *pStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeFromToken )( 
            IDebugComPlusSymbolProvider2 * This,
            /* [in] */ ULONG32 appDomain,
            /* [in] */ GUID guidModule,
            /* [in] */ DWORD tdToken,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        END_INTERFACE
    } IDebugComPlusSymbolProvider2Vtbl;

    interface IDebugComPlusSymbolProvider2
    {
        CONST_VTBL struct IDebugComPlusSymbolProvider2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugComPlusSymbolProvider2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugComPlusSymbolProvider2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugComPlusSymbolProvider2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugComPlusSymbolProvider2_Initialize(This,pServices)	\
    ( (This)->lpVtbl -> Initialize(This,pServices) ) 

#define IDebugComPlusSymbolProvider2_Uninitialize(This)	\
    ( (This)->lpVtbl -> Uninitialize(This) ) 

#define IDebugComPlusSymbolProvider2_GetContainerField(This,pAddress,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainerField(This,pAddress,ppContainerField) ) 

#define IDebugComPlusSymbolProvider2_GetField(This,pAddress,pAddressCur,ppField)	\
    ( (This)->lpVtbl -> GetField(This,pAddress,pAddressCur,ppField) ) 

#define IDebugComPlusSymbolProvider2_GetAddressesFromPosition(This,pDocPos,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses)	\
    ( (This)->lpVtbl -> GetAddressesFromPosition(This,pDocPos,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses) ) 

#define IDebugComPlusSymbolProvider2_GetAddressesFromContext(This,pDocContext,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses)	\
    ( (This)->lpVtbl -> GetAddressesFromContext(This,pDocContext,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses) ) 

#define IDebugComPlusSymbolProvider2_GetContextFromAddress(This,pAddress,ppDocContext)	\
    ( (This)->lpVtbl -> GetContextFromAddress(This,pAddress,ppDocContext) ) 

#define IDebugComPlusSymbolProvider2_GetLanguage(This,pAddress,pguidLanguage,pguidLanguageVendor)	\
    ( (This)->lpVtbl -> GetLanguage(This,pAddress,pguidLanguage,pguidLanguageVendor) ) 

#define IDebugComPlusSymbolProvider2_GetGlobalContainer(This,pField)	\
    ( (This)->lpVtbl -> GetGlobalContainer(This,pField) ) 

#define IDebugComPlusSymbolProvider2_GetMethodFieldsByName(This,pszFullName,nameMatch,ppEnum)	\
    ( (This)->lpVtbl -> GetMethodFieldsByName(This,pszFullName,nameMatch,ppEnum) ) 

#define IDebugComPlusSymbolProvider2_GetClassTypeByName(This,pszClassName,nameMatch,ppField)	\
    ( (This)->lpVtbl -> GetClassTypeByName(This,pszClassName,nameMatch,ppField) ) 

#define IDebugComPlusSymbolProvider2_GetNamespacesUsedAtAddress(This,pAddress,ppEnum)	\
    ( (This)->lpVtbl -> GetNamespacesUsedAtAddress(This,pAddress,ppEnum) ) 

#define IDebugComPlusSymbolProvider2_GetTypeByName(This,pszClassName,nameMatch,ppField)	\
    ( (This)->lpVtbl -> GetTypeByName(This,pszClassName,nameMatch,ppField) ) 

#define IDebugComPlusSymbolProvider2_GetNextAddress(This,pAddress,fStatmentOnly,ppAddress)	\
    ( (This)->lpVtbl -> GetNextAddress(This,pAddress,fStatmentOnly,ppAddress) ) 


#define IDebugComPlusSymbolProvider2_LoadSymbols(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,bstrModuleName,bstrSymSearchPath)	\
    ( (This)->lpVtbl -> LoadSymbols(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,bstrModuleName,bstrSymSearchPath) ) 

#define IDebugComPlusSymbolProvider2_UnloadSymbols(This,ulAppDomainID,guidModule)	\
    ( (This)->lpVtbl -> UnloadSymbols(This,ulAppDomainID,guidModule) ) 

#define IDebugComPlusSymbolProvider2_GetEntryPoint(This,ulAppDomainID,guidModule,ppAddress)	\
    ( (This)->lpVtbl -> GetEntryPoint(This,ulAppDomainID,guidModule,ppAddress) ) 

#define IDebugComPlusSymbolProvider2_GetTypeFromAddress(This,pAddress,ppField)	\
    ( (This)->lpVtbl -> GetTypeFromAddress(This,pAddress,ppField) ) 

#define IDebugComPlusSymbolProvider2_UpdateSymbols(This,ulAppDomainID,guidModule,pUpdateStream)	\
    ( (This)->lpVtbl -> UpdateSymbols(This,ulAppDomainID,guidModule,pUpdateStream) ) 

#define IDebugComPlusSymbolProvider2_CreateTypeFromPrimitive(This,dwPrimType,pAddress,ppType)	\
    ( (This)->lpVtbl -> CreateTypeFromPrimitive(This,dwPrimType,pAddress,ppType) ) 

#define IDebugComPlusSymbolProvider2_GetFunctionLineOffset(This,pAddress,dwLine,ppNewAddress)	\
    ( (This)->lpVtbl -> GetFunctionLineOffset(This,pAddress,dwLine,ppNewAddress) ) 

#define IDebugComPlusSymbolProvider2_GetAddressesInModuleFromPosition(This,ulAppDomainID,guidModule,pDocPos,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses)	\
    ( (This)->lpVtbl -> GetAddressesInModuleFromPosition(This,ulAppDomainID,guidModule,pDocPos,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses) ) 

#define IDebugComPlusSymbolProvider2_GetArrayTypeFromAddress(This,pAddress,pSig,dwSigLength,ppField)	\
    ( (This)->lpVtbl -> GetArrayTypeFromAddress(This,pAddress,pSig,dwSigLength,ppField) ) 

#define IDebugComPlusSymbolProvider2_GetSymAttribute(This,ulAppDomainID,guidModule,tokParent,pstrName,cBuffer,pcBuffer,buffer)	\
    ( (This)->lpVtbl -> GetSymAttribute(This,ulAppDomainID,guidModule,tokParent,pstrName,cBuffer,pcBuffer,buffer) ) 

#define IDebugComPlusSymbolProvider2_ReplaceSymbols(This,ulAppDomainID,guidModule,pStream)	\
    ( (This)->lpVtbl -> ReplaceSymbols(This,ulAppDomainID,guidModule,pStream) ) 

#define IDebugComPlusSymbolProvider2_AreSymbolsLoaded(This,ulAppDomainID,guidModule)	\
    ( (This)->lpVtbl -> AreSymbolsLoaded(This,ulAppDomainID,guidModule) ) 

#define IDebugComPlusSymbolProvider2_LoadSymbolsFromStream(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,pStream)	\
    ( (This)->lpVtbl -> LoadSymbolsFromStream(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,pStream) ) 

#define IDebugComPlusSymbolProvider2_GetSymUnmanagedReader(This,ulAppDomainID,guidModule,ppSymUnmanagedReader)	\
    ( (This)->lpVtbl -> GetSymUnmanagedReader(This,ulAppDomainID,guidModule,ppSymUnmanagedReader) ) 

#define IDebugComPlusSymbolProvider2_GetAttributedClassesinModule(This,ulAppDomainID,guidModule,pstrAttribute,ppEnum)	\
    ( (This)->lpVtbl -> GetAttributedClassesinModule(This,ulAppDomainID,guidModule,pstrAttribute,ppEnum) ) 

#define IDebugComPlusSymbolProvider2_GetAttributedClassesForLanguage(This,guidLanguage,pstrAttribute,ppEnum)	\
    ( (This)->lpVtbl -> GetAttributedClassesForLanguage(This,guidLanguage,pstrAttribute,ppEnum) ) 

#define IDebugComPlusSymbolProvider2_IsHiddenCode(This,pAddress)	\
    ( (This)->lpVtbl -> IsHiddenCode(This,pAddress) ) 

#define IDebugComPlusSymbolProvider2_IsFunctionDeleted(This,pAddress)	\
    ( (This)->lpVtbl -> IsFunctionDeleted(This,pAddress) ) 

#define IDebugComPlusSymbolProvider2_GetNameFromToken(This,pMetadataImport,dwToken,pbstrName)	\
    ( (This)->lpVtbl -> GetNameFromToken(This,pMetadataImport,dwToken,pbstrName) ) 

#define IDebugComPlusSymbolProvider2_IsFunctionStale(This,pAddress)	\
    ( (This)->lpVtbl -> IsFunctionStale(This,pAddress) ) 

#define IDebugComPlusSymbolProvider2_GetLocalVariablelayout(This,ulAppDomainID,guidModule,cMethods,rgMethodTokens,pStreamLayout)	\
    ( (This)->lpVtbl -> GetLocalVariablelayout(This,ulAppDomainID,guidModule,cMethods,rgMethodTokens,pStreamLayout) ) 

#define IDebugComPlusSymbolProvider2_GetAssemblyName(This,ulAppDomainID,guidModule,pbstrName)	\
    ( (This)->lpVtbl -> GetAssemblyName(This,ulAppDomainID,guidModule,pbstrName) ) 


#define IDebugComPlusSymbolProvider2_LoadSymbolsFromCallback(This,ulAppDomainID,guidModule,pUnkMetadataImport,pUnkCorDebugModule,bstrModuleName,bstrSymSearchPath,pCallback)	\
    ( (This)->lpVtbl -> LoadSymbolsFromCallback(This,ulAppDomainID,guidModule,pUnkMetadataImport,pUnkCorDebugModule,bstrModuleName,bstrSymSearchPath,pCallback) ) 

#define IDebugComPlusSymbolProvider2_IsAddressSequencePoint(This,pAddress)	\
    ( (This)->lpVtbl -> IsAddressSequencePoint(This,pAddress) ) 

#define IDebugComPlusSymbolProvider2_FunctionHasLineInfo(This,pAddress)	\
    ( (This)->lpVtbl -> FunctionHasLineInfo(This,pAddress) ) 

#define IDebugComPlusSymbolProvider2_GetTypesByName(This,pszClassName,nameMatch,ppEnum)	\
    ( (This)->lpVtbl -> GetTypesByName(This,pszClassName,nameMatch,ppEnum) ) 

#define IDebugComPlusSymbolProvider2_LoadSymbolsWithCorModule(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,pUnkCorDebugModule,bstrModuleName,bstrSymSearchPath)	\
    ( (This)->lpVtbl -> LoadSymbolsWithCorModule(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,pUnkCorDebugModule,bstrModuleName,bstrSymSearchPath) ) 

#define IDebugComPlusSymbolProvider2_LoadSymbolsFromStreamWithCorModule(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,pUnkCorDebugModule,pStream)	\
    ( (This)->lpVtbl -> LoadSymbolsFromStreamWithCorModule(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,pUnkCorDebugModule,pStream) ) 

#define IDebugComPlusSymbolProvider2_GetTypeFromToken(This,appDomain,guidModule,tdToken,ppField)	\
    ( (This)->lpVtbl -> GetTypeFromToken(This,appDomain,guidModule,tdToken,ppField) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugComPlusSymbolProvider2_INTERFACE_DEFINED__ */


#ifndef __IDebugSymbolProviderGroup_INTERFACE_DEFINED__
#define __IDebugSymbolProviderGroup_INTERFACE_DEFINED__

/* interface IDebugSymbolProviderGroup */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugSymbolProviderGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2B226A06-FF61-44f3-9ADD-B34BD9F72FCB")
    IDebugSymbolProviderGroup : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateGroup( 
            /* [out] */ __RPC__deref_out_opt IUnknown **ppGroup) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetGroup( 
            /* [in] */ __RPC__in_opt IUnknown *pGroup) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugSymbolProviderGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugSymbolProviderGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugSymbolProviderGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugSymbolProviderGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateGroup )( 
            IDebugSymbolProviderGroup * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *SetGroup )( 
            IDebugSymbolProviderGroup * This,
            /* [in] */ __RPC__in_opt IUnknown *pGroup);
        
        END_INTERFACE
    } IDebugSymbolProviderGroupVtbl;

    interface IDebugSymbolProviderGroup
    {
        CONST_VTBL struct IDebugSymbolProviderGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugSymbolProviderGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugSymbolProviderGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugSymbolProviderGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugSymbolProviderGroup_CreateGroup(This,ppGroup)	\
    ( (This)->lpVtbl -> CreateGroup(This,ppGroup) ) 

#define IDebugSymbolProviderGroup_SetGroup(This,pGroup)	\
    ( (This)->lpVtbl -> SetGroup(This,pGroup) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugSymbolProviderGroup_INTERFACE_DEFINED__ */


#ifndef __IDebugGenericFieldDefinition_INTERFACE_DEFINED__
#define __IDebugGenericFieldDefinition_INTERFACE_DEFINED__

/* interface IDebugGenericFieldDefinition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugGenericFieldDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C5717D6C-8DBF-4852-B7D8-C003EE09541F")
    IDebugGenericFieldDefinition : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE TypeParamCount( 
            /* [out][in] */ __RPC__inout ULONG32 *pcParams) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFormalTypeParams( 
            /* [in] */ ULONG32 cParams,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(cParams, *pcParams) IDebugGenericParamField **ppParams,
            /* [out][in] */ __RPC__inout ULONG32 *pcParams) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConstructInstantiation( 
            /* [in] */ ULONG32 cArgs,
            /* [size_is][in] */ __RPC__in_ecount_full(cArgs) IDebugField **ppArgs,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppConstructedField) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugGenericFieldDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugGenericFieldDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugGenericFieldDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugGenericFieldDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *TypeParamCount )( 
            IDebugGenericFieldDefinition * This,
            /* [out][in] */ __RPC__inout ULONG32 *pcParams);
        
        HRESULT ( STDMETHODCALLTYPE *GetFormalTypeParams )( 
            IDebugGenericFieldDefinition * This,
            /* [in] */ ULONG32 cParams,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(cParams, *pcParams) IDebugGenericParamField **ppParams,
            /* [out][in] */ __RPC__inout ULONG32 *pcParams);
        
        HRESULT ( STDMETHODCALLTYPE *ConstructInstantiation )( 
            IDebugGenericFieldDefinition * This,
            /* [in] */ ULONG32 cArgs,
            /* [size_is][in] */ __RPC__in_ecount_full(cArgs) IDebugField **ppArgs,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppConstructedField);
        
        END_INTERFACE
    } IDebugGenericFieldDefinitionVtbl;

    interface IDebugGenericFieldDefinition
    {
        CONST_VTBL struct IDebugGenericFieldDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugGenericFieldDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugGenericFieldDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugGenericFieldDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugGenericFieldDefinition_TypeParamCount(This,pcParams)	\
    ( (This)->lpVtbl -> TypeParamCount(This,pcParams) ) 

#define IDebugGenericFieldDefinition_GetFormalTypeParams(This,cParams,ppParams,pcParams)	\
    ( (This)->lpVtbl -> GetFormalTypeParams(This,cParams,ppParams,pcParams) ) 

#define IDebugGenericFieldDefinition_ConstructInstantiation(This,cArgs,ppArgs,ppConstructedField)	\
    ( (This)->lpVtbl -> ConstructInstantiation(This,cArgs,ppArgs,ppConstructedField) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugGenericFieldDefinition_INTERFACE_DEFINED__ */


#ifndef __IDebugGenericFieldInstance_INTERFACE_DEFINED__
#define __IDebugGenericFieldInstance_INTERFACE_DEFINED__

/* interface IDebugGenericFieldInstance */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugGenericFieldInstance;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C93C9DD0-0A65-4966-BCEB-633EEEE2E096")
    IDebugGenericFieldInstance : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE TypeArgumentCount( 
            /* [out][in] */ __RPC__inout ULONG32 *pcArgs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTypeArguments( 
            /* [in] */ ULONG32 cArgs,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(cArgs, *pcArgs) IDebugField **ppArgs,
            /* [out][in] */ __RPC__inout ULONG32 *pcArgs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugGenericFieldInstanceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugGenericFieldInstance * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugGenericFieldInstance * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugGenericFieldInstance * This);
        
        HRESULT ( STDMETHODCALLTYPE *TypeArgumentCount )( 
            IDebugGenericFieldInstance * This,
            /* [out][in] */ __RPC__inout ULONG32 *pcArgs);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeArguments )( 
            IDebugGenericFieldInstance * This,
            /* [in] */ ULONG32 cArgs,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(cArgs, *pcArgs) IDebugField **ppArgs,
            /* [out][in] */ __RPC__inout ULONG32 *pcArgs);
        
        END_INTERFACE
    } IDebugGenericFieldInstanceVtbl;

    interface IDebugGenericFieldInstance
    {
        CONST_VTBL struct IDebugGenericFieldInstanceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugGenericFieldInstance_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugGenericFieldInstance_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugGenericFieldInstance_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugGenericFieldInstance_TypeArgumentCount(This,pcArgs)	\
    ( (This)->lpVtbl -> TypeArgumentCount(This,pcArgs) ) 

#define IDebugGenericFieldInstance_GetTypeArguments(This,cArgs,ppArgs,pcArgs)	\
    ( (This)->lpVtbl -> GetTypeArguments(This,cArgs,ppArgs,pcArgs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugGenericFieldInstance_INTERFACE_DEFINED__ */


#ifndef __IDebugField_INTERFACE_DEFINED__
#define __IDebugField_INTERFACE_DEFINED__

/* interface IDebugField */
/* [unique][uuid][object] */ 


enum enum_FIELD_MODIFIERS
    {	FIELD_MOD_NONE	= 0,
	FIELD_MOD_ACCESS_NONE	= 0x1,
	FIELD_MOD_ACCESS_PUBLIC	= 0x2,
	FIELD_MOD_ACCESS_PROTECTED	= 0x4,
	FIELD_MOD_ACCESS_PRIVATE	= 0x8,
	FIELD_MOD_ACCESS_FRIEND	= 0x1000000,
	FIELD_MOD_NOMODIFIERS	= 0x10,
	FIELD_MOD_STATIC	= 0x20,
	FIELD_MOD_CONSTANT	= 0x40,
	FIELD_MOD_TRANSIENT	= 0x80,
	FIELD_MOD_VOLATILE	= 0x100,
	FIELD_MOD_ABSTRACT	= 0x200,
	FIELD_MOD_NATIVE	= 0x400,
	FIELD_MOD_SYNCHRONIZED	= 0x800,
	FIELD_MOD_VIRTUAL	= 0x1000,
	FIELD_MOD_INTERFACE	= 0x2000,
	FIELD_MOD_FINAL	= 0x4000,
	FIELD_MOD_SENTINEL	= 0x8000,
	FIELD_MOD_INNERCLASS	= 0x10000,
	FIELD_MOD_OPTIONAL	= 0x20000,
	FIELD_MOD_BYREF	= 0x40000,
	FIELD_MOD_HIDDEN	= 0x80000,
	FIELD_MOD_MARSHALASOBJECT	= 0x100000,
	FIELD_MOD_SPECIAL_NAME	= 0x200000,
	FIELD_MOD_HIDEBYSIG	= 0x400000,
	FIELD_MOD_NEWSLOT	= 0x800000,
	FIELD_MOD_WRITEONLY	= 0x80000000,
	FIELD_MOD_ACCESS_MASK	= 0xf00000f,
	FIELD_MOD_MASK	= 0xf0fffff0,
	FIELD_MOD_ALL	= 0x7fffffff
    } ;
typedef DWORD FIELD_MODIFIERS;


enum enum_FIELD_KIND
    {	FIELD_KIND_NONE	= 0,
	FIELD_KIND_TYPE	= 0x1,
	FIELD_KIND_SYMBOL	= 0x2,
	FIELD_TYPE_PRIMITIVE	= 0x10,
	FIELD_TYPE_STRUCT	= 0x20,
	FIELD_TYPE_CLASS	= 0x40,
	FIELD_TYPE_INTERFACE	= 0x80,
	FIELD_TYPE_UNION	= 0x100,
	FIELD_TYPE_ARRAY	= 0x200,
	FIELD_TYPE_METHOD	= 0x400,
	FIELD_TYPE_BLOCK	= 0x800,
	FIELD_TYPE_POINTER	= 0x1000,
	FIELD_TYPE_ENUM	= 0x2000,
	FIELD_TYPE_LABEL	= 0x4000,
	FIELD_TYPE_TYPEDEF	= 0x8000,
	FIELD_TYPE_BITFIELD	= 0x10000,
	FIELD_TYPE_NAMESPACE	= 0x20000,
	FIELD_TYPE_MODULE	= 0x40000,
	FIELD_TYPE_DYNAMIC	= 0x80000,
	FIELD_TYPE_PROP	= 0x100000,
	FIELD_TYPE_INNERCLASS	= 0x200000,
	FIELD_TYPE_REFERENCE	= 0x400000,
	FIELD_TYPE_EXTENDED	= 0x800000,
	FIELD_SYM_MEMBER	= 0x1000000,
	FIELD_SYM_LOCAL	= 0x2000000,
	FIELD_SYM_PARAM	= 0x4000000,
	FIELD_SYM_THIS	= 0x8000000,
	FIELD_SYM_GLOBAL	= 0x10000000,
	FIELD_SYM_PROP_GETTER	= 0x20000000,
	FIELD_SYM_PROP_SETTER	= 0x40000000,
	FIELD_SYM_EXTENED	= 0x80000000,
	FIELD_KIND_MASK	= 0xf,
	FIELD_TYPE_MASK	= 0xfffff0,
	FIELD_SYM_MASK	= 0xff000000,
	FIELD_KIND_ALL	= 0xffffffff
    } ;
typedef DWORD FIELD_KIND;


enum enum_FIELD_INFO_FIELDS
    {	FIF_FULLNAME	= 0x1,
	FIF_NAME	= 0x2,
	FIF_TYPE	= 0x4,
	FIF_MODIFIERS	= 0x8,
	FIF_ALL	= 0xffffffff
    } ;
typedef DWORD FIELD_INFO_FIELDS;

typedef struct _tagFieldInfo
    {
    FIELD_INFO_FIELDS dwFields;
    BSTR bstrFullName;
    BSTR bstrName;
    BSTR bstrType;
    FIELD_MODIFIERS dwModifiers;
    } 	FIELD_INFO;


enum enum_dwTYPE_KIND
    {	TYPE_KIND_METADATA	= 0x1,
	TYPE_KIND_PDB	= 0x2,
	TYPE_KIND_BUILT	= 0x3
    } ;
typedef DWORD dwTYPE_KIND;

typedef struct _tagTYPE_METADATA
    {
    ULONG32 ulAppDomainID;
    GUID guidModule;
    _mdToken tokClass;
    } 	METADATA_TYPE;

typedef struct _tagTYPE_PDB
    {
    ULONG32 ulAppDomainID;
    GUID guidModule;
    DWORD symid;
    } 	PDB_TYPE;

typedef struct _tagTYPE_BUILT
    {
    ULONG32 ulAppDomainID;
    GUID guidModule;
    IDebugField *pUnderlyingField;
    } 	BUILT_TYPE;

typedef struct _tagTYPE_INFO_UNION
    {
    dwTYPE_KIND dwKind;
    /* [switch_type] */ union __MIDL_IDebugField_0001
        {
        METADATA_TYPE typeMeta;
        PDB_TYPE typePdb;
        BUILT_TYPE typeBuilt;
        DWORD unused;
        } 	type;
    } 	TYPE_INFO;


EXTERN_C const IID IID_IDebugField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34eb1-8b9d-11d2-9014-00c04fa38338")
    IDebugField : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetInfo( 
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetKind( 
            /* [out] */ __RPC__out FIELD_KIND *pdwKind) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetType( 
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContainer( 
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAddress( 
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ __RPC__out DWORD *pdwSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExtendedInfo( 
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Equal( 
            /* [in] */ __RPC__in_opt IDebugField *pField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTypeInfo( 
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        END_INTERFACE
    } IDebugFieldVtbl;

    interface IDebugField
    {
        CONST_VTBL struct IDebugFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugField_INTERFACE_DEFINED__ */


#ifndef __IDebugGenericParamField_INTERFACE_DEFINED__
#define __IDebugGenericParamField_INTERFACE_DEFINED__

/* interface IDebugGenericParamField */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugGenericParamField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("941105E9-760A-49ec-995F-7668CB60216C")
    IDebugGenericParamField : public IDebugField
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNameOfFormalParam( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConstraintCount( 
            /* [out][in] */ __RPC__inout ULONG32 *pcConst) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConstraints( 
            /* [in] */ ULONG32 cConstraints,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(cConstraints, *pcConstraints) IDebugField **ppConstraints,
            /* [out][in] */ __RPC__inout ULONG32 *pcConstraints) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOwner( 
            /* [out] */ __RPC__deref_out_opt IDebugField **ppOwner) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIndex( 
            /* [out] */ __RPC__out DWORD *pIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFlags( 
            /* [out] */ __RPC__out DWORD *pdwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugGenericParamFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugGenericParamField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugGenericParamField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugGenericParamField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugGenericParamField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugGenericParamField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugGenericParamField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugGenericParamField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugGenericParamField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugGenericParamField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugGenericParamField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugGenericParamField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugGenericParamField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetNameOfFormalParam )( 
            IDebugGenericParamField * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        HRESULT ( STDMETHODCALLTYPE *ConstraintCount )( 
            IDebugGenericParamField * This,
            /* [out][in] */ __RPC__inout ULONG32 *pcConst);
        
        HRESULT ( STDMETHODCALLTYPE *GetConstraints )( 
            IDebugGenericParamField * This,
            /* [in] */ ULONG32 cConstraints,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(cConstraints, *pcConstraints) IDebugField **ppConstraints,
            /* [out][in] */ __RPC__inout ULONG32 *pcConstraints);
        
        HRESULT ( STDMETHODCALLTYPE *GetOwner )( 
            IDebugGenericParamField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppOwner);
        
        HRESULT ( STDMETHODCALLTYPE *GetIndex )( 
            IDebugGenericParamField * This,
            /* [out] */ __RPC__out DWORD *pIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetFlags )( 
            IDebugGenericParamField * This,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        END_INTERFACE
    } IDebugGenericParamFieldVtbl;

    interface IDebugGenericParamField
    {
        CONST_VTBL struct IDebugGenericParamFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugGenericParamField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugGenericParamField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugGenericParamField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugGenericParamField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugGenericParamField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugGenericParamField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugGenericParamField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugGenericParamField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugGenericParamField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugGenericParamField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugGenericParamField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugGenericParamField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 


#define IDebugGenericParamField_GetNameOfFormalParam(This,pbstrName)	\
    ( (This)->lpVtbl -> GetNameOfFormalParam(This,pbstrName) ) 

#define IDebugGenericParamField_ConstraintCount(This,pcConst)	\
    ( (This)->lpVtbl -> ConstraintCount(This,pcConst) ) 

#define IDebugGenericParamField_GetConstraints(This,cConstraints,ppConstraints,pcConstraints)	\
    ( (This)->lpVtbl -> GetConstraints(This,cConstraints,ppConstraints,pcConstraints) ) 

#define IDebugGenericParamField_GetOwner(This,ppOwner)	\
    ( (This)->lpVtbl -> GetOwner(This,ppOwner) ) 

#define IDebugGenericParamField_GetIndex(This,pIndex)	\
    ( (This)->lpVtbl -> GetIndex(This,pIndex) ) 

#define IDebugGenericParamField_GetFlags(This,pdwFlags)	\
    ( (This)->lpVtbl -> GetFlags(This,pdwFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugGenericParamField_INTERFACE_DEFINED__ */


#ifndef __IDebugComPlusSymbolSearchInfo_INTERFACE_DEFINED__
#define __IDebugComPlusSymbolSearchInfo_INTERFACE_DEFINED__

/* interface IDebugComPlusSymbolSearchInfo */
/* [unique][uuid][object] */ 

typedef struct _tagSymbolSearchInfo
    {
    BSTR bstrPath;
    HRESULT hrHRESULT;
    } 	SYMBOL_SEARCH_INFO;


EXTERN_C const IID IID_IDebugComPlusSymbolSearchInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F96F4D16-E799-492d-B33D-2325E63D4135")
    IDebugComPlusSymbolSearchInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetLastSymbolSearchInfo( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrPath,
            /* [out] */ __RPC__out HRESULT *phrHRESULT) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSymbolSearchInfoCount( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__out ULONG32 *pCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSymbolSearchInfo( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONG32 ulSearchInfo,
            /* [out] */ __RPC__out ULONG32 *pulSearchInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(ulSearchInfo, *pulSearchInfo) SYMBOL_SEARCH_INFO **prgSearchInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LoadSymbolsWithoutPDB( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONGLONG baseAddress,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in_opt IUnknown *pUnkCorDebugModule,
            /* [in] */ __RPC__in BSTR bstrModule) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugComPlusSymbolSearchInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugComPlusSymbolSearchInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugComPlusSymbolSearchInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugComPlusSymbolSearchInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetLastSymbolSearchInfo )( 
            IDebugComPlusSymbolSearchInfo * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrPath,
            /* [out] */ __RPC__out HRESULT *phrHRESULT);
        
        HRESULT ( STDMETHODCALLTYPE *GetSymbolSearchInfoCount )( 
            IDebugComPlusSymbolSearchInfo * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [out] */ __RPC__out ULONG32 *pCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetSymbolSearchInfo )( 
            IDebugComPlusSymbolSearchInfo * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONG32 ulSearchInfo,
            /* [out] */ __RPC__out ULONG32 *pulSearchInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(ulSearchInfo, *pulSearchInfo) SYMBOL_SEARCH_INFO **prgSearchInfo);
        
        HRESULT ( STDMETHODCALLTYPE *LoadSymbolsWithoutPDB )( 
            IDebugComPlusSymbolSearchInfo * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ ULONGLONG baseAddress,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMetadataImport,
            /* [in] */ __RPC__in_opt IUnknown *pUnkCorDebugModule,
            /* [in] */ __RPC__in BSTR bstrModule);
        
        END_INTERFACE
    } IDebugComPlusSymbolSearchInfoVtbl;

    interface IDebugComPlusSymbolSearchInfo
    {
        CONST_VTBL struct IDebugComPlusSymbolSearchInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugComPlusSymbolSearchInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugComPlusSymbolSearchInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugComPlusSymbolSearchInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugComPlusSymbolSearchInfo_GetLastSymbolSearchInfo(This,ulAppDomainID,guidModule,pbstrPath,phrHRESULT)	\
    ( (This)->lpVtbl -> GetLastSymbolSearchInfo(This,ulAppDomainID,guidModule,pbstrPath,phrHRESULT) ) 

#define IDebugComPlusSymbolSearchInfo_GetSymbolSearchInfoCount(This,ulAppDomainID,guidModule,pCount)	\
    ( (This)->lpVtbl -> GetSymbolSearchInfoCount(This,ulAppDomainID,guidModule,pCount) ) 

#define IDebugComPlusSymbolSearchInfo_GetSymbolSearchInfo(This,ulAppDomainID,guidModule,ulSearchInfo,pulSearchInfo,prgSearchInfo)	\
    ( (This)->lpVtbl -> GetSymbolSearchInfo(This,ulAppDomainID,guidModule,ulSearchInfo,pulSearchInfo,prgSearchInfo) ) 

#define IDebugComPlusSymbolSearchInfo_LoadSymbolsWithoutPDB(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,pUnkCorDebugModule,bstrModule)	\
    ( (This)->lpVtbl -> LoadSymbolsWithoutPDB(This,ulAppDomainID,guidModule,baseAddress,pUnkMetadataImport,pUnkCorDebugModule,bstrModule) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugComPlusSymbolSearchInfo_INTERFACE_DEFINED__ */


#ifndef __IDebugTypeFieldBuilder_INTERFACE_DEFINED__
#define __IDebugTypeFieldBuilder_INTERFACE_DEFINED__

/* interface IDebugTypeFieldBuilder */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugTypeFieldBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("796AE40B-6CDA-4f05-A663-D282A93AC7D4")
    IDebugTypeFieldBuilder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreatePrimitive( 
            /* [in] */ DWORD dwElementType,
            /* [out] */ __RPC__deref_out_opt IDebugField **pTypeField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreatePointerToType( 
            /* [in] */ __RPC__in_opt IDebugField *pTypeField,
            /* [out] */ __RPC__deref_out_opt IDebugField **pPtrToTypeField) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugTypeFieldBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugTypeFieldBuilder * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugTypeFieldBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugTypeFieldBuilder * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreatePrimitive )( 
            IDebugTypeFieldBuilder * This,
            /* [in] */ DWORD dwElementType,
            /* [out] */ __RPC__deref_out_opt IDebugField **pTypeField);
        
        HRESULT ( STDMETHODCALLTYPE *CreatePointerToType )( 
            IDebugTypeFieldBuilder * This,
            /* [in] */ __RPC__in_opt IDebugField *pTypeField,
            /* [out] */ __RPC__deref_out_opt IDebugField **pPtrToTypeField);
        
        END_INTERFACE
    } IDebugTypeFieldBuilderVtbl;

    interface IDebugTypeFieldBuilder
    {
        CONST_VTBL struct IDebugTypeFieldBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugTypeFieldBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugTypeFieldBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugTypeFieldBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugTypeFieldBuilder_CreatePrimitive(This,dwElementType,pTypeField)	\
    ( (This)->lpVtbl -> CreatePrimitive(This,dwElementType,pTypeField) ) 

#define IDebugTypeFieldBuilder_CreatePointerToType(This,pTypeField,pPtrToTypeField)	\
    ( (This)->lpVtbl -> CreatePointerToType(This,pTypeField,pPtrToTypeField) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugTypeFieldBuilder_INTERFACE_DEFINED__ */


#ifndef __IDebugTypeFieldBuilder2_INTERFACE_DEFINED__
#define __IDebugTypeFieldBuilder2_INTERFACE_DEFINED__

/* interface IDebugTypeFieldBuilder2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugTypeFieldBuilder2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EED3392E-C13A-42a9-932F-145C12B4FB5C")
    IDebugTypeFieldBuilder2 : public IDebugTypeFieldBuilder
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateArrayOfType( 
            /* [in] */ __RPC__in_opt IDebugField *pTypeField,
            /* [in] */ DWORD rank,
            /* [out] */ __RPC__deref_out_opt IDebugField **pArrayOfTypeField) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugTypeFieldBuilder2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugTypeFieldBuilder2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugTypeFieldBuilder2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugTypeFieldBuilder2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreatePrimitive )( 
            IDebugTypeFieldBuilder2 * This,
            /* [in] */ DWORD dwElementType,
            /* [out] */ __RPC__deref_out_opt IDebugField **pTypeField);
        
        HRESULT ( STDMETHODCALLTYPE *CreatePointerToType )( 
            IDebugTypeFieldBuilder2 * This,
            /* [in] */ __RPC__in_opt IDebugField *pTypeField,
            /* [out] */ __RPC__deref_out_opt IDebugField **pPtrToTypeField);
        
        HRESULT ( STDMETHODCALLTYPE *CreateArrayOfType )( 
            IDebugTypeFieldBuilder2 * This,
            /* [in] */ __RPC__in_opt IDebugField *pTypeField,
            /* [in] */ DWORD rank,
            /* [out] */ __RPC__deref_out_opt IDebugField **pArrayOfTypeField);
        
        END_INTERFACE
    } IDebugTypeFieldBuilder2Vtbl;

    interface IDebugTypeFieldBuilder2
    {
        CONST_VTBL struct IDebugTypeFieldBuilder2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugTypeFieldBuilder2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugTypeFieldBuilder2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugTypeFieldBuilder2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugTypeFieldBuilder2_CreatePrimitive(This,dwElementType,pTypeField)	\
    ( (This)->lpVtbl -> CreatePrimitive(This,dwElementType,pTypeField) ) 

#define IDebugTypeFieldBuilder2_CreatePointerToType(This,pTypeField,pPtrToTypeField)	\
    ( (This)->lpVtbl -> CreatePointerToType(This,pTypeField,pPtrToTypeField) ) 


#define IDebugTypeFieldBuilder2_CreateArrayOfType(This,pTypeField,rank,pArrayOfTypeField)	\
    ( (This)->lpVtbl -> CreateArrayOfType(This,pTypeField,rank,pArrayOfTypeField) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugTypeFieldBuilder2_INTERFACE_DEFINED__ */


#ifndef __IDebugNativeSymbolProvider_INTERFACE_DEFINED__
#define __IDebugNativeSymbolProvider_INTERFACE_DEFINED__

/* interface IDebugNativeSymbolProvider */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugNativeSymbolProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34eb0-8b9d-11d2-9014-00c04fa38338")
    IDebugNativeSymbolProvider : public IDebugSymbolProvider
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE LoadSymbols( 
            /* [in] */ __RPC__in LPCOLESTR pszFileName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugNativeSymbolProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugNativeSymbolProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugNativeSymbolProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugNativeSymbolProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IDebugNativeSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugEngineSymbolProviderServices *pServices);
        
        HRESULT ( STDMETHODCALLTYPE *Uninitialize )( 
            IDebugNativeSymbolProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainerField )( 
            IDebugNativeSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetField )( 
            IDebugNativeSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddressCur,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddressesFromPosition )( 
            IDebugNativeSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugDocumentPosition2 *pDocPos,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddressesFromContext )( 
            IDebugNativeSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugDocumentContext2 *pDocContext,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumBegAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnumEndAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextFromAddress )( 
            IDebugNativeSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IDebugDocumentContext2 **ppDocContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguage )( 
            IDebugNativeSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__out GUID *pguidLanguage,
            /* [out] */ __RPC__out GUID *pguidLanguageVendor);
        
        HRESULT ( STDMETHODCALLTYPE *GetGlobalContainer )( 
            IDebugNativeSymbolProvider * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetMethodFieldsByName )( 
            IDebugNativeSymbolProvider * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszFullName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassTypeByName )( 
            IDebugNativeSymbolProvider * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszClassName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetNamespacesUsedAtAddress )( 
            IDebugNativeSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeByName )( 
            IDebugNativeSymbolProvider * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszClassName,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetNextAddress )( 
            IDebugNativeSymbolProvider * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [in] */ BOOL fStatmentOnly,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *LoadSymbols )( 
            IDebugNativeSymbolProvider * This,
            /* [in] */ __RPC__in LPCOLESTR pszFileName);
        
        END_INTERFACE
    } IDebugNativeSymbolProviderVtbl;

    interface IDebugNativeSymbolProvider
    {
        CONST_VTBL struct IDebugNativeSymbolProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugNativeSymbolProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugNativeSymbolProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugNativeSymbolProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugNativeSymbolProvider_Initialize(This,pServices)	\
    ( (This)->lpVtbl -> Initialize(This,pServices) ) 

#define IDebugNativeSymbolProvider_Uninitialize(This)	\
    ( (This)->lpVtbl -> Uninitialize(This) ) 

#define IDebugNativeSymbolProvider_GetContainerField(This,pAddress,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainerField(This,pAddress,ppContainerField) ) 

#define IDebugNativeSymbolProvider_GetField(This,pAddress,pAddressCur,ppField)	\
    ( (This)->lpVtbl -> GetField(This,pAddress,pAddressCur,ppField) ) 

#define IDebugNativeSymbolProvider_GetAddressesFromPosition(This,pDocPos,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses)	\
    ( (This)->lpVtbl -> GetAddressesFromPosition(This,pDocPos,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses) ) 

#define IDebugNativeSymbolProvider_GetAddressesFromContext(This,pDocContext,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses)	\
    ( (This)->lpVtbl -> GetAddressesFromContext(This,pDocContext,fStatmentOnly,ppEnumBegAddresses,ppEnumEndAddresses) ) 

#define IDebugNativeSymbolProvider_GetContextFromAddress(This,pAddress,ppDocContext)	\
    ( (This)->lpVtbl -> GetContextFromAddress(This,pAddress,ppDocContext) ) 

#define IDebugNativeSymbolProvider_GetLanguage(This,pAddress,pguidLanguage,pguidLanguageVendor)	\
    ( (This)->lpVtbl -> GetLanguage(This,pAddress,pguidLanguage,pguidLanguageVendor) ) 

#define IDebugNativeSymbolProvider_GetGlobalContainer(This,pField)	\
    ( (This)->lpVtbl -> GetGlobalContainer(This,pField) ) 

#define IDebugNativeSymbolProvider_GetMethodFieldsByName(This,pszFullName,nameMatch,ppEnum)	\
    ( (This)->lpVtbl -> GetMethodFieldsByName(This,pszFullName,nameMatch,ppEnum) ) 

#define IDebugNativeSymbolProvider_GetClassTypeByName(This,pszClassName,nameMatch,ppField)	\
    ( (This)->lpVtbl -> GetClassTypeByName(This,pszClassName,nameMatch,ppField) ) 

#define IDebugNativeSymbolProvider_GetNamespacesUsedAtAddress(This,pAddress,ppEnum)	\
    ( (This)->lpVtbl -> GetNamespacesUsedAtAddress(This,pAddress,ppEnum) ) 

#define IDebugNativeSymbolProvider_GetTypeByName(This,pszClassName,nameMatch,ppField)	\
    ( (This)->lpVtbl -> GetTypeByName(This,pszClassName,nameMatch,ppField) ) 

#define IDebugNativeSymbolProvider_GetNextAddress(This,pAddress,fStatmentOnly,ppAddress)	\
    ( (This)->lpVtbl -> GetNextAddress(This,pAddress,fStatmentOnly,ppAddress) ) 


#define IDebugNativeSymbolProvider_LoadSymbols(This,pszFileName)	\
    ( (This)->lpVtbl -> LoadSymbols(This,pszFileName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugNativeSymbolProvider_INTERFACE_DEFINED__ */


#ifndef __IDebugExtendedField_INTERFACE_DEFINED__
#define __IDebugExtendedField_INTERFACE_DEFINED__

/* interface IDebugExtendedField */
/* [unique][uuid][object] */ 


enum enum_FIELD_KIND_EX
    {	FIELD_KIND_EX_NONE	= 0,
	FIELD_TYPE_EX_METHODVAR	= 0x1,
	FIELD_TYPE_EX_CLASSVAR	= 0x2
    } ;
typedef DWORD FIELD_KIND_EX;


EXTERN_C const IID IID_IDebugExtendedField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("20F22571-AA1C-4724-AD0A-BDE2D19D6163")
    IDebugExtendedField : public IDebugField
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetExtendedKind( 
            /* [out] */ __RPC__out FIELD_KIND_EX *pdwKind) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsClosedType( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugExtendedFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugExtendedField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugExtendedField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugExtendedField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugExtendedField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugExtendedField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugExtendedField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugExtendedField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugExtendedField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugExtendedField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugExtendedField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugExtendedField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugExtendedField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedKind )( 
            IDebugExtendedField * This,
            /* [out] */ __RPC__out FIELD_KIND_EX *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *IsClosedType )( 
            IDebugExtendedField * This);
        
        END_INTERFACE
    } IDebugExtendedFieldVtbl;

    interface IDebugExtendedField
    {
        CONST_VTBL struct IDebugExtendedFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugExtendedField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugExtendedField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugExtendedField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugExtendedField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugExtendedField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugExtendedField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugExtendedField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugExtendedField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugExtendedField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugExtendedField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugExtendedField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugExtendedField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 


#define IDebugExtendedField_GetExtendedKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetExtendedKind(This,pdwKind) ) 

#define IDebugExtendedField_IsClosedType(This)	\
    ( (This)->lpVtbl -> IsClosedType(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugExtendedField_INTERFACE_DEFINED__ */


#ifndef __IDebugPrimitiveTypeField_INTERFACE_DEFINED__
#define __IDebugPrimitiveTypeField_INTERFACE_DEFINED__

/* interface IDebugPrimitiveTypeField */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugPrimitiveTypeField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7a739554-3fc6-43ee-981d-f49171151393")
    IDebugPrimitiveTypeField : public IDebugField
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPrimitiveType( 
            /* [out] */ __RPC__out DWORD *pdwType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugPrimitiveTypeFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugPrimitiveTypeField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugPrimitiveTypeField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugPrimitiveTypeField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugPrimitiveTypeField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugPrimitiveTypeField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugPrimitiveTypeField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugPrimitiveTypeField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugPrimitiveTypeField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugPrimitiveTypeField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugPrimitiveTypeField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugPrimitiveTypeField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugPrimitiveTypeField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetPrimitiveType )( 
            IDebugPrimitiveTypeField * This,
            /* [out] */ __RPC__out DWORD *pdwType);
        
        END_INTERFACE
    } IDebugPrimitiveTypeFieldVtbl;

    interface IDebugPrimitiveTypeField
    {
        CONST_VTBL struct IDebugPrimitiveTypeFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugPrimitiveTypeField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugPrimitiveTypeField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugPrimitiveTypeField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugPrimitiveTypeField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugPrimitiveTypeField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugPrimitiveTypeField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugPrimitiveTypeField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugPrimitiveTypeField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugPrimitiveTypeField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugPrimitiveTypeField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugPrimitiveTypeField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugPrimitiveTypeField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 


#define IDebugPrimitiveTypeField_GetPrimitiveType(This,pdwType)	\
    ( (This)->lpVtbl -> GetPrimitiveType(This,pdwType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugPrimitiveTypeField_INTERFACE_DEFINED__ */


#ifndef __IDebugContainerField_INTERFACE_DEFINED__
#define __IDebugContainerField_INTERFACE_DEFINED__

/* interface IDebugContainerField */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugContainerField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34eb2-8b9d-11d2-9014-00c04fa38338")
    IDebugContainerField : public IDebugField
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE EnumFields( 
            /* [in] */ FIELD_KIND dwKindFilter,
            /* [in] */ FIELD_MODIFIERS dwModifiersFilter,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszNameFilter,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugContainerFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugContainerField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugContainerField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugContainerField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugContainerField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugContainerField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugContainerField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugContainerField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugContainerField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugContainerField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugContainerField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugContainerField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugContainerField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        HRESULT ( STDMETHODCALLTYPE *EnumFields )( 
            IDebugContainerField * This,
            /* [in] */ FIELD_KIND dwKindFilter,
            /* [in] */ FIELD_MODIFIERS dwModifiersFilter,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszNameFilter,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        END_INTERFACE
    } IDebugContainerFieldVtbl;

    interface IDebugContainerField
    {
        CONST_VTBL struct IDebugContainerFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugContainerField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugContainerField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugContainerField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugContainerField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugContainerField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugContainerField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugContainerField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugContainerField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugContainerField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugContainerField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugContainerField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugContainerField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 


#define IDebugContainerField_EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum)	\
    ( (This)->lpVtbl -> EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugContainerField_INTERFACE_DEFINED__ */


#ifndef __IDebugMethodField_INTERFACE_DEFINED__
#define __IDebugMethodField_INTERFACE_DEFINED__

/* interface IDebugMethodField */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugMethodField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34eb4-8b9d-11d2-9014-00c04fa38338")
    IDebugMethodField : public IDebugContainerField
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE EnumParameters( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppParams) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetThis( 
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppClass) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumAllLocals( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppLocals) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumLocals( 
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppLocals) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsCustomAttributeDefined( 
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszCustomAttributeName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumStaticLocals( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppLocals) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGlobalContainer( 
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppClass) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumArguments( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppParams) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugMethodFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugMethodField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugMethodField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugMethodField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugMethodField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugMethodField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugMethodField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugMethodField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugMethodField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugMethodField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugMethodField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugMethodField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugMethodField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        HRESULT ( STDMETHODCALLTYPE *EnumFields )( 
            IDebugMethodField * This,
            /* [in] */ FIELD_KIND dwKindFilter,
            /* [in] */ FIELD_MODIFIERS dwModifiersFilter,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszNameFilter,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *EnumParameters )( 
            IDebugMethodField * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppParams);
        
        HRESULT ( STDMETHODCALLTYPE *GetThis )( 
            IDebugMethodField * This,
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppClass);
        
        HRESULT ( STDMETHODCALLTYPE *EnumAllLocals )( 
            IDebugMethodField * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppLocals);
        
        HRESULT ( STDMETHODCALLTYPE *EnumLocals )( 
            IDebugMethodField * This,
            /* [in] */ __RPC__in_opt IDebugAddress *pAddress,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppLocals);
        
        HRESULT ( STDMETHODCALLTYPE *IsCustomAttributeDefined )( 
            IDebugMethodField * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszCustomAttributeName);
        
        HRESULT ( STDMETHODCALLTYPE *EnumStaticLocals )( 
            IDebugMethodField * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppLocals);
        
        HRESULT ( STDMETHODCALLTYPE *GetGlobalContainer )( 
            IDebugMethodField * This,
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppClass);
        
        HRESULT ( STDMETHODCALLTYPE *EnumArguments )( 
            IDebugMethodField * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppParams);
        
        END_INTERFACE
    } IDebugMethodFieldVtbl;

    interface IDebugMethodField
    {
        CONST_VTBL struct IDebugMethodFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugMethodField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugMethodField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugMethodField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugMethodField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugMethodField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugMethodField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugMethodField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugMethodField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugMethodField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugMethodField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugMethodField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugMethodField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 


#define IDebugMethodField_EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum)	\
    ( (This)->lpVtbl -> EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum) ) 


#define IDebugMethodField_EnumParameters(This,ppParams)	\
    ( (This)->lpVtbl -> EnumParameters(This,ppParams) ) 

#define IDebugMethodField_GetThis(This,ppClass)	\
    ( (This)->lpVtbl -> GetThis(This,ppClass) ) 

#define IDebugMethodField_EnumAllLocals(This,pAddress,ppLocals)	\
    ( (This)->lpVtbl -> EnumAllLocals(This,pAddress,ppLocals) ) 

#define IDebugMethodField_EnumLocals(This,pAddress,ppLocals)	\
    ( (This)->lpVtbl -> EnumLocals(This,pAddress,ppLocals) ) 

#define IDebugMethodField_IsCustomAttributeDefined(This,pszCustomAttributeName)	\
    ( (This)->lpVtbl -> IsCustomAttributeDefined(This,pszCustomAttributeName) ) 

#define IDebugMethodField_EnumStaticLocals(This,ppLocals)	\
    ( (This)->lpVtbl -> EnumStaticLocals(This,ppLocals) ) 

#define IDebugMethodField_GetGlobalContainer(This,ppClass)	\
    ( (This)->lpVtbl -> GetGlobalContainer(This,ppClass) ) 

#define IDebugMethodField_EnumArguments(This,ppParams)	\
    ( (This)->lpVtbl -> EnumArguments(This,ppParams) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugMethodField_INTERFACE_DEFINED__ */


#ifndef __IDebugThisAdjust_INTERFACE_DEFINED__
#define __IDebugThisAdjust_INTERFACE_DEFINED__

/* interface IDebugThisAdjust */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugThisAdjust;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("49473E34-D4CC-49c8-BF62-79A08D2134A5")
    IDebugThisAdjust : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetThisAdjustor( 
            /* [out] */ __RPC__out LONG32 *pThisAdjust) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugThisAdjustVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugThisAdjust * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugThisAdjust * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugThisAdjust * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetThisAdjustor )( 
            IDebugThisAdjust * This,
            /* [out] */ __RPC__out LONG32 *pThisAdjust);
        
        END_INTERFACE
    } IDebugThisAdjustVtbl;

    interface IDebugThisAdjust
    {
        CONST_VTBL struct IDebugThisAdjustVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugThisAdjust_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugThisAdjust_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugThisAdjust_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugThisAdjust_GetThisAdjustor(This,pThisAdjust)	\
    ( (This)->lpVtbl -> GetThisAdjustor(This,pThisAdjust) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugThisAdjust_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_sh_0000_0018 */
/* [local] */ 

typedef 
enum ConstructorMatchOptions
    {	crAll	= 0,
	crNonStatic	= ( crAll + 1 ) ,
	crStatic	= ( crNonStatic + 1 ) 
    } 	CONSTRUCTOR_ENUM;



extern RPC_IF_HANDLE __MIDL_itf_sh_0000_0018_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_sh_0000_0018_v0_0_s_ifspec;

#ifndef __IDebugClassField_INTERFACE_DEFINED__
#define __IDebugClassField_INTERFACE_DEFINED__

/* interface IDebugClassField */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugClassField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34eb5-8b9d-11d2-9014-00c04fa38338")
    IDebugClassField : public IDebugContainerField
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE EnumBaseClasses( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DoesInterfaceExist( 
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszInterfaceName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumNestedClasses( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnclosingClass( 
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppClassField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumInterfacesImplemented( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumConstructors( 
            /* [in] */ CONSTRUCTOR_ENUM cMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultIndexer( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrIndexer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumNestedEnums( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugClassFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugClassField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugClassField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugClassField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugClassField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugClassField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugClassField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugClassField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugClassField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugClassField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugClassField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugClassField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugClassField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        HRESULT ( STDMETHODCALLTYPE *EnumFields )( 
            IDebugClassField * This,
            /* [in] */ FIELD_KIND dwKindFilter,
            /* [in] */ FIELD_MODIFIERS dwModifiersFilter,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszNameFilter,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *EnumBaseClasses )( 
            IDebugClassField * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *DoesInterfaceExist )( 
            IDebugClassField * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszInterfaceName);
        
        HRESULT ( STDMETHODCALLTYPE *EnumNestedClasses )( 
            IDebugClassField * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnclosingClass )( 
            IDebugClassField * This,
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppClassField);
        
        HRESULT ( STDMETHODCALLTYPE *EnumInterfacesImplemented )( 
            IDebugClassField * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *EnumConstructors )( 
            IDebugClassField * This,
            /* [in] */ CONSTRUCTOR_ENUM cMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultIndexer )( 
            IDebugClassField * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrIndexer);
        
        HRESULT ( STDMETHODCALLTYPE *EnumNestedEnums )( 
            IDebugClassField * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        END_INTERFACE
    } IDebugClassFieldVtbl;

    interface IDebugClassField
    {
        CONST_VTBL struct IDebugClassFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugClassField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugClassField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugClassField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugClassField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugClassField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugClassField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugClassField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugClassField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugClassField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugClassField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugClassField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugClassField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 


#define IDebugClassField_EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum)	\
    ( (This)->lpVtbl -> EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum) ) 


#define IDebugClassField_EnumBaseClasses(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumBaseClasses(This,ppEnum) ) 

#define IDebugClassField_DoesInterfaceExist(This,pszInterfaceName)	\
    ( (This)->lpVtbl -> DoesInterfaceExist(This,pszInterfaceName) ) 

#define IDebugClassField_EnumNestedClasses(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumNestedClasses(This,ppEnum) ) 

#define IDebugClassField_GetEnclosingClass(This,ppClassField)	\
    ( (This)->lpVtbl -> GetEnclosingClass(This,ppClassField) ) 

#define IDebugClassField_EnumInterfacesImplemented(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumInterfacesImplemented(This,ppEnum) ) 

#define IDebugClassField_EnumConstructors(This,cMatch,ppEnum)	\
    ( (This)->lpVtbl -> EnumConstructors(This,cMatch,ppEnum) ) 

#define IDebugClassField_GetDefaultIndexer(This,pbstrIndexer)	\
    ( (This)->lpVtbl -> GetDefaultIndexer(This,pbstrIndexer) ) 

#define IDebugClassField_EnumNestedEnums(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumNestedEnums(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugClassField_INTERFACE_DEFINED__ */


#ifndef __IDebugModOpt_INTERFACE_DEFINED__
#define __IDebugModOpt_INTERFACE_DEFINED__

/* interface IDebugModOpt */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugModOpt;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B90282FC-2D44-4050-A7B2-BF3BCFF8BAF1")
    IDebugModOpt : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetModOpts( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) BSTR *rgelt,
            /* [out][in] */ __RPC__inout ULONG *pceltFetched) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugModOptVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugModOpt * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugModOpt * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugModOpt * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetModOpts )( 
            IDebugModOpt * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) BSTR *rgelt,
            /* [out][in] */ __RPC__inout ULONG *pceltFetched);
        
        END_INTERFACE
    } IDebugModOptVtbl;

    interface IDebugModOpt
    {
        CONST_VTBL struct IDebugModOptVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugModOpt_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugModOpt_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugModOpt_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugModOpt_GetModOpts(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> GetModOpts(This,celt,rgelt,pceltFetched) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugModOpt_INTERFACE_DEFINED__ */


#ifndef __IDebugPropertyField_INTERFACE_DEFINED__
#define __IDebugPropertyField_INTERFACE_DEFINED__

/* interface IDebugPropertyField */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugPropertyField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34eb6-8b9d-11d2-9014-00c04fa38338")
    IDebugPropertyField : public IDebugContainerField
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPropertyGetter( 
            /* [out] */ __RPC__deref_out_opt IDebugMethodField **ppField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPropertySetter( 
            /* [out] */ __RPC__deref_out_opt IDebugMethodField **ppField) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugPropertyFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugPropertyField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugPropertyField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugPropertyField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugPropertyField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugPropertyField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugPropertyField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugPropertyField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugPropertyField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugPropertyField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugPropertyField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugPropertyField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugPropertyField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        HRESULT ( STDMETHODCALLTYPE *EnumFields )( 
            IDebugPropertyField * This,
            /* [in] */ FIELD_KIND dwKindFilter,
            /* [in] */ FIELD_MODIFIERS dwModifiersFilter,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszNameFilter,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetPropertyGetter )( 
            IDebugPropertyField * This,
            /* [out] */ __RPC__deref_out_opt IDebugMethodField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetPropertySetter )( 
            IDebugPropertyField * This,
            /* [out] */ __RPC__deref_out_opt IDebugMethodField **ppField);
        
        END_INTERFACE
    } IDebugPropertyFieldVtbl;

    interface IDebugPropertyField
    {
        CONST_VTBL struct IDebugPropertyFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugPropertyField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugPropertyField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugPropertyField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugPropertyField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugPropertyField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugPropertyField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugPropertyField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugPropertyField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugPropertyField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugPropertyField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugPropertyField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugPropertyField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 


#define IDebugPropertyField_EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum)	\
    ( (This)->lpVtbl -> EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum) ) 


#define IDebugPropertyField_GetPropertyGetter(This,ppField)	\
    ( (This)->lpVtbl -> GetPropertyGetter(This,ppField) ) 

#define IDebugPropertyField_GetPropertySetter(This,ppField)	\
    ( (This)->lpVtbl -> GetPropertySetter(This,ppField) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugPropertyField_INTERFACE_DEFINED__ */


#ifndef __IDebugArrayField_INTERFACE_DEFINED__
#define __IDebugArrayField_INTERFACE_DEFINED__

/* interface IDebugArrayField */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugArrayField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34eb7-8b9d-11d2-9014-00c04fa38338")
    IDebugArrayField : public IDebugContainerField
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNumberOfElements( 
            /* [out] */ __RPC__out DWORD *pdwNumElements) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElementType( 
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRank( 
            /* [out] */ __RPC__out DWORD *pdwRank) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugArrayFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugArrayField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugArrayField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugArrayField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugArrayField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugArrayField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugArrayField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugArrayField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugArrayField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugArrayField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugArrayField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugArrayField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugArrayField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        HRESULT ( STDMETHODCALLTYPE *EnumFields )( 
            IDebugArrayField * This,
            /* [in] */ FIELD_KIND dwKindFilter,
            /* [in] */ FIELD_MODIFIERS dwModifiersFilter,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszNameFilter,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberOfElements )( 
            IDebugArrayField * This,
            /* [out] */ __RPC__out DWORD *pdwNumElements);
        
        HRESULT ( STDMETHODCALLTYPE *GetElementType )( 
            IDebugArrayField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetRank )( 
            IDebugArrayField * This,
            /* [out] */ __RPC__out DWORD *pdwRank);
        
        END_INTERFACE
    } IDebugArrayFieldVtbl;

    interface IDebugArrayField
    {
        CONST_VTBL struct IDebugArrayFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugArrayField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugArrayField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugArrayField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugArrayField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugArrayField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugArrayField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugArrayField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugArrayField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugArrayField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugArrayField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugArrayField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugArrayField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 


#define IDebugArrayField_EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum)	\
    ( (This)->lpVtbl -> EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum) ) 


#define IDebugArrayField_GetNumberOfElements(This,pdwNumElements)	\
    ( (This)->lpVtbl -> GetNumberOfElements(This,pdwNumElements) ) 

#define IDebugArrayField_GetElementType(This,ppType)	\
    ( (This)->lpVtbl -> GetElementType(This,ppType) ) 

#define IDebugArrayField_GetRank(This,pdwRank)	\
    ( (This)->lpVtbl -> GetRank(This,pdwRank) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugArrayField_INTERFACE_DEFINED__ */


#ifndef __IDebugPointerField_INTERFACE_DEFINED__
#define __IDebugPointerField_INTERFACE_DEFINED__

/* interface IDebugPointerField */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugPointerField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34eb8-8b9d-11d2-9014-00c04fa38338")
    IDebugPointerField : public IDebugContainerField
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDereferencedField( 
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugPointerFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugPointerField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugPointerField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugPointerField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugPointerField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugPointerField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugPointerField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugPointerField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugPointerField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugPointerField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugPointerField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugPointerField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugPointerField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        HRESULT ( STDMETHODCALLTYPE *EnumFields )( 
            IDebugPointerField * This,
            /* [in] */ FIELD_KIND dwKindFilter,
            /* [in] */ FIELD_MODIFIERS dwModifiersFilter,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszNameFilter,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetDereferencedField )( 
            IDebugPointerField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        END_INTERFACE
    } IDebugPointerFieldVtbl;

    interface IDebugPointerField
    {
        CONST_VTBL struct IDebugPointerFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugPointerField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugPointerField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugPointerField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugPointerField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugPointerField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugPointerField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugPointerField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugPointerField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugPointerField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugPointerField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugPointerField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugPointerField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 


#define IDebugPointerField_EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum)	\
    ( (This)->lpVtbl -> EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum) ) 


#define IDebugPointerField_GetDereferencedField(This,ppField)	\
    ( (This)->lpVtbl -> GetDereferencedField(This,ppField) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugPointerField_INTERFACE_DEFINED__ */


#ifndef __IDebugEnumField_INTERFACE_DEFINED__
#define __IDebugEnumField_INTERFACE_DEFINED__

/* interface IDebugEnumField */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugEnumField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34eb9-8b9d-11d2-9014-00c04fa38338")
    IDebugEnumField : public IDebugContainerField
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetUnderlyingSymbol( 
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStringFromValue( 
            /* [in] */ ULONGLONG value,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetValueFromString( 
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszValue,
            /* [out] */ __RPC__out ULONGLONG *pvalue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetValueFromStringCaseInsensitive( 
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszValue,
            /* [out] */ __RPC__out ULONGLONG *pvalue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugEnumFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugEnumField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugEnumField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugEnumField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugEnumField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugEnumField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugEnumField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugEnumField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugEnumField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugEnumField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugEnumField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugEnumField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugEnumField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        HRESULT ( STDMETHODCALLTYPE *EnumFields )( 
            IDebugEnumField * This,
            /* [in] */ FIELD_KIND dwKindFilter,
            /* [in] */ FIELD_MODIFIERS dwModifiersFilter,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszNameFilter,
            /* [in] */ NAME_MATCH nameMatch,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnderlyingSymbol )( 
            IDebugEnumField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringFromValue )( 
            IDebugEnumField * This,
            /* [in] */ ULONGLONG value,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetValueFromString )( 
            IDebugEnumField * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszValue,
            /* [out] */ __RPC__out ULONGLONG *pvalue);
        
        HRESULT ( STDMETHODCALLTYPE *GetValueFromStringCaseInsensitive )( 
            IDebugEnumField * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszValue,
            /* [out] */ __RPC__out ULONGLONG *pvalue);
        
        END_INTERFACE
    } IDebugEnumFieldVtbl;

    interface IDebugEnumField
    {
        CONST_VTBL struct IDebugEnumFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugEnumField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugEnumField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugEnumField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugEnumField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugEnumField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugEnumField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugEnumField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugEnumField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugEnumField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugEnumField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugEnumField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugEnumField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 


#define IDebugEnumField_EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum)	\
    ( (This)->lpVtbl -> EnumFields(This,dwKindFilter,dwModifiersFilter,pszNameFilter,nameMatch,ppEnum) ) 


#define IDebugEnumField_GetUnderlyingSymbol(This,ppField)	\
    ( (This)->lpVtbl -> GetUnderlyingSymbol(This,ppField) ) 

#define IDebugEnumField_GetStringFromValue(This,value,pbstrValue)	\
    ( (This)->lpVtbl -> GetStringFromValue(This,value,pbstrValue) ) 

#define IDebugEnumField_GetValueFromString(This,pszValue,pvalue)	\
    ( (This)->lpVtbl -> GetValueFromString(This,pszValue,pvalue) ) 

#define IDebugEnumField_GetValueFromStringCaseInsensitive(This,pszValue,pvalue)	\
    ( (This)->lpVtbl -> GetValueFromStringCaseInsensitive(This,pszValue,pvalue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugEnumField_INTERFACE_DEFINED__ */


#ifndef __IDebugBitField_INTERFACE_DEFINED__
#define __IDebugBitField_INTERFACE_DEFINED__

/* interface IDebugBitField */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugBitField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34eba-8b9d-11d2-9014-00c04fa38338")
    IDebugBitField : public IDebugField
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStart( 
            /* [out] */ __RPC__out DWORD *pdwBitOffset) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugBitFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugBitField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugBitField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugBitField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugBitField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugBitField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugBitField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugBitField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugBitField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugBitField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugBitField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugBitField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugBitField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetStart )( 
            IDebugBitField * This,
            /* [out] */ __RPC__out DWORD *pdwBitOffset);
        
        END_INTERFACE
    } IDebugBitFieldVtbl;

    interface IDebugBitField
    {
        CONST_VTBL struct IDebugBitFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugBitField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugBitField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugBitField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugBitField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugBitField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugBitField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugBitField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugBitField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugBitField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugBitField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugBitField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugBitField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 


#define IDebugBitField_GetStart(This,pdwBitOffset)	\
    ( (This)->lpVtbl -> GetStart(This,pdwBitOffset) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugBitField_INTERFACE_DEFINED__ */


#ifndef __IDebugDynamicField_INTERFACE_DEFINED__
#define __IDebugDynamicField_INTERFACE_DEFINED__

/* interface IDebugDynamicField */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugDynamicField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B5A2A5EA-D5AB-11d2-9033-00C04FA302A1")
    IDebugDynamicField : public IDebugField
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IDebugDynamicFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugDynamicField * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugDynamicField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugDynamicField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugDynamicField * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugDynamicField * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugDynamicField * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugDynamicField * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugDynamicField * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugDynamicField * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugDynamicField * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugDynamicField * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugDynamicField * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        END_INTERFACE
    } IDebugDynamicFieldVtbl;

    interface IDebugDynamicField
    {
        CONST_VTBL struct IDebugDynamicFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugDynamicField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugDynamicField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugDynamicField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugDynamicField_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugDynamicField_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugDynamicField_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugDynamicField_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugDynamicField_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugDynamicField_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugDynamicField_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugDynamicField_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugDynamicField_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugDynamicField_INTERFACE_DEFINED__ */


#ifndef __IDebugDynamicFieldCOMPlus_INTERFACE_DEFINED__
#define __IDebugDynamicFieldCOMPlus_INTERFACE_DEFINED__

/* interface IDebugDynamicFieldCOMPlus */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugDynamicFieldCOMPlus;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B5B20820-E233-11d2-9037-00C04FA302A1")
    IDebugDynamicFieldCOMPlus : public IDebugDynamicField
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTypeFromPrimitive( 
            /* [in] */ DWORD dwCorElementType,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTypeFromTypeDef( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ _mdToken tokClass,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugDynamicFieldCOMPlusVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugDynamicFieldCOMPlus * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugDynamicFieldCOMPlus * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugDynamicFieldCOMPlus * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IDebugDynamicFieldCOMPlus * This,
            /* [in] */ FIELD_INFO_FIELDS dwFields,
            /* [out] */ __RPC__out FIELD_INFO *pFieldInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetKind )( 
            IDebugDynamicFieldCOMPlus * This,
            /* [out] */ __RPC__out FIELD_KIND *pdwKind);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IDebugDynamicFieldCOMPlus * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainer )( 
            IDebugDynamicFieldCOMPlus * This,
            /* [out] */ __RPC__deref_out_opt IDebugContainerField **ppContainerField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugDynamicFieldCOMPlus * This,
            /* [out] */ __RPC__deref_out_opt IDebugAddress **ppAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IDebugDynamicFieldCOMPlus * This,
            /* [out] */ __RPC__out DWORD *pdwSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedInfo )( 
            IDebugDynamicFieldCOMPlus * This,
            /* [in] */ __RPC__in REFGUID guidExtendedInfo,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(*pdwLen, *pdwLen) BYTE **prgBuffer,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *Equal )( 
            IDebugDynamicFieldCOMPlus * This,
            /* [in] */ __RPC__in_opt IDebugField *pField);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDebugDynamicFieldCOMPlus * This,
            /* [out] */ __RPC__out TYPE_INFO *pTypeInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeFromPrimitive )( 
            IDebugDynamicFieldCOMPlus * This,
            /* [in] */ DWORD dwCorElementType,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeFromTypeDef )( 
            IDebugDynamicFieldCOMPlus * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ _mdToken tokClass,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppType);
        
        END_INTERFACE
    } IDebugDynamicFieldCOMPlusVtbl;

    interface IDebugDynamicFieldCOMPlus
    {
        CONST_VTBL struct IDebugDynamicFieldCOMPlusVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugDynamicFieldCOMPlus_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugDynamicFieldCOMPlus_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugDynamicFieldCOMPlus_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugDynamicFieldCOMPlus_GetInfo(This,dwFields,pFieldInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,dwFields,pFieldInfo) ) 

#define IDebugDynamicFieldCOMPlus_GetKind(This,pdwKind)	\
    ( (This)->lpVtbl -> GetKind(This,pdwKind) ) 

#define IDebugDynamicFieldCOMPlus_GetType(This,ppType)	\
    ( (This)->lpVtbl -> GetType(This,ppType) ) 

#define IDebugDynamicFieldCOMPlus_GetContainer(This,ppContainerField)	\
    ( (This)->lpVtbl -> GetContainer(This,ppContainerField) ) 

#define IDebugDynamicFieldCOMPlus_GetAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,ppAddress) ) 

#define IDebugDynamicFieldCOMPlus_GetSize(This,pdwSize)	\
    ( (This)->lpVtbl -> GetSize(This,pdwSize) ) 

#define IDebugDynamicFieldCOMPlus_GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen)	\
    ( (This)->lpVtbl -> GetExtendedInfo(This,guidExtendedInfo,prgBuffer,pdwLen) ) 

#define IDebugDynamicFieldCOMPlus_Equal(This,pField)	\
    ( (This)->lpVtbl -> Equal(This,pField) ) 

#define IDebugDynamicFieldCOMPlus_GetTypeInfo(This,pTypeInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,pTypeInfo) ) 



#define IDebugDynamicFieldCOMPlus_GetTypeFromPrimitive(This,dwCorElementType,ppType)	\
    ( (This)->lpVtbl -> GetTypeFromPrimitive(This,dwCorElementType,ppType) ) 

#define IDebugDynamicFieldCOMPlus_GetTypeFromTypeDef(This,ulAppDomainID,guidModule,tokClass,ppType)	\
    ( (This)->lpVtbl -> GetTypeFromTypeDef(This,ulAppDomainID,guidModule,tokClass,ppType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugDynamicFieldCOMPlus_INTERFACE_DEFINED__ */


#ifndef __IDebugEngineSymbolProviderServices_INTERFACE_DEFINED__
#define __IDebugEngineSymbolProviderServices_INTERFACE_DEFINED__

/* interface IDebugEngineSymbolProviderServices */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugEngineSymbolProviderServices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83919262-ACD6-11d2-9028-00C04FA302A1")
    IDebugEngineSymbolProviderServices : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE EnumCodeContexts( 
            /* [length_is][size_is][in] */ __RPC__in_ecount_part(celtAddresses, celtAddresses) IDebugAddress **rgpAddresses,
            /* [in] */ DWORD celtAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugCodeContexts2 **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugEngineSymbolProviderServicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugEngineSymbolProviderServices * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugEngineSymbolProviderServices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugEngineSymbolProviderServices * This);
        
        HRESULT ( STDMETHODCALLTYPE *EnumCodeContexts )( 
            IDebugEngineSymbolProviderServices * This,
            /* [length_is][size_is][in] */ __RPC__in_ecount_part(celtAddresses, celtAddresses) IDebugAddress **rgpAddresses,
            /* [in] */ DWORD celtAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugCodeContexts2 **ppEnum);
        
        END_INTERFACE
    } IDebugEngineSymbolProviderServicesVtbl;

    interface IDebugEngineSymbolProviderServices
    {
        CONST_VTBL struct IDebugEngineSymbolProviderServicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugEngineSymbolProviderServices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugEngineSymbolProviderServices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugEngineSymbolProviderServices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugEngineSymbolProviderServices_EnumCodeContexts(This,rgpAddresses,celtAddresses,ppEnum)	\
    ( (This)->lpVtbl -> EnumCodeContexts(This,rgpAddresses,celtAddresses,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugEngineSymbolProviderServices_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_sh_0000_0028 */
/* [local] */ 

typedef struct tagGUID_MODULES
    {
    DWORD ctResolvedModules;
    GUID *pguidResolvedModules;
    } 	RESOLVED_MODULES;



extern RPC_IF_HANDLE __MIDL_itf_sh_0000_0028_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_sh_0000_0028_v0_0_s_ifspec;

#ifndef __IDebugEngineSymbolProviderServices2_INTERFACE_DEFINED__
#define __IDebugEngineSymbolProviderServices2_INTERFACE_DEFINED__

/* interface IDebugEngineSymbolProviderServices2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugEngineSymbolProviderServices2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D318E959-22AB-4eea-9A06-962B11AFDC29")
    IDebugEngineSymbolProviderServices2 : public IDebugEngineSymbolProviderServices
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ResolveAssembly( 
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ DWORD tokAssemblyReference,
            /* [out] */ __RPC__out RESOLVED_MODULES *pResolvedModules) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEngineProvidedDocumentPrefix( 
            /* [out] */ __RPC__deref_out_opt BSTR *bstrDocPrefix) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugEngineSymbolProviderServices2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugEngineSymbolProviderServices2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugEngineSymbolProviderServices2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugEngineSymbolProviderServices2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *EnumCodeContexts )( 
            IDebugEngineSymbolProviderServices2 * This,
            /* [length_is][size_is][in] */ __RPC__in_ecount_part(celtAddresses, celtAddresses) IDebugAddress **rgpAddresses,
            /* [in] */ DWORD celtAddresses,
            /* [out] */ __RPC__deref_out_opt IEnumDebugCodeContexts2 **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *ResolveAssembly )( 
            IDebugEngineSymbolProviderServices2 * This,
            /* [in] */ ULONG32 ulAppDomainID,
            /* [in] */ GUID guidModule,
            /* [in] */ DWORD tokAssemblyReference,
            /* [out] */ __RPC__out RESOLVED_MODULES *pResolvedModules);
        
        HRESULT ( STDMETHODCALLTYPE *GetEngineProvidedDocumentPrefix )( 
            IDebugEngineSymbolProviderServices2 * This,
            /* [out] */ __RPC__deref_out_opt BSTR *bstrDocPrefix);
        
        END_INTERFACE
    } IDebugEngineSymbolProviderServices2Vtbl;

    interface IDebugEngineSymbolProviderServices2
    {
        CONST_VTBL struct IDebugEngineSymbolProviderServices2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugEngineSymbolProviderServices2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugEngineSymbolProviderServices2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugEngineSymbolProviderServices2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugEngineSymbolProviderServices2_EnumCodeContexts(This,rgpAddresses,celtAddresses,ppEnum)	\
    ( (This)->lpVtbl -> EnumCodeContexts(This,rgpAddresses,celtAddresses,ppEnum) ) 


#define IDebugEngineSymbolProviderServices2_ResolveAssembly(This,ulAppDomainID,guidModule,tokAssemblyReference,pResolvedModules)	\
    ( (This)->lpVtbl -> ResolveAssembly(This,ulAppDomainID,guidModule,tokAssemblyReference,pResolvedModules) ) 

#define IDebugEngineSymbolProviderServices2_GetEngineProvidedDocumentPrefix(This,bstrDocPrefix)	\
    ( (This)->lpVtbl -> GetEngineProvidedDocumentPrefix(This,bstrDocPrefix) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugEngineSymbolProviderServices2_INTERFACE_DEFINED__ */


#ifndef __IDebugAddress_INTERFACE_DEFINED__
#define __IDebugAddress_INTERFACE_DEFINED__

/* interface IDebugAddress */
/* [unique][uuid][object] */ 


enum enum_ADDRESS_KIND
    {	ADDRESS_KIND_NATIVE	= 0x1,
	ADDRESS_KIND_UNMANAGED_THIS_RELATIVE	= 0x2,
	ADDRESS_KIND_UNMANAGED_PHYSICAL	= 0x5,
	ADDRESS_KIND_METADATA_METHOD	= 0x10,
	ADDRESS_KIND_METADATA_FIELD	= 0x11,
	ADDRESS_KIND_METADATA_LOCAL	= 0x12,
	ADDRESS_KIND_METADATA_PARAM	= 0x13,
	ADDRESS_KIND_METADATA_ARRAYELEM	= 0x14,
	ADDRESS_KIND_METADATA_RETVAL	= 0x15
    } ;
typedef DWORD ADDRESS_KIND;

typedef struct _tagNATIVE_ADDRESS
    {
    DWORD unknown;
    } 	NATIVE_ADDRESS;

typedef struct _tagUNMANAGED_THIS_RELATIVE
    {
    DWORD dwOffset;
    DWORD dwBitOffset;
    DWORD dwBitLength;
    } 	UNMANAGED_ADDRESS_THIS_RELATIVE;

typedef struct _tagUNMANAGED_ADDRESS_PHYSICAL
    {
    ULONGLONG offset;
    } 	UNMANAGED_ADDRESS_PHYSICAL;

typedef struct _tagMETADATA_ADDRESS_METHOD
    {
    _mdToken tokMethod;
    DWORD dwOffset;
    DWORD dwVersion;
    } 	METADATA_ADDRESS_METHOD;

typedef struct _tagMETADATA_ADDRESS_FIELD
    {
    _mdToken tokField;
    } 	METADATA_ADDRESS_FIELD;

typedef struct _tagMETADATA_ADDRESS_LOCAL
    {
    _mdToken tokMethod;
    IUnknown *pLocal;
    DWORD dwIndex;
    } 	METADATA_ADDRESS_LOCAL;

typedef struct _tagMETADATA_ADDRESS_PARAM
    {
    _mdToken tokMethod;
    _mdToken tokParam;
    DWORD dwIndex;
    } 	METADATA_ADDRESS_PARAM;

typedef struct _tagMETADATA_ADDRESS_ARRAYELEM
    {
    _mdToken tokMethod;
    DWORD dwIndex;
    } 	METADATA_ADDRESS_ARRAYELEM;

typedef struct _tagMETADATA_ADDRESS_RETVAL
    {
    _mdToken tokMethod;
    DWORD dwCorType;
    DWORD dwSigSize;
    BYTE rgSig[ 10 ];
    } 	METADATA_ADDRESS_RETVAL;

typedef struct _tagDEBUG_ADDRESS_UNION
    {
    ADDRESS_KIND dwKind;
    /* [switch_type] */ union __MIDL_IDebugAddress_0001
        {
        NATIVE_ADDRESS addrNative;
        UNMANAGED_ADDRESS_THIS_RELATIVE addrThisRel;
        UNMANAGED_ADDRESS_PHYSICAL addrUPhysical;
        METADATA_ADDRESS_METHOD addrMethod;
        METADATA_ADDRESS_FIELD addrField;
        METADATA_ADDRESS_LOCAL addrLocal;
        METADATA_ADDRESS_PARAM addrParam;
        METADATA_ADDRESS_ARRAYELEM addrArrayElem;
        METADATA_ADDRESS_RETVAL addrRetVal;
        DWORD unused;
        } 	addr;
    } 	DEBUG_ADDRESS_UNION;

typedef struct _tagDEBUG_ADDRESS
    {
    ULONG32 ulAppDomainID;
    GUID guidModule;
    _mdToken tokClass;
    DEBUG_ADDRESS_UNION addr;
    } 	DEBUG_ADDRESS;


EXTERN_C const IID IID_IDebugAddress;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34ebb-8b9d-11d2-9014-00c04fa38338")
    IDebugAddress : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAddress( 
            /* [out] */ __RPC__out DEBUG_ADDRESS *pAddress) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugAddressVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugAddress * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugAddress * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugAddress * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugAddress * This,
            /* [out] */ __RPC__out DEBUG_ADDRESS *pAddress);
        
        END_INTERFACE
    } IDebugAddressVtbl;

    interface IDebugAddress
    {
        CONST_VTBL struct IDebugAddressVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugAddress_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugAddress_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugAddress_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugAddress_GetAddress(This,pAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,pAddress) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugAddress_INTERFACE_DEFINED__ */


#ifndef __IDebugAddress2_INTERFACE_DEFINED__
#define __IDebugAddress2_INTERFACE_DEFINED__

/* interface IDebugAddress2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugAddress2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("877A0DA6-A43E-4046-9BE3-F916AFF4FA7B")
    IDebugAddress2 : public IDebugAddress
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetProcessID( 
            /* [out] */ __RPC__out DWORD *pProcID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugAddress2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugAddress2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugAddress2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugAddress2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddress )( 
            IDebugAddress2 * This,
            /* [out] */ __RPC__out DEBUG_ADDRESS *pAddress);
        
        HRESULT ( STDMETHODCALLTYPE *GetProcessID )( 
            IDebugAddress2 * This,
            /* [out] */ __RPC__out DWORD *pProcID);
        
        END_INTERFACE
    } IDebugAddress2Vtbl;

    interface IDebugAddress2
    {
        CONST_VTBL struct IDebugAddress2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugAddress2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugAddress2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugAddress2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugAddress2_GetAddress(This,pAddress)	\
    ( (This)->lpVtbl -> GetAddress(This,pAddress) ) 


#define IDebugAddress2_GetProcessID(This,pProcID)	\
    ( (This)->lpVtbl -> GetProcessID(This,pProcID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugAddress2_INTERFACE_DEFINED__ */


#ifndef __IEnumDebugFields_INTERFACE_DEFINED__
#define __IEnumDebugFields_INTERFACE_DEFINED__

/* interface IEnumDebugFields */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IEnumDebugFields;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34ebc-8b9d-11d2-9014-00c04fa38338")
    IEnumDebugFields : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IDebugField **rgelt,
            /* [out][in] */ __RPC__inout ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *pcelt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumDebugFieldsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumDebugFields * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumDebugFields * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumDebugFields * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumDebugFields * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IDebugField **rgelt,
            /* [out][in] */ __RPC__inout ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumDebugFields * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumDebugFields * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumDebugFields * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugFields **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IEnumDebugFields * This,
            /* [out] */ __RPC__out ULONG *pcelt);
        
        END_INTERFACE
    } IEnumDebugFieldsVtbl;

    interface IEnumDebugFields
    {
        CONST_VTBL struct IEnumDebugFieldsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumDebugFields_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumDebugFields_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumDebugFields_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumDebugFields_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumDebugFields_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumDebugFields_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumDebugFields_Clone(This,ppEnum)	\
    ( (This)->lpVtbl -> Clone(This,ppEnum) ) 

#define IEnumDebugFields_GetCount(This,pcelt)	\
    ( (This)->lpVtbl -> GetCount(This,pcelt) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumDebugFields_INTERFACE_DEFINED__ */


#ifndef __IEnumDebugAddresses_INTERFACE_DEFINED__
#define __IEnumDebugAddresses_INTERFACE_DEFINED__

/* interface IEnumDebugAddresses */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IEnumDebugAddresses;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2e34ebd-8b9d-11d2-9014-00c04fa38338")
    IEnumDebugAddresses : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IDebugAddress **rgelt,
            /* [out][in] */ __RPC__inout ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *pcelt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumDebugAddressesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumDebugAddresses * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumDebugAddresses * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumDebugAddresses * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumDebugAddresses * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IDebugAddress **rgelt,
            /* [out][in] */ __RPC__inout ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumDebugAddresses * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumDebugAddresses * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumDebugAddresses * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugAddresses **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IEnumDebugAddresses * This,
            /* [out] */ __RPC__out ULONG *pcelt);
        
        END_INTERFACE
    } IEnumDebugAddressesVtbl;

    interface IEnumDebugAddresses
    {
        CONST_VTBL struct IEnumDebugAddressesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumDebugAddresses_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumDebugAddresses_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumDebugAddresses_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumDebugAddresses_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumDebugAddresses_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumDebugAddresses_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumDebugAddresses_Clone(This,ppEnum)	\
    ( (This)->lpVtbl -> Clone(This,ppEnum) ) 

#define IEnumDebugAddresses_GetCount(This,pcelt)	\
    ( (This)->lpVtbl -> GetCount(This,pcelt) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumDebugAddresses_INTERFACE_DEFINED__ */


#ifndef __IDebugCustomAttributeQuery_INTERFACE_DEFINED__
#define __IDebugCustomAttributeQuery_INTERFACE_DEFINED__

/* interface IDebugCustomAttributeQuery */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugCustomAttributeQuery;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DFD37B5A-1E3A-4f15-8098-220ABADC620B")
    IDebugCustomAttributeQuery : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE IsCustomAttributeDefined( 
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszCustomAttributeName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCustomAttributeByName( 
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszCustomAttributeName,
            /* [length_is][size_is][out][in] */ __RPC__inout_ecount_part(*pdwLen, *pdwLen) BYTE *ppBlob,
            /* [out][in] */ __RPC__inout DWORD *pdwLen) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugCustomAttributeQueryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugCustomAttributeQuery * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugCustomAttributeQuery * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugCustomAttributeQuery * This);
        
        HRESULT ( STDMETHODCALLTYPE *IsCustomAttributeDefined )( 
            IDebugCustomAttributeQuery * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszCustomAttributeName);
        
        HRESULT ( STDMETHODCALLTYPE *GetCustomAttributeByName )( 
            IDebugCustomAttributeQuery * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszCustomAttributeName,
            /* [length_is][size_is][out][in] */ __RPC__inout_ecount_part(*pdwLen, *pdwLen) BYTE *ppBlob,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        END_INTERFACE
    } IDebugCustomAttributeQueryVtbl;

    interface IDebugCustomAttributeQuery
    {
        CONST_VTBL struct IDebugCustomAttributeQueryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugCustomAttributeQuery_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugCustomAttributeQuery_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugCustomAttributeQuery_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugCustomAttributeQuery_IsCustomAttributeDefined(This,pszCustomAttributeName)	\
    ( (This)->lpVtbl -> IsCustomAttributeDefined(This,pszCustomAttributeName) ) 

#define IDebugCustomAttributeQuery_GetCustomAttributeByName(This,pszCustomAttributeName,ppBlob,pdwLen)	\
    ( (This)->lpVtbl -> GetCustomAttributeByName(This,pszCustomAttributeName,ppBlob,pdwLen) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugCustomAttributeQuery_INTERFACE_DEFINED__ */


#ifndef __IDebugCustomAttribute_INTERFACE_DEFINED__
#define __IDebugCustomAttribute_INTERFACE_DEFINED__

/* interface IDebugCustomAttribute */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugCustomAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A3A37C5E-8D71-487d-A9E1-B9A1B3BA9CBB")
    IDebugCustomAttribute : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetParentField( 
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAttributeTypeField( 
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppCAType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetName( 
            /* [out] */ __RPC__deref_out_opt BSTR *bstrName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAttributeBytes( 
            /* [length_is][size_is][out][in] */ __RPC__inout_ecount_part(*pdwLen, *pdwLen) BYTE *ppBlob,
            /* [out][in] */ __RPC__inout DWORD *pdwLen) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugCustomAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugCustomAttribute * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugCustomAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugCustomAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetParentField )( 
            IDebugCustomAttribute * This,
            /* [out] */ __RPC__deref_out_opt IDebugField **ppField);
        
        HRESULT ( STDMETHODCALLTYPE *GetAttributeTypeField )( 
            IDebugCustomAttribute * This,
            /* [out] */ __RPC__deref_out_opt IDebugClassField **ppCAType);
        
        HRESULT ( STDMETHODCALLTYPE *GetName )( 
            IDebugCustomAttribute * This,
            /* [out] */ __RPC__deref_out_opt BSTR *bstrName);
        
        HRESULT ( STDMETHODCALLTYPE *GetAttributeBytes )( 
            IDebugCustomAttribute * This,
            /* [length_is][size_is][out][in] */ __RPC__inout_ecount_part(*pdwLen, *pdwLen) BYTE *ppBlob,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        END_INTERFACE
    } IDebugCustomAttributeVtbl;

    interface IDebugCustomAttribute
    {
        CONST_VTBL struct IDebugCustomAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugCustomAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugCustomAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugCustomAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugCustomAttribute_GetParentField(This,ppField)	\
    ( (This)->lpVtbl -> GetParentField(This,ppField) ) 

#define IDebugCustomAttribute_GetAttributeTypeField(This,ppCAType)	\
    ( (This)->lpVtbl -> GetAttributeTypeField(This,ppCAType) ) 

#define IDebugCustomAttribute_GetName(This,bstrName)	\
    ( (This)->lpVtbl -> GetName(This,bstrName) ) 

#define IDebugCustomAttribute_GetAttributeBytes(This,ppBlob,pdwLen)	\
    ( (This)->lpVtbl -> GetAttributeBytes(This,ppBlob,pdwLen) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugCustomAttribute_INTERFACE_DEFINED__ */


#ifndef __IDebugCustomAttributeQuery2_INTERFACE_DEFINED__
#define __IDebugCustomAttributeQuery2_INTERFACE_DEFINED__

/* interface IDebugCustomAttributeQuery2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugCustomAttributeQuery2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7D257F89-EF56-43c4-80FF-C89B064E4680")
    IDebugCustomAttributeQuery2 : public IDebugCustomAttributeQuery
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE EnumCustomAttributes( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugCustomAttributes **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugCustomAttributeQuery2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugCustomAttributeQuery2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugCustomAttributeQuery2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugCustomAttributeQuery2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *IsCustomAttributeDefined )( 
            IDebugCustomAttributeQuery2 * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszCustomAttributeName);
        
        HRESULT ( STDMETHODCALLTYPE *GetCustomAttributeByName )( 
            IDebugCustomAttributeQuery2 * This,
            /* [full][in] */ __RPC__in_opt LPCOLESTR pszCustomAttributeName,
            /* [length_is][size_is][out][in] */ __RPC__inout_ecount_part(*pdwLen, *pdwLen) BYTE *ppBlob,
            /* [out][in] */ __RPC__inout DWORD *pdwLen);
        
        HRESULT ( STDMETHODCALLTYPE *EnumCustomAttributes )( 
            IDebugCustomAttributeQuery2 * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugCustomAttributes **ppEnum);
        
        END_INTERFACE
    } IDebugCustomAttributeQuery2Vtbl;

    interface IDebugCustomAttributeQuery2
    {
        CONST_VTBL struct IDebugCustomAttributeQuery2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugCustomAttributeQuery2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugCustomAttributeQuery2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugCustomAttributeQuery2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugCustomAttributeQuery2_IsCustomAttributeDefined(This,pszCustomAttributeName)	\
    ( (This)->lpVtbl -> IsCustomAttributeDefined(This,pszCustomAttributeName) ) 

#define IDebugCustomAttributeQuery2_GetCustomAttributeByName(This,pszCustomAttributeName,ppBlob,pdwLen)	\
    ( (This)->lpVtbl -> GetCustomAttributeByName(This,pszCustomAttributeName,ppBlob,pdwLen) ) 


#define IDebugCustomAttributeQuery2_EnumCustomAttributes(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumCustomAttributes(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugCustomAttributeQuery2_INTERFACE_DEFINED__ */


#ifndef __IEnumDebugCustomAttributes_INTERFACE_DEFINED__
#define __IEnumDebugCustomAttributes_INTERFACE_DEFINED__

/* interface IEnumDebugCustomAttributes */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IEnumDebugCustomAttributes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D9089EF0-22D1-40b9-81D6-47CBDA9DC32C")
    IEnumDebugCustomAttributes : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IDebugCustomAttribute **rgelt,
            /* [out][in] */ __RPC__inout ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IEnumDebugCustomAttributes **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *pcelt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumDebugCustomAttributesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumDebugCustomAttributes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumDebugCustomAttributes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumDebugCustomAttributes * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumDebugCustomAttributes * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IDebugCustomAttribute **rgelt,
            /* [out][in] */ __RPC__inout ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumDebugCustomAttributes * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumDebugCustomAttributes * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumDebugCustomAttributes * This,
            /* [out] */ __RPC__deref_out_opt IEnumDebugCustomAttributes **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IEnumDebugCustomAttributes * This,
            /* [out] */ __RPC__out ULONG *pcelt);
        
        END_INTERFACE
    } IEnumDebugCustomAttributesVtbl;

    interface IEnumDebugCustomAttributes
    {
        CONST_VTBL struct IEnumDebugCustomAttributesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumDebugCustomAttributes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumDebugCustomAttributes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumDebugCustomAttributes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumDebugCustomAttributes_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumDebugCustomAttributes_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumDebugCustomAttributes_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumDebugCustomAttributes_Clone(This,ppEnum)	\
    ( (This)->lpVtbl -> Clone(This,ppEnum) ) 

#define IEnumDebugCustomAttributes_GetCount(This,pcelt)	\
    ( (This)->lpVtbl -> GetCount(This,pcelt) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumDebugCustomAttributes_INTERFACE_DEFINED__ */



#ifndef __SHLib_LIBRARY_DEFINED__
#define __SHLib_LIBRARY_DEFINED__

/* library SHLib */
/* [uuid] */ 


EXTERN_C const IID LIBID_SHLib;

EXTERN_C const CLSID CLSID_SHManaged;

#ifdef __cplusplus

class DECLSPEC_UUID("c2e34ebf-8b9d-11d2-9014-00c04fa38338")
SHManaged;
#endif
#endif /* __SHLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\SCGuids.h ===
/*-----------------------------------------------------------------------------
Microsoft VSEE

Copyright 1995-2000 Microsoft Corporation. All Rights Reserved.

@doc
@module VseeGuids.h - Guids for VSEE services/interfaces |
This is included by .idl files to define guids for VSEE services/interfaces.
These are the interfaces related to the shell SDK, i.e. in idl/vs

@owner Source Control Integration Team
-----------------------------------------------------------------------------*/
#pragma once

#ifdef _WIN64

#define uuid_IVsSccManager2							53474C4D-B927-4320-B9DA-13D2CB3EA93B
#define uuid_IVsSccManager3							53474C4D-A152-4757-868A-2A7D0F2E5580
#define uuid_IVsSccProject2							53474C4D-AC92-49AC-9172-603E01FA483A
#define uuid_IVsQueryEditQuerySave2					53474C4D-5984-11d3-a606-005004775ab1
#define uuid_IVsQueryEditQuerySave3					53474C4D-6279-30c2-b4b4-005004775ab4
#define uuid_IVsTrackProjectDocuments2				53474C4D-6639-11d3-a60d-005004775ab1
#define	uuid_IVsTrackProjectDocuments3				53474C4D-9097-4325-9270-754EB85A6351
#define uuid_IVsTrackProjectDocumentsEvents2		53474C4D-663d-11d3-a60d-005004775ab1
#define	uuid_IVsTrackProjectDocumentsEvents3		53474C4D-BD74-4D21-A79F-2C190E38AB6F
#define uuid_IVsSccProviderFactory					53474C4D-03f8-11d0-8e5e-00a0c911005a
#define uuid_IVsSccProjectProviderBinding			53474C4D-02f8-11d0-8e5e-00a0c911005a
#define uuid_IVsSccProjectEnlistmentFactory			53474C4D-00f8-11d0-8e5e-00a0c911005a
#define uuid_IVsSccProjectEnlistmentChoice			53474C4D-06f8-11d0-8e5e-00a0c911005a
#define uuid_IVsSccEnlistmentPathTranslation		53474C4D-01f8-11d0-8e5e-00a0c911005a
#define uuid_IVsSccProjectFactoryUpgradeChoice      53544c4d-E3A4-4938-A5EC-6593A79CF27C

#else

#define uuid_IVsSccManager2							53544C4D-B927-4320-B9DA-13D2CB3EA93B
#define uuid_IVsSccManager3							53544C4D-A152-4757-868A-2A7D0F2E5580
#define uuid_IVsSccProject2							53544C4D-AC92-49AC-9172-603E01FA483A
#define uuid_IVsQueryEditQuerySave2					53544C4D-5984-11d3-a606-005004775ab1
#define uuid_IVsQueryEditQuerySave3					53474C4D-6279-30c2-b4b4-005004775ab4
#define uuid_IVsTrackProjectDocuments2				53544C4D-6639-11d3-a60d-005004775ab1
#define	uuid_IVsTrackProjectDocuments3				53544c4d-9097-4325-9270-754EB85A6351
#define uuid_IVsTrackProjectDocumentsEvents2		53544c4d-663d-11d3-a60d-005004775ab1
#define	uuid_IVsTrackProjectDocumentsEvents3		53544c4d-BD74-4D21-A79F-2C190E38AB6F
#define uuid_IVsSccProviderFactory					53544c4d-03f8-11d0-8e5e-00a0c911005a
#define uuid_IVsSccProjectProviderBinding			53544c4d-02f8-11d0-8e5e-00a0c911005a
#define uuid_IVsSccProjectEnlistmentFactory			53544c4d-00f8-11d0-8e5e-00a0c911005a
#define uuid_IVsSccProjectEnlistmentChoice			53544c4d-06f8-11d0-8e5e-00a0c911005a
#define uuid_IVsSccEnlistmentPathTranslation		53544c4d-01f8-11d0-8e5e-00a0c911005a
#define uuid_IVsSccProjectFactoryUpgradeChoice      53544c4d-E3A4-4938-A5EC-6593A79CF27C

#endif

#define uuid_SVsSccManager							53544C4D-1927-4320-B9DA-13D2CB3EA93B
#define uuid_SVsQueryEditQuerySave					53544C4D-1984-11d3-a606-005004775ab1
#define uuid_SVsTrackProjectDocuments				53544C4D-1639-11d3-a60d-005004775ab1
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\scc.h ===
//***************************************************************************
// scc.h
//
// This module contains the prototypes and definitions for Microsoft's
// Source Code Control API.  This file and the SCC API are covered by
// VSIP and VSIP Extras license agreement and are not to be redistributed
// without permission by Microsoft.
//
// Terms used in this module:
//  IDE = Visual Studio Integrated Development Environment
//  dir = directory on local/client machine
//
// This module has been updated to include the following:
//	May '96:	
//	 * The SCC version number has been bumped to 1.1.
//	 * 16-bit is no longer supported.
//	 * A new capability bit, SCC_CAP_REENTRANT, has been added.  A provider
//		which returns this bit can handle multiple SCC context values (eg:
//		multiple simultaneous open projects), and reentrant calls for those
//		contexts (ie: thread safe).
//   * A new option, SCC_OPT_SCCCHECKOUTONLY has been added. This is used
//      to disallow scc operations from outside of integration.  Integration
//      hosts like MS Access use this to prevent files from being checked out
//      without also being imported into scc.
//  March '98:
//   * The SetOption SCC_OPT_SHARESUBPROJ was added to allow destination dir 
//      for share. Setting this option changes the semantics of SccAddFromScc 
//      to accept the target as input.
//  May '02:
//   * The SCC version number has been bumped to 1.2.
//   * The following new capability bits have been added:
//      SCC_CAP_CREATESUBPROJECT,
//      SCC_CAP_GETPARENTPROJECT,
//      SCC_CAP_BATCH,
//      SCC_CAP_DIRECTORYSTATUS,
//      SCC_CAP_DIRECTORYDIFF,
//      SCC_CAP_MULTICHECKOUT,
//      SCC_CAP_SCCFILE
//   * The following new functions corresponding to the new capability bits
//     have been added:
//      SccCreateSubProject
//      SccGetParentProjectPath
//      SccBeginBatch
//      SccEndBatch
//      SccDirQueryInfo
//      SccDirDiff
//      SccIsMultiCheckoutEnabled
//      SccWillCreateSccFile
//   * The new enum SccDirStatus has been added for use with SccDirQueryInfo
//  April '03
//   * The SCC version number has been bumped to 1.3
//      SccGetExtendedCapabilities was added for extra capability bits
//      SccEnumChangedFiles was added for retrieving the list of files who 
//              have newer versions in the database than on local disk.
//      SccQueryChanges was added to discover namespace changes (renames/additions/deletions)( 
//      SccPopulateDirList was added for discovering folders in the store
//      SccAddFilesFromScc
//		SccBackgroundGet
//      SccGetUserOption
//    * File types and encodings have been superseded to support Unicode
//    * All API functions were annotated with SAL macros.
//      See specstrings.h from Windows SDK for more information about the macros. 
//
// Copyright (c) Microsoft Corporation, All rights reserved.
//***************************************************************************
#ifndef _SCC_DEFS
#define _SCC_DEFS

#include <stdlib.h>


/****************************************************************************
    Make it easy to export functions
****************************************************************************/
#if !defined( EXTFUN )
#if defined( WIN32 )
#define EXTFUN __declspec(dllexport)
#else
#define EXTFUN __export
#endif
#endif

#if defined( __cplusplus )
#define SCCEXTERNC extern "C"
#else
#define SCCEXTERNC
#endif



/****************************************************************************
    Linkage for external functions will be C naming mode.
****************************************************************************/
#if defined( __cplusplus )
extern "C" {
#endif



/****************************************************************************
    Take care of type information based on platform and settings.
****************************************************************************/
#include <winnls.h>

#if defined( WIN16 )
typedef BOOL far * LPBOOL;
#endif

/****************************************************************************
    Version Flag.  Major is HIWORD, Minor is LOWORD
****************************************************************************/
#define SCC_MAJOR_VER_VAL   1
#define SCC_MINOR_VER_VAL   3
#define SCC_VER_NUM         MAKELONG(SCC_MINOR_VER_VAL, SCC_MAJOR_VER_VAL)
#define SCC_GET_MAJOR_VER(ver)  HIWORD(ver)
#define SCC_GET_MINOR_VER(ver)  LOWORD(ver)



/****************************************************************************
    Following strings are the keys for accessing the registry to find
    the SCC provider.
****************************************************************************/
#if !defined( _SCC_REG_KEYS )
#define _SCC_REG_KEYS
#define STR_SCC_PROVIDER_REG_LOCATION   "Software\\SourceCodeControlProvider"
#define STR_PROVIDERREGKEY              "ProviderRegKey"
#define STR_SCCPROVIDERPATH             "SCCServerPath"
#define STR_SCCPROVIDERNAME             "SCCServerName"
#define STR_SCC_INI_SECTION             "Source Code Control"
#define STR_SCC_INI_KEY                 "SourceCodeControlProvider"
#define SCC_PROJECTNAME_KEY             "SCC_Project_Name"
#define SCC_PROJECTAUX_KEY              "SCC_Aux_Path"
#define SCC_STATUS_FILE                 "MSSCCPRJ.SCC"
#define SCC_KEY                         "SCC"
#define SCC_FILE_SIGNATURE              "This is a source code control file"
#define SCC_NSE                         "Namespace Extension"
#define SCC_NSE_DisableOpenSCC          "DisableOpenFromSourceControl"
#define STR_SCCHELPCOLLECTION			"HelpCollection"
#define STR_UI_LANGUAGE					"UILanguage"
#define STR_SRCSAFE_ROOT_KEY			"Software\\Microsoft\\SourceSafe"

#endif /* _SCC_REG_KEYS */



/****************************************************************************
    String lengths (each length does *not* include the terminating '\0')
****************************************************************************/
#define SCC_NAME_LEN            31      // lpSccName, SCCInitialize
#define SCC_AUXLABEL_LEN        31      // lpAuxPathLabel, SCCInitialize
#define SCC_USER_LEN            31      // lpUser, SCCOpenProject
#define SCC_PRJPATH_LEN         300     // lpAuxProjPath, SCCGetProjPath

/****************************************************************************
    String sizes (which are lengths + 1 for the terminating '\0')
****************************************************************************/
#define SCC_NAME_SIZE           (SCC_NAME_LEN + 1)
#define SCC_AUXLABEL_SIZE       (SCC_AUXLABEL_LEN + 1)
#define SCC_USER_SIZE           (SCC_USER_LEN + 1)
#define SCC_PRJPATH_SIZE        (SCC_PRJPATH_LEN + 1)

/****************************************************************************
    These are the error codes that may be returned from a function.
    All errors are < 0, warnings are > 0, and success is 0.  Use the
    macros provided for quick checking.  
****************************************************************************/
typedef long SCCRTN;
typedef SCCRTN FAR * LPSCCRTN;

#define IS_SCC_ERROR(rtn) (((rtn) < 0) ? TRUE : FALSE)
#define IS_SCC_SUCCESS(rtn) (((rtn) == SCC_OK) ? TRUE : FALSE)
#define IS_SCC_WARNING(rtn) (((rtn) > 0) ? TRUE : FALSE)


#define SCC_I_SHARESUBPROJOK				7
#define SCC_I_FILEDIFFERS						6
#define SCC_I_RELOADFILE						5
#define SCC_I_FILENOTAFFECTED                   4
#define SCC_I_PROJECTCREATED                    3
#define SCC_I_OPERATIONCANCELED                 2
#define SCC_I_ADV_SUPPORT                       1

#define SCC_OK                                  0

#define SCC_E_INITIALIZEFAILED                  -1
#define SCC_E_UNKNOWNPROJECT                    -2
#define SCC_E_COULDNOTCREATEPROJECT             -3
#define SCC_E_NOTCHECKEDOUT                     -4
#define SCC_E_ALREADYCHECKEDOUT                 -5
#define SCC_E_FILEISLOCKED                      -6
#define SCC_E_FILEOUTEXCLUSIVE                  -7
#define SCC_E_ACCESSFAILURE                     -8
#define SCC_E_CHECKINCONFLICT                   -9
#define SCC_E_FILEALREADYEXISTS                 -10
#define SCC_E_FILENOTCONTROLLED                 -11
#define SCC_E_FILEISCHECKEDOUT                  -12
#define SCC_E_NOSPECIFIEDVERSION                -13
#define SCC_E_OPNOTSUPPORTED                    -14
#define SCC_E_NONSPECIFICERROR                  -15
#define SCC_E_OPNOTPERFORMED                    -16
#define SCC_E_TYPENOTSUPPORTED                  -17
#define SCC_E_VERIFYMERGE                       -18
#define SCC_E_FIXMERGE                          -19
#define SCC_E_SHELLFAILURE                      -20
#define SCC_E_INVALIDUSER                       -21
#define SCC_E_PROJECTALREADYOPEN                -22
#define SCC_E_PROJSYNTAXERR                     -23
#define SCC_E_INVALIDFILEPATH                   -24
#define SCC_E_PROJNOTOPEN                       -25
#define SCC_E_NOTAUTHORIZED                     -26
#define SCC_E_FILESYNTAXERR                     -27
#define SCC_E_FILENOTEXIST                      -28
#define SCC_E_CONNECTIONFAILURE                 -29
#define SCC_E_UNKNOWNERROR                      -30
#define SCC_E_BACKGROUNDGETINPROGRESS           -31



#ifndef _SCC_STATUS_DEFINED
#define _SCC_STATUS_DEFINED
/****************************************************************************
    The SCC_STATUS_xxx macros define the state of a file
****************************************************************************/
enum  SccStatus 
{
    SCC_STATUS_INVALID          = -1L,			// Status could not be obtained, don't rely on it
    SCC_STATUS_NOTCONTROLLED    = 0x00000000L,	// File is not under source control
    SCC_STATUS_CONTROLLED       = 0x00000001L,	// File is under source code control
    SCC_STATUS_CHECKEDOUT       = 0x00000002L,	// Checked out to current user at local path
    SCC_STATUS_OUTOTHER         = 0x00000004L,	// File is checked out to another user
    SCC_STATUS_OUTEXCLUSIVE     = 0x00000008L,	// File is exclusively check out
    SCC_STATUS_OUTMULTIPLE      = 0x00000010L,	// File is checked out to multiple people
    SCC_STATUS_OUTOFDATE        = 0x00000020L,	// The file is not the most recent
    SCC_STATUS_DELETED          = 0x00000040L,	// File has been deleted from the project
    SCC_STATUS_LOCKED           = 0x00000080L,	// No more versions allowed
    SCC_STATUS_MERGED           = 0x00000100L,	// File has been merged but not yet fixed/verified
    SCC_STATUS_SHARED           = 0x00000200L,	// File is shared between projects
    SCC_STATUS_PINNED           = 0x00000400L,	// File is shared to an explicit version
    SCC_STATUS_MODIFIED         = 0x00000800L,	// File has been modified/broken/violated
    SCC_STATUS_OUTBYUSER        = 0x00001000L,	// File is checked out by current user someplace
    SCC_STATUS_NOMERGE          = 0x00002000L,	// File is never mergeable and need not be saved before a GET
    SCC_STATUS_RESERVED_1       = 0x00004000L,	// Status bit reserved for internal use
    SCC_STATUS_RESERVED_2       = 0x00008000L,	// Status bit reserved for internal use
    SCC_STATUS_RESERVED_3       = 0x00010000L 	// Status bit reserved for internal use
};
#endif /* _SCC_STATUS_DEFINED */



#ifndef _SCC_DIRSTATUS_DEFINED
#define _SCC_DIRSTATUS_DEFINED
/****************************************************************************
    The SCC_DIRSTATUS_xxx macros define the state of a directory
****************************************************************************/
enum  SccDirStatus 
{
    SCC_DIRSTATUS_INVALID       = -1L,		// Status could not be obtained, don't rely on it
    SCC_DIRSTATUS_NOTCONTROLLED = 0x0000L,	// Directory is not under source control
											//   i.e. there is no project corresponding to the directory
    SCC_DIRSTATUS_CONTROLLED    = 0x0001L,	// Directory is under source code control
											//   i.e. there exists a project corresponding to the directory
    SCC_DIRSTATUS_EMPTYPROJ     = 0x0002L	// Project corresponding to directory is empty
};
#endif /* _SCC_DIRSTATUS_DEFINED */



/****************************************************************************
    SccOpenProject flags
****************************************************************************/
#define SCC_OP_CREATEIFNEW      0x00000001L
#define SCC_OP_SILENTOPEN       0x00000002L


/****************************************************************************
    Keep checked out
****************************************************************************/
#define SCC_KEEP_CHECKEDOUT     0x1000


/****************************************************************************
    Add flags
****************************************************************************/
#define SCC_ADD_STORELATEST     0x04	// Store only the latest version of the file(s).
#define SCC_FILETYPE_AUTO       0x00	// Auto-detect type of the file(s).

// The following flags are mutually exculsive.
#define SCC_FILETYPE_TEXT       0x01	// Obsolete. Use SCC_FILETYPE_TEXT_ANSI instead.
#define SCC_FILETYPE_BINARY     0x02	// Treat the file(s) as binary.
#define SCC_FILETYPE_TEXT_ANSI  0x08	// Treat the file(s) as ANSI.
#define SCC_FILETYPE_UTF8       0x10	// Treat the file(s) as Unicode in UTF8 format.
#define SCC_FILETYPE_UTF16LE    0x20	// Treat the file(s) as Unicode in UTF16 Little Endian format.
#define SCC_FILETYPE_UTF16BE    0x40	// Treat the file(s) as Unicode in UTF16 Big Endian format.


/****************************************************************************
    Diff flags.  The SCC_DIFF_QD_xxx flags are mutually exclusive.  If any
	one of the three are specified, then no visual feed back is to be given.
	If one is specified but not supported, then the next best one is chosen.
****************************************************************************/
#define SCC_DIFF_IGNORECASE     0x0002
#define SCC_DIFF_IGNORESPACE    0x0004
#define SCC_DIFF_QD_CONTENTS	0x0010
#define SCC_DIFF_QD_CHECKSUM	0x0020
#define SCC_DIFF_QD_TIME		0x0040
#define SCC_DIFF_QUICK_DIFF		0x0070		/* Any QD means no display     */


/****************************************************************************
    Get flags
****************************************************************************/
#define SCC_GET_ALL             0x00000001L
#define SCC_GET_RECURSIVE       0x00000002L
#define SCC_GET_OVERWRITE       0x00000004L

/****************************************************************************
    PopulateList flags
****************************************************************************/
#define SCC_PL_DIR				0x00000001L	/* whether input items are directory names */

/****************************************************************************
    Checkout flags
****************************************************************************/
#define SCC_CHECKOUT_LOCALVER   0x00000002L

/****************************************************************************
    Options for SccRemoveDir
****************************************************************************/
#define SCC_RD_DEFAULT			0x0000		/* remove the folder and files within */
#define SCC_RD_EMPTYTREE		0x0001		/* remove the folder if the hierarchy contains only empty folders */

/****************************************************************************
    Options for SccGetCommandOptions and SccPopulateList
****************************************************************************/
typedef LPVOID LPCMDOPTS;
#ifndef SCCCOMMAND_DEFINED
#define SCCCOMMAND_DEFINED
enum  SCCCOMMAND 
{
	SCC_COMMAND_GET,
	SCC_COMMAND_CHECKOUT,
	SCC_COMMAND_CHECKIN,
	SCC_COMMAND_UNCHECKOUT,
  	SCC_COMMAND_ADD,
	SCC_COMMAND_REMOVE,
	SCC_COMMAND_DIFF,
	SCC_COMMAND_HISTORY,
	SCC_COMMAND_RENAME,
	SCC_COMMAND_PROPERTIES,
	SCC_COMMAND_OPTIONS
};
#endif /* SCCCOMMAND_DEFINED */

typedef BOOL (__cdecl *POPLISTFUNC)  (_Inout_opt_ LPVOID pvCallerData, _In_ BOOL bAddKeep, _In_ LONG nStatus, _In_z_ LPCSTR lpFile);
typedef BOOL (__cdecl *POPLISTFUNCA) (_Inout_opt_ LPVOID pvCallerData, _In_ BOOL bAddKeep, _In_ LONG nStatus, _In_z_ LPCSTR lpFile);
typedef BOOL (__cdecl *POPLISTFUNCW) (_Inout_opt_ LPVOID pvCallerData, _In_ BOOL bAddKeep, _In_ LONG nStatus, _In_z_ LPCWSTR lpFile);
#ifdef UNICODE
typedef POPLISTFUNCW POPLISTFUNCT;
#else
typedef POPLISTFUNCA POPLISTFUNCT;
#endif

/****************************************************************************
    Options and callback function declarations for SccPopulateDirList
****************************************************************************/
#define SCC_PDL_ONELEVEL		0x0000
#define SCC_PDL_RECURSIVE		0x0001
#define SCC_PDL_INCLUDEFILES	0x0002

typedef BOOL (__cdecl *POPDIRLISTFUNC) (_Inout_opt_ LPVOID pvCallerData, _In_ BOOL bFolder,  _In_z_ LPCSTR lpDirectoryOrFileName);
typedef BOOL (__cdecl *POPDIRLISTFUNCA)(_Inout_opt_ LPVOID pvCallerData, _In_ BOOL bFolder, _In_z_ LPCSTR lpDirectoryOrFileName);
typedef BOOL (__cdecl *POPDIRLISTFUNCW)(_Inout_opt_ LPVOID pvCallerData, _In_ BOOL bFolder, _In_z_ LPCWSTR lpDirectoryOrFileName);

/****************************************************************************
    Options and callback function declarations for SccQueryChanges
****************************************************************************/

/* Structure used by the SccQueryChanges callback */
struct QUERYCHANGESDATA_A
{
       DWORD  dwSize;
       LPCSTR lpFileName;
       DWORD  dwChangeType;
       LPCSTR lpLatestName;
};

typedef struct QUERYCHANGESDATA_A QUERYCHANGESDATA;

struct QUERYCHANGESDATA_W
{
       DWORD   dwSize;
       LPCWSTR lpFileName;
       DWORD   dwChangeType;
       LPCWSTR lpLatestName;
};

/* Values for dwChangeType 

Note: When SCC_CHANGE_RENAMED_TO is returned, the lpLatestName should contain the new file name in local-path terms.
If the new filename cannot be relativized to the current connection opened, return SCC_CHANGE_DATABASE_DELETED instead.
*/
#define SCC_CHANGE_UNKNOWN			0 /* cannot tell what has changed */
#define SCC_CHANGE_UNCHANGED		1 /* no namespace change for this file */
#define SCC_CHANGE_DIFFERENT		2 /* file with different identity exists in the database */
#define SCC_CHANGE_NONEXISTENT		3 /* file does not exist neither in the database nor locally */
#define SCC_CHANGE_DATABASE_DELETED	4 /* file deleted in the database */
#define SCC_CHANGE_LOCAL_DELETED	5 /* file deleted locally but still exists in the database; if this cannot be determined, you can return SCC_CHANGE_DATABASE_ADDED instead */
#define SCC_CHANGE_DATABASE_ADDED	6 /* file added in the database, does not exist locally */
#define SCC_CHANGE_LOCAL_ADDED		7 /* file does not exist in database, and is a new local file */
#define SCC_CHANGE_RENAMED_TO		8 /* file renamed or moved in the database into lpLatestName */
#define SCC_CHANGE_RENAMED_FROM		9 /* file renamed or moved in the database from lpLatestName; if this is too expensive to track, you can return other flag, like SCC_CHANGE_DATABASE_ADDED */

typedef BOOL (__cdecl *QUERYCHANGESFUNC) (_Inout_opt_ LPVOID pvCallerData, _In_ QUERYCHANGESDATA * pChangesData);
typedef BOOL (__cdecl *QUERYCHANGESFUNCA)(_Inout_opt_ LPVOID pvCallerData, _In_ QUERYCHANGESDATA_A * pChangesData);
typedef BOOL (__cdecl *QUERYCHANGESFUNCW)(_Inout_opt_ LPVOID pvCallerData, _In_ QUERYCHANGESDATA_W * pChangesData);

/****************************************************************************
    The SCC_CAP_xxx flags are used to determine what capabilites a provider
    has.
****************************************************************************/
#define SCC_CAP_REMOVE            0x00000001L   // Supports the SCC_Remove command
#define SCC_CAP_RENAME            0x00000002L   // Supports the SCC_Rename command
#define SCC_CAP_DIFF              0x00000004L   // Supports the SCC_Diff command
#define SCC_CAP_HISTORY           0x00000008L   // Supports the SCC_History command
#define SCC_CAP_PROPERTIES        0x00000010L   // Supports the SCC_Properties command
#define SCC_CAP_RUNSCC            0x00000020L   // Supports the SCC_RunScc command
#define SCC_CAP_GETCOMMANDOPTIONS 0x00000040L   // Supports the SCC_GetCommandOptions command
#define SCC_CAP_QUERYINFO         0x00000080L   // Supports the SCC_QueryInfo command
#define SCC_CAP_GETEVENTS         0x00000100L   // Supports the SCC_GetEvents command
#define SCC_CAP_GETPROJPATH       0x00000200L   // Supports the SCC_GetProjPath command
#define SCC_CAP_ADDFROMSCC        0x00000400L   // Supports the SCC_AddFromScc command
#define SCC_CAP_COMMENTCHECKOUT   0x00000800L   // Supports a comment on Checkout
#define SCC_CAP_COMMENTCHECKIN    0x00001000L   // Supports a comment on Checkin
#define SCC_CAP_COMMENTADD        0x00002000L   // Supports a comment on Add
#define SCC_CAP_COMMENTREMOVE     0x00004000L   // Supports a comment on Remove
#define SCC_CAP_TEXTOUT           0x00008000L   // Writes text to an IDE-provided output function
#define SCC_CAP_CREATESUBPROJECT  0x00010000L   // Supports the SccCreateSubProject command
#define SCC_CAP_GETPARENTPROJECT  0x00020000L   // Supports the SccGetParentProjectPath command
#define SCC_CAP_BATCH             0x00040000L   // Supports the SccBeginBatch and SccEndBatch commands
#define SCC_CAP_DIRECTORYSTATUS   0x00080000L   // Supports the querying of directory status
#define SCC_CAP_DIRECTORYDIFF     0x00100000L   // Supports differencing on directories
#define SCC_CAP_ADD_STORELATEST   0x00200000L   // Supports storing files without deltas
#define SCC_CAP_HISTORY_MULTFILE  0x00400000L   // Multiple file history is supported
#define SCC_CAP_IGNORECASE        0x00800000L   // Supports case insensitive file comparison
#define SCC_CAP_IGNORESPACE       0x01000000L   // Supports file comparison that ignores white space
#define SCC_CAP_POPULATELIST      0x02000000L   // Supports finding extra files
#define SCC_CAP_COMMENTPROJECT    0x04000000L   // Supports comments on create project
#define SCC_CAP_MULTICHECKOUT     0x08000000L   // Supports multiple checkouts on a file
												//   (subject to administrator override)
#define SCC_CAP_DIFFALWAYS        0x10000000L   // Supports diff in all states if under control
#define SCC_CAP_GET_NOUI          0x20000000L	// Provider doesn't support a UI for SccGet,
												//   but IDE may still call SccGet function.
#define SCC_CAP_REENTRANT		  0x40000000L	// Provider is reentrant and thread safe.
#define SCC_CAP_SCCFILE           0x80000000L   // Supports the MSSCCPRJ.SCC file
												//   (subject to user/administrator override)

/****************************************************************************
    The SCC_EXCAP_xxx values are used to determine what extra capabilites 
	a provider has.
****************************************************************************/
#define SCC_EXCAP_CHECKOUT_LOCALVER		1L   // Supports the Checkout local version
#define SCC_EXCAP_BACKGROUND_GET		2L   // Supports the SccBackgroundGet operation
#define SCC_EXCAP_ENUM_CHANGED_FILES	3L   // Supports the SccEnumChangedFiles operation
#define SCC_EXCAP_POPULATELIST_DIR		4L   // Supports finding extra directories
#define SCC_EXCAP_QUERYCHANGES			5L   // Supports enumerating file changes
#define SCC_EXCAP_ADD_FILES_FROM_SCC	6L   // Supports the SccAddFilesFromSCC operation
#define SCC_EXCAP_GET_USER_OPTIONS		7L   // Supports the SccGetUserOption function
#define SCC_EXCAP_THREADSAFE_QUERY_INFO	8L   // Supports calling SccQueryInfo on multiple threads
#define SCC_EXCAP_REMOVE_DIR			9L   // Supports the SccRemoveDir function
#define SCC_EXCAP_DELETE_CHECKEDOUT    10L   // Can delete checked out files
#define SCC_EXCAP_RENAME_CHECKEDOUT	   11L   // Can rename checked out files
// Note: other capabilities may be added to this list in future releases
// Providers should play safe and return NotSupported from a call to GetSccExtendedCapabilities
// for all capabilities that are not supported or are not recognized by the provider.

// Data structures for background processing messages
typedef struct 
{
	DWORD dwBackgroundOperationID;	// ID of the background operation
} SccMsgDataIsCancelled;

typedef struct 
{
	DWORD dwBackgroundOperationID;	// ID of the background operation
	PCSTR szFile;					// File path
} SccMsgDataOnBeforeGetFile;

typedef struct 
{
	DWORD dwBackgroundOperationID;	// ID of the background operation
	PCSTR szFile;					// File path
	SCCRTN sResult;					// Result of retrieving of the file
} SccMsgDataOnAfterGetFile;

typedef struct 
{
	DWORD dwBackgroundOperationID;	// ID of the background operation
	PCSTR szMessage;		// The message text
	BOOL bIsError;			// TRUE for an error message; FALSE for a warning or for an informational message
} SccMsgDataOnMessage;

/****************************************************************************
	The following flags are used for the print call-back that the IDE
	provides on SccInitialize.  
	
	If the IDE supports cancel, it may get one of the Cancel messages.
	In this case, the provider will inform the IDE to show the Cancel
	button with SCC_MSG_STARTCANCEL.  After this, any set of normal
	messages may be sent.  If any of these return SCC_MSG_RTN_CANCEL,
	then the provider will quit the operation and return.  The Provider
	will also poll periodically with SCC_MSG_DOCANCEL to see if the
	user has canceled the operation.  When all operations are done, or
	the user has canceled, SCC_MSG_STOPCANCEL will be sent through.

	The SCC_MSG_INFO, WARNING, and ERROR types are used for messages that
	get displayed in the scrolling list of messages.  SCC_MSG_STATUS is
	a special type that indicates that the text should show up in a 
	status bar or temporary display area.  This message type should not
	remain permanently in the list.

	All background operation has an ID associated with it. The first argument
	of all background processing messages must be casted to 
	the correspondent structure which contains the ID.

****************************************************************************/
enum
{
	// Return codes
	SCC_MSG_RTN_CANCEL=-1,				// Returned from call-back to indicate cancel
	SCC_MSG_RTN_OK=0,					// Returned from call-back to continue
	// Message types
	SCC_MSG_INFO=1,						// Message is informational
	SCC_MSG_WARNING,					// Message is a warning
	SCC_MSG_ERROR,						// Message is an error
	SCC_MSG_STATUS,						// Message is meant for status bar
	// IDE supports Cancel operation
	SCC_MSG_DOCANCEL,					// No text, IDE returns 0 or SCC_MSG_RTN_CANCEL
	SCC_MSG_STARTCANCEL,				// Start a cancel loop
	SCC_MSG_STOPCANCEL,					// Stop the cancel loop

	// Background processing operations
	SCC_MSG_BACKGROUND_IS_CANCELLED,		// IDE returns 0 if the operation is not cancelled or SCC_MSG_RTN_CANCEL if it is.
											// Cast first argument to SccMsgDataIsCancelled structure pointer. 
	SCC_MSG_BACKGROUND_ON_BEFORE_GET_FILE,	// Called before file file is retrived. Cast first argument to SccMsgDataOnBeforeGetFile structure pointer. 
	SCC_MSG_BACKGROUND_ON_AFTER_GET_FILE,	// Called after file was processed. Cast first argument to SccMsgDataOnAfterGetFile structure pointer.
	SCC_MSG_BACKGROUND_ON_MESSAGE			// Called to provide information about background processing. Cast first argument to SccMsgDataOnMessage structure pointer.
};

#define SCC_FIRST_BACKGROUND_MSG SCC_MSG_BACKGROUND_IS_CANCELLED
#define SCC_LAST_BACKGROUND_MSG SCC_MSG_BACKGROUND_ON_MESSAGE

#ifndef _LPTEXTOUTPROC_DEFINED
#define _LPTEXTOUTPROC_DEFINED
typedef long (__cdecl *LPTEXTOUTPROC) (_In_opt_z_ LPCSTR, _In_ DWORD);
#endif /* _LPTEXTOUTPROC_DEFINED */


/****************************************************************************
    nOption values for SccSetOption.
****************************************************************************/
#define SCC_OPT_EVENTQUEUE      0x00000001L     // Set status of the event queue
#define SCC_OPT_USERDATA        0x00000002L     // Specify user data for 
                                                // SCC_OPT_NAMECHANGEPFN
#define SCC_OPT_HASCANCELMODE	0x00000003L     // The IDE can handle Cancel 
                                                // of long running operations
#define SCC_OPT_NAMECHANGEPFN   0x00000004L     // Set a callback for name changes
#define SCC_OPT_SCCCHECKOUTONLY 0x00000005L     // Disable SS explorer checkout, 
                                                // and don't set working dir
#define SCC_OPT_SHARESUBPROJ    0x00000006L     // if this is turned on, allow
                                                // AddFromScc to specify a working
                                                // dir, try to share into the assoc
                                                // project if direct descendant.
/* SCC_OPT_EVENTQUEUE values */
#define SCC_OPT_EQ_DISABLE      0x00L           // Suspend event queue activity
#define SCC_OPT_EQ_ENABLE       0x01L           // Enable event queue logging

/* SCC_OPT_NAMECHANGEPFN callback typedef */
typedef void (__cdecl *OPTNAMECHANGEPFN)(_Inout_opt_ LONG pvCallerData, 
                    _In_z_ LPCSTR pszOldName, _In_z_ LPCSTR pszNewName);

/****************************************************************************
	Values for SCC_OPT_HASCANCELMODE.  By default, it is assumed that the IDE
	will not allow for canceling a long running operation.  The provider must
	handle this on their own in this case.  If the IDE, however, sets this
	option to SCC_OPT_HCM_YES, it means that it will handle canceling the
	operation.  In this case, use the SCC_MSG_xxx flags with the output
	call-back to tell the IDE what messages to display while the operation
	is running.
****************************************************************************/
#define SCC_OPT_HCM_NO			0L				// (Default) Has no cancel mode,
												//	Provider must supply if desired
#define SCC_OPT_HCM_YES			1L				// IDE handles cancel

/****************************************************************************
	Values for SCC_OPT_SCCCHECKOUTONLY.  By default, it is assumed that 
	the user may use the gui to get and checkout files from this project,
	and that a working dir should be set,  If this option is explicitly turned on,
	then no working dir is set for the project, and the files may only be gotten
	or checked in or out from scc integration, never from the gui.
****************************************************************************/
#define SCC_OPT_SCO_NO			0L				// (Default) OK to checkout from GUI
												//	Working dir is set.
#define SCC_OPT_SCO_YES			1L				// no GUI checkout, no working dir

/****************************************************************************
    nOption values for SccGetUserOption (not binary flags)
****************************************************************************/
#define SCC_USEROPT_CHECKOUT_LOCALVER   1L     // Whether the user wants to checkout local version of files

/****************************************************************************
	Values for SCC_USEROPT_CHECKOUT_LOCALVER.  
****************************************************************************/
#define SCC_USEROPT_COLV_NO  0L					// Checkout local version is supported and the user 
												// prefers to checkout the tip version of files
#define SCC_USEROPT_COLV_YES 1L					// Checkout local version is supported and the user wants 
												// to checkout local version of files, if that can be detected
#define SCC_USEROPT_COLV_DISABLED 2L			// Checkout local version is not supported. Might have been disabled
												// by administrator.

/****************************************************************************
    Following are the ASCII definitions of the functions.
****************************************************************************/



/*******************************************************************************
	Returns a 4 byte version of the provider.  This can be used to check for 
	SCC spec conformance.
*******************************************************************************/
SCCEXTERNC LONG EXTFUN __cdecl SccGetVersion(void);

/*******************************************************************************
	Call this function once per instance of a provider.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccInitialize(
                        _Deref_out_ LPVOID * ppContext, 
                        _In_ HWND hWnd, 
                        _In_z_ LPCSTR lpCallerName,
                        _Out_z_cap_(SCC_NAME_SIZE) LPSTR lpSccName, 
                        _Out_ LPLONG lpSccCaps, 
                        _Out_z_cap_(SCC_AUXLABEL_SIZE) LPSTR lpAuxPathLabel, 
                        _Out_ LPLONG pnCheckoutCommentLen, 
                        _Out_ LPLONG pnCommentLen
                        );

/*******************************************************************************
	Call this function once for every instance of a provider, when it is going
	away.  You must call SccInitialize before calling this function, and should
	not call it with any open projects.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccUninitialize(
                        _Inout_ LPVOID pContext
                        );

/*******************************************************************************
	Opens a project.  This function should never be called with an already open
	project on pContext.  The lpUser, lpProjName, and lpAuxProjPath values
	may be modified by the provider.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccOpenProject(
                        _Inout_ LPVOID pContext,
                        _In_ HWND hWnd, 
                        _Inout_z_ _Inout_cap_(SCC_USER_SIZE) LPSTR lpUser,
                        _Inout_z_ _Inout_cap_(SCC_PRJPATH_SIZE) LPSTR lpProjName,
                        _In_z_ LPCSTR lpLocalProjPath,
                        _Inout_z_ _Inout_cap_(SCC_PRJPATH_SIZE) LPSTR lpAuxProjPath,
                        _In_opt_z_ LPCSTR lpComment,
                        _In_opt_ LPTEXTOUTPROC lpTextOutProc,
                        _In_ LONG dwFlags
                        );

/*******************************************************************************
	Called to close a project opened by SccOpenProject.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccCloseProject(
                        _Inout_ LPVOID pContext
                        );

/*******************************************************************************
	Prompts the user for provider project information.  This may include the
	path to a certain project.  The caller must be prepared to accept changes
	to lpUser, lpProjName, lpLocalPath, and lpAuxProjPath.  lpProjName and
	lpAuxProjPath are then used in a call to SccOpenProject.  They should not
	be modified by the caller upon return.  The caller should avoid displaying
	these two parameters upon return, as the provider might use a formatted
	string that is not ready for view.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccGetProjPath(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _Inout_z_ _Inout_cap_(SCC_USER_SIZE) LPSTR lpUser,
                        _Inout_z_ _Inout_cap_(SCC_PRJPATH_SIZE) LPSTR lpProjName, 
                        _Inout_z_ _Inout_cap_(_MAX_PATH) LPSTR lpLocalPath,
                        _Inout_z_ _Inout_cap_(SCC_PRJPATH_SIZE) LPSTR lpAuxProjPath,
                        _In_ BOOL bAllowChangePath,
                        _Inout_ LPBOOL pbNew
                        );

/*******************************************************************************
	Retrieves a read only copy of a set of files.  The array is a set of files
	on the local disk.  The paths must be fully qualified.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccGet(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_ LONG nFiles, 
                        _In_count_(nFiles) LPCSTR* lpFileNames, 
                        _In_ LONG dwFlags,
                        _In_opt_ LPCMDOPTS pvOptions
                        );

/*******************************************************************************
	Initiates UI-less background retrieval of a set of files.  
	The array is a set of files on the local disk.  The paths must be fully qualified.
	The function must be thread-safe. It is always called on the thread different
	from the one that loaded the provider.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccBackgroundGet(
                        _Inout_ LPVOID pContext, 
                        _In_ LONG nFiles, 
                        _In_count_(nFiles) LPCSTR* lpFileNames, 
                        _In_ LONG dwFlags,
                        _In_ LONG dwBackgroundOperationID
                        );

/*******************************************************************************
	Checks out the array of files.  The array is a set of fully qualified local
	path names.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccCheckout(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_ LONG nFiles, 
                        _In_count_(nFiles) LPCSTR* lpFileNames, 
                        _In_opt_z_ LPCSTR lpComment, 
                        _In_ LONG dwFlags,
                        _In_opt_ LPCMDOPTS pvOptions
                        );

/*******************************************************************************
	Undo a checkout of an array of files.  The array is a set of fully qualified
	local path names.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccUncheckout(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_ LONG nFiles, 
                        _In_count_(nFiles) LPCSTR* lpFileNames, 
                        _In_ LONG dwFlags,
                        _In_opt_ LPCMDOPTS pvOptions
                        );

/*******************************************************************************
	Make the modifications the user has made to an array of files permanent. The
	file names must be fully qualified local paths.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccCheckin(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_ LONG nFiles, 
                        _In_count_(nFiles) LPCSTR* lpFileNames, 
                        _In_opt_z_ LPCSTR lpComment, 
                        _In_ LONG dwFlags,
                        _In_opt_ LPCMDOPTS pvOptions
                        );

/*******************************************************************************
	Add an array of fully qualified files to the source control system.  The 
	array of flags describe the type of file.  See the SCC_FILETYPE_xxxx flags.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccAdd(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_ LONG nFiles, 
                        _In_count_(nFiles) LPCSTR* lpFileNames, 
                        _In_opt_z_ LPCSTR lpComment, 
                        _In_count_(nFiles) LONG * pdwFlags,
                        _In_opt_ LPCMDOPTS pvOptions
                        );

/*******************************************************************************
	Removes the array of fully qualified files from the source control system.
	The files are not removed from the user's disk, unless advanced options
	are set by the user.  Advaned options are defined by the provider.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccRemove(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_ LONG nFiles, 
                        _In_count_(nFiles) LPCSTR* lpFileNames,
                        _In_opt_z_ LPCSTR lpComment,
                        _In_ LONG dwFlags,
                        _In_opt_ LPCMDOPTS pvOptions
                        );

/*******************************************************************************
	Enables us to avoid prompting for user input more than once during a
	"batched" operation. SccBeginBatch and SccEndBatch are used as a pair
	to indicate the beginning and end of an operation. They cannot be nested.
	SccBeginBatch sets flag indicating that a batch operation is in progress.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccBeginBatch(void);

/*******************************************************************************
	Enables us to avoid prompting for user input more than once during a
	"batched" operation. SccBeginBatch and SccEndBatch are used as a pair
	to indicate the beginning and end of an operation. They cannot be nested.
	SccEndBatch clears the batch operation in progress flag.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccEndBatch(void);

/*******************************************************************************
	Renames the given file to a new name in the source control system.  The
	provider should not attempt to access the file on disk.  It is the
	caller's responsibility to rename the file on disk.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccRename(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_z_ LPCSTR lpFileName,
                        _In_z_ LPCSTR lpNewName
                        );

/*******************************************************************************
	Show the differences between the local users fully qualified file and the
	version under source control.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccDiff(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_z_ LPCSTR lpFileName, 
                        _In_ LONG dwFlags,
                        _In_opt_ LPCMDOPTS pvOptions
                        );

/*******************************************************************************
	Show the differences between the local user's fully qualified directory and
	the project under source control.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccDirDiff(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_z_ LPCSTR lpDirName, 
                        _In_ LONG dwFlags,
                        _In_opt_ LPCMDOPTS pvOptions
                        );

/*******************************************************************************
	Show the history for an array of fully qualified local file names.  The
	provider may not always support an array of files, in which case only the
	first files history will be shown.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccHistory(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_ LONG nFiles, 
                        _In_count_(nFiles) LPCSTR* lpFileNames, 
                        _In_ LONG dwFlags,
                        _In_opt_ LPCMDOPTS pvOptions
                        );

/*******************************************************************************
	Show the properties of a fully qualified file.  The properties are defined
	by the provider and may be different for each one.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccProperties(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_z_ LPCSTR lpFileName
                        );

/*******************************************************************************
	Examine a list of fully qualified files for their current status.  The
	return array will be a bitmask of SCC_STATUS_xxxx bits.  A provider may
	not support all of the bit types.  For example, SCC_STATUS_OUTOFDATE may
	be expensive for some provider to provide.  In this case the bit is simply
	not set.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccQueryInfo(
                        _Inout_ LPVOID pContext, 
                        _In_ LONG nFiles, 
                        _In_count_(nFiles) LPCSTR* lpFileNames, 
                        _Out_cap_(nFiles) LPLONG lpStatus
                        );

/*******************************************************************************
	Examine a list of fully qualified dirs for their current status.  The
	return array will be a bitmask of SCC_DIRSTATUS_xxxx bits.  A provider may
	not support all of the bit types.  For example, SCC_DIRSTATUS_EMPTYPROJ may
	be expensive for some provider to provide.  In this case the bit is simply
	not set.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccDirQueryInfo(
                        _Inout_ LPVOID pContext, 
                        _In_ LONG nDirs, 
                        _In_count_(nDirs) LPCSTR* lpDirNames, 
                        _Out_cap_(nDirs) LPLONG lpStatus
                        );

/*******************************************************************************
	Like SccQueryInfo, this function will examine the list of files for their
	current status.  In addition, it will use the pfnPopulate function to 
	notify the caller when a file does not match the critera for the nCommand.
	For example, if the command is SCC_COMMAND_CHECKIN, and a file in the list
	is not checked out, then the callback is used to tell the caller this.  
	Finally, the provider may find other files that could be part of the command
	and add them.  This allows a VB user to check out a .bmp file that is used
	by their VB project, but does not appear in the VB makefile.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccPopulateList(
                        _Inout_ LPVOID pContext, 
                        _In_ enum SCCCOMMAND nCommand, 
                        _In_ LONG nFiles, 
                        _In_count_(nFiles) LPCSTR* lpFileNames, 
                        _In_ POPLISTFUNC pfnPopulate, 
                        _Inout_opt_ LPVOID pvCallerData,
						_Out_cap_(nFiles) LPLONG lpStatus, 
						_In_ LONG dwFlags
                        );

/*******************************************************************************
	Like SccPopulateList, this function will examine the list of directories and 
	will use the pfnPopulate function to notify the caller when a source control 
	project does not match the client's local directories.
	This function can be used to enumerate the subprojects of one project, 
	or to enumerate local folders that don't have matching projects, etc.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccPopulateDirList(
                        _Inout_ LPVOID pContext, 
                        _In_ LONG nDirs, 
                        _In_count_(nDirs) LPCSTR* lpDirPaths, 
                        _In_ POPDIRLISTFUNC pfnPopulate, 
                        _Inout_opt_ LPVOID pvCallerData,
						_In_ LONG fOptions 
                        );

/*******************************************************************************
	Like SccQueryInfo, this function will examine the list of files for their
	current status and history.  
	For each file the provider will call back the IDE giving more infomration 
	about the file (e.g. file was deleted, or file was renamed to XXXX, or
	another file with the same name was already added, etc)
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccQueryChanges(
						_Inout_ LPVOID pContext, 
						_In_ LONG nFiles, 
						_In_count_(nFiles) LPCSTR *lpFileNames, 
						_In_ QUERYCHANGESFUNC pfnCallback,
						_Inout_opt_ LPVOID pvCallerData
						);

/*******************************************************************************
	SccGetEvents runs in the background checking the status of files that the
	caller has asked about (via SccQueryInfo).  When the status changes, it 
	builds a list of those changes that the caller may exhaust on idle.  This
	function must take virtually no time to run, or the performance of the 
	caller will start to degrade.  For this reason, some providers may choose
	not to implement this function.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccGetEvents(
                        _Inout_ LPVOID pContext, 
                        _Out_z_cap_(MAX_PATH + 1) LPSTR lpFileName,
                        _Out_ LPLONG lpStatus,
                        _Out_ LPLONG pnEventsRemaining
                        );

/*******************************************************************************
	This function allows a user to access the full range of features of the
	source control system.  This might involve launching the native front end
	to the product.  Optionally, a list of files are given for the call.  This
	allows the provider to immediately select or subset their list.  If the
	provider does not support this feature, it simply ignores the values.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccRunScc(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_ LONG nFiles, 
                        _In_count_(nFiles) LPCSTR* lpFileNames
                        );

/*******************************************************************************
	This function will prompt the user for advaned options for the given
	command.  Call it once with ppvOptions==NULL to see if the provider
	actually supports the feature.  Call it again when the user wants to see
	the advaned options (usually implemented as an Advaned button on a dialog).
	If a valid *ppvOptions is returned from the second call, then this value
	becomes the pvOptions value for the SccGet, SccCheckout, SccCheckin, etc...
	functions.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccGetCommandOptions(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_ enum SCCCOMMAND nCommand,
                        _Deref_opt_out_opt_ LPCMDOPTS * ppvOptions
                        );

/*******************************************************************************
	SccGetUserOption is a generic function used to retrieve a variety of 
	user-specific options. Each option starts with SCC_USEROPT_xxx and has its own 
	defined set of values.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccGetUserOption(
                        _Inout_ LPVOID pContext, 
                        _In_ LONG nOption,
                        _Out_ LPLONG lpVal 
						);

/*******************************************************************************
	This function allows the user to browse for files that are already in the
	source control system and then make those files part of the current project.
	This is handy, for example, to get a common header file into the current
	project without having to copy the file.  The return array of files
	(lplpFileNames) contains the list of files that the user wants added to
	the current makefile/project.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccAddFromScc(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _Out_ LPLONG pnFiles,
                        _Out_cap_(*pnFiles) LPCSTR** lplpFileNames
                        );

/*******************************************************************************
	SccSetOption is a generic function used to set a wide variety of options.
	Each option starts with SCC_OPT_xxx and has its own defined set of values.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccSetOption(
                        _Inout_ LPVOID pContext,
                        _In_ LONG nOption,
                        _In_ LONG dwVal
                        );

/*******************************************************************************
	Creates a subproject with the given name under the existing parent project. 
	If a subproject with the name already exists the function can change 
	the default name in order to create a unique one, for example by adding 
	"_<number>" to it. The caller must be prepared to accept changes
	to lpUser, lpSubProjPath, and lpAuxProjPath. lpSubProjPath and
	lpAuxProjPath are then used in a call to SccOpenProject.  They should not
	be modified by the caller upon return.  The caller should avoid displaying
	these two parameters upon return, as the provider might use a formatted
	string that is not ready for view.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccCreateSubProject(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _Inout_z_ _Inout_cap_(SCC_USER_SIZE) LPSTR lpUser,
                        _In_z_ _In_count_(SCC_PRJPATH_SIZE) LPCSTR lpParentProjPath, 
                        _In_z_ _In_count_(SCC_PRJPATH_SIZE) LPCSTR lpSubProjName,
                        _Inout_z_ _Inout_cap_(SCC_PRJPATH_SIZE) LPSTR lpAuxProjPath,
                        _Out_z_cap_(SCC_PRJPATH_SIZE) LPSTR lpSubProjPath
                        );

/*******************************************************************************
	Returns parent path of the given project (the project must exist). 
	For the store root folder, the function should return the given path 
	(i.e. the same root folder path). The caller must be prepared to accept changes 
	to lpUser, lpParentProjPath, and lpAuxProjPath. lpParentProjPath and lpAuxProjPath 
	are then used in a call to SccOpenProject.  They should not be modified 
	by the caller upon return. The caller should avoid displaying these two parameters 
	upon return, as the provider might use a formatted string that is not ready for view.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccGetParentProjectPath(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _Inout_z_ _Inout_cap_(SCC_USER_SIZE) LPSTR lpUser,
                        _In_z_ _In_count_(SCC_PRJPATH_SIZE) LPCSTR lpProjPath, 
                        _Inout_z_ _Inout_cap_(SCC_PRJPATH_SIZE) LPSTR lpAuxProjPath,
                        _Out_z_cap_(SCC_PRJPATH_SIZE) LPSTR lpParentProjPath
                        );

/*******************************************************************************
	Checks if multiple checkouts on a file are allowed.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccIsMultiCheckoutEnabled(
                        _Inout_ LPVOID pContext, 
			            _Out_ LPBOOL pbMultiCheckout
                        );

/*******************************************************************************
	Checks if the provider will create MSSCCPRJ.SCC files in the same
	directories as the given files if the given files are placed under source
	control. The file paths must be fully qualified.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccWillCreateSccFile(
                        _Inout_ LPVOID pContext, 
                        _In_ LONG nFiles,
                        _In_count_(nFiles) LPCSTR* lpFileNames,
						_Out_cap_(nFiles) LPBOOL pbSccFiles
                        );

/*******************************************************************************
	Returns extra capabilities for the provider.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccGetExtendedCapabilities(
                        _Inout_ LPVOID pContext, 
                        _In_ LONG   lSccExCap,
                        _Out_ LPBOOL pbSupported
			);

/*******************************************************************************
	Returns the list of files in the database different than local files.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccEnumChangedFiles(
			_Inout_ LPVOID pContext,									  
			_In_ HWND hWnd, 
			_In_ LONG cFiles, 
			_In_count_(cFiles) LPCSTR* lpFileNames, 
			_Out_cap_(cFiles) LONG* plIsFileDifferent
			);

/*******************************************************************************
	Add the list of source controlled files to the currently open project.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccAddFilesFromSCC(
			_Inout_ LPVOID pContext,									  
			_In_ HWND hWnd, 
			_Inout_z_ _Inout_cap_(SCC_USER_SIZE) LPSTR lpUser,
			_Inout_z_ _Inout_cap_(SCC_PRJPATH_SIZE) LPSTR lpAuxProjPath,
			_In_ LONG cFiles, 
			_In_count_(cFiles) LPCSTR* lpFilePaths,
			_In_z_ LPCSTR lpDestination,
			_In_opt_z_ LPCSTR lpComment,
			_Out_cap_(cFiles) LPBOOL pbResults	 
			);

/*******************************************************************************
	Removes the array of fully qualified files from the source control system.
	The files are not removed from the user's disk, unless advanced options
	are set by the user.  Advaned options are defined by the provider.
*******************************************************************************/
SCCEXTERNC SCCRTN EXTFUN __cdecl SccRemoveDir(
                        _Inout_ LPVOID pContext, 
                        _In_ HWND hWnd, 
                        _In_ LONG nDirs, 
                        _In_count_(nDirs) LPCSTR* lpDirNames, 
                        _In_opt_z_ LPCSTR lpComment,
                        _In_ LONG dwFlags,
                        _In_opt_ LPCMDOPTS pvOptions
                        );

#if defined( __cplusplus )
}
#endif





#endif // _SCC_DEFS

//******* EOF ********
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\sccmnid.h ===
/*-------------------------------------------------------------------------------
Microsoft Visual Studio Enterprise Edition

Namespace: None
Subsystem: Visual Studio Source Code Control
Copyright: (c) 1997-2000, Microsoft Corporation
           All Rights Reserved

@doc	internal

@module sccmnid.h - SCC Package Menu IDs |

-------------------------------------------------------------------------------*/

// Can't use pragma once here, as this passes through ctc
#ifndef SccMnID_H_Included
#define SccMnID_H_Included

// Note that we have code that depends on the adjacency of the context and non-context
// versions of the commands, and also upon the odd/even dichotomy

#define icmdFlagContext							1

#define icmdSccAdd								21000
#define icmdSccContextAdd						21001	// (icmdSccAdd+icmdFlagContext)
#define icmdSccCheckout							21002
#define icmdSccContextCheckout					21003	// (icmdSccCheckout+icmdFlagContext)
#define icmdSccCheckoutShared					21004
#define icmdSccContextCheckoutShared			21005	// (icmdSccCheckoutShared+icmdFlagContext)
#define icmdSccCheckoutExclusive				21006
#define icmdSccContextCheckoutExclusive			21007	// (icmdSccCheckoutExclusive+icmdFlagContext)
#define icmdSccUndoCheckout						21008
#define icmdSccContextUndoCheckout				21009	// (icmdSccUndoCheckout+icmdFlagContext)
#define icmdSccGetLatestVersion					21010	
#define icmdSccContextGetLatestVersion			21011	// (icmdSccGetLatestVersion+icmdFlagContext)	
#define icmdSccShowNonEmptyCheckinWindow		21012
#define icmdSccContextShowNonEmptyCheckinWindow	21013	// (icmdSccShowNonEmptyCheckinWindow+icmdFlagContext)
#define icmdSccCheckin							21014
#define icmdSccContextCheckin					21015	// (icmdSccCheckin+icmdFlagContext)

// The order for the "Add" commands are important because they are used as a range
#define icmdSccAddSolution						21016	
#define icmdSccContextAddSolution				21017	// (icmdSccAddSolution + icmdFlagContext)
#define icmdSccAddSelection						21018	
#define icmdSccContextAddSelection				21019	// (icmdSccAddSelection + icmdFlagContext)

#define icmdSccShelve							21020
#define icmdSccContextShelve					21021	// (icmdSccShelve + icmdFlagContext)

#define icmdSccGetVersion						21500
#define icmdSccContextGetVersion				21501  // (icmdSccGetVersion + icmdFlagContext)
#define icmdSccShowCheckinWindow				21502
#define icmdSccProperties						21504
#define icmdSccDiff								21506
#define icmdSccHistory							21508
#define icmdSccShare							21510
#define icmdSccRemove							21512
#define icmdSccAdmin							21514
#define icmdSccRefreshStatus					21516
#define icmdSccRename							21518
#define icmdSccSetLocation						21520

#define icmdSccOpenFromSourceControl						21522
#define icmdSccAddSelectionWithSolution						21524	// "Virtual provider" - the same provider as the current solution has
#define icmdSccShowConnectionManager						21526

#define icmdSccAddFromSourceControlSingleProvider			21536	// AddFromSC with a single versioning provider

#define igrpSccMainAdd										22000	// IDG_SCC_ADD 28
#define	igrpSccMainCommands									22001	
#define	igrpSccMainAction									22002	// IDG_SCC_MAIN 26
#define	igrpSccMainSecondary								22003	// IDG_SCC_MAIN2 30
#define	igrpSccMainAdmin									22004	// IDG_SCC_MAIN3 31
#define	igrpSccCommands										22005	// IDG_SCC_SUBMENU 29
#define	igrpSccEditorContext								22006	// IDG_SCC_CTXT_EDIT 32
#define igrpSccOpenFromSourceControl						22007
#define igrpSccOpenFromSourceControlProviders				22008
#define igrpSccAddSolutionToSourceControlProviders			22009
#define igrpSccAddSelectionToSourceControlProviders			22010

#define igrpSccSccAddSelectionWithSolution					22011
#define igrpSccOpenFromSourceControlMSSCCIProvider			22012
#define igrpSccAddSolutionToSourceControlMSSCCIProvider		22013
#define igrpSccAddSelectionToSourceControlMSSCCIProvider	22014
#define igrpSccAddFromSourceControl							22015
#define igrpSccAddFromSourceControlMSSCCIProvider			22016
#define igrpSccAddFromSourceControlProviders				22017
												
#define imnuSccMenu											23000	// IDM_VS_MENU_SCC 18 
#define imnuSccOpenFromSourceControl						23001
#define imnuSccAddSolutionToSourceControl					23002
#define imnuSccAddSelectionToSourceControl					23003
#define imnuSccAddFromSourceControl							23004
												
#define itbrSccToolbar										24000	// IDM_VS_TOOL_SCC 17 

#ifdef DEFINE_GUID // presumably compiling code, not ctc.

DEFINE_GUID(guidSccPkg,
0xAA8EB8CD, 0x7A51, 0x11D0, 0x92, 0xC3, 0x00, 0xA0, 0xC9, 0x13, 0x8C, 0x45);

// {53544C4D-C4AD-4998-9808-00935EA47729}
DEFINE_GUID(guidSccOpenFromSourceControl, 
0x53544C4D, 0xc4ad, 0x4998, 0x98, 0x8, 0x0, 0x93, 0x5e, 0xa4, 0x77, 0x29);

// {53544C4D-0E51-4941-83F6-29423FED03EF}
DEFINE_GUID(guidSccAddSolutionToSourceControl, 
0x53544C4D, 0xe51, 0x4941, 0x83, 0xf6, 0x29, 0x42, 0x3f, 0xed, 0x3, 0xef);

// {53544C4D-5DAE-4c96-A292-5057FD62BCC2}
DEFINE_GUID(guidSccAddSelectionToSourceControl, 
0x53544C4D, 0x5dae, 0x4c96, 0xa2, 0x92, 0x50, 0x57, 0xfd, 0x62, 0xbc, 0xc2);

// {53544C4D-7D04-46b0-87D4-35A81DC2FEFC}
DEFINE_GUID(guidSccAddFromSourceControl, 
0x53544C4D, 0x7d04, 0x46b0, 0x87, 0xd4, 0x35, 0xa8, 0x1d, 0xc2, 0xfe, 0xfc);

// {53544C4D-3BF2-4b83-A468-295691EB8609}
DEFINE_GUID(guidSccViewTeamExplorer, 
0x53544C4D, 0x3bf2, 0x4b83, 0xa4, 0x68, 0x29, 0x56, 0x91, 0xeb, 0x86, 0x9);

// {53544C4D-3BF3-4b83-A468-295691EB8609}
DEFINE_GUID(guidSccViewVisualComponentManager, 
0x53544C4D, 0x3bf3, 0x4b83, 0xa4, 0x68, 0x29, 0x56, 0x91, 0xeb, 0x86, 0x9);

#else // ctc

#define guidSccPkg { \
0xAA8EB8CD, 0x7A51, 0x11D0, { 0x92, 0xC3, 0x00, 0xA0, 0xC9, 0x13, 0x8C, 0x45 }}

// {53544C4D-C4AD-4998-9808-00935EA47729}
#define guidSccOpenFromSourceControl { \
0x53544C4D, 0xC4Ad, 0x4998, { 0x98, 0x08, 0x00, 0x93, 0x5E, 0xA4, 0x77, 0x29 }}

// {53544C4D-0E51-4941-83F6-29423FED03EF}
#define guidSccAddSolutionToSourceControl { \
0x53544C4D, 0x0E51, 0x4941, { 0x83, 0xF6, 0x29, 0x42, 0x3F, 0xED, 0x03, 0xEF }}

// {53544C4D-5DAE-4c96-A292-5057FD62BCC2}
#define guidSccAddSelectionToSourceControl { \
0x53544C4D, 0x5DAE, 0x4C96, { 0xA2, 0x92, 0x50, 0x57, 0xFD, 0x62, 0xBC, 0xC2 }}

// {53544C4D-7D04-46b0-87D4-35A81DC2FEFC}
#define guidSccAddFromSourceControl { \
0x53544C4D, 0x7d04, 0x46b0, { 0x87, 0xd4, 0x35, 0xa8, 0x1d, 0xc2, 0xfe, 0xfc }}

// {53544C4D-3BF2-4b83-A468-295691EB8609}
#define guidSccViewTeamExplorer { \
0x53544C4D, 0x3bf2, 0x4b83, { 0xa4, 0x68, 0x29, 0x56, 0x91, 0xeb, 0x86, 0x9	}}

// {53544C4D-3BF3-4b83-A468-295691EB8609}
#define guidSccViewVisualComponentManager { \
0x53544C4D, 0x3bf3, 0x4b83, { 0xa4, 0x68, 0x29, 0x56, 0x91, 0xeb, 0x86, 0x9	}}

#endif // DEFINE_GUID

#endif // #pragma once
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\singlefileeditor.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for singlefileeditor.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __singlefileeditor_h__
#define __singlefileeditor_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IVsIntellisenseHost_FWD_DEFINED__
#define __IVsIntellisenseHost_FWD_DEFINED__
typedef interface IVsIntellisenseHost IVsIntellisenseHost;
#endif 	/* __IVsIntellisenseHost_FWD_DEFINED__ */


#ifndef __IVsTextViewIntellisenseHost_FWD_DEFINED__
#define __IVsTextViewIntellisenseHost_FWD_DEFINED__
typedef interface IVsTextViewIntellisenseHost IVsTextViewIntellisenseHost;
#endif 	/* __IVsTextViewIntellisenseHost_FWD_DEFINED__ */


#ifndef __IVsTextViewIntellisenseHostProvider_FWD_DEFINED__
#define __IVsTextViewIntellisenseHostProvider_FWD_DEFINED__
typedef interface IVsTextViewIntellisenseHostProvider IVsTextViewIntellisenseHostProvider;
#endif 	/* __IVsTextViewIntellisenseHostProvider_FWD_DEFINED__ */


#ifndef __VsIntellisenseCompletor_FWD_DEFINED__
#define __VsIntellisenseCompletor_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsIntellisenseCompletor VsIntellisenseCompletor;
#else
typedef struct VsIntellisenseCompletor VsIntellisenseCompletor;
#endif /* __cplusplus */

#endif 	/* __VsIntellisenseCompletor_FWD_DEFINED__ */


#ifndef __IVsIntellisenseCompletor_FWD_DEFINED__
#define __IVsIntellisenseCompletor_FWD_DEFINED__
typedef interface IVsIntellisenseCompletor IVsIntellisenseCompletor;
#endif 	/* __IVsIntellisenseCompletor_FWD_DEFINED__ */


#ifndef __VsIntellisenseLangTip_FWD_DEFINED__
#define __VsIntellisenseLangTip_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsIntellisenseLangTip VsIntellisenseLangTip;
#else
typedef struct VsIntellisenseLangTip VsIntellisenseLangTip;
#endif /* __cplusplus */

#endif 	/* __VsIntellisenseLangTip_FWD_DEFINED__ */


#ifndef __IVsIntellisenseLangTip_FWD_DEFINED__
#define __IVsIntellisenseLangTip_FWD_DEFINED__
typedef interface IVsIntellisenseLangTip IVsIntellisenseLangTip;
#endif 	/* __IVsIntellisenseLangTip_FWD_DEFINED__ */


#ifndef __IVsContainedLanguageHost_FWD_DEFINED__
#define __IVsContainedLanguageHost_FWD_DEFINED__
typedef interface IVsContainedLanguageHost IVsContainedLanguageHost;
#endif 	/* __IVsContainedLanguageHost_FWD_DEFINED__ */


#ifndef __IVsContainedLanguageHostEvents_FWD_DEFINED__
#define __IVsContainedLanguageHostEvents_FWD_DEFINED__
typedef interface IVsContainedLanguageHostEvents IVsContainedLanguageHostEvents;
#endif 	/* __IVsContainedLanguageHostEvents_FWD_DEFINED__ */


#ifndef __IVsContainedLanguage_FWD_DEFINED__
#define __IVsContainedLanguage_FWD_DEFINED__
typedef interface IVsContainedLanguage IVsContainedLanguage;
#endif 	/* __IVsContainedLanguage_FWD_DEFINED__ */


#ifndef __IVsContainedLanguageColorizer_FWD_DEFINED__
#define __IVsContainedLanguageColorizer_FWD_DEFINED__
typedef interface IVsContainedLanguageColorizer IVsContainedLanguageColorizer;
#endif 	/* __IVsContainedLanguageColorizer_FWD_DEFINED__ */


#ifndef __IVsContainedLanguageCodeSupport_FWD_DEFINED__
#define __IVsContainedLanguageCodeSupport_FWD_DEFINED__
typedef interface IVsContainedLanguageCodeSupport IVsContainedLanguageCodeSupport;
#endif 	/* __IVsContainedLanguageCodeSupport_FWD_DEFINED__ */


#ifndef __IVsContainedLanguageStaticEventBinding_FWD_DEFINED__
#define __IVsContainedLanguageStaticEventBinding_FWD_DEFINED__
typedef interface IVsContainedLanguageStaticEventBinding IVsContainedLanguageStaticEventBinding;
#endif 	/* __IVsContainedLanguageStaticEventBinding_FWD_DEFINED__ */


#ifndef __IVsWebFormDesignerSupport_FWD_DEFINED__
#define __IVsWebFormDesignerSupport_FWD_DEFINED__
typedef interface IVsWebFormDesignerSupport IVsWebFormDesignerSupport;
#endif 	/* __IVsWebFormDesignerSupport_FWD_DEFINED__ */


#ifndef __IVsEnumCodeBlocks_FWD_DEFINED__
#define __IVsEnumCodeBlocks_FWD_DEFINED__
typedef interface IVsEnumCodeBlocks IVsEnumCodeBlocks;
#endif 	/* __IVsEnumCodeBlocks_FWD_DEFINED__ */


#ifndef __IVsContainedCode_FWD_DEFINED__
#define __IVsContainedCode_FWD_DEFINED__
typedef interface IVsContainedCode IVsContainedCode;
#endif 	/* __IVsContainedCode_FWD_DEFINED__ */


#ifndef __IVsContainedLanguageFactory_FWD_DEFINED__
#define __IVsContainedLanguageFactory_FWD_DEFINED__
typedef interface IVsContainedLanguageFactory IVsContainedLanguageFactory;
#endif 	/* __IVsContainedLanguageFactory_FWD_DEFINED__ */


#ifndef __IVsContainedLanguageProjectNameProvider_FWD_DEFINED__
#define __IVsContainedLanguageProjectNameProvider_FWD_DEFINED__
typedef interface IVsContainedLanguageProjectNameProvider IVsContainedLanguageProjectNameProvider;
#endif 	/* __IVsContainedLanguageProjectNameProvider_FWD_DEFINED__ */


#ifndef __IVsEnumBufferCoordinatorSpans_FWD_DEFINED__
#define __IVsEnumBufferCoordinatorSpans_FWD_DEFINED__
typedef interface IVsEnumBufferCoordinatorSpans IVsEnumBufferCoordinatorSpans;
#endif 	/* __IVsEnumBufferCoordinatorSpans_FWD_DEFINED__ */


#ifndef __VsTextBufferCoordinator_FWD_DEFINED__
#define __VsTextBufferCoordinator_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsTextBufferCoordinator VsTextBufferCoordinator;
#else
typedef struct VsTextBufferCoordinator VsTextBufferCoordinator;
#endif /* __cplusplus */

#endif 	/* __VsTextBufferCoordinator_FWD_DEFINED__ */


#ifndef __IVsTextBufferCoordinator_FWD_DEFINED__
#define __IVsTextBufferCoordinator_FWD_DEFINED__
typedef interface IVsTextBufferCoordinator IVsTextBufferCoordinator;
#endif 	/* __IVsTextBufferCoordinator_FWD_DEFINED__ */


#ifndef __IVsSetSpanMappingEvents_FWD_DEFINED__
#define __IVsSetSpanMappingEvents_FWD_DEFINED__
typedef interface IVsSetSpanMappingEvents IVsSetSpanMappingEvents;
#endif 	/* __IVsSetSpanMappingEvents_FWD_DEFINED__ */


#ifndef __IVsExternalCompletionSet_FWD_DEFINED__
#define __IVsExternalCompletionSet_FWD_DEFINED__
typedef interface IVsExternalCompletionSet IVsExternalCompletionSet;
#endif 	/* __IVsExternalCompletionSet_FWD_DEFINED__ */


#ifndef __IVsExpansionIntellisenseHost_FWD_DEFINED__
#define __IVsExpansionIntellisenseHost_FWD_DEFINED__
typedef interface IVsExpansionIntellisenseHost IVsExpansionIntellisenseHost;
#endif 	/* __IVsExpansionIntellisenseHost_FWD_DEFINED__ */


#ifndef __IVsReportExternalErrors_FWD_DEFINED__
#define __IVsReportExternalErrors_FWD_DEFINED__
typedef interface IVsReportExternalErrors IVsReportExternalErrors;
#endif 	/* __IVsReportExternalErrors_FWD_DEFINED__ */


#ifndef __IVsEnumExternalErrors_FWD_DEFINED__
#define __IVsEnumExternalErrors_FWD_DEFINED__
typedef interface IVsEnumExternalErrors IVsEnumExternalErrors;
#endif 	/* __IVsEnumExternalErrors_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "oleidl.h"
#include "textmgr.h"
#include "textmgr2.h"
#include "vsshell.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_singlefileeditor_0000_0000 */
/* [local] */ 

#pragma once













typedef struct _TEXTSPANPAIR
    {
    TextSpan span1;
    TextSpan span2;
    } 	TextSpanPair;

typedef struct _TEXTSPANANDCOOKIE
    {
    ULONG ulHTMLCookie;
    TextSpan CodeSpan;
    } 	TextSpanAndCookie;


enum IntellisenseHostFlags
    {	IHF_READONLYCONTEXT	= 0x1,
	IHF_NOSEPARATESUBJECT	= 0x2,
	IHF_SINGLELINESUBJECT	= 0x4,
	IHF_FORCECOMMITTOCONTEXT	= 0x8,
	IHF_OVERTYPE	= 0x10
    } ;
typedef 
enum _CODEMEMBERTYPE
    {	CODEMEMBERTYPE_EVENTS	= 0x1,
	CODEMEMBERTYPE_EVENT_HANDLERS	= 0x2,
	CODEMEMBERTYPE_USER_FUNCTIONS	= 0x4
    } 	CODEMEMBERTYPE;


enum ContainedLanguageRefreshMode
    {	CLRM_COMPILEFILE	= 1,
	CLRM_COMPILEPROJECT	= 2
    } ;
typedef 
enum _CONTAINEDLANGUAGERENAMETYPE
    {	CLRT_CLASS	= 0,
	CLRT_CLASSMEMBER	= ( CLRT_CLASS + 1 ) ,
	CLRT_NAMESPACE	= ( CLRT_CLASSMEMBER + 1 ) ,
	CLRT_OTHER	= ( CLRT_NAMESPACE + 1 ) 
    } 	ContainedLanguageRenameType;



extern RPC_IF_HANDLE __MIDL_itf_singlefileeditor_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_singlefileeditor_0000_0000_v0_0_s_ifspec;


#ifndef __SingleFileEditor_LIBRARY_DEFINED__
#define __SingleFileEditor_LIBRARY_DEFINED__

/* library SingleFileEditor */
/* [version][uuid] */ 

#define E_CONTAINEDLANGUAGE_CANNOTFINDITEM MAKE_HRESULT(1, FACILITY_ITF, 0x8003)
#define E_CONTAINEDLANGUAGE_RENAMECANCELLED MAKE_HRESULT(1, FACILITY_ITF, 0x8004)
typedef struct _tag_NewSpanMapping
    {
    TextSpanPair tspSpans;
    VARIANT varUserData;
    } 	NewSpanMapping;

typedef struct _tag_ExternalError
    {
    long iLine;
    long iCol;
    long iErrorID;
    BOOL fError;
    BSTR bstrText;
    BSTR bstrFileName;
    } 	ExternalError;


enum BufferCoordinatorReplicationDirection
    {	BCRD_PRIMARY_TO_SECONDARY	= 1,
	BCRD_SECONDARY_TO_PRIMARY	= 2
    } ;

enum _BufferCoordinatorMappingMode
    {	BCMM_NORMAL	= 0,
	BCMM_EXTENDEDLEFT	= 0x2,
	BCMM_EXTENDEDRIGHT	= 0x1,
	BCMM_EXTENDED	= 0x3,
	BCMM_ENTIREBUFFER	= 0x4
    } ;
typedef DWORD BufferCoordinatorMappingMode;


EXTERN_C const IID LIBID_SingleFileEditor;

#ifndef __IVsIntellisenseHost_INTERFACE_DEFINED__
#define __IVsIntellisenseHost_INTERFACE_DEFINED__

/* interface IVsIntellisenseHost */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsIntellisenseHost;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0377986B-C450-453c-A7BE-67116C9129A6")
    IVsIntellisenseHost : public IOleCommandTarget
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetHostFlags( 
            /* [retval][out] */ __RPC__out DWORD *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContextBuffer( 
            /* [retval][out] */ __RPC__deref_out_opt IVsTextLines **ppCtxBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContextFocalPoint( 
            /* [out] */ __RPC__out TextSpan *pSpan,
            __RPC__in long *piLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetContextCaretPos( 
            /* [in] */ long iLine,
            /* [in] */ long iIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContextCaretPos( 
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetContextSelection( 
            /* [in] */ long iStartLine,
            /* [in] */ long iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ long iEndIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContextSelection( 
            /* [out] */ __RPC__out TextSpan *pSelectionSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSubjectText( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrSubjectText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSubjectCaretPos( 
            /* [in] */ long iIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSubjectCaretPos( 
            /* [out] */ __RPC__out long *piIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSubjectSelection( 
            /* [in] */ long iAnchorIndex,
            /* [in] */ long iEndIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSubjectSelection( 
            /* [out] */ __RPC__out long *piAnchorIndex,
            /* [out] */ __RPC__out long *piEndIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceSubjectTextSpan( 
            /* [in] */ long iStartIndex,
            /* [in] */ long iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateCompletionStatus( 
            /* [in] */ __RPC__in_opt IVsCompletionSet *pCompSet,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateTipWindow( 
            /* [in] */ __RPC__in_opt IVsTipWindow *pTipWindow,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HighlightMatchingBrace( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ ULONG cSpans,
            /* [size_is][in] */ __RPC__in_ecount_full(cSpans) TextSpan *rgBaseSpans) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BeforeCompletorCommit( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AfterCompletorCommit( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetServiceProvider( 
            /* [out] */ __RPC__deref_out_opt IServiceProvider **ppSP) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHostWindow( 
            /* [out] */ __RPC__deref_out_opt HWND *hwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContextLocation( 
            /* [in] */ long iPos,
            /* [in] */ long iLen,
            /* [in] */ BOOL fUseCaretPosition,
            /* [out] */ __RPC__out RECT *prc,
            /* [out] */ __RPC__out long *piTopX) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateSmartTagWindow( 
            /* [in] */ __RPC__in_opt IVsSmartTagTipWindow *pSmartTagWnd,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSmartTagRect( 
            /* [out] */ __RPC__out RECT *rcSmartTag) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsIntellisenseHostVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsIntellisenseHost * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsIntellisenseHost * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsIntellisenseHost * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE *QueryStatus )( 
            IVsIntellisenseHost * This,
            /* [unique][in] */ __RPC__in_opt const GUID *pguidCmdGroup,
            /* [in] */ ULONG cCmds,
            /* [out][in][size_is] */ __RPC__inout_ecount_full(cCmds) OLECMD prgCmds[  ],
            /* [unique][out][in] */ __RPC__inout_opt OLECMDTEXT *pCmdText);
        
        HRESULT ( STDMETHODCALLTYPE *Exec )( 
            IVsIntellisenseHost * This,
            /* [unique][in] */ __RPC__in_opt const GUID *pguidCmdGroup,
            /* [in] */ DWORD nCmdID,
            /* [in] */ DWORD nCmdexecopt,
            /* [unique][in] */ __RPC__in_opt VARIANT *pvaIn,
            /* [unique][out][in] */ __RPC__inout_opt VARIANT *pvaOut);
        
        HRESULT ( STDMETHODCALLTYPE *GetHostFlags )( 
            IVsIntellisenseHost * This,
            /* [retval][out] */ __RPC__out DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextBuffer )( 
            IVsIntellisenseHost * This,
            /* [retval][out] */ __RPC__deref_out_opt IVsTextLines **ppCtxBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextFocalPoint )( 
            IVsIntellisenseHost * This,
            /* [out] */ __RPC__out TextSpan *pSpan,
            __RPC__in long *piLen);
        
        HRESULT ( STDMETHODCALLTYPE *SetContextCaretPos )( 
            IVsIntellisenseHost * This,
            /* [in] */ long iLine,
            /* [in] */ long iIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextCaretPos )( 
            IVsIntellisenseHost * This,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piIndex);
        
        HRESULT ( STDMETHODCALLTYPE *SetContextSelection )( 
            IVsIntellisenseHost * This,
            /* [in] */ long iStartLine,
            /* [in] */ long iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ long iEndIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextSelection )( 
            IVsIntellisenseHost * This,
            /* [out] */ __RPC__out TextSpan *pSelectionSpan);
        
        HRESULT ( STDMETHODCALLTYPE *GetSubjectText )( 
            IVsIntellisenseHost * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrSubjectText);
        
        HRESULT ( STDMETHODCALLTYPE *SetSubjectCaretPos )( 
            IVsIntellisenseHost * This,
            /* [in] */ long iIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetSubjectCaretPos )( 
            IVsIntellisenseHost * This,
            /* [out] */ __RPC__out long *piIndex);
        
        HRESULT ( STDMETHODCALLTYPE *SetSubjectSelection )( 
            IVsIntellisenseHost * This,
            /* [in] */ long iAnchorIndex,
            /* [in] */ long iEndIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetSubjectSelection )( 
            IVsIntellisenseHost * This,
            /* [out] */ __RPC__out long *piAnchorIndex,
            /* [out] */ __RPC__out long *piEndIndex);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceSubjectTextSpan )( 
            IVsIntellisenseHost * This,
            /* [in] */ long iStartIndex,
            /* [in] */ long iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateCompletionStatus )( 
            IVsIntellisenseHost * This,
            /* [in] */ __RPC__in_opt IVsCompletionSet *pCompSet,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateTipWindow )( 
            IVsIntellisenseHost * This,
            /* [in] */ __RPC__in_opt IVsTipWindow *pTipWindow,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *HighlightMatchingBrace )( 
            IVsIntellisenseHost * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ ULONG cSpans,
            /* [size_is][in] */ __RPC__in_ecount_full(cSpans) TextSpan *rgBaseSpans);
        
        HRESULT ( STDMETHODCALLTYPE *BeforeCompletorCommit )( 
            IVsIntellisenseHost * This);
        
        HRESULT ( STDMETHODCALLTYPE *AfterCompletorCommit )( 
            IVsIntellisenseHost * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetServiceProvider )( 
            IVsIntellisenseHost * This,
            /* [out] */ __RPC__deref_out_opt IServiceProvider **ppSP);
        
        HRESULT ( STDMETHODCALLTYPE *GetHostWindow )( 
            IVsIntellisenseHost * This,
            /* [out] */ __RPC__deref_out_opt HWND *hwnd);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextLocation )( 
            IVsIntellisenseHost * This,
            /* [in] */ long iPos,
            /* [in] */ long iLen,
            /* [in] */ BOOL fUseCaretPosition,
            /* [out] */ __RPC__out RECT *prc,
            /* [out] */ __RPC__out long *piTopX);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateSmartTagWindow )( 
            IVsIntellisenseHost * This,
            /* [in] */ __RPC__in_opt IVsSmartTagTipWindow *pSmartTagWnd,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetSmartTagRect )( 
            IVsIntellisenseHost * This,
            /* [out] */ __RPC__out RECT *rcSmartTag);
        
        END_INTERFACE
    } IVsIntellisenseHostVtbl;

    interface IVsIntellisenseHost
    {
        CONST_VTBL struct IVsIntellisenseHostVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsIntellisenseHost_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsIntellisenseHost_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsIntellisenseHost_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsIntellisenseHost_QueryStatus(This,pguidCmdGroup,cCmds,prgCmds,pCmdText)	\
    ( (This)->lpVtbl -> QueryStatus(This,pguidCmdGroup,cCmds,prgCmds,pCmdText) ) 

#define IVsIntellisenseHost_Exec(This,pguidCmdGroup,nCmdID,nCmdexecopt,pvaIn,pvaOut)	\
    ( (This)->lpVtbl -> Exec(This,pguidCmdGroup,nCmdID,nCmdexecopt,pvaIn,pvaOut) ) 


#define IVsIntellisenseHost_GetHostFlags(This,pdwFlags)	\
    ( (This)->lpVtbl -> GetHostFlags(This,pdwFlags) ) 

#define IVsIntellisenseHost_GetContextBuffer(This,ppCtxBuffer)	\
    ( (This)->lpVtbl -> GetContextBuffer(This,ppCtxBuffer) ) 

#define IVsIntellisenseHost_GetContextFocalPoint(This,pSpan,piLen)	\
    ( (This)->lpVtbl -> GetContextFocalPoint(This,pSpan,piLen) ) 

#define IVsIntellisenseHost_SetContextCaretPos(This,iLine,iIndex)	\
    ( (This)->lpVtbl -> SetContextCaretPos(This,iLine,iIndex) ) 

#define IVsIntellisenseHost_GetContextCaretPos(This,piLine,piIndex)	\
    ( (This)->lpVtbl -> GetContextCaretPos(This,piLine,piIndex) ) 

#define IVsIntellisenseHost_SetContextSelection(This,iStartLine,iStartIndex,iEndLine,iEndIndex)	\
    ( (This)->lpVtbl -> SetContextSelection(This,iStartLine,iStartIndex,iEndLine,iEndIndex) ) 

#define IVsIntellisenseHost_GetContextSelection(This,pSelectionSpan)	\
    ( (This)->lpVtbl -> GetContextSelection(This,pSelectionSpan) ) 

#define IVsIntellisenseHost_GetSubjectText(This,pbstrSubjectText)	\
    ( (This)->lpVtbl -> GetSubjectText(This,pbstrSubjectText) ) 

#define IVsIntellisenseHost_SetSubjectCaretPos(This,iIndex)	\
    ( (This)->lpVtbl -> SetSubjectCaretPos(This,iIndex) ) 

#define IVsIntellisenseHost_GetSubjectCaretPos(This,piIndex)	\
    ( (This)->lpVtbl -> GetSubjectCaretPos(This,piIndex) ) 

#define IVsIntellisenseHost_SetSubjectSelection(This,iAnchorIndex,iEndIndex)	\
    ( (This)->lpVtbl -> SetSubjectSelection(This,iAnchorIndex,iEndIndex) ) 

#define IVsIntellisenseHost_GetSubjectSelection(This,piAnchorIndex,piEndIndex)	\
    ( (This)->lpVtbl -> GetSubjectSelection(This,piAnchorIndex,piEndIndex) ) 

#define IVsIntellisenseHost_ReplaceSubjectTextSpan(This,iStartIndex,iEndIndex,pszText)	\
    ( (This)->lpVtbl -> ReplaceSubjectTextSpan(This,iStartIndex,iEndIndex,pszText) ) 

#define IVsIntellisenseHost_UpdateCompletionStatus(This,pCompSet,dwFlags)	\
    ( (This)->lpVtbl -> UpdateCompletionStatus(This,pCompSet,dwFlags) ) 

#define IVsIntellisenseHost_UpdateTipWindow(This,pTipWindow,dwFlags)	\
    ( (This)->lpVtbl -> UpdateTipWindow(This,pTipWindow,dwFlags) ) 

#define IVsIntellisenseHost_HighlightMatchingBrace(This,dwFlags,cSpans,rgBaseSpans)	\
    ( (This)->lpVtbl -> HighlightMatchingBrace(This,dwFlags,cSpans,rgBaseSpans) ) 

#define IVsIntellisenseHost_BeforeCompletorCommit(This)	\
    ( (This)->lpVtbl -> BeforeCompletorCommit(This) ) 

#define IVsIntellisenseHost_AfterCompletorCommit(This)	\
    ( (This)->lpVtbl -> AfterCompletorCommit(This) ) 

#define IVsIntellisenseHost_GetServiceProvider(This,ppSP)	\
    ( (This)->lpVtbl -> GetServiceProvider(This,ppSP) ) 

#define IVsIntellisenseHost_GetHostWindow(This,hwnd)	\
    ( (This)->lpVtbl -> GetHostWindow(This,hwnd) ) 

#define IVsIntellisenseHost_GetContextLocation(This,iPos,iLen,fUseCaretPosition,prc,piTopX)	\
    ( (This)->lpVtbl -> GetContextLocation(This,iPos,iLen,fUseCaretPosition,prc,piTopX) ) 

#define IVsIntellisenseHost_UpdateSmartTagWindow(This,pSmartTagWnd,dwFlags)	\
    ( (This)->lpVtbl -> UpdateSmartTagWindow(This,pSmartTagWnd,dwFlags) ) 

#define IVsIntellisenseHost_GetSmartTagRect(This,rcSmartTag)	\
    ( (This)->lpVtbl -> GetSmartTagRect(This,rcSmartTag) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsIntellisenseHost_INTERFACE_DEFINED__ */


#ifndef __IVsTextViewIntellisenseHost_INTERFACE_DEFINED__
#define __IVsTextViewIntellisenseHost_INTERFACE_DEFINED__

/* interface IVsTextViewIntellisenseHost */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextViewIntellisenseHost;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0816A38B-2B41-4d2a-B1FF-23C1E28D8A18")
    IVsTextViewIntellisenseHost : public IVsIntellisenseHost
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetSubjectFromPrimaryBuffer( 
            __RPC__in TextSpan *pSpanInPrimary) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextViewIntellisenseHostVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextViewIntellisenseHost * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextViewIntellisenseHost * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextViewIntellisenseHost * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE *QueryStatus )( 
            IVsTextViewIntellisenseHost * This,
            /* [unique][in] */ __RPC__in_opt const GUID *pguidCmdGroup,
            /* [in] */ ULONG cCmds,
            /* [out][in][size_is] */ __RPC__inout_ecount_full(cCmds) OLECMD prgCmds[  ],
            /* [unique][out][in] */ __RPC__inout_opt OLECMDTEXT *pCmdText);
        
        HRESULT ( STDMETHODCALLTYPE *Exec )( 
            IVsTextViewIntellisenseHost * This,
            /* [unique][in] */ __RPC__in_opt const GUID *pguidCmdGroup,
            /* [in] */ DWORD nCmdID,
            /* [in] */ DWORD nCmdexecopt,
            /* [unique][in] */ __RPC__in_opt VARIANT *pvaIn,
            /* [unique][out][in] */ __RPC__inout_opt VARIANT *pvaOut);
        
        HRESULT ( STDMETHODCALLTYPE *GetHostFlags )( 
            IVsTextViewIntellisenseHost * This,
            /* [retval][out] */ __RPC__out DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextBuffer )( 
            IVsTextViewIntellisenseHost * This,
            /* [retval][out] */ __RPC__deref_out_opt IVsTextLines **ppCtxBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextFocalPoint )( 
            IVsTextViewIntellisenseHost * This,
            /* [out] */ __RPC__out TextSpan *pSpan,
            __RPC__in long *piLen);
        
        HRESULT ( STDMETHODCALLTYPE *SetContextCaretPos )( 
            IVsTextViewIntellisenseHost * This,
            /* [in] */ long iLine,
            /* [in] */ long iIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextCaretPos )( 
            IVsTextViewIntellisenseHost * This,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piIndex);
        
        HRESULT ( STDMETHODCALLTYPE *SetContextSelection )( 
            IVsTextViewIntellisenseHost * This,
            /* [in] */ long iStartLine,
            /* [in] */ long iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ long iEndIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextSelection )( 
            IVsTextViewIntellisenseHost * This,
            /* [out] */ __RPC__out TextSpan *pSelectionSpan);
        
        HRESULT ( STDMETHODCALLTYPE *GetSubjectText )( 
            IVsTextViewIntellisenseHost * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrSubjectText);
        
        HRESULT ( STDMETHODCALLTYPE *SetSubjectCaretPos )( 
            IVsTextViewIntellisenseHost * This,
            /* [in] */ long iIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetSubjectCaretPos )( 
            IVsTextViewIntellisenseHost * This,
            /* [out] */ __RPC__out long *piIndex);
        
        HRESULT ( STDMETHODCALLTYPE *SetSubjectSelection )( 
            IVsTextViewIntellisenseHost * This,
            /* [in] */ long iAnchorIndex,
            /* [in] */ long iEndIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetSubjectSelection )( 
            IVsTextViewIntellisenseHost * This,
            /* [out] */ __RPC__out long *piAnchorIndex,
            /* [out] */ __RPC__out long *piEndIndex);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceSubjectTextSpan )( 
            IVsTextViewIntellisenseHost * This,
            /* [in] */ long iStartIndex,
            /* [in] */ long iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateCompletionStatus )( 
            IVsTextViewIntellisenseHost * This,
            /* [in] */ __RPC__in_opt IVsCompletionSet *pCompSet,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateTipWindow )( 
            IVsTextViewIntellisenseHost * This,
            /* [in] */ __RPC__in_opt IVsTipWindow *pTipWindow,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *HighlightMatchingBrace )( 
            IVsTextViewIntellisenseHost * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ ULONG cSpans,
            /* [size_is][in] */ __RPC__in_ecount_full(cSpans) TextSpan *rgBaseSpans);
        
        HRESULT ( STDMETHODCALLTYPE *BeforeCompletorCommit )( 
            IVsTextViewIntellisenseHost * This);
        
        HRESULT ( STDMETHODCALLTYPE *AfterCompletorCommit )( 
            IVsTextViewIntellisenseHost * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetServiceProvider )( 
            IVsTextViewIntellisenseHost * This,
            /* [out] */ __RPC__deref_out_opt IServiceProvider **ppSP);
        
        HRESULT ( STDMETHODCALLTYPE *GetHostWindow )( 
            IVsTextViewIntellisenseHost * This,
            /* [out] */ __RPC__deref_out_opt HWND *hwnd);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextLocation )( 
            IVsTextViewIntellisenseHost * This,
            /* [in] */ long iPos,
            /* [in] */ long iLen,
            /* [in] */ BOOL fUseCaretPosition,
            /* [out] */ __RPC__out RECT *prc,
            /* [out] */ __RPC__out long *piTopX);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateSmartTagWindow )( 
            IVsTextViewIntellisenseHost * This,
            /* [in] */ __RPC__in_opt IVsSmartTagTipWindow *pSmartTagWnd,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetSmartTagRect )( 
            IVsTextViewIntellisenseHost * This,
            /* [out] */ __RPC__out RECT *rcSmartTag);
        
        HRESULT ( STDMETHODCALLTYPE *SetSubjectFromPrimaryBuffer )( 
            IVsTextViewIntellisenseHost * This,
            __RPC__in TextSpan *pSpanInPrimary);
        
        END_INTERFACE
    } IVsTextViewIntellisenseHostVtbl;

    interface IVsTextViewIntellisenseHost
    {
        CONST_VTBL struct IVsTextViewIntellisenseHostVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextViewIntellisenseHost_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextViewIntellisenseHost_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextViewIntellisenseHost_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextViewIntellisenseHost_QueryStatus(This,pguidCmdGroup,cCmds,prgCmds,pCmdText)	\
    ( (This)->lpVtbl -> QueryStatus(This,pguidCmdGroup,cCmds,prgCmds,pCmdText) ) 

#define IVsTextViewIntellisenseHost_Exec(This,pguidCmdGroup,nCmdID,nCmdexecopt,pvaIn,pvaOut)	\
    ( (This)->lpVtbl -> Exec(This,pguidCmdGroup,nCmdID,nCmdexecopt,pvaIn,pvaOut) ) 


#define IVsTextViewIntellisenseHost_GetHostFlags(This,pdwFlags)	\
    ( (This)->lpVtbl -> GetHostFlags(This,pdwFlags) ) 

#define IVsTextViewIntellisenseHost_GetContextBuffer(This,ppCtxBuffer)	\
    ( (This)->lpVtbl -> GetContextBuffer(This,ppCtxBuffer) ) 

#define IVsTextViewIntellisenseHost_GetContextFocalPoint(This,pSpan,piLen)	\
    ( (This)->lpVtbl -> GetContextFocalPoint(This,pSpan,piLen) ) 

#define IVsTextViewIntellisenseHost_SetContextCaretPos(This,iLine,iIndex)	\
    ( (This)->lpVtbl -> SetContextCaretPos(This,iLine,iIndex) ) 

#define IVsTextViewIntellisenseHost_GetContextCaretPos(This,piLine,piIndex)	\
    ( (This)->lpVtbl -> GetContextCaretPos(This,piLine,piIndex) ) 

#define IVsTextViewIntellisenseHost_SetContextSelection(This,iStartLine,iStartIndex,iEndLine,iEndIndex)	\
    ( (This)->lpVtbl -> SetContextSelection(This,iStartLine,iStartIndex,iEndLine,iEndIndex) ) 

#define IVsTextViewIntellisenseHost_GetContextSelection(This,pSelectionSpan)	\
    ( (This)->lpVtbl -> GetContextSelection(This,pSelectionSpan) ) 

#define IVsTextViewIntellisenseHost_GetSubjectText(This,pbstrSubjectText)	\
    ( (This)->lpVtbl -> GetSubjectText(This,pbstrSubjectText) ) 

#define IVsTextViewIntellisenseHost_SetSubjectCaretPos(This,iIndex)	\
    ( (This)->lpVtbl -> SetSubjectCaretPos(This,iIndex) ) 

#define IVsTextViewIntellisenseHost_GetSubjectCaretPos(This,piIndex)	\
    ( (This)->lpVtbl -> GetSubjectCaretPos(This,piIndex) ) 

#define IVsTextViewIntellisenseHost_SetSubjectSelection(This,iAnchorIndex,iEndIndex)	\
    ( (This)->lpVtbl -> SetSubjectSelection(This,iAnchorIndex,iEndIndex) ) 

#define IVsTextViewIntellisenseHost_GetSubjectSelection(This,piAnchorIndex,piEndIndex)	\
    ( (This)->lpVtbl -> GetSubjectSelection(This,piAnchorIndex,piEndIndex) ) 

#define IVsTextViewIntellisenseHost_ReplaceSubjectTextSpan(This,iStartIndex,iEndIndex,pszText)	\
    ( (This)->lpVtbl -> ReplaceSubjectTextSpan(This,iStartIndex,iEndIndex,pszText) ) 

#define IVsTextViewIntellisenseHost_UpdateCompletionStatus(This,pCompSet,dwFlags)	\
    ( (This)->lpVtbl -> UpdateCompletionStatus(This,pCompSet,dwFlags) ) 

#define IVsTextViewIntellisenseHost_UpdateTipWindow(This,pTipWindow,dwFlags)	\
    ( (This)->lpVtbl -> UpdateTipWindow(This,pTipWindow,dwFlags) ) 

#define IVsTextViewIntellisenseHost_HighlightMatchingBrace(This,dwFlags,cSpans,rgBaseSpans)	\
    ( (This)->lpVtbl -> HighlightMatchingBrace(This,dwFlags,cSpans,rgBaseSpans) ) 

#define IVsTextViewIntellisenseHost_BeforeCompletorCommit(This)	\
    ( (This)->lpVtbl -> BeforeCompletorCommit(This) ) 

#define IVsTextViewIntellisenseHost_AfterCompletorCommit(This)	\
    ( (This)->lpVtbl -> AfterCompletorCommit(This) ) 

#define IVsTextViewIntellisenseHost_GetServiceProvider(This,ppSP)	\
    ( (This)->lpVtbl -> GetServiceProvider(This,ppSP) ) 

#define IVsTextViewIntellisenseHost_GetHostWindow(This,hwnd)	\
    ( (This)->lpVtbl -> GetHostWindow(This,hwnd) ) 

#define IVsTextViewIntellisenseHost_GetContextLocation(This,iPos,iLen,fUseCaretPosition,prc,piTopX)	\
    ( (This)->lpVtbl -> GetContextLocation(This,iPos,iLen,fUseCaretPosition,prc,piTopX) ) 

#define IVsTextViewIntellisenseHost_UpdateSmartTagWindow(This,pSmartTagWnd,dwFlags)	\
    ( (This)->lpVtbl -> UpdateSmartTagWindow(This,pSmartTagWnd,dwFlags) ) 

#define IVsTextViewIntellisenseHost_GetSmartTagRect(This,rcSmartTag)	\
    ( (This)->lpVtbl -> GetSmartTagRect(This,rcSmartTag) ) 


#define IVsTextViewIntellisenseHost_SetSubjectFromPrimaryBuffer(This,pSpanInPrimary)	\
    ( (This)->lpVtbl -> SetSubjectFromPrimaryBuffer(This,pSpanInPrimary) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextViewIntellisenseHost_INTERFACE_DEFINED__ */


#ifndef __IVsTextViewIntellisenseHostProvider_INTERFACE_DEFINED__
#define __IVsTextViewIntellisenseHostProvider_INTERFACE_DEFINED__

/* interface IVsTextViewIntellisenseHostProvider */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextViewIntellisenseHostProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2E758295-344B-48d6-86AC-BD81F89CB4B8")
    IVsTextViewIntellisenseHostProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateIntellisenseHost( 
            /* [in] */ __RPC__in_opt IVsTextBufferCoordinator *pBufferCoordinator,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt void **ppunkHost) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextViewIntellisenseHostProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextViewIntellisenseHostProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextViewIntellisenseHostProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextViewIntellisenseHostProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateIntellisenseHost )( 
            IVsTextViewIntellisenseHostProvider * This,
            /* [in] */ __RPC__in_opt IVsTextBufferCoordinator *pBufferCoordinator,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt void **ppunkHost);
        
        END_INTERFACE
    } IVsTextViewIntellisenseHostProviderVtbl;

    interface IVsTextViewIntellisenseHostProvider
    {
        CONST_VTBL struct IVsTextViewIntellisenseHostProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextViewIntellisenseHostProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextViewIntellisenseHostProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextViewIntellisenseHostProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextViewIntellisenseHostProvider_CreateIntellisenseHost(This,pBufferCoordinator,riid,ppunkHost)	\
    ( (This)->lpVtbl -> CreateIntellisenseHost(This,pBufferCoordinator,riid,ppunkHost) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextViewIntellisenseHostProvider_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_VsIntellisenseCompletor;

#ifdef __cplusplus

class DECLSPEC_UUID("F2073DB0-75B9-43ae-8681-0962C0CD4BE2")
VsIntellisenseCompletor;
#endif

#ifndef __IVsIntellisenseCompletor_INTERFACE_DEFINED__
#define __IVsIntellisenseCompletor_INTERFACE_DEFINED__

/* interface IVsIntellisenseCompletor */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsIntellisenseCompletor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("05DFCF7A-C78A-4e20-AAFB-4A0F4D26E0FB")
    IVsIntellisenseCompletor : public IOleCommandTarget
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            __RPC__in_opt IVsIntellisenseHost *pHost,
            __RPC__in HWND hwndParent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Update( 
            __RPC__in_opt IVsCompletionSet *pCompSet,
            DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWidth( 
            __RPC__in DWORD *dwWidth) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHeight( 
            __RPC__in DWORD *dwHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCompletionSpan( 
            __RPC__in TextSpan *ts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLocation( 
            __RPC__in POINT *p) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Hide( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsActive( 
            /* [out] */ __RPC__out BOOL *pfIsActive) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWindowHandle( 
            /* [out] */ __RPC__deref_out_opt HWND *phwnd) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsIntellisenseCompletorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsIntellisenseCompletor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsIntellisenseCompletor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsIntellisenseCompletor * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE *QueryStatus )( 
            IVsIntellisenseCompletor * This,
            /* [unique][in] */ __RPC__in_opt const GUID *pguidCmdGroup,
            /* [in] */ ULONG cCmds,
            /* [out][in][size_is] */ __RPC__inout_ecount_full(cCmds) OLECMD prgCmds[  ],
            /* [unique][out][in] */ __RPC__inout_opt OLECMDTEXT *pCmdText);
        
        HRESULT ( STDMETHODCALLTYPE *Exec )( 
            IVsIntellisenseCompletor * This,
            /* [unique][in] */ __RPC__in_opt const GUID *pguidCmdGroup,
            /* [in] */ DWORD nCmdID,
            /* [in] */ DWORD nCmdexecopt,
            /* [unique][in] */ __RPC__in_opt VARIANT *pvaIn,
            /* [unique][out][in] */ __RPC__inout_opt VARIANT *pvaOut);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IVsIntellisenseCompletor * This,
            __RPC__in_opt IVsIntellisenseHost *pHost,
            __RPC__in HWND hwndParent);
        
        HRESULT ( STDMETHODCALLTYPE *Update )( 
            IVsIntellisenseCompletor * This,
            __RPC__in_opt IVsCompletionSet *pCompSet,
            DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetWidth )( 
            IVsIntellisenseCompletor * This,
            __RPC__in DWORD *dwWidth);
        
        HRESULT ( STDMETHODCALLTYPE *GetHeight )( 
            IVsIntellisenseCompletor * This,
            __RPC__in DWORD *dwHeight);
        
        HRESULT ( STDMETHODCALLTYPE *GetCompletionSpan )( 
            IVsIntellisenseCompletor * This,
            __RPC__in TextSpan *ts);
        
        HRESULT ( STDMETHODCALLTYPE *SetLocation )( 
            IVsIntellisenseCompletor * This,
            __RPC__in POINT *p);
        
        HRESULT ( STDMETHODCALLTYPE *Hide )( 
            IVsIntellisenseCompletor * This);
        
        HRESULT ( STDMETHODCALLTYPE *IsActive )( 
            IVsIntellisenseCompletor * This,
            /* [out] */ __RPC__out BOOL *pfIsActive);
        
        HRESULT ( STDMETHODCALLTYPE *GetWindowHandle )( 
            IVsIntellisenseCompletor * This,
            /* [out] */ __RPC__deref_out_opt HWND *phwnd);
        
        END_INTERFACE
    } IVsIntellisenseCompletorVtbl;

    interface IVsIntellisenseCompletor
    {
        CONST_VTBL struct IVsIntellisenseCompletorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsIntellisenseCompletor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsIntellisenseCompletor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsIntellisenseCompletor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsIntellisenseCompletor_QueryStatus(This,pguidCmdGroup,cCmds,prgCmds,pCmdText)	\
    ( (This)->lpVtbl -> QueryStatus(This,pguidCmdGroup,cCmds,prgCmds,pCmdText) ) 

#define IVsIntellisenseCompletor_Exec(This,pguidCmdGroup,nCmdID,nCmdexecopt,pvaIn,pvaOut)	\
    ( (This)->lpVtbl -> Exec(This,pguidCmdGroup,nCmdID,nCmdexecopt,pvaIn,pvaOut) ) 


#define IVsIntellisenseCompletor_Initialize(This,pHost,hwndParent)	\
    ( (This)->lpVtbl -> Initialize(This,pHost,hwndParent) ) 

#define IVsIntellisenseCompletor_Update(This,pCompSet,dwFlags)	\
    ( (This)->lpVtbl -> Update(This,pCompSet,dwFlags) ) 

#define IVsIntellisenseCompletor_GetWidth(This,dwWidth)	\
    ( (This)->lpVtbl -> GetWidth(This,dwWidth) ) 

#define IVsIntellisenseCompletor_GetHeight(This,dwHeight)	\
    ( (This)->lpVtbl -> GetHeight(This,dwHeight) ) 

#define IVsIntellisenseCompletor_GetCompletionSpan(This,ts)	\
    ( (This)->lpVtbl -> GetCompletionSpan(This,ts) ) 

#define IVsIntellisenseCompletor_SetLocation(This,p)	\
    ( (This)->lpVtbl -> SetLocation(This,p) ) 

#define IVsIntellisenseCompletor_Hide(This)	\
    ( (This)->lpVtbl -> Hide(This) ) 

#define IVsIntellisenseCompletor_IsActive(This,pfIsActive)	\
    ( (This)->lpVtbl -> IsActive(This,pfIsActive) ) 

#define IVsIntellisenseCompletor_GetWindowHandle(This,phwnd)	\
    ( (This)->lpVtbl -> GetWindowHandle(This,phwnd) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsIntellisenseCompletor_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_VsIntellisenseLangTip;

#ifdef __cplusplus

class DECLSPEC_UUID("39F4B568-7166-42b3-87E6-6B856864AE55")
VsIntellisenseLangTip;
#endif

#ifndef __IVsIntellisenseLangTip_INTERFACE_DEFINED__
#define __IVsIntellisenseLangTip_INTERFACE_DEFINED__

/* interface IVsIntellisenseLangTip */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsIntellisenseLangTip;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1E34D422-7120-4d9e-96FF-E880B665D30D")
    IVsIntellisenseLangTip : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt IVsIntellisenseHost *pHost) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSizePreferences( 
            /* [in] */ __RPC__in RECT *prcCtxBounds,
            /* [in] */ __RPC__in TIPSIZEDATA *pSizeData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Create( 
            /* [in] */ __RPC__in_opt IVsTipWindow *pTipWnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Update( 
            /* [in] */ __RPC__in_opt IVsTipWindow *pTipWnd,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdatePosition( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSizeY( 
            /* [out] */ __RPC__out short *pSizeY) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ BOOL fDeleteThis) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsActive( 
            /* [out] */ __RPC__out BOOL *pfIsActive) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOverloadCount( 
            /* [out] */ __RPC__out long *plOverloadCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ScrollUp( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ScrollDown( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsIntellisenseLangTipVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsIntellisenseLangTip * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsIntellisenseLangTip * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsIntellisenseLangTip * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IVsIntellisenseLangTip * This,
            /* [in] */ __RPC__in_opt IVsIntellisenseHost *pHost);
        
        HRESULT ( STDMETHODCALLTYPE *GetSizePreferences )( 
            IVsIntellisenseLangTip * This,
            /* [in] */ __RPC__in RECT *prcCtxBounds,
            /* [in] */ __RPC__in TIPSIZEDATA *pSizeData);
        
        HRESULT ( STDMETHODCALLTYPE *Create )( 
            IVsIntellisenseLangTip * This,
            /* [in] */ __RPC__in_opt IVsTipWindow *pTipWnd);
        
        HRESULT ( STDMETHODCALLTYPE *Update )( 
            IVsIntellisenseLangTip * This,
            /* [in] */ __RPC__in_opt IVsTipWindow *pTipWnd,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *UpdatePosition )( 
            IVsIntellisenseLangTip * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetSizeY )( 
            IVsIntellisenseLangTip * This,
            /* [out] */ __RPC__out short *pSizeY);
        
        HRESULT ( STDMETHODCALLTYPE *Close )( 
            IVsIntellisenseLangTip * This,
            /* [in] */ BOOL fDeleteThis);
        
        HRESULT ( STDMETHODCALLTYPE *IsActive )( 
            IVsIntellisenseLangTip * This,
            /* [out] */ __RPC__out BOOL *pfIsActive);
        
        HRESULT ( STDMETHODCALLTYPE *GetOverloadCount )( 
            IVsIntellisenseLangTip * This,
            /* [out] */ __RPC__out long *plOverloadCount);
        
        HRESULT ( STDMETHODCALLTYPE *ScrollUp )( 
            IVsIntellisenseLangTip * This);
        
        HRESULT ( STDMETHODCALLTYPE *ScrollDown )( 
            IVsIntellisenseLangTip * This);
        
        END_INTERFACE
    } IVsIntellisenseLangTipVtbl;

    interface IVsIntellisenseLangTip
    {
        CONST_VTBL struct IVsIntellisenseLangTipVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsIntellisenseLangTip_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsIntellisenseLangTip_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsIntellisenseLangTip_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsIntellisenseLangTip_Initialize(This,pHost)	\
    ( (This)->lpVtbl -> Initialize(This,pHost) ) 

#define IVsIntellisenseLangTip_GetSizePreferences(This,prcCtxBounds,pSizeData)	\
    ( (This)->lpVtbl -> GetSizePreferences(This,prcCtxBounds,pSizeData) ) 

#define IVsIntellisenseLangTip_Create(This,pTipWnd)	\
    ( (This)->lpVtbl -> Create(This,pTipWnd) ) 

#define IVsIntellisenseLangTip_Update(This,pTipWnd,dwFlags)	\
    ( (This)->lpVtbl -> Update(This,pTipWnd,dwFlags) ) 

#define IVsIntellisenseLangTip_UpdatePosition(This)	\
    ( (This)->lpVtbl -> UpdatePosition(This) ) 

#define IVsIntellisenseLangTip_GetSizeY(This,pSizeY)	\
    ( (This)->lpVtbl -> GetSizeY(This,pSizeY) ) 

#define IVsIntellisenseLangTip_Close(This,fDeleteThis)	\
    ( (This)->lpVtbl -> Close(This,fDeleteThis) ) 

#define IVsIntellisenseLangTip_IsActive(This,pfIsActive)	\
    ( (This)->lpVtbl -> IsActive(This,pfIsActive) ) 

#define IVsIntellisenseLangTip_GetOverloadCount(This,plOverloadCount)	\
    ( (This)->lpVtbl -> GetOverloadCount(This,plOverloadCount) ) 

#define IVsIntellisenseLangTip_ScrollUp(This)	\
    ( (This)->lpVtbl -> ScrollUp(This) ) 

#define IVsIntellisenseLangTip_ScrollDown(This)	\
    ( (This)->lpVtbl -> ScrollDown(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsIntellisenseLangTip_INTERFACE_DEFINED__ */


#ifndef __IVsContainedLanguageHost_INTERFACE_DEFINED__
#define __IVsContainedLanguageHost_INTERFACE_DEFINED__

/* interface IVsContainedLanguageHost */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsContainedLanguageHost;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0429916F-69E1-4336-AB7E-72086FB0D6BC")
    IVsContainedLanguageHost : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Advise( 
            /* [in] */ __RPC__in_opt IVsContainedLanguageHostEvents *pHost,
            /* [out] */ __RPC__out VSCOOKIE *pvsCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unadvise( 
            /* [in] */ VSCOOKIE vsCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineIndent( 
            /* [in] */ long lLineNumber,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrIndentString,
            /* [out] */ __RPC__out long *plParentIndentLevel,
            /* [out] */ __RPC__out long *plIndentSize,
            /* [out] */ __RPC__out BOOL *pfTabs,
            /* [out] */ __RPC__out long *plTabSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CanReformatCode( 
            /* [out] */ __RPC__out BOOL *pfCanReformat) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNearestVisibleToken( 
            /* [in] */ TextSpan tsSecondaryToken,
            /* [out] */ __RPC__out TextSpan *ptsPrimaryToken) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnsureSpanVisible( 
            /* [in] */ TextSpan tsPrimary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryEditFile( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnRenamed( 
            /* [in] */ ContainedLanguageRenameType clrt,
            /* [in] */ __RPC__in BSTR bstrOldID,
            /* [in] */ __RPC__in BSTR bstrNewID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertControl( 
            /* [in] */ __RPC__in const WCHAR *pwcFullType,
            /* [in] */ __RPC__in const WCHAR *pwcID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertReference( 
            /* [in] */ __RPC__in const WCHAR *__MIDL__IVsContainedLanguageHost0000) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVSHierarchy( 
            /* [out] */ __RPC__deref_out_opt IVsHierarchy **ppVsHierarchy) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetErrorProviderInformation( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrTaskProviderName,
            /* [out] */ __RPC__out GUID *pguidTaskProviderGuid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertImportsDirective( 
            /* [in] */ __RPC__in const WCHAR *__MIDL__IVsContainedLanguageHost0001) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnContainedLanguageEditorSettingsChange( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnsureSecondaryBufferReady( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsContainedLanguageHostVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsContainedLanguageHost * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsContainedLanguageHost * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsContainedLanguageHost * This);
        
        HRESULT ( STDMETHODCALLTYPE *Advise )( 
            IVsContainedLanguageHost * This,
            /* [in] */ __RPC__in_opt IVsContainedLanguageHostEvents *pHost,
            /* [out] */ __RPC__out VSCOOKIE *pvsCookie);
        
        HRESULT ( STDMETHODCALLTYPE *Unadvise )( 
            IVsContainedLanguageHost * This,
            /* [in] */ VSCOOKIE vsCookie);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineIndent )( 
            IVsContainedLanguageHost * This,
            /* [in] */ long lLineNumber,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrIndentString,
            /* [out] */ __RPC__out long *plParentIndentLevel,
            /* [out] */ __RPC__out long *plIndentSize,
            /* [out] */ __RPC__out BOOL *pfTabs,
            /* [out] */ __RPC__out long *plTabSize);
        
        HRESULT ( STDMETHODCALLTYPE *CanReformatCode )( 
            IVsContainedLanguageHost * This,
            /* [out] */ __RPC__out BOOL *pfCanReformat);
        
        HRESULT ( STDMETHODCALLTYPE *GetNearestVisibleToken )( 
            IVsContainedLanguageHost * This,
            /* [in] */ TextSpan tsSecondaryToken,
            /* [out] */ __RPC__out TextSpan *ptsPrimaryToken);
        
        HRESULT ( STDMETHODCALLTYPE *EnsureSpanVisible )( 
            IVsContainedLanguageHost * This,
            /* [in] */ TextSpan tsPrimary);
        
        HRESULT ( STDMETHODCALLTYPE *QueryEditFile )( 
            IVsContainedLanguageHost * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnRenamed )( 
            IVsContainedLanguageHost * This,
            /* [in] */ ContainedLanguageRenameType clrt,
            /* [in] */ __RPC__in BSTR bstrOldID,
            /* [in] */ __RPC__in BSTR bstrNewID);
        
        HRESULT ( STDMETHODCALLTYPE *InsertControl )( 
            IVsContainedLanguageHost * This,
            /* [in] */ __RPC__in const WCHAR *pwcFullType,
            /* [in] */ __RPC__in const WCHAR *pwcID);
        
        HRESULT ( STDMETHODCALLTYPE *InsertReference )( 
            IVsContainedLanguageHost * This,
            /* [in] */ __RPC__in const WCHAR *__MIDL__IVsContainedLanguageHost0000);
        
        HRESULT ( STDMETHODCALLTYPE *GetVSHierarchy )( 
            IVsContainedLanguageHost * This,
            /* [out] */ __RPC__deref_out_opt IVsHierarchy **ppVsHierarchy);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrorProviderInformation )( 
            IVsContainedLanguageHost * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrTaskProviderName,
            /* [out] */ __RPC__out GUID *pguidTaskProviderGuid);
        
        HRESULT ( STDMETHODCALLTYPE *InsertImportsDirective )( 
            IVsContainedLanguageHost * This,
            /* [in] */ __RPC__in const WCHAR *__MIDL__IVsContainedLanguageHost0001);
        
        HRESULT ( STDMETHODCALLTYPE *OnContainedLanguageEditorSettingsChange )( 
            IVsContainedLanguageHost * This);
        
        HRESULT ( STDMETHODCALLTYPE *EnsureSecondaryBufferReady )( 
            IVsContainedLanguageHost * This);
        
        END_INTERFACE
    } IVsContainedLanguageHostVtbl;

    interface IVsContainedLanguageHost
    {
        CONST_VTBL struct IVsContainedLanguageHostVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsContainedLanguageHost_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsContainedLanguageHost_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsContainedLanguageHost_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsContainedLanguageHost_Advise(This,pHost,pvsCookie)	\
    ( (This)->lpVtbl -> Advise(This,pHost,pvsCookie) ) 

#define IVsContainedLanguageHost_Unadvise(This,vsCookie)	\
    ( (This)->lpVtbl -> Unadvise(This,vsCookie) ) 

#define IVsContainedLanguageHost_GetLineIndent(This,lLineNumber,pbstrIndentString,plParentIndentLevel,plIndentSize,pfTabs,plTabSize)	\
    ( (This)->lpVtbl -> GetLineIndent(This,lLineNumber,pbstrIndentString,plParentIndentLevel,plIndentSize,pfTabs,plTabSize) ) 

#define IVsContainedLanguageHost_CanReformatCode(This,pfCanReformat)	\
    ( (This)->lpVtbl -> CanReformatCode(This,pfCanReformat) ) 

#define IVsContainedLanguageHost_GetNearestVisibleToken(This,tsSecondaryToken,ptsPrimaryToken)	\
    ( (This)->lpVtbl -> GetNearestVisibleToken(This,tsSecondaryToken,ptsPrimaryToken) ) 

#define IVsContainedLanguageHost_EnsureSpanVisible(This,tsPrimary)	\
    ( (This)->lpVtbl -> EnsureSpanVisible(This,tsPrimary) ) 

#define IVsContainedLanguageHost_QueryEditFile(This)	\
    ( (This)->lpVtbl -> QueryEditFile(This) ) 

#define IVsContainedLanguageHost_OnRenamed(This,clrt,bstrOldID,bstrNewID)	\
    ( (This)->lpVtbl -> OnRenamed(This,clrt,bstrOldID,bstrNewID) ) 

#define IVsContainedLanguageHost_InsertControl(This,pwcFullType,pwcID)	\
    ( (This)->lpVtbl -> InsertControl(This,pwcFullType,pwcID) ) 

#define IVsContainedLanguageHost_InsertReference(This,__MIDL__IVsContainedLanguageHost0000)	\
    ( (This)->lpVtbl -> InsertReference(This,__MIDL__IVsContainedLanguageHost0000) ) 

#define IVsContainedLanguageHost_GetVSHierarchy(This,ppVsHierarchy)	\
    ( (This)->lpVtbl -> GetVSHierarchy(This,ppVsHierarchy) ) 

#define IVsContainedLanguageHost_GetErrorProviderInformation(This,pbstrTaskProviderName,pguidTaskProviderGuid)	\
    ( (This)->lpVtbl -> GetErrorProviderInformation(This,pbstrTaskProviderName,pguidTaskProviderGuid) ) 

#define IVsContainedLanguageHost_InsertImportsDirective(This,__MIDL__IVsContainedLanguageHost0001)	\
    ( (This)->lpVtbl -> InsertImportsDirective(This,__MIDL__IVsContainedLanguageHost0001) ) 

#define IVsContainedLanguageHost_OnContainedLanguageEditorSettingsChange(This)	\
    ( (This)->lpVtbl -> OnContainedLanguageEditorSettingsChange(This) ) 

#define IVsContainedLanguageHost_EnsureSecondaryBufferReady(This)	\
    ( (This)->lpVtbl -> EnsureSecondaryBufferReady(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsContainedLanguageHost_INTERFACE_DEFINED__ */


#ifndef __IVsContainedLanguageHostEvents_INTERFACE_DEFINED__
#define __IVsContainedLanguageHostEvents_INTERFACE_DEFINED__

/* interface IVsContainedLanguageHostEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsContainedLanguageHostEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F2A52136-803E-4cef-BBA7-52D610FE34BA")
    IVsContainedLanguageHostEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnViewChange( 
            /* [in] */ BOOL fTextView) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsContainedLanguageHostEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsContainedLanguageHostEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsContainedLanguageHostEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsContainedLanguageHostEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnViewChange )( 
            IVsContainedLanguageHostEvents * This,
            /* [in] */ BOOL fTextView);
        
        END_INTERFACE
    } IVsContainedLanguageHostEventsVtbl;

    interface IVsContainedLanguageHostEvents
    {
        CONST_VTBL struct IVsContainedLanguageHostEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsContainedLanguageHostEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsContainedLanguageHostEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsContainedLanguageHostEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsContainedLanguageHostEvents_OnViewChange(This,fTextView)	\
    ( (This)->lpVtbl -> OnViewChange(This,fTextView) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsContainedLanguageHostEvents_INTERFACE_DEFINED__ */


#ifndef __IVsContainedLanguage_INTERFACE_DEFINED__
#define __IVsContainedLanguage_INTERFACE_DEFINED__

/* interface IVsContainedLanguage */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsContainedLanguage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("518ab114-e3c6-4bbc-a469-99279f1a54e9")
    IVsContainedLanguage : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetHost( 
            /* [in] */ __RPC__in_opt IVsContainedLanguageHost *pHost) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetColorizer( 
            /* [retval][out] */ __RPC__deref_out_opt IVsColorizer **ppColorizer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTextViewFilter( 
            /* [in] */ __RPC__in_opt IVsIntellisenseHost *pISenseHost,
            /* [in] */ __RPC__in_opt IOleCommandTarget *pNextCmdTarget,
            /* [retval][out] */ __RPC__deref_out_opt IVsTextViewFilter **pTextViewFilter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLanguageServiceID( 
            /* [out] */ __RPC__out GUID *pguidLangService) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBufferCoordinator( 
            /* [in] */ __RPC__in_opt IVsTextBufferCoordinator *pBC) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Refresh( 
            /* [in] */ DWORD dwRefreshMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE WaitForReadyState( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsContainedLanguageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsContainedLanguage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsContainedLanguage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsContainedLanguage * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetHost )( 
            IVsContainedLanguage * This,
            /* [in] */ __RPC__in_opt IVsContainedLanguageHost *pHost);
        
        HRESULT ( STDMETHODCALLTYPE *GetColorizer )( 
            IVsContainedLanguage * This,
            /* [retval][out] */ __RPC__deref_out_opt IVsColorizer **ppColorizer);
        
        HRESULT ( STDMETHODCALLTYPE *GetTextViewFilter )( 
            IVsContainedLanguage * This,
            /* [in] */ __RPC__in_opt IVsIntellisenseHost *pISenseHost,
            /* [in] */ __RPC__in_opt IOleCommandTarget *pNextCmdTarget,
            /* [retval][out] */ __RPC__deref_out_opt IVsTextViewFilter **pTextViewFilter);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguageServiceID )( 
            IVsContainedLanguage * This,
            /* [out] */ __RPC__out GUID *pguidLangService);
        
        HRESULT ( STDMETHODCALLTYPE *SetBufferCoordinator )( 
            IVsContainedLanguage * This,
            /* [in] */ __RPC__in_opt IVsTextBufferCoordinator *pBC);
        
        HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            IVsContainedLanguage * This,
            /* [in] */ DWORD dwRefreshMode);
        
        HRESULT ( STDMETHODCALLTYPE *WaitForReadyState )( 
            IVsContainedLanguage * This);
        
        END_INTERFACE
    } IVsContainedLanguageVtbl;

    interface IVsContainedLanguage
    {
        CONST_VTBL struct IVsContainedLanguageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsContainedLanguage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsContainedLanguage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsContainedLanguage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsContainedLanguage_SetHost(This,pHost)	\
    ( (This)->lpVtbl -> SetHost(This,pHost) ) 

#define IVsContainedLanguage_GetColorizer(This,ppColorizer)	\
    ( (This)->lpVtbl -> GetColorizer(This,ppColorizer) ) 

#define IVsContainedLanguage_GetTextViewFilter(This,pISenseHost,pNextCmdTarget,pTextViewFilter)	\
    ( (This)->lpVtbl -> GetTextViewFilter(This,pISenseHost,pNextCmdTarget,pTextViewFilter) ) 

#define IVsContainedLanguage_GetLanguageServiceID(This,pguidLangService)	\
    ( (This)->lpVtbl -> GetLanguageServiceID(This,pguidLangService) ) 

#define IVsContainedLanguage_SetBufferCoordinator(This,pBC)	\
    ( (This)->lpVtbl -> SetBufferCoordinator(This,pBC) ) 

#define IVsContainedLanguage_Refresh(This,dwRefreshMode)	\
    ( (This)->lpVtbl -> Refresh(This,dwRefreshMode) ) 

#define IVsContainedLanguage_WaitForReadyState(This)	\
    ( (This)->lpVtbl -> WaitForReadyState(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsContainedLanguage_INTERFACE_DEFINED__ */


#ifndef __IVsContainedLanguageColorizer_INTERFACE_DEFINED__
#define __IVsContainedLanguageColorizer_INTERFACE_DEFINED__

/* interface IVsContainedLanguageColorizer */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsContainedLanguageColorizer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("88105779-D75B-459e-B7AD-78F63BD40714")
    IVsContainedLanguageColorizer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ColorizeLineFragment( 
            /* [in] */ long iLine,
            /* [in] */ long iIndex,
            /* [in] */ long iLength,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iState,
            /* [out] */ __RPC__out ULONG *pAttributes,
            /* [out] */ __RPC__out long *piNewState) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsContainedLanguageColorizerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsContainedLanguageColorizer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsContainedLanguageColorizer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsContainedLanguageColorizer * This);
        
        HRESULT ( STDMETHODCALLTYPE *ColorizeLineFragment )( 
            IVsContainedLanguageColorizer * This,
            /* [in] */ long iLine,
            /* [in] */ long iIndex,
            /* [in] */ long iLength,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iState,
            /* [out] */ __RPC__out ULONG *pAttributes,
            /* [out] */ __RPC__out long *piNewState);
        
        END_INTERFACE
    } IVsContainedLanguageColorizerVtbl;

    interface IVsContainedLanguageColorizer
    {
        CONST_VTBL struct IVsContainedLanguageColorizerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsContainedLanguageColorizer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsContainedLanguageColorizer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsContainedLanguageColorizer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsContainedLanguageColorizer_ColorizeLineFragment(This,iLine,iIndex,iLength,pszText,iState,pAttributes,piNewState)	\
    ( (This)->lpVtbl -> ColorizeLineFragment(This,iLine,iIndex,iLength,pszText,iState,pAttributes,piNewState) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsContainedLanguageColorizer_INTERFACE_DEFINED__ */


#ifndef __IVsContainedLanguageCodeSupport_INTERFACE_DEFINED__
#define __IVsContainedLanguageCodeSupport_INTERFACE_DEFINED__

/* interface IVsContainedLanguageCodeSupport */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsContainedLanguageCodeSupport;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f386be91-0e80-43af-8eb6-8b829fa06282")
    IVsContainedLanguageCodeSupport : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateUniqueEventName( 
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszObjectName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEventHandlerName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnsureEventHandler( 
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszObjectTypeName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent,
            /* [in] */ __RPC__in LPCWSTR pszEventHandlerName,
            /* [in] */ VSITEMID itemidInsertionPoint,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrUniqueMemberID,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEventBody,
            /* [out] */ __RPC__out TextSpan *pSpanInsertionPoint) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMemberNavigationPoint( 
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszUniqueMemberID,
            /* [out] */ __RPC__out TextSpan *pSpanNavPoint,
            /* [out] */ __RPC__out VSITEMID *pItemID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMembers( 
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__out int *pcMembers,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrDisplayNames,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrMemberIDs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnRenamed( 
            /* [in] */ ContainedLanguageRenameType clrt,
            /* [in] */ __RPC__in BSTR bstrOldID,
            /* [in] */ __RPC__in BSTR bstrNewID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsValidID( 
            /* [in] */ __RPC__in BSTR bstrID,
            /* [out] */ __RPC__out VARIANT_BOOL *pfIsValidID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBaseClassName( 
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBaseClassName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEventHandlerMemberID( 
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszObjectTypeName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent,
            /* [in] */ __RPC__in LPCWSTR pszEventHandlerName,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrUniqueMemberID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCompatibleEventHandlers( 
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszObjectTypeName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent,
            /* [out] */ __RPC__out int *pcMembers,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrEventHandlerNames,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrMemberIDs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsContainedLanguageCodeSupportVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsContainedLanguageCodeSupport * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsContainedLanguageCodeSupport * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsContainedLanguageCodeSupport * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateUniqueEventName )( 
            IVsContainedLanguageCodeSupport * This,
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszObjectName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEventHandlerName);
        
        HRESULT ( STDMETHODCALLTYPE *EnsureEventHandler )( 
            IVsContainedLanguageCodeSupport * This,
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszObjectTypeName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent,
            /* [in] */ __RPC__in LPCWSTR pszEventHandlerName,
            /* [in] */ VSITEMID itemidInsertionPoint,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrUniqueMemberID,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEventBody,
            /* [out] */ __RPC__out TextSpan *pSpanInsertionPoint);
        
        HRESULT ( STDMETHODCALLTYPE *GetMemberNavigationPoint )( 
            IVsContainedLanguageCodeSupport * This,
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszUniqueMemberID,
            /* [out] */ __RPC__out TextSpan *pSpanNavPoint,
            /* [out] */ __RPC__out VSITEMID *pItemID);
        
        HRESULT ( STDMETHODCALLTYPE *GetMembers )( 
            IVsContainedLanguageCodeSupport * This,
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__out int *pcMembers,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrDisplayNames,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrMemberIDs);
        
        HRESULT ( STDMETHODCALLTYPE *OnRenamed )( 
            IVsContainedLanguageCodeSupport * This,
            /* [in] */ ContainedLanguageRenameType clrt,
            /* [in] */ __RPC__in BSTR bstrOldID,
            /* [in] */ __RPC__in BSTR bstrNewID);
        
        HRESULT ( STDMETHODCALLTYPE *IsValidID )( 
            IVsContainedLanguageCodeSupport * This,
            /* [in] */ __RPC__in BSTR bstrID,
            /* [out] */ __RPC__out VARIANT_BOOL *pfIsValidID);
        
        HRESULT ( STDMETHODCALLTYPE *GetBaseClassName )( 
            IVsContainedLanguageCodeSupport * This,
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBaseClassName);
        
        HRESULT ( STDMETHODCALLTYPE *GetEventHandlerMemberID )( 
            IVsContainedLanguageCodeSupport * This,
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszObjectTypeName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent,
            /* [in] */ __RPC__in LPCWSTR pszEventHandlerName,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrUniqueMemberID);
        
        HRESULT ( STDMETHODCALLTYPE *GetCompatibleEventHandlers )( 
            IVsContainedLanguageCodeSupport * This,
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszObjectTypeName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent,
            /* [out] */ __RPC__out int *pcMembers,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrEventHandlerNames,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrMemberIDs);
        
        END_INTERFACE
    } IVsContainedLanguageCodeSupportVtbl;

    interface IVsContainedLanguageCodeSupport
    {
        CONST_VTBL struct IVsContainedLanguageCodeSupportVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsContainedLanguageCodeSupport_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsContainedLanguageCodeSupport_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsContainedLanguageCodeSupport_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsContainedLanguageCodeSupport_CreateUniqueEventName(This,pszClassName,pszObjectName,pszNameOfEvent,pbstrEventHandlerName)	\
    ( (This)->lpVtbl -> CreateUniqueEventName(This,pszClassName,pszObjectName,pszNameOfEvent,pbstrEventHandlerName) ) 

#define IVsContainedLanguageCodeSupport_EnsureEventHandler(This,pszClassName,pszObjectTypeName,pszNameOfEvent,pszEventHandlerName,itemidInsertionPoint,pbstrUniqueMemberID,pbstrEventBody,pSpanInsertionPoint)	\
    ( (This)->lpVtbl -> EnsureEventHandler(This,pszClassName,pszObjectTypeName,pszNameOfEvent,pszEventHandlerName,itemidInsertionPoint,pbstrUniqueMemberID,pbstrEventBody,pSpanInsertionPoint) ) 

#define IVsContainedLanguageCodeSupport_GetMemberNavigationPoint(This,pszClassName,pszUniqueMemberID,pSpanNavPoint,pItemID)	\
    ( (This)->lpVtbl -> GetMemberNavigationPoint(This,pszClassName,pszUniqueMemberID,pSpanNavPoint,pItemID) ) 

#define IVsContainedLanguageCodeSupport_GetMembers(This,pszClassName,dwFlags,pcMembers,ppbstrDisplayNames,ppbstrMemberIDs)	\
    ( (This)->lpVtbl -> GetMembers(This,pszClassName,dwFlags,pcMembers,ppbstrDisplayNames,ppbstrMemberIDs) ) 

#define IVsContainedLanguageCodeSupport_OnRenamed(This,clrt,bstrOldID,bstrNewID)	\
    ( (This)->lpVtbl -> OnRenamed(This,clrt,bstrOldID,bstrNewID) ) 

#define IVsContainedLanguageCodeSupport_IsValidID(This,bstrID,pfIsValidID)	\
    ( (This)->lpVtbl -> IsValidID(This,bstrID,pfIsValidID) ) 

#define IVsContainedLanguageCodeSupport_GetBaseClassName(This,pszClassName,pbstrBaseClassName)	\
    ( (This)->lpVtbl -> GetBaseClassName(This,pszClassName,pbstrBaseClassName) ) 

#define IVsContainedLanguageCodeSupport_GetEventHandlerMemberID(This,pszClassName,pszObjectTypeName,pszNameOfEvent,pszEventHandlerName,pbstrUniqueMemberID)	\
    ( (This)->lpVtbl -> GetEventHandlerMemberID(This,pszClassName,pszObjectTypeName,pszNameOfEvent,pszEventHandlerName,pbstrUniqueMemberID) ) 

#define IVsContainedLanguageCodeSupport_GetCompatibleEventHandlers(This,pszClassName,pszObjectTypeName,pszNameOfEvent,pcMembers,ppbstrEventHandlerNames,ppbstrMemberIDs)	\
    ( (This)->lpVtbl -> GetCompatibleEventHandlers(This,pszClassName,pszObjectTypeName,pszNameOfEvent,pcMembers,ppbstrEventHandlerNames,ppbstrMemberIDs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsContainedLanguageCodeSupport_INTERFACE_DEFINED__ */


#ifndef __IVsContainedLanguageStaticEventBinding_INTERFACE_DEFINED__
#define __IVsContainedLanguageStaticEventBinding_INTERFACE_DEFINED__

/* interface IVsContainedLanguageStaticEventBinding */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsContainedLanguageStaticEventBinding;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("22ff7776-2c9a-48c4-809f-39e5184cc32d")
    IVsContainedLanguageStaticEventBinding : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStaticEventBindingsForObject( 
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszObjectName,
            /* [out] */ __RPC__out int *pcMembers,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrEventNames,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrDisplayNames,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrMemberIDs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveStaticEventBinding( 
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszUniqueMemberID,
            /* [in] */ __RPC__in LPCWSTR pszObjectName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddStaticEventBinding( 
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszUniqueMemberID,
            /* [in] */ __RPC__in LPCWSTR pszObjectName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnsureStaticEventHandler( 
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszObjectTypeName,
            /* [in] */ __RPC__in LPCWSTR pszObjectName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent,
            /* [in] */ __RPC__in LPCWSTR pszEventHandlerName,
            /* [in] */ VSITEMID itemidInsertionPoint,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrUniqueMemberID,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEventBody,
            /* [out] */ __RPC__out TextSpan *pSpanInsertionPoint) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsContainedLanguageStaticEventBindingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsContainedLanguageStaticEventBinding * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsContainedLanguageStaticEventBinding * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsContainedLanguageStaticEventBinding * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetStaticEventBindingsForObject )( 
            IVsContainedLanguageStaticEventBinding * This,
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszObjectName,
            /* [out] */ __RPC__out int *pcMembers,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrEventNames,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrDisplayNames,
            /* [out] */ __RPC__deref_out_opt BSTR **ppbstrMemberIDs);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveStaticEventBinding )( 
            IVsContainedLanguageStaticEventBinding * This,
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszUniqueMemberID,
            /* [in] */ __RPC__in LPCWSTR pszObjectName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent);
        
        HRESULT ( STDMETHODCALLTYPE *AddStaticEventBinding )( 
            IVsContainedLanguageStaticEventBinding * This,
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszUniqueMemberID,
            /* [in] */ __RPC__in LPCWSTR pszObjectName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent);
        
        HRESULT ( STDMETHODCALLTYPE *EnsureStaticEventHandler )( 
            IVsContainedLanguageStaticEventBinding * This,
            /* [in] */ __RPC__in LPCWSTR pszClassName,
            /* [in] */ __RPC__in LPCWSTR pszObjectTypeName,
            /* [in] */ __RPC__in LPCWSTR pszObjectName,
            /* [in] */ __RPC__in LPCWSTR pszNameOfEvent,
            /* [in] */ __RPC__in LPCWSTR pszEventHandlerName,
            /* [in] */ VSITEMID itemidInsertionPoint,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrUniqueMemberID,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEventBody,
            /* [out] */ __RPC__out TextSpan *pSpanInsertionPoint);
        
        END_INTERFACE
    } IVsContainedLanguageStaticEventBindingVtbl;

    interface IVsContainedLanguageStaticEventBinding
    {
        CONST_VTBL struct IVsContainedLanguageStaticEventBindingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsContainedLanguageStaticEventBinding_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsContainedLanguageStaticEventBinding_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsContainedLanguageStaticEventBinding_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsContainedLanguageStaticEventBinding_GetStaticEventBindingsForObject(This,pszClassName,pszObjectName,pcMembers,ppbstrEventNames,ppbstrDisplayNames,ppbstrMemberIDs)	\
    ( (This)->lpVtbl -> GetStaticEventBindingsForObject(This,pszClassName,pszObjectName,pcMembers,ppbstrEventNames,ppbstrDisplayNames,ppbstrMemberIDs) ) 

#define IVsContainedLanguageStaticEventBinding_RemoveStaticEventBinding(This,pszClassName,pszUniqueMemberID,pszObjectName,pszNameOfEvent)	\
    ( (This)->lpVtbl -> RemoveStaticEventBinding(This,pszClassName,pszUniqueMemberID,pszObjectName,pszNameOfEvent) ) 

#define IVsContainedLanguageStaticEventBinding_AddStaticEventBinding(This,pszClassName,pszUniqueMemberID,pszObjectName,pszNameOfEvent)	\
    ( (This)->lpVtbl -> AddStaticEventBinding(This,pszClassName,pszUniqueMemberID,pszObjectName,pszNameOfEvent) ) 

#define IVsContainedLanguageStaticEventBinding_EnsureStaticEventHandler(This,pszClassName,pszObjectTypeName,pszObjectName,pszNameOfEvent,pszEventHandlerName,itemidInsertionPoint,pbstrUniqueMemberID,pbstrEventBody,pSpanInsertionPoint)	\
    ( (This)->lpVtbl -> EnsureStaticEventHandler(This,pszClassName,pszObjectTypeName,pszObjectName,pszNameOfEvent,pszEventHandlerName,itemidInsertionPoint,pbstrUniqueMemberID,pbstrEventBody,pSpanInsertionPoint) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsContainedLanguageStaticEventBinding_INTERFACE_DEFINED__ */


#ifndef __IVsWebFormDesignerSupport_INTERFACE_DEFINED__
#define __IVsWebFormDesignerSupport_INTERFACE_DEFINED__

/* interface IVsWebFormDesignerSupport */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsWebFormDesignerSupport;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2139dfc1-b0ad-4c17-a817-74f2ba47c714")
    IVsWebFormDesignerSupport : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCodeDomProvider( 
            /* [out] */ __RPC__deref_out_opt IUnknown **ppProvider) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddReference( 
            /* [in] */ __RPC__in LPCWSTR pszReference) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsWebFormDesignerSupportVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsWebFormDesignerSupport * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsWebFormDesignerSupport * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsWebFormDesignerSupport * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCodeDomProvider )( 
            IVsWebFormDesignerSupport * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppProvider);
        
        HRESULT ( STDMETHODCALLTYPE *AddReference )( 
            IVsWebFormDesignerSupport * This,
            /* [in] */ __RPC__in LPCWSTR pszReference);
        
        END_INTERFACE
    } IVsWebFormDesignerSupportVtbl;

    interface IVsWebFormDesignerSupport
    {
        CONST_VTBL struct IVsWebFormDesignerSupportVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsWebFormDesignerSupport_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsWebFormDesignerSupport_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsWebFormDesignerSupport_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsWebFormDesignerSupport_GetCodeDomProvider(This,ppProvider)	\
    ( (This)->lpVtbl -> GetCodeDomProvider(This,ppProvider) ) 

#define IVsWebFormDesignerSupport_AddReference(This,pszReference)	\
    ( (This)->lpVtbl -> AddReference(This,pszReference) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsWebFormDesignerSupport_INTERFACE_DEFINED__ */


#ifndef __IVsEnumCodeBlocks_INTERFACE_DEFINED__
#define __IVsEnumCodeBlocks_INTERFACE_DEFINED__

/* interface IVsEnumCodeBlocks */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumCodeBlocks;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("07a45a82-5354-4dde-ac7d-60f2cdd5573b")
    IVsEnumCodeBlocks : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) TextSpanAndCookie *rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IVsEnumCodeBlocks **ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumCodeBlocksVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumCodeBlocks * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumCodeBlocks * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumCodeBlocks * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumCodeBlocks * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) TextSpanAndCookie *rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IVsEnumCodeBlocks * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumCodeBlocks * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IVsEnumCodeBlocks * This,
            /* [out] */ __RPC__deref_out_opt IVsEnumCodeBlocks **ppenum);
        
        END_INTERFACE
    } IVsEnumCodeBlocksVtbl;

    interface IVsEnumCodeBlocks
    {
        CONST_VTBL struct IVsEnumCodeBlocksVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumCodeBlocks_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumCodeBlocks_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumCodeBlocks_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumCodeBlocks_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IVsEnumCodeBlocks_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IVsEnumCodeBlocks_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumCodeBlocks_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumCodeBlocks_INTERFACE_DEFINED__ */


#ifndef __IVsContainedCode_INTERFACE_DEFINED__
#define __IVsContainedCode_INTERFACE_DEFINED__

/* interface IVsContainedCode */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsContainedCode;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("171a72ae-bae6-4b66-9a58-4691f08ed9f2")
    IVsContainedCode : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE EnumOriginalCodeBlocks( 
            /* [out] */ __RPC__deref_out_opt IVsEnumCodeBlocks **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HostSpansUpdated( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsContainedCodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsContainedCode * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsContainedCode * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsContainedCode * This);
        
        HRESULT ( STDMETHODCALLTYPE *EnumOriginalCodeBlocks )( 
            IVsContainedCode * This,
            /* [out] */ __RPC__deref_out_opt IVsEnumCodeBlocks **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *HostSpansUpdated )( 
            IVsContainedCode * This);
        
        END_INTERFACE
    } IVsContainedCodeVtbl;

    interface IVsContainedCode
    {
        CONST_VTBL struct IVsContainedCodeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsContainedCode_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsContainedCode_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsContainedCode_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsContainedCode_EnumOriginalCodeBlocks(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumOriginalCodeBlocks(This,ppEnum) ) 

#define IVsContainedCode_HostSpansUpdated(This)	\
    ( (This)->lpVtbl -> HostSpansUpdated(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsContainedCode_INTERFACE_DEFINED__ */


#ifndef __IVsContainedLanguageFactory_INTERFACE_DEFINED__
#define __IVsContainedLanguageFactory_INTERFACE_DEFINED__

/* interface IVsContainedLanguageFactory */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsContainedLanguageFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9fd1bd52-9d32-4697-b446-36582b865c34")
    IVsContainedLanguageFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetLanguage( 
            /* [in] */ __RPC__in_opt IVsHierarchy *pHierarchy,
            /* [in] */ VSITEMID itemid,
            /* [in] */ __RPC__in_opt IVsTextBufferCoordinator *pBufferCoordinator,
            /* [retval][out] */ __RPC__deref_out_opt IVsContainedLanguage **ppLanguage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsContainedLanguageFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsContainedLanguageFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsContainedLanguageFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsContainedLanguageFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguage )( 
            IVsContainedLanguageFactory * This,
            /* [in] */ __RPC__in_opt IVsHierarchy *pHierarchy,
            /* [in] */ VSITEMID itemid,
            /* [in] */ __RPC__in_opt IVsTextBufferCoordinator *pBufferCoordinator,
            /* [retval][out] */ __RPC__deref_out_opt IVsContainedLanguage **ppLanguage);
        
        END_INTERFACE
    } IVsContainedLanguageFactoryVtbl;

    interface IVsContainedLanguageFactory
    {
        CONST_VTBL struct IVsContainedLanguageFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsContainedLanguageFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsContainedLanguageFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsContainedLanguageFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsContainedLanguageFactory_GetLanguage(This,pHierarchy,itemid,pBufferCoordinator,ppLanguage)	\
    ( (This)->lpVtbl -> GetLanguage(This,pHierarchy,itemid,pBufferCoordinator,ppLanguage) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsContainedLanguageFactory_INTERFACE_DEFINED__ */


#ifndef __IVsContainedLanguageProjectNameProvider_INTERFACE_DEFINED__
#define __IVsContainedLanguageProjectNameProvider_INTERFACE_DEFINED__

/* interface IVsContainedLanguageProjectNameProvider */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsContainedLanguageProjectNameProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f77b0dd6-420b-4e7c-a0b3-c8d5b10a0997")
    IVsContainedLanguageProjectNameProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetProjectName( 
            /* [in] */ VSITEMID itemid,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProjectName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsContainedLanguageProjectNameProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsContainedLanguageProjectNameProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsContainedLanguageProjectNameProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsContainedLanguageProjectNameProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetProjectName )( 
            IVsContainedLanguageProjectNameProvider * This,
            /* [in] */ VSITEMID itemid,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProjectName);
        
        END_INTERFACE
    } IVsContainedLanguageProjectNameProviderVtbl;

    interface IVsContainedLanguageProjectNameProvider
    {
        CONST_VTBL struct IVsContainedLanguageProjectNameProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsContainedLanguageProjectNameProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsContainedLanguageProjectNameProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsContainedLanguageProjectNameProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsContainedLanguageProjectNameProvider_GetProjectName(This,itemid,pbstrProjectName)	\
    ( (This)->lpVtbl -> GetProjectName(This,itemid,pbstrProjectName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsContainedLanguageProjectNameProvider_INTERFACE_DEFINED__ */


#ifndef __IVsEnumBufferCoordinatorSpans_INTERFACE_DEFINED__
#define __IVsEnumBufferCoordinatorSpans_INTERFACE_DEFINED__

/* interface IVsEnumBufferCoordinatorSpans */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumBufferCoordinatorSpans;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5FCEEA4C-D49F-4acd-B816-130A5DCD4C54")
    IVsEnumBufferCoordinatorSpans : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [out][in] */ __RPC__inout NewSpanMapping *rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IVsEnumBufferCoordinatorSpans **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumBufferCoordinatorSpansVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumBufferCoordinatorSpans * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumBufferCoordinatorSpans * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumBufferCoordinatorSpans * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumBufferCoordinatorSpans * This,
            /* [in] */ ULONG celt,
            /* [out][in] */ __RPC__inout NewSpanMapping *rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IVsEnumBufferCoordinatorSpans * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumBufferCoordinatorSpans * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IVsEnumBufferCoordinatorSpans * This,
            /* [out] */ __RPC__deref_out_opt IVsEnumBufferCoordinatorSpans **ppEnum);
        
        END_INTERFACE
    } IVsEnumBufferCoordinatorSpansVtbl;

    interface IVsEnumBufferCoordinatorSpans
    {
        CONST_VTBL struct IVsEnumBufferCoordinatorSpansVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumBufferCoordinatorSpans_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumBufferCoordinatorSpans_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumBufferCoordinatorSpans_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumBufferCoordinatorSpans_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IVsEnumBufferCoordinatorSpans_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IVsEnumBufferCoordinatorSpans_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumBufferCoordinatorSpans_Clone(This,ppEnum)	\
    ( (This)->lpVtbl -> Clone(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumBufferCoordinatorSpans_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_VsTextBufferCoordinator;

#ifdef __cplusplus

class DECLSPEC_UUID("3e77fa94-526f-4233-bf81-b2b0329a62b9")
VsTextBufferCoordinator;
#endif

#ifndef __IVsTextBufferCoordinator_INTERFACE_DEFINED__
#define __IVsTextBufferCoordinator_INTERFACE_DEFINED__

/* interface IVsTextBufferCoordinator */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextBufferCoordinator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("84465401-2886-4ce0-af50-c0560226ed40")
    IVsTextBufferCoordinator : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetBuffers( 
            /* [in] */ __RPC__in_opt IVsTextLines *pPrimaryBuffer,
            /* [in] */ __RPC__in_opt IVsTextLines *pSecondaryBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSpanMappings( 
            /* [in] */ long cSpans,
            /* [size_is][in] */ __RPC__in_ecount_full(cSpans) NewSpanMapping *rgSpans) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MapPrimaryToSecondarySpan( 
            /* [in] */ TextSpan tsPrimary,
            /* [out] */ __RPC__out TextSpan *ptsSecondary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MapSecondaryToPrimarySpan( 
            /* [in] */ TextSpan tsSecondary,
            /* [out] */ __RPC__out TextSpan *ptsPrimary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPrimaryBuffer( 
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSecondaryBuffer( 
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnableReplication( 
            /* [in] */ DWORD bcrd,
            /* [in] */ BOOL fEnable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMappingOfPrimaryPosition( 
            /* [in] */ long lPosition,
            /* [out] */ __RPC__out TextSpan *ptsPrimary,
            /* [out] */ __RPC__out TextSpan *ptsSecondary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBufferMappingModes( 
            /* [in] */ DWORD bcmmPrimary,
            /* [in] */ DWORD bcmmSecondary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumSpans( 
            __RPC__deref_in_opt IVsEnumBufferCoordinatorSpans **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextBufferCoordinatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextBufferCoordinator * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextBufferCoordinator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextBufferCoordinator * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetBuffers )( 
            IVsTextBufferCoordinator * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pPrimaryBuffer,
            /* [in] */ __RPC__in_opt IVsTextLines *pSecondaryBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *SetSpanMappings )( 
            IVsTextBufferCoordinator * This,
            /* [in] */ long cSpans,
            /* [size_is][in] */ __RPC__in_ecount_full(cSpans) NewSpanMapping *rgSpans);
        
        HRESULT ( STDMETHODCALLTYPE *MapPrimaryToSecondarySpan )( 
            IVsTextBufferCoordinator * This,
            /* [in] */ TextSpan tsPrimary,
            /* [out] */ __RPC__out TextSpan *ptsSecondary);
        
        HRESULT ( STDMETHODCALLTYPE *MapSecondaryToPrimarySpan )( 
            IVsTextBufferCoordinator * This,
            /* [in] */ TextSpan tsSecondary,
            /* [out] */ __RPC__out TextSpan *ptsPrimary);
        
        HRESULT ( STDMETHODCALLTYPE *GetPrimaryBuffer )( 
            IVsTextBufferCoordinator * This,
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *GetSecondaryBuffer )( 
            IVsTextBufferCoordinator * This,
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *EnableReplication )( 
            IVsTextBufferCoordinator * This,
            /* [in] */ DWORD bcrd,
            /* [in] */ BOOL fEnable);
        
        HRESULT ( STDMETHODCALLTYPE *GetMappingOfPrimaryPosition )( 
            IVsTextBufferCoordinator * This,
            /* [in] */ long lPosition,
            /* [out] */ __RPC__out TextSpan *ptsPrimary,
            /* [out] */ __RPC__out TextSpan *ptsSecondary);
        
        HRESULT ( STDMETHODCALLTYPE *SetBufferMappingModes )( 
            IVsTextBufferCoordinator * This,
            /* [in] */ DWORD bcmmPrimary,
            /* [in] */ DWORD bcmmSecondary);
        
        HRESULT ( STDMETHODCALLTYPE *EnumSpans )( 
            IVsTextBufferCoordinator * This,
            __RPC__deref_in_opt IVsEnumBufferCoordinatorSpans **ppEnum);
        
        END_INTERFACE
    } IVsTextBufferCoordinatorVtbl;

    interface IVsTextBufferCoordinator
    {
        CONST_VTBL struct IVsTextBufferCoordinatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextBufferCoordinator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextBufferCoordinator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextBufferCoordinator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextBufferCoordinator_SetBuffers(This,pPrimaryBuffer,pSecondaryBuffer)	\
    ( (This)->lpVtbl -> SetBuffers(This,pPrimaryBuffer,pSecondaryBuffer) ) 

#define IVsTextBufferCoordinator_SetSpanMappings(This,cSpans,rgSpans)	\
    ( (This)->lpVtbl -> SetSpanMappings(This,cSpans,rgSpans) ) 

#define IVsTextBufferCoordinator_MapPrimaryToSecondarySpan(This,tsPrimary,ptsSecondary)	\
    ( (This)->lpVtbl -> MapPrimaryToSecondarySpan(This,tsPrimary,ptsSecondary) ) 

#define IVsTextBufferCoordinator_MapSecondaryToPrimarySpan(This,tsSecondary,ptsPrimary)	\
    ( (This)->lpVtbl -> MapSecondaryToPrimarySpan(This,tsSecondary,ptsPrimary) ) 

#define IVsTextBufferCoordinator_GetPrimaryBuffer(This,ppBuffer)	\
    ( (This)->lpVtbl -> GetPrimaryBuffer(This,ppBuffer) ) 

#define IVsTextBufferCoordinator_GetSecondaryBuffer(This,ppBuffer)	\
    ( (This)->lpVtbl -> GetSecondaryBuffer(This,ppBuffer) ) 

#define IVsTextBufferCoordinator_EnableReplication(This,bcrd,fEnable)	\
    ( (This)->lpVtbl -> EnableReplication(This,bcrd,fEnable) ) 

#define IVsTextBufferCoordinator_GetMappingOfPrimaryPosition(This,lPosition,ptsPrimary,ptsSecondary)	\
    ( (This)->lpVtbl -> GetMappingOfPrimaryPosition(This,lPosition,ptsPrimary,ptsSecondary) ) 

#define IVsTextBufferCoordinator_SetBufferMappingModes(This,bcmmPrimary,bcmmSecondary)	\
    ( (This)->lpVtbl -> SetBufferMappingModes(This,bcmmPrimary,bcmmSecondary) ) 

#define IVsTextBufferCoordinator_EnumSpans(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumSpans(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextBufferCoordinator_INTERFACE_DEFINED__ */


#ifndef __IVsSetSpanMappingEvents_INTERFACE_DEFINED__
#define __IVsSetSpanMappingEvents_INTERFACE_DEFINED__

/* interface IVsSetSpanMappingEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsSetSpanMappingEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("98CEEDBD-07A4-4376-ADE8-5A46B7F5F384")
    IVsSetSpanMappingEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnBeginSetSpanMappings( 
            /* [in] */ long cSpans,
            /* [size_is][in] */ __RPC__in_ecount_full(cSpans) NewSpanMapping *rgSpans) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnEndSetSpanMappings( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnMarkerInvalidated( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsSetSpanMappingEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsSetSpanMappingEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsSetSpanMappingEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsSetSpanMappingEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnBeginSetSpanMappings )( 
            IVsSetSpanMappingEvents * This,
            /* [in] */ long cSpans,
            /* [size_is][in] */ __RPC__in_ecount_full(cSpans) NewSpanMapping *rgSpans);
        
        HRESULT ( STDMETHODCALLTYPE *OnEndSetSpanMappings )( 
            IVsSetSpanMappingEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnMarkerInvalidated )( 
            IVsSetSpanMappingEvents * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker);
        
        END_INTERFACE
    } IVsSetSpanMappingEventsVtbl;

    interface IVsSetSpanMappingEvents
    {
        CONST_VTBL struct IVsSetSpanMappingEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsSetSpanMappingEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsSetSpanMappingEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsSetSpanMappingEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsSetSpanMappingEvents_OnBeginSetSpanMappings(This,cSpans,rgSpans)	\
    ( (This)->lpVtbl -> OnBeginSetSpanMappings(This,cSpans,rgSpans) ) 

#define IVsSetSpanMappingEvents_OnEndSetSpanMappings(This)	\
    ( (This)->lpVtbl -> OnEndSetSpanMappings(This) ) 

#define IVsSetSpanMappingEvents_OnMarkerInvalidated(This,pBuffer,pMarker)	\
    ( (This)->lpVtbl -> OnMarkerInvalidated(This,pBuffer,pMarker) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsSetSpanMappingEvents_INTERFACE_DEFINED__ */


#ifndef __IVsExternalCompletionSet_INTERFACE_DEFINED__
#define __IVsExternalCompletionSet_INTERFACE_DEFINED__

/* interface IVsExternalCompletionSet */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsExternalCompletionSet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("373A9399-FDF5-4f64-8866-E14B7F2CFFF7")
    IVsExternalCompletionSet : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetIntellisenseHost( 
            /* [in] */ __RPC__in_opt IVsIntellisenseHost *pHost) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateCompSet( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsExternalCompletionSetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsExternalCompletionSet * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsExternalCompletionSet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsExternalCompletionSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetIntellisenseHost )( 
            IVsExternalCompletionSet * This,
            /* [in] */ __RPC__in_opt IVsIntellisenseHost *pHost);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateCompSet )( 
            IVsExternalCompletionSet * This);
        
        END_INTERFACE
    } IVsExternalCompletionSetVtbl;

    interface IVsExternalCompletionSet
    {
        CONST_VTBL struct IVsExternalCompletionSetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsExternalCompletionSet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsExternalCompletionSet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsExternalCompletionSet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsExternalCompletionSet_SetIntellisenseHost(This,pHost)	\
    ( (This)->lpVtbl -> SetIntellisenseHost(This,pHost) ) 

#define IVsExternalCompletionSet_UpdateCompSet(This)	\
    ( (This)->lpVtbl -> UpdateCompSet(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsExternalCompletionSet_INTERFACE_DEFINED__ */


#ifndef __IVsExpansionIntellisenseHost_INTERFACE_DEFINED__
#define __IVsExpansionIntellisenseHost_INTERFACE_DEFINED__

/* interface IVsExpansionIntellisenseHost */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsExpansionIntellisenseHost;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DEF59D57-46FE-4984-8CA4-5EFA3AC5D16E")
    IVsExpansionIntellisenseHost : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTextLen( 
            /* [out] */ __RPC__out long *iLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetText( 
            /* [out] */ __RPC__deref_out_opt BSTR *bstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelection( 
            /* [out] */ __RPC__out long *iStart,
            /* [out] */ __RPC__out long *iEnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSelection( 
            /* [in] */ long iStart,
            /* [in] */ long iEnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetText( 
            /* [in] */ __RPC__in BSTR bstrText,
            /* [in] */ BOOL fReplaceAll) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentLevel( 
            /* [out] */ __RPC__out long *pLevel) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsExpansionIntellisenseHostVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsExpansionIntellisenseHost * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsExpansionIntellisenseHost * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsExpansionIntellisenseHost * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTextLen )( 
            IVsExpansionIntellisenseHost * This,
            /* [out] */ __RPC__out long *iLen);
        
        HRESULT ( STDMETHODCALLTYPE *GetText )( 
            IVsExpansionIntellisenseHost * This,
            /* [out] */ __RPC__deref_out_opt BSTR *bstrText);
        
        HRESULT ( STDMETHODCALLTYPE *GetSelection )( 
            IVsExpansionIntellisenseHost * This,
            /* [out] */ __RPC__out long *iStart,
            /* [out] */ __RPC__out long *iEnd);
        
        HRESULT ( STDMETHODCALLTYPE *SetSelection )( 
            IVsExpansionIntellisenseHost * This,
            /* [in] */ long iStart,
            /* [in] */ long iEnd);
        
        HRESULT ( STDMETHODCALLTYPE *SetText )( 
            IVsExpansionIntellisenseHost * This,
            /* [in] */ __RPC__in BSTR bstrText,
            /* [in] */ BOOL fReplaceAll);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentLevel )( 
            IVsExpansionIntellisenseHost * This,
            /* [out] */ __RPC__out long *pLevel);
        
        END_INTERFACE
    } IVsExpansionIntellisenseHostVtbl;

    interface IVsExpansionIntellisenseHost
    {
        CONST_VTBL struct IVsExpansionIntellisenseHostVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsExpansionIntellisenseHost_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsExpansionIntellisenseHost_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsExpansionIntellisenseHost_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsExpansionIntellisenseHost_GetTextLen(This,iLen)	\
    ( (This)->lpVtbl -> GetTextLen(This,iLen) ) 

#define IVsExpansionIntellisenseHost_GetText(This,bstrText)	\
    ( (This)->lpVtbl -> GetText(This,bstrText) ) 

#define IVsExpansionIntellisenseHost_GetSelection(This,iStart,iEnd)	\
    ( (This)->lpVtbl -> GetSelection(This,iStart,iEnd) ) 

#define IVsExpansionIntellisenseHost_SetSelection(This,iStart,iEnd)	\
    ( (This)->lpVtbl -> SetSelection(This,iStart,iEnd) ) 

#define IVsExpansionIntellisenseHost_SetText(This,bstrText,fReplaceAll)	\
    ( (This)->lpVtbl -> SetText(This,bstrText,fReplaceAll) ) 

#define IVsExpansionIntellisenseHost_GetCurrentLevel(This,pLevel)	\
    ( (This)->lpVtbl -> GetCurrentLevel(This,pLevel) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsExpansionIntellisenseHost_INTERFACE_DEFINED__ */


#ifndef __IVsReportExternalErrors_INTERFACE_DEFINED__
#define __IVsReportExternalErrors_INTERFACE_DEFINED__

/* interface IVsReportExternalErrors */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsReportExternalErrors;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("96F0CABD-DB51-428f-A42D-C756057D35C2")
    IVsReportExternalErrors : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ClearAllErrors( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddNewErrors( 
            /* [in] */ __RPC__in_opt IVsEnumExternalErrors *pErrors) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetErrors( 
            /* [out] */ __RPC__deref_out_opt IVsEnumExternalErrors **pErrors) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsReportExternalErrorsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsReportExternalErrors * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsReportExternalErrors * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsReportExternalErrors * This);
        
        HRESULT ( STDMETHODCALLTYPE *ClearAllErrors )( 
            IVsReportExternalErrors * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddNewErrors )( 
            IVsReportExternalErrors * This,
            /* [in] */ __RPC__in_opt IVsEnumExternalErrors *pErrors);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrors )( 
            IVsReportExternalErrors * This,
            /* [out] */ __RPC__deref_out_opt IVsEnumExternalErrors **pErrors);
        
        END_INTERFACE
    } IVsReportExternalErrorsVtbl;

    interface IVsReportExternalErrors
    {
        CONST_VTBL struct IVsReportExternalErrorsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsReportExternalErrors_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsReportExternalErrors_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsReportExternalErrors_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsReportExternalErrors_ClearAllErrors(This)	\
    ( (This)->lpVtbl -> ClearAllErrors(This) ) 

#define IVsReportExternalErrors_AddNewErrors(This,pErrors)	\
    ( (This)->lpVtbl -> AddNewErrors(This,pErrors) ) 

#define IVsReportExternalErrors_GetErrors(This,pErrors)	\
    ( (This)->lpVtbl -> GetErrors(This,pErrors) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsReportExternalErrors_INTERFACE_DEFINED__ */


#ifndef __IVsEnumExternalErrors_INTERFACE_DEFINED__
#define __IVsEnumExternalErrors_INTERFACE_DEFINED__

/* interface IVsEnumExternalErrors */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumExternalErrors;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("20890A77-47C8-44dd-ABC7-3F0920C1B79A")
    IVsEnumExternalErrors : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [out][in] */ __RPC__inout ExternalError *rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IVsEnumExternalErrors **ppErrors) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumExternalErrorsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumExternalErrors * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumExternalErrors * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumExternalErrors * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumExternalErrors * This,
            /* [in] */ ULONG celt,
            /* [out][in] */ __RPC__inout ExternalError *rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IVsEnumExternalErrors * This,
            /* [in] */ ULONG celts);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumExternalErrors * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IVsEnumExternalErrors * This,
            /* [out] */ __RPC__deref_out_opt IVsEnumExternalErrors **ppErrors);
        
        END_INTERFACE
    } IVsEnumExternalErrorsVtbl;

    interface IVsEnumExternalErrors
    {
        CONST_VTBL struct IVsEnumExternalErrorsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumExternalErrors_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumExternalErrors_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumExternalErrors_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumExternalErrors_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IVsEnumExternalErrors_Skip(This,celts)	\
    ( (This)->lpVtbl -> Skip(This,celts) ) 

#define IVsEnumExternalErrors_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumExternalErrors_Clone(This,ppErrors)	\
    ( (This)->lpVtbl -> Clone(This,ppErrors) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumExternalErrors_INTERFACE_DEFINED__ */

#endif /* __SingleFileEditor_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\sharedids.h ===
#ifndef _SHAREDIDS_H_
#define _SHAREDIDS_H_

//////////////////////////////////////////////////////////////////////////////
//
// GUID Identifiers, created by WebBrowse package
//
//////////////////////////////////////////////////////////////////////////////
#ifndef NOGUIDS

#ifdef DEFINE_GUID
  // {83285929-227C-11d3-B870-00C04F79F802}
  DEFINE_GUID(Group_Undefined, 
    0x83285929, 0x227c, 0x11d3, 0xb8, 0x70, 0x0, 0xc0, 0x4f, 0x79, 0xf8, 0x2);

  // {8328592A-227C-11d3-B870-00C04F79F802}
  DEFINE_GUID(Pkg_Undefined, 
    0x8328592a, 0x227c, 0x11d3, 0xb8, 0x70, 0x0, 0xc0, 0x4f, 0x79, 0xf8, 0x2);

  // {8328592B-227C-11d3-B870-00C04F79F802}
  DEFINE_GUID(guidSharedCmd, 
    0x8328592b, 0x227c, 0x11d3, 0xb8, 0x70, 0x0, 0xc0, 0x4f, 0x79, 0xf8, 0x2);

  // {8328592C-227C-11d3-B870-00C04F79F802}
  DEFINE_GUID(guidSharedBmps, 
    0x8328592c, 0x227c, 0x11d3, 0xb8, 0x70, 0x0, 0xc0, 0x4f, 0x79, 0xf8, 0x2);

	// {52FD9855-984F-48af-99F2-B718F913FF02}
  DEFINE_GUID(guidSharedBmps2, 
    0x52fd9855, 0x984f, 0x48af, 0x99, 0xf2, 0xb7, 0x18, 0xf9, 0x13, 0xff, 0x2);

  // {DF81EA62-BAAB-4d89-B550-073BA96AD0A2}
  DEFINE_GUID(guidSharedBmps3, 
  0xdf81ea62, 0xbaab, 0x4d89, 0xb5, 0x50, 0x7, 0x3b, 0xa9, 0x6a, 0xd0, 0xa2);

  // {B155A99C-CBFC-4de4-B99A-ED6B1FB03217}
  DEFINE_GUID(guidSharedBmps4, 
  0xb155a99c, 0xcbfc, 0x4de4, 0xb9, 0x9a, 0xed, 0x6b, 0x1f, 0xb0, 0x32, 0x17);

  // {2BBED035-8A0C-4c19-8CD2-298937BEB38C}
  DEFINE_GUID(guidSharedBmps5, 
  0x2bbed035, 0x8a0c, 0x4c19, 0x8c, 0xd2, 0x29, 0x89, 0x37, 0xbe, 0xb3, 0x8c);

  // {EB28B762-7E54-492b-9336-4853994FE349}
  DEFINE_GUID(guidSharedBmps6, 
  0xeb28b762, 0x7e54, 0x492b, 0x93, 0x36, 0x48, 0x53, 0x99, 0x4f, 0xe3, 0x49);

  // {634F8946-FFF0-491f-AF41-B599FC20D561}
  DEFINE_GUID(guidSharedBmps7, 
  0x634f8946, 0xfff0, 0x491f, 0xaf, 0x41, 0xb5, 0x99, 0xfc, 0x20, 0xd5, 0x61);

  // {2B671D3D-AB51-434a-8D38-CBF1728530BB}
  DEFINE_GUID(guidSharedBmps8, 
  0x2b671d3d, 0xab51, 0x434a, 0x8d, 0x38, 0xcb, 0xf1, 0x72, 0x85, 0x30, 0xbb);

  // {222989A7-37A5-429f-AE43-8E9E960E7025}
  DEFINE_GUID(guidSharedBmps9, 
  0x222989a7, 0x37a5, 0x429f, 0xae, 0x43, 0x8e, 0x9e, 0x96, 0xe, 0x70, 0x25);

  // {3EA44CF4-2BBE-4d17-AA21-63B6A24BE9F6}
  DEFINE_GUID(guidSharedBmps10, 
  0x3ea44cf4, 0x2bbe, 0x4d17, 0xaa, 0x21, 0x63, 0xb6, 0xa2, 0x4b, 0xe9, 0xf6);

  // {7C9FA578-7C66-4495-98E6-1F5457E6C7AA}
  DEFINE_GUID(guidSharedBmps11, 
  0x7c9fa578, 0x7c66, 0x4495, 0x98, 0xe6, 0x1f, 0x54, 0x57, 0xe6, 0xc7, 0xaa);
#else

// {83285929-227C-11d3-B870-00C04F79F802}
#define Group_Undefined  { 0x83285929, 0x227c, 0x11d3, { 0xb8, 0x70, 0x00, 0xc0, 0x4f, 0x79, 0xf8, 0x02 } }

// {8328592A-227C-11d3-B870-00C04F79F802}
#define Pkg_Undefined    { 0x8328592a, 0x227c, 0x11d3, { 0xb8, 0x70, 0x0, 0xc0, 0x4f, 0x79, 0xf8, 0x2 } }

// {8328592B-227C-11d3-B870-00C04F79F802}
#define guidSharedCmd    { 0x8328592b, 0x227c, 0x11d3, { 0xb8, 0x70, 0x0, 0xc0, 0x4f, 0x79, 0xf8, 0x2 } }

// {8328592C-227C-11d3-B870-00C04F79F802}
#define guidSharedBmps   { 0x8328592c, 0x227c, 0x11d3, { 0xb8, 0x70, 0x0, 0xc0, 0x4f, 0x79, 0xf8, 0x2 } }

// {52FD9855-984F-48af-99F2-B718F913FF02}
#define guidSharedBmps2  { 0x52fd9855, 0x984f, 0x48af, { 0x99, 0xf2, 0xb7, 0x18, 0xf9, 0x13, 0xff, 0x2 } }

// {DF81EA62-BAAB-4d89-B550-073BA96AD0A2}
#define guidSharedBmps3 { 0xdf81ea62, 0xbaab, 0x4d89, { 0xb5, 0x50, 0x7, 0x3b, 0xa9, 0x6a, 0xd0, 0xa2 } }

// {B155A99C-CBFC-4de4-B99A-ED6B1FB03217}
#define guidSharedBmps4 { 0xb155a99c, 0xcbfc, 0x4de4, { 0xb9, 0x9a, 0xed, 0x6b, 0x1f, 0xb0, 0x32, 0x17 } }

// {2BBED035-8A0C-4c19-8CD2-298937BEB38C}
#define guidSharedBmps5 { 0x2bbed035, 0x8a0c, 0x4c19, { 0x8c, 0xd2, 0x29, 0x89, 0x37, 0xbe, 0xb3, 0x8c } }

// {EB28B762-7E54-492b-9336-4853994FE349}
#define guidSharedBmps6 { 0xeb28b762, 0x7e54, 0x492b, { 0x93, 0x36, 0x48, 0x53, 0x99, 0x4f, 0xe3, 0x49 } }

// {634F8946-FFF0-491f-AF41-B599FC20D561}
#define guidSharedBmps7 { 0x634f8946, 0xfff0, 0x491f, { 0xaf, 0x41, 0xb5, 0x99, 0xfc, 0x20, 0xd5, 0x61 } }

// {2B671D3D-AB51-434a-8D38-CBF1728530BB}
#define guidSharedBmps8 { 0x2b671d3d, 0xab51, 0x434a, { 0x8d, 0x38, 0xcb, 0xf1, 0x72, 0x85, 0x30, 0xbb } }

// {222989A7-37A5-429f-AE43-8E9E960E7025}
#define guidSharedBmps9 { 0x222989a7, 0x37a5, 0x429f, { 0xae, 0x43, 0x8e, 0x9e, 0x96, 0xe, 0x70, 0x25 } }

// {3EA44CF4-2BBE-4d17-AA21-63B6A24BE9F6}
#define guidSharedBmps10 { 0x3ea44cf4, 0x2bbe, 0x4d17, { 0xaa, 0x21, 0x63, 0xb6, 0xa2, 0x4b, 0xe9, 0xf6 } }

// {7C9FA578-7C66-4495-98E6-1F5457E6C7AA}
#define guidSharedBmps11 { 0x7c9fa578, 0x7c66, 0x4495, { 0x98, 0xe6, 0x1f, 0x54, 0x57, 0xe6, 0xc7, 0xaa } }

#endif //DEFINE_GUID

#endif //NOGUIDS


///////////////////////////////////////////////////////////////////////////////
// Command IDs


////////////////////////////////////////////////////////////////
// BITMAPS
////////////////////////////////////////////////////////////////
// guidSharedBmps
////////////////////////////////////////////////////////////////
#define bmpidVisibleBorders				1
#define bmpidShowDetails				2
#define bmpidMake2d						3
#define bmpidLockElement				4
#define bmpid2dDropMode					5
#define bmpidSnapToGrid					6
#define bmpidForeColor					7
#define bmpidBackColor					8
#define bmpidScriptOutline				9
#define bmpidDisplay1D					10
#define bmpidDisplay2D					11
#define bmpidInsertLink					12
#define bmpidInsertBookmark				13
#define bmpidInsertImage				14
#define bmpidInsertForm					15
#define bmpidInsertDiv					16
#define bmpidInsertSpan					17
#define bmpidInsertMarquee				18
#define bmpidOutlineHTML				19
#define bmpidOutlineScript				20
#define	bmpidShowGrid					21
#define bmpidCopyWeb                    22
#define bmpidHyperLink					23
#define bmpidSynchronize                24
#define bmpidIsolatedMode               25
#define bmpidDirectMode                 26
#define bmpidDiscardChanges             27
#define bmpidGetWorkingCopy             28
#define bmpidReleaseWorkingCopy         29
#define bmpidGet                        30
#define	bmpidShowAllFiles				31
#define bmpidStopNow                    32
#define bmpidBrokenLinkReport           33
#define bmpidAddDataCommand             34
#define bmpidRemoveWebFromScc           35
//
#define	bmpidAddPageFromFile			36
#define	bmpidOpenTopic					37
#define	bmpidAddBlankPage				38
#define	bmpidEditTitleString			39
#define	bmpidChangeNodeURL				40
//
#define bmpidDeleteTable                41
#define bmpidSelectTable                42
#define bmpidSelectColumn               43
#define bmpidSelectRow                  44
#define bmpidSelectCell                 45

#define bmpidAddNewWebForm              46
#define bmpidAddNewHTMLPage             47
#define bmpidAddNewWebService           48
#define bmpidAddNewComponent            49
#define bmpidaddNewModule               50
#define bmpidAddNewForm                 51
#define bmpidAddNewInheritedForm        52
#define bmpidAddNewUserControl          53
#define bmpidAddNewInheritedUserControl 54
#define bmpidAddNewXSDSchema            55
#define bmpidAddNewXMLPage              56
#define bmpidNewLeftFrame               57
#define bmpidNewRightFrame              58
#define bmpidNewTopFrame                59
#define bmpidNewBottomFrame             60
#define bmpidNewWebUserControl          61
//
#define bmpidCompile                    62
#define bmpidStartWebAdminTool          63
#define bmpidNestRelatedFiles           64
#define bmpidGenPageResource            65

////////////////////////////////////////////////////////////////
// guidSharedBmps2
////////////////////////////////////////////////////////////////
#define bmpid2Filter                     1
#define bmpid2EventLog                   2
#define bmpid2View                       3
#define bmpid2TimelineViewer             4
#define bmpid2BlockDiagramViewer         5
#define bmpid2MultipleEventViewer        6
#define bmpid2SingleEventViewer          7
#define bmpid2SummaryViewer              8
#define bmpid2ChartViewer                9
#define bmpid2AddMachine                10
#define bmpid2AddFilter                 11
#define bmpid2EditFilter                12
#define bmpid2ApplyFilter               13
#define bmpid2StartCollecting           14
#define bmpid2StopCollecting            15
#define bmpid2IncreaseSpeed             16
#define bmpid2DecreaseSpeed             17
#define bmpid2Unknown1                  18
#define bmpid2FirstRecord               19
#define bmpid2PrevRecord                20
#define bmpid2NextRecord                21
#define bmpid2LastRecord                22
#define bmpid2Play                      23
#define bmpid2Stop                      24
#define bmpid2Duplicate                 25
#define bmpid2Export                    26
#define bmpid2Import                    27
#define bmpid2PlayFrom                  28
#define bmpid2PlayTo                    29
#define bmpid2Goto                      30
#define bmpid2ZoomToFit                 31
#define bmpid2AutoFilter                32
#define bmpid2AutoSelect                33
#define bmpid2AutoPlayTrack             34
#define bmpid2ExpandSelection           35
#define bmpid2ContractSelection         36
#define bmpid2PauseRecording            37
#define bmpid2AddLog                    38
#define bmpid2Connect                   39
#define bmpid2Disconnect                40
#define bmpid2MachineDiagram            41
#define bmpid2ProcessDiagram            42
#define bmpid2ComponentDiagram          43
#define bmpid2StructureDiagram          44
////////////////////////////////////////////////////////////////
// guidSharedBmps3
////////////////////////////////////////////////////////////////
#define bmpid3FileSystemEditor           1
#define bmpid3RegistryEditor             2
#define bmpid3FileTypesEditor            3
#define bmpid3UserInterfaceEditor        4
#define bmpid3CustomActionsEditor        5
#define bmpid3LaunchConditionsEditor     6
////////////////////////////////////////////////////////////////
// guidSharedBmps4
////////////////////////////////////////////////////////////////
#define bmpid4FldView                    1
#define bmpid4SelExpert                  2
#define bmpid4TopNExpert                 3
#define bmpid4SortOrder                  4
#define bmpid4PropPage                   5
#define bmpid4Help                       6
#define	bmpid4SaveRpt                    7
#define bmpid4InsSummary                 8
#define bmpid4InsGroup                   9
#define bmpid4InsSubreport              10
#define bmpid4InsChart                  11
#define bmpid4InsPicture                12
#define bmpid4SortCategory              13
////////////////////////////////////////////////////////////////
// guidSharedBmps5
////////////////////////////////////////////////////////////////
#define bmpid5AddDataConn                1
////////////////////////////////////////////////////////////////
// guidSharedBmps6
////////////////////////////////////////////////////////////////
#define bmpid6ViewFieldList              1
#define bmpid6ViewGrid                   2
#define bmpid6ViewKeys                   3
#define bmpid6ViewCollapsed              4
#define bmpid6Remove                     5
#define bmpid6Refresh                    6
#define bmpid6ViewUserDefined            7
#define bmpid6ViewPageBreaks             8
#define bmpid6RecalcPageBreaks           9
#define bmpid6ZoomToFit                 10
#define bmpid6DeleteFromDB              11
////////////////////////////////////////////////////////////////
// guidSharedBmps7
////////////////////////////////////////////////////////////////
#define bmpid7SelectQuery                1
#define bmpid7InsertQuery                2
#define bmpid7UpdateQuery                3
#define bmpid7DeleteQuery                4
#define bmpid7SortAsc                    5
#define bmpid7SortDesc                   6
#define bmpid7RemoveFilter               7
#define bmpid7VerifySQL                  8
#define bmpid7RunQuery                   9
#define bmpid7DiagramPane               10
#define bmpid7GridPane                  11
#define bmpid7ResultsPane               12
#define bmpid7SQLPane                   13
#define bmpid7Totals                    14
#define bmpid7MakeTableQuery            15
#define bmpid7InsertValuesQuery         16
#define bmpid7RowFirst                  17
#define bmpid7RowLast                   18
#define bmpid7RowNext                   19
#define bmpid7RowPrevious               20
#define bmpid7RowNew                    21
#define bmpid7RowDelete                 22
#define bmpid7GenerateSQL               23	
#define bmpid7JoinLeftAll               24
#define bmpid7JoinRightAll              25
#define bmpid7RowGoto                   26
#define bmpid7ClearQuery                27
#define bmpid7QryManageIndexes          28
////////////////////////////////////////////////////////////////
// guidSharedBmps8
////////////////////////////////////////////////////////////////
#define bmpid8NewTable                   1
#define bmpid8SaveChangeScript           2
#define bmpid8PrimaryKey                 3
#define bmpid8LayoutDiagram              4
#define bmpid8LayoutSelection            5
#define bmpid8AddRelatedTables           6
#define bmpid8NewTextAnnotation          7
#define bmpid8InsertCol                  8
#define bmpid8DeleteCol                  9
#define bmpid8ShowRelLabels             10
#define bmpid8AutosizeSelTables         11
#define	bmpid8SaveSelection             12
#define bmpid8EditUDV                   13
#define bmpid8AddTableView              14
#define bmpid8ManangeIndexes            15
#define bmpid8ManangeConstraints        16
#define bmpid8ManangeRelationships      17
#define bmpid8AddDerivedTable 		18
#define bmpid8Navigate 			19
////////////////////////////////////////////////////////////////
// guidSharedBmps9
////////////////////////////////////////////////////////////////
#define bmpid9NewElement                 1
#define bmpid9NewSimpleType              2
#define bmpid9NewComplexType             3
#define bmpid9NewAttribute               4
#define bmpid9NewGroup                   5
#define bmpid9NewAttributeGroup          6
#define bmpid9Diamond                    7
#define bmpid9NewAnyAttribute            8
#define bmpid9NewKey                     9
#define bmpid9NewRelation               10
#define bmpid9EditKey                   11
#define bmpid9EditRelation              12
#define bmpid9MakeTypeGlobal            13
#define bmpid9CreateSchema              14
#define bmpid9PreviewDataSet            15
#define bmpid9NewFacet                  16
#define bmpid9ValidateHtmlData          17
#define bmpid9DataPreview               18
#define bmpid9DataGenerateDataSet       19
#define bmpid9DataGenerateMethods       20
////////////////////////////////////////////////////////////////
// guidSharedBmps10
////////////////////////////////////////////////////////////////
#define bmpid10NewDialog                 1
#define bmpid10NewMenu                   2
#define bmpid10NewCursor                 3
#define bmpid10NewIcon                   4
#define bmpid10NewBitmap                 5
#define bmpid10NewToolbar                6
#define bmpid10NewAccel                  7
#define bmpid10NewString                 8
#define bmpid10NewVersion                9
#define bmpid10ResourceInc              10
//
#define bmpid10DlgTest                  12
//
#define bmpid10CenterVert               17
#define bmpid10CenterHorz               18
#define bmpid10SpaceAcross              19
#define bmpid10SpaceDown                20
//
#define bmpid10ToggleGrid               24
#define bmpid10ToggleGuides             25
//
#define bmpid10CheckMnemonics           27
#define bmpid10AutoLayoutGrow           28
#define bmpid10AutoLayoutOptimize       29
#define bmpid10AutoLayoutNoResize       30
////////////////////////////////////////////////////////////////
// guidSharedBmps11
////////////////////////////////////////////////////////////////
#define bmpid11Pick                      1
#define bmpid11PickRegion                2
#define bmpid11PickColor                 3
#define bmpid11Eraser                    4
#define bmpid11Fill                      5
#define bmpid11Zoom                      6
#define bmpid11Pencil                    7
#define bmpid11Brush                     8
#define bmpid11AirBrush                  9
#define bmpid11Line                     10
#define bmpid11Curve                    11
#define bmpid11Text                     12
#define bmpid11Rect                     13
#define bmpid11OutlineRect              14
#define bmpid11FilledRect               15
#define bmpid11RoundedRect              16
#define bmpid11OutlineRoundedRect       17
#define bmpid11FilledRoundedRect        18
#define bmpid11Ellipse                  19
#define bmpid11OutlineEllipse           20
#define bmpid11FilledEllipse            21
#define bmpid11HotSpot                  22
#define bmpid11EraserSize1              23
#define bmpid11EraserSize2              24
#define bmpid11EraserSize3              25
#define bmpid11EraserSize4              26
#define bmpid11LineWidth1               27
#define bmpid11LineWidth2               28
#define bmpid11LineWidth3               29
#define bmpid11LineWidth4               30
#define bmpid11LineWidth5               31
#define bmpid11LargeCircle              32
#define bmpid11MediumCircle             33
#define bmpid11SmallCircle              34
#define bmpid11SmallSquare              35
#define bmpid11LeftDiagLarge            36
#define bmpid11LeftDiagMedium           37
#define bmpid11LeftDiagSmall            38
#define bmpid11RightDiagLarge           39
#define bmpid11RightDiagMedium          40
#define bmpid11RightDiagSmall           41
#define bmpid11SplashSmall              42
#define bmpid11SplashMedium             43
#define bmpid11SplashLarge              44
#define bmpid11Transparent              45
#define bmpid11Opaque                   46
#define bmpid11Zoom1x                   47
#define bmpid11Zoom2x                   48
#define bmpid11Zoom6x                   49
#define bmpid11Zoom8x                   50
#define bmpid11ColorWindow              51
#define bmpid11ResView                  52
// These two were removed from the bitmap strip
//#define bmpid11Flip                     53
//#define bmpid11Stretch                  54
//
#define bmpid11NewImageType             53
#define bmpid11ImageOptions		54

#endif //_SHAREDIDS_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\stdiduie.h ===
//-----------------------------------------------------------------------------
// Microsoft Visual Studio
//
// Copyright 1995-1997 Microsoft Corporation.  All Rights Reserved.
//
// File: stdiduie.h
// Area: IOleComponentUIManager
//
// Contents:
//   Contains ids used for UIEvents used in StandardUIEventSet98.
//   StandardUIEventSet98 is defined by the following guid:
//
//   {54038220-FA22-11d0-8798-00A0C91E2A46}
//   DEFINE_GUID(StandardUIEventSet98, 
//   0x54038220, 0xfa22, 0x11d0, 0x87, 0x98, 0x0, 0xa0, 0xc9, 0x1e, 0x2a, 0x46);
//-----------------------------------------------------------------------------

#ifndef _STDIDUIE_H_                  
#define _STDIDUIE_H_                  

#ifndef __NOENUM__

// for specialized contracts
enum
  {
  UIE_TEXTSELMODE_STREAM   = 0,
  UIE_TEXTSELMODE_BOX      = 1
  };

enum
  {
  UIE_TEXTINSMODE_INSERT     = 0,
  UIE_TEXTINSMODE_OVERSTRIKE = 1
  };

#endif //__NOENUM__

// Events for GUID StandardUIEventSet98
// The following UIEvents all use:
//    dwUIEventStatus = OLEUIEVENTSTATUS_OCCURRED
//    dwEventFreq     = OLEUIEVENTFREQ_NULL
#define uieventidSetTextLinePos     1	// ARG: NULL, VT_I2, VT_I4, VT_BSTR, or VT_EMPTY
					//	If VT_I2 or VT_I4, number is formatted into "Ln ##"
					//	if VT_BSTR, text is displayed as is with no formatting
					//	if VT_EMPTY, value is NOT displayed at all
					//	if NULL pointer, value is left unchanged

#define uieventidSetTextColPos	    10	// ARG: NULL, VT_I2, VT_I4, VT_BSTR, or VT_EMPTY
					//	If VT_I2 or VT_I4, number is formatted into "Ln ##"
					//	if VT_BSTR, text is displayed as is with no formatting
					//	if VT_EMPTY, value is NOT displayed at all
					//	if NULL pointer, value is left unchanged

#define uieventidSetTextCharPos     2	// ARG: NULL, VT_I2, VT_I4, VT_BSTR, or VT_EMPTY
					//	If VT_I2 or VT_I4, number is formatted into "Ln ##"
					//	if VT_BSTR, text is displayed as is with no formatting
					//	if VT_EMPTY, value is NOT displayed at all
					//	if NULL pointer, value is left unchanged

#define uieventidSetTextSelMode     3	// ARG: VT_I4 UIE_TEXTSELMODE enum or VT_BSTR
#define uieventidSetTextInsMode     4	// ARG: VT_I4 UIE_TEXTINSMODE enum

#define uieventidSetGraphicXPos     5	// ARG: VT_I2, VT_I4, VT_R4, or VT_R8
#define uieventidSetGraphicYPos     6	// ARG: VT_I2, VT_I4, VT_R4, or VT_R8
#define uieventidSetGraphicXSize    7	// ARG: VT_I2, VT_I4, VT_R4, or VT_R8
#define uieventidSetGraphicYSize    8	// ARG: VT_I2, VT_I4, VT_R4, or VT_R8

// The following UIEvents all use:
//    dwUIEventStatus = OLEUIEVENTSTATUS_START / OLEUIEVENTSTATUS_STOP
//    dwEventFreq     = OLEUIEVENTFREQ_NULL
#define uieventidAnimateIcon	    9	// OLEUIEVENTSTATUS_START:  Starts animated icon
					// OLEUIEVENTSTATUS_STOP:   Stops animated icon
					// NYI: ARG: VT_I4, Index of predefined icons, or custom icon
#endif //_STDIDUIE_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\stdidcmd.h ===
//-----------------------------------------------------------------------------
// Microsoft Visual Studio
//
// Copyright 1995-2003 Microsoft Corporation.  All Rights Reserved.
//
// File: stdidcmd.h
// Area: IOleCommandTarget and IOleComponentUIManager
//
// Contents:
//   Contains ids used for commands used in StandardCommandSet97.
//   StandardCommandSet97 is defined by the following guid:
//
//   {5efc7975-14bc-11cf-9b2b-00aa00573819}
//   DEFINE_GUID(CLSID_StandardCommandSet97,
//               0x5efc7975, 0x14bc, 0x11cf, 0x9b, 0x2b, 0x00, 0xaa, 0x00,
//               0x57, 0x38, 0x19);
//
//   Contains ids used for commands used in StandardCommandSet2K.
//   StandardCommandSet2K is defined by the following guid:
//
//   {1496A755-94DE-11D0-8C3F-00C04FC2AAE2}
//  DEFINE_GUID(CMDSETID_StandardCommandSet2K,
//    0x1496A755, 0x94DE, 0x11D0, 0x8C, 0x3F, 0x00, 0xC0, 0x4F, 0xC2, 0xAA, 0xE2);
//
//
//   Contains ids used for commands used in StandardCommandSet10.
//   StandardCommandSet10 is defined by the following guid:
//
//   {5DD0BB59-7076-4c59-88D3-DE36931F63F0}
//  DEFINE_GUID(CMDSETID_StandardCommandSet10, 
//    0x5dd0bb59, 0x7076, 0x4c59, 0x88, 0xd3, 0xde, 0x36, 0x93, 0x1f, 0x63, 0xf0);
//
//  NOTE that new commands should be added to the end of StandardCommandSet2K
//  and that CLSID_StandardCommandSet97 should not be further added to.
//  NOTE also that in StandardCommandSet2K all commands up to ECMD_FINAL are
//  standard editor commands and have been moved here from editcmd.h.
//-----------------------------------------------------------------------------

#ifndef _STDIDCMD_H_
#define _STDIDCMD_H_

#ifndef __CTC__
#ifdef __cplusplus

// for specialized contracts
enum
{
    CMD_ZOOM_PAGEWIDTH     = -1,
    CMD_ZOOM_ONEPAGE       = -2,
    CMD_ZOOM_TWOPAGES      = -3,
    CMD_ZOOM_SELECTION     = -4,
    CMD_ZOOM_FIT           = -5
};

#endif //__cplusplus
#endif //__CTC__

#define cmdidAlignBottom        1
#define cmdidAlignHorizontalCenters     2
#define cmdidAlignLeft          3
#define cmdidAlignRight         4
#define cmdidAlignToGrid        5
#define cmdidAlignTop           6
#define cmdidAlignVerticalCenters       7
#define cmdidArrangeBottom      8
#define cmdidArrangeRight       9
#define cmdidBringForward       10
#define cmdidBringToFront       11
#define cmdidCenterHorizontally         12
#define cmdidCenterVertically           13
#define cmdidCode           14
#define cmdidCopy           15
#define cmdidCut            16
#define cmdidDelete         17
#define cmdidFontName           18
#define cmdidFontNameGetList            500
#define cmdidFontSize           19
#define cmdidFontSizeGetList            501
#define cmdidGroup          20
#define cmdidHorizSpaceConcatenate      21
#define cmdidHorizSpaceDecrease         22
#define cmdidHorizSpaceIncrease         23
#define cmdidHorizSpaceMakeEqual        24
#define cmdidLockControls               369
#define cmdidInsertObject       25
#define cmdidPaste          26
#define cmdidPrint          27
#define cmdidProperties         28
#define cmdidRedo           29
#define cmdidMultiLevelRedo     30
#define cmdidSelectAll          31
#define cmdidSendBackward       32
#define cmdidSendToBack         33
#define cmdidShowTable          34
#define cmdidSizeToControl      35
#define cmdidSizeToControlHeight        36
#define cmdidSizeToControlWidth         37
#define cmdidSizeToFit          38
#define cmdidSizeToGrid         39
#define cmdidSnapToGrid         40
#define cmdidTabOrder           41
#define cmdidToolbox            42
#define cmdidUndo           43
#define cmdidMultiLevelUndo     44
#define cmdidUngroup            45
#define cmdidVertSpaceConcatenate       46
#define cmdidVertSpaceDecrease          47
#define cmdidVertSpaceIncrease          48
#define cmdidVertSpaceMakeEqual         49
#define cmdidZoomPercent        50
#define cmdidBackColor          51
#define cmdidBold           52
#define cmdidBorderColor        53
#define cmdidBorderDashDot      54
#define cmdidBorderDashDotDot           55
#define cmdidBorderDashes       56
#define cmdidBorderDots         57
#define cmdidBorderShortDashes          58
#define cmdidBorderSolid        59
#define cmdidBorderSparseDots           60
#define cmdidBorderWidth1       61
#define cmdidBorderWidth2       62
#define cmdidBorderWidth3       63
#define cmdidBorderWidth4       64
#define cmdidBorderWidth5       65
#define cmdidBorderWidth6       66
#define cmdidBorderWidthHairline        67
#define cmdidFlat           68
#define cmdidForeColor          69
#define cmdidItalic         70
#define cmdidJustifyCenter      71
#define cmdidJustifyGeneral     72
#define cmdidJustifyLeft        73
#define cmdidJustifyRight       74
#define cmdidRaised         75
#define cmdidSunken         76
#define cmdidUnderline          77
#define cmdidChiseled           78
#define cmdidEtched         79
#define cmdidShadowed           80
#define cmdidCompDebug1         81
#define cmdidCompDebug2         82
#define cmdidCompDebug3         83
#define cmdidCompDebug4         84
#define cmdidCompDebug5         85
#define cmdidCompDebug6         86
#define cmdidCompDebug7         87
#define cmdidCompDebug8         88
#define cmdidCompDebug9         89
#define cmdidCompDebug10        90
#define cmdidCompDebug11        91
#define cmdidCompDebug12        92
#define cmdidCompDebug13        93
#define cmdidCompDebug14        94
#define cmdidCompDebug15        95
#define cmdidExistingSchemaEdit         96
#define cmdidFind           97
#define cmdidGetZoom            98
#define cmdidQueryOpenDesign        99
#define cmdidQueryOpenNew       100
#define cmdidSingleTableDesign          101
#define cmdidSingleTableNew     102
#define cmdidShowGrid           103
#define cmdidNewTable           104
#define cmdidCollapsedView      105
#define cmdidFieldView          106
#define cmdidVerifySQL          107
#define cmdidHideTable          108

#define cmdidPrimaryKey         109
#define cmdidSave           110
#define cmdidSaveAs         111
#define cmdidSortAscending      112

#define cmdidSortDescending     113
#define cmdidAppendQuery        114
#define cmdidCrosstabQuery      115
#define cmdidDeleteQuery        116
#define cmdidMakeTableQuery     117

#define cmdidSelectQuery        118
#define cmdidUpdateQuery        119
#define cmdidParameters         120
#define cmdidTotals         121
#define cmdidViewCollapsed      122

#define cmdidViewFieldList      123


#define cmdidViewKeys           124
#define cmdidViewGrid           125
#define cmdidInnerJoin          126

#define cmdidRightOuterJoin     127
#define cmdidLeftOuterJoin      128
#define cmdidFullOuterJoin      129
#define cmdidUnionJoin          130
#define cmdidShowSQLPane        131

#define cmdidShowGraphicalPane          132
#define cmdidShowDataPane       133
#define cmdidShowQBEPane        134
#define cmdidSelectAllFields        135

#define cmdidOLEObjectMenuButton        136

// ids on the ole verbs menu - these must be sequential ie verblist0-verblist9
#define cmdidObjectVerbList0        137
#define cmdidObjectVerbList1        138
#define cmdidObjectVerbList2        139
#define cmdidObjectVerbList3        140
#define cmdidObjectVerbList4        141
#define cmdidObjectVerbList5        142
#define cmdidObjectVerbList6        143
#define cmdidObjectVerbList7        144
#define cmdidObjectVerbList8        145
#define cmdidObjectVerbList9        146 // Unused on purpose!

#define cmdidConvertObject      147
#define cmdidCustomControl      148
#define cmdidCustomizeItem      149
#define cmdidRename         150

#define cmdidImport         151
#define cmdidNewPage            152
#define cmdidMove           153
#define cmdidCancel         154

#define cmdidFont           155

#define cmdidExpandLinks        156
#define cmdidExpandImages       157
#define cmdidExpandPages        158
#define cmdidRefocusDiagram         159
#define cmdidTransitiveClosure      160
#define cmdidCenterDiagram      161
#define cmdidZoomIn             162
#define cmdidZoomOut            163
#define cmdidRemoveFilter       164
#define cmdidHidePane           165
#define cmdidDeleteTable        166
#define cmdidDeleteRelationship     167
#define cmdidRemove             168
#define cmdidJoinLeftAll        169
#define cmdidJoinRightAll       170
#define cmdidAddToOutput        171     // Add selected fields to query output
#define cmdidOtherQuery         172     // change query type to 'other'
#define cmdidGenerateChangeScript   173
#define cmdidSaveSelection      174 // Save current selection
#define cmdidAutojoinCurrent        175 // Autojoin current tables
#define cmdidAutojoinAlways         176 // Toggle Autojoin state
#define cmdidEditPage           177 // Launch editor for url
#define cmdidViewLinks          178 // Launch new webscope for url
#define cmdidStop           179 // Stope webscope rendering
#define cmdidPause          180 // Pause webscope rendering
#define cmdidResume         181 // Resume webscope rendering
#define cmdidFilterDiagram      182 // Filter webscope diagram
#define cmdidShowAllObjects     183 // Show All objects in webscope diagram
#define cmdidShowApplications       184 // Show Application objects in webscope diagram
#define cmdidShowOtherObjects       185 // Show other objects in webscope diagram
#define cmdidShowPrimRelationships  186 // Show primary relationships
#define cmdidExpand         187 // Expand links
#define cmdidCollapse           188 // Collapse links
#define cmdidRefresh            189 // Refresh Webscope diagram
#define cmdidLayout         190 // Layout websope diagram
#define cmdidShowResources      191 // Show resouce objects in webscope diagram
#define cmdidInsertHTMLWizard       192 // Insert HTML using a Wizard
#define cmdidShowDownloads      193 // Show download objects in webscope diagram
#define cmdidShowExternals      194 // Show external objects in webscope diagram
#define cmdidShowInBoundLinks       195 // Show inbound links in webscope diagram
#define cmdidShowOutBoundLinks      196 // Show out bound links in webscope diagram
#define cmdidShowInAndOutBoundLinks 197 // Show in and out bound links in webscope diagram
#define cmdidPreview            198 // Preview page
#define cmdidOpen           261 // Open
#define cmdidOpenWith           199 // Open with
#define cmdidShowPages          200 // Show HTML pages
#define cmdidRunQuery           201     // Runs a query
#define cmdidClearQuery         202     // Clears the query's associated cursor
#define cmdidRecordFirst        203     // Go to first record in set
#define cmdidRecordLast         204     // Go to last record in set
#define cmdidRecordNext         205     // Go to next record in set
#define cmdidRecordPrevious         206     // Go to previous record in set
#define cmdidRecordGoto         207     // Go to record via dialog
#define cmdidRecordNew          208     // Add a record to set

#define cmdidInsertNewMenu      209 // menu designer
#define cmdidInsertSeparator        210 // menu designer
#define cmdidEditMenuNames      211 // menu designer

#define cmdidDebugExplorer      212
#define cmdidDebugProcesses     213
#define cmdidViewThreadsWindow      214
#define cmdidWindowUIList       215

// ids on the file menu
#define cmdidNewProject         216
#define cmdidOpenProject        217
#define cmdidOpenSolution       218
#define cmdidCloseSolution      219
#define cmdidFileNew            221
#define cmdidNewProjectFromExisting 385
#define cmdidFileOpen           222
#define cmdidFileOpenFromWeb        451
#define cmdidFileClose          223
#define cmdidSaveSolution       224
#define cmdidSaveSolutionAs     225
#define cmdidSaveProjectItemAs      226
#define cmdidPageSetup          227
#define cmdidPrintPreview       228
#define cmdidExit           229

// ids on the edit menu
#define cmdidReplace            230
#define cmdidGoto           231

// ids on the view menu
#define cmdidPropertyPages      232
#define cmdidFullScreen         233
#define cmdidProjectExplorer        234
#define cmdidPropertiesWindow       235
#define cmdidTaskListWindow     236
//#define cmdidErrorListWindow    320 // defined below
#define cmdidOutputWindow       237
#define cmdidObjectBrowser      238
#define cmdidDocOutlineWindow   239
#define cmdidImmediateWindow    240
#define cmdidWatchWindow        241
#define cmdidLocalsWindow       242
#define cmdidCallStack          243
// moved below definition
//#define cmdidAutosWindow        cmdidDebugReserved1
//#define cmdidThisWindow         cmdidDebugReserved2

// ids on project menu
#define cmdidAddNewItem         220
#define cmdidAddExistingItem        244
#define cmdidNewFolder          245
#define cmdidSetStartupProject      246
#define cmdidProjectSettings        247
#define cmdidProjectReferences          367

// ids on the debug menu
#define cmdidStepInto           248
#define cmdidStepOver           249
#define cmdidStepOut            250
#define cmdidRunToCursor        251
#define cmdidAddWatch           252
#define cmdidEditWatch          253
#define cmdidQuickWatch                 254

#define cmdidToggleBreakpoint       255
#define cmdidClearBreakpoints       256
#define cmdidShowBreakpoints        257
#define cmdidSetNextStatement       258
#define cmdidShowNextStatement      259
#define cmdidEditBreakpoint             260
#define cmdidDetachDebugger             262

// ids on the tools menu
#define cmdidCustomizeKeyboard      263
#define cmdidToolsOptions       264

// ids on the windows menu
#define cmdidNewWindow          265
#define cmdidSplit          266
#define cmdidCascade            267
#define cmdidTileHorz           268
#define cmdidTileVert           269

// ids on the help menu
#define cmdidTechSupport        270
// #define cmdidDebugContextWindow 327 // defined below

// NOTE cmdidAbout and cmdidDebugOptions must be consecutive
//      cmd after cmdidDebugOptions (ie 273) must not be used
#define cmdidAbout          271
#define cmdidDebugOptions       272

// ids on the watch context menu
// CollapseWatch appears as 'Collapse Parent', on any
// non-top-level item
#define cmdidDeleteWatch        274
#define cmdidCollapseWatch      275
// ids 276, 277, 278, 279, 280 are in use
// below
// ids on the property browser context menu
#define cmdidPbrsToggleStatus       282
#define cmdidPropbrsHide        283

// ids on the docking context menu
#define cmdidDockingView        284
#define cmdidHideActivePane     285
// ids for window selection via keyboard
//#define cmdidPaneNextPane     316 (listed below in order)
//#define cmdidPanePrevPane     317 (listed below in order)
#define cmdidPaneNextTab        286
#define cmdidPanePrevTab        287
#define cmdidPaneCloseToolWindow    288
#define cmdidPaneActivateDocWindow  289
#define cmdidDockingViewDocument    290
#define cmdidDockingViewFloater     291
#define cmdidAutoHideWindow     292
#define cmdidMoveToDropdownBar          293
#define cmdidFindCmd                    294 // internal Find commands
#define cmdidStart          295
#define cmdidRestart            296

#define cmdidAddinManager       297

#define cmdidMultiLevelUndoList     298
#define cmdidMultiLevelRedoList     299

#define cmdidToolboxAddTab      300
#define cmdidToolboxDeleteTab       301
#define cmdidToolboxRenameTab       302
#define cmdidToolboxTabMoveUp       303
#define cmdidToolboxTabMoveDown     304
#define cmdidToolboxRenameItem      305
#define cmdidToolboxListView        306
//(below) cmdidSearchSetCombo       307

#define cmdidWindowUIGetList        308
#define cmdidInsertValuesQuery      309

#define cmdidShowProperties     310

#define cmdidThreadSuspend      311
#define cmdidThreadResume       312
#define cmdidThreadSetFocus     313
#define cmdidDisplayRadix       314

#define cmdidOpenProjectItem        315

#define cmdidPaneNextPane       316
#define cmdidPanePrevPane       317

#define cmdidClearPane          318
#define cmdidGotoErrorTag       319

#define cmdidErrorListWindow    320

#define cmdidCancelEZDrag               326

#define cmdidDebugContextWindow 327

#define cmdidHelpSamples        328

#define cmdidToolboxAddItem     329
#define cmdidToolboxReset       330

#define cmdidSaveProjectItem        331
#define cmdidSaveOptions                959
#define cmdidViewForm           332
#define cmdidViewCode           333
#define cmdidPreviewInBrowser       334
#define cmdidBrowseWith         336
#define cmdidSearchSetCombo     307
#define cmdidSearchCombo        337
#define cmdidEditLabel          338
#define cmdidExceptions         339
// UNUSED 340

#define cmdidToggleSelMode      341
#define cmdidToggleInsMode      342

#define cmdidLoadUnloadedProject    343
#define cmdidUnloadLoadedProject    344

// ids on the treegrids (watch/local/threads/stack)
#define cmdidElasticColumn  345
#define cmdidHideColumn         346

#define cmdidToggleDesigner 347

#define cmdidZoomDialog         348

// find/replace options
#define cmdidFindInSelection            354
#define cmdidFindStop                   355
#define cmdidFindInFiles                277
#define cmdidReplaceInFiles             278
#define cmdidNextLocation               279 // next item in task list, results lists, etc.
#define cmdidPreviousLocation           280 // prev item "
#define cmdidGotoQuick                  281
#define cmdidGotoFIF                    282
#define cmdidGotoSymbol                 283
#define cmdidGotoQuickReplace           285
#define cmdidGotoReplaceInFiles         286

// UNUSED: 356 - 366

// 367 is used above in cmdidProjectReferences
#define cmdidStartNoDebug       368
// 369 is used above in cmdidLockControls

#define cmdidFindNext                   370
#define cmdidFindPrev                   371
#define cmdidFindSelectedNext           372
#define cmdidFindSelectedPrev           373
#define cmdidSearchGetList              374
#define cmdidInsertBreakpoint       375
#define cmdidEnableBreakpoint       376
#define cmdidF1Help         377

// UNUSED: 378 - 383

#define cmdidMoveToNextEZCntr           384
// 385 is used above in cmdidNewProjectFromExisting
#define cmdidUpdateMarkerSpans          386

//UNUSED 387-392


#define cmdidMoveToPreviousEZCntr       393

//UNUSED 394-395

#define cmdidProjectProperties          396
#define cmdidPropSheetOrProperties  397

// NOTE - the next items are debug only !!
#define cmdidTshellStep                 398
#define cmdidTshellRun                  399

// marker commands on the codewin menu
#define cmdidMarkerCmd0                 400
#define cmdidMarkerCmd1                 401
#define cmdidMarkerCmd2                 402
#define cmdidMarkerCmd3                 403
#define cmdidMarkerCmd4                 404
#define cmdidMarkerCmd5                 405
#define cmdidMarkerCmd6                 406
#define cmdidMarkerCmd7                 407
#define cmdidMarkerCmd8                 408
#define cmdidMarkerCmd9                 409
#define cmdidMarkerLast                 409
#define cmdidMarkerEnd                  410 // list terminator reserved

// user-invoked project reload and unload
#define cmdidReloadProject              412
#define cmdidUnloadProject              413

#define cmdidNewBlankSolution           414
#define cmdidSelectProjectTemplate      415

// document outline commands
#define cmdidDetachAttachOutline        420
#define cmdidShowHideOutline            421
#define cmdidSyncOutline                422

#define cmdidRunToCallstCursor          423
#define cmdidNoCmdsAvailable        424

#define cmdidContextWindow              427
#define cmdidAlias          428
#define cmdidGotoCommandLine        429
#define cmdidEvaluateExpression     430
#define cmdidImmediateMode      431
#define cmdidEvaluateStatement      432

#define cmdidFindResultWindow1  433
#define cmdidFindResultWindow2  434

#define cmdidRenameBookmark 559
#define cmdidToggleBookmark 560
#define cmdidDeleteBookmark 561
#define cmdidBookmarkWindowGoToBookmark 562
//563 unused
#define cmdidEnableBookmark 564
#define cmdidNewBookmarkFolder 565
//566 unused
//567 unused
#define cmdidNextBookmarkFolder 568
#define cmdidPrevBookmarkFolder 569

// 500 is used above in cmdidFontNameGetList
// 501 is used above in cmdidFontSizeGetList

// ids on the window menu - these must be sequential ie window1-morewind
#define cmdidWindow1            570
#define cmdidWindow2            571
#define cmdidWindow3            572
#define cmdidWindow4            573
#define cmdidWindow5            574
#define cmdidWindow6            575
#define cmdidWindow7            576
#define cmdidWindow8            577
#define cmdidWindow9            578
#define cmdidWindow10           579
#define cmdidWindow11           580
#define cmdidWindow12           581
#define cmdidWindow13           582
#define cmdidWindow14           583
#define cmdidWindow15           584
#define cmdidWindow16           585
#define cmdidWindow17           586
#define cmdidWindow18           587
#define cmdidWindow19           588
#define cmdidWindow20           589
#define cmdidWindow21           590
#define cmdidWindow22           591
#define cmdidWindow23           592
#define cmdidWindow24           593
#define cmdidWindow25           594   // note cmdidWindow25 is unused on purpose!
#define cmdidMoreWindows        595

#define cmdidAutoHideAllWindows     597

// UNUSED: 598

#define cmdidClassView          599

#define cmdidMRUProj1           600
#define cmdidMRUProj2           601
#define cmdidMRUProj3           602
#define cmdidMRUProj4           603
#define cmdidMRUProj5           604
#define cmdidMRUProj6           605
#define cmdidMRUProj7           606
#define cmdidMRUProj8           607
#define cmdidMRUProj9           608
#define cmdidMRUProj10          609
#define cmdidMRUProj11          610
#define cmdidMRUProj12          611
#define cmdidMRUProj13          612
#define cmdidMRUProj14          613
#define cmdidMRUProj15          614
#define cmdidMRUProj16          615
#define cmdidMRUProj17          616
#define cmdidMRUProj18          617
#define cmdidMRUProj19          618
#define cmdidMRUProj20          619
#define cmdidMRUProj21          620
#define cmdidMRUProj22          621
#define cmdidMRUProj23          622
#define cmdidMRUProj24          623
#define cmdidMRUProj25          624  // note cmdidMRUProj25 is unused on purpose!

#define cmdidSplitNext          625
#define cmdidSplitPrev          626

#define cmdidCloseAllDocuments      627
#define cmdidNextDocument       628
#define cmdidPrevDocument       629

#define cmdidTool1          630  // note cmdidTool1 - cmdidTool24 must be
#define cmdidTool2          631  // consecutive
#define cmdidTool3          632
#define cmdidTool4          633
#define cmdidTool5          634
#define cmdidTool6          635
#define cmdidTool7          636
#define cmdidTool8          637
#define cmdidTool9          638
#define cmdidTool10         639
#define cmdidTool11         640
#define cmdidTool12         641
#define cmdidTool13         642
#define cmdidTool14         643
#define cmdidTool15         644
#define cmdidTool16         645
#define cmdidTool17         646
#define cmdidTool18         647
#define cmdidTool19         648
#define cmdidTool20         649
#define cmdidTool21         650
#define cmdidTool22         651
#define cmdidTool23         652
#define cmdidTool24         653
#define cmdidExternalCommands       654

#define cmdidPasteNextTBXCBItem     655
#define cmdidToolboxShowAllTabs     656
#define cmdidProjectDependencies    657
#define cmdidCloseDocument      658
#define cmdidToolboxSortItems       659

#define cmdidViewBarView1       660   //UNUSED
#define cmdidViewBarView2       661   //UNUSED
#define cmdidViewBarView3       662   //UNUSED
#define cmdidViewBarView4       663   //UNUSED
#define cmdidViewBarView5       664   //UNUSED
#define cmdidViewBarView6       665   //UNUSED
#define cmdidViewBarView7       666   //UNUSED
#define cmdidViewBarView8       667   //UNUSED
#define cmdidViewBarView9       668   //UNUSED
#define cmdidViewBarView10      669   //UNUSED
#define cmdidViewBarView11      670   //UNUSED
#define cmdidViewBarView12      671   //UNUSED
#define cmdidViewBarView13      672   //UNUSED
#define cmdidViewBarView14      673   //UNUSED
#define cmdidViewBarView15      674   //UNUSED
#define cmdidViewBarView16      675   //UNUSED
#define cmdidViewBarView17      676   //UNUSED
#define cmdidViewBarView18      677   //UNUSED
#define cmdidViewBarView19      678   //UNUSED
#define cmdidViewBarView20      679   //UNUSED
#define cmdidViewBarView21      680   //UNUSED
#define cmdidViewBarView22      681   //UNUSED
#define cmdidViewBarView23      682   //UNUSED
#define cmdidViewBarView24      683   //UNUSED

#define cmdidSolutionCfg        684
#define cmdidSolutionCfgGetList     685

//
// Schema table commands:
// All invoke table property dialog and select appropriate page.
//
#define cmdidManageIndexes          675
#define cmdidManageRelationships    676
#define cmdidManageConstraints      677

// UNUSED: 678 - 727

#define cmdidWhiteSpace                 728

#define cmdidCommandWindow      729
#define cmdidCommandWindowMarkMode  730
#define cmdidLogCommandWindow       731

#define cmdidShell          732

#define cmdidSingleChar           733
#define cmdidZeroOrMore           734
#define cmdidOneOrMore            735
#define cmdidBeginLine            736
#define cmdidEndLine              737
#define cmdidBeginWord            738
#define cmdidEndWord              739
#define cmdidCharInSet            740
#define cmdidCharNotInSet         741
#define cmdidOr                   742
#define cmdidEscape               743
#define cmdidTagExp               744

// Regex builder context help menu commands
#define cmdidPatternMatchHelp       745
#define cmdidRegExList              746

#define cmdidDebugReserved1         747
#define cmdidDebugReserved2         748
#define cmdidDebugReserved3         749
//USED ABOVE                        750
//USED ABOVE                        751
//USED ABOVE                        752
//USED ABOVE                        753

#define cmdidAutosWindow        cmdidDebugReserved1
#define cmdidThisWindow         cmdidDebugReserved2

//Regex builder wildcard menu commands
#define cmdidWildZeroOrMore         754
#define cmdidWildSingleChar         755
#define cmdidWildSingleDigit        756
#define cmdidWildCharInSet          757
#define cmdidWildCharNotInSet       758
#define cmdidWildEscape             774

#define cmdidFindWhatText           759
#define cmdidTaggedExp1             760
#define cmdidTaggedExp2             761
#define cmdidTaggedExp3             762
#define cmdidTaggedExp4             763
#define cmdidTaggedExp5             764
#define cmdidTaggedExp6             765
#define cmdidTaggedExp7             766
#define cmdidTaggedExp8             767
#define cmdidTaggedExp9             768

#define cmdidEditorWidgetClick      769 // param 0 is the moniker as VT_BSTR, param 1 is the buffer line as VT_I4, and param 2 is the buffer index as VT_I4
#define cmdidCmdWinUpdateAC         770

#define cmdidSlnCfgMgr                  771

#define cmdidAddNewProject      772
#define cmdidAddExistingProject     773
// Used above in cmdidWildEscape    774
#define cmdidAutoHideContext1       776
#define cmdidAutoHideContext2       777
#define cmdidAutoHideContext3       778
#define cmdidAutoHideContext4       779
#define cmdidAutoHideContext5       780
#define cmdidAutoHideContext6       781
#define cmdidAutoHideContext7       782
#define cmdidAutoHideContext8       783
#define cmdidAutoHideContext9       784
#define cmdidAutoHideContext10      785
#define cmdidAutoHideContext11      786
#define cmdidAutoHideContext12      787
#define cmdidAutoHideContext13      788
#define cmdidAutoHideContext14      789
#define cmdidAutoHideContext15      790
#define cmdidAutoHideContext16      791
#define cmdidAutoHideContext17      792
#define cmdidAutoHideContext18      793
#define cmdidAutoHideContext19      794
#define cmdidAutoHideContext20      795
#define cmdidAutoHideContext21      796
#define cmdidAutoHideContext22      797
#define cmdidAutoHideContext23      798
#define cmdidAutoHideContext24      799
#define cmdidAutoHideContext25      800
#define cmdidAutoHideContext26      801
#define cmdidAutoHideContext27      802
#define cmdidAutoHideContext28      803
#define cmdidAutoHideContext29      804
#define cmdidAutoHideContext30      805
#define cmdidAutoHideContext31      806
#define cmdidAutoHideContext32      807
#define cmdidAutoHideContext33      808  // must remain unused

#define cmdidShellNavBackward           809
#define cmdidShellNavForward            810


#define cmdidShellWindowNavigate1   844
#define cmdidShellWindowNavigate2   845
#define cmdidShellWindowNavigate3   846
#define cmdidShellWindowNavigate4   847
#define cmdidShellWindowNavigate5   848
#define cmdidShellWindowNavigate6   849
#define cmdidShellWindowNavigate7   850
#define cmdidShellWindowNavigate8   851
#define cmdidShellWindowNavigate9   852
#define cmdidShellWindowNavigate10  853
#define cmdidShellWindowNavigate11  854
#define cmdidShellWindowNavigate12  855
#define cmdidShellWindowNavigate13  856
#define cmdidShellWindowNavigate14  857
#define cmdidShellWindowNavigate15  858
#define cmdidShellWindowNavigate16  859
#define cmdidShellWindowNavigate17  860
#define cmdidShellWindowNavigate18  861
#define cmdidShellWindowNavigate19  862
#define cmdidShellWindowNavigate20  863
#define cmdidShellWindowNavigate21  864
#define cmdidShellWindowNavigate22  865
#define cmdidShellWindowNavigate23  866
#define cmdidShellWindowNavigate24  867
#define cmdidShellWindowNavigate25  868
#define cmdidShellWindowNavigate26  869
#define cmdidShellWindowNavigate27  870
#define cmdidShellWindowNavigate28  871
#define cmdidShellWindowNavigate29  872
#define cmdidShellWindowNavigate30  873
#define cmdidShellWindowNavigate31  874
#define cmdidShellWindowNavigate32  875
#define cmdidShellWindowNavigate33  876  // must remain unused

// ObjectSearch cmds
#define cmdidOBSDoFind                  877
#define cmdidOBSMatchCase               878
#define cmdidOBSMatchSubString          879
#define cmdidOBSMatchWholeWord          880
#define cmdidOBSMatchPrefix             881

// build cmds
#define cmdidBuildSln                   882
#define cmdidRebuildSln                 883
#define cmdidDeploySln                  884
#define cmdidCleanSln                   885

#define cmdidBuildSel                   886
#define cmdidRebuildSel                 887
#define cmdidDeploySel                  888
#define cmdidCleanSel                   889


#define cmdidCancelBuild                890
#define cmdidBatchBuildDlg              891

#define cmdidBuildCtx                   892
#define cmdidRebuildCtx                 893
#define cmdidDeployCtx                  894
#define cmdidCleanCtx                   895

#define cmdidQryManageIndexes       896
#define cmdidPrintDefault               897     // quick print
//            Unused                898
#define cmdidShowStartPage          899

#define cmdidMRUFile1           900
#define cmdidMRUFile2           901
#define cmdidMRUFile3           902
#define cmdidMRUFile4           903
#define cmdidMRUFile5           904
#define cmdidMRUFile6           905
#define cmdidMRUFile7           906
#define cmdidMRUFile8           907
#define cmdidMRUFile9           908
#define cmdidMRUFile10          909
#define cmdidMRUFile11          910
#define cmdidMRUFile12          911
#define cmdidMRUFile13          912
#define cmdidMRUFile14          913
#define cmdidMRUFile15          914
#define cmdidMRUFile16          915
#define cmdidMRUFile17          916
#define cmdidMRUFile18          917
#define cmdidMRUFile19          918
#define cmdidMRUFile20          919
#define cmdidMRUFile21          920
#define cmdidMRUFile22          921
#define cmdidMRUFile23          922
#define cmdidMRUFile24          923
#define cmdidMRUFile25          924  // note cmdidMRUFile25 is unused on purpose!

//External Tools Context Menu Commands
// continued at 1109
#define cmdidExtToolsCurPath            925
#define cmdidExtToolsCurDir             926
#define cmdidExtToolsCurFileName        927
#define cmdidExtToolsCurExtension       928
#define cmdidExtToolsProjDir            929
#define cmdidExtToolsProjFileName       930
#define cmdidExtToolsSlnDir             931
#define cmdidExtToolsSlnFileName        932

// Object Browsing & ClassView cmds
// Shared shell cmds (for accessing Object Browsing functionality)
#define cmdidGotoDefn           935
#define cmdidGotoDecl           936
#define cmdidBrowseDefn         937
#define cmdidSyncClassView              938
#define cmdidShowMembers        939
#define cmdidShowBases          940
#define cmdidShowDerived        941
#define cmdidShowDefns          942
#define cmdidShowRefs           943
#define cmdidShowCallers        944
#define cmdidShowCallees        945

#define cmdidAddClass                   946
#define cmdidAddNestedClass             947
#define cmdidAddInterface               948
#define cmdidAddMethod                  949
#define cmdidAddProperty                950
#define cmdidAddEvent                   951
#define cmdidAddVariable                952
#define cmdidImplementInterface         953
#define cmdidOverride                   954
#define cmdidAddFunction                955
#define cmdidAddConnectionPoint         956
#define cmdidAddIndexer                 957

#define cmdidBuildOrder                 958
//959 used above for cmdidSaveOptions

// Object Browser Tool Specific cmds
#define cmdidOBEnableGrouping           961
#define cmdidOBSetGroupingCriteria      962
#define cmdidOBShowPackages             965
#define cmdidOBSearchOptWholeWord       967
#define cmdidOBSearchOptSubstring       968
#define cmdidOBSearchOptPrefix          969
#define cmdidOBSearchOptCaseSensitive   970

// ClassView Tool Specific cmds

#define cmdidCVGroupingNone             971
#define cmdidCVGroupingSortOnly         972
#define cmdidCVGroupingGrouped          973
#define cmdidCVShowPackages             974
#define cmdidCVNewFolder                975
#define cmdidCVGroupingSortAccess       976

#define cmdidObjectSearch               977
#define cmdidObjectSearchResults        978

// Further Obj Browsing cmds at 1095

// build cascade menus
#define cmdidBuild1                     979
#define cmdidBuild2                     980
#define cmdidBuild3                     981
#define cmdidBuild4                     982
#define cmdidBuild5                     983
#define cmdidBuild6                     984
#define cmdidBuild7                     985
#define cmdidBuild8                     986
#define cmdidBuild9                     987
#define cmdidBuildLast                  988

#define cmdidRebuild1                   989
#define cmdidRebuild2                   990
#define cmdidRebuild3                   991
#define cmdidRebuild4                   992
#define cmdidRebuild5                   993
#define cmdidRebuild6                   994
#define cmdidRebuild7                   995
#define cmdidRebuild8                   996
#define cmdidRebuild9                   997
#define cmdidRebuildLast                998

#define cmdidClean1                     999
#define cmdidClean2                     1000
#define cmdidClean3                     1001
#define cmdidClean4                     1002
#define cmdidClean5                     1003
#define cmdidClean6                     1004
#define cmdidClean7                     1005
#define cmdidClean8                     1006
#define cmdidClean9                     1007
#define cmdidCleanLast                  1008

#define cmdidDeploy1                    1009
#define cmdidDeploy2                    1010
#define cmdidDeploy3                    1011
#define cmdidDeploy4                    1012
#define cmdidDeploy5                    1013
#define cmdidDeploy6                    1014
#define cmdidDeploy7                    1015
#define cmdidDeploy8                    1016
#define cmdidDeploy9                    1017
#define cmdidDeployLast                 1018

#define cmdidBuildProjPicker            1019
#define cmdidRebuildProjPicker          1020
#define cmdidCleanProjPicker            1021
#define cmdidDeployProjPicker           1022
#define cmdidResourceView               1023
#define cmdidEditMenuIDs                1025

#define cmdidLineBreak                  1026
#define cmdidCPPIdentifier              1027
#define cmdidQuotedString               1028
#define cmdidSpaceOrTab                 1029
#define cmdidInteger                    1030

//unused 1031-1035

#define cmdidCustomizeToolbars          1036
#define cmdidMoveToTop                  1037
#define cmdidWindowHelp                 1038

#define cmdidViewPopup                  1039
#define cmdidCheckMnemonics             1040

#define cmdidPRSortAlphabeticaly        1041
#define cmdidPRSortByCategory           1042

#define cmdidViewNextTab                1043

#define cmdidCheckForUpdates            1044

#define cmdidBrowser1           1045
#define cmdidBrowser2           1046
#define cmdidBrowser3           1047
#define cmdidBrowser4           1048
#define cmdidBrowser5           1049
#define cmdidBrowser6           1050
#define cmdidBrowser7           1051
#define cmdidBrowser8           1052
#define cmdidBrowser9           1053
#define cmdidBrowser10          1054
#define cmdidBrowser11          1055 //note unused on purpose to end list

#define cmdidOpenDropDownOpen           1058
#define cmdidOpenDropDownOpenWith       1059

#define cmdidToolsDebugProcesses        1060

#define cmdidPaneNextSubPane            1062
#define cmdidPanePrevSubPane            1063

#define cmdidMoveFileToProject1         1070
#define cmdidMoveFileToProject2         1071
#define cmdidMoveFileToProject3         1072
#define cmdidMoveFileToProject4         1073
#define cmdidMoveFileToProject5         1074
#define cmdidMoveFileToProject6         1075
#define cmdidMoveFileToProject7         1076
#define cmdidMoveFileToProject8         1077
#define cmdidMoveFileToProject9         1078
#define cmdidMoveFileToProjectLast      1079 // unused in order to end list
#define cmdidMoveFileToProjectPick      1081


#define cmdidDefineSubset               1095
#define cmdidSubsetCombo                1096
#define cmdidSubsetGetList              1097
#define cmdidOBGroupObjectsAccess       1102

#define cmdidPopBrowseContext           1106
#define cmdidGotoRef            1107
#define cmdidOBSLookInReferences        1108

#define cmdidExtToolsTargetPath         1109
#define cmdidExtToolsTargetDir          1110
#define cmdidExtToolsTargetFileName     1111
#define cmdidExtToolsTargetExtension    1112
#define cmdidExtToolsCurLine            1113
#define cmdidExtToolsCurCol             1114
#define cmdidExtToolsCurText            1115

#define cmdidBrowseNext                 1116
#define cmdidBrowsePrev                 1117
#define cmdidBrowseUnload       1118
#define cmdidQuickObjectSearch          1119
#define cmdidExpandAll                  1120

#define cmdidExtToolsBinDir             1121

#define cmdidBookmarkWindow             1122
#define cmdidCodeExpansionWindow        1123

#define cmdidNextDocumentNav            1124    // added to Set97 because they are extentions on cmdidNextDocument
#define cmdidPrevDocumentNav            1125
#define cmdidForwardBrowseContext       1126

#define cmdidCloneWindow                1127


#define cmdidStandardMax                1500

///////////////////////////////////////////
//
// cmdidStandardMax is now thought to be
// obsolete. Any new shell commands should
// be added to the end of StandardCommandSet2K
// which appears below.
//
// If you are not adding shell commands,
// you shouldn't be doing it in this file!
//
///////////////////////////////////////////


#define cmdidFormsFirst           0x00006000

#define cmdidFormsLast           0x00006FFF

#define cmdidVBEFirst           0x00008000


#define cmdidZoom200            0x00008002
#define cmdidZoom150            0x00008003
#define cmdidZoom100            0x00008004
#define cmdidZoom75         0x00008005
#define cmdidZoom50         0x00008006
#define cmdidZoom25         0x00008007
#define cmdidZoom10         0x00008010


#define cmdidVBELast           0x00009FFF

#define cmdidSterlingFirst           0x0000A000
#define cmdidSterlingLast           0x0000BFFF

#define uieventidFirst                   0xC000
#define uieventidSelectRegion      0xC001
#define uieventidDrop                  0xC002
#define uieventidLast                   0xDFFF




//////////////////////////////////////////////////////////////////
//
// The following commands form CMDSETID_StandardCommandSet2k.
// Note that commands up to ECMD_FINAL are standard editor
// commands and have been moved from editcmd.h.
// NOTE that all these commands are shareable and may be used
// in any appropriate menu.
//
//////////////////////////////////////////////////////////////////
//
// Shareable standard editor commands
//
#define ECMD_TYPECHAR                1
#define ECMD_BACKSPACE               2
#define ECMD_RETURN                  3
#define ECMD_TAB                     4
#define ECMD_BACKTAB                 5
#define ECMD_DELETE                  6
#define ECMD_LEFT                    7
#define ECMD_LEFT_EXT                8
#define ECMD_RIGHT                   9
#define ECMD_RIGHT_EXT              10
#define ECMD_UP                     11
#define ECMD_UP_EXT                 12
#define ECMD_DOWN                   13
#define ECMD_DOWN_EXT               14
#define ECMD_HOME                   15
#define ECMD_HOME_EXT               16
#define ECMD_END                    17
#define ECMD_END_EXT                18
#define ECMD_BOL                    19
#define ECMD_BOL_EXT                20
#define ECMD_FIRSTCHAR              21
#define ECMD_FIRSTCHAR_EXT          22
#define ECMD_EOL                    23
#define ECMD_EOL_EXT                24
#define ECMD_LASTCHAR               25
#define ECMD_LASTCHAR_EXT           26
#define ECMD_PAGEUP                 27
#define ECMD_PAGEUP_EXT             28
#define ECMD_PAGEDN                 29
#define ECMD_PAGEDN_EXT             30
#define ECMD_TOPLINE                31
#define ECMD_TOPLINE_EXT            32
#define ECMD_BOTTOMLINE             33
#define ECMD_BOTTOMLINE_EXT         34
#define ECMD_SCROLLUP               35
#define ECMD_SCROLLDN               36
#define ECMD_SCROLLPAGEUP           37
#define ECMD_SCROLLPAGEDN           38
#define ECMD_SCROLLLEFT             39
#define ECMD_SCROLLRIGHT            40
#define ECMD_SCROLLBOTTOM           41
#define ECMD_SCROLLCENTER           42
#define ECMD_SCROLLTOP              43
#define ECMD_SELECTALL              44
#define ECMD_SELTABIFY              45
#define ECMD_SELUNTABIFY            46
#define ECMD_SELLOWCASE             47
#define ECMD_SELUPCASE              48
#define ECMD_SELTOGGLECASE          49
#define ECMD_SELTITLECASE           50
#define ECMD_SELSWAPANCHOR          51
#define ECMD_GOTOLINE               52
#define ECMD_GOTOBRACE              53
#define ECMD_GOTOBRACE_EXT          54
#define ECMD_GOBACK                 55
#define ECMD_SELECTMODE             56
#define ECMD_TOGGLE_OVERTYPE_MODE   57
#define ECMD_CUT                    58
#define ECMD_COPY                   59
#define ECMD_PASTE                  60
#define ECMD_CUTLINE                61
#define ECMD_DELETELINE             62
#define ECMD_DELETEBLANKLINES       63
#define ECMD_DELETEWHITESPACE       64
#define ECMD_DELETETOEOL            65
#define ECMD_DELETETOBOL            66
#define ECMD_OPENLINEABOVE          67
#define ECMD_OPENLINEBELOW          68
#define ECMD_INDENT                 69
#define ECMD_UNINDENT               70
#define ECMD_UNDO                   71
#define ECMD_UNDONOMOVE             72
#define ECMD_REDO                   73
#define ECMD_REDONOMOVE             74
#define ECMD_DELETEALLTEMPBOOKMARKS 75
#define ECMD_TOGGLETEMPBOOKMARK     76
#define ECMD_GOTONEXTBOOKMARK       77
#define ECMD_GOTOPREVBOOKMARK       78
#define ECMD_FIND                   79
#define ECMD_REPLACE                80
#define ECMD_REPLACE_ALL            81
#define ECMD_FINDNEXT               82
#define ECMD_FINDNEXTWORD           83
#define ECMD_FINDPREV               84
#define ECMD_FINDPREVWORD           85
#define ECMD_FINDAGAIN              86
#define ECMD_TRANSPOSECHAR          87
#define ECMD_TRANSPOSEWORD          88
#define ECMD_TRANSPOSELINE          89
#define ECMD_SELECTCURRENTWORD      90
#define ECMD_DELETEWORDRIGHT        91
#define ECMD_DELETEWORDLEFT         92
#define ECMD_WORDPREV               93
#define ECMD_WORDPREV_EXT           94
#define ECMD_WORDNEXT               96
#define ECMD_WORDNEXT_EXT           97
#define ECMD_COMMENTBLOCK           98
#define ECMD_UNCOMMENTBLOCK         99
#define ECMD_SETREPEATCOUNT         100
#define ECMD_WIDGETMARGIN_LBTNDOWN  101
#define ECMD_SHOWCONTEXTMENU        102
#define ECMD_CANCEL                 103
#define ECMD_PARAMINFO              104
#define ECMD_TOGGLEVISSPACE         105
#define ECMD_TOGGLECARETPASTEPOS    106
#define ECMD_COMPLETEWORD           107
#define ECMD_SHOWMEMBERLIST         108
#define ECMD_FIRSTNONWHITEPREV      109
#define ECMD_FIRSTNONWHITENEXT      110
#define ECMD_HELPKEYWORD            111
#define ECMD_FORMATSELECTION        112
#define ECMD_OPENURL            113
#define ECMD_INSERTFILE         114
#define ECMD_TOGGLESHORTCUT     115
#define ECMD_QUICKINFO              116
#define ECMD_LEFT_EXT_COL           117
#define ECMD_RIGHT_EXT_COL          118
#define ECMD_UP_EXT_COL             119
#define ECMD_DOWN_EXT_COL           120
#define ECMD_TOGGLEWORDWRAP         121
#define ECMD_ISEARCH                122
#define ECMD_ISEARCHBACK            123
#define ECMD_BOL_EXT_COL            124
#define ECMD_EOL_EXT_COL            125
#define ECMD_WORDPREV_EXT_COL       126
#define ECMD_WORDNEXT_EXT_COL       127
#define ECMD_OUTLN_HIDE_SELECTION   128
#define ECMD_OUTLN_TOGGLE_CURRENT   129
#define ECMD_OUTLN_TOGGLE_ALL       130
#define ECMD_OUTLN_STOP_HIDING_ALL  131
#define ECMD_OUTLN_STOP_HIDING_CURRENT 132
#define ECMD_OUTLN_COLLAPSE_TO_DEF  133
#define ECMD_DOUBLECLICK            134
#define ECMD_EXTERNALLY_HANDLED_WIDGET_CLICK 135
#define ECMD_COMMENT_BLOCK          136
#define ECMD_UNCOMMENT_BLOCK        137
#define ECMD_OPENFILE               138
#define ECMD_NAVIGATETOURL          139

// For editor internal use only
#define ECMD_HANDLEIMEMESSAGE       140

#define ECMD_SELTOGOBACK            141
#define ECMD_COMPLETION_HIDE_ADVANCED 142

#define ECMD_FORMATDOCUMENT         143
#define ECMD_OUTLN_START_AUTOHIDING 144
#define ECMD_INCREASEFILTER         145
#define ECMD_DECREASEFILTER         146
#define ECMD_SMARTTASKS             147
#define ECMD_COPYTIP                148
#define ECMD_PASTETIP               149
#define ECMD_LEFTCLICK              150
#define ECMD_GOTONEXTBOOKMARKINDOC  151
#define ECMD_GOTOPREVBOOKMARKINDOC  152
#define ECMD_INVOKESNIPPETFROMSHORTCUT 154

// For managed language services internal use only (clovett)
#define ECMD_AUTOCOMPLETE			155
#define ECMD_INVOKESNIPPETPICKER2    156

#define ECMD_DELETEALLBOOKMARKSINDOC    157

#define ECMD_CONVERTTABSTOSPACES        158
#define ECMD_CONVERTSPACESTOTABS        159

// Last Standard Editor Command (+1)
#define ECMD_FINAL                  160

///////////////////////////////////////////////////////////////
// Some new commands created during CTC file rationalisation
///////////////////////////////////////////////////////////////
#define ECMD_STOP                   220
#define ECMD_REVERSECANCEL          221
#define ECMD_SLNREFRESH             222
#define ECMD_SAVECOPYOFITEMAS       223
//
// Shareable commands originating in the HTML editor
// Shared table commands are obsolete! If you still rely on them, please contact jbresler or mikhaila on
// the HTML editor team
//
#define ECMD_NEWELEMENT             224
#define ECMD_NEWATTRIBUTE           225
#define ECMD_NEWCOMPLEXTYPE         226
#define ECMD_NEWSIMPLETYPE          227
#define ECMD_NEWGROUP               228
#define ECMD_NEWATTRIBUTEGROUP      229
#define ECMD_NEWKEY                 230
#define ECMD_NEWRELATION            231
#define ECMD_EDITKEY                232
#define ECMD_EDITRELATION           233
#define ECMD_MAKETYPEGLOBAL         234
#define ECMD_PREVIEWDATASET         235
#define ECMD_GENERATEDATASET        236
#define ECMD_CREATESCHEMA           237
#define ECMD_LAYOUTINDENT           238
#define ECMD_LAYOUTUNINDENT         239
#define ECMD_REMOVEHANDLER          240
#define ECMD_EDITHANDLER            241
#define ECMD_ADDHANDLER             242
#define ECMD_FONTSTYLE              245
#define ECMD_FONTSTYLEGETLIST       246
#define ECMD_PASTEASHTML            247
#define ECMD_VIEWBORDERS            248
#define ECMD_VIEWDETAILS            249
#define ECMD_INSERTTABLE            253
#define ECMD_INSERTCOLLEFT          254
#define ECMD_INSERTCOLRIGHT         255
#define ECMD_INSERTROWABOVE         256
#define ECMD_INSERTROWBELOW         257
#define ECMD_DELETETABLE            258
#define ECMD_DELETECOLS             259
#define ECMD_DELETEROWS             260
#define ECMD_SELECTTABLE            261
#define ECMD_SELECTTABLECOL         262
#define ECMD_SELECTTABLEROW         263
#define ECMD_SELECTTABLECELL        264
#define ECMD_MERGECELLS             265
#define ECMD_SPLITCELL              266
#define ECMD_INSERTCELLLEFT         267
#define ECMD_DELETECELLS            268
#define ECMD_SHOWGRID               277
#define ECMD_SNAPTOGRID             278
#define ECMD_BOOKMARK               279
#define ECMD_HYPERLINK              280
// unused                           284
#define ECMD_BULLETEDLIST           287
#define ECMD_NUMBEREDLIST           288
#define ECMD_EDITSCRIPT             289
#define ECMD_EDITCODEBEHIND         290
#define ECMD_DOCOUTLINEHTML         291

#define ECMD_RUNATSERVER            293
#define ECMD_WEBFORMSVERBS          294
#define ECMD_WEBFORMSTEMPLATES      295
#define ECMD_ENDTEMPLATE            296
#define ECMD_EDITDEFAULTEVENT       297
#define ECMD_SUPERSCRIPT            298
#define ECMD_SUBSCRIPT              299
#define ECMD_EDITSTYLE              300
#define ECMD_ADDIMAGEHEIGHTWIDTH    301
#define ECMD_REMOVEIMAGEHEIGHTWIDTH 302
#define ECMD_LOCKELEMENT            303
#define ECMD_AUTOCLOSEOVERRIDE      305
#define ECMD_NEWANY                 306
#define ECMD_NEWANYATTRIBUTE        307
#define ECMD_DELETEKEY              308
#define ECMD_AUTOARRANGE            309
#define ECMD_VALIDATESCHEMA         310
#define ECMD_NEWFACET               311
#define ECMD_VALIDATEXMLDATA        312
#define ECMD_DOCOUTLINETOGGLE       313
#define ECMD_VALIDATEHTMLDATA       314
#define ECMD_VIEWXMLSCHEMAOVERVIEW  315
#define ECMD_SHOWDEFAULTVIEW        316
#define ECMD_EXPAND_CHILDREN        317
#define ECMD_COLLAPSE_CHILDREN      318
#define ECMD_TOPDOWNLAYOUT          319
#define ECMD_LEFTRIGHTLAYOUT        320
#define ECMD_INSERTCELLRIGHT        321
#define ECMD_EDITMASTER             322
#define ECMD_INSERTSNIPPET          323
#define ECMD_FORMATANDVALIDATION    324
#define ECMD_COLLAPSETAG            325
#define ECMD_SELECT_TAG				329
#define ECMD_SELECT_TAG_CONTENT		330
#define ECMD_CHECK_ACCESSIBILITY	331
#define ECMD_UNCOLLAPSETAG			332
#define ECMD_GENERATEPAGERESOURCE	333
#define ECMD_SHOWNONVISUALCONTROLS	334
#define ECMD_RESIZECOLUMN	    	335
#define ECMD_RESIZEROW              336
#define ECMD_MAKEABSOLUTE	    337
#define ECMD_MAKERELATIVE	    338
#define ECMD_MAKESTATIC             339
#define ECMD_INSERTLAYER	    340
#define ECMD_UPDATEDESIGNVIEW		341
#define ECMD_UPDATESOURCEVIEW       342
#define ECMD_INSERTCAPTION	    343
#define ECMD_DELETECAPTION          344
#define ECMD_MAKEPOSITIONNOTSET     345
#define ECMD_AUTOPOSITIONOPTIONS    346
#define ECMD_EDITIMAGE              347
#define ECMD_VALIDATION_TARGET          11281
#define ECMD_VALIDATION_TARGET_GET_LIST 11282

#define ECMD_CSS_TARGET					11283
#define ECMD_CSS_TARGET_GET_LIST		11284
//
// Shareable commands originating in the VC project
//
#define ECMD_COMPILE                350
//
#define ECMD_PROJSETTINGS           352
#define ECMD_LINKONLY               353
//
#define ECMD_REMOVE                 355
#define ECMD_PROJSTARTDEBUG         356
#define ECMD_PROJSTEPINTO           357
#define ECMD_UPDATEMGDRES           358
//
//
#define ECMD_UPDATEWEBREF           360
//
#define ECMD_ADDRESOURCE            362
#define ECMD_WEBDEPLOY              363
//
#define ECMD_PROJTOOLORDER            367
//
#define ECMD_PROJECTTOOLFILES        368
//
#define ECMD_OTB_PGO_INSTRUMENT     369
#define ECMD_OTB_PGO_OPT            370
#define ECMD_OTB_PGO_UPDATE         371
#define ECMD_OTB_PGO_RUNSCENARIO    372

//
// Shareable commands originating in the VB and VBA projects
// Note that there are two versions of each command. One
// version is originally from the main (project) menu and the
// other version from a cascading "Add" context menu. The main
// difference between the two commands is that the main menu
// version starts with the text "Add" whereas this is not
// present on the context menu version.
//
#define ECMD_ADDHTMLPAGE            400
#define ECMD_ADDHTMLPAGECTX         401
#define ECMD_ADDMODULE              402
#define ECMD_ADDMODULECTX           403
// unused 404
// unused 405
#define ECMD_ADDWFCFORM             406
// unused 407
// unused 408
// unused 409
#define ECMD_ADDWEBFORM             410
#define ECMD_ADDMASTERPAGE          411
#define ECMD_ADDUSERCONTROL         412
#define ECMD_ADDCONTENTPAGE         413
// unused 414 to 425
#define ECMD_ADDDHTMLPAGE           426
// unused 427 to 431
#define ECMD_ADDIMAGEGENERATOR      432
// unused 433
#define ECMD_ADDINHERWFCFORM        434
// unused 435
#define ECMD_ADDINHERCONTROL        436
// unused 437
#define ECMD_ADDWEBUSERCONTROL      438
// unused 439
// unused 440
// unused 441
#define ECMD_ADDTBXCOMPONENT        442
// unused 443
#define ECMD_ADDWEBSERVICE          444
#define ECMD_ADDSTYLESHEET          445
#define ECMD_SETBROWSELOCATION      446
#define ECMD_REFRESHFOLDER          447
#define ECMD_SETBROWSELOCATIONCTX   448
#define ECMD_VIEWMARKUP             449
#define ECMD_NEXTMETHOD             450
#define ECMD_PREVMETHOD             451

// VB refactoring commands
#define ECMD_RENAMESYMBOL           452
#define ECMD_SHOWREFERENCES         453
#define ECMD_CREATESNIPPET          454
#define ECMD_CREATEREPLACEMENT      455
#define ECMD_INSERTCOMMENT          456

#define ECMD_VIEWCOMPONENTDESIGNER  457

#define ECMD_GOTOTYPEDEF            458

#define ECMD_SHOWSNIPPETHIGHLIGHTING           459
#define ECMD_HIDESNIPPETHIGHLIGHTING           460
//
// Shareable commands originating in the VFP project
//
#define ECMD_ADDVFPPAGE             500
#define ECMD_SETBREAKPOINT          501
//
// Shareable commands originating in the HELP WORKSHOP project
//
#define ECMD_SHOWALLFILES           600
#define ECMD_ADDTOPROJECT           601
#define ECMD_ADDBLANKNODE           602
#define ECMD_ADDNODEFROMFILE        603
#define ECMD_CHANGEURLFROMFILE      604
#define ECMD_EDITTOPIC              605
#define ECMD_EDITTITLE              606
#define ECMD_MOVENODEUP             607
#define ECMD_MOVENODEDOWN           608
#define ECMD_MOVENODELEFT           609
#define ECMD_MOVENODERIGHT          610
//
// Shareable commands originating in the Deploy project
//
// Note there are two groups of deploy project commands.
// The first group of deploy commands.
#define ECMD_ADDOUTPUT              700
#define ECMD_ADDFILE                701
#define ECMD_MERGEMODULE            702
#define ECMD_ADDCOMPONENTS          703
#define ECMD_LAUNCHINSTALLER        704
#define ECMD_LAUNCHUNINSTALL        705
#define ECMD_LAUNCHORCA             706
#define ECMD_FILESYSTEMEDITOR       707
#define ECMD_REGISTRYEDITOR         708
#define ECMD_FILETYPESEDITOR        709
#define ECMD_USERINTERFACEEDITOR    710
#define ECMD_CUSTOMACTIONSEDITOR    711
#define ECMD_LAUNCHCONDITIONSEDITOR 712
#define ECMD_EDITOR                 713
#define ECMD_EXCLUDE                714
#define ECMD_REFRESHDEPENDENCIES    715
#define ECMD_VIEWOUTPUTS            716
#define ECMD_VIEWDEPENDENCIES       717
#define ECMD_VIEWFILTER             718

//
// The Second group of deploy commands.
// Note that there is a special sub-group in which the relative
// positions are important (see below)
//
#define ECMD_KEY                    750
#define ECMD_STRING                 751
#define ECMD_BINARY                 752
#define ECMD_DWORD                  753
#define ECMD_KEYSOLO                754
#define ECMD_IMPORT                 755
#define ECMD_FOLDER                 756
#define ECMD_PROJECTOUTPUT          757
#define ECMD_FILE                   758
#define ECMD_ADDMERGEMODULES        759
#define ECMD_CREATESHORTCUT         760
#define ECMD_LARGEICONS             761
#define ECMD_SMALLICONS             762
#define ECMD_LIST                   763
#define ECMD_DETAILS                764
#define ECMD_ADDFILETYPE            765
#define ECMD_ADDACTION              766
#define ECMD_SETASDEFAULT           767
#define ECMD_MOVEUP                 768
#define ECMD_MOVEDOWN               769
#define ECMD_ADDDIALOG              770
#define ECMD_IMPORTDIALOG           771
#define ECMD_ADDFILESEARCH          772
#define ECMD_ADDREGISTRYSEARCH      773
#define ECMD_ADDCOMPONENTSEARCH     774
#define ECMD_ADDLAUNCHCONDITION     775
#define ECMD_ADDCUSTOMACTION        776
#define ECMD_OUTPUTS                777
#define ECMD_DEPENDENCIES           778
#define ECMD_FILTER                 779
#define ECMD_COMPONENTS             780
#define ECMD_ENVSTRING              781
#define ECMD_CREATEEMPTYSHORTCUT    782
#define ECMD_ADDFILECONDITION       783
#define ECMD_ADDREGISTRYCONDITION   784
#define ECMD_ADDCOMPONENTCONDITION  785
#define ECMD_ADDURTCONDITION        786
#define ECMD_ADDIISCONDITION        787

//
// The relative positions of the commands within the following deploy
// subgroup must remain unaltered, although the group as a whole may
// be repositioned. Note that the first and last elements are special
// boundary elements.
#define ECMD_SPECIALFOLDERBASE      800
#define ECMD_USERSAPPLICATIONDATAFOLDER 800
#define ECMD_COMMONFILES64FOLDER    801
#define ECMD_COMMONFILESFOLDER      802
#define ECMD_CUSTOMFOLDER           803
#define ECMD_USERSDESKTOP           804
#define ECMD_USERSFAVORITESFOLDER   805
#define ECMD_FONTSFOLDER            806
#define ECMD_GLOBALASSEMBLYCACHEFOLDER  807
#define ECMD_MODULERETARGETABLEFOLDER   808
#define ECMD_USERSPERSONALDATAFOLDER    809
#define ECMD_PROGRAMFILES64FOLDER   810
#define ECMD_PROGRAMFILESFOLDER     811
#define ECMD_USERSPROGRAMSMENU      812
#define ECMD_USERSSENDTOMENU        813
#define ECMD_SHAREDCOMPONENTSFOLDER 814
#define ECMD_USERSSTARTMENU         815
#define ECMD_USERSSTARTUPFOLDER     816
#define ECMD_SYSTEM64FOLDER         817
#define ECMD_SYSTEMFOLDER           818
#define ECMD_APPLICATIONFOLDER      819
#define ECMD_USERSTEMPLATEFOLDER    820
#define ECMD_WEBCUSTOMFOLDER        821
#define ECMD_WINDOWSFOLDER          822
#define ECMD_SPECIALFOLDERLAST      822
// End of deploy sub-group
//
// Shareable commands originating in the Visual Studio Analyzer project
//
#define ECMD_EXPORTEVENTS           900
#define ECMD_IMPORTEVENTS           901
#define ECMD_VIEWEVENT              902
#define ECMD_VIEWEVENTLIST          903
#define ECMD_VIEWCHART              904
#define ECMD_VIEWMACHINEDIAGRAM     905
#define ECMD_VIEWPROCESSDIAGRAM     906
#define ECMD_VIEWSOURCEDIAGRAM      907
#define ECMD_VIEWSTRUCTUREDIAGRAM   908
#define ECMD_VIEWTIMELINE           909
#define ECMD_VIEWSUMMARY            910
#define ECMD_APPLYFILTER            911
#define ECMD_CLEARFILTER            912
#define ECMD_STARTRECORDING         913
#define ECMD_STOPRECORDING          914
#define ECMD_PAUSERECORDING         915
#define ECMD_ACTIVATEFILTER         916
#define ECMD_SHOWFIRSTEVENT         917
#define ECMD_SHOWPREVIOUSEVENT      918
#define ECMD_SHOWNEXTEVENT          919
#define ECMD_SHOWLASTEVENT          920
#define ECMD_REPLAYEVENTS           921
#define ECMD_STOPREPLAY             922
#define ECMD_INCREASEPLAYBACKSPEED  923
#define ECMD_DECREASEPLAYBACKSPEED  924
#define ECMD_ADDMACHINE             925
#define ECMD_ADDREMOVECOLUMNS       926
#define ECMD_SORTCOLUMNS            927
#define ECMD_SAVECOLUMNSETTINGS     928
#define ECMD_RESETCOLUMNSETTINGS    929
#define ECMD_SIZECOLUMNSTOFIT       930
#define ECMD_AUTOSELECT             931
#define ECMD_AUTOFILTER             932
#define ECMD_AUTOPLAYTRACK          933
#define ECMD_GOTOEVENT              934
#define ECMD_ZOOMTOFIT              935
#define ECMD_ADDGRAPH               936
#define ECMD_REMOVEGRAPH            937
#define ECMD_CONNECTMACHINE         938
#define ECMD_DISCONNECTMACHINE      939
#define ECMD_EXPANDSELECTION        940
#define ECMD_COLLAPSESELECTION      941
#define ECMD_ADDFILTER              942
#define ECMD_ADDPREDEFINED0         943
#define ECMD_ADDPREDEFINED1         944
#define ECMD_ADDPREDEFINED2         945
#define ECMD_ADDPREDEFINED3         946
#define ECMD_ADDPREDEFINED4         947
#define ECMD_ADDPREDEFINED5         948
#define ECMD_ADDPREDEFINED6         949
#define ECMD_ADDPREDEFINED7         950
#define ECMD_ADDPREDEFINED8         951
#define ECMD_TIMELINESIZETOFIT      952

//
// Shareable commands originating with Crystal Reports
//
#define ECMD_FIELDVIEW             1000
#define ECMD_SELECTEXPERT          1001
#define ECMD_TOPNEXPERT            1002
#define ECMD_SORTORDER             1003
#define ECMD_PROPPAGE              1004
#define ECMD_HELP                  1005
#define ECMD_SAVEREPORT            1006
#define ECMD_INSERTSUMMARY         1007
#define ECMD_INSERTGROUP           1008
#define ECMD_INSERTSUBREPORT       1009
#define ECMD_INSERTCHART           1010
#define ECMD_INSERTPICTURE         1011
//
// Shareable commands from the common project area (DirPrj)
//
#define ECMD_SETASSTARTPAGE        1100
#define ECMD_RECALCULATELINKS      1101
#define ECMD_WEBPERMISSIONS        1102
#define ECMD_COMPARETOMASTER       1103
#define ECMD_WORKOFFLINE           1104
#define ECMD_SYNCHRONIZEFOLDER     1105
#define ECMD_SYNCHRONIZEALLFOLDERS 1106
#define ECMD_COPYPROJECT           1107
#define ECMD_IMPORTFILEFROMWEB     1108
#define ECMD_INCLUDEINPROJECT      1109
#define ECMD_EXCLUDEFROMPROJECT    1110
#define ECMD_BROKENLINKSREPORT     1111
#define ECMD_ADDPROJECTOUTPUTS     1112
#define ECMD_ADDREFERENCE          1113
#define ECMD_ADDWEBREFERENCE       1114
#define ECMD_ADDWEBREFERENCECTX    1115
#define ECMD_UPDATEWEBREFERENCE    1116
#define ECMD_RUNCUSTOMTOOL         1117
#define ECMD_SETRUNTIMEVERSION     1118
#define ECMD_VIEWREFINOBJECTBROWSER  1119
#define ECMD_PUBLISH               1120
#define ECMD_PUBLISHCTX            1121
#define ECMD_STARTOPTIONS          1124
#define ECMD_ADDREFERENCECTX       1125
  // note cmdidPropertyManager is consuming 1126  and it shouldn't
#define ECMD_STARTOPTIONSCTX       1127
#define ECMD_DETACHLOCALDATAFILECTX  1128
#define ECMD_ADDSERVICEREFERENCE   1129
#define ECMD_ADDSERVICEREFERENCECTX 1130
#define ECMD_UPDATESERVICEREFERENCE 1131
#define ECMD_CONFIGURESERVICEREFERENCE 1132

//
// Shareable commands for right drag operations
//
#define ECMD_DRAG_MOVE             1140
#define ECMD_DRAG_COPY             1141
#define ECMD_DRAG_CANCEL           1142

//
// Shareable commands from the VC resource editor
//
#define ECMD_TESTDIALOG            1200
#define ECMD_SPACEACROSS           1201
#define ECMD_SPACEDOWN             1202
#define ECMD_TOGGLEGRID            1203
#define ECMD_TOGGLEGUIDES          1204
#define ECMD_SIZETOTEXT            1205
#define ECMD_CENTERVERT            1206
#define ECMD_CENTERHORZ            1207
#define ECMD_FLIPDIALOG            1208
#define ECMD_SETTABORDER           1209
#define ECMD_BUTTONRIGHT           1210
#define ECMD_BUTTONBOTTOM          1211
#define ECMD_AUTOLAYOUTGROW        1212
#define ECMD_AUTOLAYOUTNORESIZE    1213
#define ECMD_AUTOLAYOUTOPTIMIZE    1214
#define ECMD_GUIDESETTINGS         1215
#define ECMD_RESOURCEINCLUDES      1216
#define ECMD_RESOURCESYMBOLS       1217
#define ECMD_OPENBINARY            1218
#define ECMD_RESOURCEOPEN          1219
#define ECMD_RESOURCENEW           1220
#define ECMD_RESOURCENEWCOPY       1221
#define ECMD_INSERT                1222
#define ECMD_EXPORT                1223
#define ECMD_CTLMOVELEFT           1224
#define ECMD_CTLMOVEDOWN           1225
#define ECMD_CTLMOVERIGHT          1226
#define ECMD_CTLMOVEUP             1227
#define ECMD_CTLSIZEDOWN           1228
#define ECMD_CTLSIZEUP             1229
#define ECMD_CTLSIZELEFT           1230
#define ECMD_CTLSIZERIGHT          1231
#define ECMD_NEWACCELERATOR        1232
#define ECMD_CAPTUREKEYSTROKE      1233
#define ECMD_INSERTACTIVEXCTL      1234
#define ECMD_INVERTCOLORS          1235
#define ECMD_FLIPHORIZONTAL        1236
#define ECMD_FLIPVERTICAL          1237
#define ECMD_ROTATE90              1238
#define ECMD_SHOWCOLORSWINDOW      1239
#define ECMD_NEWSTRING             1240
#define ECMD_NEWINFOBLOCK          1241
#define ECMD_DELETEINFOBLOCK       1242
#define ECMD_ADJUSTCOLORS          1243
#define ECMD_LOADPALETTE           1244
#define ECMD_SAVEPALETTE           1245
#define ECMD_CHECKMNEMONICS        1246
#define ECMD_DRAWOPAQUE            1247
#define ECMD_TOOLBAREDITOR         1248
#define ECMD_GRIDSETTINGS          1249
#define ECMD_NEWDEVICEIMAGE        1250
#define ECMD_OPENDEVICEIMAGE       1251
#define ECMD_DELETEDEVICEIMAGE     1252
#define ECMD_VIEWASPOPUP           1253
#define ECMD_CHECKMENUMNEMONICS    1254
#define ECMD_SHOWIMAGEGRID         1255
#define ECMD_SHOWTILEGRID          1256
#define ECMD_MAGNIFY               1257
#define cmdidResProps              1258
#define ECMD_IMPORTICONIMAGE	   1259
#define ECMD_EXPORTICONIMAGE	   1260
#define ECMD_OPENEXTERNALEDITOR	   1261

//
// Shareable commands from the VC resource editor (Image editor toolbar)
//
#define ECMD_PICKRECTANGLE         1300
#define ECMD_PICKREGION            1301
#define ECMD_PICKCOLOR             1302
#define ECMD_ERASERTOOL            1303
#define ECMD_FILLTOOL              1304
#define ECMD_PENCILTOOL            1305
#define ECMD_BRUSHTOOL             1306
#define ECMD_AIRBRUSHTOOL          1307
#define ECMD_LINETOOL              1308
#define ECMD_CURVETOOL             1309
#define ECMD_TEXTTOOL              1310
#define ECMD_RECTTOOL              1311
#define ECMD_OUTLINERECTTOOL       1312
#define ECMD_FILLEDRECTTOOL        1313
#define ECMD_ROUNDRECTTOOL         1314
#define ECMD_OUTLINEROUNDRECTTOOL  1315
#define ECMD_FILLEDROUNDRECTTOOL   1316
#define ECMD_ELLIPSETOOL           1317
#define ECMD_OUTLINEELLIPSETOOL    1318
#define ECMD_FILLEDELLIPSETOOL     1319
#define ECMD_SETHOTSPOT            1320
#define ECMD_ZOOMTOOL              1321
#define ECMD_ZOOM1X                1322
#define ECMD_ZOOM2X                1323
#define ECMD_ZOOM6X                1324
#define ECMD_ZOOM8X                1325
#define ECMD_TRANSPARENTBCKGRND    1326
#define ECMD_OPAQUEBCKGRND         1327
//---------------------------------------------------
// The commands ECMD_ERASERSMALL thru ECMD_LINELARGER
// must be left in the same order for the use of the
// Resource Editor - They may however be relocated as
// a complete block
//---------------------------------------------------
#define ECMD_ERASERSMALL           1328
#define ECMD_ERASERMEDIUM          1329
#define ECMD_ERASERLARGE           1330
#define ECMD_ERASERLARGER          1331
#define ECMD_CIRCLELARGE           1332
#define ECMD_CIRCLEMEDIUM          1333
#define ECMD_CIRCLESMALL           1334
#define ECMD_SQUARELARGE           1335
#define ECMD_SQUAREMEDIUM          1336
#define ECMD_SQUARESMALL           1337
#define ECMD_LEFTDIAGLARGE         1338
#define ECMD_LEFTDIAGMEDIUM        1339
#define ECMD_LEFTDIAGSMALL         1340
#define ECMD_RIGHTDIAGLARGE        1341
#define ECMD_RIGHTDIAGMEDIUM       1342
#define ECMD_RIGHTDIAGSMALL        1343
#define ECMD_SPLASHSMALL           1344
#define ECMD_SPLASHMEDIUM          1345
#define ECMD_SPLASHLARGE           1346
#define ECMD_LINESMALLER           1347
#define ECMD_LINESMALL             1348
#define ECMD_LINEMEDIUM            1349
#define ECMD_LINELARGE             1350
#define ECMD_LINELARGER            1351
#define ECMD_LARGERBRUSH           1352
#define ECMD_LARGEBRUSH            1353
#define ECMD_STDBRUSH              1354
#define ECMD_SMALLBRUSH            1355
#define ECMD_SMALLERBRUSH          1356
#define ECMD_ZOOMIN                1357
#define ECMD_ZOOMOUT               1358
#define ECMD_PREVCOLOR             1359
#define ECMD_PREVECOLOR            1360
#define ECMD_NEXTCOLOR             1361
#define ECMD_NEXTECOLOR            1362
#define ECMD_IMG_OPTIONS           1363

//
// Sharable Commands from Visual Web Developer (website projects)
//
#define ECMD_STARTWEBADMINTOOL     1400
#define ECMD_NESTRELATEDFILES      1401
#define ECMD_ADDCONFIGTRANSFORMS   1402

//
// Shareable commands from WINFORMS
//
#define ECMD_CANCELDRAG            1500
#define ECMD_DEFAULTACTION         1501
#define ECMD_CTLMOVEUPGRID         1502
#define ECMD_CTLMOVEDOWNGRID       1503
#define ECMD_CTLMOVELEFTGRID       1504
#define ECMD_CTLMOVERIGHTGRID      1505
#define ECMD_CTLSIZERIGHTGRID      1506
#define ECMD_CTLSIZEUPGRID         1507
#define ECMD_CTLSIZELEFTGRID       1508
#define ECMD_CTLSIZEDOWNGRID       1509
#define ECMD_NEXTCTL               1510
#define ECMD_PREVCTL               1511

#define ECMD_RENAME                1550
#define ECMD_EXTRACTMETHOD         1551
#define ECMD_ENCAPSULATEFIELD      1552
#define ECMD_EXTRACTINTERFACE      1553
#define ECMD_REMOVEPARAMETERS      1555
#define ECMD_REORDERPARAMETERS     1556
#define ECMD_GENERATEMETHODSTUB    1557
#define ECMD_IMPLEMENTINTERFACEIMPLICIT   1558
#define ECMD_IMPLEMENTINTERFACEEXPLICIT   1559
#define ECMD_IMPLEMENTABSTRACTCLASS       1560
#define ECMD_SURROUNDWITH                 1561

//---------------------------------------------------
// Additional shell commands added to CMDSETID_StandardCommandSet2K
// because CLSID_StandardCommandSet97 is now considered closed.
//---------------------------------------------------


#define cmdidToggleWordWrapOW           1600

#define cmdidGotoNextLocationOW         1601
#define cmdidGotoPrevLocationOW         1602

#define cmdidBuildOnlyProject           1603
#define cmdidRebuildOnlyProject         1604
#define cmdidCleanOnlyProject           1605

#define cmdidSetBuildStartupsOnlyOnRun  1606

#define cmdidUnhideAll                  1607

#define cmdidHideFolder                 1608
#define cmdidUnhideFolders              1609

#define cmdidCopyFullPathName           1610

#define cmdidSaveFolderAsSolution       1611

#define cmdidManageUserSettings         1612

#define cmdidNewSolutionFolder          1613

#define cmdidSetTrackSelInSlnExp        1614    //changed to match VS 2005 cmdid

#define cmdidClearPaneOW                1615
#define cmdidGotoErrorTagOW             1616
#define cmdidGotoNextErrorTagOW         1617
#define cmdidGotoPrevErrorTagOW         1618

#define cmdidClearPaneFR1               1619
#define cmdidGotoErrorTagFR1            1620
#define cmdidGotoNextErrorTagFR1        1621
#define cmdidGotoPrevErrorTagFR1        1622

#define cmdidClearPaneFR2               1623
#define cmdidGotoErrorTagFR2            1624
#define cmdidGotoNextErrorTagFR2        1625
#define cmdidGotoPrevErrorTagFR2        1626

// Output Window pane selection dropdown
#define cmdidOutputPaneCombo            1627
#define cmdidOutputPaneComboList        1628

#define cmdidDisableDockingChanges      1629
#define cmdidToggleFloat                1630
#define cmdidResetLayout                1631

#define cmdidEditProjectFile            1632

#define cmdidOpenInFormView             1633
#define cmdidOpenInCodeView             1634

#define cmdidExploreFolderInWindows     1635

#define cmdidNewSolutionFolderBar       1638

#define cmdidDataShortcut               1639



// Tool window navigation
#define cmdidNextToolWindow             1640
#define cmdidPrevToolWindow             1641
#define cmdidBrowseToFileInExplorer     1642
#define cmdidShowEzMDIFileMenu          1643
#define cmdidNextToolWindowNav          1644    // command for NextToolWindow with navigator
#define cmdidPrevToolWindowNav          1645

// One Time build with static anlaysis for ProjOnly
#define cmdidStaticAnalysisOnlyProject  1646

//Run Code Analysis on Build Menu
#define ECMD_RUNFXCOPSEL                1647
//Run Code Analysis on Context menu for the selected project
#define ECMD_RUNFXCOPPROJCTX            1648

#define cmdidCloseAllButThis            1650

// not real commands - used to define Class view and Object browser commands
#define SYM_TOOL_COMMAND_FIRST                 1

#define cmdidSymToolShowInheritedMembers       1
#define cmdidSymToolShowBaseTypes              2
#define cmdidSymToolShowDerivedTypes           3
#define cmdidSymToolShowHidden                 4
#define cmdidSymToolBack                       5
#define cmdidSymToolForward                    6
#define cmdidSymToolSearchCombo                7
#define cmdidSymToolSearch                     8
#define cmdidSymToolSortObjectsAlpha           9
#define cmdidSymToolSortObjectsType           10
#define cmdidSymToolSortObjectsAccess         11
#define cmdidSymToolGroupObjectsType          12
#define cmdidSymToolSortMembersAlpha          13
#define cmdidSymToolSortMembersType           14
#define cmdidSymToolSortMembersAccess         15
#define cmdidSymToolTypeBrowserSettings       16
#define cmdidSymToolViewMembersAsImplementor  17
#define cmdidSymToolViewMembersAsSubclass     18
#define cmdidSymToolViewMembersAsUser         19
#define cmdidSymToolNamespacesView            20
#define cmdidSymToolContainersView            21
#define cmdidSymToolShowProjectReferences     22
#define cmdidSymToolGroupMembersType          23
#define cmdidSymToolClearSearch               24
#define cmdidSymToolFilterToType              25
#define cmdidSymToolSortByBestMatch           26
#define cmdidSymToolSearchMRUList             27
#define cmdidSymToolViewOtherMembers          28
#define cmdidSymToolSearchCmd                 29
#define cmdidSymToolGoToSearchCmd             30
#define cmdidSymToolShowExtensionMembers      31	

#define SYM_TOOL_COMMAND_LAST                 31

//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// the numbers from 1650 to 1699 are reserved for Class view  specific commands
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#define CV_COMMANDS_BASE                1650

#define cmdidCVShowInheritedMembers     1651 //CV_COMMANDS_BASE + cmdidSymToolShowInheritedMembers
#define cmdidCVShowBaseTypes            1652 //CV_COMMANDS_BASE + cmdidSymToolShowBaseTypes
#define cmdidCVShowDerivedTypes         1653 //CV_COMMANDS_BASE + cmdidSymToolShowDerivedTypes
#define cmdidCVShowHidden               1654 //CV_COMMANDS_BASE + cmdidSymToolShowHidden
#define cmdidCVBack                     1655 //CV_COMMANDS_BASE + cmdidSymToolBack
#define cmdidCVForward                  1656 //CV_COMMANDS_BASE + cmdidSymToolForward
#define cmdidCVSearchCombo              1657 //CV_COMMANDS_BASE + cmdidSymToolSearchCombo
#define cmdidCVSearch                   1658 //CV_COMMANDS_BASE + cmdidSymToolSearch
#define cmdidCVSortObjectsAlpha         1659 //CV_COMMANDS_BASE + cmdidSymToolSortObjectsAlpha
#define cmdidCVSortObjectsType          1660 //CV_COMMANDS_BASE + cmdidSymToolSortObjectsType
#define cmdidCVSortObjectsAccess        1661 //CV_COMMANDS_BASE + cmdidSymToolSortObjectsAccess
#define cmdidCVGroupObjectsType         1662 //CV_COMMANDS_BASE + cmdidSymToolGroupObjectsType
#define cmdidCVSortMembersAlpha         1663 //CV_COMMANDS_BASE + cmdidSymToolSortMembersAlpha
#define cmdidCVSortMembersType          1664 //CV_COMMANDS_BASE + cmdidSymToolSortMembersType
#define cmdidCVSortMembersAccess        1665 //CV_COMMANDS_BASE + cmdidSymToolSortMembersAccess
#define cmdidCVTypeBrowserSettings      1666 //CV_COMMANDS_BASE + cmdidSymToolTypeBrowserSettings
#define cmdidCVViewMembersAsImplementor 1667 //CV_COMMANDS_BASE + cmdidSymToolViewMembersAsImplementor
#define cmdidCVViewMembersAsSubclass    1668 //CV_COMMANDS_BASE + cmdidSymToolViewMembersAsSubclass
#define cmdidCVViewMembersAsUser        1669 //CV_COMMANDS_BASE + cmdidSymToolViewMembersAsUser
#define cmdidCVReserved1                1670 //CV_COMMANDS_BASE + cmdidSymToolNamespacesView
#define cmdidCVReserved2                1671 //CV_COMMANDS_BASE + cmdidSymToolContainersView
#define cmdidCVShowProjectReferences    1672 //CV_COMMANDS_BASE + cmdidSymToolShowProjectReferences
#define cmdidCVGroupMembersType         1673 //CV_COMMANDS_BASE + cmdidSymToolGroupMembersType
#define cmdidCVClearSearch              1674 //CV_COMMANDS_BASE + cmdidSymToolClearSearch
#define cmdidCVFilterToType             1675 //CV_COMMANDS_BASE + cmdidSymToolFilterToType
#define cmdidCVSortByBestMatch          1676 //CV_COMMANDS_BASE + cmdidSymToolSortByBestMatch
#define cmdidCVSearchMRUList            1677 //CV_COMMANDS_BASE + cmdidSymToolSearchMRUList
#define cmdidCVViewOtherMembers         1678 //CV_COMMANDS_BASE + cmdidSymToolViewOtherMembers
#define cmdidCVSearchCmd                1679 //CV_COMMANDS_BASE + cmdidSymToolSearchCmd
#define cmdidCVGoToSearchCmd            1680 //CV_COMMANDS_BASE + cmdidSymToolGoToSearchCmd

#define cmdidCVUnused9                  1681 // Reserved for future use
#define cmdidCVUnused10                 1682 // Reserved for future use
#define cmdidCVUnused11                 1683 // Reserved for future use
#define cmdidCVUnused12                 1684 // Reserved for future use
#define cmdidCVUnused13                 1685 // Reserved for future use
#define cmdidCVUnused14                 1686 // Reserved for future use
#define cmdidCVUnused15                 1687 // Reserved for future use
#define cmdidCVUnused16                 1688 // Reserved for future use
#define cmdidCVUnused17                 1689 // Reserved for future use
#define cmdidCVUnused18                 1690 // Reserved for future use
#define cmdidCVUnused19                 1691 // Reserved for future use
#define cmdidCVUnused20                 1692 // Reserved for future use
#define cmdidCVUnused21                 1693 // Reserved for future use
#define cmdidCVUnused22                 1694 // Reserved for future use
#define cmdidCVUnused23                 1695 // Reserved for future use
#define cmdidCVUnused24                 1696 // Reserved for future use
#define cmdidCVUnused25                 1697 // Reserved for future use
#define cmdidCVUnused26                 1698 // Reserved for future use
#define cmdidCVUnused27                 1699 // Reserved for future use

//-------------------end of CV commands----------------------------------------------

#define cmdidControlGallery             1700

//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// the numbers from 1710 to 1759 are reserved for Object Browser specific commands
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#define OB_COMMANDS_BASE                1710

#define cmdidOBShowInheritedMembers     1711 //OB_COMMANDS_BASE + cmdidSymToolShowInheritedMembers
#define cmdidOBShowBaseTypes            1712 //OB_COMMANDS_BASE + cmdidSymToolShowBaseTypes
#define cmdidOBShowDerivedTypes         1713 //OB_COMMANDS_BASE + cmdidSymToolShowDerivedTypes
#define cmdidOBShowHidden               1714 //OB_COMMANDS_BASE + cmdidSymToolShowHidden
#define cmdidOBBack                     1715 //OB_COMMANDS_BASE + cmdidSymToolBack
#define cmdidOBForward                  1716 //OB_COMMANDS_BASE + cmdidSymToolForward
#define cmdidOBSearchCombo              1717 //OB_COMMANDS_BASE + cmdidSymToolSearchCombo
#define cmdidOBSearch                   1718 //OB_COMMANDS_BASE + cmdidSymToolSearch
#define cmdidOBSortObjectsAlpha         1719 //OB_COMMANDS_BASE + cmdidSymToolSortObjectsAlpha
#define cmdidOBSortObjectsType          1720 //OB_COMMANDS_BASE + cmdidSymToolSortObjectsType
#define cmdidOBSortObjectsAccess        1721 //OB_COMMANDS_BASE + cmdidSymToolSortObjectsAccess
#define cmdidOBGroupObjectsType         1722 //OB_COMMANDS_BASE + cmdidSymToolGroupObjectsType
#define cmdidOBSortMembersAlpha         1723 //OB_COMMANDS_BASE + cmdidSymToolSortMembersAlpha
#define cmdidOBSortMembersType          1724 //OB_COMMANDS_BASE + cmdidSymToolSortMembersType
#define cmdidOBSortMembersAccess        1725 //OB_COMMANDS_BASE + cmdidSymToolSortMembersAccess
#define cmdidOBTypeBrowserSettings      1726 //OB_COMMANDS_BASE + cmdidSymToolTypeBrowserSettings
#define cmdidOBViewMembersAsImplementor 1727 //OB_COMMANDS_BASE + cmdidSymToolViewMembersAsImplementor
#define cmdidOBViewMembersAsSubclass    1728 //OB_COMMANDS_BASE + cmdidSymToolViewMembersAsSubclass
#define cmdidOBViewMembersAsUser        1729 //OB_COMMANDS_BASE + cmdidSymToolViewMembersAsUser
#define cmdidOBNamespacesView           1730 //OB_COMMANDS_BASE + cmdidSymToolNamespacesView
#define cmdidOBContainersView           1731 //OB_COMMANDS_BASE + cmdidSymToolContainersView
#define cmdidOBReserved1                1732 //OB_COMMANDS_BASE + cmdidSymToolShowProjectReferences
#define cmdidOBGroupMembersType         1733 //OB_COMMANDS_BASE + cmdidSymToolGroupMembersType
#define cmdidOBClearSearch              1734 //OB_COMMANDS_BASE + cmdidSymToolClearSearch
#define cmdidOBFilterToType             1735 //OB_COMMANDS_BASE + cmdidSymToolFilterToType
#define cmdidOBSortByBestMatch          1736 //OB_COMMANDS_BASE + cmdidSymToolSortByBestMatch
#define cmdidOBSearchMRUList            1737 //OB_COMMANDS_BASE + cmdidSymToolSearchMRUList
#define cmdidOBViewOtherMembers         1738 //OB_COMMANDS_BASE + cmdidSymToolViewOtherMembers
#define cmdidOBSearchCmd                1739 //OB_COMMANDS_BASE + cmdidSymToolSearchCmd
#define cmdidOBGoToSearchCmd            1740 //OB_COMMANDS_BASE + cmdidSymToolGoToSearchCmd
#define cmdidOBShowExtensionMembers     1741 //OB_COMMANDS_BASE + cmdidSymToolShowExtensionMembers

#define cmdidOBUnused10                 1742 // Reserved for future use
#define cmdidOBUnused11                 1743 // Reserved for future use
#define cmdidOBUnused12                 1744 // Reserved for future use
#define cmdidOBUnused13                 1745 // Reserved for future use
#define cmdidOBUnused14                 1746 // Reserved for future use
#define cmdidOBUnused15                 1747 // Reserved for future use
#define cmdidOBUnused16                 1748 // Reserved for future use
#define cmdidOBUnused17                 1749 // Reserved for future use
#define cmdidOBUnused18                 1750 // Reserved for future use
#define cmdidOBUnused19                 1751 // Reserved for future use
#define cmdidOBUnused20                 1752 // Reserved for future use
#define cmdidOBUnused21                 1753 // Reserved for future use
#define cmdidOBUnused22                 1754 // Reserved for future use
#define cmdidOBUnused23                 1755 // Reserved for future use
#define cmdidOBUnused24                 1756 // Reserved for future use
#define cmdidOBUnused25                 1757 // Reserved for future use
#define cmdidOBUnused26                 1758 // Reserved for future use
#define cmdidOBUnused27                 1759 // Reserved for future use

//-------------------end of OB commands----------------------------------------------

#define cmdidFullScreen2                1775

// find symbol results sorting command
#define cmdidFSRSortObjectsAlpha        1776
#define cmdidFSRSortByBestMatch         1777

#define cmdidNavigateBack               1800
#define cmdidNavigateForward            1801

// Error correction commands (need to be consecutive)
#define ECMD_CORRECTION_1               1900
#define ECMD_CORRECTION_2               1901
#define ECMD_CORRECTION_3               1902
#define ECMD_CORRECTION_4               1903
#define ECMD_CORRECTION_5               1904
#define ECMD_CORRECTION_6               1905
#define ECMD_CORRECTION_7               1906
#define ECMD_CORRECTION_8               1907
#define ECMD_CORRECTION_9               1908
#define ECMD_CORRECTION_10              1909

// Object Browser commands
#define cmdidOBAddReference             1914

// Edit.FindAllReferences
#define cmdidFindReferences             1915

// Code Definition View
#define cmdidCodeDefView                1926
#define cmdidCodeDefViewGoToPrev        1927
#define cmdidCodeDefViewGoToNext        1928
#define cmdidCodeDefViewEditDefinition  1929
#define cmdidCodeDefViewChooseEncoding  1930

// Class view
//#define cmdidCVShowProjectReferences    1930
#define cmdidViewInClassDiagram         1931

//
// Shareable commands from VSDesigner
//
#define ECMD_ADDDBTABLE                 1950
#define ECMD_ADDDATATABLE               1951
#define ECMD_ADDFUNCTION                1952
#define ECMD_ADDRELATION                1953
#define ECMD_ADDKEY                     1954
#define ECMD_ADDCOLUMN                  1955
#define ECMD_CONVERT_DBTABLE            1956
#define ECMD_CONVERT_DATATABLE          1957
#define ECMD_GENERATE_DATABASE          1958
#define ECMD_CONFIGURE_CONNECTIONS      1959
#define ECMD_IMPORT_XMLSCHEMA           1960
#define ECMD_SYNC_WITH_DATABASE         1961
#define ECMD_CONFIGURE                  1962
#define ECMD_CREATE_DATAFORM            1963
#define ECMD_CREATE_ENUM                1964
#define ECMD_INSERT_FUNCTION            1965
#define ECMD_EDIT_FUNCTION              1966
#define ECMD_SET_PRIMARY_KEY            1967
#define ECMD_INSERT_COLUMN              1968
#define ECMD_AUTO_SIZE                  1969
#define ECMD_SHOW_RELATION_LABELS       1970

#define cmdid_VSD_GenerateDataSet       1971
#define cmdid_VSD_Preview               1972
#define cmdid_VSD_ConfigureAdapter      1973
#define cmdid_VSD_ViewDatasetSchema     1974
#define cmdid_VSD_DatasetProperties     1975
#define cmdid_VSD_ParameterizeForm      1976
#define cmdid_VSD_AddChildForm          1977

#define ECMD_EDITCONSTRAINT             1978
#define ECMD_DELETECONSTRAINT           1979
#define ECMD_EDITDATARELATION           1980

#define cmdidCloseProject               1982
#define cmdidReloadCommandBars          1983

#define cmdidSolutionPlatform           1990
#define cmdidSolutionPlatformGetList    1991

// Initially used by DataSet Editor
#define ECMD_DATAACCESSOR               2000
#define ECMD_ADD_DATAACCESSOR           2001
#define ECMD_QUERY                      2002
#define ECMD_ADD_QUERY                  2003

// Publish solution
#define ECMD_PUBLISHSELECTION           2005
#define ECMD_PUBLISHSLNCTX              2006
#define ECMD_MSDEPLOYPUBLISHSLNCTX              2007

// Call Browser
#define cmdidCallBrowserShowCallsTo         2010
#define cmdidCallBrowserShowCallsFrom       2011
#define cmdidCallBrowserShowNewCallsTo      2012
#define cmdidCallBrowserShowNewCallsFrom    2013

#define cmdidCallBrowser1ShowCallsTo        2014
#define cmdidCallBrowser2ShowCallsTo        2015
#define cmdidCallBrowser3ShowCallsTo        2016
#define cmdidCallBrowser4ShowCallsTo        2017
#define cmdidCallBrowser5ShowCallsTo        2018
#define cmdidCallBrowser6ShowCallsTo        2019
#define cmdidCallBrowser7ShowCallsTo        2020
#define cmdidCallBrowser8ShowCallsTo        2021
#define cmdidCallBrowser9ShowCallsTo        2022
#define cmdidCallBrowser10ShowCallsTo       2023
#define cmdidCallBrowser11ShowCallsTo       2024
#define cmdidCallBrowser12ShowCallsTo       2025
#define cmdidCallBrowser13ShowCallsTo       2026
#define cmdidCallBrowser14ShowCallsTo       2027
#define cmdidCallBrowser15ShowCallsTo       2028
#define cmdidCallBrowser16ShowCallsTo       2029

#define cmdidCallBrowser1ShowCallsFrom      2030
#define cmdidCallBrowser2ShowCallsFrom      2031
#define cmdidCallBrowser3ShowCallsFrom      2032
#define cmdidCallBrowser4ShowCallsFrom      2033
#define cmdidCallBrowser5ShowCallsFrom      2034
#define cmdidCallBrowser6ShowCallsFrom      2035
#define cmdidCallBrowser7ShowCallsFrom      2036
#define cmdidCallBrowser8ShowCallsFrom      2037
#define cmdidCallBrowser9ShowCallsFrom      2038
#define cmdidCallBrowser10ShowCallsFrom     2039
#define cmdidCallBrowser11ShowCallsFrom     2040
#define cmdidCallBrowser12ShowCallsFrom     2041
#define cmdidCallBrowser13ShowCallsFrom     2042
#define cmdidCallBrowser14ShowCallsFrom     2043
#define cmdidCallBrowser15ShowCallsFrom     2044
#define cmdidCallBrowser16ShowCallsFrom     2045

#define cmdidCallBrowser1ShowFullNames      2046
#define cmdidCallBrowser2ShowFullNames      2047
#define cmdidCallBrowser3ShowFullNames      2048
#define cmdidCallBrowser4ShowFullNames      2049
#define cmdidCallBrowser5ShowFullNames      2050
#define cmdidCallBrowser6ShowFullNames      2051
#define cmdidCallBrowser7ShowFullNames      2052
#define cmdidCallBrowser8ShowFullNames      2053
#define cmdidCallBrowser9ShowFullNames      2054
#define cmdidCallBrowser10ShowFullNames     2055
#define cmdidCallBrowser11ShowFullNames     2056
#define cmdidCallBrowser12ShowFullNames     2057
#define cmdidCallBrowser13ShowFullNames     2058
#define cmdidCallBrowser14ShowFullNames     2059
#define cmdidCallBrowser15ShowFullNames     2060
#define cmdidCallBrowser16ShowFullNames     2061

#define cmdidCallBrowser1Settings           2062
#define cmdidCallBrowser2Settings           2063
#define cmdidCallBrowser3Settings           2064
#define cmdidCallBrowser4Settings           2065
#define cmdidCallBrowser5Settings           2066
#define cmdidCallBrowser6Settings           2067
#define cmdidCallBrowser7Settings           2068
#define cmdidCallBrowser8Settings           2069
#define cmdidCallBrowser9Settings           2070
#define cmdidCallBrowser10Settings          2071
#define cmdidCallBrowser11Settings          2072
#define cmdidCallBrowser12Settings          2073
#define cmdidCallBrowser13Settings          2074
#define cmdidCallBrowser14Settings          2075
#define cmdidCallBrowser15Settings          2076
#define cmdidCallBrowser16Settings          2077

#define cmdidCallBrowser1SortAlpha          2078
#define cmdidCallBrowser2SortAlpha          2079
#define cmdidCallBrowser3SortAlpha          2080
#define cmdidCallBrowser4SortAlpha          2081
#define cmdidCallBrowser5SortAlpha          2082
#define cmdidCallBrowser6SortAlpha          2083
#define cmdidCallBrowser7SortAlpha          2084
#define cmdidCallBrowser8SortAlpha          2085
#define cmdidCallBrowser9SortAlpha          2086
#define cmdidCallBrowser10SortAlpha         2087
#define cmdidCallBrowser11SortAlpha         2088
#define cmdidCallBrowser12SortAlpha         2089
#define cmdidCallBrowser13SortAlpha         2090
#define cmdidCallBrowser14SortAlpha         2091
#define cmdidCallBrowser15SortAlpha         2092
#define cmdidCallBrowser16SortAlpha         2093

#define cmdidCallBrowser1SortAccess         2094
#define cmdidCallBrowser2SortAccess         2095
#define cmdidCallBrowser3SortAccess         2096
#define cmdidCallBrowser4SortAccess         2097
#define cmdidCallBrowser5SortAccess         2098
#define cmdidCallBrowser6SortAccess         2099
#define cmdidCallBrowser7SortAccess         2100
#define cmdidCallBrowser8SortAccess         2101
#define cmdidCallBrowser9SortAccess         2102
#define cmdidCallBrowser10SortAccess        2103
#define cmdidCallBrowser11SortAccess        2104
#define cmdidCallBrowser12SortAccess        2105
#define cmdidCallBrowser13SortAccess        2106
#define cmdidCallBrowser14SortAccess        2107
#define cmdidCallBrowser15SortAccess        2108
#define cmdidCallBrowser16SortAccess        2109

#define cmdidCallBrowser1                   2121
#define cmdidCallBrowser2                   2122
#define cmdidCallBrowser3                   2123
#define cmdidCallBrowser4                   2124
#define cmdidCallBrowser5                   2125
#define cmdidCallBrowser6                   2126
#define cmdidCallBrowser7                   2127
#define cmdidCallBrowser8                   2128
#define cmdidCallBrowser9                   2129
#define cmdidCallBrowser10                  2130
#define cmdidCallBrowser11                  2131
#define cmdidCallBrowser12                  2132
#define cmdidCallBrowser13                  2133
#define cmdidCallBrowser14                  2134
#define cmdidCallBrowser15                  2135
#define cmdidCallBrowser16                  2136
#define cmdidCallBrowser17                  2137

// Closed file undo
#define cmdidGlobalUndo                     2138
#define cmdidGlobalRedo                     2139

// Call Browser Commands (No UI, Command window only).
#define cmdidCallBrowserShowCallsToCmd      2140
#define cmdidCallBrowserShowCallsFromCmd    2141
#define cmdidCallBrowserShowNewCallsToCmd   2142
#define cmdidCallBrowserShowNewCallsFromCmd 2143

#define cmdidCallBrowser1Search             2145
#define cmdidCallBrowser2Search             2146
#define cmdidCallBrowser3Search             2147
#define cmdidCallBrowser4Search             2148
#define cmdidCallBrowser5Search             2149
#define cmdidCallBrowser6Search             2150
#define cmdidCallBrowser7Search             2151
#define cmdidCallBrowser8Search             2152
#define cmdidCallBrowser9Search             2153
#define cmdidCallBrowser10Search            2154
#define cmdidCallBrowser11Search            2155
#define cmdidCallBrowser12Search            2156
#define cmdidCallBrowser13Search            2157
#define cmdidCallBrowser14Search            2158
#define cmdidCallBrowser15Search            2159
#define cmdidCallBrowser16Search            2160

#define cmdidCallBrowser1Refresh            2161
#define cmdidCallBrowser2Refresh            2162
#define cmdidCallBrowser3Refresh            2163
#define cmdidCallBrowser4Refresh            2164
#define cmdidCallBrowser5Refresh            2165
#define cmdidCallBrowser6Refresh            2166
#define cmdidCallBrowser7Refresh            2167
#define cmdidCallBrowser8Refresh            2168
#define cmdidCallBrowser9Refresh            2169
#define cmdidCallBrowser10Refresh           2170
#define cmdidCallBrowser11Refresh           2171
#define cmdidCallBrowser12Refresh           2172
#define cmdidCallBrowser13Refresh           2173
#define cmdidCallBrowser14Refresh           2174
#define cmdidCallBrowser15Refresh           2175
#define cmdidCallBrowser16Refresh           2176

#define cmdidCallBrowser1SearchCombo        2180
#define cmdidCallBrowser2SearchCombo        2181
#define cmdidCallBrowser3SearchCombo        2182
#define cmdidCallBrowser4SearchCombo        2183
#define cmdidCallBrowser5SearchCombo        2184
#define cmdidCallBrowser6SearchCombo        2185
#define cmdidCallBrowser7SearchCombo        2186
#define cmdidCallBrowser8SearchCombo        2187
#define cmdidCallBrowser9SearchCombo        2188
#define cmdidCallBrowser10SearchCombo       2189
#define cmdidCallBrowser11SearchCombo       2190
#define cmdidCallBrowser12SearchCombo       2191
#define cmdidCallBrowser13SearchCombo       2192
#define cmdidCallBrowser14SearchCombo       2193
#define cmdidCallBrowser15SearchCombo       2194
#define cmdidCallBrowser16SearchCombo       2195

// Callbrowser SearchComboList commands start with  2215

// Task List

#define cmdidTaskListProviderCombo          2200
#define cmdidTaskListProviderComboList      2201

// User Task toolbar commands
#define cmdidCreateUserTask                 2202

// Error List

// Error List toolbar commands
#define cmdidErrorListShowErrors            2210
#define cmdidErrorListShowWarnings          2211
#define cmdidErrorListShowMessages          2212

// Product activation (registration)
#define cmdidRegistration					2214


// Callbrowser SearchComboList commands
#define cmdidCallBrowser1SearchComboList    2215
#define cmdidCallBrowser2SearchComboList    2216
#define cmdidCallBrowser3SearchComboList    2217
#define cmdidCallBrowser4SearchComboList    2218
#define cmdidCallBrowser5SearchComboList    2219
#define cmdidCallBrowser6SearchComboList    2220
#define cmdidCallBrowser7SearchComboList    2221
#define cmdidCallBrowser8SearchComboList    2222
#define cmdidCallBrowser9SearchComboList    2223
#define cmdidCallBrowser10SearchComboList   2224
#define cmdidCallBrowser11SearchComboList   2225
#define cmdidCallBrowser12SearchComboList   2226
#define cmdidCallBrowser13SearchComboList   2227
#define cmdidCallBrowser14SearchComboList   2228
#define cmdidCallBrowser15SearchComboList   2229
#define cmdidCallBrowser16SearchComboList   2230


//Snippet window buttons
#define cmdidSnippetProp                    2240
#define cmdidSnippetRef                     2241
#define cmdidSnippetRepl                    2242

//Start Page Command:
#define cmdidStartPage                      2245

// More editor commands
#define cmdidEditorLineFirstColumn          2250
#define cmdidEditorLineFirstColumnExtend    2251

// Server Explorer Menu commands
#define cmdid_SE_ServerExplorer             2260
#define cmdid_SE_DataExplorer               2261

// Commands for Floating, Docking and Hiding documents
#define cmdidDocumentFloat                  2270
#define cmdidDocumentDock                   2271

// Call hierarchy
#define cmdidContextMenuViewCallHierarchy           2301

#define cmdidToggleConsumeFirstMode         2303

// Highlight References commands
#define cmdidNextHighlightedReference       2400
#define cmdidPreviousHighlightedReference   2401

//
// Shareable commands from the VC resource editor (Ribbon editor toolbar)
//
#define ECMD_TESTRIBBON                     2504
#define ECMD_RIBBON_VM                      2505
#define ECMD_RIBBON_VM_GET_LIST             2506
#define ECMD_RIBBON_ITEMS                   2507
#define ECMD_RIBBON_BUTTONS                 2508


//////////////////////////////////////////////////////////////////
//
// The following commands form CMDSETID_StandardCommandSet10.
// NOTE that all these commands are shareable and may be used
// in any appropriate menu.
//
//////////////////////////////////////////////////////////////////


//The command that returns all shell toolbars sorted lexographically by their text
//
// NOTE:  The range between cmdidDynamicToolBarListFirst and cmdidDynamicToolBarListLast is reserved
//        for the dynamic toolbar list.  Do not use command IDs in this range.
#define cmdidDynamicToolBarListFirst 1
#define cmdidDynamicToolBarListLast 300

// Command for dropping window frame docking menu
#define cmdidWindowFrameDockMenu     500

//////////////////////////////////////////////////////////////////
//
// Command ids for navigate backward submenus. These replaces cmdidShellNavigate* commands
//
// There must be 33 ids between each one since these are dynamic start items and each one 
// can have up to 32 items.
//
//////////////////////////////////////////////////////////////////

#define cmdidShellNavigate1First         1000
#define cmdidShellNavigate2First         1033
#define cmdidShellNavigate3First         1066
#define cmdidShellNavigate4First         1099
#define cmdidShellNavigate5First         1132
#define cmdidShellNavigate6First         1165
#define cmdidShellNavigate7First         1198
#define cmdidShellNavigate8First         1231
#define cmdidShellNavigate9First         1264
#define cmdidShellNavigate10First         1297
#define cmdidShellNavigate11First         1330
#define cmdidShellNavigate12First         1363
#define cmdidShellNavigate13First         1396
#define cmdidShellNavigate14First         1429
#define cmdidShellNavigate15First         1462
#define cmdidShellNavigate16First         1495
#define cmdidShellNavigate17First         1528
#define cmdidShellNavigate18First         1561
#define cmdidShellNavigate19First         1594
#define cmdidShellNavigate20First         1627
#define cmdidShellNavigate21First         1660
#define cmdidShellNavigate22First         1693
#define cmdidShellNavigate23First         1726
#define cmdidShellNavigate24First         1759
#define cmdidShellNavigate25First         1792
#define cmdidShellNavigate26First         1825
#define cmdidShellNavigate27First         1858
#define cmdidShellNavigate28First         1891
#define cmdidShellNavigate29First         1924
#define cmdidShellNavigate30First         1957
#define cmdidShellNavigate31First         1990
#define cmdidShellNavigate32First         2023
#define cmdidShellNavigateLast            2055   // last command in this series

// Command ID for ForceGC
#define cmdidShellForceGC                 2090

//
// Command ids for global zoom operations
//
#define cmdidViewZoomIn                   2100
#define cmdidViewZoomOut                  2101

// More outlining commands
#define ECMD_OUTLN_EXPAND_ALL             2500
#define ECMD_OUTLN_COLLAPSE_ALL           2501
#define ECMD_OUTLN_EXPAND_CURRENT         2502
#define ECMD_OUTLN_COLLAPSE_CURRENT       2503

// Command ID for Extension Manager command
#define cmdidExtensionManager             3000

//////////////////////////////////////////////////////////////////
//
// End CMDSETID_StandardCommandSet10 commands.
//
//////////////////////////////////////////////////////////////////





//////////////////////////////////////////////////////////////////
//
// The following commands form guidDataCmdId.
// NOTE that all these commands are shareable and may be used
// in any appropriate menu.
//
//////////////////////////////////////////////////////////////////
#define icmdDesign                  0x3000      // design command for project items
#define icmdDesignOn                0x3001      // design on... command for project items

#define icmdSEDesign                0x3003      // design command for the SE side
#define icmdNewDiagram              0x3004
#define icmdNewTable                0x3006

#define icmdNewDBItem               0x300E
#define icmdNewTrigger              0x3010

#define icmdDebug                   0x3012
#define icmdNewProcedure            0x3013
#define icmdNewQuery                0x3014
#define icmdRefreshLocal            0x3015

#define icmdDbAddDataConnection         0x3017
#define icmdDBDefDBRef              0x3018
#define icmdRunCmd                  0x3019
#define icmdRunOn                   0x301A
#define icmdidNewDBRef              0x301B
#define icmdidSetAsDef              0x301C
#define icmdidCreateCmdFile         0x301D
#define icmdCancel                  0x301E

#define icmdNewDatabase             0x3020
#define icmdNewUser                 0x3021
#define icmdNewRole                 0x3022
#define icmdChangeLogin             0x3023
#define icmdNewView                 0x3024
#define icmdModifyConnection        0x3025
#define icmdDisconnect              0x3026
#define icmdCopyScript              0x3027
#define icmdAddSCC                  0x3028
#define icmdRemoveSCC               0x3029
#define icmdGetLatest               0x3030
#define icmdCheckOut                0x3031
#define icmdCheckIn                 0x3032
#define icmdUndoCheckOut            0x3033
#define icmdAddItemSCC              0x3034
#define icmdNewPackageSpec          0x3035
#define icmdNewPackageBody          0x3036
#define icmdInsertSQL               0x3037
#define icmdRunSelection            0x3038
#define icmdUpdateScript            0x3039
#define icmdCreateScript            0x303A  // to be used by db project side
#define icmdSECreateScript          0x303B  // to be used by SE side as opposed to db project side
#define icmdNewScript               0x303C
#define icmdNewFunction             0x303D
#define icmdNewTableFunction        0x303E
#define icmdNewInlineFunction       0x303F

#define icmdAddDiagram              0x3040
#define icmdAddTable                0x3041
#define icmdAddSynonym              0x3042
#define icmdAddView                 0x3043
#define icmdAddProcedure            0x3044
#define icmdAddFunction             0x3045
#define icmdAddTableFunction        0x3046
#define icmdAddInlineFunction       0x3047
#define icmdAddPkgSpec              0x3048
#define icmdAddPkgBody              0x3049
#define icmdAddTrigger              0x304A
#define icmdExportData              0x304B

#define icmdDbnsVcsAdd              0x304C
#define icmdDbnsVcsRemove           0x304D
#define icmdDbnsVcsCheckout         0x304E
#define icmdDbnsVcsUndoCheckout     0x304F
#define icmdDbnsVcsCheckin          0x3050

#define icmdSERetrieveData          0x3060
#define icmdSEEditTextObject        0x3061
#define icmdSERun                   0x3062  // to be used by SE side as opposed to db project side
#define icmdSERunSelection          0x3063  // to be used by SE side as opposed to db project side
#define icmdDesignSQLBlock          0x3064

#define icmdRegisterSQLInstance     0x3065
#define icmdUnregisterSQLInstance   0x3066

/////////////////////////////////////////////////////////
//
// Command Windows submenu commands 0x31xx
//
//

// It would be nice to make the 3 commands below
// group with the new related commands in VS 2005
// but there are hard coded references to the original
// values above.
// Modifying the values above to those below
// would require changes to those references
// (in src\vsdesigner\..., and elsewhere)
// #define cmdidCommandWindow              0x3100
// #define cmdidCommandWindowMarkMode      0x3101
// #define cmdidLogCommandWindow       0x3102
#define cmdidCommandWindowSaveScript    0x3106
#define cmdidCommandWindowRunScript     0x3107
#define cmdidCommandWindowCursorUp      0x3108
#define cmdidCommandWindowCursorDown    0x3109
#define cmdidCommandWindowCursorLeft    0x310A
#define cmdidCommandWindowCursorRight   0x310B
#define cmdidCommandWindowHistoryUp     0x310C
#define cmdidCommandWindowHistoryDown   0x310D


// Command ids reserved for data driven implementation of data explorer.
// used under guidDataCmdId


// from datamenu.h
#define icmdidCmdDTStart					   0x3500
#define icmdidCmdHeirarchyView0                0x3610
#define icmdidCmdHeirarchyView1                0x3611
#define icmdidCmdHeirarchyView2                0x3612
#define icmdidCmdHeirarchyView3                0x3613
#define icmdidCmdHeirarchyView4                0x3614
#define icmdidCmdHeirarchyView5                0x3615
#define icmdidCmdHeirarchyView6                0x3616
#define icmdidCmdHeirarchyView7                0x3617
#define icmdidCmdHeirarchyView8                0x3618

#define icmdidCmdModify                        0x3620
#define icmdidCmdClose                        0x3621
#define icmdidCmdDTLast                        0x36FF




// end of Command Windows submenu commands


//////////////////////////////////////////////////////////////////
//
// The following commands form guidDavDataCmdId.
// NOTE that all these commands are shareable and may be used
// in any appropriate menu.
//
//////////////////////////////////////////////////////////////////
#define    cmdidAddRelatedTables            0x0001
#define cmdidLayoutDiagram                0x0002
#define cmdidLayoutSelection            0x0003
#define cmdidInsertColumn                0x0004
#define cmdidDeleteColumn                0x0005
#define cmdidNewTextAnnotation            0x0006
#define cmdidShowRelLabels                0x0007
#define cmdidViewPageBreaks                0x0008
#define cmdidRecalcPageBreaks            0x0009
#define cmdidViewUserDefined            0x000a
#define cmdidGenerateQuery                0x000b
#define cmdidDeleteFromDB                0x000c
#define cmdidAutoSize                    0x000d
#define cmdidEditViewUserDefined        0x000e
#define cmdidSetAnnotationFont            0x000f
#define cmdidZoomPercent200                0x0010
#define cmdidZoomPercent150                0x0011
#define cmdidZoomPercent100                0x0012
#define cmdidZoomPercent75                0x0013
#define cmdidZoomPercent50                0x0014
#define cmdidZoomPercent25                0x0015
#define cmdidZoomPercent10                0x0016
#define cmdidZoomPercentSelection        0x0017
#define cmdidZoomPercentFit                0x0018
#define cmdidInsertQBERow                0x0019
#define cmdidInsertCriteria                0x0020
#define cmdidAddTableView                0x0021
#define cmdidManageTriggers                0x0022
#define cmdidManagePermissions            0x0023
#define cmdidViewDependencies            0x0024
#define cmdidGenerateSQLScript            0x0025
#define cmdidVerifySQLSilent            0x0026
#define cmdidAddTableViewForQRY            0x0027
#define cmdidManageIndexesForQRY        0x0028
#define cmdidViewFieldListQry            0x0029
#define cmdidViewCollapsedQry            0x002a
#define cmdidCopyDiagram                0x002b
#define cmdidRemoveFromDiagram          0x0033
// defined in davmenu.h
// cmdidQryAddCTEBasic                    0x002c
// cmdidQryAddCTERecursive                0x002d
// cmdidQryAddCTEMerged                    0x002e
// cmdidQryAddDerivedTable                0x002f
// cmdidQryNavigate                        0x0030
// cmdidQryClear                        0x0031
// cmdidQryMerge                        0x0032

// Emacs editor emulator commands. They are in their
// own group, guidEmacsCommandGroup, so they won't clash
#define cmdidEmacsCharLeft                    1
#define cmdidEmacsCharRight                   2
#define cmdidEmacsLineUp                      3
#define cmdidEmacsLineDown                    4
#define cmdidEmacsLineEnd                     5
#define cmdidEmacsHome                        6
#define cmdidEmacsEnd                         7
#define cmdidEmacsDocumentStart               8
#define cmdidEmacsWordLeft                    9
#define cmdidEmacsWordRight                  10
#define cmdidEmacsGoto                       11
#define cmdidEmacsWindowScrollUp             12
#define cmdidEmacsWindowScrollDown           13
#define cmdidEmacsWindowScrollToCenter       14
#define cmdidEmacsWindowStart                15
#define cmdidEmacsWindowEnd                  16
#define cmdidEmacsWindowLineToTop            17
#define cmdidEmacsWindowSplitVertical        18
#define cmdidEmacsWindowOther                19
#define cmdidEmacsWindowCloseOther           20
#define cmdidEmacsReturn                     21
#define cmdidEmacsReturnAndIndent            22
#define cmdidEmacsLineOpen                   23
#define cmdidEmacsCharTranspose              24
#define cmdidEmacsWordTranspose              25
//#define cmdidEmacsBackspaceUntabify        26
//#define cmdidEmacsBackspace                27
//#define cmdidEmacsDelete                   28
#define cmdidEmacsWordUpperCase              29
#define cmdidEmacsWordLowerCase              30
#define cmdidEmacsWordCapitalize             31
#define cmdidEmacsWordDeleteToEnd            32
#define cmdidEmacsWordDeleteToStart          33
#define cmdidEmacsLineCut                    34
//#define cmdidEmacsCutSelection             35
//#define cmdidEmacsPaste                    36
#define cmdidEmacsPasteRotate                37
//#define cmdidEmacsCopySelection            38
#define cmdidEmacsSetMark                    39
#define cmdidEmacsPopMark                    40
#define cmdidEmacsSwapPointAndMark           41
#define cmdidEmacsDeleteSelection            42
#define cmdidEmacsFileOpen                   43
#define cmdidEmacsFileSave                   44
#define cmdidEmacsFileSaveAs                 45
#define cmdidEmacsFileSaveSome               46
#define cmdidEmacsSearchIncremental          47
#define cmdidEmacsSearchIncrementalBack      48
#define cmdidEmacsFindReplace                49
//#define cmdidEmacsUndo                     50
#define cmdidEmacsQuit                       51
#define cmdidEmacsUniversalArgument          52
#define cmdidEmacsExtendedCommand            53
#define cmdidEmacsStartKbdMacro              54
#define cmdidEmacsEndKbdMacro                55
#define cmdidEmacsExecuteKbdMacro            56
//#define cmdidEmacsIndentLine               57
#define cmdidEmacsQuotedInsert               58
#define cmdidEmacsActivateRegion             59

// Brief editor emulator commands. They are in their
// own group, guidBriefCommandGroup, so they won't clash
//#define cmdidBriefCharLeft                      1
//#define cmdidBriefCharRight                     2
//#define cmdidBriefLineUp                        3
//#define cmdidBriefLineDown                      4
#define cmdidBriefSelectColumn                    5
#define cmdidBriefLineIndent                      7
#define cmdidBriefBookmarks                       8
#define cmdidBriefSelectLine                      9
//#define cmdidBriefSelectionLowercase           10
#define cmdidBriefSelectChar                     11
#define cmdidBriefSelectCharInclusive            12
#define cmdidBriefLineUnindent                   13
#define cmdidBriefFilePrint                      14
#define cmdidBriefSelectSwapAnchor               15
//#define cmdidBriefSelectionUppercase           16
//#define cmdidBriefFileClose                    17
//#define cmdidBriefFileOpen
//#define cmdidBriefWindowNext                   18
//#define cmdidBriefWindowPrevious               19
#define cmdidBriefInsertFile                     20
//#define cmdidBriefHome                         21
//#define cmdidBriefDocumentEnd                  22
//#define cmdidBriefEnd                          23
//#define cmdidBriefWindowEnd                    24
#define cmdidBriefGoTo                           25
#define cmdidBriefWindowLeftEdge                 26
#define cmdidBriefWordRight                      27
//#define cmdidBriefPageDown                     28
//#define cmdidBriefPageUp                       29
#define cmdidBriefWordLeft                       30
#define cmdidBriefWindowRightEdge                31
#define cmdidBriefWindowScrollUp                 32
#define cmdidBriefWindowScrollDown               33
#define cmdidBriefWindowStart                    34
#define cmdidBriefLineDelete                     35
#define cmdidBriefWordDeleteToEnd                36
#define cmdidBriefWordDeleteToStart              37
#define cmdidBriefLineDeleteToStart              38
#define cmdidBriefLineDeleteToEnd                39
//#define cmdidBriefToggleOvertype               40
#define cmdidBriefLineOpenBelow                  41
#define cmdidBriefInsertQuoted                   42
#define cmdidBriefFileExit                       43
#define cmdidBriefFileSave                       44
#define cmdidBriefFileSaveAllExit                45
//#define cmdidBriefCopy                         46
//#define cmdidBriefCut                          47
//#define cmdidBriefPaste                        48
#define cmdidBriefFindToggleCaseSensitivity      49
#define cmdidBriefSearchIncremental              50
#define cmdidBriefFindToggleRegExpr              51
#define cmdidBriefFindRepeat                     52
#define cmdidBriefFindPrev                       53
#define cmdidBriefFind                           54
#define cmdidBriefFindReplace                    55
#define cmdidBriefBrowse                         56
#define cmdidBriefGoToNextErrorTag               57
#define cmdidBriefSetRepeatCount                 58
//#define cmdidBriefUndo                         59
//#define cmdidBriefRedo                         60
#define cmdidBriefWindowScrollToCenter           61
#define cmdidBriefWindowSwitchPane               62
#define cmdidBriefWindowSplit                    63
//#define cmdidBriefWindowDelete                 64
#define cmdidBriefWindowScrollToBottom           65
#define cmdidBriefWindowScrollToTop              66
#define cmdidBriefWindowMaximize                 67
#define cmdidBriefBackspace                      68
//#define cmdidBriefDelete                       69
#define cmdidBriefReturn                         70
#define cmdidBriefEscape                         71
#define cmdidBriefBookmarkDrop0                  72
#define cmdidBriefBookmarkDrop1                  73
#define cmdidBriefBookmarkDrop2                  74
#define cmdidBriefBookmarkDrop3                  75
#define cmdidBriefBookmarkDrop4                  76
#define cmdidBriefBookmarkDrop5                  77
#define cmdidBriefBookmarkDrop6                  78
#define cmdidBriefBookmarkDrop7                  79
#define cmdidBriefBookmarkDrop8                  80
#define cmdidBriefBookmarkDrop9                  81

//////////////////////////////////////////////////////////////////
//
// The following commands form Yukon projects.
//
//////////////////////////////////////////////////////////////////
#define cmdidAddNewUDF                  0x0101
#define cmdidAddNewSProc                0x0102
#define cmdidAddNewAggregarte           0x0103
#define cmdidAddNewTrigger              0x0104
#define cmdidAddNewUDT                  0x0105
#define cmdidSetDefaultDebugScript      0x0106
#define cmdidStartDebugScript           0x0107
#define cmdidAddNewDebugScript          0x0108

#define cmdidPromptDatabaseConnection   0x0201


//---------------------------------------------------

//
// Shareable commands for VS Enterprise team
//
#define cmdidAddToFavorites             0x0001
#define cmdidAddNewFolder               0x0002
#define cmdidStopTeamExplorerRefresh    0x0003
#define cmdidAddDataboundMpp            0x0004
#define cmdidAddDataboundXls            0x0005

// End of shareable commands for VS Enterprise team


//////////////////////////////////////////////////////////////////
//
// This command range is private to the EzMDI command set
//
//////////////////////////////////////////////////////////////////

#define cmdidEzMDIFile1                      0x0001

//////////////////////////////////////////////////////////////////
//
// Command ids for Server Explorer commands (guid_SE_CommandID group)
//
//////////////////////////////////////////////////////////////////

#define cmdid_SE_ToolbarRefresh                     0x03004
#define cmdid_SE_ToolbarStopRefresh                 0x03005
#define cmdid_SE_AddToForm                          0x03009

//////////////////////////////////////////////////////////////////
//
// Command ids for task list / error list commands (CLSID_VsTaskListPackage group)
//
//////////////////////////////////////////////////////////////////

// These were used in Everett, but are no longer applicable in Whidbey.  I don't want to re-use
// them because it could cause unexpected behavior for third-party code which sends these
// so I'll just comment them out.

//#define cmdidTaskListFilterByCategoryUser		359
//#define cmdidTaskListFilterByCategoryShortcut		360
//#define cmdidTaskListFilterByCategoryHTML		361
//#define cmdidTaskListFilterByCurrentFile		362
//#define cmdidTaskListFilterByChecked			363
//#define cmdidTaskListFilterByUnchecked			364
//#define cmdidTaskListSortByDescription			365
//#define cmdidTaskListSortByChecked			366
//#define cmdidTaskListCustomView1        678
//#define cmdidTaskListCustomView2        679
//#define cmdidTaskListCustomView3        680
//#define cmdidTaskListCustomView4        681
//#define cmdidTaskListCustomView5        682
//#define cmdidTaskListCustomView6        683
//#define cmdidTaskListCustomView7        684
//#define cmdidTaskListCustomView8        685
//#define cmdidTaskListCustomView9        686
//#define cmdidTaskListCustomView10       687
//#define cmdidTaskListCustomView11       688
//#define cmdidTaskListCustomView12       689
//#define cmdidTaskListCustomView13       690
//#define cmdidTaskListCustomView14       691
//#define cmdidTaskListCustomView15       692
//#define cmdidTaskListCustomView16       693
//#define cmdidTaskListCustomView17       694
//#define cmdidTaskListCustomView18       695
//#define cmdidTaskListCustomView19       696
//#define cmdidTaskListCustomView20       697
//#define cmdidTaskListCustomView21       698
//#define cmdidTaskListCustomView22       699
//#define cmdidTaskListCustomView23       700
//#define cmdidTaskListCustomView24       701
//#define cmdidTaskListCustomView25       702
//#define cmdidTaskListCustomView26       703
//#define cmdidTaskListCustomView27       704
//#define cmdidTaskListCustomView28       705
//#define cmdidTaskListCustomView29       706
//#define cmdidTaskListCustomView30       707
//#define cmdidTaskListCustomView31       708
//#define cmdidTaskListCustomView32       709
//#define cmdidTaskListCustomView33       710
//#define cmdidTaskListCustomView34       711
//#define cmdidTaskListCustomView35       712
//#define cmdidTaskListCustomView36       713
//#define cmdidTaskListCustomView37       714
//#define cmdidTaskListCustomView38       715
//#define cmdidTaskListCustomView39       716
//#define cmdidTaskListCustomView40       717
//#define cmdidTaskListCustomView41       718
//#define cmdidTaskListCustomView42       719
//#define cmdidTaskListCustomView43       720
//#define cmdidTaskListCustomView44       721
//#define cmdidTaskListCustomView45       722
//#define cmdidTaskListCustomView46       723
//#define cmdidTaskListCustomView47       724
//#define cmdidTaskListCustomView48       725
//#define cmdidTaskListCustomView49       726
//#define cmdidTaskListCustomView50       727 //not used on purpose, ends the list

// Pre-Whidbey commands

#define cmdidTaskListNextError      357
#define cmdidTaskListPrevError      358
#define cmdidTaskListTaskHelp       598

// Whidbey commands

#define cmdidErrorListNextError     1
#define cmdidErrorListPrevError     2

#define cmdidTaskListColumnToggle1  3
#define cmdidTaskListColumnToggle2  4
#define cmdidTaskListColumnToggle3  5
#define cmdidTaskListColumnToggle4  6
#define cmdidTaskListColumnToggle5  7
#define cmdidTaskListColumnToggle6  8
#define cmdidTaskListColumnToggle7  9
#define cmdidTaskListColumnToggle8  10
#define cmdidTaskListColumnToggle9  11
#define cmdidTaskListColumnToggle10 12
#define cmdidTaskListColumnToggle11 13
#define cmdidTaskListColumnToggle12 14
#define cmdidTaskListColumnToggle13 15
#define cmdidTaskListColumnToggle14 16
#define cmdidTaskListColumnToggle15 17
#define cmdidTaskListColumnToggle16 18
#define cmdidTaskListColumnToggle17 19
#define cmdidTaskListColumnToggle18 20
#define cmdidTaskListColumnToggle19 21
#define cmdidTaskListColumnToggle20 22
#define cmdidTaskListColumnToggle21 23
#define cmdidTaskListColumnToggle22 24
#define cmdidTaskListColumnToggle23 25
#define cmdidTaskListColumnToggle24 26
#define cmdidTaskListColumnToggle25 27

// Leave some space for the future, just in case...since the handling of the
// cmdidTaskListColumnToggle* commands requires them to be in a contiguous range.

#define cmdidTaskListColumnSort1    200
#define cmdidTaskListColumnSort2    201
#define cmdidTaskListColumnSort3    202
#define cmdidTaskListColumnSort4    203
#define cmdidTaskListColumnSort5    204
#define cmdidTaskListColumnSort6    205
#define cmdidTaskListColumnSort7    206
#define cmdidTaskListColumnSort8    207
#define cmdidTaskListColumnSort9    208
#define cmdidTaskListColumnSort10   209
#define cmdidTaskListColumnSort11   210
#define cmdidTaskListColumnSort12   211
#define cmdidTaskListColumnSort13   212
#define cmdidTaskListColumnSort14   213
#define cmdidTaskListColumnSort15   214
#define cmdidTaskListColumnSort16   215
#define cmdidTaskListColumnSort17   216
#define cmdidTaskListColumnSort18   217
#define cmdidTaskListColumnSort19   218
#define cmdidTaskListColumnSort20   219
#define cmdidTaskListColumnSort21   220
#define cmdidTaskListColumnSort22   221
#define cmdidTaskListColumnSort23   222
#define cmdidTaskListColumnSort24   223
#define cmdidTaskListColumnSort25   224

#endif //_STDIDCMD_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\textfind90.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for textfind90.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __textfind90_h__
#define __textfind90_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IVsFindCancelDialog2_FWD_DEFINED__
#define __IVsFindCancelDialog2_FWD_DEFINED__
typedef interface IVsFindCancelDialog2 IVsFindCancelDialog2;
#endif 	/* __IVsFindCancelDialog2_FWD_DEFINED__ */


/* header files for imported files */
#include "textfind2.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_textfind90_0000_0000 */
/* [local] */ 

#pragma once


extern RPC_IF_HANDLE __MIDL_itf_textfind90_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_textfind90_0000_0000_v0_0_s_ifspec;

#ifndef __IVsFindCancelDialog2_INTERFACE_DEFINED__
#define __IVsFindCancelDialog2_INTERFACE_DEFINED__

/* interface IVsFindCancelDialog2 */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsFindCancelDialog2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0C8E8E61-71AF-41dd-B213-B98D042F07FE")
    IVsFindCancelDialog2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE DialogAlreadyLaunched( 
            /* [out] */ __RPC__out BOOL *pfLaunched) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFindCancelDialog2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFindCancelDialog2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFindCancelDialog2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFindCancelDialog2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *DialogAlreadyLaunched )( 
            IVsFindCancelDialog2 * This,
            /* [out] */ __RPC__out BOOL *pfLaunched);
        
        END_INTERFACE
    } IVsFindCancelDialog2Vtbl;

    interface IVsFindCancelDialog2
    {
        CONST_VTBL struct IVsFindCancelDialog2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFindCancelDialog2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFindCancelDialog2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFindCancelDialog2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFindCancelDialog2_DialogAlreadyLaunched(This,pfLaunched)	\
    ( (This)->lpVtbl -> DialogAlreadyLaunched(This,pfLaunched) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFindCancelDialog2_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\textmgr90.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for textmgr90.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __textmgr90_h__
#define __textmgr90_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IVsLanguageDebugInfoRemap_FWD_DEFINED__
#define __IVsLanguageDebugInfoRemap_FWD_DEFINED__
typedef interface IVsLanguageDebugInfoRemap IVsLanguageDebugInfoRemap;
#endif 	/* __IVsLanguageDebugInfoRemap_FWD_DEFINED__ */


#ifndef __IVsHiddenColorableItemInTextEditorCategory_FWD_DEFINED__
#define __IVsHiddenColorableItemInTextEditorCategory_FWD_DEFINED__
typedef interface IVsHiddenColorableItemInTextEditorCategory IVsHiddenColorableItemInTextEditorCategory;
#endif 	/* __IVsHiddenColorableItemInTextEditorCategory_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_textmgr90_0000_0000 */
/* [local] */ 

#pragma once



extern RPC_IF_HANDLE __MIDL_itf_textmgr90_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_textmgr90_0000_0000_v0_0_s_ifspec;


#ifndef __TextMgr90_LIBRARY_DEFINED__
#define __TextMgr90_LIBRARY_DEFINED__

/* library TextMgr90 */
/* [version][uuid] */ 

typedef 
enum _tag_DATA_OBJECT_RENDER_HINT90
    {	DORH_COPY_IN_SAME_DOC	= 0x20
    } 	DATA_OBJECT_RENDER_HINT90;

typedef 
enum _markerbehaviorflags3
    {	MB_HIDE_IN_FONTCOLOR_TEXTEDITOR_CATEGORY	= 0x200
    } 	MARKERBEHAVIORFLAGS3;

typedef 
enum _CompletionStatusFlags2
    {	CSF_DONTSELECTONTAB	= 0x100
    } 	UpdateCompletionFlags2;


EXTERN_C const IID LIBID_TextMgr90;

#ifndef __IVsLanguageDebugInfoRemap_INTERFACE_DEFINED__
#define __IVsLanguageDebugInfoRemap_INTERFACE_DEFINED__

/* interface IVsLanguageDebugInfoRemap */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IVsLanguageDebugInfoRemap;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7E3FAAE7-F89E-448b-A5EB-C7D73E0685F5")
    IVsLanguageDebugInfoRemap : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RemapBreakpoint( 
            /* [in] */ IUnknown *pUserBreakpointRequest,
            /* [out] */ IUnknown **ppMappedBreakpointRequest) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLanguageDebugInfoRemapVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLanguageDebugInfoRemap * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLanguageDebugInfoRemap * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLanguageDebugInfoRemap * This);
        
        HRESULT ( STDMETHODCALLTYPE *RemapBreakpoint )( 
            IVsLanguageDebugInfoRemap * This,
            /* [in] */ IUnknown *pUserBreakpointRequest,
            /* [out] */ IUnknown **ppMappedBreakpointRequest);
        
        END_INTERFACE
    } IVsLanguageDebugInfoRemapVtbl;

    interface IVsLanguageDebugInfoRemap
    {
        CONST_VTBL struct IVsLanguageDebugInfoRemapVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLanguageDebugInfoRemap_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLanguageDebugInfoRemap_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLanguageDebugInfoRemap_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLanguageDebugInfoRemap_RemapBreakpoint(This,pUserBreakpointRequest,ppMappedBreakpointRequest)	\
    ( (This)->lpVtbl -> RemapBreakpoint(This,pUserBreakpointRequest,ppMappedBreakpointRequest) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLanguageDebugInfoRemap_INTERFACE_DEFINED__ */


#ifndef __IVsHiddenColorableItemInTextEditorCategory_INTERFACE_DEFINED__
#define __IVsHiddenColorableItemInTextEditorCategory_INTERFACE_DEFINED__

/* interface IVsHiddenColorableItemInTextEditorCategory */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsHiddenColorableItemInTextEditorCategory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FAE9C935-0DA2-476b-AD3C-D73FB69432D7")
    IVsHiddenColorableItemInTextEditorCategory : public IUnknown
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IVsHiddenColorableItemInTextEditorCategoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsHiddenColorableItemInTextEditorCategory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsHiddenColorableItemInTextEditorCategory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsHiddenColorableItemInTextEditorCategory * This);
        
        END_INTERFACE
    } IVsHiddenColorableItemInTextEditorCategoryVtbl;

    interface IVsHiddenColorableItemInTextEditorCategory
    {
        CONST_VTBL struct IVsHiddenColorableItemInTextEditorCategoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsHiddenColorableItemInTextEditorCategory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsHiddenColorableItemInTextEditorCategory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsHiddenColorableItemInTextEditorCategory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsHiddenColorableItemInTextEditorCategory_INTERFACE_DEFINED__ */

#endif /* __TextMgr90_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\textmgr2.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for textmgr2.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __textmgr2_h__
#define __textmgr2_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __VsExpansionManager_FWD_DEFINED__
#define __VsExpansionManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsExpansionManager VsExpansionManager;
#else
typedef struct VsExpansionManager VsExpansionManager;
#endif /* __cplusplus */

#endif 	/* __VsExpansionManager_FWD_DEFINED__ */


#ifndef __VsExpansionPackage_FWD_DEFINED__
#define __VsExpansionPackage_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsExpansionPackage VsExpansionPackage;
#else
typedef struct VsExpansionPackage VsExpansionPackage;
#endif /* __cplusplus */

#endif 	/* __VsExpansionPackage_FWD_DEFINED__ */


#ifndef __IVsBufferExtraFiles_FWD_DEFINED__
#define __IVsBufferExtraFiles_FWD_DEFINED__
typedef interface IVsBufferExtraFiles IVsBufferExtraFiles;
#endif 	/* __IVsBufferExtraFiles_FWD_DEFINED__ */


#ifndef __IVsTextManager2_FWD_DEFINED__
#define __IVsTextManager2_FWD_DEFINED__
typedef interface IVsTextManager2 IVsTextManager2;
#endif 	/* __IVsTextManager2_FWD_DEFINED__ */


#ifndef __IVsInsertionUI_FWD_DEFINED__
#define __IVsInsertionUI_FWD_DEFINED__
typedef interface IVsInsertionUI IVsInsertionUI;
#endif 	/* __IVsInsertionUI_FWD_DEFINED__ */


#ifndef __IVsTextViewEx_FWD_DEFINED__
#define __IVsTextViewEx_FWD_DEFINED__
typedef interface IVsTextViewEx IVsTextViewEx;
#endif 	/* __IVsTextViewEx_FWD_DEFINED__ */


#ifndef __IVsCodeWindowEx_FWD_DEFINED__
#define __IVsCodeWindowEx_FWD_DEFINED__
typedef interface IVsCodeWindowEx IVsCodeWindowEx;
#endif 	/* __IVsCodeWindowEx_FWD_DEFINED__ */


#ifndef __IVsTextManagerEvents2_FWD_DEFINED__
#define __IVsTextManagerEvents2_FWD_DEFINED__
typedef interface IVsTextManagerEvents2 IVsTextManagerEvents2;
#endif 	/* __IVsTextManagerEvents2_FWD_DEFINED__ */


#ifndef __IVsFileExtensionMappingEvents_FWD_DEFINED__
#define __IVsFileExtensionMappingEvents_FWD_DEFINED__
typedef interface IVsFileExtensionMappingEvents IVsFileExtensionMappingEvents;
#endif 	/* __IVsFileExtensionMappingEvents_FWD_DEFINED__ */


#ifndef __IVsAutoOutliningClient_FWD_DEFINED__
#define __IVsAutoOutliningClient_FWD_DEFINED__
typedef interface IVsAutoOutliningClient IVsAutoOutliningClient;
#endif 	/* __IVsAutoOutliningClient_FWD_DEFINED__ */


#ifndef __IVsTextLineMarkerEx_FWD_DEFINED__
#define __IVsTextLineMarkerEx_FWD_DEFINED__
typedef interface IVsTextLineMarkerEx IVsTextLineMarkerEx;
#endif 	/* __IVsTextLineMarkerEx_FWD_DEFINED__ */


#ifndef __IVsTextMarkerClientAdvanced_FWD_DEFINED__
#define __IVsTextMarkerClientAdvanced_FWD_DEFINED__
typedef interface IVsTextMarkerClientAdvanced IVsTextMarkerClientAdvanced;
#endif 	/* __IVsTextMarkerClientAdvanced_FWD_DEFINED__ */


#ifndef __IVsTextMarkerClientEx_FWD_DEFINED__
#define __IVsTextMarkerClientEx_FWD_DEFINED__
typedef interface IVsTextMarkerClientEx IVsTextMarkerClientEx;
#endif 	/* __IVsTextMarkerClientEx_FWD_DEFINED__ */


#ifndef __IVsDropdownBarClientEx_FWD_DEFINED__
#define __IVsDropdownBarClientEx_FWD_DEFINED__
typedef interface IVsDropdownBarClientEx IVsDropdownBarClientEx;
#endif 	/* __IVsDropdownBarClientEx_FWD_DEFINED__ */


#ifndef __IVsHiddenRegionEx_FWD_DEFINED__
#define __IVsHiddenRegionEx_FWD_DEFINED__
typedef interface IVsHiddenRegionEx IVsHiddenRegionEx;
#endif 	/* __IVsHiddenRegionEx_FWD_DEFINED__ */


#ifndef __IVsHiddenTextClientEx_FWD_DEFINED__
#define __IVsHiddenTextClientEx_FWD_DEFINED__
typedef interface IVsHiddenTextClientEx IVsHiddenTextClientEx;
#endif 	/* __IVsHiddenTextClientEx_FWD_DEFINED__ */


#ifndef __IVsHiddenTextSessionEx_FWD_DEFINED__
#define __IVsHiddenTextSessionEx_FWD_DEFINED__
typedef interface IVsHiddenTextSessionEx IVsHiddenTextSessionEx;
#endif 	/* __IVsHiddenTextSessionEx_FWD_DEFINED__ */


#ifndef __IVsAtomicTextProvider_FWD_DEFINED__
#define __IVsAtomicTextProvider_FWD_DEFINED__
typedef interface IVsAtomicTextProvider IVsAtomicTextProvider;
#endif 	/* __IVsAtomicTextProvider_FWD_DEFINED__ */


#ifndef __IVsCompletionSetEx_FWD_DEFINED__
#define __IVsCompletionSetEx_FWD_DEFINED__
typedef interface IVsCompletionSetEx IVsCompletionSetEx;
#endif 	/* __IVsCompletionSetEx_FWD_DEFINED__ */


#ifndef __IVsCompletionSetBuilder_FWD_DEFINED__
#define __IVsCompletionSetBuilder_FWD_DEFINED__
typedef interface IVsCompletionSetBuilder IVsCompletionSetBuilder;
#endif 	/* __IVsCompletionSetBuilder_FWD_DEFINED__ */


#ifndef __IVsSmartTagData_FWD_DEFINED__
#define __IVsSmartTagData_FWD_DEFINED__
typedef interface IVsSmartTagData IVsSmartTagData;
#endif 	/* __IVsSmartTagData_FWD_DEFINED__ */


#ifndef __IVsSmartTagTipWindow_FWD_DEFINED__
#define __IVsSmartTagTipWindow_FWD_DEFINED__
typedef interface IVsSmartTagTipWindow IVsSmartTagTipWindow;
#endif 	/* __IVsSmartTagTipWindow_FWD_DEFINED__ */


#ifndef __VsSmartTagTipWindow_FWD_DEFINED__
#define __VsSmartTagTipWindow_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsSmartTagTipWindow VsSmartTagTipWindow;
#else
typedef struct VsSmartTagTipWindow VsSmartTagTipWindow;
#endif /* __cplusplus */

#endif 	/* __VsSmartTagTipWindow_FWD_DEFINED__ */


#ifndef __IVsMethodDataEx_FWD_DEFINED__
#define __IVsMethodDataEx_FWD_DEFINED__
typedef interface IVsMethodDataEx IVsMethodDataEx;
#endif 	/* __IVsMethodDataEx_FWD_DEFINED__ */


#ifndef __IVsLanguageClipboardOpsEx_FWD_DEFINED__
#define __IVsLanguageClipboardOpsEx_FWD_DEFINED__
typedef interface IVsLanguageClipboardOpsEx IVsLanguageClipboardOpsEx;
#endif 	/* __IVsLanguageClipboardOpsEx_FWD_DEFINED__ */


#ifndef __IVsLanguageDragDropOps_FWD_DEFINED__
#define __IVsLanguageDragDropOps_FWD_DEFINED__
typedef interface IVsLanguageDragDropOps IVsLanguageDragDropOps;
#endif 	/* __IVsLanguageDragDropOps_FWD_DEFINED__ */


#ifndef __IVsLanguageDebugInfo2_FWD_DEFINED__
#define __IVsLanguageDebugInfo2_FWD_DEFINED__
typedef interface IVsLanguageDebugInfo2 IVsLanguageDebugInfo2;
#endif 	/* __IVsLanguageDebugInfo2_FWD_DEFINED__ */


#ifndef __IVsExpansionFunction_FWD_DEFINED__
#define __IVsExpansionFunction_FWD_DEFINED__
typedef interface IVsExpansionFunction IVsExpansionFunction;
#endif 	/* __IVsExpansionFunction_FWD_DEFINED__ */


#ifndef __IVsExpansionClient_FWD_DEFINED__
#define __IVsExpansionClient_FWD_DEFINED__
typedef interface IVsExpansionClient IVsExpansionClient;
#endif 	/* __IVsExpansionClient_FWD_DEFINED__ */


#ifndef __IVsExpansionEnumeration_FWD_DEFINED__
#define __IVsExpansionEnumeration_FWD_DEFINED__
typedef interface IVsExpansionEnumeration IVsExpansionEnumeration;
#endif 	/* __IVsExpansionEnumeration_FWD_DEFINED__ */


#ifndef __IVsExpansionManager_FWD_DEFINED__
#define __IVsExpansionManager_FWD_DEFINED__
typedef interface IVsExpansionManager IVsExpansionManager;
#endif 	/* __IVsExpansionManager_FWD_DEFINED__ */


#ifndef __IVsExpansion_FWD_DEFINED__
#define __IVsExpansion_FWD_DEFINED__
typedef interface IVsExpansion IVsExpansion;
#endif 	/* __IVsExpansion_FWD_DEFINED__ */


#ifndef __IVsExpansionSession_FWD_DEFINED__
#define __IVsExpansionSession_FWD_DEFINED__
typedef interface IVsExpansionSession IVsExpansionSession;
#endif 	/* __IVsExpansionSession_FWD_DEFINED__ */


#ifndef __IVsMethodTipWindow2_FWD_DEFINED__
#define __IVsMethodTipWindow2_FWD_DEFINED__
typedef interface IVsMethodTipWindow2 IVsMethodTipWindow2;
#endif 	/* __IVsMethodTipWindow2_FWD_DEFINED__ */


#ifndef __IVsIntellisenseOptions_FWD_DEFINED__
#define __IVsIntellisenseOptions_FWD_DEFINED__
typedef interface IVsIntellisenseOptions IVsIntellisenseOptions;
#endif 	/* __IVsIntellisenseOptions_FWD_DEFINED__ */


#ifndef __IVsColorizer2_FWD_DEFINED__
#define __IVsColorizer2_FWD_DEFINED__
typedef interface IVsColorizer2 IVsColorizer2;
#endif 	/* __IVsColorizer2_FWD_DEFINED__ */


#ifndef __IVsExpansionEvents_FWD_DEFINED__
#define __IVsExpansionEvents_FWD_DEFINED__
typedef interface IVsExpansionEvents IVsExpansionEvents;
#endif 	/* __IVsExpansionEvents_FWD_DEFINED__ */


#ifndef __IVsLanguageLineIndent_FWD_DEFINED__
#define __IVsLanguageLineIndent_FWD_DEFINED__
typedef interface IVsLanguageLineIndent IVsLanguageLineIndent;
#endif 	/* __IVsLanguageLineIndent_FWD_DEFINED__ */


#ifndef __IVsQueryUndoUnit_FWD_DEFINED__
#define __IVsQueryUndoUnit_FWD_DEFINED__
typedef interface IVsQueryUndoUnit IVsQueryUndoUnit;
#endif 	/* __IVsQueryUndoUnit_FWD_DEFINED__ */


#ifndef __IVsQueryUndoManager_FWD_DEFINED__
#define __IVsQueryUndoManager_FWD_DEFINED__
typedef interface IVsQueryUndoManager IVsQueryUndoManager;
#endif 	/* __IVsQueryUndoManager_FWD_DEFINED__ */


#ifndef __IPersistFileCheckSum_FWD_DEFINED__
#define __IPersistFileCheckSum_FWD_DEFINED__
typedef interface IPersistFileCheckSum IPersistFileCheckSum;
#endif 	/* __IPersistFileCheckSum_FWD_DEFINED__ */


#ifndef __IVsCodePageSelection_FWD_DEFINED__
#define __IVsCodePageSelection_FWD_DEFINED__
typedef interface IVsCodePageSelection IVsCodePageSelection;
#endif 	/* __IVsCodePageSelection_FWD_DEFINED__ */


#ifndef __IVsTextLines2_FWD_DEFINED__
#define __IVsTextLines2_FWD_DEFINED__
typedef interface IVsTextLines2 IVsTextLines2;
#endif 	/* __IVsTextLines2_FWD_DEFINED__ */


#ifndef __IVsTextLayer2_FWD_DEFINED__
#define __IVsTextLayer2_FWD_DEFINED__
typedef interface IVsTextLayer2 IVsTextLayer2;
#endif 	/* __IVsTextLayer2_FWD_DEFINED__ */


#ifndef __IVsTextImage2_FWD_DEFINED__
#define __IVsTextImage2_FWD_DEFINED__
typedef interface IVsTextImage2 IVsTextImage2;
#endif 	/* __IVsTextImage2_FWD_DEFINED__ */


#ifndef __IVsTextStorage2_FWD_DEFINED__
#define __IVsTextStorage2_FWD_DEFINED__
typedef interface IVsTextStorage2 IVsTextStorage2;
#endif 	/* __IVsTextStorage2_FWD_DEFINED__ */


#ifndef __IVsHiColorItem_FWD_DEFINED__
#define __IVsHiColorItem_FWD_DEFINED__
typedef interface IVsHiColorItem IVsHiColorItem;
#endif 	/* __IVsHiColorItem_FWD_DEFINED__ */


#ifndef __IVsTextBufferEx_FWD_DEFINED__
#define __IVsTextBufferEx_FWD_DEFINED__
typedef interface IVsTextBufferEx IVsTextBufferEx;
#endif 	/* __IVsTextBufferEx_FWD_DEFINED__ */


#ifndef __IVsReadOnlyViewNotification_FWD_DEFINED__
#define __IVsReadOnlyViewNotification_FWD_DEFINED__
typedef interface IVsReadOnlyViewNotification IVsReadOnlyViewNotification;
#endif 	/* __IVsReadOnlyViewNotification_FWD_DEFINED__ */


#ifndef __IVsOverrideTextViewAccessibilityState_FWD_DEFINED__
#define __IVsOverrideTextViewAccessibilityState_FWD_DEFINED__
typedef interface IVsOverrideTextViewAccessibilityState IVsOverrideTextViewAccessibilityState;
#endif 	/* __IVsOverrideTextViewAccessibilityState_FWD_DEFINED__ */


#ifndef __IVsCanCoordinatorClipTextSpan_FWD_DEFINED__
#define __IVsCanCoordinatorClipTextSpan_FWD_DEFINED__
typedef interface IVsCanCoordinatorClipTextSpan IVsCanCoordinatorClipTextSpan;
#endif 	/* __IVsCanCoordinatorClipTextSpan_FWD_DEFINED__ */


/* header files for imported files */
#include "IVsQueryEditQuerySave2.h"
#include "IVsQueryEditQuerySave80.h"
#include "msxml.h"
#include "context.h"
#include "textmgr.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_textmgr2_0000_0000 */
/* [local] */ 

#pragma once
typedef long ViewCol;

typedef long CharIndex;

typedef __int64 TEXTADDR;


enum TipSuccesses2
    {	TIP_S_NODEFAULTTIP	= ( ( 4 << 16 )  | 0x5001 ) 
    } ;
typedef 
enum _LINESTYLE2
    {	LI_SMARTTAGFACT	= 5,
	LI_SMARTTAGFACTSIDE	= 6,
	LI_SMARTTAGEPHEM	= 7,
	LI_SMARTTAGEPHEMSIDE	= 8
    } 	LINESTYLE2;

typedef 
enum _markerbehaviorflags2
    {	MB_DONT_DELETE_IF_ZEROLEN	= 0x10,
	MB_INHERIT_FOREGROUND	= 0x20,
	MB_INHERIT_BACKGROUND	= 0x40,
	MB_VIEW_SPECIFIC	= 0x80
    } 	MARKERBEHAVIORFLAGS2;

typedef 
enum _GLDE_FLAGS2
    {	gldeUsePaintView	= 0x40
    } 	GLDE_FLAGS2;

typedef 
enum _MARKERVISUAL2
    {	MV_SMARTTAG	= 0x4000,
	MV_TRACK	= 0x8000,
	MV_ROUNDEDBORDER	= 0x10000,
	MV_BOLDTEXT	= 0x20000,
	MV_DISALLOWBGCHANGE	= 0x40000,
	MV_DISALLOWFGCHANGE	= 0x80000,
	MV_FORCE_CLOSEST_IF_HIDDEN	= 0x100000,
	MV_SELECT_WHOLE_LINE	= 0x200000
    } 	MARKERVISUAL2;

typedef 
enum _ChangeCommitGestureFlags2
    {	CCG_REFORMAT	= 0x100
    } 	ChangeCommitGestureFlags2;

typedef 
enum _LinkedTransactionFlags2
    {	mdtGlobal	= 0x2
    } 	LinkedTransactionFlags2;


enum TextBufferErrors2
    {	BUFFER_E_RELOAD_OCCURRED	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x1009 ) 
    } ;
typedef 
enum _TipWindowFlags2
    {	UTW_TIMER	= 0x8,
	UTW_EXPANDED	= 0x10
    } 	TipWindowFlags2;

typedef 
enum _MarkerCommandValues2
    {	mcvRightClickCommand	= 0x104
    } 	MarkerCommandValues2;





#define SID_SVsExpansionManager CLSID_VsExpansionManager
extern const __declspec(selectany) GUID GUID_VsBufferExtraFiles = { 0xfd494bf6, 0x1167, 0x4635, { 0xa2, 0xc, 0x5c, 0x24, 0xb2, 0xd7, 0xb3, 0x3d }};
extern const __declspec(selectany) GUID GUID_VsBufferFileReload = { 0x80d2b881, 0x81a3, 0x4f0b, { 0xbc, 0xf0, 0x70, 0xa0, 0x5, 0x4e, 0x67, 0x2f }};
extern const __declspec(selectany) GUID GUID_VsInitEncodingDialogFromUserData = { 0xc2382d84, 0x6650, 0x4386, { 0x86, 0xf, 0x24, 0x8e, 0xcb, 0x22, 0x2f, 0xc1 }};


extern RPC_IF_HANDLE __MIDL_itf_textmgr2_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_textmgr2_0000_0000_v0_0_s_ifspec;


#ifndef __TextManagerInternal2_LIBRARY_DEFINED__
#define __TextManagerInternal2_LIBRARY_DEFINED__

/* library TextManagerInternal2 */
/* [version][uuid] */ 

typedef struct _LANGPREFERENCES2
    {
    CHAR szFileType[ 24 ];
    unsigned int fShowCompletion;
    unsigned int fShowSmartIndent;
    unsigned int fHideAdvancedAutoListMembers;
    unsigned int uTabSize;
    unsigned int uIndentSize;
    unsigned int fInsertTabs;
    vsIndentStyle IndentStyle;
    unsigned int fAutoListMembers;
    unsigned int fAutoListParams;
    unsigned int fVirtualSpace;
    unsigned int fWordWrap;
    unsigned int fTwoWayTreeview;
    unsigned int fHotURLs;
    unsigned int fDropdownBar;
    unsigned int fLineNumbers;
    GUID guidLang;
    unsigned int fWordWrapGlyphs;
    unsigned int fCutCopyBlanks;
    } 	LANGPREFERENCES2;

typedef struct _FRAMEPREFERENCES2
    {
    unsigned int fHorzScrollbar;
    unsigned int fVertScrollbar;
    } 	FRAMEPREFERENCES2;

typedef struct _VIEWPREFERENCES2
    {
    unsigned int fVisibleWhitespace;
    unsigned int fSelectionMargin;
    unsigned int fAutoDelimiterHighlight;
    unsigned int fGoToAnchorAfterEscape;
    unsigned int fDragDropEditing;
    unsigned int fUndoCaretMovements;
    unsigned int fOvertype;
    unsigned int fDragDropMove;
    unsigned int fWidgetMargin;
    unsigned int fReadOnly;
    unsigned int fActiveInModalState;
    unsigned int fClientDragDropFeedback;
    unsigned int fTrackChanges;
    unsigned int uCompletorSize;
    unsigned int fDetectUTF8;
    long lEditorEmulation;
    } 	VIEWPREFERENCES2;

typedef struct _FONTCOLORPREFERENCES2
    {
    const GUID *pguidColorService;
    IUnknown *pColorTable;
    HFONT hRegularViewFont;
    HFONT hBoldViewFont;
    const GUID *pguidFontCategory;
    const GUID *pguidColorCategory;
    } 	FONTCOLORPREFERENCES2;

typedef 
enum _markertype2
    {	MARKER_WARNING	= 11,
	MARKER_SPAN_MAPPING	= ( MARKER_WARNING + 1 ) ,
	MARKER_REGION_COLLAPSED_NOGLYPH	= ( MARKER_SPAN_MAPPING + 1 ) ,
	MARKER_REGION_EXPANDED_NOGLYPH	= ( MARKER_REGION_COLLAPSED_NOGLYPH + 1 ) ,
	MARKER_EXSTENCIL	= ( MARKER_REGION_EXPANDED_NOGLYPH + 1 ) ,
	MARKER_EXSTENCIL_SELECTED	= ( MARKER_EXSTENCIL + 1 ) ,
	MARKER_SMARTTAG_NONVIS	= ( MARKER_EXSTENCIL_SELECTED + 1 ) ,
	MARKER_SMARTTAG_VIS	= ( MARKER_SMARTTAG_NONVIS + 1 ) ,
	MARKER_TRACK_NONSAVE	= ( MARKER_SMARTTAG_VIS + 1 ) ,
	MARKER_TRACK_SAVE	= ( MARKER_TRACK_NONSAVE + 1 ) ,
	MARKER_BOOKMARK_DISABLED	= ( MARKER_TRACK_SAVE + 1 ) ,
	MARKER_TRACK_PLACEHOLDER	= ( MARKER_BOOKMARK_DISABLED + 1 ) ,
	MARKER_SMARTTAG_FACTOID	= ( MARKER_TRACK_PLACEHOLDER + 1 ) ,
	MARKER_SMARTTAG_EPHEMERAL	= ( MARKER_SMARTTAG_FACTOID + 1 ) ,
	MARKER_BRACE_MATCHING	= ( MARKER_SMARTTAG_EPHEMERAL + 1 ) ,
	MARKER_EXSTENCIL_ENDMARKER	= ( MARKER_BRACE_MATCHING + 1 ) ,
	MARKER_CODEDEFWIN_BACKGROUND	= ( MARKER_EXSTENCIL_ENDMARKER + 1 ) ,
	MARKER_CODEDEFWIN_SELECTION	= ( MARKER_CODEDEFWIN_BACKGROUND + 1 ) ,
	MARKER_HIGHLIGHT_PATH	= ( MARKER_CODEDEFWIN_SELECTION + 1 ) ,
	MARKER_BRACE_MATCHING_BOLD	= ( MARKER_HIGHLIGHT_PATH + 1 ) ,
	MARKER_REFACTORING_BACKGROUND	= ( MARKER_BRACE_MATCHING_BOLD + 1 ) ,
	MARKER_EXSTENCIL_DEPFIELD	= ( MARKER_REFACTORING_BACKGROUND + 1 ) ,
	MARKER_REFACTORING_FIELD	= ( MARKER_EXSTENCIL_DEPFIELD + 1 ) ,
	MARKER_REFACTORING_DEPFIELD	= ( MARKER_REFACTORING_FIELD + 1 ) ,
	DEF_MARKER_COUNT_NEW	= ( MARKER_REFACTORING_DEPFIELD + 1 ) 
    } 	MARKERTYPE2;

typedef 
enum _hidden_region_behavior2
    {	hrbClientDrawn	= 0x2,
	hrbNoUserControls	= 0x4
    } 	HIDDEN_REGION_BEHAVIOR2;

typedef 
enum _VSTFF2
    {	VSTFF_NOUTF8_NOSIG	= 0x10000000,
	VSTFF_KEEPANSI	= 0x20000000
    } 	VSTFF2;


enum _VIEWFRAMETYPE
    {	vftAny	= 0,
	vftCodeWindow	= 0x1,
	vftToolWindow	= 0x2
    } ;
typedef DWORD VIEWFRAMETYPE;

typedef 
enum _TextViewInitFlags2
    {	VIF_READONLY	= 0x200,
	VIF_ACTIVEINMODALSTATE	= 0x400,
	VIF_SUPPRESS_STATUS_BAR_UPDATE	= 0x800,
	VIF_SUPPRESSTRACKCHANGES	= 0x1000,
	VIF_SUPPRESSBORDER	= 0x2000,
	VIF_SUPPRESSTRACKGOBACK	= 0x4000
    } 	TextViewInitFlags2;


enum _HighlightMatchingBraceFlags
    {	HMB_SUPPRESS_STATUS_BAR_UPDATE	= 0x1,
	HMB_USERECTANGLEBRACES	= 0x2
    } ;
typedef DWORD HIGHLIGHTMATCHINGBRACEFLAGS;


enum _codewindowbehaviorflags
    {	CWB_DEFAULT	= 0,
	CWB_DISABLEDROPDOWNBAR	= 0x1,
	CWB_DISABLESPLITTER	= 0x2
    } ;
typedef DWORD CODEWINDOWBEHAVIORFLAGS;

typedef struct _tag_NewHiddenRegionEx
    {
    long iType;
    DWORD dwBehavior;
    DWORD dwState;
    TextSpan tsHiddenText;
    LPCWSTR pszBanner;
    DWORD_PTR dwClient;
    DWORD dwLength;
    ULONG *pBannerAttr;
    } 	NewHiddenRegionEx;

typedef 
enum _AtomicTextProviderFlags
    {	atpDefault	= 0,
	atpGlyph	= 0x1,
	atpTextAttributes	= 0x2
    } 	AtomicTextProviderFlags;

typedef struct _smarttagsizedata
    {
    SIZE size;
    } 	SMARTTAGSIZEDATA;

typedef 
enum _ST_IMAGEINDEX
    {	ST_DEFAULTIMAGE	= 0,
	ST_ERROR	= 1,
	ST_REFACTOR	= 2
    } 	ST_IMAGEINDEX;

typedef 
enum _commonlanguageblock
    {	CLB_TRY_BLOCK	= 0,
	CLB_EXCEPTION_BLOCK	= ( CLB_TRY_BLOCK + 1 ) ,
	CLB_FINAL_BLOCK	= ( CLB_EXCEPTION_BLOCK + 1 ) 
    } 	COMMONLANGUAGEBLOCK;


enum _ExpansionFunctionType
    {	eft_List	= 0,
	eft_Value	= ( eft_List + 1 ) 
    } ;
typedef DWORD ExpansionFunctionType;

typedef struct _VsExpansion
    {
    BSTR path;
    BSTR title;
    BSTR shortcut;
    BSTR description;
    } 	VsExpansion;


enum _ExpansionToken
    {	ET_MyDocs	= 1,
	ET_InstallRoot	= 2
    } ;
typedef DWORD ExpansionToken;

EXTERN_GUID(Vs_guidSourceHashMD5, 0x406ea660, 0x64cf, 0x4c82, 0xb6, 0xf0, 0x42, 0xd4, 0x81, 0x72, 0xa7, 0x99);
EXTERN_GUID(Vs_guidSourceHashSHA1, 0xff1816ec, 0xaa5e, 0x4d10, 0x87, 0xf7, 0x6f, 0x49, 0x63, 0x83, 0x34, 0x60);

enum __tagVSCOLORDATA
    {	CD_FOREGROUND	= 0,
	CD_BACKGROUND	= 1,
	CD_LINECOLOR	= 2
    } ;
typedef LONG VSCOLORDATA;


enum _EOLTYPE2
    {	eolUNI_NEL	= 7,
	MAX_EOLTYPES2	= ( eolUNI_NEL + 1 ) 
    } ;
typedef DWORD EOLTYPE2;


enum __VSEDITPROPID2
    {	VSEDITPROPID_ViewGeneral_AccessibilityStateOverride	= -0x12007
    } ;
typedef LONG VSEDITPROPID2;


EXTERN_C const IID LIBID_TextManagerInternal2;

EXTERN_C const CLSID CLSID_VsExpansionManager;

#ifdef __cplusplus

class DECLSPEC_UUID("4970C2BC-AF33-4a73-A34F-18B0584C40E4")
VsExpansionManager;
#endif

EXTERN_C const CLSID CLSID_VsExpansionPackage;

#ifdef __cplusplus

class DECLSPEC_UUID("0B680757-2C29-4531-80FA-535A5178AA98")
VsExpansionPackage;
#endif

#ifndef __IVsBufferExtraFiles_INTERFACE_DEFINED__
#define __IVsBufferExtraFiles_INTERFACE_DEFINED__

/* interface IVsBufferExtraFiles */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsBufferExtraFiles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("66EE1DDE-6336-4a1e-9C99-D2864285ABA6")
    IVsBufferExtraFiles : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetQueryEditFilesDocuments( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [out] */ __RPC__deref_out_opt BSTR *bstrMkDocuments) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsBufferExtraFilesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsBufferExtraFiles * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsBufferExtraFiles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsBufferExtraFiles * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetQueryEditFilesDocuments )( 
            IVsBufferExtraFiles * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [out] */ __RPC__deref_out_opt BSTR *bstrMkDocuments);
        
        END_INTERFACE
    } IVsBufferExtraFilesVtbl;

    interface IVsBufferExtraFiles
    {
        CONST_VTBL struct IVsBufferExtraFilesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsBufferExtraFiles_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsBufferExtraFiles_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsBufferExtraFiles_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsBufferExtraFiles_GetQueryEditFilesDocuments(This,pBuffer,bstrMkDocuments)	\
    ( (This)->lpVtbl -> GetQueryEditFilesDocuments(This,pBuffer,bstrMkDocuments) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsBufferExtraFiles_INTERFACE_DEFINED__ */


#ifndef __IVsTextManager2_INTERFACE_DEFINED__
#define __IVsTextManager2_INTERFACE_DEFINED__

/* interface IVsTextManager2 */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextManager2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("072A28FD-1AF3-48af-9C85-C79404DBA30C")
    IVsTextManager2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetBufferSccStatus3( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [string][in] */ __RPC__in LPCOLESTR pszFileName,
            /* [out] */ __RPC__out BOOL *pbCheckoutSucceeded,
            /* [out] */ __RPC__out int *piStatusFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AttemptToCheckOutBufferFromScc3( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [string][in] */ __RPC__in LPCOLESTR pszFileName,
            /* [in] */ DWORD dwQueryEditFlags,
            /* [out] */ __RPC__out BOOL *pbCheckoutSucceeded,
            /* [out] */ __RPC__out int *piStatusFlags) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetUserPreferences2( 
            /* [out] */ VIEWPREFERENCES2 *pViewPrefs,
            /* [out] */ FRAMEPREFERENCES2 *pFramePrefs,
            /* [out][in] */ LANGPREFERENCES2 *pLangPrefs,
            /* [out][in] */ FONTCOLORPREFERENCES2 *pColorPrefs) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE SetUserPreferences2( 
            /* [in] */ const VIEWPREFERENCES2 *pViewPrefs,
            /* [in] */ const FRAMEPREFERENCES2 *pFramePrefs,
            /* [in] */ const LANGPREFERENCES2 *pLangPrefs,
            /* [in] */ const FONTCOLORPREFERENCES2 *pColorPrefs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResetColorableItems( 
            /* [in] */ GUID guidLang) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExpansionManager( 
            /* [out] */ __RPC__deref_out_opt IVsExpansionManager **pExpansionManager) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetActiveView2( 
            /* [in] */ BOOL fMustHaveFocus,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ VIEWFRAMETYPE grfIncludeViewFrameType,
            /* [out] */ __RPC__deref_out_opt IVsTextView **ppView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NavigateToPosition2( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ __RPC__in REFGUID guidDocViewType,
            /* [in] */ long iPos,
            /* [in] */ long iLen,
            /* [in] */ VIEWFRAMETYPE grfIncludeViewFrameType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NavigateToLineAndColumn2( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ __RPC__in REFGUID guidDocViewType,
            /* [in] */ long iStartRow,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndRow,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ VIEWFRAMETYPE grfIncludeViewFrameType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FireReplaceAllInFilesBegin( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FireReplaceAllInFilesEnd( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextManager2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextManager2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextManager2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextManager2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetBufferSccStatus3 )( 
            IVsTextManager2 * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [string][in] */ __RPC__in LPCOLESTR pszFileName,
            /* [out] */ __RPC__out BOOL *pbCheckoutSucceeded,
            /* [out] */ __RPC__out int *piStatusFlags);
        
        HRESULT ( STDMETHODCALLTYPE *AttemptToCheckOutBufferFromScc3 )( 
            IVsTextManager2 * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [string][in] */ __RPC__in LPCOLESTR pszFileName,
            /* [in] */ DWORD dwQueryEditFlags,
            /* [out] */ __RPC__out BOOL *pbCheckoutSucceeded,
            /* [out] */ __RPC__out int *piStatusFlags);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *GetUserPreferences2 )( 
            IVsTextManager2 * This,
            /* [out] */ VIEWPREFERENCES2 *pViewPrefs,
            /* [out] */ FRAMEPREFERENCES2 *pFramePrefs,
            /* [out][in] */ LANGPREFERENCES2 *pLangPrefs,
            /* [out][in] */ FONTCOLORPREFERENCES2 *pColorPrefs);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *SetUserPreferences2 )( 
            IVsTextManager2 * This,
            /* [in] */ const VIEWPREFERENCES2 *pViewPrefs,
            /* [in] */ const FRAMEPREFERENCES2 *pFramePrefs,
            /* [in] */ const LANGPREFERENCES2 *pLangPrefs,
            /* [in] */ const FONTCOLORPREFERENCES2 *pColorPrefs);
        
        HRESULT ( STDMETHODCALLTYPE *ResetColorableItems )( 
            IVsTextManager2 * This,
            /* [in] */ GUID guidLang);
        
        HRESULT ( STDMETHODCALLTYPE *GetExpansionManager )( 
            IVsTextManager2 * This,
            /* [out] */ __RPC__deref_out_opt IVsExpansionManager **pExpansionManager);
        
        HRESULT ( STDMETHODCALLTYPE *GetActiveView2 )( 
            IVsTextManager2 * This,
            /* [in] */ BOOL fMustHaveFocus,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ VIEWFRAMETYPE grfIncludeViewFrameType,
            /* [out] */ __RPC__deref_out_opt IVsTextView **ppView);
        
        HRESULT ( STDMETHODCALLTYPE *NavigateToPosition2 )( 
            IVsTextManager2 * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ __RPC__in REFGUID guidDocViewType,
            /* [in] */ long iPos,
            /* [in] */ long iLen,
            /* [in] */ VIEWFRAMETYPE grfIncludeViewFrameType);
        
        HRESULT ( STDMETHODCALLTYPE *NavigateToLineAndColumn2 )( 
            IVsTextManager2 * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ __RPC__in REFGUID guidDocViewType,
            /* [in] */ long iStartRow,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndRow,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ VIEWFRAMETYPE grfIncludeViewFrameType);
        
        HRESULT ( STDMETHODCALLTYPE *FireReplaceAllInFilesBegin )( 
            IVsTextManager2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *FireReplaceAllInFilesEnd )( 
            IVsTextManager2 * This);
        
        END_INTERFACE
    } IVsTextManager2Vtbl;

    interface IVsTextManager2
    {
        CONST_VTBL struct IVsTextManager2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextManager2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextManager2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextManager2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextManager2_GetBufferSccStatus3(This,pBuffer,pszFileName,pbCheckoutSucceeded,piStatusFlags)	\
    ( (This)->lpVtbl -> GetBufferSccStatus3(This,pBuffer,pszFileName,pbCheckoutSucceeded,piStatusFlags) ) 

#define IVsTextManager2_AttemptToCheckOutBufferFromScc3(This,pBuffer,pszFileName,dwQueryEditFlags,pbCheckoutSucceeded,piStatusFlags)	\
    ( (This)->lpVtbl -> AttemptToCheckOutBufferFromScc3(This,pBuffer,pszFileName,dwQueryEditFlags,pbCheckoutSucceeded,piStatusFlags) ) 

#define IVsTextManager2_GetUserPreferences2(This,pViewPrefs,pFramePrefs,pLangPrefs,pColorPrefs)	\
    ( (This)->lpVtbl -> GetUserPreferences2(This,pViewPrefs,pFramePrefs,pLangPrefs,pColorPrefs) ) 

#define IVsTextManager2_SetUserPreferences2(This,pViewPrefs,pFramePrefs,pLangPrefs,pColorPrefs)	\
    ( (This)->lpVtbl -> SetUserPreferences2(This,pViewPrefs,pFramePrefs,pLangPrefs,pColorPrefs) ) 

#define IVsTextManager2_ResetColorableItems(This,guidLang)	\
    ( (This)->lpVtbl -> ResetColorableItems(This,guidLang) ) 

#define IVsTextManager2_GetExpansionManager(This,pExpansionManager)	\
    ( (This)->lpVtbl -> GetExpansionManager(This,pExpansionManager) ) 

#define IVsTextManager2_GetActiveView2(This,fMustHaveFocus,pBuffer,grfIncludeViewFrameType,ppView)	\
    ( (This)->lpVtbl -> GetActiveView2(This,fMustHaveFocus,pBuffer,grfIncludeViewFrameType,ppView) ) 

#define IVsTextManager2_NavigateToPosition2(This,pBuffer,guidDocViewType,iPos,iLen,grfIncludeViewFrameType)	\
    ( (This)->lpVtbl -> NavigateToPosition2(This,pBuffer,guidDocViewType,iPos,iLen,grfIncludeViewFrameType) ) 

#define IVsTextManager2_NavigateToLineAndColumn2(This,pBuffer,guidDocViewType,iStartRow,iStartIndex,iEndRow,iEndIndex,grfIncludeViewFrameType)	\
    ( (This)->lpVtbl -> NavigateToLineAndColumn2(This,pBuffer,guidDocViewType,iStartRow,iStartIndex,iEndRow,iEndIndex,grfIncludeViewFrameType) ) 

#define IVsTextManager2_FireReplaceAllInFilesBegin(This)	\
    ( (This)->lpVtbl -> FireReplaceAllInFilesBegin(This) ) 

#define IVsTextManager2_FireReplaceAllInFilesEnd(This)	\
    ( (This)->lpVtbl -> FireReplaceAllInFilesEnd(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextManager2_INTERFACE_DEFINED__ */


#ifndef __IVsInsertionUI_INTERFACE_DEFINED__
#define __IVsInsertionUI_INTERFACE_DEFINED__

/* interface IVsInsertionUI */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsInsertionUI;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BB73A6E1-B824-42a1-9AB1-2F254386DFFC")
    IVsInsertionUI : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetWindowHandle( 
            /* [out] */ __RPC__deref_out_opt HWND *hwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Hide( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsInsertionUIVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsInsertionUI * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsInsertionUI * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsInsertionUI * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetWindowHandle )( 
            IVsInsertionUI * This,
            /* [out] */ __RPC__deref_out_opt HWND *hwnd);
        
        HRESULT ( STDMETHODCALLTYPE *Hide )( 
            IVsInsertionUI * This);
        
        END_INTERFACE
    } IVsInsertionUIVtbl;

    interface IVsInsertionUI
    {
        CONST_VTBL struct IVsInsertionUIVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsInsertionUI_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsInsertionUI_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsInsertionUI_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsInsertionUI_GetWindowHandle(This,hwnd)	\
    ( (This)->lpVtbl -> GetWindowHandle(This,hwnd) ) 

#define IVsInsertionUI_Hide(This)	\
    ( (This)->lpVtbl -> Hide(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsInsertionUI_INTERFACE_DEFINED__ */


#ifndef __IVsTextViewEx_INTERFACE_DEFINED__
#define __IVsTextViewEx_INTERFACE_DEFINED__

/* interface IVsTextViewEx */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextViewEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EAF1EA5B-EB6D-4852-9D87-666E09BC4BEE")
    IVsTextViewEx : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetHoverWaitTimer( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PersistOutliningState( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateSmartTagWindow( 
            /* [in] */ __RPC__in_opt IVsSmartTagTipWindow *pSmartTagWnd,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSmartTagRect( 
            /* [out] */ __RPC__out RECT *rcSmartTag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvokeInsertionUI( 
            /* [in] */ __RPC__in_opt IVsCompletionSet *pCompSet,
            /* [in] */ __RPC__in BSTR bstrPrefixText,
            /* [in] */ __RPC__in BSTR bstrCompletionChar,
            /* [out] */ __RPC__deref_out_opt IVsInsertionUI **pInsertionUI) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWindowFrame( 
            /* [out] */ __RPC__deref_out_opt IUnknown **ppFrame) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsCompletorWindowActive( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClusterRange( 
            /* [in] */ long iLine,
            /* [in] */ INT iDisplayCol,
            /* [out] */ __RPC__out INT *picCharacter,
            /* [out] */ __RPC__out INT *piStartCol,
            /* [out] */ __RPC__out INT *piEndCol) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIgnoreMarkerTypes( 
            /* [in] */ long iCountMarkerTypes,
            /* [in] */ __RPC__in DWORD *rgIgnoreMarkerTypes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AppendViewOnlyMarkerTypes( 
            /* [in] */ unsigned int iCountViewMarkerOnly,
            /* [in] */ __RPC__in const DWORD *rgViewMarkerOnly) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveViewOnlyMarkerTypes( 
            /* [in] */ unsigned int iCountViewMarkerOnly,
            /* [in] */ __RPC__in const DWORD *rgViewMarkerOnly) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBackgroundColorIndex( 
            /* [in] */ long iBackgroundIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsExpansionUIActive( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsReadOnly( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextViewExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextViewEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextViewEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextViewEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetHoverWaitTimer )( 
            IVsTextViewEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *PersistOutliningState )( 
            IVsTextViewEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateSmartTagWindow )( 
            IVsTextViewEx * This,
            /* [in] */ __RPC__in_opt IVsSmartTagTipWindow *pSmartTagWnd,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetSmartTagRect )( 
            IVsTextViewEx * This,
            /* [out] */ __RPC__out RECT *rcSmartTag);
        
        HRESULT ( STDMETHODCALLTYPE *InvokeInsertionUI )( 
            IVsTextViewEx * This,
            /* [in] */ __RPC__in_opt IVsCompletionSet *pCompSet,
            /* [in] */ __RPC__in BSTR bstrPrefixText,
            /* [in] */ __RPC__in BSTR bstrCompletionChar,
            /* [out] */ __RPC__deref_out_opt IVsInsertionUI **pInsertionUI);
        
        HRESULT ( STDMETHODCALLTYPE *GetWindowFrame )( 
            IVsTextViewEx * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppFrame);
        
        HRESULT ( STDMETHODCALLTYPE *IsCompletorWindowActive )( 
            IVsTextViewEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClusterRange )( 
            IVsTextViewEx * This,
            /* [in] */ long iLine,
            /* [in] */ INT iDisplayCol,
            /* [out] */ __RPC__out INT *picCharacter,
            /* [out] */ __RPC__out INT *piStartCol,
            /* [out] */ __RPC__out INT *piEndCol);
        
        HRESULT ( STDMETHODCALLTYPE *SetIgnoreMarkerTypes )( 
            IVsTextViewEx * This,
            /* [in] */ long iCountMarkerTypes,
            /* [in] */ __RPC__in DWORD *rgIgnoreMarkerTypes);
        
        HRESULT ( STDMETHODCALLTYPE *AppendViewOnlyMarkerTypes )( 
            IVsTextViewEx * This,
            /* [in] */ unsigned int iCountViewMarkerOnly,
            /* [in] */ __RPC__in const DWORD *rgViewMarkerOnly);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveViewOnlyMarkerTypes )( 
            IVsTextViewEx * This,
            /* [in] */ unsigned int iCountViewMarkerOnly,
            /* [in] */ __RPC__in const DWORD *rgViewMarkerOnly);
        
        HRESULT ( STDMETHODCALLTYPE *SetBackgroundColorIndex )( 
            IVsTextViewEx * This,
            /* [in] */ long iBackgroundIndex);
        
        HRESULT ( STDMETHODCALLTYPE *IsExpansionUIActive )( 
            IVsTextViewEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *IsReadOnly )( 
            IVsTextViewEx * This);
        
        END_INTERFACE
    } IVsTextViewExVtbl;

    interface IVsTextViewEx
    {
        CONST_VTBL struct IVsTextViewExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextViewEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextViewEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextViewEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextViewEx_SetHoverWaitTimer(This)	\
    ( (This)->lpVtbl -> SetHoverWaitTimer(This) ) 

#define IVsTextViewEx_PersistOutliningState(This)	\
    ( (This)->lpVtbl -> PersistOutliningState(This) ) 

#define IVsTextViewEx_UpdateSmartTagWindow(This,pSmartTagWnd,dwFlags)	\
    ( (This)->lpVtbl -> UpdateSmartTagWindow(This,pSmartTagWnd,dwFlags) ) 

#define IVsTextViewEx_GetSmartTagRect(This,rcSmartTag)	\
    ( (This)->lpVtbl -> GetSmartTagRect(This,rcSmartTag) ) 

#define IVsTextViewEx_InvokeInsertionUI(This,pCompSet,bstrPrefixText,bstrCompletionChar,pInsertionUI)	\
    ( (This)->lpVtbl -> InvokeInsertionUI(This,pCompSet,bstrPrefixText,bstrCompletionChar,pInsertionUI) ) 

#define IVsTextViewEx_GetWindowFrame(This,ppFrame)	\
    ( (This)->lpVtbl -> GetWindowFrame(This,ppFrame) ) 

#define IVsTextViewEx_IsCompletorWindowActive(This)	\
    ( (This)->lpVtbl -> IsCompletorWindowActive(This) ) 

#define IVsTextViewEx_GetClusterRange(This,iLine,iDisplayCol,picCharacter,piStartCol,piEndCol)	\
    ( (This)->lpVtbl -> GetClusterRange(This,iLine,iDisplayCol,picCharacter,piStartCol,piEndCol) ) 

#define IVsTextViewEx_SetIgnoreMarkerTypes(This,iCountMarkerTypes,rgIgnoreMarkerTypes)	\
    ( (This)->lpVtbl -> SetIgnoreMarkerTypes(This,iCountMarkerTypes,rgIgnoreMarkerTypes) ) 

#define IVsTextViewEx_AppendViewOnlyMarkerTypes(This,iCountViewMarkerOnly,rgViewMarkerOnly)	\
    ( (This)->lpVtbl -> AppendViewOnlyMarkerTypes(This,iCountViewMarkerOnly,rgViewMarkerOnly) ) 

#define IVsTextViewEx_RemoveViewOnlyMarkerTypes(This,iCountViewMarkerOnly,rgViewMarkerOnly)	\
    ( (This)->lpVtbl -> RemoveViewOnlyMarkerTypes(This,iCountViewMarkerOnly,rgViewMarkerOnly) ) 

#define IVsTextViewEx_SetBackgroundColorIndex(This,iBackgroundIndex)	\
    ( (This)->lpVtbl -> SetBackgroundColorIndex(This,iBackgroundIndex) ) 

#define IVsTextViewEx_IsExpansionUIActive(This)	\
    ( (This)->lpVtbl -> IsExpansionUIActive(This) ) 

#define IVsTextViewEx_IsReadOnly(This)	\
    ( (This)->lpVtbl -> IsReadOnly(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextViewEx_INTERFACE_DEFINED__ */


#ifndef __IVsCodeWindowEx_INTERFACE_DEFINED__
#define __IVsCodeWindowEx_INTERFACE_DEFINED__

/* interface IVsCodeWindowEx */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCodeWindowEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("186F17A5-7270-4bc5-A8DE-72F4A0E49647")
    IVsCodeWindowEx : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ CODEWINDOWBEHAVIORFLAGS grfCodeWindowBehaviorFlags,
            /* [in] */ VSUSERCONTEXTATTRIBUTEUSAGE usageAuxUserContext,
            /* [in] */ __RPC__in LPCOLESTR szNameAuxUserContext,
            /* [in] */ __RPC__in LPCOLESTR szValueAuxUserContext,
            /* [in] */ DWORD InitViewFlags,
            /* [in] */ __RPC__in const INITVIEW *pInitView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsReadOnly( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCodeWindowExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCodeWindowEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCodeWindowEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCodeWindowEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IVsCodeWindowEx * This,
            /* [in] */ CODEWINDOWBEHAVIORFLAGS grfCodeWindowBehaviorFlags,
            /* [in] */ VSUSERCONTEXTATTRIBUTEUSAGE usageAuxUserContext,
            /* [in] */ __RPC__in LPCOLESTR szNameAuxUserContext,
            /* [in] */ __RPC__in LPCOLESTR szValueAuxUserContext,
            /* [in] */ DWORD InitViewFlags,
            /* [in] */ __RPC__in const INITVIEW *pInitView);
        
        HRESULT ( STDMETHODCALLTYPE *IsReadOnly )( 
            IVsCodeWindowEx * This);
        
        END_INTERFACE
    } IVsCodeWindowExVtbl;

    interface IVsCodeWindowEx
    {
        CONST_VTBL struct IVsCodeWindowExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCodeWindowEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCodeWindowEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCodeWindowEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCodeWindowEx_Initialize(This,grfCodeWindowBehaviorFlags,usageAuxUserContext,szNameAuxUserContext,szValueAuxUserContext,InitViewFlags,pInitView)	\
    ( (This)->lpVtbl -> Initialize(This,grfCodeWindowBehaviorFlags,usageAuxUserContext,szNameAuxUserContext,szValueAuxUserContext,InitViewFlags,pInitView) ) 

#define IVsCodeWindowEx_IsReadOnly(This)	\
    ( (This)->lpVtbl -> IsReadOnly(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCodeWindowEx_INTERFACE_DEFINED__ */


#ifndef __IVsTextManagerEvents2_INTERFACE_DEFINED__
#define __IVsTextManagerEvents2_INTERFACE_DEFINED__

/* interface IVsTextManagerEvents2 */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextManagerEvents2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4697E418-183E-414e-9173-E5FBF27692A9")
    IVsTextManagerEvents2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnRegisterMarkerType( 
            /* [in] */ long iMarkerType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnRegisterView( 
            /* [in] */ __RPC__in_opt IVsTextView *pView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnUnregisterView( 
            /* [in] */ __RPC__in_opt IVsTextView *pView) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE OnUserPreferencesChanged2( 
            /* [in] */ const VIEWPREFERENCES2 *pViewPrefs,
            /* [in] */ const FRAMEPREFERENCES2 *pFramePrefs,
            /* [in] */ const LANGPREFERENCES2 *pLangPrefs,
            /* [in] */ const FONTCOLORPREFERENCES2 *pColorPrefs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnReplaceAllInFilesBegin( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnReplaceAllInFilesEnd( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextManagerEvents2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextManagerEvents2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextManagerEvents2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextManagerEvents2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnRegisterMarkerType )( 
            IVsTextManagerEvents2 * This,
            /* [in] */ long iMarkerType);
        
        HRESULT ( STDMETHODCALLTYPE *OnRegisterView )( 
            IVsTextManagerEvents2 * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView);
        
        HRESULT ( STDMETHODCALLTYPE *OnUnregisterView )( 
            IVsTextManagerEvents2 * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *OnUserPreferencesChanged2 )( 
            IVsTextManagerEvents2 * This,
            /* [in] */ const VIEWPREFERENCES2 *pViewPrefs,
            /* [in] */ const FRAMEPREFERENCES2 *pFramePrefs,
            /* [in] */ const LANGPREFERENCES2 *pLangPrefs,
            /* [in] */ const FONTCOLORPREFERENCES2 *pColorPrefs);
        
        HRESULT ( STDMETHODCALLTYPE *OnReplaceAllInFilesBegin )( 
            IVsTextManagerEvents2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnReplaceAllInFilesEnd )( 
            IVsTextManagerEvents2 * This);
        
        END_INTERFACE
    } IVsTextManagerEvents2Vtbl;

    interface IVsTextManagerEvents2
    {
        CONST_VTBL struct IVsTextManagerEvents2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextManagerEvents2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextManagerEvents2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextManagerEvents2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextManagerEvents2_OnRegisterMarkerType(This,iMarkerType)	\
    ( (This)->lpVtbl -> OnRegisterMarkerType(This,iMarkerType) ) 

#define IVsTextManagerEvents2_OnRegisterView(This,pView)	\
    ( (This)->lpVtbl -> OnRegisterView(This,pView) ) 

#define IVsTextManagerEvents2_OnUnregisterView(This,pView)	\
    ( (This)->lpVtbl -> OnUnregisterView(This,pView) ) 

#define IVsTextManagerEvents2_OnUserPreferencesChanged2(This,pViewPrefs,pFramePrefs,pLangPrefs,pColorPrefs)	\
    ( (This)->lpVtbl -> OnUserPreferencesChanged2(This,pViewPrefs,pFramePrefs,pLangPrefs,pColorPrefs) ) 

#define IVsTextManagerEvents2_OnReplaceAllInFilesBegin(This)	\
    ( (This)->lpVtbl -> OnReplaceAllInFilesBegin(This) ) 

#define IVsTextManagerEvents2_OnReplaceAllInFilesEnd(This)	\
    ( (This)->lpVtbl -> OnReplaceAllInFilesEnd(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextManagerEvents2_INTERFACE_DEFINED__ */


#ifndef __IVsFileExtensionMappingEvents_INTERFACE_DEFINED__
#define __IVsFileExtensionMappingEvents_INTERFACE_DEFINED__

/* interface IVsFileExtensionMappingEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsFileExtensionMappingEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D1ABEDEB-5163-4235-ADE6-17EFAA3A5549")
    IVsFileExtensionMappingEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnFileExtensionsReset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFileExtensionMappingEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFileExtensionMappingEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFileExtensionMappingEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFileExtensionMappingEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnFileExtensionsReset )( 
            IVsFileExtensionMappingEvents * This);
        
        END_INTERFACE
    } IVsFileExtensionMappingEventsVtbl;

    interface IVsFileExtensionMappingEvents
    {
        CONST_VTBL struct IVsFileExtensionMappingEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFileExtensionMappingEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFileExtensionMappingEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFileExtensionMappingEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFileExtensionMappingEvents_OnFileExtensionsReset(This)	\
    ( (This)->lpVtbl -> OnFileExtensionsReset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFileExtensionMappingEvents_INTERFACE_DEFINED__ */


#ifndef __IVsAutoOutliningClient_INTERFACE_DEFINED__
#define __IVsAutoOutliningClient_INTERFACE_DEFINED__

/* interface IVsAutoOutliningClient */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsAutoOutliningClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5151882E-58E1-4856-BFE8-4F17A30BE839")
    IVsAutoOutliningClient : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE QueryWaitForAutoOutliningCallback( 
            /* [out] */ __RPC__out BOOL *fWait) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsAutoOutliningClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsAutoOutliningClient * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsAutoOutliningClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsAutoOutliningClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *QueryWaitForAutoOutliningCallback )( 
            IVsAutoOutliningClient * This,
            /* [out] */ __RPC__out BOOL *fWait);
        
        END_INTERFACE
    } IVsAutoOutliningClientVtbl;

    interface IVsAutoOutliningClient
    {
        CONST_VTBL struct IVsAutoOutliningClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsAutoOutliningClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsAutoOutliningClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsAutoOutliningClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsAutoOutliningClient_QueryWaitForAutoOutliningCallback(This,fWait)	\
    ( (This)->lpVtbl -> QueryWaitForAutoOutliningCallback(This,fWait) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsAutoOutliningClient_INTERFACE_DEFINED__ */


#ifndef __IVsTextLineMarkerEx_INTERFACE_DEFINED__
#define __IVsTextLineMarkerEx_INTERFACE_DEFINED__

/* interface IVsTextLineMarkerEx */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextLineMarkerEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1C31EE6E-FC66-4fc8-8CC5-6A4134369F4E")
    IVsTextLineMarkerEx : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetClientData( 
            /* [out] */ __RPC__out DWORD_PTR *pdwData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetClientData( 
            /* [in] */ DWORD_PTR dwData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextLineMarkerExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextLineMarkerEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextLineMarkerEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextLineMarkerEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClientData )( 
            IVsTextLineMarkerEx * This,
            /* [out] */ __RPC__out DWORD_PTR *pdwData);
        
        HRESULT ( STDMETHODCALLTYPE *SetClientData )( 
            IVsTextLineMarkerEx * This,
            /* [in] */ DWORD_PTR dwData);
        
        END_INTERFACE
    } IVsTextLineMarkerExVtbl;

    interface IVsTextLineMarkerEx
    {
        CONST_VTBL struct IVsTextLineMarkerExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextLineMarkerEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextLineMarkerEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextLineMarkerEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextLineMarkerEx_GetClientData(This,pdwData)	\
    ( (This)->lpVtbl -> GetClientData(This,pdwData) ) 

#define IVsTextLineMarkerEx_SetClientData(This,dwData)	\
    ( (This)->lpVtbl -> SetClientData(This,dwData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextLineMarkerEx_INTERFACE_DEFINED__ */


#ifndef __IVsTextMarkerClientAdvanced_INTERFACE_DEFINED__
#define __IVsTextMarkerClientAdvanced_INTERFACE_DEFINED__

/* interface IVsTextMarkerClientAdvanced */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextMarkerClientAdvanced;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C4B874D3-1491-4f13-8B9E-17249EC4902B")
    IVsTextMarkerClientAdvanced : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnMarkerTextChanged( 
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextMarkerClientAdvancedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextMarkerClientAdvanced * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextMarkerClientAdvanced * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextMarkerClientAdvanced * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnMarkerTextChanged )( 
            IVsTextMarkerClientAdvanced * This,
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker);
        
        END_INTERFACE
    } IVsTextMarkerClientAdvancedVtbl;

    interface IVsTextMarkerClientAdvanced
    {
        CONST_VTBL struct IVsTextMarkerClientAdvancedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextMarkerClientAdvanced_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextMarkerClientAdvanced_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextMarkerClientAdvanced_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextMarkerClientAdvanced_OnMarkerTextChanged(This,pMarker)	\
    ( (This)->lpVtbl -> OnMarkerTextChanged(This,pMarker) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextMarkerClientAdvanced_INTERFACE_DEFINED__ */


#ifndef __IVsTextMarkerClientEx_INTERFACE_DEFINED__
#define __IVsTextMarkerClientEx_INTERFACE_DEFINED__

/* interface IVsTextMarkerClientEx */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextMarkerClientEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BA48A96D-40E9-4723-BDD8-B99072A1A426")
    IVsTextMarkerClientEx : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MarkerInvalidated( 
            __RPC__in_opt IVsTextLines *pBuffer,
            __RPC__in_opt IVsTextMarker *pMarker) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnHoverOverMarker( 
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker,
            /* [in] */ BOOL fShowUI) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextMarkerClientExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextMarkerClientEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextMarkerClientEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextMarkerClientEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *MarkerInvalidated )( 
            IVsTextMarkerClientEx * This,
            __RPC__in_opt IVsTextLines *pBuffer,
            __RPC__in_opt IVsTextMarker *pMarker);
        
        HRESULT ( STDMETHODCALLTYPE *OnHoverOverMarker )( 
            IVsTextMarkerClientEx * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker,
            /* [in] */ BOOL fShowUI);
        
        END_INTERFACE
    } IVsTextMarkerClientExVtbl;

    interface IVsTextMarkerClientEx
    {
        CONST_VTBL struct IVsTextMarkerClientExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextMarkerClientEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextMarkerClientEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextMarkerClientEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextMarkerClientEx_MarkerInvalidated(This,pBuffer,pMarker)	\
    ( (This)->lpVtbl -> MarkerInvalidated(This,pBuffer,pMarker) ) 

#define IVsTextMarkerClientEx_OnHoverOverMarker(This,pView,pMarker,fShowUI)	\
    ( (This)->lpVtbl -> OnHoverOverMarker(This,pView,pMarker,fShowUI) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextMarkerClientEx_INTERFACE_DEFINED__ */


#ifndef __IVsDropdownBarClientEx_INTERFACE_DEFINED__
#define __IVsDropdownBarClientEx_INTERFACE_DEFINED__

/* interface IVsDropdownBarClientEx */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsDropdownBarClientEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F74462E6-2E8E-477c-BA7D-F03D336DCB36")
    IVsDropdownBarClientEx : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEntryIndent( 
            /* [in] */ long iCombo,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__out ULONG *pIndent) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsDropdownBarClientExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsDropdownBarClientEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsDropdownBarClientEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsDropdownBarClientEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEntryIndent )( 
            IVsDropdownBarClientEx * This,
            /* [in] */ long iCombo,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__out ULONG *pIndent);
        
        END_INTERFACE
    } IVsDropdownBarClientExVtbl;

    interface IVsDropdownBarClientEx
    {
        CONST_VTBL struct IVsDropdownBarClientExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsDropdownBarClientEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsDropdownBarClientEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsDropdownBarClientEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsDropdownBarClientEx_GetEntryIndent(This,iCombo,iIndex,pIndent)	\
    ( (This)->lpVtbl -> GetEntryIndent(This,iCombo,iIndex,pIndent) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsDropdownBarClientEx_INTERFACE_DEFINED__ */


#ifndef __IVsHiddenRegionEx_INTERFACE_DEFINED__
#define __IVsHiddenRegionEx_INTERFACE_DEFINED__

/* interface IVsHiddenRegionEx */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsHiddenRegionEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FA54DAC7-23D3-4c27-B46E-0D2591E5CF0A")
    IVsHiddenRegionEx : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetBannerAttr( 
            /* [in] */ DWORD dwLength,
            /* [size_is][out] */ __RPC__out_ecount_full(dwLength) ULONG *pColorAttr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBannerAttr( 
            /* [in] */ DWORD dwLength,
            /* [size_is][in] */ __RPC__in_ecount_full(dwLength) ULONG *pColorAttr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsHiddenRegionExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsHiddenRegionEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsHiddenRegionEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsHiddenRegionEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetBannerAttr )( 
            IVsHiddenRegionEx * This,
            /* [in] */ DWORD dwLength,
            /* [size_is][out] */ __RPC__out_ecount_full(dwLength) ULONG *pColorAttr);
        
        HRESULT ( STDMETHODCALLTYPE *SetBannerAttr )( 
            IVsHiddenRegionEx * This,
            /* [in] */ DWORD dwLength,
            /* [size_is][in] */ __RPC__in_ecount_full(dwLength) ULONG *pColorAttr);
        
        END_INTERFACE
    } IVsHiddenRegionExVtbl;

    interface IVsHiddenRegionEx
    {
        CONST_VTBL struct IVsHiddenRegionExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsHiddenRegionEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsHiddenRegionEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsHiddenRegionEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsHiddenRegionEx_GetBannerAttr(This,dwLength,pColorAttr)	\
    ( (This)->lpVtbl -> GetBannerAttr(This,dwLength,pColorAttr) ) 

#define IVsHiddenRegionEx_SetBannerAttr(This,dwLength,pColorAttr)	\
    ( (This)->lpVtbl -> SetBannerAttr(This,dwLength,pColorAttr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsHiddenRegionEx_INTERFACE_DEFINED__ */


#ifndef __IVsHiddenTextClientEx_INTERFACE_DEFINED__
#define __IVsHiddenTextClientEx_INTERFACE_DEFINED__

/* interface IVsHiddenTextClientEx */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsHiddenTextClientEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("225F2F59-39CF-4ae3-A08E-44CF751DE700")
    IVsHiddenTextClientEx : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetBannerGlyphWidth( 
            /* [in] */ long iPixSpaceWidth,
            /* [out] */ __RPC__out long *pGlyphPix) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DrawBannerGlyph( 
            /* [in] */ __RPC__in_opt IVsHiddenRegion *pHidReg,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsHiddenTextClientExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsHiddenTextClientEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsHiddenTextClientEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsHiddenTextClientEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetBannerGlyphWidth )( 
            IVsHiddenTextClientEx * This,
            /* [in] */ long iPixSpaceWidth,
            /* [out] */ __RPC__out long *pGlyphPix);
        
        HRESULT ( STDMETHODCALLTYPE *DrawBannerGlyph )( 
            IVsHiddenTextClientEx * This,
            /* [in] */ __RPC__in_opt IVsHiddenRegion *pHidReg,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect);
        
        END_INTERFACE
    } IVsHiddenTextClientExVtbl;

    interface IVsHiddenTextClientEx
    {
        CONST_VTBL struct IVsHiddenTextClientExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsHiddenTextClientEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsHiddenTextClientEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsHiddenTextClientEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsHiddenTextClientEx_GetBannerGlyphWidth(This,iPixSpaceWidth,pGlyphPix)	\
    ( (This)->lpVtbl -> GetBannerGlyphWidth(This,iPixSpaceWidth,pGlyphPix) ) 

#define IVsHiddenTextClientEx_DrawBannerGlyph(This,pHidReg,dwFlags,hdc,pRect)	\
    ( (This)->lpVtbl -> DrawBannerGlyph(This,pHidReg,dwFlags,hdc,pRect) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsHiddenTextClientEx_INTERFACE_DEFINED__ */


#ifndef __IVsHiddenTextSessionEx_INTERFACE_DEFINED__
#define __IVsHiddenTextSessionEx_INTERFACE_DEFINED__

/* interface IVsHiddenTextSessionEx */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsHiddenTextSessionEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A43C0083-755F-4385-9574-4C14BFFC4344")
    IVsHiddenTextSessionEx : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddHiddenRegionsEx( 
            /* [in] */ DWORD dwUpdateFlags,
            /* [in] */ long cRegions,
            /* [size_is][in] */ __RPC__in_ecount_full(cRegions) NewHiddenRegionEx *rgHidReg,
            /* [out] */ __RPC__deref_out_opt IVsEnumHiddenRegions **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsHiddenTextSessionExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsHiddenTextSessionEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsHiddenTextSessionEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsHiddenTextSessionEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddHiddenRegionsEx )( 
            IVsHiddenTextSessionEx * This,
            /* [in] */ DWORD dwUpdateFlags,
            /* [in] */ long cRegions,
            /* [size_is][in] */ __RPC__in_ecount_full(cRegions) NewHiddenRegionEx *rgHidReg,
            /* [out] */ __RPC__deref_out_opt IVsEnumHiddenRegions **ppEnum);
        
        END_INTERFACE
    } IVsHiddenTextSessionExVtbl;

    interface IVsHiddenTextSessionEx
    {
        CONST_VTBL struct IVsHiddenTextSessionExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsHiddenTextSessionEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsHiddenTextSessionEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsHiddenTextSessionEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsHiddenTextSessionEx_AddHiddenRegionsEx(This,dwUpdateFlags,cRegions,rgHidReg,ppEnum)	\
    ( (This)->lpVtbl -> AddHiddenRegionsEx(This,dwUpdateFlags,cRegions,rgHidReg,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsHiddenTextSessionEx_INTERFACE_DEFINED__ */


#ifndef __IVsAtomicTextProvider_INTERFACE_DEFINED__
#define __IVsAtomicTextProvider_INTERFACE_DEFINED__

/* interface IVsAtomicTextProvider */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsAtomicTextProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("29CDD341-0F95-42f2-B71C-75BC51A7EB72")
    IVsAtomicTextProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAtomFlags( 
            /* [out] */ __RPC__out DWORD *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAtomAttributes( 
            /* [in] */ DWORD dwLength,
            /* [size_is][out] */ __RPC__out_ecount_full(dwLength) ULONG *pColorAttr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAtomGlyphWidth( 
            /* [in] */ long iPixSpaceWidth,
            /* [out] */ __RPC__out long *pGlyphPix) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DrawAtomGlyph( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsAtomicTextProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsAtomicTextProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsAtomicTextProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsAtomicTextProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetAtomFlags )( 
            IVsAtomicTextProvider * This,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetAtomAttributes )( 
            IVsAtomicTextProvider * This,
            /* [in] */ DWORD dwLength,
            /* [size_is][out] */ __RPC__out_ecount_full(dwLength) ULONG *pColorAttr);
        
        HRESULT ( STDMETHODCALLTYPE *GetAtomGlyphWidth )( 
            IVsAtomicTextProvider * This,
            /* [in] */ long iPixSpaceWidth,
            /* [out] */ __RPC__out long *pGlyphPix);
        
        HRESULT ( STDMETHODCALLTYPE *DrawAtomGlyph )( 
            IVsAtomicTextProvider * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect);
        
        END_INTERFACE
    } IVsAtomicTextProviderVtbl;

    interface IVsAtomicTextProvider
    {
        CONST_VTBL struct IVsAtomicTextProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsAtomicTextProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsAtomicTextProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsAtomicTextProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsAtomicTextProvider_GetAtomFlags(This,pdwFlags)	\
    ( (This)->lpVtbl -> GetAtomFlags(This,pdwFlags) ) 

#define IVsAtomicTextProvider_GetAtomAttributes(This,dwLength,pColorAttr)	\
    ( (This)->lpVtbl -> GetAtomAttributes(This,dwLength,pColorAttr) ) 

#define IVsAtomicTextProvider_GetAtomGlyphWidth(This,iPixSpaceWidth,pGlyphPix)	\
    ( (This)->lpVtbl -> GetAtomGlyphWidth(This,iPixSpaceWidth,pGlyphPix) ) 

#define IVsAtomicTextProvider_DrawAtomGlyph(This,dwFlags,hdc,pRect)	\
    ( (This)->lpVtbl -> DrawAtomGlyph(This,dwFlags,hdc,pRect) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsAtomicTextProvider_INTERFACE_DEFINED__ */


#ifndef __IVsCompletionSetEx_INTERFACE_DEFINED__
#define __IVsCompletionSetEx_INTERFACE_DEFINED__

/* interface IVsCompletionSetEx */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCompletionSetEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3F710016-58D5-4887-AD76-936D1A45A588")
    IVsCompletionSetEx : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCompletionItemColor( 
            /* [in] */ long iIndex,
            /* [out] */ __RPC__out COLORREF *dwFGColor,
            /* [out] */ __RPC__out COLORREF *dwBGColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFilterLevel( 
            /* [out] */ __RPC__out long *iFilterLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IncreaseFilterLevel( 
            /* [in] */ long iSelectedItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DecreaseFilterLevel( 
            /* [in] */ long iSelectedItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CompareItems( 
            /* [in] */ __RPC__in const BSTR bstrSoFar,
            /* [in] */ __RPC__in const BSTR bstrOther,
            /* [in] */ long lCharactersToCompare,
            /* [out] */ __RPC__out long *plResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnCommitComplete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCompletionSetExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCompletionSetEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCompletionSetEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCompletionSetEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCompletionItemColor )( 
            IVsCompletionSetEx * This,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__out COLORREF *dwFGColor,
            /* [out] */ __RPC__out COLORREF *dwBGColor);
        
        HRESULT ( STDMETHODCALLTYPE *GetFilterLevel )( 
            IVsCompletionSetEx * This,
            /* [out] */ __RPC__out long *iFilterLevel);
        
        HRESULT ( STDMETHODCALLTYPE *IncreaseFilterLevel )( 
            IVsCompletionSetEx * This,
            /* [in] */ long iSelectedItem);
        
        HRESULT ( STDMETHODCALLTYPE *DecreaseFilterLevel )( 
            IVsCompletionSetEx * This,
            /* [in] */ long iSelectedItem);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItems )( 
            IVsCompletionSetEx * This,
            /* [in] */ __RPC__in const BSTR bstrSoFar,
            /* [in] */ __RPC__in const BSTR bstrOther,
            /* [in] */ long lCharactersToCompare,
            /* [out] */ __RPC__out long *plResult);
        
        HRESULT ( STDMETHODCALLTYPE *OnCommitComplete )( 
            IVsCompletionSetEx * This);
        
        END_INTERFACE
    } IVsCompletionSetExVtbl;

    interface IVsCompletionSetEx
    {
        CONST_VTBL struct IVsCompletionSetExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCompletionSetEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCompletionSetEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCompletionSetEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCompletionSetEx_GetCompletionItemColor(This,iIndex,dwFGColor,dwBGColor)	\
    ( (This)->lpVtbl -> GetCompletionItemColor(This,iIndex,dwFGColor,dwBGColor) ) 

#define IVsCompletionSetEx_GetFilterLevel(This,iFilterLevel)	\
    ( (This)->lpVtbl -> GetFilterLevel(This,iFilterLevel) ) 

#define IVsCompletionSetEx_IncreaseFilterLevel(This,iSelectedItem)	\
    ( (This)->lpVtbl -> IncreaseFilterLevel(This,iSelectedItem) ) 

#define IVsCompletionSetEx_DecreaseFilterLevel(This,iSelectedItem)	\
    ( (This)->lpVtbl -> DecreaseFilterLevel(This,iSelectedItem) ) 

#define IVsCompletionSetEx_CompareItems(This,bstrSoFar,bstrOther,lCharactersToCompare,plResult)	\
    ( (This)->lpVtbl -> CompareItems(This,bstrSoFar,bstrOther,lCharactersToCompare,plResult) ) 

#define IVsCompletionSetEx_OnCommitComplete(This)	\
    ( (This)->lpVtbl -> OnCommitComplete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCompletionSetEx_INTERFACE_DEFINED__ */


#ifndef __IVsCompletionSetBuilder_INTERFACE_DEFINED__
#define __IVsCompletionSetBuilder_INTERFACE_DEFINED__

/* interface IVsCompletionSetBuilder */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCompletionSetBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CB570E9B-7B88-4159-9819-6F7E71EFFA95")
    IVsCompletionSetBuilder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetBuilderCount( 
            __RPC__in long *piCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBuilderDisplayText( 
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [optional][out] */ __RPC__out long *piGlyph) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBuilderDescriptionText( 
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBuilderImageList( 
            /* [out] */ __RPC__deref_out_opt HANDLE *phImages) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnBuilderCommit( 
            /* [in] */ long iIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBuilderItemColor( 
            /* [in] */ long iIndex,
            /* [out] */ __RPC__out COLORREF *dwFGColor,
            /* [out] */ __RPC__out COLORREF *dwBGColor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCompletionSetBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCompletionSetBuilder * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCompletionSetBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCompletionSetBuilder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetBuilderCount )( 
            IVsCompletionSetBuilder * This,
            __RPC__in long *piCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetBuilderDisplayText )( 
            IVsCompletionSetBuilder * This,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [optional][out] */ __RPC__out long *piGlyph);
        
        HRESULT ( STDMETHODCALLTYPE *GetBuilderDescriptionText )( 
            IVsCompletionSetBuilder * This,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        HRESULT ( STDMETHODCALLTYPE *GetBuilderImageList )( 
            IVsCompletionSetBuilder * This,
            /* [out] */ __RPC__deref_out_opt HANDLE *phImages);
        
        HRESULT ( STDMETHODCALLTYPE *OnBuilderCommit )( 
            IVsCompletionSetBuilder * This,
            /* [in] */ long iIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetBuilderItemColor )( 
            IVsCompletionSetBuilder * This,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__out COLORREF *dwFGColor,
            /* [out] */ __RPC__out COLORREF *dwBGColor);
        
        END_INTERFACE
    } IVsCompletionSetBuilderVtbl;

    interface IVsCompletionSetBuilder
    {
        CONST_VTBL struct IVsCompletionSetBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCompletionSetBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCompletionSetBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCompletionSetBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCompletionSetBuilder_GetBuilderCount(This,piCount)	\
    ( (This)->lpVtbl -> GetBuilderCount(This,piCount) ) 

#define IVsCompletionSetBuilder_GetBuilderDisplayText(This,iIndex,pbstrText,piGlyph)	\
    ( (This)->lpVtbl -> GetBuilderDisplayText(This,iIndex,pbstrText,piGlyph) ) 

#define IVsCompletionSetBuilder_GetBuilderDescriptionText(This,iIndex,pbstrDescription)	\
    ( (This)->lpVtbl -> GetBuilderDescriptionText(This,iIndex,pbstrDescription) ) 

#define IVsCompletionSetBuilder_GetBuilderImageList(This,phImages)	\
    ( (This)->lpVtbl -> GetBuilderImageList(This,phImages) ) 

#define IVsCompletionSetBuilder_OnBuilderCommit(This,iIndex)	\
    ( (This)->lpVtbl -> OnBuilderCommit(This,iIndex) ) 

#define IVsCompletionSetBuilder_GetBuilderItemColor(This,iIndex,dwFGColor,dwBGColor)	\
    ( (This)->lpVtbl -> GetBuilderItemColor(This,iIndex,dwFGColor,dwBGColor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCompletionSetBuilder_INTERFACE_DEFINED__ */


#ifndef __IVsSmartTagData_INTERFACE_DEFINED__
#define __IVsSmartTagData_INTERFACE_DEFINED__

/* interface IVsSmartTagData */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsSmartTagData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8C2A8A68-8844-4e55-B0A1-805B4DA0DEB2")
    IVsSmartTagData : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetImageIndex( 
            /* [out] */ __RPC__out long *piIndex) = 0;
        
        virtual /* [custom] */ HRESULT STDMETHODCALLTYPE GetContextMenuInfo( 
            /* [out] */ __RPC__out GUID *guidID,
            /* [out] */ __RPC__out long *nMenuID,
            /* [out] */ __RPC__deref_out_opt IOleCommandTarget **pCmdTarget) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContextStream( 
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnDismiss( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnInvocation( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateView( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTimerInterval( 
            /* [out] */ __RPC__out long *piTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsLeftJustified( 
            /* [out] */ __RPC__out BOOL *pfIsLeftJustified) = 0;
        
        virtual /* [custom] */ HRESULT STDMETHODCALLTYPE GetTipText( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrTipText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsSmartTagDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsSmartTagData * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsSmartTagData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsSmartTagData * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetImageIndex )( 
            IVsSmartTagData * This,
            /* [out] */ __RPC__out long *piIndex);
        
        /* [custom] */ HRESULT ( STDMETHODCALLTYPE *GetContextMenuInfo )( 
            IVsSmartTagData * This,
            /* [out] */ __RPC__out GUID *guidID,
            /* [out] */ __RPC__out long *nMenuID,
            /* [out] */ __RPC__deref_out_opt IOleCommandTarget **pCmdTarget);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextStream )( 
            IVsSmartTagData * This,
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *OnDismiss )( 
            IVsSmartTagData * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnInvocation )( 
            IVsSmartTagData * This);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateView )( 
            IVsSmartTagData * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTimerInterval )( 
            IVsSmartTagData * This,
            /* [out] */ __RPC__out long *piTime);
        
        HRESULT ( STDMETHODCALLTYPE *IsLeftJustified )( 
            IVsSmartTagData * This,
            /* [out] */ __RPC__out BOOL *pfIsLeftJustified);
        
        /* [custom] */ HRESULT ( STDMETHODCALLTYPE *GetTipText )( 
            IVsSmartTagData * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrTipText);
        
        END_INTERFACE
    } IVsSmartTagDataVtbl;

    interface IVsSmartTagData
    {
        CONST_VTBL struct IVsSmartTagDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsSmartTagData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsSmartTagData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsSmartTagData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsSmartTagData_GetImageIndex(This,piIndex)	\
    ( (This)->lpVtbl -> GetImageIndex(This,piIndex) ) 

#define IVsSmartTagData_GetContextMenuInfo(This,guidID,nMenuID,pCmdTarget)	\
    ( (This)->lpVtbl -> GetContextMenuInfo(This,guidID,nMenuID,pCmdTarget) ) 

#define IVsSmartTagData_GetContextStream(This,piPos,piLength)	\
    ( (This)->lpVtbl -> GetContextStream(This,piPos,piLength) ) 

#define IVsSmartTagData_OnDismiss(This)	\
    ( (This)->lpVtbl -> OnDismiss(This) ) 

#define IVsSmartTagData_OnInvocation(This)	\
    ( (This)->lpVtbl -> OnInvocation(This) ) 

#define IVsSmartTagData_UpdateView(This)	\
    ( (This)->lpVtbl -> UpdateView(This) ) 

#define IVsSmartTagData_GetTimerInterval(This,piTime)	\
    ( (This)->lpVtbl -> GetTimerInterval(This,piTime) ) 

#define IVsSmartTagData_IsLeftJustified(This,pfIsLeftJustified)	\
    ( (This)->lpVtbl -> IsLeftJustified(This,pfIsLeftJustified) ) 

#define IVsSmartTagData_GetTipText(This,pbstrTipText)	\
    ( (This)->lpVtbl -> GetTipText(This,pbstrTipText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsSmartTagData_INTERFACE_DEFINED__ */


#ifndef __IVsSmartTagTipWindow_INTERFACE_DEFINED__
#define __IVsSmartTagTipWindow_INTERFACE_DEFINED__

/* interface IVsSmartTagTipWindow */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsSmartTagTipWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E2DECE2A-3A77-4fd3-A4B2-FA5EC4EA41D9")
    IVsSmartTagTipWindow : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetContextStream( 
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSizePreferences( 
            /* [in] */ __RPC__in const RECT *prcCtxBounds,
            /* [out] */ __RPC__out SMARTTAGSIZEDATA *pSizeData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Paint( 
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in const RECT *prc,
            /* [in] */ COLORREF pColor,
            /* [in] */ COLORREF pColorText,
            /* [in] */ BOOL fSel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Dismiss( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE WndProc( 
            /* [in] */ __RPC__in HWND hwnd,
            /* [in] */ UINT iMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam,
            __RPC__in LRESULT *pLResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSmartTagData( 
            /* [in] */ __RPC__in_opt IVsSmartTagData *pSmartTagData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsSmartTagTipWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsSmartTagTipWindow * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsSmartTagTipWindow * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsSmartTagTipWindow * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextStream )( 
            IVsSmartTagTipWindow * This,
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetSizePreferences )( 
            IVsSmartTagTipWindow * This,
            /* [in] */ __RPC__in const RECT *prcCtxBounds,
            /* [out] */ __RPC__out SMARTTAGSIZEDATA *pSizeData);
        
        HRESULT ( STDMETHODCALLTYPE *Paint )( 
            IVsSmartTagTipWindow * This,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in const RECT *prc,
            /* [in] */ COLORREF pColor,
            /* [in] */ COLORREF pColorText,
            /* [in] */ BOOL fSel);
        
        HRESULT ( STDMETHODCALLTYPE *Dismiss )( 
            IVsSmartTagTipWindow * This);
        
        HRESULT ( STDMETHODCALLTYPE *WndProc )( 
            IVsSmartTagTipWindow * This,
            /* [in] */ __RPC__in HWND hwnd,
            /* [in] */ UINT iMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam,
            __RPC__in LRESULT *pLResult);
        
        HRESULT ( STDMETHODCALLTYPE *SetSmartTagData )( 
            IVsSmartTagTipWindow * This,
            /* [in] */ __RPC__in_opt IVsSmartTagData *pSmartTagData);
        
        END_INTERFACE
    } IVsSmartTagTipWindowVtbl;

    interface IVsSmartTagTipWindow
    {
        CONST_VTBL struct IVsSmartTagTipWindowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsSmartTagTipWindow_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsSmartTagTipWindow_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsSmartTagTipWindow_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsSmartTagTipWindow_GetContextStream(This,piPos,piLength)	\
    ( (This)->lpVtbl -> GetContextStream(This,piPos,piLength) ) 

#define IVsSmartTagTipWindow_GetSizePreferences(This,prcCtxBounds,pSizeData)	\
    ( (This)->lpVtbl -> GetSizePreferences(This,prcCtxBounds,pSizeData) ) 

#define IVsSmartTagTipWindow_Paint(This,hdc,prc,pColor,pColorText,fSel)	\
    ( (This)->lpVtbl -> Paint(This,hdc,prc,pColor,pColorText,fSel) ) 

#define IVsSmartTagTipWindow_Dismiss(This)	\
    ( (This)->lpVtbl -> Dismiss(This) ) 

#define IVsSmartTagTipWindow_WndProc(This,hwnd,iMsg,wParam,lParam,pLResult)	\
    ( (This)->lpVtbl -> WndProc(This,hwnd,iMsg,wParam,lParam,pLResult) ) 

#define IVsSmartTagTipWindow_SetSmartTagData(This,pSmartTagData)	\
    ( (This)->lpVtbl -> SetSmartTagData(This,pSmartTagData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsSmartTagTipWindow_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_VsSmartTagTipWindow;

#ifdef __cplusplus

class DECLSPEC_UUID("5A46C6DE-1FE4-43b8-8E1E-598AE65F184A")
VsSmartTagTipWindow;
#endif

#ifndef __IVsMethodDataEx_INTERFACE_DEFINED__
#define __IVsMethodDataEx_INTERFACE_DEFINED__

/* interface IVsMethodDataEx */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsMethodDataEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("28ABE611-DCB8-4684-9793-105C92839AAB")
    IVsMethodDataEx : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCopyTipText( 
            /* [in] */ long iMethod,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrTipText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsMethodDataExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsMethodDataEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsMethodDataEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsMethodDataEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCopyTipText )( 
            IVsMethodDataEx * This,
            /* [in] */ long iMethod,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrTipText);
        
        END_INTERFACE
    } IVsMethodDataExVtbl;

    interface IVsMethodDataEx
    {
        CONST_VTBL struct IVsMethodDataExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsMethodDataEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsMethodDataEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsMethodDataEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsMethodDataEx_GetCopyTipText(This,iMethod,pbstrTipText)	\
    ( (This)->lpVtbl -> GetCopyTipText(This,iMethod,pbstrTipText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsMethodDataEx_INTERFACE_DEFINED__ */


#ifndef __IVsLanguageClipboardOpsEx_INTERFACE_DEFINED__
#define __IVsLanguageClipboardOpsEx_INTERFACE_DEFINED__

/* interface IVsLanguageClipboardOpsEx */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLanguageClipboardOpsEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E36E3541-45D6-4ad8-B5AF-DDCB3E02CF3F")
    IVsLanguageClipboardOpsEx : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE IsTextDataEx( 
            /* [in] */ __RPC__in_opt IDataObject *pDO,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [out] */ __RPC__out BOOL *pfIsTextData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLanguageClipboardOpsExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLanguageClipboardOpsEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLanguageClipboardOpsEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLanguageClipboardOpsEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *IsTextDataEx )( 
            IVsLanguageClipboardOpsEx * This,
            /* [in] */ __RPC__in_opt IDataObject *pDO,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [out] */ __RPC__out BOOL *pfIsTextData);
        
        END_INTERFACE
    } IVsLanguageClipboardOpsExVtbl;

    interface IVsLanguageClipboardOpsEx
    {
        CONST_VTBL struct IVsLanguageClipboardOpsExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLanguageClipboardOpsEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLanguageClipboardOpsEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLanguageClipboardOpsEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLanguageClipboardOpsEx_IsTextDataEx(This,pDO,pBuffer,pfIsTextData)	\
    ( (This)->lpVtbl -> IsTextDataEx(This,pDO,pBuffer,pfIsTextData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLanguageClipboardOpsEx_INTERFACE_DEFINED__ */


#ifndef __IVsLanguageDragDropOps_INTERFACE_DEFINED__
#define __IVsLanguageDragDropOps_INTERFACE_DEFINED__

/* interface IVsLanguageDragDropOps */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLanguageDragDropOps;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B3F95731-540E-4f1c-B6D9-1A7FF6DEC782")
    IVsLanguageDragDropOps : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE DragSetup( 
            /* [in] */ __RPC__in_opt IDataObject *pDO,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [out] */ __RPC__out BOOL *pfDocumentContainsTextData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsTextDataAtLocation( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [out] */ __RPC__out BOOL *pfIsTextDataValidAtLoc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DragCleanup( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLanguageDragDropOpsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLanguageDragDropOps * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLanguageDragDropOps * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLanguageDragDropOps * This);
        
        HRESULT ( STDMETHODCALLTYPE *DragSetup )( 
            IVsLanguageDragDropOps * This,
            /* [in] */ __RPC__in_opt IDataObject *pDO,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [out] */ __RPC__out BOOL *pfDocumentContainsTextData);
        
        HRESULT ( STDMETHODCALLTYPE *IsTextDataAtLocation )( 
            IVsLanguageDragDropOps * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [out] */ __RPC__out BOOL *pfIsTextDataValidAtLoc);
        
        HRESULT ( STDMETHODCALLTYPE *DragCleanup )( 
            IVsLanguageDragDropOps * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer);
        
        END_INTERFACE
    } IVsLanguageDragDropOpsVtbl;

    interface IVsLanguageDragDropOps
    {
        CONST_VTBL struct IVsLanguageDragDropOpsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLanguageDragDropOps_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLanguageDragDropOps_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLanguageDragDropOps_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLanguageDragDropOps_DragSetup(This,pDO,pBuffer,pfDocumentContainsTextData)	\
    ( (This)->lpVtbl -> DragSetup(This,pDO,pBuffer,pfDocumentContainsTextData) ) 

#define IVsLanguageDragDropOps_IsTextDataAtLocation(This,pBuffer,iLine,iCol,pfIsTextDataValidAtLoc)	\
    ( (This)->lpVtbl -> IsTextDataAtLocation(This,pBuffer,iLine,iCol,pfIsTextDataValidAtLoc) ) 

#define IVsLanguageDragDropOps_DragCleanup(This,pBuffer)	\
    ( (This)->lpVtbl -> DragCleanup(This,pBuffer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLanguageDragDropOps_INTERFACE_DEFINED__ */


#ifndef __IVsLanguageDebugInfo2_INTERFACE_DEFINED__
#define __IVsLanguageDebugInfo2_INTERFACE_DEFINED__

/* interface IVsLanguageDebugInfo2 */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLanguageDebugInfo2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F1AF0080-C965-4E73-8763-3C6309707D59")
    IVsLanguageDebugInfo2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE QueryCommonLanguageBlock( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [in] */ DWORD dwFlag,
            /* [out] */ __RPC__out BOOL *pfInBlock) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ValidateInstructionpointLocation( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [out] */ __RPC__out TextSpan *pCodeSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryCatchLineSpan( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [out] */ __RPC__out BOOL *pfIsInCatch,
            /* [out] */ __RPC__out TextSpan *ptsCatchLine) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLanguageDebugInfo2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLanguageDebugInfo2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLanguageDebugInfo2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLanguageDebugInfo2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *QueryCommonLanguageBlock )( 
            IVsLanguageDebugInfo2 * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [in] */ DWORD dwFlag,
            /* [out] */ __RPC__out BOOL *pfInBlock);
        
        HRESULT ( STDMETHODCALLTYPE *ValidateInstructionpointLocation )( 
            IVsLanguageDebugInfo2 * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [out] */ __RPC__out TextSpan *pCodeSpan);
        
        HRESULT ( STDMETHODCALLTYPE *QueryCatchLineSpan )( 
            IVsLanguageDebugInfo2 * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [out] */ __RPC__out BOOL *pfIsInCatch,
            /* [out] */ __RPC__out TextSpan *ptsCatchLine);
        
        END_INTERFACE
    } IVsLanguageDebugInfo2Vtbl;

    interface IVsLanguageDebugInfo2
    {
        CONST_VTBL struct IVsLanguageDebugInfo2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLanguageDebugInfo2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLanguageDebugInfo2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLanguageDebugInfo2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLanguageDebugInfo2_QueryCommonLanguageBlock(This,pBuffer,iLine,iCol,dwFlag,pfInBlock)	\
    ( (This)->lpVtbl -> QueryCommonLanguageBlock(This,pBuffer,iLine,iCol,dwFlag,pfInBlock) ) 

#define IVsLanguageDebugInfo2_ValidateInstructionpointLocation(This,pBuffer,iLine,iCol,pCodeSpan)	\
    ( (This)->lpVtbl -> ValidateInstructionpointLocation(This,pBuffer,iLine,iCol,pCodeSpan) ) 

#define IVsLanguageDebugInfo2_QueryCatchLineSpan(This,pBuffer,iLine,iCol,pfIsInCatch,ptsCatchLine)	\
    ( (This)->lpVtbl -> QueryCatchLineSpan(This,pBuffer,iLine,iCol,pfIsInCatch,ptsCatchLine) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLanguageDebugInfo2_INTERFACE_DEFINED__ */


#ifndef __IVsExpansionFunction_INTERFACE_DEFINED__
#define __IVsExpansionFunction_INTERFACE_DEFINED__

/* interface IVsExpansionFunction */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsExpansionFunction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("563011A2-1611-48ed-B3B1-189060064F66")
    IVsExpansionFunction : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFunctionType( 
            /* [out] */ __RPC__out ExpansionFunctionType *pFuncType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetListCount( 
            /* [out] */ __RPC__out long *iCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetListText( 
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultValue( 
            /* [out] */ __RPC__deref_out_opt BSTR *bstrValue,
            /* [out] */ __RPC__out BOOL *fHasDefaultValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FieldChanged( 
            /* [in] */ __RPC__in BSTR bstrField,
            /* [out] */ __RPC__out BOOL *fRequeryFunction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentValue( 
            /* [out] */ __RPC__deref_out_opt BSTR *bstrValue,
            /* [out] */ __RPC__out BOOL *fHasCurrentValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseFunction( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsExpansionFunctionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsExpansionFunction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsExpansionFunction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsExpansionFunction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetFunctionType )( 
            IVsExpansionFunction * This,
            /* [out] */ __RPC__out ExpansionFunctionType *pFuncType);
        
        HRESULT ( STDMETHODCALLTYPE *GetListCount )( 
            IVsExpansionFunction * This,
            /* [out] */ __RPC__out long *iCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetListText )( 
            IVsExpansionFunction * This,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultValue )( 
            IVsExpansionFunction * This,
            /* [out] */ __RPC__deref_out_opt BSTR *bstrValue,
            /* [out] */ __RPC__out BOOL *fHasDefaultValue);
        
        HRESULT ( STDMETHODCALLTYPE *FieldChanged )( 
            IVsExpansionFunction * This,
            /* [in] */ __RPC__in BSTR bstrField,
            /* [out] */ __RPC__out BOOL *fRequeryFunction);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentValue )( 
            IVsExpansionFunction * This,
            /* [out] */ __RPC__deref_out_opt BSTR *bstrValue,
            /* [out] */ __RPC__out BOOL *fHasCurrentValue);
        
        HRESULT ( STDMETHODCALLTYPE *ReleaseFunction )( 
            IVsExpansionFunction * This);
        
        END_INTERFACE
    } IVsExpansionFunctionVtbl;

    interface IVsExpansionFunction
    {
        CONST_VTBL struct IVsExpansionFunctionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsExpansionFunction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsExpansionFunction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsExpansionFunction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsExpansionFunction_GetFunctionType(This,pFuncType)	\
    ( (This)->lpVtbl -> GetFunctionType(This,pFuncType) ) 

#define IVsExpansionFunction_GetListCount(This,iCount)	\
    ( (This)->lpVtbl -> GetListCount(This,iCount) ) 

#define IVsExpansionFunction_GetListText(This,iIndex,pbstrText)	\
    ( (This)->lpVtbl -> GetListText(This,iIndex,pbstrText) ) 

#define IVsExpansionFunction_GetDefaultValue(This,bstrValue,fHasDefaultValue)	\
    ( (This)->lpVtbl -> GetDefaultValue(This,bstrValue,fHasDefaultValue) ) 

#define IVsExpansionFunction_FieldChanged(This,bstrField,fRequeryFunction)	\
    ( (This)->lpVtbl -> FieldChanged(This,bstrField,fRequeryFunction) ) 

#define IVsExpansionFunction_GetCurrentValue(This,bstrValue,fHasCurrentValue)	\
    ( (This)->lpVtbl -> GetCurrentValue(This,bstrValue,fHasCurrentValue) ) 

#define IVsExpansionFunction_ReleaseFunction(This)	\
    ( (This)->lpVtbl -> ReleaseFunction(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsExpansionFunction_INTERFACE_DEFINED__ */


#ifndef __IVsExpansionClient_INTERFACE_DEFINED__
#define __IVsExpansionClient_INTERFACE_DEFINED__

/* interface IVsExpansionClient */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsExpansionClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9DD0F39A-9502-4068-93B7-B6ADAB33ECD8")
    IVsExpansionClient : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetExpansionFunction( 
            /* [in] */ __RPC__in_opt IXMLDOMNode *xmlFunctionNode,
            /* [in] */ __RPC__in BSTR bstrFieldName,
            /* [out] */ __RPC__deref_out_opt IVsExpansionFunction **pFunc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FormatSpan( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in TextSpan *ts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndExpansion( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsValidType( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in TextSpan *ts,
            /* [size_is][in] */ __RPC__in_ecount_full(iCountTypes) BSTR *rgTypes,
            /* [in] */ int iCountTypes,
            /* [out] */ __RPC__out BOOL *pfIsValidType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsValidKind( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in TextSpan *ts,
            /* [in] */ __RPC__in BSTR bstrKind,
            /* [out] */ __RPC__out BOOL *pfIsValidKind) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnBeforeInsertion( 
            __RPC__in_opt IVsExpansionSession *pSession) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnAfterInsertion( 
            __RPC__in_opt IVsExpansionSession *pSession) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PositionCaretForEditing( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in TextSpan *ts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnItemChosen( 
            /* [in] */ __RPC__in BSTR pszTitle,
            /* [in] */ __RPC__in BSTR pszPath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsExpansionClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsExpansionClient * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsExpansionClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsExpansionClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetExpansionFunction )( 
            IVsExpansionClient * This,
            /* [in] */ __RPC__in_opt IXMLDOMNode *xmlFunctionNode,
            /* [in] */ __RPC__in BSTR bstrFieldName,
            /* [out] */ __RPC__deref_out_opt IVsExpansionFunction **pFunc);
        
        HRESULT ( STDMETHODCALLTYPE *FormatSpan )( 
            IVsExpansionClient * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in TextSpan *ts);
        
        HRESULT ( STDMETHODCALLTYPE *EndExpansion )( 
            IVsExpansionClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *IsValidType )( 
            IVsExpansionClient * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in TextSpan *ts,
            /* [size_is][in] */ __RPC__in_ecount_full(iCountTypes) BSTR *rgTypes,
            /* [in] */ int iCountTypes,
            /* [out] */ __RPC__out BOOL *pfIsValidType);
        
        HRESULT ( STDMETHODCALLTYPE *IsValidKind )( 
            IVsExpansionClient * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in TextSpan *ts,
            /* [in] */ __RPC__in BSTR bstrKind,
            /* [out] */ __RPC__out BOOL *pfIsValidKind);
        
        HRESULT ( STDMETHODCALLTYPE *OnBeforeInsertion )( 
            IVsExpansionClient * This,
            __RPC__in_opt IVsExpansionSession *pSession);
        
        HRESULT ( STDMETHODCALLTYPE *OnAfterInsertion )( 
            IVsExpansionClient * This,
            __RPC__in_opt IVsExpansionSession *pSession);
        
        HRESULT ( STDMETHODCALLTYPE *PositionCaretForEditing )( 
            IVsExpansionClient * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in TextSpan *ts);
        
        HRESULT ( STDMETHODCALLTYPE *OnItemChosen )( 
            IVsExpansionClient * This,
            /* [in] */ __RPC__in BSTR pszTitle,
            /* [in] */ __RPC__in BSTR pszPath);
        
        END_INTERFACE
    } IVsExpansionClientVtbl;

    interface IVsExpansionClient
    {
        CONST_VTBL struct IVsExpansionClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsExpansionClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsExpansionClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsExpansionClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsExpansionClient_GetExpansionFunction(This,xmlFunctionNode,bstrFieldName,pFunc)	\
    ( (This)->lpVtbl -> GetExpansionFunction(This,xmlFunctionNode,bstrFieldName,pFunc) ) 

#define IVsExpansionClient_FormatSpan(This,pBuffer,ts)	\
    ( (This)->lpVtbl -> FormatSpan(This,pBuffer,ts) ) 

#define IVsExpansionClient_EndExpansion(This)	\
    ( (This)->lpVtbl -> EndExpansion(This) ) 

#define IVsExpansionClient_IsValidType(This,pBuffer,ts,rgTypes,iCountTypes,pfIsValidType)	\
    ( (This)->lpVtbl -> IsValidType(This,pBuffer,ts,rgTypes,iCountTypes,pfIsValidType) ) 

#define IVsExpansionClient_IsValidKind(This,pBuffer,ts,bstrKind,pfIsValidKind)	\
    ( (This)->lpVtbl -> IsValidKind(This,pBuffer,ts,bstrKind,pfIsValidKind) ) 

#define IVsExpansionClient_OnBeforeInsertion(This,pSession)	\
    ( (This)->lpVtbl -> OnBeforeInsertion(This,pSession) ) 

#define IVsExpansionClient_OnAfterInsertion(This,pSession)	\
    ( (This)->lpVtbl -> OnAfterInsertion(This,pSession) ) 

#define IVsExpansionClient_PositionCaretForEditing(This,pBuffer,ts)	\
    ( (This)->lpVtbl -> PositionCaretForEditing(This,pBuffer,ts) ) 

#define IVsExpansionClient_OnItemChosen(This,pszTitle,pszPath)	\
    ( (This)->lpVtbl -> OnItemChosen(This,pszTitle,pszPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsExpansionClient_INTERFACE_DEFINED__ */


#ifndef __IVsExpansionEnumeration_INTERFACE_DEFINED__
#define __IVsExpansionEnumeration_INTERFACE_DEFINED__

/* interface IVsExpansionEnumeration */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsExpansionEnumeration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("341E80BE-5B26-4dee-A111-32A8373D1B51")
    IVsExpansionEnumeration : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) VsExpansion **rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *pCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsExpansionEnumerationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsExpansionEnumeration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsExpansionEnumeration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsExpansionEnumeration * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsExpansionEnumeration * This,
            ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) VsExpansion **rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsExpansionEnumeration * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsExpansionEnumeration * This,
            /* [out] */ __RPC__out ULONG *pCount);
        
        END_INTERFACE
    } IVsExpansionEnumerationVtbl;

    interface IVsExpansionEnumeration
    {
        CONST_VTBL struct IVsExpansionEnumerationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsExpansionEnumeration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsExpansionEnumeration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsExpansionEnumeration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsExpansionEnumeration_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IVsExpansionEnumeration_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsExpansionEnumeration_GetCount(This,pCount)	\
    ( (This)->lpVtbl -> GetCount(This,pCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsExpansionEnumeration_INTERFACE_DEFINED__ */


#ifndef __IVsExpansionManager_INTERFACE_DEFINED__
#define __IVsExpansionManager_INTERFACE_DEFINED__

/* interface IVsExpansionManager */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsExpansionManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CA09E5EA-FEE7-4b52-AFE6-8EA2EC53F681")
    IVsExpansionManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE EnumerateExpansions( 
            /* [in] */ GUID guidLang,
            /* [in] */ BOOL fShortCutOnly,
            /* [size_is][in] */ __RPC__in_ecount_full(iCountTypes) BSTR *bstrTypes,
            /* [in] */ long iCountTypes,
            /* [in] */ BOOL fIncludeNULLType,
            /* [in] */ BOOL fIncludeDuplicates,
            /* [out] */ __RPC__deref_out_opt IVsExpansionEnumeration **pEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvokeInsertionUI( 
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ __RPC__in_opt IVsExpansionClient *pClient,
            /* [in] */ GUID guidLang,
            /* [size_is][in] */ __RPC__in_ecount_full(iCountTypes) BSTR *bstrTypes,
            /* [in] */ long iCountTypes,
            /* [in] */ BOOL fIncludeNULLType,
            /* [size_is][in] */ __RPC__in_ecount_full(iCountKinds) BSTR *bstrKinds,
            /* [in] */ long iCountKinds,
            /* [in] */ BOOL fIncludeNULLKind,
            /* [in] */ __RPC__in BSTR bstrPrefixText,
            /* [in] */ __RPC__in BSTR bstrCompletionChar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExpansionByShortcut( 
            /* [in] */ __RPC__in_opt IVsExpansionClient *pClient,
            /* [in] */ GUID guidLang,
            /* [string][in] */ __RPC__in LPOLESTR szShortcut,
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ __RPC__in TextSpan *pts,
            /* [in] */ BOOL fShowUI,
            /* [out] */ __RPC__deref_out_opt BSTR *pszExpansionPath,
            /* [out] */ __RPC__deref_out_opt BSTR *pszTitle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTokenPath( 
            /* [in] */ ExpansionToken token,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrPath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSnippetShortCutKeybindingState( 
            /* [out] */ __RPC__out BOOL *fBound) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsExpansionManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsExpansionManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsExpansionManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsExpansionManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *EnumerateExpansions )( 
            IVsExpansionManager * This,
            /* [in] */ GUID guidLang,
            /* [in] */ BOOL fShortCutOnly,
            /* [size_is][in] */ __RPC__in_ecount_full(iCountTypes) BSTR *bstrTypes,
            /* [in] */ long iCountTypes,
            /* [in] */ BOOL fIncludeNULLType,
            /* [in] */ BOOL fIncludeDuplicates,
            /* [out] */ __RPC__deref_out_opt IVsExpansionEnumeration **pEnum);
        
        HRESULT ( STDMETHODCALLTYPE *InvokeInsertionUI )( 
            IVsExpansionManager * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ __RPC__in_opt IVsExpansionClient *pClient,
            /* [in] */ GUID guidLang,
            /* [size_is][in] */ __RPC__in_ecount_full(iCountTypes) BSTR *bstrTypes,
            /* [in] */ long iCountTypes,
            /* [in] */ BOOL fIncludeNULLType,
            /* [size_is][in] */ __RPC__in_ecount_full(iCountKinds) BSTR *bstrKinds,
            /* [in] */ long iCountKinds,
            /* [in] */ BOOL fIncludeNULLKind,
            /* [in] */ __RPC__in BSTR bstrPrefixText,
            /* [in] */ __RPC__in BSTR bstrCompletionChar);
        
        HRESULT ( STDMETHODCALLTYPE *GetExpansionByShortcut )( 
            IVsExpansionManager * This,
            /* [in] */ __RPC__in_opt IVsExpansionClient *pClient,
            /* [in] */ GUID guidLang,
            /* [string][in] */ __RPC__in LPOLESTR szShortcut,
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ __RPC__in TextSpan *pts,
            /* [in] */ BOOL fShowUI,
            /* [out] */ __RPC__deref_out_opt BSTR *pszExpansionPath,
            /* [out] */ __RPC__deref_out_opt BSTR *pszTitle);
        
        HRESULT ( STDMETHODCALLTYPE *GetTokenPath )( 
            IVsExpansionManager * This,
            /* [in] */ ExpansionToken token,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrPath);
        
        HRESULT ( STDMETHODCALLTYPE *GetSnippetShortCutKeybindingState )( 
            IVsExpansionManager * This,
            /* [out] */ __RPC__out BOOL *fBound);
        
        END_INTERFACE
    } IVsExpansionManagerVtbl;

    interface IVsExpansionManager
    {
        CONST_VTBL struct IVsExpansionManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsExpansionManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsExpansionManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsExpansionManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsExpansionManager_EnumerateExpansions(This,guidLang,fShortCutOnly,bstrTypes,iCountTypes,fIncludeNULLType,fIncludeDuplicates,pEnum)	\
    ( (This)->lpVtbl -> EnumerateExpansions(This,guidLang,fShortCutOnly,bstrTypes,iCountTypes,fIncludeNULLType,fIncludeDuplicates,pEnum) ) 

#define IVsExpansionManager_InvokeInsertionUI(This,pView,pClient,guidLang,bstrTypes,iCountTypes,fIncludeNULLType,bstrKinds,iCountKinds,fIncludeNULLKind,bstrPrefixText,bstrCompletionChar)	\
    ( (This)->lpVtbl -> InvokeInsertionUI(This,pView,pClient,guidLang,bstrTypes,iCountTypes,fIncludeNULLType,bstrKinds,iCountKinds,fIncludeNULLKind,bstrPrefixText,bstrCompletionChar) ) 

#define IVsExpansionManager_GetExpansionByShortcut(This,pClient,guidLang,szShortcut,pView,pts,fShowUI,pszExpansionPath,pszTitle)	\
    ( (This)->lpVtbl -> GetExpansionByShortcut(This,pClient,guidLang,szShortcut,pView,pts,fShowUI,pszExpansionPath,pszTitle) ) 

#define IVsExpansionManager_GetTokenPath(This,token,pbstrPath)	\
    ( (This)->lpVtbl -> GetTokenPath(This,token,pbstrPath) ) 

#define IVsExpansionManager_GetSnippetShortCutKeybindingState(This,fBound)	\
    ( (This)->lpVtbl -> GetSnippetShortCutKeybindingState(This,fBound) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsExpansionManager_INTERFACE_DEFINED__ */


#ifndef __IVsExpansion_INTERFACE_DEFINED__
#define __IVsExpansion_INTERFACE_DEFINED__

/* interface IVsExpansion */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsExpansion;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("798CC43B-7714-4dc1-925A-47863C24630D")
    IVsExpansion : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InsertExpansion( 
            /* [in] */ TextSpan tsContext,
            /* [in] */ TextSpan tsInsertPos,
            /* [in] */ __RPC__in_opt IVsExpansionClient *pExpansionClient,
            /* [in] */ GUID guidLang,
            /* [out] */ __RPC__deref_out_opt IVsExpansionSession **pSession) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertNamedExpansion( 
            /* [in] */ __RPC__in BSTR bstrTitle,
            /* [in] */ __RPC__in BSTR bstrPath,
            /* [in] */ TextSpan tsInsertPos,
            /* [in] */ __RPC__in_opt IVsExpansionClient *pExpansionClient,
            /* [in] */ GUID guidLang,
            /* [in] */ BOOL fShowDisambiguationUI,
            /* [out] */ __RPC__deref_out_opt IVsExpansionSession **pSession) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertSpecificExpansion( 
            /* [in] */ __RPC__in_opt IXMLDOMNode *pSnippet,
            /* [in] */ TextSpan tsInsertPos,
            /* [in] */ __RPC__in_opt IVsExpansionClient *pExpansionClient,
            /* [in] */ GUID guidLang,
            /* [in] */ __RPC__in BSTR pszRelativePath,
            /* [out] */ __RPC__deref_out_opt IVsExpansionSession **pSession) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsExpansionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsExpansion * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsExpansion * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsExpansion * This);
        
        HRESULT ( STDMETHODCALLTYPE *InsertExpansion )( 
            IVsExpansion * This,
            /* [in] */ TextSpan tsContext,
            /* [in] */ TextSpan tsInsertPos,
            /* [in] */ __RPC__in_opt IVsExpansionClient *pExpansionClient,
            /* [in] */ GUID guidLang,
            /* [out] */ __RPC__deref_out_opt IVsExpansionSession **pSession);
        
        HRESULT ( STDMETHODCALLTYPE *InsertNamedExpansion )( 
            IVsExpansion * This,
            /* [in] */ __RPC__in BSTR bstrTitle,
            /* [in] */ __RPC__in BSTR bstrPath,
            /* [in] */ TextSpan tsInsertPos,
            /* [in] */ __RPC__in_opt IVsExpansionClient *pExpansionClient,
            /* [in] */ GUID guidLang,
            /* [in] */ BOOL fShowDisambiguationUI,
            /* [out] */ __RPC__deref_out_opt IVsExpansionSession **pSession);
        
        HRESULT ( STDMETHODCALLTYPE *InsertSpecificExpansion )( 
            IVsExpansion * This,
            /* [in] */ __RPC__in_opt IXMLDOMNode *pSnippet,
            /* [in] */ TextSpan tsInsertPos,
            /* [in] */ __RPC__in_opt IVsExpansionClient *pExpansionClient,
            /* [in] */ GUID guidLang,
            /* [in] */ __RPC__in BSTR pszRelativePath,
            /* [out] */ __RPC__deref_out_opt IVsExpansionSession **pSession);
        
        END_INTERFACE
    } IVsExpansionVtbl;

    interface IVsExpansion
    {
        CONST_VTBL struct IVsExpansionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsExpansion_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsExpansion_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsExpansion_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsExpansion_InsertExpansion(This,tsContext,tsInsertPos,pExpansionClient,guidLang,pSession)	\
    ( (This)->lpVtbl -> InsertExpansion(This,tsContext,tsInsertPos,pExpansionClient,guidLang,pSession) ) 

#define IVsExpansion_InsertNamedExpansion(This,bstrTitle,bstrPath,tsInsertPos,pExpansionClient,guidLang,fShowDisambiguationUI,pSession)	\
    ( (This)->lpVtbl -> InsertNamedExpansion(This,bstrTitle,bstrPath,tsInsertPos,pExpansionClient,guidLang,fShowDisambiguationUI,pSession) ) 

#define IVsExpansion_InsertSpecificExpansion(This,pSnippet,tsInsertPos,pExpansionClient,guidLang,pszRelativePath,pSession)	\
    ( (This)->lpVtbl -> InsertSpecificExpansion(This,pSnippet,tsInsertPos,pExpansionClient,guidLang,pszRelativePath,pSession) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsExpansion_INTERFACE_DEFINED__ */


#ifndef __IVsExpansionSession_INTERFACE_DEFINED__
#define __IVsExpansionSession_INTERFACE_DEFINED__

/* interface IVsExpansionSession */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsExpansionSession;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3DFA7603-3B51-4484-81CD-FF1470123C7C")
    IVsExpansionSession : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE EndCurrentExpansion( 
            /* [in] */ BOOL fLeaveCaret) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GoToNextExpansionField( 
            /* [in] */ BOOL fCommitIfLast) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GoToPreviousExpansionField( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFieldValue( 
            /* [in] */ __RPC__in BSTR bstrFieldName,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFieldDefault( 
            /* [in] */ __RPC__in BSTR bstrFieldName,
            /* [in] */ __RPC__in BSTR bstrNewValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFieldSpan( 
            /* [in] */ __RPC__in BSTR bstrField,
            /* [out] */ __RPC__out TextSpan *ptsSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHeaderNode( 
            /* [in] */ __RPC__in BSTR bstrNode,
            /* [out] */ __RPC__deref_out_opt IXMLDOMNode **pNode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDeclarationNode( 
            /* [in] */ __RPC__in BSTR bstrNode,
            /* [out] */ __RPC__deref_out_opt IXMLDOMNode **pNode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSnippetNode( 
            /* [in] */ __RPC__in BSTR bstrNode,
            /* [out] */ __RPC__deref_out_opt IXMLDOMNode **pNode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSnippetSpan( 
            /* [out] */ __RPC__out TextSpan *pts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEndSpan( 
            /* [in] */ TextSpan ts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEndSpan( 
            /* [out] */ __RPC__out TextSpan *pts) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsExpansionSessionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsExpansionSession * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsExpansionSession * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsExpansionSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *EndCurrentExpansion )( 
            IVsExpansionSession * This,
            /* [in] */ BOOL fLeaveCaret);
        
        HRESULT ( STDMETHODCALLTYPE *GoToNextExpansionField )( 
            IVsExpansionSession * This,
            /* [in] */ BOOL fCommitIfLast);
        
        HRESULT ( STDMETHODCALLTYPE *GoToPreviousExpansionField )( 
            IVsExpansionSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetFieldValue )( 
            IVsExpansionSession * This,
            /* [in] */ __RPC__in BSTR bstrFieldName,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetFieldDefault )( 
            IVsExpansionSession * This,
            /* [in] */ __RPC__in BSTR bstrFieldName,
            /* [in] */ __RPC__in BSTR bstrNewValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetFieldSpan )( 
            IVsExpansionSession * This,
            /* [in] */ __RPC__in BSTR bstrField,
            /* [out] */ __RPC__out TextSpan *ptsSpan);
        
        HRESULT ( STDMETHODCALLTYPE *GetHeaderNode )( 
            IVsExpansionSession * This,
            /* [in] */ __RPC__in BSTR bstrNode,
            /* [out] */ __RPC__deref_out_opt IXMLDOMNode **pNode);
        
        HRESULT ( STDMETHODCALLTYPE *GetDeclarationNode )( 
            IVsExpansionSession * This,
            /* [in] */ __RPC__in BSTR bstrNode,
            /* [out] */ __RPC__deref_out_opt IXMLDOMNode **pNode);
        
        HRESULT ( STDMETHODCALLTYPE *GetSnippetNode )( 
            IVsExpansionSession * This,
            /* [in] */ __RPC__in BSTR bstrNode,
            /* [out] */ __RPC__deref_out_opt IXMLDOMNode **pNode);
        
        HRESULT ( STDMETHODCALLTYPE *GetSnippetSpan )( 
            IVsExpansionSession * This,
            /* [out] */ __RPC__out TextSpan *pts);
        
        HRESULT ( STDMETHODCALLTYPE *SetEndSpan )( 
            IVsExpansionSession * This,
            /* [in] */ TextSpan ts);
        
        HRESULT ( STDMETHODCALLTYPE *GetEndSpan )( 
            IVsExpansionSession * This,
            /* [out] */ __RPC__out TextSpan *pts);
        
        END_INTERFACE
    } IVsExpansionSessionVtbl;

    interface IVsExpansionSession
    {
        CONST_VTBL struct IVsExpansionSessionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsExpansionSession_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsExpansionSession_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsExpansionSession_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsExpansionSession_EndCurrentExpansion(This,fLeaveCaret)	\
    ( (This)->lpVtbl -> EndCurrentExpansion(This,fLeaveCaret) ) 

#define IVsExpansionSession_GoToNextExpansionField(This,fCommitIfLast)	\
    ( (This)->lpVtbl -> GoToNextExpansionField(This,fCommitIfLast) ) 

#define IVsExpansionSession_GoToPreviousExpansionField(This)	\
    ( (This)->lpVtbl -> GoToPreviousExpansionField(This) ) 

#define IVsExpansionSession_GetFieldValue(This,bstrFieldName,pbstrValue)	\
    ( (This)->lpVtbl -> GetFieldValue(This,bstrFieldName,pbstrValue) ) 

#define IVsExpansionSession_SetFieldDefault(This,bstrFieldName,bstrNewValue)	\
    ( (This)->lpVtbl -> SetFieldDefault(This,bstrFieldName,bstrNewValue) ) 

#define IVsExpansionSession_GetFieldSpan(This,bstrField,ptsSpan)	\
    ( (This)->lpVtbl -> GetFieldSpan(This,bstrField,ptsSpan) ) 

#define IVsExpansionSession_GetHeaderNode(This,bstrNode,pNode)	\
    ( (This)->lpVtbl -> GetHeaderNode(This,bstrNode,pNode) ) 

#define IVsExpansionSession_GetDeclarationNode(This,bstrNode,pNode)	\
    ( (This)->lpVtbl -> GetDeclarationNode(This,bstrNode,pNode) ) 

#define IVsExpansionSession_GetSnippetNode(This,bstrNode,pNode)	\
    ( (This)->lpVtbl -> GetSnippetNode(This,bstrNode,pNode) ) 

#define IVsExpansionSession_GetSnippetSpan(This,pts)	\
    ( (This)->lpVtbl -> GetSnippetSpan(This,pts) ) 

#define IVsExpansionSession_SetEndSpan(This,ts)	\
    ( (This)->lpVtbl -> SetEndSpan(This,ts) ) 

#define IVsExpansionSession_GetEndSpan(This,pts)	\
    ( (This)->lpVtbl -> GetEndSpan(This,pts) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsExpansionSession_INTERFACE_DEFINED__ */


#ifndef __IVsMethodTipWindow2_INTERFACE_DEFINED__
#define __IVsMethodTipWindow2_INTERFACE_DEFINED__

/* interface IVsMethodTipWindow2 */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsMethodTipWindow2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E9E55E72-13BC-4362-B80A-A2EB33A75809")
    IVsMethodTipWindow2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE NextMethod( 
            /* [out] */ __RPC__out BOOL *pfSuccess) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PrevMethod( 
            /* [out] */ __RPC__out BOOL *pfSuccess) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOverloadCount( 
            __RPC__in long *piCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsMethodTipWindow2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsMethodTipWindow2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsMethodTipWindow2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsMethodTipWindow2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *NextMethod )( 
            IVsMethodTipWindow2 * This,
            /* [out] */ __RPC__out BOOL *pfSuccess);
        
        HRESULT ( STDMETHODCALLTYPE *PrevMethod )( 
            IVsMethodTipWindow2 * This,
            /* [out] */ __RPC__out BOOL *pfSuccess);
        
        HRESULT ( STDMETHODCALLTYPE *GetOverloadCount )( 
            IVsMethodTipWindow2 * This,
            __RPC__in long *piCount);
        
        END_INTERFACE
    } IVsMethodTipWindow2Vtbl;

    interface IVsMethodTipWindow2
    {
        CONST_VTBL struct IVsMethodTipWindow2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsMethodTipWindow2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsMethodTipWindow2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsMethodTipWindow2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsMethodTipWindow2_NextMethod(This,pfSuccess)	\
    ( (This)->lpVtbl -> NextMethod(This,pfSuccess) ) 

#define IVsMethodTipWindow2_PrevMethod(This,pfSuccess)	\
    ( (This)->lpVtbl -> PrevMethod(This,pfSuccess) ) 

#define IVsMethodTipWindow2_GetOverloadCount(This,piCount)	\
    ( (This)->lpVtbl -> GetOverloadCount(This,piCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsMethodTipWindow2_INTERFACE_DEFINED__ */


#ifndef __IVsIntellisenseOptions_INTERFACE_DEFINED__
#define __IVsIntellisenseOptions_INTERFACE_DEFINED__

/* interface IVsIntellisenseOptions */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsIntellisenseOptions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("592346B2-C79C-4d3f-885A-3DA61899EE4B")
    IVsIntellisenseOptions : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetCompletorSize( 
            /* [in] */ long uSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCompletorSize( 
            /* [out] */ __RPC__out long *uSize) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsIntellisenseOptionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsIntellisenseOptions * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsIntellisenseOptions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsIntellisenseOptions * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetCompletorSize )( 
            IVsIntellisenseOptions * This,
            /* [in] */ long uSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetCompletorSize )( 
            IVsIntellisenseOptions * This,
            /* [out] */ __RPC__out long *uSize);
        
        END_INTERFACE
    } IVsIntellisenseOptionsVtbl;

    interface IVsIntellisenseOptions
    {
        CONST_VTBL struct IVsIntellisenseOptionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsIntellisenseOptions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsIntellisenseOptions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsIntellisenseOptions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsIntellisenseOptions_SetCompletorSize(This,uSize)	\
    ( (This)->lpVtbl -> SetCompletorSize(This,uSize) ) 

#define IVsIntellisenseOptions_GetCompletorSize(This,uSize)	\
    ( (This)->lpVtbl -> GetCompletorSize(This,uSize) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsIntellisenseOptions_INTERFACE_DEFINED__ */


#ifndef __IVsColorizer2_INTERFACE_DEFINED__
#define __IVsColorizer2_INTERFACE_DEFINED__

/* interface IVsColorizer2 */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsColorizer2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("868A4381-537A-4d61-803C-301819CE2C2F")
    IVsColorizer2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BeginColorization( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndColorization( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsColorizer2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsColorizer2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsColorizer2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsColorizer2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *BeginColorization )( 
            IVsColorizer2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *EndColorization )( 
            IVsColorizer2 * This);
        
        END_INTERFACE
    } IVsColorizer2Vtbl;

    interface IVsColorizer2
    {
        CONST_VTBL struct IVsColorizer2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsColorizer2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsColorizer2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsColorizer2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsColorizer2_BeginColorization(This)	\
    ( (This)->lpVtbl -> BeginColorization(This) ) 

#define IVsColorizer2_EndColorization(This)	\
    ( (This)->lpVtbl -> EndColorization(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsColorizer2_INTERFACE_DEFINED__ */


#ifndef __IVsExpansionEvents_INTERFACE_DEFINED__
#define __IVsExpansionEvents_INTERFACE_DEFINED__

/* interface IVsExpansionEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsExpansionEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("08107089-905F-47ab-989F-E365C5087402")
    IVsExpansionEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnAfterSnippetsUpdate( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnAfterSnippetsKeyBindingChange( 
            /* [in] */ DWORD dwCmdGuid,
            /* [in] */ DWORD dwCmdId,
            /* [in] */ BOOL fBound) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsExpansionEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsExpansionEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsExpansionEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsExpansionEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnAfterSnippetsUpdate )( 
            IVsExpansionEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnAfterSnippetsKeyBindingChange )( 
            IVsExpansionEvents * This,
            /* [in] */ DWORD dwCmdGuid,
            /* [in] */ DWORD dwCmdId,
            /* [in] */ BOOL fBound);
        
        END_INTERFACE
    } IVsExpansionEventsVtbl;

    interface IVsExpansionEvents
    {
        CONST_VTBL struct IVsExpansionEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsExpansionEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsExpansionEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsExpansionEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsExpansionEvents_OnAfterSnippetsUpdate(This)	\
    ( (This)->lpVtbl -> OnAfterSnippetsUpdate(This) ) 

#define IVsExpansionEvents_OnAfterSnippetsKeyBindingChange(This,dwCmdGuid,dwCmdId,fBound)	\
    ( (This)->lpVtbl -> OnAfterSnippetsKeyBindingChange(This,dwCmdGuid,dwCmdId,fBound) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsExpansionEvents_INTERFACE_DEFINED__ */


#ifndef __IVsLanguageLineIndent_INTERFACE_DEFINED__
#define __IVsLanguageLineIndent_INTERFACE_DEFINED__

/* interface IVsLanguageLineIndent */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLanguageLineIndent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E5A25E79-4A3C-4fcb-B375-196F5E8D1B2D")
    IVsLanguageLineIndent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetIndentPosition( 
            /* [in] */ __RPC__in_opt IVsTextLayer *pBaseLayer,
            /* [in] */ long BaseBufferLineIndex,
            /* [out] */ __RPC__out long *pIndentPosition) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLanguageLineIndentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLanguageLineIndent * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLanguageLineIndent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLanguageLineIndent * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIndentPosition )( 
            IVsLanguageLineIndent * This,
            /* [in] */ __RPC__in_opt IVsTextLayer *pBaseLayer,
            /* [in] */ long BaseBufferLineIndex,
            /* [out] */ __RPC__out long *pIndentPosition);
        
        END_INTERFACE
    } IVsLanguageLineIndentVtbl;

    interface IVsLanguageLineIndent
    {
        CONST_VTBL struct IVsLanguageLineIndentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLanguageLineIndent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLanguageLineIndent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLanguageLineIndent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLanguageLineIndent_GetIndentPosition(This,pBaseLayer,BaseBufferLineIndex,pIndentPosition)	\
    ( (This)->lpVtbl -> GetIndentPosition(This,pBaseLayer,BaseBufferLineIndex,pIndentPosition) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLanguageLineIndent_INTERFACE_DEFINED__ */


#ifndef __IVsQueryUndoUnit_INTERFACE_DEFINED__
#define __IVsQueryUndoUnit_INTERFACE_DEFINED__

/* interface IVsQueryUndoUnit */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsQueryUndoUnit;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("036FBE7A-9ABD-4894-B7F6-1ED3BD0EE247")
    IVsQueryUndoUnit : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ActionWouldBeAborted( 
            /* [out] */ __RPC__out BOOL *pbWouldBeAborted) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsQueryUndoUnitVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsQueryUndoUnit * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsQueryUndoUnit * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsQueryUndoUnit * This);
        
        HRESULT ( STDMETHODCALLTYPE *ActionWouldBeAborted )( 
            IVsQueryUndoUnit * This,
            /* [out] */ __RPC__out BOOL *pbWouldBeAborted);
        
        END_INTERFACE
    } IVsQueryUndoUnitVtbl;

    interface IVsQueryUndoUnit
    {
        CONST_VTBL struct IVsQueryUndoUnitVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsQueryUndoUnit_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsQueryUndoUnit_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsQueryUndoUnit_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsQueryUndoUnit_ActionWouldBeAborted(This,pbWouldBeAborted)	\
    ( (This)->lpVtbl -> ActionWouldBeAborted(This,pbWouldBeAborted) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsQueryUndoUnit_INTERFACE_DEFINED__ */


#ifndef __IVsQueryUndoManager_INTERFACE_DEFINED__
#define __IVsQueryUndoManager_INTERFACE_DEFINED__

/* interface IVsQueryUndoManager */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsQueryUndoManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6ED9A1CD-E8FD-460a-8690-DD6E5E44B02D")
    IVsQueryUndoManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE IsLinkedTransactionOpen( 
            /* [out] */ __RPC__out BOOL *pbTransactionIsOpen) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsQueryUndoManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsQueryUndoManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsQueryUndoManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsQueryUndoManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *IsLinkedTransactionOpen )( 
            IVsQueryUndoManager * This,
            /* [out] */ __RPC__out BOOL *pbTransactionIsOpen);
        
        END_INTERFACE
    } IVsQueryUndoManagerVtbl;

    interface IVsQueryUndoManager
    {
        CONST_VTBL struct IVsQueryUndoManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsQueryUndoManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsQueryUndoManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsQueryUndoManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsQueryUndoManager_IsLinkedTransactionOpen(This,pbTransactionIsOpen)	\
    ( (This)->lpVtbl -> IsLinkedTransactionOpen(This,pbTransactionIsOpen) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsQueryUndoManager_INTERFACE_DEFINED__ */


#ifndef __IPersistFileCheckSum_INTERFACE_DEFINED__
#define __IPersistFileCheckSum_INTERFACE_DEFINED__

/* interface IPersistFileCheckSum */
/* [object][uuid] */ 


EXTERN_C const IID IID_IPersistFileCheckSum;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("35355DA7-3EEA-452e-89F3-68344278F806")
    IPersistFileCheckSum : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CalculateCheckSum( 
            /* [in] */ __RPC__in REFGUID guidCheckSumAlgorithm,
            /* [in] */ DWORD cbBufferSize,
            /* [size_is][out] */ __RPC__out_ecount_full(cbBufferSize) BYTE *pbHash,
            /* [out] */ __RPC__out DWORD *pcbActualSize) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPersistFileCheckSumVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPersistFileCheckSum * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPersistFileCheckSum * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPersistFileCheckSum * This);
        
        HRESULT ( STDMETHODCALLTYPE *CalculateCheckSum )( 
            IPersistFileCheckSum * This,
            /* [in] */ __RPC__in REFGUID guidCheckSumAlgorithm,
            /* [in] */ DWORD cbBufferSize,
            /* [size_is][out] */ __RPC__out_ecount_full(cbBufferSize) BYTE *pbHash,
            /* [out] */ __RPC__out DWORD *pcbActualSize);
        
        END_INTERFACE
    } IPersistFileCheckSumVtbl;

    interface IPersistFileCheckSum
    {
        CONST_VTBL struct IPersistFileCheckSumVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPersistFileCheckSum_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPersistFileCheckSum_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPersistFileCheckSum_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPersistFileCheckSum_CalculateCheckSum(This,guidCheckSumAlgorithm,cbBufferSize,pbHash,pcbActualSize)	\
    ( (This)->lpVtbl -> CalculateCheckSum(This,guidCheckSumAlgorithm,cbBufferSize,pbHash,pcbActualSize) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPersistFileCheckSum_INTERFACE_DEFINED__ */


#ifndef __IVsCodePageSelection_INTERFACE_DEFINED__
#define __IVsCodePageSelection_INTERFACE_DEFINED__

/* interface IVsCodePageSelection */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCodePageSelection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("49539BFE-84DD-4b7e-8A82-B9E1C7639940")
    IVsCodePageSelection : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ShowEncodingDialog( 
            /* [in] */ __RPC__in LPCOLESTR pszFileName,
            /* [in] */ __RPC__in_opt IVsUserData *pUserData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCodePageSelectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCodePageSelection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCodePageSelection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCodePageSelection * This);
        
        HRESULT ( STDMETHODCALLTYPE *ShowEncodingDialog )( 
            IVsCodePageSelection * This,
            /* [in] */ __RPC__in LPCOLESTR pszFileName,
            /* [in] */ __RPC__in_opt IVsUserData *pUserData);
        
        END_INTERFACE
    } IVsCodePageSelectionVtbl;

    interface IVsCodePageSelection
    {
        CONST_VTBL struct IVsCodePageSelectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCodePageSelection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCodePageSelection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCodePageSelection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCodePageSelection_ShowEncodingDialog(This,pszFileName,pUserData)	\
    ( (This)->lpVtbl -> ShowEncodingDialog(This,pszFileName,pUserData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCodePageSelection_INTERFACE_DEFINED__ */


#ifndef __IVsTextLines2_INTERFACE_DEFINED__
#define __IVsTextLines2_INTERFACE_DEFINED__

/* interface IVsTextLines2 */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextLines2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("181B18A3-A0E8-436B-8AEF-500043C7CC78")
    IVsTextLines2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEolTypeEx( 
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out DWORD *piEolType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEolLengthEx( 
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out unsigned int *piEolType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEolTextEx( 
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEolText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextLines2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextLines2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextLines2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextLines2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEolTypeEx )( 
            IVsTextLines2 * This,
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out DWORD *piEolType);
        
        HRESULT ( STDMETHODCALLTYPE *GetEolLengthEx )( 
            IVsTextLines2 * This,
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out unsigned int *piEolType);
        
        HRESULT ( STDMETHODCALLTYPE *GetEolTextEx )( 
            IVsTextLines2 * This,
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEolText);
        
        END_INTERFACE
    } IVsTextLines2Vtbl;

    interface IVsTextLines2
    {
        CONST_VTBL struct IVsTextLines2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextLines2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextLines2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextLines2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextLines2_GetEolTypeEx(This,pld,piEolType)	\
    ( (This)->lpVtbl -> GetEolTypeEx(This,pld,piEolType) ) 

#define IVsTextLines2_GetEolLengthEx(This,pld,piEolType)	\
    ( (This)->lpVtbl -> GetEolLengthEx(This,pld,piEolType) ) 

#define IVsTextLines2_GetEolTextEx(This,pld,pbstrEolText)	\
    ( (This)->lpVtbl -> GetEolTextEx(This,pld,pbstrEolText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextLines2_INTERFACE_DEFINED__ */


#ifndef __IVsTextLayer2_INTERFACE_DEFINED__
#define __IVsTextLayer2_INTERFACE_DEFINED__

/* interface IVsTextLayer2 */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextLayer2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1FE22AB1-40CA-45A0-BD56-7E65FA3B774C")
    IVsTextLayer2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEolTypeEx( 
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out DWORD *piEolType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEolLengthEx( 
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out unsigned int *piEolType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEolTextEx( 
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEolText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextLayer2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextLayer2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextLayer2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextLayer2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEolTypeEx )( 
            IVsTextLayer2 * This,
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out DWORD *piEolType);
        
        HRESULT ( STDMETHODCALLTYPE *GetEolLengthEx )( 
            IVsTextLayer2 * This,
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out unsigned int *piEolType);
        
        HRESULT ( STDMETHODCALLTYPE *GetEolTextEx )( 
            IVsTextLayer2 * This,
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEolText);
        
        END_INTERFACE
    } IVsTextLayer2Vtbl;

    interface IVsTextLayer2
    {
        CONST_VTBL struct IVsTextLayer2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextLayer2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextLayer2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextLayer2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextLayer2_GetEolTypeEx(This,pld,piEolType)	\
    ( (This)->lpVtbl -> GetEolTypeEx(This,pld,piEolType) ) 

#define IVsTextLayer2_GetEolLengthEx(This,pld,piEolType)	\
    ( (This)->lpVtbl -> GetEolLengthEx(This,pld,piEolType) ) 

#define IVsTextLayer2_GetEolTextEx(This,pld,pbstrEolText)	\
    ( (This)->lpVtbl -> GetEolTextEx(This,pld,pbstrEolText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextLayer2_INTERFACE_DEFINED__ */


#ifndef __IVsTextImage2_INTERFACE_DEFINED__
#define __IVsTextImage2_INTERFACE_DEFINED__

/* interface IVsTextImage2 */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextImage2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F86209FE-6BAA-40DC-AA5D-6C9E83B032B9")
    IVsTextImage2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEolTypeEx( 
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out DWORD *piEolType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEolLengthEx( 
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out unsigned int *piEolType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEolTextEx( 
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEolText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextImage2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextImage2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextImage2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextImage2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEolTypeEx )( 
            IVsTextImage2 * This,
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out DWORD *piEolType);
        
        HRESULT ( STDMETHODCALLTYPE *GetEolLengthEx )( 
            IVsTextImage2 * This,
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out unsigned int *piEolType);
        
        HRESULT ( STDMETHODCALLTYPE *GetEolTextEx )( 
            IVsTextImage2 * This,
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEolText);
        
        END_INTERFACE
    } IVsTextImage2Vtbl;

    interface IVsTextImage2
    {
        CONST_VTBL struct IVsTextImage2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextImage2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextImage2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextImage2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextImage2_GetEolTypeEx(This,pld,piEolType)	\
    ( (This)->lpVtbl -> GetEolTypeEx(This,pld,piEolType) ) 

#define IVsTextImage2_GetEolLengthEx(This,pld,piEolType)	\
    ( (This)->lpVtbl -> GetEolLengthEx(This,pld,piEolType) ) 

#define IVsTextImage2_GetEolTextEx(This,pld,pbstrEolText)	\
    ( (This)->lpVtbl -> GetEolTextEx(This,pld,pbstrEolText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextImage2_INTERFACE_DEFINED__ */


#ifndef __IVsTextStorage2_INTERFACE_DEFINED__
#define __IVsTextStorage2_INTERFACE_DEFINED__

/* interface IVsTextStorage2 */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextStorage2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("92FE8718-09DF-4615-9BC8-492E67EEB1AB")
    IVsTextStorage2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEolTypeEx( 
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out DWORD *piEolType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEolLengthEx( 
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out unsigned int *piEolType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEolTextEx( 
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEolText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersionCookie( 
            /* [out] */ __RPC__out DWORD *pdwVersionCookie) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextStorage2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextStorage2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextStorage2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextStorage2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEolTypeEx )( 
            IVsTextStorage2 * This,
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out DWORD *piEolType);
        
        HRESULT ( STDMETHODCALLTYPE *GetEolLengthEx )( 
            IVsTextStorage2 * This,
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__out unsigned int *piEolType);
        
        HRESULT ( STDMETHODCALLTYPE *GetEolTextEx )( 
            IVsTextStorage2 * This,
            /* [in] */ __RPC__in const LINEDATAEX *pld,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEolText);
        
        HRESULT ( STDMETHODCALLTYPE *GetVersionCookie )( 
            IVsTextStorage2 * This,
            /* [out] */ __RPC__out DWORD *pdwVersionCookie);
        
        END_INTERFACE
    } IVsTextStorage2Vtbl;

    interface IVsTextStorage2
    {
        CONST_VTBL struct IVsTextStorage2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextStorage2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextStorage2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextStorage2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextStorage2_GetEolTypeEx(This,pld,piEolType)	\
    ( (This)->lpVtbl -> GetEolTypeEx(This,pld,piEolType) ) 

#define IVsTextStorage2_GetEolLengthEx(This,pld,piEolType)	\
    ( (This)->lpVtbl -> GetEolLengthEx(This,pld,piEolType) ) 

#define IVsTextStorage2_GetEolTextEx(This,pld,pbstrEolText)	\
    ( (This)->lpVtbl -> GetEolTextEx(This,pld,pbstrEolText) ) 

#define IVsTextStorage2_GetVersionCookie(This,pdwVersionCookie)	\
    ( (This)->lpVtbl -> GetVersionCookie(This,pdwVersionCookie) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextStorage2_INTERFACE_DEFINED__ */


#ifndef __IVsHiColorItem_INTERFACE_DEFINED__
#define __IVsHiColorItem_INTERFACE_DEFINED__

/* interface IVsHiColorItem */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsHiColorItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("16C240B3-4773-43c2-932A-1E8DD2F6F0F8")
    IVsHiColorItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetColorData( 
            /* [in] */ VSCOLORDATA cdElement,
            /* [out] */ __RPC__out COLORREF *pcrColor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsHiColorItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsHiColorItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsHiColorItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsHiColorItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetColorData )( 
            IVsHiColorItem * This,
            /* [in] */ VSCOLORDATA cdElement,
            /* [out] */ __RPC__out COLORREF *pcrColor);
        
        END_INTERFACE
    } IVsHiColorItemVtbl;

    interface IVsHiColorItem
    {
        CONST_VTBL struct IVsHiColorItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsHiColorItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsHiColorItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsHiColorItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsHiColorItem_GetColorData(This,cdElement,pcrColor)	\
    ( (This)->lpVtbl -> GetColorData(This,cdElement,pcrColor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsHiColorItem_INTERFACE_DEFINED__ */


#ifndef __IVsTextBufferEx_INTERFACE_DEFINED__
#define __IVsTextBufferEx_INTERFACE_DEFINED__

/* interface IVsTextBufferEx */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextBufferEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9F0823E9-544D-4fa0-9400-0D602C9A510E")
    IVsTextBufferEx : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTrackChanges( 
            /* [out] */ __RPC__out BOOL *pfIsTracking) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTrackChangesSuppression( 
            /* [in] */ BOOL fSupress) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextBufferExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextBufferEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextBufferEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextBufferEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrackChanges )( 
            IVsTextBufferEx * This,
            /* [out] */ __RPC__out BOOL *pfIsTracking);
        
        HRESULT ( STDMETHODCALLTYPE *SetTrackChangesSuppression )( 
            IVsTextBufferEx * This,
            /* [in] */ BOOL fSupress);
        
        END_INTERFACE
    } IVsTextBufferExVtbl;

    interface IVsTextBufferEx
    {
        CONST_VTBL struct IVsTextBufferExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextBufferEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextBufferEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextBufferEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextBufferEx_GetTrackChanges(This,pfIsTracking)	\
    ( (This)->lpVtbl -> GetTrackChanges(This,pfIsTracking) ) 

#define IVsTextBufferEx_SetTrackChangesSuppression(This,fSupress)	\
    ( (This)->lpVtbl -> SetTrackChangesSuppression(This,fSupress) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextBufferEx_INTERFACE_DEFINED__ */


#ifndef __IVsReadOnlyViewNotification_INTERFACE_DEFINED__
#define __IVsReadOnlyViewNotification_INTERFACE_DEFINED__

/* interface IVsReadOnlyViewNotification */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsReadOnlyViewNotification;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FC62B6C7-6E71-44c6-8DD8-016FD5952612")
    IVsReadOnlyViewNotification : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnDisabledEditingCommand( 
            /* [in][unique] */ __RPC__in_opt const GUID *pguidCmdGuid,
            /* [in] */ DWORD dwCmdId) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsReadOnlyViewNotificationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsReadOnlyViewNotification * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsReadOnlyViewNotification * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsReadOnlyViewNotification * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnDisabledEditingCommand )( 
            IVsReadOnlyViewNotification * This,
            /* [in][unique] */ __RPC__in_opt const GUID *pguidCmdGuid,
            /* [in] */ DWORD dwCmdId);
        
        END_INTERFACE
    } IVsReadOnlyViewNotificationVtbl;

    interface IVsReadOnlyViewNotification
    {
        CONST_VTBL struct IVsReadOnlyViewNotificationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsReadOnlyViewNotification_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsReadOnlyViewNotification_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsReadOnlyViewNotification_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsReadOnlyViewNotification_OnDisabledEditingCommand(This,pguidCmdGuid,dwCmdId)	\
    ( (This)->lpVtbl -> OnDisabledEditingCommand(This,pguidCmdGuid,dwCmdId) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsReadOnlyViewNotification_INTERFACE_DEFINED__ */


#ifndef __IVsOverrideTextViewAccessibilityState_INTERFACE_DEFINED__
#define __IVsOverrideTextViewAccessibilityState_INTERFACE_DEFINED__

/* interface IVsOverrideTextViewAccessibilityState */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsOverrideTextViewAccessibilityState;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("805DB878-BC47-4149-862A-A12725DBC434")
    IVsOverrideTextViewAccessibilityState : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetOverrides( 
            /* [out] */ __RPC__out DWORD *pdwMask,
            /* [out] */ __RPC__out DWORD *pdwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsOverrideTextViewAccessibilityStateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsOverrideTextViewAccessibilityState * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsOverrideTextViewAccessibilityState * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsOverrideTextViewAccessibilityState * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetOverrides )( 
            IVsOverrideTextViewAccessibilityState * This,
            /* [out] */ __RPC__out DWORD *pdwMask,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        END_INTERFACE
    } IVsOverrideTextViewAccessibilityStateVtbl;

    interface IVsOverrideTextViewAccessibilityState
    {
        CONST_VTBL struct IVsOverrideTextViewAccessibilityStateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsOverrideTextViewAccessibilityState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsOverrideTextViewAccessibilityState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsOverrideTextViewAccessibilityState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsOverrideTextViewAccessibilityState_GetOverrides(This,pdwMask,pdwFlags)	\
    ( (This)->lpVtbl -> GetOverrides(This,pdwMask,pdwFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsOverrideTextViewAccessibilityState_INTERFACE_DEFINED__ */


#ifndef __IVsCanCoordinatorClipTextSpan_INTERFACE_DEFINED__
#define __IVsCanCoordinatorClipTextSpan_INTERFACE_DEFINED__

/* interface IVsCanCoordinatorClipTextSpan */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCanCoordinatorClipTextSpan;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("215564F6-7007-4826-9384-9ED0E962DE27")
    IVsCanCoordinatorClipTextSpan : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ShouldClipSpanToValidSpanInSecondaryBuffer( 
            /* [in] */ __RPC__in_opt const IVsTextLines *pPrimaryBuffer,
            /* [in] */ __RPC__in_opt const IVsTextLines *pSecondaryBuffer,
            /* [in] */ __RPC__in const TextSpan *ptsTextSpanInPrimaryBuffer,
            /* [out] */ __RPC__out BOOL *pfShouldClipTextSpan) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCanCoordinatorClipTextSpanVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCanCoordinatorClipTextSpan * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCanCoordinatorClipTextSpan * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCanCoordinatorClipTextSpan * This);
        
        HRESULT ( STDMETHODCALLTYPE *ShouldClipSpanToValidSpanInSecondaryBuffer )( 
            IVsCanCoordinatorClipTextSpan * This,
            /* [in] */ __RPC__in_opt const IVsTextLines *pPrimaryBuffer,
            /* [in] */ __RPC__in_opt const IVsTextLines *pSecondaryBuffer,
            /* [in] */ __RPC__in const TextSpan *ptsTextSpanInPrimaryBuffer,
            /* [out] */ __RPC__out BOOL *pfShouldClipTextSpan);
        
        END_INTERFACE
    } IVsCanCoordinatorClipTextSpanVtbl;

    interface IVsCanCoordinatorClipTextSpan
    {
        CONST_VTBL struct IVsCanCoordinatorClipTextSpanVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCanCoordinatorClipTextSpan_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCanCoordinatorClipTextSpan_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCanCoordinatorClipTextSpan_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCanCoordinatorClipTextSpan_ShouldClipSpanToValidSpanInSecondaryBuffer(This,pPrimaryBuffer,pSecondaryBuffer,ptsTextSpanInPrimaryBuffer,pfShouldClipTextSpan)	\
    ( (This)->lpVtbl -> ShouldClipSpanToValidSpanInSecondaryBuffer(This,pPrimaryBuffer,pSecondaryBuffer,ptsTextSpanInPrimaryBuffer,pfShouldClipTextSpan) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCanCoordinatorClipTextSpan_INTERFACE_DEFINED__ */

#endif /* __TextManagerInternal2_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\textmgr.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for textmgr.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __textmgr_h__
#define __textmgr_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IVsCompoundAction_FWD_DEFINED__
#define __IVsCompoundAction_FWD_DEFINED__
typedef interface IVsCompoundAction IVsCompoundAction;
#endif 	/* __IVsCompoundAction_FWD_DEFINED__ */


#ifndef __IVsCompoundViewChange_FWD_DEFINED__
#define __IVsCompoundViewChange_FWD_DEFINED__
typedef interface IVsCompoundViewChange IVsCompoundViewChange;
#endif 	/* __IVsCompoundViewChange_FWD_DEFINED__ */


#ifndef __IVsCompoundActionEvents_FWD_DEFINED__
#define __IVsCompoundActionEvents_FWD_DEFINED__
typedef interface IVsCompoundActionEvents IVsCompoundActionEvents;
#endif 	/* __IVsCompoundActionEvents_FWD_DEFINED__ */


#ifndef __IVsAction_FWD_DEFINED__
#define __IVsAction_FWD_DEFINED__
typedef interface IVsAction IVsAction;
#endif 	/* __IVsAction_FWD_DEFINED__ */


#ifndef __IVsTextEditorPropertyCategoryContainer_FWD_DEFINED__
#define __IVsTextEditorPropertyCategoryContainer_FWD_DEFINED__
typedef interface IVsTextEditorPropertyCategoryContainer IVsTextEditorPropertyCategoryContainer;
#endif 	/* __IVsTextEditorPropertyCategoryContainer_FWD_DEFINED__ */


#ifndef __IVsTextEditorPropertyContainer_FWD_DEFINED__
#define __IVsTextEditorPropertyContainer_FWD_DEFINED__
typedef interface IVsTextEditorPropertyContainer IVsTextEditorPropertyContainer;
#endif 	/* __IVsTextEditorPropertyContainer_FWD_DEFINED__ */


#ifndef __IVsCompletionSet_FWD_DEFINED__
#define __IVsCompletionSet_FWD_DEFINED__
typedef interface IVsCompletionSet IVsCompletionSet;
#endif 	/* __IVsCompletionSet_FWD_DEFINED__ */


#ifndef __IVsTipWindow_FWD_DEFINED__
#define __IVsTipWindow_FWD_DEFINED__
typedef interface IVsTipWindow IVsTipWindow;
#endif 	/* __IVsTipWindow_FWD_DEFINED__ */


#ifndef __IVsMethodTipWindow_FWD_DEFINED__
#define __IVsMethodTipWindow_FWD_DEFINED__
typedef interface IVsMethodTipWindow IVsMethodTipWindow;
#endif 	/* __IVsMethodTipWindow_FWD_DEFINED__ */


#ifndef __IVsTextTipWindow_FWD_DEFINED__
#define __IVsTextTipWindow_FWD_DEFINED__
typedef interface IVsTextTipWindow IVsTextTipWindow;
#endif 	/* __IVsTextTipWindow_FWD_DEFINED__ */


#ifndef __IVsMethodData_FWD_DEFINED__
#define __IVsMethodData_FWD_DEFINED__
typedef interface IVsMethodData IVsMethodData;
#endif 	/* __IVsMethodData_FWD_DEFINED__ */


#ifndef __IVsTextTipData_FWD_DEFINED__
#define __IVsTextTipData_FWD_DEFINED__
typedef interface IVsTextTipData IVsTextTipData;
#endif 	/* __IVsTextTipData_FWD_DEFINED__ */


#ifndef __IVsTextView_FWD_DEFINED__
#define __IVsTextView_FWD_DEFINED__
typedef interface IVsTextView IVsTextView;
#endif 	/* __IVsTextView_FWD_DEFINED__ */


#ifndef __IVsThreadSafeTextView_FWD_DEFINED__
#define __IVsThreadSafeTextView_FWD_DEFINED__
typedef interface IVsThreadSafeTextView IVsThreadSafeTextView;
#endif 	/* __IVsThreadSafeTextView_FWD_DEFINED__ */


#ifndef __IVsLayeredTextView_FWD_DEFINED__
#define __IVsLayeredTextView_FWD_DEFINED__
typedef interface IVsLayeredTextView IVsLayeredTextView;
#endif 	/* __IVsLayeredTextView_FWD_DEFINED__ */


#ifndef __IVsTextViewFilter_FWD_DEFINED__
#define __IVsTextViewFilter_FWD_DEFINED__
typedef interface IVsTextViewFilter IVsTextViewFilter;
#endif 	/* __IVsTextViewFilter_FWD_DEFINED__ */


#ifndef __IVsLanguageContextProvider_FWD_DEFINED__
#define __IVsLanguageContextProvider_FWD_DEFINED__
typedef interface IVsLanguageContextProvider IVsLanguageContextProvider;
#endif 	/* __IVsLanguageContextProvider_FWD_DEFINED__ */


#ifndef __IVsTextMarkerContextProvider_FWD_DEFINED__
#define __IVsTextMarkerContextProvider_FWD_DEFINED__
typedef interface IVsTextMarkerContextProvider IVsTextMarkerContextProvider;
#endif 	/* __IVsTextMarkerContextProvider_FWD_DEFINED__ */


#ifndef __IVsViewRangeClient_FWD_DEFINED__
#define __IVsViewRangeClient_FWD_DEFINED__
typedef interface IVsViewRangeClient IVsViewRangeClient;
#endif 	/* __IVsViewRangeClient_FWD_DEFINED__ */


#ifndef __IVsTextViewEvents_FWD_DEFINED__
#define __IVsTextViewEvents_FWD_DEFINED__
typedef interface IVsTextViewEvents IVsTextViewEvents;
#endif 	/* __IVsTextViewEvents_FWD_DEFINED__ */


#ifndef __IVsTextManager_FWD_DEFINED__
#define __IVsTextManager_FWD_DEFINED__
typedef interface IVsTextManager IVsTextManager;
#endif 	/* __IVsTextManager_FWD_DEFINED__ */


#ifndef __IVsShortcutManager_FWD_DEFINED__
#define __IVsShortcutManager_FWD_DEFINED__
typedef interface IVsShortcutManager IVsShortcutManager;
#endif 	/* __IVsShortcutManager_FWD_DEFINED__ */


#ifndef __IVsEnumTextBuffers_FWD_DEFINED__
#define __IVsEnumTextBuffers_FWD_DEFINED__
typedef interface IVsEnumTextBuffers IVsEnumTextBuffers;
#endif 	/* __IVsEnumTextBuffers_FWD_DEFINED__ */


#ifndef __IVsTextManagerEvents_FWD_DEFINED__
#define __IVsTextManagerEvents_FWD_DEFINED__
typedef interface IVsTextManagerEvents IVsTextManagerEvents;
#endif 	/* __IVsTextManagerEvents_FWD_DEFINED__ */


#ifndef __IVsTextSelectionAction_FWD_DEFINED__
#define __IVsTextSelectionAction_FWD_DEFINED__
typedef interface IVsTextSelectionAction IVsTextSelectionAction;
#endif 	/* __IVsTextSelectionAction_FWD_DEFINED__ */


#ifndef __IVsEnumTextViews_FWD_DEFINED__
#define __IVsEnumTextViews_FWD_DEFINED__
typedef interface IVsEnumTextViews IVsEnumTextViews;
#endif 	/* __IVsEnumTextViews_FWD_DEFINED__ */


#ifndef __IVsEnumIndependentViews_FWD_DEFINED__
#define __IVsEnumIndependentViews_FWD_DEFINED__
typedef interface IVsEnumIndependentViews IVsEnumIndependentViews;
#endif 	/* __IVsEnumIndependentViews_FWD_DEFINED__ */


#ifndef __IVsColorableItem_FWD_DEFINED__
#define __IVsColorableItem_FWD_DEFINED__
typedef interface IVsColorableItem IVsColorableItem;
#endif 	/* __IVsColorableItem_FWD_DEFINED__ */


#ifndef __IVsMergeableUIItem_FWD_DEFINED__
#define __IVsMergeableUIItem_FWD_DEFINED__
typedef interface IVsMergeableUIItem IVsMergeableUIItem;
#endif 	/* __IVsMergeableUIItem_FWD_DEFINED__ */


#ifndef __IVsProvideColorableItems_FWD_DEFINED__
#define __IVsProvideColorableItems_FWD_DEFINED__
typedef interface IVsProvideColorableItems IVsProvideColorableItems;
#endif 	/* __IVsProvideColorableItems_FWD_DEFINED__ */


#ifndef __IVsColorizer_FWD_DEFINED__
#define __IVsColorizer_FWD_DEFINED__
typedef interface IVsColorizer IVsColorizer;
#endif 	/* __IVsColorizer_FWD_DEFINED__ */


#ifndef __IVsEnumGUID_FWD_DEFINED__
#define __IVsEnumGUID_FWD_DEFINED__
typedef interface IVsEnumGUID IVsEnumGUID;
#endif 	/* __IVsEnumGUID_FWD_DEFINED__ */


#ifndef __IVsLanguageInfo_FWD_DEFINED__
#define __IVsLanguageInfo_FWD_DEFINED__
typedef interface IVsLanguageInfo IVsLanguageInfo;
#endif 	/* __IVsLanguageInfo_FWD_DEFINED__ */


#ifndef __IVsLanguageBlock_FWD_DEFINED__
#define __IVsLanguageBlock_FWD_DEFINED__
typedef interface IVsLanguageBlock IVsLanguageBlock;
#endif 	/* __IVsLanguageBlock_FWD_DEFINED__ */


#ifndef __IVsEnumBSTR_FWD_DEFINED__
#define __IVsEnumBSTR_FWD_DEFINED__
typedef interface IVsEnumBSTR IVsEnumBSTR;
#endif 	/* __IVsEnumBSTR_FWD_DEFINED__ */


#ifndef __IVsDebugName_FWD_DEFINED__
#define __IVsDebugName_FWD_DEFINED__
typedef interface IVsDebugName IVsDebugName;
#endif 	/* __IVsDebugName_FWD_DEFINED__ */


#ifndef __IVsEnumDebugName_FWD_DEFINED__
#define __IVsEnumDebugName_FWD_DEFINED__
typedef interface IVsEnumDebugName IVsEnumDebugName;
#endif 	/* __IVsEnumDebugName_FWD_DEFINED__ */


#ifndef __IVsLanguageDebugInfo_FWD_DEFINED__
#define __IVsLanguageDebugInfo_FWD_DEFINED__
typedef interface IVsLanguageDebugInfo IVsLanguageDebugInfo;
#endif 	/* __IVsLanguageDebugInfo_FWD_DEFINED__ */


#ifndef __IVsTextBufferTempInit_FWD_DEFINED__
#define __IVsTextBufferTempInit_FWD_DEFINED__
typedef interface IVsTextBufferTempInit IVsTextBufferTempInit;
#endif 	/* __IVsTextBufferTempInit_FWD_DEFINED__ */


#ifndef __IVsTextBuffer_FWD_DEFINED__
#define __IVsTextBuffer_FWD_DEFINED__
typedef interface IVsTextBuffer IVsTextBuffer;
#endif 	/* __IVsTextBuffer_FWD_DEFINED__ */


#ifndef __IVsTextLines_FWD_DEFINED__
#define __IVsTextLines_FWD_DEFINED__
typedef interface IVsTextLines IVsTextLines;
#endif 	/* __IVsTextLines_FWD_DEFINED__ */


#ifndef __IVsTextColorState_FWD_DEFINED__
#define __IVsTextColorState_FWD_DEFINED__
typedef interface IVsTextColorState IVsTextColorState;
#endif 	/* __IVsTextColorState_FWD_DEFINED__ */


#ifndef __IVsTextLinesEvents_FWD_DEFINED__
#define __IVsTextLinesEvents_FWD_DEFINED__
typedef interface IVsTextLinesEvents IVsTextLinesEvents;
#endif 	/* __IVsTextLinesEvents_FWD_DEFINED__ */


#ifndef __IVsTextStream_FWD_DEFINED__
#define __IVsTextStream_FWD_DEFINED__
typedef interface IVsTextStream IVsTextStream;
#endif 	/* __IVsTextStream_FWD_DEFINED__ */


#ifndef __IVsEnumStreamMarkers_FWD_DEFINED__
#define __IVsEnumStreamMarkers_FWD_DEFINED__
typedef interface IVsEnumStreamMarkers IVsEnumStreamMarkers;
#endif 	/* __IVsEnumStreamMarkers_FWD_DEFINED__ */


#ifndef __IVsEnumLineMarkers_FWD_DEFINED__
#define __IVsEnumLineMarkers_FWD_DEFINED__
typedef interface IVsEnumLineMarkers IVsEnumLineMarkers;
#endif 	/* __IVsEnumLineMarkers_FWD_DEFINED__ */


#ifndef __IVsEnumLayerMarkers_FWD_DEFINED__
#define __IVsEnumLayerMarkers_FWD_DEFINED__
typedef interface IVsEnumLayerMarkers IVsEnumLayerMarkers;
#endif 	/* __IVsEnumLayerMarkers_FWD_DEFINED__ */


#ifndef __IVsTextMarker_FWD_DEFINED__
#define __IVsTextMarker_FWD_DEFINED__
typedef interface IVsTextMarker IVsTextMarker;
#endif 	/* __IVsTextMarker_FWD_DEFINED__ */


#ifndef __IVsTextStreamMarker_FWD_DEFINED__
#define __IVsTextStreamMarker_FWD_DEFINED__
typedef interface IVsTextStreamMarker IVsTextStreamMarker;
#endif 	/* __IVsTextStreamMarker_FWD_DEFINED__ */


#ifndef __IVsTextLineMarker_FWD_DEFINED__
#define __IVsTextLineMarker_FWD_DEFINED__
typedef interface IVsTextLineMarker IVsTextLineMarker;
#endif 	/* __IVsTextLineMarker_FWD_DEFINED__ */


#ifndef __IVsTextLayerMarker_FWD_DEFINED__
#define __IVsTextLayerMarker_FWD_DEFINED__
typedef interface IVsTextLayerMarker IVsTextLayerMarker;
#endif 	/* __IVsTextLayerMarker_FWD_DEFINED__ */


#ifndef __IVsTextMarkerType_FWD_DEFINED__
#define __IVsTextMarkerType_FWD_DEFINED__
typedef interface IVsTextMarkerType IVsTextMarkerType;
#endif 	/* __IVsTextMarkerType_FWD_DEFINED__ */


#ifndef __IVsTextMarkerColorSet_FWD_DEFINED__
#define __IVsTextMarkerColorSet_FWD_DEFINED__
typedef interface IVsTextMarkerColorSet IVsTextMarkerColorSet;
#endif 	/* __IVsTextMarkerColorSet_FWD_DEFINED__ */


#ifndef __IVsPackageDefinedTextMarkerType_FWD_DEFINED__
#define __IVsPackageDefinedTextMarkerType_FWD_DEFINED__
typedef interface IVsPackageDefinedTextMarkerType IVsPackageDefinedTextMarkerType;
#endif 	/* __IVsPackageDefinedTextMarkerType_FWD_DEFINED__ */


#ifndef __IVsTextMarkerTypeProvider_FWD_DEFINED__
#define __IVsTextMarkerTypeProvider_FWD_DEFINED__
typedef interface IVsTextMarkerTypeProvider IVsTextMarkerTypeProvider;
#endif 	/* __IVsTextMarkerTypeProvider_FWD_DEFINED__ */


#ifndef __IVsTextMarkerClient_FWD_DEFINED__
#define __IVsTextMarkerClient_FWD_DEFINED__
typedef interface IVsTextMarkerClient IVsTextMarkerClient;
#endif 	/* __IVsTextMarkerClient_FWD_DEFINED__ */


#ifndef __IVsMouseCursorProvider_FWD_DEFINED__
#define __IVsMouseCursorProvider_FWD_DEFINED__
typedef interface IVsMouseCursorProvider IVsMouseCursorProvider;
#endif 	/* __IVsMouseCursorProvider_FWD_DEFINED__ */


#ifndef __IVsTextMarkerGlyphDropHandler_FWD_DEFINED__
#define __IVsTextMarkerGlyphDropHandler_FWD_DEFINED__
typedef interface IVsTextMarkerGlyphDropHandler IVsTextMarkerGlyphDropHandler;
#endif 	/* __IVsTextMarkerGlyphDropHandler_FWD_DEFINED__ */


#ifndef __IVsTextTrackingPoint_FWD_DEFINED__
#define __IVsTextTrackingPoint_FWD_DEFINED__
typedef interface IVsTextTrackingPoint IVsTextTrackingPoint;
#endif 	/* __IVsTextTrackingPoint_FWD_DEFINED__ */


#ifndef __IVsFullTextScanner_FWD_DEFINED__
#define __IVsFullTextScanner_FWD_DEFINED__
typedef interface IVsFullTextScanner IVsFullTextScanner;
#endif 	/* __IVsFullTextScanner_FWD_DEFINED__ */


#ifndef __IVsTextScanner_FWD_DEFINED__
#define __IVsTextScanner_FWD_DEFINED__
typedef interface IVsTextScanner IVsTextScanner;
#endif 	/* __IVsTextScanner_FWD_DEFINED__ */


#ifndef __IVsTextFind_FWD_DEFINED__
#define __IVsTextFind_FWD_DEFINED__
typedef interface IVsTextFind IVsTextFind;
#endif 	/* __IVsTextFind_FWD_DEFINED__ */


#ifndef __IVsTextBufferEvents_FWD_DEFINED__
#define __IVsTextBufferEvents_FWD_DEFINED__
typedef interface IVsTextBufferEvents IVsTextBufferEvents;
#endif 	/* __IVsTextBufferEvents_FWD_DEFINED__ */


#ifndef __IVsTextBufferDataEvents_FWD_DEFINED__
#define __IVsTextBufferDataEvents_FWD_DEFINED__
typedef interface IVsTextBufferDataEvents IVsTextBufferDataEvents;
#endif 	/* __IVsTextBufferDataEvents_FWD_DEFINED__ */


#ifndef __IVsTextStreamEvents_FWD_DEFINED__
#define __IVsTextStreamEvents_FWD_DEFINED__
typedef interface IVsTextStreamEvents IVsTextStreamEvents;
#endif 	/* __IVsTextStreamEvents_FWD_DEFINED__ */


#ifndef __IVsSplitPane_FWD_DEFINED__
#define __IVsSplitPane_FWD_DEFINED__
typedef interface IVsSplitPane IVsSplitPane;
#endif 	/* __IVsSplitPane_FWD_DEFINED__ */


#ifndef __IVsSplitter_FWD_DEFINED__
#define __IVsSplitter_FWD_DEFINED__
typedef interface IVsSplitter IVsSplitter;
#endif 	/* __IVsSplitter_FWD_DEFINED__ */


#ifndef __IVsSplitRoot_FWD_DEFINED__
#define __IVsSplitRoot_FWD_DEFINED__
typedef interface IVsSplitRoot IVsSplitRoot;
#endif 	/* __IVsSplitRoot_FWD_DEFINED__ */


#ifndef __IVsCodeWindow_FWD_DEFINED__
#define __IVsCodeWindow_FWD_DEFINED__
typedef interface IVsCodeWindow IVsCodeWindow;
#endif 	/* __IVsCodeWindow_FWD_DEFINED__ */


#ifndef __IVsCodeWindowManager_FWD_DEFINED__
#define __IVsCodeWindowManager_FWD_DEFINED__
typedef interface IVsCodeWindowManager IVsCodeWindowManager;
#endif 	/* __IVsCodeWindowManager_FWD_DEFINED__ */


#ifndef __IVsDropdownBarClient_FWD_DEFINED__
#define __IVsDropdownBarClient_FWD_DEFINED__
typedef interface IVsDropdownBarClient IVsDropdownBarClient;
#endif 	/* __IVsDropdownBarClient_FWD_DEFINED__ */


#ifndef __IVsDropdownBar_FWD_DEFINED__
#define __IVsDropdownBar_FWD_DEFINED__
typedef interface IVsDropdownBar IVsDropdownBar;
#endif 	/* __IVsDropdownBar_FWD_DEFINED__ */


#ifndef __IVsDropdownBarManager_FWD_DEFINED__
#define __IVsDropdownBarManager_FWD_DEFINED__
typedef interface IVsDropdownBarManager IVsDropdownBarManager;
#endif 	/* __IVsDropdownBarManager_FWD_DEFINED__ */


#ifndef __IVsButtonBarClient_FWD_DEFINED__
#define __IVsButtonBarClient_FWD_DEFINED__
typedef interface IVsButtonBarClient IVsButtonBarClient;
#endif 	/* __IVsButtonBarClient_FWD_DEFINED__ */


#ifndef __IVsButtonBar_FWD_DEFINED__
#define __IVsButtonBar_FWD_DEFINED__
typedef interface IVsButtonBar IVsButtonBar;
#endif 	/* __IVsButtonBar_FWD_DEFINED__ */


#ifndef __IVsButtonBarManager_FWD_DEFINED__
#define __IVsButtonBarManager_FWD_DEFINED__
typedef interface IVsButtonBarManager IVsButtonBarManager;
#endif 	/* __IVsButtonBarManager_FWD_DEFINED__ */


#ifndef __IVsDefaultButtonBarImages_FWD_DEFINED__
#define __IVsDefaultButtonBarImages_FWD_DEFINED__
typedef interface IVsDefaultButtonBarImages IVsDefaultButtonBarImages;
#endif 	/* __IVsDefaultButtonBarImages_FWD_DEFINED__ */


#ifndef __IVsTextMacroHelper_FWD_DEFINED__
#define __IVsTextMacroHelper_FWD_DEFINED__
typedef interface IVsTextMacroHelper IVsTextMacroHelper;
#endif 	/* __IVsTextMacroHelper_FWD_DEFINED__ */


#ifndef __IVsUserData_FWD_DEFINED__
#define __IVsUserData_FWD_DEFINED__
typedef interface IVsUserData IVsUserData;
#endif 	/* __IVsUserData_FWD_DEFINED__ */


#ifndef __IVsUserDataEvents_FWD_DEFINED__
#define __IVsUserDataEvents_FWD_DEFINED__
typedef interface IVsUserDataEvents IVsUserDataEvents;
#endif 	/* __IVsUserDataEvents_FWD_DEFINED__ */


#ifndef __IVsUndoUnit_FWD_DEFINED__
#define __IVsUndoUnit_FWD_DEFINED__
typedef interface IVsUndoUnit IVsUndoUnit;
#endif 	/* __IVsUndoUnit_FWD_DEFINED__ */


#ifndef __IVsUndoTrackingEvents_FWD_DEFINED__
#define __IVsUndoTrackingEvents_FWD_DEFINED__
typedef interface IVsUndoTrackingEvents IVsUndoTrackingEvents;
#endif 	/* __IVsUndoTrackingEvents_FWD_DEFINED__ */


#ifndef __IVsChangeTrackingUndoManager_FWD_DEFINED__
#define __IVsChangeTrackingUndoManager_FWD_DEFINED__
typedef interface IVsChangeTrackingUndoManager IVsChangeTrackingUndoManager;
#endif 	/* __IVsChangeTrackingUndoManager_FWD_DEFINED__ */


#ifndef __IVsLinkedUndoClient_FWD_DEFINED__
#define __IVsLinkedUndoClient_FWD_DEFINED__
typedef interface IVsLinkedUndoClient IVsLinkedUndoClient;
#endif 	/* __IVsLinkedUndoClient_FWD_DEFINED__ */


#ifndef __IVsLinkCapableUndoManager_FWD_DEFINED__
#define __IVsLinkCapableUndoManager_FWD_DEFINED__
typedef interface IVsLinkCapableUndoManager IVsLinkCapableUndoManager;
#endif 	/* __IVsLinkCapableUndoManager_FWD_DEFINED__ */


#ifndef __IVsLifetimeControlledObject_FWD_DEFINED__
#define __IVsLifetimeControlledObject_FWD_DEFINED__
typedef interface IVsLifetimeControlledObject IVsLifetimeControlledObject;
#endif 	/* __IVsLifetimeControlledObject_FWD_DEFINED__ */


#ifndef __IVsLinkedUndoTransactionManager_FWD_DEFINED__
#define __IVsLinkedUndoTransactionManager_FWD_DEFINED__
typedef interface IVsLinkedUndoTransactionManager IVsLinkedUndoTransactionManager;
#endif 	/* __IVsLinkedUndoTransactionManager_FWD_DEFINED__ */


#ifndef __IVsChangeClusterEvents_FWD_DEFINED__
#define __IVsChangeClusterEvents_FWD_DEFINED__
typedef interface IVsChangeClusterEvents IVsChangeClusterEvents;
#endif 	/* __IVsChangeClusterEvents_FWD_DEFINED__ */


#ifndef __VsLocalUserData_FWD_DEFINED__
#define __VsLocalUserData_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsLocalUserData VsLocalUserData;
#else
typedef struct VsLocalUserData VsLocalUserData;
#endif /* __cplusplus */

#endif 	/* __VsLocalUserData_FWD_DEFINED__ */


#ifndef __VsUserData_FWD_DEFINED__
#define __VsUserData_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsUserData VsUserData;
#else
typedef struct VsUserData VsUserData;
#endif /* __cplusplus */

#endif 	/* __VsUserData_FWD_DEFINED__ */


#ifndef __VsCodeWindow_FWD_DEFINED__
#define __VsCodeWindow_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsCodeWindow VsCodeWindow;
#else
typedef struct VsCodeWindow VsCodeWindow;
#endif /* __cplusplus */

#endif 	/* __VsCodeWindow_FWD_DEFINED__ */


#ifndef __VsSplitRoot_FWD_DEFINED__
#define __VsSplitRoot_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsSplitRoot VsSplitRoot;
#else
typedef struct VsSplitRoot VsSplitRoot;
#endif /* __cplusplus */

#endif 	/* __VsSplitRoot_FWD_DEFINED__ */


#ifndef __VsDropdownBar_FWD_DEFINED__
#define __VsDropdownBar_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsDropdownBar VsDropdownBar;
#else
typedef struct VsDropdownBar VsDropdownBar;
#endif /* __cplusplus */

#endif 	/* __VsDropdownBar_FWD_DEFINED__ */


#ifndef __VsTextBuffer_FWD_DEFINED__
#define __VsTextBuffer_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsTextBuffer VsTextBuffer;
#else
typedef struct VsTextBuffer VsTextBuffer;
#endif /* __cplusplus */

#endif 	/* __VsTextBuffer_FWD_DEFINED__ */


#ifndef __VsTextLineStorage_FWD_DEFINED__
#define __VsTextLineStorage_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsTextLineStorage VsTextLineStorage;
#else
typedef struct VsTextLineStorage VsTextLineStorage;
#endif /* __cplusplus */

#endif 	/* __VsTextLineStorage_FWD_DEFINED__ */


#ifndef __VsTextManager_FWD_DEFINED__
#define __VsTextManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsTextManager VsTextManager;
#else
typedef struct VsTextManager VsTextManager;
#endif /* __cplusplus */

#endif 	/* __VsTextManager_FWD_DEFINED__ */


#ifndef __VsTextView_FWD_DEFINED__
#define __VsTextView_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsTextView VsTextView;
#else
typedef struct VsTextView VsTextView;
#endif /* __cplusplus */

#endif 	/* __VsTextView_FWD_DEFINED__ */


#ifndef __VsTextPackage_FWD_DEFINED__
#define __VsTextPackage_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsTextPackage VsTextPackage;
#else
typedef struct VsTextPackage VsTextPackage;
#endif /* __cplusplus */

#endif 	/* __VsTextPackage_FWD_DEFINED__ */


#ifndef __VsUndoPackage_FWD_DEFINED__
#define __VsUndoPackage_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsUndoPackage VsUndoPackage;
#else
typedef struct VsUndoPackage VsUndoPackage;
#endif /* __cplusplus */

#endif 	/* __VsUndoPackage_FWD_DEFINED__ */


#ifndef __VsUndoUnit_FWD_DEFINED__
#define __VsUndoUnit_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsUndoUnit VsUndoUnit;
#else
typedef struct VsUndoUnit VsUndoUnit;
#endif /* __cplusplus */

#endif 	/* __VsUndoUnit_FWD_DEFINED__ */


#ifndef __VsMethodTipWindow_FWD_DEFINED__
#define __VsMethodTipWindow_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsMethodTipWindow VsMethodTipWindow;
#else
typedef struct VsMethodTipWindow VsMethodTipWindow;
#endif /* __cplusplus */

#endif 	/* __VsMethodTipWindow_FWD_DEFINED__ */


#ifndef __VsTextTipWindow_FWD_DEFINED__
#define __VsTextTipWindow_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsTextTipWindow VsTextTipWindow;
#else
typedef struct VsTextTipWindow VsTextTipWindow;
#endif /* __cplusplus */

#endif 	/* __VsTextTipWindow_FWD_DEFINED__ */


#ifndef __VsHiddenTextLayer_FWD_DEFINED__
#define __VsHiddenTextLayer_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsHiddenTextLayer VsHiddenTextLayer;
#else
typedef struct VsHiddenTextLayer VsHiddenTextLayer;
#endif /* __cplusplus */

#endif 	/* __VsHiddenTextLayer_FWD_DEFINED__ */


#ifndef __VsDefaultButtonBarImages_FWD_DEFINED__
#define __VsDefaultButtonBarImages_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsDefaultButtonBarImages VsDefaultButtonBarImages;
#else
typedef struct VsDefaultButtonBarImages VsDefaultButtonBarImages;
#endif /* __cplusplus */

#endif 	/* __VsDefaultButtonBarImages_FWD_DEFINED__ */


#ifndef __VsSyntheticTextLayer_FWD_DEFINED__
#define __VsSyntheticTextLayer_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsSyntheticTextLayer VsSyntheticTextLayer;
#else
typedef struct VsSyntheticTextLayer VsSyntheticTextLayer;
#endif /* __cplusplus */

#endif 	/* __VsSyntheticTextLayer_FWD_DEFINED__ */


#ifndef __VsDiffLayer_FWD_DEFINED__
#define __VsDiffLayer_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsDiffLayer VsDiffLayer;
#else
typedef struct VsDiffLayer VsDiffLayer;
#endif /* __cplusplus */

#endif 	/* __VsDiffLayer_FWD_DEFINED__ */


#ifndef __IVsDynamicTabProvider_FWD_DEFINED__
#define __IVsDynamicTabProvider_FWD_DEFINED__
typedef interface IVsDynamicTabProvider IVsDynamicTabProvider;
#endif 	/* __IVsDynamicTabProvider_FWD_DEFINED__ */


#ifndef __IVsLastChangeTimeProvider_FWD_DEFINED__
#define __IVsLastChangeTimeProvider_FWD_DEFINED__
typedef interface IVsLastChangeTimeProvider IVsLastChangeTimeProvider;
#endif 	/* __IVsLastChangeTimeProvider_FWD_DEFINED__ */


#ifndef __IVsEnumTextSpans_FWD_DEFINED__
#define __IVsEnumTextSpans_FWD_DEFINED__
typedef interface IVsEnumTextSpans IVsEnumTextSpans;
#endif 	/* __IVsEnumTextSpans_FWD_DEFINED__ */


#ifndef __IVsTextLayer_FWD_DEFINED__
#define __IVsTextLayer_FWD_DEFINED__
typedef interface IVsTextLayer IVsTextLayer;
#endif 	/* __IVsTextLayer_FWD_DEFINED__ */


#ifndef __IVsSyntheticRegion_FWD_DEFINED__
#define __IVsSyntheticRegion_FWD_DEFINED__
typedef interface IVsSyntheticRegion IVsSyntheticRegion;
#endif 	/* __IVsSyntheticRegion_FWD_DEFINED__ */


#ifndef __IVsEnumSyntheticRegions_FWD_DEFINED__
#define __IVsEnumSyntheticRegions_FWD_DEFINED__
typedef interface IVsEnumSyntheticRegions IVsEnumSyntheticRegions;
#endif 	/* __IVsEnumSyntheticRegions_FWD_DEFINED__ */


#ifndef __IVsSyntheticTextClient_FWD_DEFINED__
#define __IVsSyntheticTextClient_FWD_DEFINED__
typedef interface IVsSyntheticTextClient IVsSyntheticTextClient;
#endif 	/* __IVsSyntheticTextClient_FWD_DEFINED__ */


#ifndef __IVsSyntheticTextSession_FWD_DEFINED__
#define __IVsSyntheticTextSession_FWD_DEFINED__
typedef interface IVsSyntheticTextSession IVsSyntheticTextSession;
#endif 	/* __IVsSyntheticTextSession_FWD_DEFINED__ */


#ifndef __IVsSyntheticTextManager_FWD_DEFINED__
#define __IVsSyntheticTextManager_FWD_DEFINED__
typedef interface IVsSyntheticTextManager IVsSyntheticTextManager;
#endif 	/* __IVsSyntheticTextManager_FWD_DEFINED__ */


#ifndef __IVsTextHidingLayerModule_FWD_DEFINED__
#define __IVsTextHidingLayerModule_FWD_DEFINED__
typedef interface IVsTextHidingLayerModule IVsTextHidingLayerModule;
#endif 	/* __IVsTextHidingLayerModule_FWD_DEFINED__ */


#ifndef __IVsHiddenRegion_FWD_DEFINED__
#define __IVsHiddenRegion_FWD_DEFINED__
typedef interface IVsHiddenRegion IVsHiddenRegion;
#endif 	/* __IVsHiddenRegion_FWD_DEFINED__ */


#ifndef __IVsEnumHiddenRegions_FWD_DEFINED__
#define __IVsEnumHiddenRegions_FWD_DEFINED__
typedef interface IVsEnumHiddenRegions IVsEnumHiddenRegions;
#endif 	/* __IVsEnumHiddenRegions_FWD_DEFINED__ */


#ifndef __IVsHiddenTextClient_FWD_DEFINED__
#define __IVsHiddenTextClient_FWD_DEFINED__
typedef interface IVsHiddenTextClient IVsHiddenTextClient;
#endif 	/* __IVsHiddenTextClient_FWD_DEFINED__ */


#ifndef __IVsHiddenTextManager_FWD_DEFINED__
#define __IVsHiddenTextManager_FWD_DEFINED__
typedef interface IVsHiddenTextManager IVsHiddenTextManager;
#endif 	/* __IVsHiddenTextManager_FWD_DEFINED__ */


#ifndef __IVsHiddenTextSession_FWD_DEFINED__
#define __IVsHiddenTextSession_FWD_DEFINED__
typedef interface IVsHiddenTextSession IVsHiddenTextSession;
#endif 	/* __IVsHiddenTextSession_FWD_DEFINED__ */


#ifndef __IVsOutliningSession_FWD_DEFINED__
#define __IVsOutliningSession_FWD_DEFINED__
typedef interface IVsOutliningSession IVsOutliningSession;
#endif 	/* __IVsOutliningSession_FWD_DEFINED__ */


#ifndef __IVsOutliningCapableLanguage_FWD_DEFINED__
#define __IVsOutliningCapableLanguage_FWD_DEFINED__
typedef interface IVsOutliningCapableLanguage IVsOutliningCapableLanguage;
#endif 	/* __IVsOutliningCapableLanguage_FWD_DEFINED__ */


#ifndef __IVsTextLayerEvents_FWD_DEFINED__
#define __IVsTextLayerEvents_FWD_DEFINED__
typedef interface IVsTextLayerEvents IVsTextLayerEvents;
#endif 	/* __IVsTextLayerEvents_FWD_DEFINED__ */


#ifndef __IVsTextStorage_FWD_DEFINED__
#define __IVsTextStorage_FWD_DEFINED__
typedef interface IVsTextStorage IVsTextStorage;
#endif 	/* __IVsTextStorage_FWD_DEFINED__ */


#ifndef __IVsPersistentTextImage_FWD_DEFINED__
#define __IVsPersistentTextImage_FWD_DEFINED__
typedef interface IVsPersistentTextImage IVsPersistentTextImage;
#endif 	/* __IVsPersistentTextImage_FWD_DEFINED__ */


#ifndef __IVsTextStorageColorState_FWD_DEFINED__
#define __IVsTextStorageColorState_FWD_DEFINED__
typedef interface IVsTextStorageColorState IVsTextStorageColorState;
#endif 	/* __IVsTextStorageColorState_FWD_DEFINED__ */


#ifndef __IVsFinalTextChangeCommitEvents_FWD_DEFINED__
#define __IVsFinalTextChangeCommitEvents_FWD_DEFINED__
typedef interface IVsFinalTextChangeCommitEvents IVsFinalTextChangeCommitEvents;
#endif 	/* __IVsFinalTextChangeCommitEvents_FWD_DEFINED__ */


#ifndef __IVsPreliminaryTextChangeCommitEvents_FWD_DEFINED__
#define __IVsPreliminaryTextChangeCommitEvents_FWD_DEFINED__
typedef interface IVsPreliminaryTextChangeCommitEvents IVsPreliminaryTextChangeCommitEvents;
#endif 	/* __IVsPreliminaryTextChangeCommitEvents_FWD_DEFINED__ */


#ifndef __IVsUndoRedoClusterWithCommitEvents_FWD_DEFINED__
#define __IVsUndoRedoClusterWithCommitEvents_FWD_DEFINED__
typedef interface IVsUndoRedoClusterWithCommitEvents IVsUndoRedoClusterWithCommitEvents;
#endif 	/* __IVsUndoRedoClusterWithCommitEvents_FWD_DEFINED__ */


#ifndef __IVsTextImageEvents_FWD_DEFINED__
#define __IVsTextImageEvents_FWD_DEFINED__
typedef interface IVsTextImageEvents IVsTextImageEvents;
#endif 	/* __IVsTextImageEvents_FWD_DEFINED__ */


#ifndef __IVsCommitGestureSink_FWD_DEFINED__
#define __IVsCommitGestureSink_FWD_DEFINED__
typedef interface IVsCommitGestureSink IVsCommitGestureSink;
#endif 	/* __IVsCommitGestureSink_FWD_DEFINED__ */


#ifndef __IVsTextImage_FWD_DEFINED__
#define __IVsTextImage_FWD_DEFINED__
typedef interface IVsTextImage IVsTextImage;
#endif 	/* __IVsTextImage_FWD_DEFINED__ */


#ifndef __IVsEditorGoBackLocations_FWD_DEFINED__
#define __IVsEditorGoBackLocations_FWD_DEFINED__
typedef interface IVsEditorGoBackLocations IVsEditorGoBackLocations;
#endif 	/* __IVsEditorGoBackLocations_FWD_DEFINED__ */


#ifndef __IVsTextReplaceEvents_FWD_DEFINED__
#define __IVsTextReplaceEvents_FWD_DEFINED__
typedef interface IVsTextReplaceEvents IVsTextReplaceEvents;
#endif 	/* __IVsTextReplaceEvents_FWD_DEFINED__ */


#ifndef __IVsFormatFilterProvider_FWD_DEFINED__
#define __IVsFormatFilterProvider_FWD_DEFINED__
typedef interface IVsFormatFilterProvider IVsFormatFilterProvider;
#endif 	/* __IVsFormatFilterProvider_FWD_DEFINED__ */


#ifndef __IVsNavigableLocationResolver_FWD_DEFINED__
#define __IVsNavigableLocationResolver_FWD_DEFINED__
typedef interface IVsNavigableLocationResolver IVsNavigableLocationResolver;
#endif 	/* __IVsNavigableLocationResolver_FWD_DEFINED__ */


#ifndef __IVsLanguageTextOps_FWD_DEFINED__
#define __IVsLanguageTextOps_FWD_DEFINED__
typedef interface IVsLanguageTextOps IVsLanguageTextOps;
#endif 	/* __IVsLanguageTextOps_FWD_DEFINED__ */


#ifndef __IVsLanguageClipboardOps_FWD_DEFINED__
#define __IVsLanguageClipboardOps_FWD_DEFINED__
typedef interface IVsLanguageClipboardOps IVsLanguageClipboardOps;
#endif 	/* __IVsLanguageClipboardOps_FWD_DEFINED__ */


#ifndef __IVsQueryLineChangeCommit_FWD_DEFINED__
#define __IVsQueryLineChangeCommit_FWD_DEFINED__
typedef interface IVsQueryLineChangeCommit IVsQueryLineChangeCommit;
#endif 	/* __IVsQueryLineChangeCommit_FWD_DEFINED__ */


#ifndef __IVsCodeWindowEvents_FWD_DEFINED__
#define __IVsCodeWindowEvents_FWD_DEFINED__
typedef interface IVsCodeWindowEvents IVsCodeWindowEvents;
#endif 	/* __IVsCodeWindowEvents_FWD_DEFINED__ */


#ifndef __IVsFileBackup_FWD_DEFINED__
#define __IVsFileBackup_FWD_DEFINED__
typedef interface IVsFileBackup IVsFileBackup;
#endif 	/* __IVsFileBackup_FWD_DEFINED__ */


#ifndef __IVsLineAttributes_FWD_DEFINED__
#define __IVsLineAttributes_FWD_DEFINED__
typedef interface IVsLineAttributes IVsLineAttributes;
#endif 	/* __IVsLineAttributes_FWD_DEFINED__ */


/* header files for imported files */
#include "docobj.h"
#include "context.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_textmgr_0000_0000 */
/* [local] */ 

#ifndef TEXTSPAN_DEFINED
#define TEXTSPAN_DEFINED
typedef long ViewCol;

typedef long CharIndex;

typedef __int64 TEXTADDR;

struct _TextAddress
    {
    CharIndex index;
    long line;
    } ;
typedef struct _TextAddress TextAddress;

struct _TextSpan
    {
    CharIndex iStartIndex;
    long iStartLine;
    CharIndex iEndIndex;
    long iEndLine;
    } ;
typedef struct _TextSpan TextSpan;

#endif // TEXTSPAN_DEFINED
#ifndef __INDENTSTYLE__
#define __INDENTSTYLE__
typedef /* [uuid] */  DECLSPEC_UUID("BCCEBE05-D29C-11D2-AABD-00C04F688DDE") 
enum _vsIndentStyle
    {	vsIndentStyleNone	= 0,
	vsIndentStyleDefault	= ( vsIndentStyleNone + 1 ) ,
	vsIndentStyleSmart	= ( vsIndentStyleDefault + 1 ) 
    } 	vsIndentStyle;

#endif // __INDENTSTYLE__
#pragma once









































































extern RPC_IF_HANDLE __MIDL_itf_textmgr_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_textmgr_0000_0000_v0_0_s_ifspec;


#ifndef __TextManagerInternal_LIBRARY_DEFINED__
#define __TextManagerInternal_LIBRARY_DEFINED__

/* library TextManagerInternal */
/* [version][uuid] */ 


enum TextBufferErrors
    {	BUFFER_E_READONLY	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x1001 ) ,
	BUFFER_E_READONLY_REGION	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x1002 ) ,
	BUFFER_E_TIMEOUT	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x1003 ) ,
	BUFFER_E_LOCKED	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x1004 ) ,
	BUFFER_E_SCC_READONLY	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x1005 ) ,
	BUFFER_E_DEST_TOO_SMALL	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x1006 ) ,
	MARKER_E_INVALIDATED	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x1007 ) ,
	MARKER_E_BUFFERDESTROYED	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x1008 ) 
    } ;

enum TextViewErrors
    {	VIEW_E_NO_BOOKMARKS	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x2001 ) ,
	VIEW_E_NO_DEBUGGER	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x2002 ) ,
	VIEW_E_USERREADONLY	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x2004 ) ,
	VIEW_E_LOCATION_HIDDEN	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x2005 ) 
    } ;

enum LinkedUndoErrors
    {	LINKEDUNDO_E_INTERVENING_ACTION	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x3001 ) 
    } ;

enum UndoErrors
    {	UNDO_E_CLIENTABORT	= ( ( 0x80000000 | ( 4 << 16 )  )  | 0x4001 ) 
    } ;

enum TipSuccesses
    {	TIP_S_ONLYIFNOMARKER	= ( ( 4 << 16 )  | 0x4001 ) 
    } ;
#include <stdidcmd.h>
#include <vsshlids.h>

enum __MIDL___MIDL_itf_textmgr_0001_0026_0001
    {	MAX_FILE_TYPE	= 24
    } ;

enum __MIDL___MIDL_itf_textmgr_0001_0026_0002
    {	MAX_EDITOR_TAB_SIZE	= 60
    } ;
typedef struct _LANGPREFERENCES
    {
    CHAR szFileType[ 24 ];
    unsigned int fShowCompletion;
    unsigned int fShowSmartIndent;
    unsigned int fHideAdvancedAutoListMembers;
    unsigned int uTabSize;
    unsigned int uIndentSize;
    unsigned int fInsertTabs;
    vsIndentStyle IndentStyle;
    unsigned int fAutoListMembers;
    unsigned int fAutoListParams;
    unsigned int fVirtualSpace;
    unsigned int fWordWrap;
    unsigned int fTwoWayTreeview;
    unsigned int fHotURLs;
    unsigned int fDropdownBar;
    unsigned int fLineNumbers;
    GUID guidLang;
    } 	LANGPREFERENCES;

DEFINE_GUID(DEFAULT_FILE_TYPE, 0x8239bec4, 0xee87, 0x11d0, 0x8c, 0x98, 0x0, 0xc0, 0x4f, 0xc2, 0xab, 0x22);
DEFINE_GUID(ALL_FILE_TYPES, 0x2149a66e, 0xf261, 0x11d0, 0x8c, 0x9c, 0x0, 0xc0, 0x4f, 0xc2, 0xab, 0x22);
typedef struct _VIEWPREFERENCES
    {
    unsigned int fVisibleWhitespace;
    unsigned int fSelectionMargin;
    unsigned int fAutoDelimiterHighlight;
    unsigned int fGoToAnchorAfterEscape;
    unsigned int fDragDropEditing;
    unsigned int fUndoCaretMovements;
    unsigned int fOvertype;
    unsigned int fDragDropMove;
    unsigned int fWidgetMargin;
    } 	VIEWPREFERENCES;

typedef struct _FRAMEPREFERENCES
    {
    unsigned int fHorzScrollbar;
    unsigned int fVertScrollbar;
    } 	FRAMEPREFERENCES;

typedef struct _FONTCOLORPREFERENCES
    {
    const GUID *pguidColorService;
    IUnknown *pColorTable;
    HFONT hRegularViewFont;
    HFONT hBoldViewFont;
    const GUID *pguidFontCategory;
    const GUID *pguidColorCategory;
    } 	FONTCOLORPREFERENCES;

typedef 
enum __VSEDITPROPID
    {	VSEDITPROPID_LAST	= -0x1,
	VSEDITPROPID_ViewComposite_AllCodeWindowDefaults	= -0x10001,
	VSEDITPROPID_ViewGeneral_FontCategory	= -0x12005,
	VSEDITPROPID_ViewGeneral_ColorCategory	= -0x12006,
	VSEDITPROPID_ViewGlobalOpt_VisibleWhitespace	= -0x20001,
	VSEDITPROPID_ViewGlobalOpt_Overtype	= -0x20002,
	VSEDITPROPID_ViewGlobalOpt_SelectionMargin	= -0x20003,
	VSEDITPROPID_ViewGlobalOpt_AutoScrollCaretOnTextEntry	= -0x20010,
	VSEDITPROPID_ViewLangOpt_WordWrap	= -0x30001,
	VSEDITPROPID_ViewLangOpt_VirtualSpace	= -0x30006,
	VSEDITPROPID_ViewLangOpt_RawTextDisplay	= -0x30009,
	VSEDITPROPID_FrameOpt_SuppressResizeWidget	= -0x50003,
	VSEDITPROPID_ProgLang_DebuggerLanguages	= -0x60003,
	VSEDITPROPID_ProgLang_SuppressMultipleCodeWindows	= -0x60006,
	VSEDITPROPID_ProgLang_SupportCF_HTML	= -0x60008,
	VSEDITPROPID_FIRST	= -0x7fffffff
    } 	VSEDITPROPID;

DEFINE_GUID(GUID_EditPropCategory_View_MasterSettings, 0xd1756e7c, 0xb7fd, 0x49a8, 0xb4, 0x8e, 0x87, 0xb1, 0x4a, 0x55, 0x65, 0x5a);
DEFINE_GUID(GUID_EditPropCategory_TextMgr_Global, 0x6bfb60a2, 0x48d8, 0x424e, 0x81, 0xa2, 0x4, 0xa, 0xca, 0xb, 0x1f, 0x68);
typedef 
enum _TextSelMode
    {	SM_STREAM	= 0,
	SM_BOX	= ( SM_STREAM + 1 ) 
    } 	TextSelMode;

typedef 
enum _TextViewInitFlags
    {	VIF_DEFAULT	= 0,
	VIF_HSCROLL	= 0x100000,
	VIF_VSCROLL	= 0x200000,
	VIF_UPDATE_STATUS_BAR	= 0x400000,
	VIF_SET_WIDGET_MARGIN	= 0x1,
	VIF_SET_SELECTION_MARGIN	= 0x2,
	VIF_SET_VIRTUAL_SPACE	= 0x4,
	VIF_SET_INDENT_MODE	= 0x8,
	VIF_SET_STREAM_SEL_MODE	= 0x10,
	VIF_SET_VISIBLE_WHITESPACE	= 0x20,
	VIF_SET_OVERTYPE	= 0x40,
	VIF_SET_DRAGDROPMOVE	= 0x80,
	VIF_SET_HOTURLS	= 0x100
    } 	TextViewInitFlags;

typedef struct _INITVIEW
    {
    unsigned int fVirtualSpace;
    unsigned int fStreamSelMode;
    unsigned int fOvertype;
    unsigned int fVisibleWhitespace;
    unsigned int fWidgetMargin;
    unsigned int fSelectionMargin;
    unsigned int fDragDropMove;
    unsigned int fHotURLs;
    vsIndentStyle IndentStyle;
    } 	INITVIEW;

typedef 
enum _CompletionStatusFlags
    {	UCS_NAMESCHANGED	= 0x1,
	UCS_EXTENTCHANGED	= 0x2,
	UCS_FLAGSCHANGED	= 0x4,
	UCS_COMPLETEWORD	= 0x8,
	CSF_CUSTOMMATCHING	= 0x4,
	CSF_CUSTOMCOMMIT	= 0x8,
	CSF_HAVEDESCRIPTIONS	= 0x10,
	CSF_INITIALEXTENTKNOWN	= 0x20,
	CSF_NOCASEMATCHING	= 0x40,
	CSF_NOCASEUNIQUENESS	= 0x80,
	GBM_SELECT	= 0x1,
	GBM_UNIQUE	= 0x2
    } 	UpdateCompletionFlags;

typedef 
enum _TipWindowFlags
    {	UTW_CONTEXTCHANGED	= 0x1,
	UTW_CONTENTCHANGED	= 0x2,
	UTW_DISMISS	= 0x4
    } 	TipWindowFlags;

typedef 
enum _TipPosPreference
    {	TPP_ABOVE	= 0,
	TPP_BELOW	= ( TPP_ABOVE + 1 ) ,
	TPP_LEFT	= ( TPP_BELOW + 1 ) ,
	TPP_RIGHT	= ( TPP_LEFT + 1 ) ,
	TPP_DOCKED	= ( TPP_RIGHT + 1 ) 
    } 	TipPosPreference;

typedef struct _tipsizedata
    {
    SIZE size;
    TipPosPreference dwPosition;
    } 	TIPSIZEDATA;

typedef 
enum _MethodTextType
    {	MTT_TYPEPREFIX	= 0,
	MTT_TYPEPOSTFIX	= ( MTT_TYPEPREFIX + 1 ) ,
	MTT_NAME	= ( MTT_TYPEPOSTFIX + 1 ) ,
	MTT_DESCRIPTION	= ( MTT_NAME + 1 ) ,
	MTT_OPENBRACKET	= ( MTT_DESCRIPTION + 1 ) ,
	MTT_CLOSEBRACKET	= ( MTT_OPENBRACKET + 1 ) ,
	MTT_DELIMITER	= ( MTT_CLOSEBRACKET + 1 ) 
    } 	MethodTextType;

typedef 
enum _ParameterTextType
    {	PTT_DECLARATION	= 0,
	PTT_NAME	= ( PTT_DECLARATION + 1 ) ,
	PTT_DESCRIPTION	= ( PTT_NAME + 1 ) 
    } 	ParameterTextType;

typedef 
enum _GetSelectedAtomFlags
    {	gsaDefault	= 0
    } 	GetSelectedAtomFlags;

typedef 
enum _SELECTIONSTATEFLAGS
    {	ssfDefault	= 0,
	ssfColumn	= 1
    } 	SELECTIONSTATEFLAGS;

typedef struct _SELECTIONSTATE
    {
    ViewCol iAnchorCol;
    long iAnchorLine;
    ViewCol iActiveCol;
    long iActiveLine;
    DWORD dwFlags;
    DWORD dwReserved;
    } 	SELECTIONSTATE;

typedef 
enum _RelativeSelectionStateFlags
    {	RSS_DEFAULT	= 0,
	RSS_TOP_LAYER	= 0,
	RSS_BUFFER	= 0x1,
	RSS_RELATIVE_LAYER	= 0x2,
	RSS_TRACKSEL	= 0x10,
	RSS_SET_WITHOUT_SCROLLING	= 0x1000,
	RSS_SET_TO_NEAREST_LOCAL	= 0x2000,
	rssDefault	= RSS_DEFAULT,
	rssTopLayer	= RSS_TOP_LAYER,
	rssBuffer	= RSS_BUFFER,
	rssRelativeLayer	= RSS_RELATIVE_LAYER,
	rssTrackSel	= RSS_TRACKSEL
    } 	RelativeSelectionStateFlags;

typedef 
enum _wordextflags
    {	WORDEXT_MOVETYPE_MASK	= 0x3,
	WORDEXT_CURRENT	= 0,
	WORDEXT_PREVIOUS	= 0x1,
	WORDEXT_NEXT	= 0x2,
	WORDEXT_NEAREST	= 0x3,
	WORDEXT_FINDWORD	= 0,
	WORDEXT_FINDTOKEN	= 0x4,
	WORDEXT_FINDEXPRESSION	= 0x8
    } 	WORDEXTFLAGS;

typedef 
enum _LanguageContextHint
    {	LCH_DEFAULT	= 0,
	LCH_F1_HELP	= 0x1
    } 	LanguageContextHint;

typedef 
enum _TextViewAction
    {	TVA_SETCARETPOS	= 0,
	TVA_CENTERLINES	= ( TVA_SETCARETPOS + 1 ) 
    } 	TextViewAction;

typedef 
enum _COLORINDEX
    {	CI_USERTEXT_FG	= 0,
	CI_USERTEXT_BK	= ( CI_USERTEXT_FG + 1 ) ,
	CI_FIRSTFIXEDCOLOR	= ( CI_USERTEXT_BK + 1 ) ,
	CI_BLACK	= CI_FIRSTFIXEDCOLOR,
	CI_WHITE	= ( CI_BLACK + 1 ) ,
	CI_MAROON	= ( CI_WHITE + 1 ) ,
	CI_DARKGREEN	= ( CI_MAROON + 1 ) ,
	CI_BROWN	= ( CI_DARKGREEN + 1 ) ,
	CI_DARKBLUE	= ( CI_BROWN + 1 ) ,
	CI_PURPLE	= ( CI_DARKBLUE + 1 ) ,
	CI_AQUAMARINE	= ( CI_PURPLE + 1 ) ,
	CI_LIGHTGRAY	= ( CI_AQUAMARINE + 1 ) ,
	CI_DARKGRAY	= ( CI_LIGHTGRAY + 1 ) ,
	CI_RED	= ( CI_DARKGRAY + 1 ) ,
	CI_GREEN	= ( CI_RED + 1 ) ,
	CI_YELLOW	= ( CI_GREEN + 1 ) ,
	CI_BLUE	= ( CI_YELLOW + 1 ) ,
	CI_MAGENTA	= ( CI_BLUE + 1 ) ,
	CI_CYAN	= ( CI_MAGENTA + 1 ) ,
	CI_LASTFIXEDCOLOR	= CI_CYAN,
	CI_SYSSEL_FG	= ( CI_LASTFIXEDCOLOR + 1 ) ,
	CI_SYSSEL_BK	= ( CI_SYSSEL_FG + 1 ) ,
	CI_SYSINACTSEL_FG	= ( CI_SYSSEL_BK + 1 ) ,
	CI_SYSINACTSEL_BK	= ( CI_SYSINACTSEL_FG + 1 ) ,
	CI_SYSWIDGETMGN_BK	= ( CI_SYSINACTSEL_BK + 1 ) ,
	CI_SYSPLAINTEXT_FG	= ( CI_SYSWIDGETMGN_BK + 1 ) ,
	CI_SYSPLAINTEXT_BK	= ( CI_SYSPLAINTEXT_FG + 1 ) ,
	CI_PALETTESIZE	= ( CI_SYSPLAINTEXT_BK + 1 ) ,
	CI_FORBIDCUSTOMIZATION	= ( CI_PALETTESIZE + 1 ) ,
	CI_SYSTEXT_FG	= CI_USERTEXT_FG,
	CI_SYSTEXT_BK	= CI_USERTEXT_BK
    } 	COLORINDEX;

typedef 
enum _LINESTYLE
    {	LI_NONE	= 0,
	LI_SOLID	= 1,
	LI_SQUIGGLY	= 2,
	LI_HATCH	= 3,
	LI_DOTTED	= 4
    } 	LINESTYLE;

typedef 
enum _GLYPHDRAWFLAGS
    {	GDF_DEFAULT	= 0,
	GDF_MULTILINE	= 0x1,
	GDF_TOPEDGE	= 0x2,
	GDF_BOTTOMEDGE	= 0x4
    } 	GLYPHDRAWFLAGS;

typedef 
enum _MARKERVISUAL
    {	MV_GLYPH	= 0x1,
	MV_COLOR_ALWAYS	= 0x2,
	MV_COLOR_LINE_IF_NO_MARGIN	= 0x4,
	MV_LINE	= 0x8,
	MV_TIP_FOR_BODY	= 0x10,
	MV_TIP_FOR_GLYPH	= 0x20,
	MV_SEL_MARGIN_GLYPH	= 0x40,
	MV_FORCE_INVISIBLE	= 0x80,
	MV_BORDER	= 0x100,
	MV_GLYPH_HOVER_CURSOR	= 0x200,
	MV_DRAGGABLE_GLYPH	= 0x400,
	MV_MULTILINE_GLYPH	= 0x800,
	MV_CONTEXT_CONTRIBUTION_FOR_BODY	= 0x1000,
	MV_COLOR_SPAN_IF_ZERO_LENGTH	= 0x2000
    } 	MARKERVISUAL;

typedef 
enum _FONTFLAGS
    {	FF_DEFAULT	= 0,
	FF_BOLD	= 0x1,
	FF_STRIKETHROUGH	= 0x2
    } 	FONTFLAGS;

typedef 
enum _markerbehaviorflags
    {	MB_DEFAULT	= 0,
	MB_LINESPAN	= 0x1,
	MB_LEFTEDGE_LEFTTRACK	= 0x2,
	MB_RIGHTEDGE_RIGHTTRACK	= 0x4,
	MB_MULTILINESPAN	= 0x8,
	MB_TRACK_EDIT_ON_RELOAD	= 0x100
    } 	MARKERBEHAVIORFLAGS;

typedef 
enum _DEFAULTITEMS
    {	COLITEM_TEXT	= 0,
	COLITEM_KEYWORD	= ( COLITEM_TEXT + 1 ) ,
	COLITEM_COMMENT	= ( COLITEM_KEYWORD + 1 ) ,
	COLITEM_IDENTIFIER	= ( COLITEM_COMMENT + 1 ) ,
	COLITEM_STRING	= ( COLITEM_IDENTIFIER + 1 ) ,
	COLITEM_NUMBER	= ( COLITEM_STRING + 1 ) ,
	DEFAULT_ITEM_COUNT	= ( COLITEM_NUMBER + 1 ) 
    } 	DEFAULTITEMS;

typedef 
enum _COLORIZER_ATTRIBUTE
    {	COLOR_INDEX_MASK	= 0xff,
	COLOR_MARKER_MASK	= 0x3f00,
	LINE_MARKER_MASK	= 0xfc000,
	PRIVATE_CLIENT_MASK	= 0xf00000,
	HUMAN_TEXT_ATTR	= 0x1000000,
	SEPARATOR_AFTER_ATTR	= 0x2000000,
	PRIVATE_EDITOR_MASK	= 0xfc000000
    } 	COLORIZER_ATTRIBUTE;

extern const __declspec(selectany) GUID GUID_VsLang_Support_CF_HTML = { 0x27e97702, 0x589e, 0x11d2, { 0x82, 0x33, 0x0, 0x80, 0xc7, 0x47, 0xd9, 0xa0 } };
typedef 
enum _resolvenameflags
    {	RNF_BREAKPOINT	= 0x1
    } 	RESOLVENAMEFLAGS;

typedef 
enum _markertype
    {	MARKER_INVISIBLE	= 0,
	MARKER_READONLY	= ( MARKER_INVISIBLE + 1 ) ,
	MARKER_SHORTCUT	= ( MARKER_READONLY + 1 ) ,
	MARKER_BOOKMARK	= ( MARKER_SHORTCUT + 1 ) ,
	MARKER_COMPILE_ERROR	= ( MARKER_BOOKMARK + 1 ) ,
	MARKER_CODESENSE_ERROR	= ( MARKER_COMPILE_ERROR + 1 ) ,
	MARKER_OTHER_ERROR	= ( MARKER_CODESENSE_ERROR + 1 ) ,
	MARKER_REGION_COLLAPSED	= ( MARKER_OTHER_ERROR + 1 ) ,
	MARKER_REGION_EXPANDED	= ( MARKER_REGION_COLLAPSED + 1 ) ,
	MARKER_LIST_LOCATION	= ( MARKER_REGION_EXPANDED + 1 ) ,
	DEF_MARKER_COUNT	= ( MARKER_LIST_LOCATION + 1 ) ,
	MARKER_IDENTERROR	= MARKER_COMPILE_ERROR,
	MARKER_SYNTAXERROR	= MARKER_COMPILE_ERROR
    } 	MARKERTYPE;

typedef 
enum _enummarkerflags
    {	EM_DEFAULT	= 0,
	EM_ENTIREBUFFER	= 0x1,
	EM_ALLTYPES	= 0x2,
	EM_SORTDESCENDING	= 0x4,
	EM_SORTPRIORITY	= 0x8,
	EM_GLYPHINSPAN	= 0x10,
	EM_INCLUDEINVISIBLE	= 0x20,
	EM_CONTAINED	= 0x40
    } 	ENUMMARKERFLAGS;

typedef 
enum _findmarkerflags
    {	FM_FORWARD	= 0,
	FM_BACKWARD	= 0x1
    } 	FINDMARKERFLAGS;

typedef 
enum _bufferstateflags
    {	BSF_USER_READONLY	= 0x1,
	BSF_FILESYS_READONLY	= 0x2,
	BSF_MODIFIED	= 0x4,
	BSF_SUPPRESS_UI	= 0x8,
	BSF_RESERVED	= ~(( ( BSF_USER_READONLY | BSF_FILESYS_READONLY )  | BSF_MODIFIED ) )
    } 	BUFFERSTATEFLAGS;

typedef 
enum _BufferLockFlags
    {	BLF_READ	= 0,
	BLF_READ_AND_WRITE	= 0x1
    } 	BufferLockFlags;

typedef 
enum _textbufferinitflags
    {	BIF_DEFAULT	= 0,
	BIF_CUSTOMSTORAGE	= 0x1,
	BIF_INITTEXT	= 0x2
    } 	TextBufferInitFlags;

typedef /* [public][public] */ struct __MIDL___MIDL_itf_textmgr_0001_0060_0001
    {
    DWORD dwFlags;
    IUnknown *pStorage;
    const WCHAR *pszText;
    long iLength;
    } 	BUFFERINITEX;

typedef 
enum _CHARFMT
    {	CHARFMT_UNI	= 0,
	CHARFMT_UNI_SWAP	= ( CHARFMT_UNI + 1 ) ,
	CHARFMT_MBCS	= ( CHARFMT_UNI_SWAP + 1 ) ,
	CHARFMT_UTF8	= ( CHARFMT_MBCS + 1 ) 
    } 	CHARFMT;

typedef 
enum _EOLTYPE
    {	eolCRLF	= 0,
	eolCR	= ( eolCRLF + 1 ) ,
	eolLF	= ( eolCR + 1 ) ,
	eolUNI_LINESEP	= ( eolLF + 1 ) ,
	eolUNI_PARASEP	= ( eolUNI_LINESEP + 1 ) ,
	eolEOF	= ( eolUNI_PARASEP + 1 ) ,
	eolNONE	= ( eolEOF + 1 ) ,
	MAX_EOLTYPES	= ( eolNONE + 1 ) 
    } 	EOLTYPE;

typedef 
enum _LINEDATAEXFLAGS
    {	ldfDefault	= 0,
	ldfMarkers	= 0x1,
	ldfNoReadLock	= 0x2
    } 	LINEDATAEXFLAGS;

typedef struct _linedata
    {
    long iLength;
    const WCHAR *pszText;
    const ULONG *pAttributes;
    EOLTYPE iEolType;
    BOOL fMarkers;
    } 	LINEDATA;

typedef struct _tag_AtomicText AtomicText;

struct _tag_AtomicText
    {
    AtomicText *pNext;
    CharIndex iIndex;
    const WCHAR *pszAtomicText;
    IUnknown *punkAtom;
    } ;
typedef struct _linedataex
    {
    long iLength;
    const WCHAR *pszText;
    EOLTYPE iEolType;
    const ULONG *pAttributes;
    USHORT dwFlags;
    USHORT dwReserved;
    AtomicText *pAtomicTextChain;
    } 	LINEDATAEX;

typedef 
enum _paintingrestrictions
    {	PR_NONE	= 0,
	PR_NO_MARGIN	= ( PR_NONE + 1 ) 
    } 	PAINTINGRESTRICTIONS;

typedef struct _tag_MARKERDATA MARKERDATA;

struct _tag_MARKERDATA
    {
    long iTopLine;
    long iBottomLine;
    long iCount;
    IVsTextLayerMarker **rgpMarker;
    BOOL *rgfLineMarked;
    IVsTextLayer *pLayer;
    MARKERDATA *pNext;
    } ;
typedef 
enum _GLDE_FLAGS
    {	gldeDefault	= 0,
	gldeSubset	= 0x1,
	gldeColorizerState	= 0x2,
	gldeSyntaxAttr	= 0x4,
	gldeMarkerAttr	= 0x8,
	gldeFullAttr	= ( gldeSyntaxAttr | gldeMarkerAttr ) ,
	gldeNoReadLock	= 0x10,
	gldeNoWidgetMargin	= 0x20
    } 	GLDE_FLAGS;

typedef 
enum _REPLACE_TEXT_FLAGS
    {	rtfDefault	= 0,
	rtfKeepMarkers	= 0x1,
	rtfDoNotNormalizeNewlines	= 0x2,
	rtfNormalizeTabsAndSpaces	= 0x4,
	rtfSyntacticReformat	= 0x8,
	rtfClientSuppressFormatting	= 0x10,
	rtfInterimText	= 0x20
    } 	REPLACE_TEXT_FLAGS;

typedef struct _TextLineChange
    {
    CharIndex iStartIndex;
    long iStartLine;
    CharIndex iOldEndIndex;
    long iOldEndLine;
    CharIndex iNewEndIndex;
    long iNewEndLine;
    } 	TextLineChange;

typedef 
enum _MarkerCommandValues
    {	mcvFirstContextMenuCommand	= 0,
	mcvLastContextMenuCommand	= 0x9,
	mcvGlyphSingleClickCommand	= 0x101,
	mcvBodyDoubleClickCommand	= 0x102,
	mcvGlyphDoubleClickCommand	= 0x103
    } 	MarkerCommandValues;

typedef 
enum _CUSTOM_DROP_HANDLER_FLAGS
    {	CDH_DEFAULT	= 0,
	CDH_OVER_SELF	= 1,
	CDH_INVALID_DEST	= 2
    } 	CUSTOM_DROP_HANDLER_FLAGS;

typedef 
enum _TextFindMode
    {	TFIND_BACKWARDS	= 1,
	TFIND_MATCH_CASE	= 2,
	TFIND_WHOLE_WORD	= 4,
	TFIND_REG_EXPR	= 8,
	TFIND_WRAP_SEARCH	= 16,
	TFIND_IN_SELECTION	= 32,
	TFIND_NEW_SEARCH	= 64
    } 	TextFindMode;

typedef 
enum _splitnotifycode
    {	SNC_BEGINSIZE	= 0,
	SNC_ENDSIZE	= ( SNC_BEGINSIZE + 1 ) ,
	SNC_ANCESTORDETACHED	= ( SNC_ENDSIZE + 1 ) ,
	SNC_ANCESTORATTACHED	= ( SNC_ANCESTORDETACHED + 1 ) ,
	SNC_LBUTTONDBLCLK	= ( SNC_ANCESTORATTACHED + 1 ) 
    } 	SPLITNOTIFYCODE;

typedef 
enum _splitflags
    {	SF_HORIZONTAL	= 0,
	SF_VERTICAL	= 0x1,
	SF_MAKESECONDARY	= 0,
	SF_MAKEPRIMARY	= 0x2,
	SF_ADJUSTABLE	= 0,
	SF_FIXED	= 0x4
    } 	SPLITFLAGS;

typedef 
enum _paneflags
    {	PF_SUNKEN	= 0,
	PF_RAISED	= 0x1,
	PF_ETCHED	= 0x2,
	PF_BUMP	= 0x3,
	PF_SHALLOW	= 0x4,
	PF_BORDERMASK	= 0x7,
	PF_BORDER	= 0x8,
	PF_ELASTICX	= 0x10,
	PF_ELASTICY	= 0x20,
	PF_NOFOCUS	= 0x40
    } 	PANEFLAGS;

typedef 
enum _paneevents
    {	PE_GOTFOCUS	= 1,
	PE_CLOSED	= ( PE_GOTFOCUS + 1 ) ,
	PE_FLAGSCHANGED	= ( PE_CLOSED + 1 ) ,
	PE_DETACHED	= ( PE_FLAGSCHANGED + 1 ) ,
	PE_FOCUS_TO_EDIT_PANE	= ( PE_DETACHED + 1 ) 
    } 	PANEEVENTS;

typedef 
enum _panetype
    {	GP_FOCUS	= 1,
	GP_NEXT	= ( GP_FOCUS + 1 ) ,
	GP_PREV	= ( GP_NEXT + 1 ) 
    } 	PANETYPE;

typedef 
enum _READONLYSTATUS
    {	ROSTATUS_NotReadOnly	= 0,
	ROSTATUS_ReadOnly	= 1,
	ROSTATUS_Unknown	= -1
    } 	READONLYSTATUS;


enum DROPDOWNFONTATTR
    {	FONTATTR_PLAIN	= 0,
	FONTATTR_BOLD	= 1,
	FONTATTR_ITALIC	= 2,
	FONTATTR_UNDERLINE	= 4,
	FONTATTR_GRAY	= 8
    } ;

enum DROPDOWNENTRYTYPE
    {	ENTRY_TEXT	= 1,
	ENTRY_ATTR	= 2,
	ENTRY_IMAGE	= 4
    } ;
typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_textmgr_0001_0099_0001
    {	MOVESELECTION_REL_CHARACTER	= 1,
	MOVESELECTION_REL_WORD	= ( MOVESELECTION_REL_CHARACTER + 1 ) ,
	MOVESELECTION_REL_LINE	= ( MOVESELECTION_REL_WORD + 1 ) ,
	MOVESELECTION_REL_PAGE	= ( MOVESELECTION_REL_LINE + 1 ) 
    } 	MOVESELECTION_REL_TYPE;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_textmgr_0001_0099_0002
    {	MOVESELECTION_ABS_FIRSTCOLUMN	= 1,
	MOVESELECTION_ABS_FIRSTTEXTCOLUMN	= ( MOVESELECTION_ABS_FIRSTCOLUMN + 1 ) ,
	MOVESELECTION_ABS_LASTCOLUMN	= ( MOVESELECTION_ABS_FIRSTTEXTCOLUMN + 1 ) ,
	MOVESELECTION_ABS_FIRSTLINE	= ( MOVESELECTION_ABS_LASTCOLUMN + 1 ) ,
	MOVESELECTION_ABS_LASTLINE	= ( MOVESELECTION_ABS_FIRSTLINE + 1 ) 
    } 	MOVESELECTION_ABS_TYPE;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_textmgr_0001_0099_0003
    {	CASESELECTION_UPPER	= 1,
	CASESELECTION_LOWER	= ( CASESELECTION_UPPER + 1 ) ,
	CASESELECTION_TITLE	= ( CASESELECTION_LOWER + 1 ) 
    } 	CASESELECTION_TYPE;

typedef 
enum _LinkedTransactionFlags
    {	mdtDefault	= 0,
	mdtStrict	= 0x1
    } 	LinkedTransactionFlags;

typedef 
enum _ChangeClusterFlags
    {	CCE_BEFORE_OPEN	= 0x1,
	CCE_BEFORE_CLOSE	= 0x2,
	CCE_AFTER_CLOSE	= 0x4,
	CCE_UNDO	= 0x8,
	CCE_REDO	= 0x10,
	CCE_FLUSH	= 0x20,
	CCE_ABORTED	= 0x100
    } 	ChangeClusterFlags;

#define SID_SVsTextManager CLSID_VsTextManager
#define SID_SVsLanguageFilter IID_IVsTextViewFilter
#define SID_SVsCodeWindowManager IID_IVsCodeWindowManager
#define SID_SVsCodeWindow IID_IVsCodeWindow
#define SID_SVsLinkedUndoTransactionManager IID_IVsLinkedUndoTransactionManager
#define GUID_VsBufferMoniker IID_IVsUserData
extern const __declspec(selectany) GUID GUID_VsBufferIsDiskFile = { 0xd9126592, 0x1473, 0x11d3, { 0xbe, 0xc6, 0x0, 0x80, 0xc7, 0x47, 0xd9, 0xa0 } };
extern const __declspec(selectany) GUID GUID_VsBufferEncoding = {0x212729ac,0xd6bb,0x11d0,{0xae,0x75,0x0,0xc0,0x4f,0xb6,0x80,0x6}};
extern const __declspec(selectany) GUID GUID_VsBufferEncodingVSTFF = { 0x16417f39, 0xa6b7, 0x4c90, { 0x89, 0xfa, 0x77, 0xd, 0x2c, 0x60, 0x44, 0xb }};
extern const __declspec(selectany) GUID GUID_VsBufferEncodingPromptOnLoad = { 0x99ec03f0, 0xc843, 0x4c09, { 0xbe, 0x74, 0xcd, 0xca, 0x51, 0x58, 0xd3, 0x6c }};
extern const __declspec(selectany) GUID GUID_VsBufferDetectCharSet = {0x36358d1f,0xbf7e,0x11d1,{0xb0,0x3a,0x0,0xc0,0x4f,0xb6,0x80,0x6}};
extern const __declspec(selectany) GUID GUID_VsBufferDetectLangSID = { 0x17f375ac, 0xc814, 0x11d1, { 0x88, 0xad, 0x0, 0x0, 0xf8, 0x75, 0x79, 0xd2 } };
extern const __declspec(selectany) GUID GUID_PropertyBrowserSID = { 0xce6ddbba, 0x8d13, 0x11d1, { 0x88, 0x89, 0x0, 0x0, 0xf8, 0x75, 0x79, 0xd2 }};
extern const __declspec(selectany) GUID GUID_UserReadOnlyErrorString = { 0xa3bcfe56, 0xcf1b, 0x11d1, { 0x88, 0xb1, 0x0, 0x0, 0xf8, 0x75, 0x79, 0xd2 }};
extern const __declspec(selectany) GUID GUID_BufferStorage = { 0xd97f167a, 0x638e, 0x11d2, { 0x88, 0xf6, 0x0, 0x0, 0xf8, 0x75, 0x79, 0xd2 } };
extern const __declspec(selectany) GUID CLSID_TextEditorFactory = { 0x8B382828, 0x6202, 0x11d1, { 0x88, 0x70, 0x00, 0x00, 0xF8, 0x75, 0x79, 0xD2 }};
extern const __declspec(selectany) GUID CMDUIGUID_TextEditor = { 0x8B382828, 0x6202, 0x11d1, { 0x88, 0x70, 0x00, 0x00, 0xF8, 0x75, 0x79, 0xD2 }};
struct TabStop
    {
    long *iCol;
    ULONG cEl;
    UINT iRepeatWidth;
    DWORD dwFlags;
    } ;

enum TabStopFlags
    {	USE_DEFAULT_REPEAT	= 0x1
    } ;
typedef 
enum _MapLocalSpanFlags
    {	MLS_VISIBLE_ONLY	= 0,
	MLS_INCLUDE_USER_EXPANDABLE	= 0x1,
	MLS_NEVER_COMBINE_SPANS	= 0x2,
	mlsVisibleOnly	= MLS_VISIBLE_ONLY,
	mlsIncludeUserExpandable	= MLS_INCLUDE_USER_EXPANDABLE,
	mlsNeverCombineSpans	= MLS_NEVER_COMBINE_SPANS
    } 	MapLocalSpanFlags;

typedef 
enum _DeeperLayerLineIndexToLocalFlags
    {	DLI_DEFAULT	= 0,
	DLI_CLOSEST	= 0x1,
	DLI_RIGHTMOST	= 0x2,
	DLI_AVOID_OUTER_EDGE	= 0x4,
	dliDefault	= DLI_DEFAULT,
	dliClosest	= DLI_CLOSEST,
	dliRightmost	= DLI_RIGHTMOST
    } 	DeeperLayerLineIndexToLocalFlags;

typedef 
enum _tag_LAYER_MODULE_CAPABILITIES
    {	LMC_TEXTFIND	= 0x1,
	LMC_TEXTPRINT	= 0x2,
	LMC_TEXTORIGINATE	= 0x4
    } 	LAYER_MODULE_CAPABILITIES;

typedef struct _NewSyntheticRegion
    {
    long iMarkerType;
    DWORD dwBehavior;
    LPCWSTR pszText;
    long iAnchorLine;
    CharIndex iAnchorIndex;
    DWORD dwClient;
    long iSerialValue;
    } 	NewSyntheticRegion;

typedef 
enum _syntheticregionevent
    {	sreRegionReloaded	= 0
    } 	SYNTHETIC_REGION_EVENT;

typedef 
enum _tag_FIND_SYNTHETIC_REGION_FLAGS
    {	FSR_ALL_REGIONS	= 0,
	FSR_BY_CLIENT_DATA	= 0x1,
	FSR_WITHIN_SPAN	= 0x4,
	FSR_EXACT_SPAN	= 0x8
    } 	FIND_SYNTHETIC_REGION_FLAGS;

typedef 
enum _tag_CHANGE_SYNTHETIC_REGION_FLAGS
    {	CSR_DEFAULT	= 0,
	CSR_NONUNDOABLE	= 0x1
    } 	CHANGE_SYNTHETIC_REGION_FLAGS;

typedef 
enum _hidden_region_state
    {	hrsDefault	= 0,
	hrsExpanded	= 0x1
    } 	HIDDEN_REGION_STATE;

typedef 
enum _hidden_region_type
    {	hrtConcealed	= 0,
	hrtCollapsible	= 0x1
    } 	HIDDEN_REGION_TYPE;

typedef 
enum _hidden_region_behavior
    {	hrbClientControlled	= 0,
	hrbEditorControlled	= 0x1
    } 	HIDDEN_REGION_BEHAVIOR;

typedef 
enum _tag_CHANGE_HIDDEN_REGION_FLAGS
    {	chrDefault	= 0,
	chrNonUndoable	= 0x1
    } 	CHANGE_HIDDEN_REGION_FLAGS;

typedef struct _tag_NewHiddenRegion
    {
    long iType;
    DWORD dwBehavior;
    DWORD dwState;
    TextSpan tsHiddenText;
    LPCWSTR pszBanner;
    DWORD_PTR dwClient;
    } 	NewHiddenRegion;

typedef 
enum _hiddenregionevent
    {	hreRegionDeleted	= 0,
	hreRegionResurrected	= ( hreRegionDeleted + 1 ) ,
	hreRegionReloaded	= ( hreRegionResurrected + 1 ) ,
	hreBeforeRegionExpanded	= ( hreRegionReloaded + 1 ) ,
	hreAfterRegionExpanded	= ( hreBeforeRegionExpanded + 1 ) ,
	hreBeforeRegionCollapsed	= ( hreAfterRegionExpanded + 1 ) ,
	hreAfterRegionCollapsed	= ( hreBeforeRegionCollapsed + 1 ) 
    } 	HIDDEN_REGION_EVENT;

typedef 
enum _tag_FIND_HIDDEN_REGION_FLAGS
    {	FHR_ALL_REGIONS	= 0,
	FHR_BY_CLIENT_DATA	= 0x1,
	FHR_BY_TYPE	= 0x2,
	FHR_INTERSECTS_SPAN	= 0x4,
	FHR_EXACT_SPAN	= 0x8,
	FHR_EDITOR_CONTROLLED_ONLY	= 0x10,
	FHR_CLIENT_CONTROLLED_ONLY	= 0x20,
	FHR_ENTIRELY_WITHIN_SPAN	= 0x40,
	FHR_INNERMOST	= 0x80,
	FHR_VISIBLE_ONLY	= 0x100,
	FHR_PREFER_START_IN_SPAN	= 0x200,
	FHR_MUST_START_IN_SPAN	= 0x400,
	fhrAllRegions	= FHR_ALL_REGIONS,
	fhrByClientData	= FHR_BY_CLIENT_DATA,
	fhrByType	= FHR_BY_TYPE,
	fhrWithinSpan	= FHR_INTERSECTS_SPAN,
	fhrExactSpan	= FHR_EXACT_SPAN,
	fhrEditorControlledOnly	= FHR_EDITOR_CONTROLLED_ONLY,
	fhrClientControlledOnly	= FHR_CLIENT_CONTROLLED_ONLY
    } 	FIND_HIDDEN_REGION_FLAGS;

typedef struct _tag_NewOutlineRegion
    {
    DWORD dwState;
    TextSpan tsHiddenText;
    } 	NewOutlineRegion;

typedef 
enum _tag_ADD_OUTLINE_REGION_FLAGS
    {	AOR_DEFAULT	= 0,
	AOR_PRESERVE_EXISTING	= 0x1,
	AOR_NON_UNDOABLE	= 0x100
    } 	ADD_OUTLINE_REGION_FLAGS;

typedef 
enum _tag_DATA_OBJECT_RENDER_HINT
    {	DORH_DEFAULT	= 0,
	DORH_MOVE_IN_SAME_DOC	= 0x1,
	DORH_DROP	= 0x2,
	DORH_CLIPBOARD	= 0x4,
	DORH_TOOLBOX	= 0x8,
	DORH_PREVIEW	= 0x10
    } 	DATA_OBJECT_RENDER_HINT;

typedef struct tag_ChangeInput
    {
    TextSpan m_DelSpan;
    long m_iOldLen;
    long m_iNewLen;
    const WCHAR *m_pszNewText;
    DWORD m_dwFlags;
    } 	ChangeInput;

typedef 
enum _StorageLoadFlags
    {	slfDefault	= 0,
	slfReload	= 0x1
    } 	StorageLoadFlags;

typedef 
enum _ChangeCommitGestureFlags
    {	CCG_SAVE	= 0x1,
	CCG_MULTILINE_CHANGE	= 0x2,
	CCG_CARET_ON_NEW_BUFFER_LINE	= 0x10,
	CCG_MASS_REPLACE	= 0x8,
	CCG_ENTER_COMMAND	= 0x10,
	CCG_FIND_STARTING	= 0x20,
	CCG_LOST_FOCUS	= 0x40,
	CCG_DESTRUCTIVEACTION	= 0x80,
	CCG_PROGRAMMATIC_CHANGE	= 0x1000
    } 	ChangeCommitGestureFlags;


EXTERN_C const IID LIBID_TextManagerInternal;

#ifndef __IVsCompoundAction_INTERFACE_DEFINED__
#define __IVsCompoundAction_INTERFACE_DEFINED__

/* interface IVsCompoundAction */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCompoundAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B414D071-87BA-411A-9780-33FC7D87D882")
    IVsCompoundAction : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OpenCompoundAction( 
            /* [in] */ __RPC__in const WCHAR *pszDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AbortCompoundAction( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseCompoundAction( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FlushEditActions( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCompoundActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCompoundAction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCompoundAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCompoundAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *OpenCompoundAction )( 
            IVsCompoundAction * This,
            /* [in] */ __RPC__in const WCHAR *pszDescription);
        
        HRESULT ( STDMETHODCALLTYPE *AbortCompoundAction )( 
            IVsCompoundAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *CloseCompoundAction )( 
            IVsCompoundAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *FlushEditActions )( 
            IVsCompoundAction * This);
        
        END_INTERFACE
    } IVsCompoundActionVtbl;

    interface IVsCompoundAction
    {
        CONST_VTBL struct IVsCompoundActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCompoundAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCompoundAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCompoundAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCompoundAction_OpenCompoundAction(This,pszDescription)	\
    ( (This)->lpVtbl -> OpenCompoundAction(This,pszDescription) ) 

#define IVsCompoundAction_AbortCompoundAction(This)	\
    ( (This)->lpVtbl -> AbortCompoundAction(This) ) 

#define IVsCompoundAction_CloseCompoundAction(This)	\
    ( (This)->lpVtbl -> CloseCompoundAction(This) ) 

#define IVsCompoundAction_FlushEditActions(This)	\
    ( (This)->lpVtbl -> FlushEditActions(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCompoundAction_INTERFACE_DEFINED__ */


#ifndef __IVsCompoundViewChange_INTERFACE_DEFINED__
#define __IVsCompoundViewChange_INTERFACE_DEFINED__

/* interface IVsCompoundViewChange */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCompoundViewChange;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B5C14FF1-8431-458c-BEBC-34C6925D1976")
    IVsCompoundViewChange : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OpenCompoundViewChange( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseCompoundViewChange( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCompoundViewChangeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCompoundViewChange * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCompoundViewChange * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCompoundViewChange * This);
        
        HRESULT ( STDMETHODCALLTYPE *OpenCompoundViewChange )( 
            IVsCompoundViewChange * This);
        
        HRESULT ( STDMETHODCALLTYPE *CloseCompoundViewChange )( 
            IVsCompoundViewChange * This);
        
        END_INTERFACE
    } IVsCompoundViewChangeVtbl;

    interface IVsCompoundViewChange
    {
        CONST_VTBL struct IVsCompoundViewChangeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCompoundViewChange_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCompoundViewChange_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCompoundViewChange_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCompoundViewChange_OpenCompoundViewChange(This)	\
    ( (This)->lpVtbl -> OpenCompoundViewChange(This) ) 

#define IVsCompoundViewChange_CloseCompoundViewChange(This)	\
    ( (This)->lpVtbl -> CloseCompoundViewChange(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCompoundViewChange_INTERFACE_DEFINED__ */


#ifndef __IVsCompoundActionEvents_INTERFACE_DEFINED__
#define __IVsCompoundActionEvents_INTERFACE_DEFINED__

/* interface IVsCompoundActionEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCompoundActionEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("29B88B8E-BC39-45AE-ACAB-0C670E49BCC2")
    IVsCompoundActionEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnBeforeAction( void) = 0;
        
        virtual void STDMETHODCALLTYPE OnAbortAction( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCompoundActionEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCompoundActionEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCompoundActionEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCompoundActionEvents * This);
        
        void ( STDMETHODCALLTYPE *OnBeforeAction )( 
            IVsCompoundActionEvents * This);
        
        void ( STDMETHODCALLTYPE *OnAbortAction )( 
            IVsCompoundActionEvents * This);
        
        END_INTERFACE
    } IVsCompoundActionEventsVtbl;

    interface IVsCompoundActionEvents
    {
        CONST_VTBL struct IVsCompoundActionEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCompoundActionEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCompoundActionEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCompoundActionEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCompoundActionEvents_OnBeforeAction(This)	\
    ( (This)->lpVtbl -> OnBeforeAction(This) ) 

#define IVsCompoundActionEvents_OnAbortAction(This)	\
    ( (This)->lpVtbl -> OnAbortAction(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCompoundActionEvents_INTERFACE_DEFINED__ */


#ifndef __IVsAction_INTERFACE_DEFINED__
#define __IVsAction_INTERFACE_DEFINED__

/* interface IVsAction */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IVsAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("15D2C32A-0770-4872-BB5F-EC21B0FA2436")
    IVsAction : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CanMerge( 
            /* [in] */ __RPC__in_opt IVsAction *pAction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Merge( 
            /* [in] */ __RPC__in_opt IVsAction *pAction) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsAction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *CanMerge )( 
            IVsAction * This,
            /* [in] */ __RPC__in_opt IVsAction *pAction);
        
        HRESULT ( STDMETHODCALLTYPE *Merge )( 
            IVsAction * This,
            /* [in] */ __RPC__in_opt IVsAction *pAction);
        
        END_INTERFACE
    } IVsActionVtbl;

    interface IVsAction
    {
        CONST_VTBL struct IVsActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsAction_CanMerge(This,pAction)	\
    ( (This)->lpVtbl -> CanMerge(This,pAction) ) 

#define IVsAction_Merge(This,pAction)	\
    ( (This)->lpVtbl -> Merge(This,pAction) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsAction_INTERFACE_DEFINED__ */


#ifndef __IVsTextEditorPropertyCategoryContainer_INTERFACE_DEFINED__
#define __IVsTextEditorPropertyCategoryContainer_INTERFACE_DEFINED__

/* interface IVsTextEditorPropertyCategoryContainer */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextEditorPropertyCategoryContainer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A6078038-D578-4F32-B9B2-C83E1726454D")
    IVsTextEditorPropertyCategoryContainer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPropertyCategory( 
            /* [in] */ __RPC__in REFGUID rguidCategory,
            /* [out] */ __RPC__deref_out_opt IVsTextEditorPropertyContainer **ppProp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextEditorPropertyCategoryContainerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextEditorPropertyCategoryContainer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextEditorPropertyCategoryContainer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextEditorPropertyCategoryContainer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetPropertyCategory )( 
            IVsTextEditorPropertyCategoryContainer * This,
            /* [in] */ __RPC__in REFGUID rguidCategory,
            /* [out] */ __RPC__deref_out_opt IVsTextEditorPropertyContainer **ppProp);
        
        END_INTERFACE
    } IVsTextEditorPropertyCategoryContainerVtbl;

    interface IVsTextEditorPropertyCategoryContainer
    {
        CONST_VTBL struct IVsTextEditorPropertyCategoryContainerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextEditorPropertyCategoryContainer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextEditorPropertyCategoryContainer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextEditorPropertyCategoryContainer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextEditorPropertyCategoryContainer_GetPropertyCategory(This,rguidCategory,ppProp)	\
    ( (This)->lpVtbl -> GetPropertyCategory(This,rguidCategory,ppProp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextEditorPropertyCategoryContainer_INTERFACE_DEFINED__ */


#ifndef __IVsTextEditorPropertyContainer_INTERFACE_DEFINED__
#define __IVsTextEditorPropertyContainer_INTERFACE_DEFINED__

/* interface IVsTextEditorPropertyContainer */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextEditorPropertyContainer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7669CC95-4640-461C-8158-16F65265D77C")
    IVsTextEditorPropertyContainer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ VSEDITPROPID idProp,
            /* [out] */ __RPC__out VARIANT *pvar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperty( 
            /* [in] */ VSEDITPROPID idProp,
            /* [in] */ VARIANT var) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveProperty( 
            /* [in] */ VSEDITPROPID idProp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextEditorPropertyContainerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextEditorPropertyContainer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextEditorPropertyContainer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextEditorPropertyContainer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            IVsTextEditorPropertyContainer * This,
            /* [in] */ VSEDITPROPID idProp,
            /* [out] */ __RPC__out VARIANT *pvar);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            IVsTextEditorPropertyContainer * This,
            /* [in] */ VSEDITPROPID idProp,
            /* [in] */ VARIANT var);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveProperty )( 
            IVsTextEditorPropertyContainer * This,
            /* [in] */ VSEDITPROPID idProp);
        
        END_INTERFACE
    } IVsTextEditorPropertyContainerVtbl;

    interface IVsTextEditorPropertyContainer
    {
        CONST_VTBL struct IVsTextEditorPropertyContainerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextEditorPropertyContainer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextEditorPropertyContainer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextEditorPropertyContainer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextEditorPropertyContainer_GetProperty(This,idProp,pvar)	\
    ( (This)->lpVtbl -> GetProperty(This,idProp,pvar) ) 

#define IVsTextEditorPropertyContainer_SetProperty(This,idProp,var)	\
    ( (This)->lpVtbl -> SetProperty(This,idProp,var) ) 

#define IVsTextEditorPropertyContainer_RemoveProperty(This,idProp)	\
    ( (This)->lpVtbl -> RemoveProperty(This,idProp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextEditorPropertyContainer_INTERFACE_DEFINED__ */


#ifndef __IVsCompletionSet_INTERFACE_DEFINED__
#define __IVsCompletionSet_INTERFACE_DEFINED__

/* interface IVsCompletionSet */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCompletionSet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0EF79249-B0BF-4CD0-A966-C4713546C3A5")
    IVsCompletionSet : public IUnknown
    {
    public:
        virtual DWORD STDMETHODCALLTYPE GetFlags( void) = 0;
        
        virtual long STDMETHODCALLTYPE GetCount( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayText( 
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt const WCHAR **ppszText,
            /* [optional][out] */ __RPC__out long *piGlyph) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetImageList( 
            /* [out] */ __RPC__deref_out_opt HANDLE *phImages) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescriptionText( 
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInitialExtent( 
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piStartCol,
            /* [out] */ __RPC__out long *piEndCol) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBestMatch( 
            /* [in] */ __RPC__in const WCHAR *pszSoFar,
            /* [in] */ long iLength,
            /* [out] */ __RPC__out long *piIndex,
            /* [out] */ __RPC__out DWORD *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnCommit( 
            /* [in] */ __RPC__in const WCHAR *pszSoFar,
            /* [in] */ long iIndex,
            /* [in] */ BOOL fSelected,
            /* [in] */ WCHAR cCommit,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrCompleteWord) = 0;
        
        virtual void STDMETHODCALLTYPE Dismiss( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCompletionSetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCompletionSet * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCompletionSet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCompletionSet * This);
        
        DWORD ( STDMETHODCALLTYPE *GetFlags )( 
            IVsCompletionSet * This);
        
        long ( STDMETHODCALLTYPE *GetCount )( 
            IVsCompletionSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayText )( 
            IVsCompletionSet * This,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt const WCHAR **ppszText,
            /* [optional][out] */ __RPC__out long *piGlyph);
        
        HRESULT ( STDMETHODCALLTYPE *GetImageList )( 
            IVsCompletionSet * This,
            /* [out] */ __RPC__deref_out_opt HANDLE *phImages);
        
        HRESULT ( STDMETHODCALLTYPE *GetDescriptionText )( 
            IVsCompletionSet * This,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        HRESULT ( STDMETHODCALLTYPE *GetInitialExtent )( 
            IVsCompletionSet * This,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piStartCol,
            /* [out] */ __RPC__out long *piEndCol);
        
        HRESULT ( STDMETHODCALLTYPE *GetBestMatch )( 
            IVsCompletionSet * This,
            /* [in] */ __RPC__in const WCHAR *pszSoFar,
            /* [in] */ long iLength,
            /* [out] */ __RPC__out long *piIndex,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *OnCommit )( 
            IVsCompletionSet * This,
            /* [in] */ __RPC__in const WCHAR *pszSoFar,
            /* [in] */ long iIndex,
            /* [in] */ BOOL fSelected,
            /* [in] */ WCHAR cCommit,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrCompleteWord);
        
        void ( STDMETHODCALLTYPE *Dismiss )( 
            IVsCompletionSet * This);
        
        END_INTERFACE
    } IVsCompletionSetVtbl;

    interface IVsCompletionSet
    {
        CONST_VTBL struct IVsCompletionSetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCompletionSet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCompletionSet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCompletionSet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCompletionSet_GetFlags(This)	\
    ( (This)->lpVtbl -> GetFlags(This) ) 

#define IVsCompletionSet_GetCount(This)	\
    ( (This)->lpVtbl -> GetCount(This) ) 

#define IVsCompletionSet_GetDisplayText(This,iIndex,ppszText,piGlyph)	\
    ( (This)->lpVtbl -> GetDisplayText(This,iIndex,ppszText,piGlyph) ) 

#define IVsCompletionSet_GetImageList(This,phImages)	\
    ( (This)->lpVtbl -> GetImageList(This,phImages) ) 

#define IVsCompletionSet_GetDescriptionText(This,iIndex,pbstrDescription)	\
    ( (This)->lpVtbl -> GetDescriptionText(This,iIndex,pbstrDescription) ) 

#define IVsCompletionSet_GetInitialExtent(This,piLine,piStartCol,piEndCol)	\
    ( (This)->lpVtbl -> GetInitialExtent(This,piLine,piStartCol,piEndCol) ) 

#define IVsCompletionSet_GetBestMatch(This,pszSoFar,iLength,piIndex,pdwFlags)	\
    ( (This)->lpVtbl -> GetBestMatch(This,pszSoFar,iLength,piIndex,pdwFlags) ) 

#define IVsCompletionSet_OnCommit(This,pszSoFar,iIndex,fSelected,cCommit,pbstrCompleteWord)	\
    ( (This)->lpVtbl -> OnCommit(This,pszSoFar,iIndex,fSelected,cCommit,pbstrCompleteWord) ) 

#define IVsCompletionSet_Dismiss(This)	\
    ( (This)->lpVtbl -> Dismiss(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCompletionSet_INTERFACE_DEFINED__ */


#ifndef __IVsTipWindow_INTERFACE_DEFINED__
#define __IVsTipWindow_INTERFACE_DEFINED__

/* interface IVsTipWindow */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTipWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("64C7FFC4-B9EE-4599-B130-FF9D890ECFD4")
    IVsTipWindow : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetContextStream( 
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSizePreferences( 
            /* [out] */ __RPC__out const RECT *prcCtxBounds,
            /* [out] */ __RPC__out TIPSIZEDATA *pSizeData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Paint( 
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in const RECT *prc) = 0;
        
        virtual void STDMETHODCALLTYPE Dismiss( void) = 0;
        
        virtual LRESULT STDMETHODCALLTYPE WndProc( 
            /* [in] */ __RPC__in HWND hwnd,
            /* [in] */ UINT iMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTipWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTipWindow * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTipWindow * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTipWindow * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextStream )( 
            IVsTipWindow * This,
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetSizePreferences )( 
            IVsTipWindow * This,
            /* [out] */ __RPC__out const RECT *prcCtxBounds,
            /* [out] */ __RPC__out TIPSIZEDATA *pSizeData);
        
        HRESULT ( STDMETHODCALLTYPE *Paint )( 
            IVsTipWindow * This,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in const RECT *prc);
        
        void ( STDMETHODCALLTYPE *Dismiss )( 
            IVsTipWindow * This);
        
        LRESULT ( STDMETHODCALLTYPE *WndProc )( 
            IVsTipWindow * This,
            /* [in] */ __RPC__in HWND hwnd,
            /* [in] */ UINT iMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam);
        
        END_INTERFACE
    } IVsTipWindowVtbl;

    interface IVsTipWindow
    {
        CONST_VTBL struct IVsTipWindowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTipWindow_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTipWindow_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTipWindow_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTipWindow_GetContextStream(This,piPos,piLength)	\
    ( (This)->lpVtbl -> GetContextStream(This,piPos,piLength) ) 

#define IVsTipWindow_GetSizePreferences(This,prcCtxBounds,pSizeData)	\
    ( (This)->lpVtbl -> GetSizePreferences(This,prcCtxBounds,pSizeData) ) 

#define IVsTipWindow_Paint(This,hdc,prc)	\
    ( (This)->lpVtbl -> Paint(This,hdc,prc) ) 

#define IVsTipWindow_Dismiss(This)	\
    ( (This)->lpVtbl -> Dismiss(This) ) 

#define IVsTipWindow_WndProc(This,hwnd,iMsg,wParam,lParam)	\
    ( (This)->lpVtbl -> WndProc(This,hwnd,iMsg,wParam,lParam) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTipWindow_INTERFACE_DEFINED__ */


#ifndef __IVsMethodTipWindow_INTERFACE_DEFINED__
#define __IVsMethodTipWindow_INTERFACE_DEFINED__

/* interface IVsMethodTipWindow */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsMethodTipWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("794767F6-538A-4CD3-B29E-6C76C79A7C9C")
    IVsMethodTipWindow : public IVsTipWindow
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetMethodData( 
            /* [in] */ __RPC__in_opt IVsMethodData *pMethodData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsMethodTipWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsMethodTipWindow * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsMethodTipWindow * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsMethodTipWindow * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextStream )( 
            IVsMethodTipWindow * This,
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetSizePreferences )( 
            IVsMethodTipWindow * This,
            /* [out] */ __RPC__out const RECT *prcCtxBounds,
            /* [out] */ __RPC__out TIPSIZEDATA *pSizeData);
        
        HRESULT ( STDMETHODCALLTYPE *Paint )( 
            IVsMethodTipWindow * This,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in const RECT *prc);
        
        void ( STDMETHODCALLTYPE *Dismiss )( 
            IVsMethodTipWindow * This);
        
        LRESULT ( STDMETHODCALLTYPE *WndProc )( 
            IVsMethodTipWindow * This,
            /* [in] */ __RPC__in HWND hwnd,
            /* [in] */ UINT iMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam);
        
        HRESULT ( STDMETHODCALLTYPE *SetMethodData )( 
            IVsMethodTipWindow * This,
            /* [in] */ __RPC__in_opt IVsMethodData *pMethodData);
        
        END_INTERFACE
    } IVsMethodTipWindowVtbl;

    interface IVsMethodTipWindow
    {
        CONST_VTBL struct IVsMethodTipWindowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsMethodTipWindow_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsMethodTipWindow_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsMethodTipWindow_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsMethodTipWindow_GetContextStream(This,piPos,piLength)	\
    ( (This)->lpVtbl -> GetContextStream(This,piPos,piLength) ) 

#define IVsMethodTipWindow_GetSizePreferences(This,prcCtxBounds,pSizeData)	\
    ( (This)->lpVtbl -> GetSizePreferences(This,prcCtxBounds,pSizeData) ) 

#define IVsMethodTipWindow_Paint(This,hdc,prc)	\
    ( (This)->lpVtbl -> Paint(This,hdc,prc) ) 

#define IVsMethodTipWindow_Dismiss(This)	\
    ( (This)->lpVtbl -> Dismiss(This) ) 

#define IVsMethodTipWindow_WndProc(This,hwnd,iMsg,wParam,lParam)	\
    ( (This)->lpVtbl -> WndProc(This,hwnd,iMsg,wParam,lParam) ) 


#define IVsMethodTipWindow_SetMethodData(This,pMethodData)	\
    ( (This)->lpVtbl -> SetMethodData(This,pMethodData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsMethodTipWindow_INTERFACE_DEFINED__ */


#ifndef __IVsTextTipWindow_INTERFACE_DEFINED__
#define __IVsTextTipWindow_INTERFACE_DEFINED__

/* interface IVsTextTipWindow */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextTipWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A6ACCB2F-1E0D-458B-A878-D40EB89C1DF4")
    IVsTextTipWindow : public IVsTipWindow
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetTextTipData( 
            /* [in] */ __RPC__in_opt IVsTextTipData *pMethodData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextTipWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextTipWindow * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextTipWindow * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextTipWindow * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextStream )( 
            IVsTextTipWindow * This,
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetSizePreferences )( 
            IVsTextTipWindow * This,
            /* [out] */ __RPC__out const RECT *prcCtxBounds,
            /* [out] */ __RPC__out TIPSIZEDATA *pSizeData);
        
        HRESULT ( STDMETHODCALLTYPE *Paint )( 
            IVsTextTipWindow * This,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in const RECT *prc);
        
        void ( STDMETHODCALLTYPE *Dismiss )( 
            IVsTextTipWindow * This);
        
        LRESULT ( STDMETHODCALLTYPE *WndProc )( 
            IVsTextTipWindow * This,
            /* [in] */ __RPC__in HWND hwnd,
            /* [in] */ UINT iMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam);
        
        HRESULT ( STDMETHODCALLTYPE *SetTextTipData )( 
            IVsTextTipWindow * This,
            /* [in] */ __RPC__in_opt IVsTextTipData *pMethodData);
        
        END_INTERFACE
    } IVsTextTipWindowVtbl;

    interface IVsTextTipWindow
    {
        CONST_VTBL struct IVsTextTipWindowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextTipWindow_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextTipWindow_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextTipWindow_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextTipWindow_GetContextStream(This,piPos,piLength)	\
    ( (This)->lpVtbl -> GetContextStream(This,piPos,piLength) ) 

#define IVsTextTipWindow_GetSizePreferences(This,prcCtxBounds,pSizeData)	\
    ( (This)->lpVtbl -> GetSizePreferences(This,prcCtxBounds,pSizeData) ) 

#define IVsTextTipWindow_Paint(This,hdc,prc)	\
    ( (This)->lpVtbl -> Paint(This,hdc,prc) ) 

#define IVsTextTipWindow_Dismiss(This)	\
    ( (This)->lpVtbl -> Dismiss(This) ) 

#define IVsTextTipWindow_WndProc(This,hwnd,iMsg,wParam,lParam)	\
    ( (This)->lpVtbl -> WndProc(This,hwnd,iMsg,wParam,lParam) ) 


#define IVsTextTipWindow_SetTextTipData(This,pMethodData)	\
    ( (This)->lpVtbl -> SetTextTipData(This,pMethodData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextTipWindow_INTERFACE_DEFINED__ */


#ifndef __IVsMethodData_INTERFACE_DEFINED__
#define __IVsMethodData_INTERFACE_DEFINED__

/* interface IVsMethodData */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsMethodData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("69D2811C-682C-4290-B92E-5DFB823DF24C")
    IVsMethodData : public IUnknown
    {
    public:
        virtual long STDMETHODCALLTYPE GetOverloadCount( void) = 0;
        
        virtual const WCHAR *STDMETHODCALLTYPE GetMethodText( 
            /* [in] */ long iMethod,
            /* [in] */ MethodTextType type) = 0;
        
        virtual long STDMETHODCALLTYPE GetParameterCount( 
            /* [in] */ long iMethod) = 0;
        
        virtual const WCHAR *STDMETHODCALLTYPE GetParameterText( 
            /* [in] */ long iMethod,
            /* [in] */ long iParm,
            /* [in] */ ParameterTextType type) = 0;
        
        virtual long STDMETHODCALLTYPE GetCurrentParameter( 
            /* [in] */ long iMethod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContextStream( 
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLength) = 0;
        
        virtual void STDMETHODCALLTYPE OnDismiss( void) = 0;
        
        virtual long STDMETHODCALLTYPE GetCurMethod( void) = 0;
        
        virtual void STDMETHODCALLTYPE UpdateView( void) = 0;
        
        virtual long STDMETHODCALLTYPE NextMethod( void) = 0;
        
        virtual long STDMETHODCALLTYPE PrevMethod( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsMethodDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsMethodData * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsMethodData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsMethodData * This);
        
        long ( STDMETHODCALLTYPE *GetOverloadCount )( 
            IVsMethodData * This);
        
        const WCHAR *( STDMETHODCALLTYPE *GetMethodText )( 
            IVsMethodData * This,
            /* [in] */ long iMethod,
            /* [in] */ MethodTextType type);
        
        long ( STDMETHODCALLTYPE *GetParameterCount )( 
            IVsMethodData * This,
            /* [in] */ long iMethod);
        
        const WCHAR *( STDMETHODCALLTYPE *GetParameterText )( 
            IVsMethodData * This,
            /* [in] */ long iMethod,
            /* [in] */ long iParm,
            /* [in] */ ParameterTextType type);
        
        long ( STDMETHODCALLTYPE *GetCurrentParameter )( 
            IVsMethodData * This,
            /* [in] */ long iMethod);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextStream )( 
            IVsMethodData * This,
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLength);
        
        void ( STDMETHODCALLTYPE *OnDismiss )( 
            IVsMethodData * This);
        
        long ( STDMETHODCALLTYPE *GetCurMethod )( 
            IVsMethodData * This);
        
        void ( STDMETHODCALLTYPE *UpdateView )( 
            IVsMethodData * This);
        
        long ( STDMETHODCALLTYPE *NextMethod )( 
            IVsMethodData * This);
        
        long ( STDMETHODCALLTYPE *PrevMethod )( 
            IVsMethodData * This);
        
        END_INTERFACE
    } IVsMethodDataVtbl;

    interface IVsMethodData
    {
        CONST_VTBL struct IVsMethodDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsMethodData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsMethodData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsMethodData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsMethodData_GetOverloadCount(This)	\
    ( (This)->lpVtbl -> GetOverloadCount(This) ) 

#define IVsMethodData_GetMethodText(This,iMethod,type)	\
    ( (This)->lpVtbl -> GetMethodText(This,iMethod,type) ) 

#define IVsMethodData_GetParameterCount(This,iMethod)	\
    ( (This)->lpVtbl -> GetParameterCount(This,iMethod) ) 

#define IVsMethodData_GetParameterText(This,iMethod,iParm,type)	\
    ( (This)->lpVtbl -> GetParameterText(This,iMethod,iParm,type) ) 

#define IVsMethodData_GetCurrentParameter(This,iMethod)	\
    ( (This)->lpVtbl -> GetCurrentParameter(This,iMethod) ) 

#define IVsMethodData_GetContextStream(This,piPos,piLength)	\
    ( (This)->lpVtbl -> GetContextStream(This,piPos,piLength) ) 

#define IVsMethodData_OnDismiss(This)	\
    ( (This)->lpVtbl -> OnDismiss(This) ) 

#define IVsMethodData_GetCurMethod(This)	\
    ( (This)->lpVtbl -> GetCurMethod(This) ) 

#define IVsMethodData_UpdateView(This)	\
    ( (This)->lpVtbl -> UpdateView(This) ) 

#define IVsMethodData_NextMethod(This)	\
    ( (This)->lpVtbl -> NextMethod(This) ) 

#define IVsMethodData_PrevMethod(This)	\
    ( (This)->lpVtbl -> PrevMethod(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsMethodData_INTERFACE_DEFINED__ */


#ifndef __IVsTextTipData_INTERFACE_DEFINED__
#define __IVsTextTipData_INTERFACE_DEFINED__

/* interface IVsTextTipData */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextTipData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("90609097-17C8-40E8-8128-67194C7384B1")
    IVsTextTipData : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTipText( 
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out BOOL *pfGetFontInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTipFontInfo( 
            /* [in] */ long cChars,
            /* [size_is][out] */ __RPC__out_ecount_full(cChars) ULONG *pdwFontAttr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContextStream( 
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLength) = 0;
        
        virtual void STDMETHODCALLTYPE OnDismiss( void) = 0;
        
        virtual void STDMETHODCALLTYPE UpdateView( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextTipDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextTipData * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextTipData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextTipData * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTipText )( 
            IVsTextTipData * This,
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out BOOL *pfGetFontInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTipFontInfo )( 
            IVsTextTipData * This,
            /* [in] */ long cChars,
            /* [size_is][out] */ __RPC__out_ecount_full(cChars) ULONG *pdwFontAttr);
        
        HRESULT ( STDMETHODCALLTYPE *GetContextStream )( 
            IVsTextTipData * This,
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLength);
        
        void ( STDMETHODCALLTYPE *OnDismiss )( 
            IVsTextTipData * This);
        
        void ( STDMETHODCALLTYPE *UpdateView )( 
            IVsTextTipData * This);
        
        END_INTERFACE
    } IVsTextTipDataVtbl;

    interface IVsTextTipData
    {
        CONST_VTBL struct IVsTextTipDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextTipData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextTipData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextTipData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextTipData_GetTipText(This,pbstrText,pfGetFontInfo)	\
    ( (This)->lpVtbl -> GetTipText(This,pbstrText,pfGetFontInfo) ) 

#define IVsTextTipData_GetTipFontInfo(This,cChars,pdwFontAttr)	\
    ( (This)->lpVtbl -> GetTipFontInfo(This,cChars,pdwFontAttr) ) 

#define IVsTextTipData_GetContextStream(This,piPos,piLength)	\
    ( (This)->lpVtbl -> GetContextStream(This,piPos,piLength) ) 

#define IVsTextTipData_OnDismiss(This)	\
    ( (This)->lpVtbl -> OnDismiss(This) ) 

#define IVsTextTipData_UpdateView(This)	\
    ( (This)->lpVtbl -> UpdateView(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextTipData_INTERFACE_DEFINED__ */


#ifndef __IVsTextView_INTERFACE_DEFINED__
#define __IVsTextView_INTERFACE_DEFINED__

/* interface IVsTextView */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BB23A14B-7C61-469A-9890-A95648CED5E6")
    IVsTextView : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in HWND hwndParent,
            /* [in] */ DWORD InitFlags,
            /* [in] */ __RPC__in const INITVIEW *pInitView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseView( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCaretPos( 
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out ViewCol *piColumn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCaretPos( 
            /* [in] */ long iLine,
            /* [in] */ ViewCol iColumn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectionSpan( 
            /* [out] */ __RPC__out TextSpan *pSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelection( 
            /* [out] */ __RPC__out long *piAnchorLine,
            /* [out] */ __RPC__out ViewCol *piAnchorCol,
            /* [out] */ __RPC__out long *piEndLine,
            /* [out] */ __RPC__out ViewCol *piEndCol) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSelection( 
            /* [in] */ long iAnchorLine,
            /* [in] */ ViewCol iAnchorCol,
            /* [in] */ long iEndLine,
            /* [in] */ ViewCol iEndCol) = 0;
        
        virtual TextSelMode STDMETHODCALLTYPE GetSelectionMode( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSelectionMode( 
            /* [in] */ TextSelMode iSelMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ClearSelection( 
            /* [in] */ BOOL fMoveToAnchor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CenterLines( 
            /* [in] */ long iTopLine,
            /* [in] */ long iCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectedText( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectionDataObject( 
            /* [out] */ __RPC__deref_out_opt IDataObject **ppIDataObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTextStream( 
            /* [in] */ long iTopLine,
            /* [in] */ ViewCol iTopCol,
            /* [in] */ long iBottomLine,
            /* [in] */ ViewCol iBottomCol,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBuffer( 
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBuffer( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer) = 0;
        
        virtual HWND STDMETHODCALLTYPE GetWindowHandle( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetScrollInfo( 
            /* [in] */ long iBar,
            /* [out] */ __RPC__out long *piMinUnit,
            /* [out] */ __RPC__out long *piMaxUnit,
            /* [out] */ __RPC__out long *piVisibleUnits,
            /* [out] */ __RPC__out long *piFirstVisibleUnit) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetScrollPosition( 
            /* [in] */ long iBar,
            /* [in] */ long iFirstVisibleUnit) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddCommandFilter( 
            /* [in] */ __RPC__in_opt IOleCommandTarget *pNewCmdTarg,
            /* [out] */ __RPC__deref_out_opt IOleCommandTarget **ppNextCmdTarg) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveCommandFilter( 
            /* [in] */ __RPC__in_opt IOleCommandTarget *pCmdTarg) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateCompletionStatus( 
            /* [in] */ __RPC__in_opt IVsCompletionSet *pCompSet,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateTipWindow( 
            /* [in] */ __RPC__in_opt IVsTipWindow *pTipWindow,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWordExtent( 
            /* [in] */ long iLine,
            /* [in] */ CharIndex iCol,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__out TextSpan *pSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RestrictViewRange( 
            /* [in] */ long iMinLine,
            /* [in] */ long iMaxLine,
            /* [in] */ __RPC__in_opt IVsViewRangeClient *pClient) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceTextOnLine( 
            /* [in] */ long iLine,
            /* [in] */ CharIndex iStartCol,
            /* [in] */ long iCharsToReplace,
            /* [in] */ __RPC__in const WCHAR *pszNewText,
            /* [in] */ long iNewLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineAndColumn( 
            /* [in] */ long iPos,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out CharIndex *piIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNearestPosition( 
            /* [in] */ long iLine,
            /* [in] */ ViewCol iCol,
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piVirtualSpaces) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateViewFrameCaption( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CenterColumns( 
            /* [in] */ long iLine,
            /* [in] */ ViewCol iLeftCol,
            /* [in] */ long iColCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnsureSpanVisible( 
            /* [in] */ TextSpan span) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PositionCaretForEditing( 
            /* [in] */ long iLine,
            /* [in] */ long cIndentLevels) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPointOfLineColumn( 
            /* [in] */ long iLine,
            /* [in] */ ViewCol iCol,
            /* [retval][out] */ __RPC__out POINT *ppt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineHeight( 
            /* [retval][out] */ __RPC__out long *piLineHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HighlightMatchingBrace( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ ULONG cSpans,
            /* [size_is][in] */ __RPC__in_ecount_full(cSpans) TextSpan *rgBaseSpans) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SendExplicitFocus( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTopLine( 
            /* [in] */ long iBaseLine) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextView * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextView * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IVsTextView * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in HWND hwndParent,
            /* [in] */ DWORD InitFlags,
            /* [in] */ __RPC__in const INITVIEW *pInitView);
        
        HRESULT ( STDMETHODCALLTYPE *CloseView )( 
            IVsTextView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCaretPos )( 
            IVsTextView * This,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out ViewCol *piColumn);
        
        HRESULT ( STDMETHODCALLTYPE *SetCaretPos )( 
            IVsTextView * This,
            /* [in] */ long iLine,
            /* [in] */ ViewCol iColumn);
        
        HRESULT ( STDMETHODCALLTYPE *GetSelectionSpan )( 
            IVsTextView * This,
            /* [out] */ __RPC__out TextSpan *pSpan);
        
        HRESULT ( STDMETHODCALLTYPE *GetSelection )( 
            IVsTextView * This,
            /* [out] */ __RPC__out long *piAnchorLine,
            /* [out] */ __RPC__out ViewCol *piAnchorCol,
            /* [out] */ __RPC__out long *piEndLine,
            /* [out] */ __RPC__out ViewCol *piEndCol);
        
        HRESULT ( STDMETHODCALLTYPE *SetSelection )( 
            IVsTextView * This,
            /* [in] */ long iAnchorLine,
            /* [in] */ ViewCol iAnchorCol,
            /* [in] */ long iEndLine,
            /* [in] */ ViewCol iEndCol);
        
        TextSelMode ( STDMETHODCALLTYPE *GetSelectionMode )( 
            IVsTextView * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetSelectionMode )( 
            IVsTextView * This,
            /* [in] */ TextSelMode iSelMode);
        
        HRESULT ( STDMETHODCALLTYPE *ClearSelection )( 
            IVsTextView * This,
            /* [in] */ BOOL fMoveToAnchor);
        
        HRESULT ( STDMETHODCALLTYPE *CenterLines )( 
            IVsTextView * This,
            /* [in] */ long iTopLine,
            /* [in] */ long iCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetSelectedText )( 
            IVsTextView * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *GetSelectionDataObject )( 
            IVsTextView * This,
            /* [out] */ __RPC__deref_out_opt IDataObject **ppIDataObject);
        
        HRESULT ( STDMETHODCALLTYPE *GetTextStream )( 
            IVsTextView * This,
            /* [in] */ long iTopLine,
            /* [in] */ ViewCol iTopCol,
            /* [in] */ long iBottomLine,
            /* [in] */ ViewCol iBottomCol,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( 
            IVsTextView * This,
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *SetBuffer )( 
            IVsTextView * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer);
        
        HWND ( STDMETHODCALLTYPE *GetWindowHandle )( 
            IVsTextView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetScrollInfo )( 
            IVsTextView * This,
            /* [in] */ long iBar,
            /* [out] */ __RPC__out long *piMinUnit,
            /* [out] */ __RPC__out long *piMaxUnit,
            /* [out] */ __RPC__out long *piVisibleUnits,
            /* [out] */ __RPC__out long *piFirstVisibleUnit);
        
        HRESULT ( STDMETHODCALLTYPE *SetScrollPosition )( 
            IVsTextView * This,
            /* [in] */ long iBar,
            /* [in] */ long iFirstVisibleUnit);
        
        HRESULT ( STDMETHODCALLTYPE *AddCommandFilter )( 
            IVsTextView * This,
            /* [in] */ __RPC__in_opt IOleCommandTarget *pNewCmdTarg,
            /* [out] */ __RPC__deref_out_opt IOleCommandTarget **ppNextCmdTarg);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveCommandFilter )( 
            IVsTextView * This,
            /* [in] */ __RPC__in_opt IOleCommandTarget *pCmdTarg);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateCompletionStatus )( 
            IVsTextView * This,
            /* [in] */ __RPC__in_opt IVsCompletionSet *pCompSet,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateTipWindow )( 
            IVsTextView * This,
            /* [in] */ __RPC__in_opt IVsTipWindow *pTipWindow,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetWordExtent )( 
            IVsTextView * This,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iCol,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__out TextSpan *pSpan);
        
        HRESULT ( STDMETHODCALLTYPE *RestrictViewRange )( 
            IVsTextView * This,
            /* [in] */ long iMinLine,
            /* [in] */ long iMaxLine,
            /* [in] */ __RPC__in_opt IVsViewRangeClient *pClient);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceTextOnLine )( 
            IVsTextView * This,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iStartCol,
            /* [in] */ long iCharsToReplace,
            /* [in] */ __RPC__in const WCHAR *pszNewText,
            /* [in] */ long iNewLen);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineAndColumn )( 
            IVsTextView * This,
            /* [in] */ long iPos,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out CharIndex *piIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetNearestPosition )( 
            IVsTextView * This,
            /* [in] */ long iLine,
            /* [in] */ ViewCol iCol,
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piVirtualSpaces);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateViewFrameCaption )( 
            IVsTextView * This);
        
        HRESULT ( STDMETHODCALLTYPE *CenterColumns )( 
            IVsTextView * This,
            /* [in] */ long iLine,
            /* [in] */ ViewCol iLeftCol,
            /* [in] */ long iColCount);
        
        HRESULT ( STDMETHODCALLTYPE *EnsureSpanVisible )( 
            IVsTextView * This,
            /* [in] */ TextSpan span);
        
        HRESULT ( STDMETHODCALLTYPE *PositionCaretForEditing )( 
            IVsTextView * This,
            /* [in] */ long iLine,
            /* [in] */ long cIndentLevels);
        
        HRESULT ( STDMETHODCALLTYPE *GetPointOfLineColumn )( 
            IVsTextView * This,
            /* [in] */ long iLine,
            /* [in] */ ViewCol iCol,
            /* [retval][out] */ __RPC__out POINT *ppt);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineHeight )( 
            IVsTextView * This,
            /* [retval][out] */ __RPC__out long *piLineHeight);
        
        HRESULT ( STDMETHODCALLTYPE *HighlightMatchingBrace )( 
            IVsTextView * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ ULONG cSpans,
            /* [size_is][in] */ __RPC__in_ecount_full(cSpans) TextSpan *rgBaseSpans);
        
        HRESULT ( STDMETHODCALLTYPE *SendExplicitFocus )( 
            IVsTextView * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetTopLine )( 
            IVsTextView * This,
            /* [in] */ long iBaseLine);
        
        END_INTERFACE
    } IVsTextViewVtbl;

    interface IVsTextView
    {
        CONST_VTBL struct IVsTextViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextView_Initialize(This,pBuffer,hwndParent,InitFlags,pInitView)	\
    ( (This)->lpVtbl -> Initialize(This,pBuffer,hwndParent,InitFlags,pInitView) ) 

#define IVsTextView_CloseView(This)	\
    ( (This)->lpVtbl -> CloseView(This) ) 

#define IVsTextView_GetCaretPos(This,piLine,piColumn)	\
    ( (This)->lpVtbl -> GetCaretPos(This,piLine,piColumn) ) 

#define IVsTextView_SetCaretPos(This,iLine,iColumn)	\
    ( (This)->lpVtbl -> SetCaretPos(This,iLine,iColumn) ) 

#define IVsTextView_GetSelectionSpan(This,pSpan)	\
    ( (This)->lpVtbl -> GetSelectionSpan(This,pSpan) ) 

#define IVsTextView_GetSelection(This,piAnchorLine,piAnchorCol,piEndLine,piEndCol)	\
    ( (This)->lpVtbl -> GetSelection(This,piAnchorLine,piAnchorCol,piEndLine,piEndCol) ) 

#define IVsTextView_SetSelection(This,iAnchorLine,iAnchorCol,iEndLine,iEndCol)	\
    ( (This)->lpVtbl -> SetSelection(This,iAnchorLine,iAnchorCol,iEndLine,iEndCol) ) 

#define IVsTextView_GetSelectionMode(This)	\
    ( (This)->lpVtbl -> GetSelectionMode(This) ) 

#define IVsTextView_SetSelectionMode(This,iSelMode)	\
    ( (This)->lpVtbl -> SetSelectionMode(This,iSelMode) ) 

#define IVsTextView_ClearSelection(This,fMoveToAnchor)	\
    ( (This)->lpVtbl -> ClearSelection(This,fMoveToAnchor) ) 

#define IVsTextView_CenterLines(This,iTopLine,iCount)	\
    ( (This)->lpVtbl -> CenterLines(This,iTopLine,iCount) ) 

#define IVsTextView_GetSelectedText(This,pbstrText)	\
    ( (This)->lpVtbl -> GetSelectedText(This,pbstrText) ) 

#define IVsTextView_GetSelectionDataObject(This,ppIDataObject)	\
    ( (This)->lpVtbl -> GetSelectionDataObject(This,ppIDataObject) ) 

#define IVsTextView_GetTextStream(This,iTopLine,iTopCol,iBottomLine,iBottomCol,pbstrText)	\
    ( (This)->lpVtbl -> GetTextStream(This,iTopLine,iTopCol,iBottomLine,iBottomCol,pbstrText) ) 

#define IVsTextView_GetBuffer(This,ppBuffer)	\
    ( (This)->lpVtbl -> GetBuffer(This,ppBuffer) ) 

#define IVsTextView_SetBuffer(This,pBuffer)	\
    ( (This)->lpVtbl -> SetBuffer(This,pBuffer) ) 

#define IVsTextView_GetWindowHandle(This)	\
    ( (This)->lpVtbl -> GetWindowHandle(This) ) 

#define IVsTextView_GetScrollInfo(This,iBar,piMinUnit,piMaxUnit,piVisibleUnits,piFirstVisibleUnit)	\
    ( (This)->lpVtbl -> GetScrollInfo(This,iBar,piMinUnit,piMaxUnit,piVisibleUnits,piFirstVisibleUnit) ) 

#define IVsTextView_SetScrollPosition(This,iBar,iFirstVisibleUnit)	\
    ( (This)->lpVtbl -> SetScrollPosition(This,iBar,iFirstVisibleUnit) ) 

#define IVsTextView_AddCommandFilter(This,pNewCmdTarg,ppNextCmdTarg)	\
    ( (This)->lpVtbl -> AddCommandFilter(This,pNewCmdTarg,ppNextCmdTarg) ) 

#define IVsTextView_RemoveCommandFilter(This,pCmdTarg)	\
    ( (This)->lpVtbl -> RemoveCommandFilter(This,pCmdTarg) ) 

#define IVsTextView_UpdateCompletionStatus(This,pCompSet,dwFlags)	\
    ( (This)->lpVtbl -> UpdateCompletionStatus(This,pCompSet,dwFlags) ) 

#define IVsTextView_UpdateTipWindow(This,pTipWindow,dwFlags)	\
    ( (This)->lpVtbl -> UpdateTipWindow(This,pTipWindow,dwFlags) ) 

#define IVsTextView_GetWordExtent(This,iLine,iCol,dwFlags,pSpan)	\
    ( (This)->lpVtbl -> GetWordExtent(This,iLine,iCol,dwFlags,pSpan) ) 

#define IVsTextView_RestrictViewRange(This,iMinLine,iMaxLine,pClient)	\
    ( (This)->lpVtbl -> RestrictViewRange(This,iMinLine,iMaxLine,pClient) ) 

#define IVsTextView_ReplaceTextOnLine(This,iLine,iStartCol,iCharsToReplace,pszNewText,iNewLen)	\
    ( (This)->lpVtbl -> ReplaceTextOnLine(This,iLine,iStartCol,iCharsToReplace,pszNewText,iNewLen) ) 

#define IVsTextView_GetLineAndColumn(This,iPos,piLine,piIndex)	\
    ( (This)->lpVtbl -> GetLineAndColumn(This,iPos,piLine,piIndex) ) 

#define IVsTextView_GetNearestPosition(This,iLine,iCol,piPos,piVirtualSpaces)	\
    ( (This)->lpVtbl -> GetNearestPosition(This,iLine,iCol,piPos,piVirtualSpaces) ) 

#define IVsTextView_UpdateViewFrameCaption(This)	\
    ( (This)->lpVtbl -> UpdateViewFrameCaption(This) ) 

#define IVsTextView_CenterColumns(This,iLine,iLeftCol,iColCount)	\
    ( (This)->lpVtbl -> CenterColumns(This,iLine,iLeftCol,iColCount) ) 

#define IVsTextView_EnsureSpanVisible(This,span)	\
    ( (This)->lpVtbl -> EnsureSpanVisible(This,span) ) 

#define IVsTextView_PositionCaretForEditing(This,iLine,cIndentLevels)	\
    ( (This)->lpVtbl -> PositionCaretForEditing(This,iLine,cIndentLevels) ) 

#define IVsTextView_GetPointOfLineColumn(This,iLine,iCol,ppt)	\
    ( (This)->lpVtbl -> GetPointOfLineColumn(This,iLine,iCol,ppt) ) 

#define IVsTextView_GetLineHeight(This,piLineHeight)	\
    ( (This)->lpVtbl -> GetLineHeight(This,piLineHeight) ) 

#define IVsTextView_HighlightMatchingBrace(This,dwFlags,cSpans,rgBaseSpans)	\
    ( (This)->lpVtbl -> HighlightMatchingBrace(This,dwFlags,cSpans,rgBaseSpans) ) 

#define IVsTextView_SendExplicitFocus(This)	\
    ( (This)->lpVtbl -> SendExplicitFocus(This) ) 

#define IVsTextView_SetTopLine(This,iBaseLine)	\
    ( (This)->lpVtbl -> SetTopLine(This,iBaseLine) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextView_INTERFACE_DEFINED__ */


#ifndef __IVsThreadSafeTextView_INTERFACE_DEFINED__
#define __IVsThreadSafeTextView_INTERFACE_DEFINED__

/* interface IVsThreadSafeTextView */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsThreadSafeTextView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FEC3BF2A-7833-4777-AE74-5FFF86D6794E")
    IVsThreadSafeTextView : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ThreadSafeSetCaretPos( 
            /* [in] */ long iLine,
            /* [in] */ ViewCol iColumn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsThreadSafeTextViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsThreadSafeTextView * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsThreadSafeTextView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsThreadSafeTextView * This);
        
        HRESULT ( STDMETHODCALLTYPE *ThreadSafeSetCaretPos )( 
            IVsThreadSafeTextView * This,
            /* [in] */ long iLine,
            /* [in] */ ViewCol iColumn);
        
        END_INTERFACE
    } IVsThreadSafeTextViewVtbl;

    interface IVsThreadSafeTextView
    {
        CONST_VTBL struct IVsThreadSafeTextViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsThreadSafeTextView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsThreadSafeTextView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsThreadSafeTextView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsThreadSafeTextView_ThreadSafeSetCaretPos(This,iLine,iColumn)	\
    ( (This)->lpVtbl -> ThreadSafeSetCaretPos(This,iLine,iColumn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsThreadSafeTextView_INTERFACE_DEFINED__ */


#ifndef __IVsLayeredTextView_INTERFACE_DEFINED__
#define __IVsLayeredTextView_INTERFACE_DEFINED__

/* interface IVsLayeredTextView */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLayeredTextView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("60BD661B-133C-4B5C-A335-4B174C5A352F")
    IVsLayeredTextView : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSelectedAtom( 
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppunkAtom) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRelativeSelectionState( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IVsTextLayer *pReferenceLayer,
            /* [out] */ __RPC__out SELECTIONSTATE *pSelState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRelativeSelectionState( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IVsTextLayer *pReferenceLayer,
            /* [in] */ __RPC__in SELECTIONSTATE *pSelState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTopmostLayer( 
            /* [out] */ __RPC__deref_out_opt IVsTextLayer **ppLayer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLayeredTextViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLayeredTextView * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLayeredTextView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLayeredTextView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetSelectedAtom )( 
            IVsLayeredTextView * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppunkAtom);
        
        HRESULT ( STDMETHODCALLTYPE *GetRelativeSelectionState )( 
            IVsLayeredTextView * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IVsTextLayer *pReferenceLayer,
            /* [out] */ __RPC__out SELECTIONSTATE *pSelState);
        
        HRESULT ( STDMETHODCALLTYPE *SetRelativeSelectionState )( 
            IVsLayeredTextView * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IVsTextLayer *pReferenceLayer,
            /* [in] */ __RPC__in SELECTIONSTATE *pSelState);
        
        HRESULT ( STDMETHODCALLTYPE *GetTopmostLayer )( 
            IVsLayeredTextView * This,
            /* [out] */ __RPC__deref_out_opt IVsTextLayer **ppLayer);
        
        END_INTERFACE
    } IVsLayeredTextViewVtbl;

    interface IVsLayeredTextView
    {
        CONST_VTBL struct IVsLayeredTextViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLayeredTextView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLayeredTextView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLayeredTextView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLayeredTextView_GetSelectedAtom(This,dwFlags,ppunkAtom)	\
    ( (This)->lpVtbl -> GetSelectedAtom(This,dwFlags,ppunkAtom) ) 

#define IVsLayeredTextView_GetRelativeSelectionState(This,dwFlags,pReferenceLayer,pSelState)	\
    ( (This)->lpVtbl -> GetRelativeSelectionState(This,dwFlags,pReferenceLayer,pSelState) ) 

#define IVsLayeredTextView_SetRelativeSelectionState(This,dwFlags,pReferenceLayer,pSelState)	\
    ( (This)->lpVtbl -> SetRelativeSelectionState(This,dwFlags,pReferenceLayer,pSelState) ) 

#define IVsLayeredTextView_GetTopmostLayer(This,ppLayer)	\
    ( (This)->lpVtbl -> GetTopmostLayer(This,ppLayer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLayeredTextView_INTERFACE_DEFINED__ */


#ifndef __IVsTextViewFilter_INTERFACE_DEFINED__
#define __IVsTextViewFilter_INTERFACE_DEFINED__

/* interface IVsTextViewFilter */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextViewFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6B6F0B32-B88B-40F8-A8FE-97438C5BDBEF")
    IVsTextViewFilter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetWordExtent( 
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__out TextSpan *pSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDataTipText( 
            /* [out][in] */ __RPC__inout TextSpan *pSpan,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPairExtents( 
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__out TextSpan *pSpan) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextViewFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextViewFilter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextViewFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextViewFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetWordExtent )( 
            IVsTextViewFilter * This,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__out TextSpan *pSpan);
        
        HRESULT ( STDMETHODCALLTYPE *GetDataTipText )( 
            IVsTextViewFilter * This,
            /* [out][in] */ __RPC__inout TextSpan *pSpan,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *GetPairExtents )( 
            IVsTextViewFilter * This,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__out TextSpan *pSpan);
        
        END_INTERFACE
    } IVsTextViewFilterVtbl;

    interface IVsTextViewFilter
    {
        CONST_VTBL struct IVsTextViewFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextViewFilter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextViewFilter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextViewFilter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextViewFilter_GetWordExtent(This,iLine,iIndex,dwFlags,pSpan)	\
    ( (This)->lpVtbl -> GetWordExtent(This,iLine,iIndex,dwFlags,pSpan) ) 

#define IVsTextViewFilter_GetDataTipText(This,pSpan,pbstrText)	\
    ( (This)->lpVtbl -> GetDataTipText(This,pSpan,pbstrText) ) 

#define IVsTextViewFilter_GetPairExtents(This,iLine,iIndex,pSpan)	\
    ( (This)->lpVtbl -> GetPairExtents(This,iLine,iIndex,pSpan) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextViewFilter_INTERFACE_DEFINED__ */


#ifndef __IVsLanguageContextProvider_INTERFACE_DEFINED__
#define __IVsLanguageContextProvider_INTERFACE_DEFINED__

/* interface IVsLanguageContextProvider */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLanguageContextProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("19404D57-F8E4-42F4-9255-B8F889B0C50C")
    IVsLanguageContextProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE UpdateLanguageContext( 
            DWORD dwHint,
            __RPC__in_opt IVsTextLines *pBuffer,
            __RPC__in TextSpan *ptsSelection,
            __RPC__in_opt IVsUserContext *pUC) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLanguageContextProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLanguageContextProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLanguageContextProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLanguageContextProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateLanguageContext )( 
            IVsLanguageContextProvider * This,
            DWORD dwHint,
            __RPC__in_opt IVsTextLines *pBuffer,
            __RPC__in TextSpan *ptsSelection,
            __RPC__in_opt IVsUserContext *pUC);
        
        END_INTERFACE
    } IVsLanguageContextProviderVtbl;

    interface IVsLanguageContextProvider
    {
        CONST_VTBL struct IVsLanguageContextProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLanguageContextProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLanguageContextProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLanguageContextProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLanguageContextProvider_UpdateLanguageContext(This,dwHint,pBuffer,ptsSelection,pUC)	\
    ( (This)->lpVtbl -> UpdateLanguageContext(This,dwHint,pBuffer,ptsSelection,pUC) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLanguageContextProvider_INTERFACE_DEFINED__ */


#ifndef __IVsTextMarkerContextProvider_INTERFACE_DEFINED__
#define __IVsTextMarkerContextProvider_INTERFACE_DEFINED__

/* interface IVsTextMarkerContextProvider */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextMarkerContextProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F1671B6B-1090-4DFF-BBFD-133EB428BB6C")
    IVsTextMarkerContextProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE UpdateContextForMarker( 
            DWORD dwReserved,
            __RPC__in_opt IVsUserContext *pUC) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveLastContext( 
            DWORD dwReserved,
            __RPC__in_opt IVsUserContext *pUC) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextMarkerContextProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextMarkerContextProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextMarkerContextProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextMarkerContextProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateContextForMarker )( 
            IVsTextMarkerContextProvider * This,
            DWORD dwReserved,
            __RPC__in_opt IVsUserContext *pUC);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveLastContext )( 
            IVsTextMarkerContextProvider * This,
            DWORD dwReserved,
            __RPC__in_opt IVsUserContext *pUC);
        
        END_INTERFACE
    } IVsTextMarkerContextProviderVtbl;

    interface IVsTextMarkerContextProvider
    {
        CONST_VTBL struct IVsTextMarkerContextProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextMarkerContextProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextMarkerContextProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextMarkerContextProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextMarkerContextProvider_UpdateContextForMarker(This,dwReserved,pUC)	\
    ( (This)->lpVtbl -> UpdateContextForMarker(This,dwReserved,pUC) ) 

#define IVsTextMarkerContextProvider_RemoveLastContext(This,dwReserved,pUC)	\
    ( (This)->lpVtbl -> RemoveLastContext(This,dwReserved,pUC) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextMarkerContextProvider_INTERFACE_DEFINED__ */


#ifndef __IVsViewRangeClient_INTERFACE_DEFINED__
#define __IVsViewRangeClient_INTERFACE_DEFINED__

/* interface IVsViewRangeClient */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsViewRangeClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("30491A5B-A47E-4C9C-8204-18586648A277")
    IVsViewRangeClient : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AdjustViewRange( 
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ TextViewAction action,
            /* [in] */ long iLine,
            /* [in] */ long iCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsViewRangeClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsViewRangeClient * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsViewRangeClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsViewRangeClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *AdjustViewRange )( 
            IVsViewRangeClient * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ TextViewAction action,
            /* [in] */ long iLine,
            /* [in] */ long iCount);
        
        END_INTERFACE
    } IVsViewRangeClientVtbl;

    interface IVsViewRangeClient
    {
        CONST_VTBL struct IVsViewRangeClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsViewRangeClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsViewRangeClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsViewRangeClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsViewRangeClient_AdjustViewRange(This,pView,action,iLine,iCount)	\
    ( (This)->lpVtbl -> AdjustViewRange(This,pView,action,iLine,iCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsViewRangeClient_INTERFACE_DEFINED__ */


#ifndef __IVsTextViewEvents_INTERFACE_DEFINED__
#define __IVsTextViewEvents_INTERFACE_DEFINED__

/* interface IVsTextViewEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextViewEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E1965DA9-E791-49E2-9F9D-ED766D885967")
    IVsTextViewEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnSetFocus( 
            /* [in] */ __RPC__in_opt IVsTextView *pView) = 0;
        
        virtual void STDMETHODCALLTYPE OnKillFocus( 
            /* [in] */ __RPC__in_opt IVsTextView *pView) = 0;
        
        virtual void STDMETHODCALLTYPE OnSetBuffer( 
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer) = 0;
        
        virtual void STDMETHODCALLTYPE OnChangeScrollInfo( 
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ long iBar,
            /* [in] */ long iMinUnit,
            /* [in] */ long iMaxUnits,
            /* [in] */ long iVisibleUnits,
            /* [in] */ long iFirstVisibleUnit) = 0;
        
        virtual void STDMETHODCALLTYPE OnChangeCaretLine( 
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ long iNewLine,
            /* [in] */ long iOldLine) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextViewEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextViewEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextViewEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextViewEvents * This);
        
        void ( STDMETHODCALLTYPE *OnSetFocus )( 
            IVsTextViewEvents * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView);
        
        void ( STDMETHODCALLTYPE *OnKillFocus )( 
            IVsTextViewEvents * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView);
        
        void ( STDMETHODCALLTYPE *OnSetBuffer )( 
            IVsTextViewEvents * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer);
        
        void ( STDMETHODCALLTYPE *OnChangeScrollInfo )( 
            IVsTextViewEvents * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ long iBar,
            /* [in] */ long iMinUnit,
            /* [in] */ long iMaxUnits,
            /* [in] */ long iVisibleUnits,
            /* [in] */ long iFirstVisibleUnit);
        
        void ( STDMETHODCALLTYPE *OnChangeCaretLine )( 
            IVsTextViewEvents * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ long iNewLine,
            /* [in] */ long iOldLine);
        
        END_INTERFACE
    } IVsTextViewEventsVtbl;

    interface IVsTextViewEvents
    {
        CONST_VTBL struct IVsTextViewEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextViewEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextViewEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextViewEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextViewEvents_OnSetFocus(This,pView)	\
    ( (This)->lpVtbl -> OnSetFocus(This,pView) ) 

#define IVsTextViewEvents_OnKillFocus(This,pView)	\
    ( (This)->lpVtbl -> OnKillFocus(This,pView) ) 

#define IVsTextViewEvents_OnSetBuffer(This,pView,pBuffer)	\
    ( (This)->lpVtbl -> OnSetBuffer(This,pView,pBuffer) ) 

#define IVsTextViewEvents_OnChangeScrollInfo(This,pView,iBar,iMinUnit,iMaxUnits,iVisibleUnits,iFirstVisibleUnit)	\
    ( (This)->lpVtbl -> OnChangeScrollInfo(This,pView,iBar,iMinUnit,iMaxUnits,iVisibleUnits,iFirstVisibleUnit) ) 

#define IVsTextViewEvents_OnChangeCaretLine(This,pView,iNewLine,iOldLine)	\
    ( (This)->lpVtbl -> OnChangeCaretLine(This,pView,iNewLine,iOldLine) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextViewEvents_INTERFACE_DEFINED__ */


#ifndef __IVsTextManager_INTERFACE_DEFINED__
#define __IVsTextManager_INTERFACE_DEFINED__

/* interface IVsTextManager */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("909F83E3-B3FC-4BBF-8820-64378744B39B")
    IVsTextManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RegisterView( 
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterView( 
            /* [in] */ __RPC__in_opt IVsTextView *pView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumViews( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [out] */ __RPC__deref_out_opt IVsEnumTextViews **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateSelectionAction( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [out] */ __RPC__deref_out_opt IVsTextSelectionAction **ppAction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MapFilenameToLanguageSID( 
            /* [in] */ __RPC__in const WCHAR *pszFileName,
            /* [out] */ __RPC__out GUID *pguidLangSID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRegisteredMarkerTypeID( 
            /* [in] */ __RPC__in const GUID *pguidMarker,
            /* [out] */ __RPC__out long *piMarkerTypeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMarkerTypeInterface( 
            /* [in] */ long iMarkerTypeID,
            /* [out] */ __RPC__deref_out_opt IVsTextMarkerType **ppMarkerType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMarkerTypeCount( 
            /* [out] */ __RPC__out long *piMarkerTypeCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetActiveView( 
            /* [in] */ BOOL fMustHaveFocus,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [out] */ __RPC__deref_out_opt IVsTextView **ppView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUserPreferences( 
            /* [out] */ __RPC__out VIEWPREFERENCES *pViewPrefs,
            /* [out] */ __RPC__out FRAMEPREFERENCES *pFramePrefs,
            /* [out][in] */ __RPC__inout LANGPREFERENCES *pLangPrefs,
            /* [out][in] */ __RPC__inout FONTCOLORPREFERENCES *pColorPrefs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetUserPreferences( 
            /* [in] */ __RPC__in const VIEWPREFERENCES *pViewPrefs,
            /* [in] */ __RPC__in const FRAMEPREFERENCES *pFramePrefs,
            /* [in] */ __RPC__in const LANGPREFERENCES *pLangPrefs,
            /* [in] */ __RPC__in const FONTCOLORPREFERENCES *pColorPrefs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFileChangeAdvise( 
            /* [in] */ __RPC__in const WCHAR *pszFileName,
            /* [in] */ BOOL fStart) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SuspendFileChangeAdvise( 
            /* [in] */ __RPC__in const WCHAR *pszFileName,
            /* [in] */ BOOL fSuspend) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NavigateToPosition( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ __RPC__in REFGUID guidDocViewType,
            /* [in] */ long iPos,
            /* [in] */ long iLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NavigateToLineAndColumn( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ __RPC__in REFGUID guidDocViewType,
            /* [in] */ long iStartRow,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndRow,
            /* [in] */ CharIndex iEndIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBufferSccStatus( 
            /* [in] */ __RPC__in_opt IVsUserData *pBufData,
            /* [out] */ __RPC__out BOOL *pbNonEditable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterBuffer( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterBuffer( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumBuffers( 
            /* [out] */ __RPC__deref_out_opt IVsEnumTextBuffers **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPerLanguagePreferences( 
            /* [out] */ __RPC__out LANGPREFERENCES *pLangPrefs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPerLanguagePreferences( 
            /* [in] */ __RPC__in const LANGPREFERENCES *pLangPrefs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AttemptToCheckOutBufferFromScc( 
            /* [in] */ __RPC__in_opt IVsUserData *pBufData,
            /* [out] */ __RPC__out BOOL *pfCheckoutSucceeded) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetShortcutManager( 
            /* [out] */ __RPC__deref_out_opt IVsShortcutManager **ppShortcutMgr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterIndependentView( 
            /* [in] */ __RPC__in_opt IUnknown *pUnk,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterIndependentView( 
            /* [in] */ __RPC__in_opt IUnknown *pUnk,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IgnoreNextFileChange( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AdjustFileChangeIgnoreCount( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ BOOL fIgnore) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBufferSccStatus2( 
            /* [in] */ __RPC__in const WCHAR *pszFileName,
            /* [out] */ __RPC__out BOOL *pbNonEditable,
            /* [out] */ __RPC__out int *piStatusFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AttemptToCheckOutBufferFromScc2( 
            /* [in] */ __RPC__in const WCHAR *pszFileName,
            /* [out] */ __RPC__out BOOL *pfCheckoutSucceeded,
            /* [out] */ __RPC__out int *piStatusFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumLanguageServices( 
            /* [out] */ __RPC__deref_out_opt IVsEnumGUID **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumIndependentViews( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [out] */ __RPC__deref_out_opt IVsEnumIndependentViews **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterView )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *UnregisterView )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView);
        
        HRESULT ( STDMETHODCALLTYPE *EnumViews )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [out] */ __RPC__deref_out_opt IVsEnumTextViews **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSelectionAction )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [out] */ __RPC__deref_out_opt IVsTextSelectionAction **ppAction);
        
        HRESULT ( STDMETHODCALLTYPE *MapFilenameToLanguageSID )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in const WCHAR *pszFileName,
            /* [out] */ __RPC__out GUID *pguidLangSID);
        
        HRESULT ( STDMETHODCALLTYPE *GetRegisteredMarkerTypeID )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in const GUID *pguidMarker,
            /* [out] */ __RPC__out long *piMarkerTypeID);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerTypeInterface )( 
            IVsTextManager * This,
            /* [in] */ long iMarkerTypeID,
            /* [out] */ __RPC__deref_out_opt IVsTextMarkerType **ppMarkerType);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerTypeCount )( 
            IVsTextManager * This,
            /* [out] */ __RPC__out long *piMarkerTypeCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetActiveView )( 
            IVsTextManager * This,
            /* [in] */ BOOL fMustHaveFocus,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [out] */ __RPC__deref_out_opt IVsTextView **ppView);
        
        HRESULT ( STDMETHODCALLTYPE *GetUserPreferences )( 
            IVsTextManager * This,
            /* [out] */ __RPC__out VIEWPREFERENCES *pViewPrefs,
            /* [out] */ __RPC__out FRAMEPREFERENCES *pFramePrefs,
            /* [out][in] */ __RPC__inout LANGPREFERENCES *pLangPrefs,
            /* [out][in] */ __RPC__inout FONTCOLORPREFERENCES *pColorPrefs);
        
        HRESULT ( STDMETHODCALLTYPE *SetUserPreferences )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in const VIEWPREFERENCES *pViewPrefs,
            /* [in] */ __RPC__in const FRAMEPREFERENCES *pFramePrefs,
            /* [in] */ __RPC__in const LANGPREFERENCES *pLangPrefs,
            /* [in] */ __RPC__in const FONTCOLORPREFERENCES *pColorPrefs);
        
        HRESULT ( STDMETHODCALLTYPE *SetFileChangeAdvise )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in const WCHAR *pszFileName,
            /* [in] */ BOOL fStart);
        
        HRESULT ( STDMETHODCALLTYPE *SuspendFileChangeAdvise )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in const WCHAR *pszFileName,
            /* [in] */ BOOL fSuspend);
        
        HRESULT ( STDMETHODCALLTYPE *NavigateToPosition )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ __RPC__in REFGUID guidDocViewType,
            /* [in] */ long iPos,
            /* [in] */ long iLen);
        
        HRESULT ( STDMETHODCALLTYPE *NavigateToLineAndColumn )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ __RPC__in REFGUID guidDocViewType,
            /* [in] */ long iStartRow,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndRow,
            /* [in] */ CharIndex iEndIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetBufferSccStatus )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsUserData *pBufData,
            /* [out] */ __RPC__out BOOL *pbNonEditable);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterBuffer )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *UnregisterBuffer )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *EnumBuffers )( 
            IVsTextManager * This,
            /* [out] */ __RPC__deref_out_opt IVsEnumTextBuffers **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetPerLanguagePreferences )( 
            IVsTextManager * This,
            /* [out] */ __RPC__out LANGPREFERENCES *pLangPrefs);
        
        HRESULT ( STDMETHODCALLTYPE *SetPerLanguagePreferences )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in const LANGPREFERENCES *pLangPrefs);
        
        HRESULT ( STDMETHODCALLTYPE *AttemptToCheckOutBufferFromScc )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsUserData *pBufData,
            /* [out] */ __RPC__out BOOL *pfCheckoutSucceeded);
        
        HRESULT ( STDMETHODCALLTYPE *GetShortcutManager )( 
            IVsTextManager * This,
            /* [out] */ __RPC__deref_out_opt IVsShortcutManager **ppShortcutMgr);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterIndependentView )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IUnknown *pUnk,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *UnregisterIndependentView )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IUnknown *pUnk,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *IgnoreNextFileChange )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *AdjustFileChangeIgnoreCount )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ BOOL fIgnore);
        
        HRESULT ( STDMETHODCALLTYPE *GetBufferSccStatus2 )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in const WCHAR *pszFileName,
            /* [out] */ __RPC__out BOOL *pbNonEditable,
            /* [out] */ __RPC__out int *piStatusFlags);
        
        HRESULT ( STDMETHODCALLTYPE *AttemptToCheckOutBufferFromScc2 )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in const WCHAR *pszFileName,
            /* [out] */ __RPC__out BOOL *pfCheckoutSucceeded,
            /* [out] */ __RPC__out int *piStatusFlags);
        
        HRESULT ( STDMETHODCALLTYPE *EnumLanguageServices )( 
            IVsTextManager * This,
            /* [out] */ __RPC__deref_out_opt IVsEnumGUID **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *EnumIndependentViews )( 
            IVsTextManager * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [out] */ __RPC__deref_out_opt IVsEnumIndependentViews **ppEnum);
        
        END_INTERFACE
    } IVsTextManagerVtbl;

    interface IVsTextManager
    {
        CONST_VTBL struct IVsTextManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextManager_RegisterView(This,pView,pBuffer)	\
    ( (This)->lpVtbl -> RegisterView(This,pView,pBuffer) ) 

#define IVsTextManager_UnregisterView(This,pView)	\
    ( (This)->lpVtbl -> UnregisterView(This,pView) ) 

#define IVsTextManager_EnumViews(This,pBuffer,ppEnum)	\
    ( (This)->lpVtbl -> EnumViews(This,pBuffer,ppEnum) ) 

#define IVsTextManager_CreateSelectionAction(This,pBuffer,ppAction)	\
    ( (This)->lpVtbl -> CreateSelectionAction(This,pBuffer,ppAction) ) 

#define IVsTextManager_MapFilenameToLanguageSID(This,pszFileName,pguidLangSID)	\
    ( (This)->lpVtbl -> MapFilenameToLanguageSID(This,pszFileName,pguidLangSID) ) 

#define IVsTextManager_GetRegisteredMarkerTypeID(This,pguidMarker,piMarkerTypeID)	\
    ( (This)->lpVtbl -> GetRegisteredMarkerTypeID(This,pguidMarker,piMarkerTypeID) ) 

#define IVsTextManager_GetMarkerTypeInterface(This,iMarkerTypeID,ppMarkerType)	\
    ( (This)->lpVtbl -> GetMarkerTypeInterface(This,iMarkerTypeID,ppMarkerType) ) 

#define IVsTextManager_GetMarkerTypeCount(This,piMarkerTypeCount)	\
    ( (This)->lpVtbl -> GetMarkerTypeCount(This,piMarkerTypeCount) ) 

#define IVsTextManager_GetActiveView(This,fMustHaveFocus,pBuffer,ppView)	\
    ( (This)->lpVtbl -> GetActiveView(This,fMustHaveFocus,pBuffer,ppView) ) 

#define IVsTextManager_GetUserPreferences(This,pViewPrefs,pFramePrefs,pLangPrefs,pColorPrefs)	\
    ( (This)->lpVtbl -> GetUserPreferences(This,pViewPrefs,pFramePrefs,pLangPrefs,pColorPrefs) ) 

#define IVsTextManager_SetUserPreferences(This,pViewPrefs,pFramePrefs,pLangPrefs,pColorPrefs)	\
    ( (This)->lpVtbl -> SetUserPreferences(This,pViewPrefs,pFramePrefs,pLangPrefs,pColorPrefs) ) 

#define IVsTextManager_SetFileChangeAdvise(This,pszFileName,fStart)	\
    ( (This)->lpVtbl -> SetFileChangeAdvise(This,pszFileName,fStart) ) 

#define IVsTextManager_SuspendFileChangeAdvise(This,pszFileName,fSuspend)	\
    ( (This)->lpVtbl -> SuspendFileChangeAdvise(This,pszFileName,fSuspend) ) 

#define IVsTextManager_NavigateToPosition(This,pBuffer,guidDocViewType,iPos,iLen)	\
    ( (This)->lpVtbl -> NavigateToPosition(This,pBuffer,guidDocViewType,iPos,iLen) ) 

#define IVsTextManager_NavigateToLineAndColumn(This,pBuffer,guidDocViewType,iStartRow,iStartIndex,iEndRow,iEndIndex)	\
    ( (This)->lpVtbl -> NavigateToLineAndColumn(This,pBuffer,guidDocViewType,iStartRow,iStartIndex,iEndRow,iEndIndex) ) 

#define IVsTextManager_GetBufferSccStatus(This,pBufData,pbNonEditable)	\
    ( (This)->lpVtbl -> GetBufferSccStatus(This,pBufData,pbNonEditable) ) 

#define IVsTextManager_RegisterBuffer(This,pBuffer)	\
    ( (This)->lpVtbl -> RegisterBuffer(This,pBuffer) ) 

#define IVsTextManager_UnregisterBuffer(This,pBuffer)	\
    ( (This)->lpVtbl -> UnregisterBuffer(This,pBuffer) ) 

#define IVsTextManager_EnumBuffers(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumBuffers(This,ppEnum) ) 

#define IVsTextManager_GetPerLanguagePreferences(This,pLangPrefs)	\
    ( (This)->lpVtbl -> GetPerLanguagePreferences(This,pLangPrefs) ) 

#define IVsTextManager_SetPerLanguagePreferences(This,pLangPrefs)	\
    ( (This)->lpVtbl -> SetPerLanguagePreferences(This,pLangPrefs) ) 

#define IVsTextManager_AttemptToCheckOutBufferFromScc(This,pBufData,pfCheckoutSucceeded)	\
    ( (This)->lpVtbl -> AttemptToCheckOutBufferFromScc(This,pBufData,pfCheckoutSucceeded) ) 

#define IVsTextManager_GetShortcutManager(This,ppShortcutMgr)	\
    ( (This)->lpVtbl -> GetShortcutManager(This,ppShortcutMgr) ) 

#define IVsTextManager_RegisterIndependentView(This,pUnk,pBuffer)	\
    ( (This)->lpVtbl -> RegisterIndependentView(This,pUnk,pBuffer) ) 

#define IVsTextManager_UnregisterIndependentView(This,pUnk,pBuffer)	\
    ( (This)->lpVtbl -> UnregisterIndependentView(This,pUnk,pBuffer) ) 

#define IVsTextManager_IgnoreNextFileChange(This,pBuffer)	\
    ( (This)->lpVtbl -> IgnoreNextFileChange(This,pBuffer) ) 

#define IVsTextManager_AdjustFileChangeIgnoreCount(This,pBuffer,fIgnore)	\
    ( (This)->lpVtbl -> AdjustFileChangeIgnoreCount(This,pBuffer,fIgnore) ) 

#define IVsTextManager_GetBufferSccStatus2(This,pszFileName,pbNonEditable,piStatusFlags)	\
    ( (This)->lpVtbl -> GetBufferSccStatus2(This,pszFileName,pbNonEditable,piStatusFlags) ) 

#define IVsTextManager_AttemptToCheckOutBufferFromScc2(This,pszFileName,pfCheckoutSucceeded,piStatusFlags)	\
    ( (This)->lpVtbl -> AttemptToCheckOutBufferFromScc2(This,pszFileName,pfCheckoutSucceeded,piStatusFlags) ) 

#define IVsTextManager_EnumLanguageServices(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumLanguageServices(This,ppEnum) ) 

#define IVsTextManager_EnumIndependentViews(This,pBuffer,ppEnum)	\
    ( (This)->lpVtbl -> EnumIndependentViews(This,pBuffer,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextManager_INTERFACE_DEFINED__ */


#ifndef __IVsShortcutManager_INTERFACE_DEFINED__
#define __IVsShortcutManager_INTERFACE_DEFINED__

/* interface IVsShortcutManager */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsShortcutManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("78201465-554E-4A7B-998F-443156FD71D3")
    IVsShortcutManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateItem( 
            /* [in] */ long iShortcutLine,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in LPCOLESTR pszBufMoniker) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveItem( 
            /* [in] */ __RPC__in_opt IVsTextLineMarker *pMarker) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE WriteUserOptions( 
            /* [in] */ __RPC__in_opt IStream *pOptionsStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReadUserOptions( 
            /* [in] */ __RPC__in_opt IStream *pOptionsStream) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsShortcutManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsShortcutManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsShortcutManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsShortcutManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateItem )( 
            IVsShortcutManager * This,
            /* [in] */ long iShortcutLine,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in LPCOLESTR pszBufMoniker);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveItem )( 
            IVsShortcutManager * This,
            /* [in] */ __RPC__in_opt IVsTextLineMarker *pMarker);
        
        HRESULT ( STDMETHODCALLTYPE *WriteUserOptions )( 
            IVsShortcutManager * This,
            /* [in] */ __RPC__in_opt IStream *pOptionsStream);
        
        HRESULT ( STDMETHODCALLTYPE *ReadUserOptions )( 
            IVsShortcutManager * This,
            /* [in] */ __RPC__in_opt IStream *pOptionsStream);
        
        END_INTERFACE
    } IVsShortcutManagerVtbl;

    interface IVsShortcutManager
    {
        CONST_VTBL struct IVsShortcutManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsShortcutManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsShortcutManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsShortcutManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsShortcutManager_CreateItem(This,iShortcutLine,pBuffer,pszBufMoniker)	\
    ( (This)->lpVtbl -> CreateItem(This,iShortcutLine,pBuffer,pszBufMoniker) ) 

#define IVsShortcutManager_RemoveItem(This,pMarker)	\
    ( (This)->lpVtbl -> RemoveItem(This,pMarker) ) 

#define IVsShortcutManager_WriteUserOptions(This,pOptionsStream)	\
    ( (This)->lpVtbl -> WriteUserOptions(This,pOptionsStream) ) 

#define IVsShortcutManager_ReadUserOptions(This,pOptionsStream)	\
    ( (This)->lpVtbl -> ReadUserOptions(This,pOptionsStream) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsShortcutManager_INTERFACE_DEFINED__ */


#ifndef __IVsEnumTextBuffers_INTERFACE_DEFINED__
#define __IVsEnumTextBuffers_INTERFACE_DEFINED__

/* interface IVsEnumTextBuffers */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumTextBuffers;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("74BBEE88-AB6E-4276-9BD2-27F566B8BBAF")
    IVsEnumTextBuffers : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IVsTextBuffer **rgelt,
            __RPC__in ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            __RPC__deref_in_opt IVsEnumTextBuffers **ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumTextBuffersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumTextBuffers * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumTextBuffers * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumTextBuffers * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumTextBuffers * This,
            ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IVsTextBuffer **rgelt,
            __RPC__in ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IVsEnumTextBuffers * This,
            ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumTextBuffers * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IVsEnumTextBuffers * This,
            __RPC__deref_in_opt IVsEnumTextBuffers **ppenum);
        
        END_INTERFACE
    } IVsEnumTextBuffersVtbl;

    interface IVsEnumTextBuffers
    {
        CONST_VTBL struct IVsEnumTextBuffersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumTextBuffers_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumTextBuffers_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumTextBuffers_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumTextBuffers_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IVsEnumTextBuffers_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IVsEnumTextBuffers_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumTextBuffers_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumTextBuffers_INTERFACE_DEFINED__ */


#ifndef __IVsTextManagerEvents_INTERFACE_DEFINED__
#define __IVsTextManagerEvents_INTERFACE_DEFINED__

/* interface IVsTextManagerEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextManagerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B3175059-C6AA-4519-86C3-1FE594D26C35")
    IVsTextManagerEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnRegisterMarkerType( 
            /* [in] */ long iMarkerType) = 0;
        
        virtual void STDMETHODCALLTYPE OnRegisterView( 
            /* [in] */ __RPC__in_opt IVsTextView *pView) = 0;
        
        virtual void STDMETHODCALLTYPE OnUnregisterView( 
            /* [in] */ __RPC__in_opt IVsTextView *pView) = 0;
        
        virtual void STDMETHODCALLTYPE OnUserPreferencesChanged( 
            /* [in] */ __RPC__in const VIEWPREFERENCES *pViewPrefs,
            /* [in] */ __RPC__in const FRAMEPREFERENCES *pFramePrefs,
            /* [in] */ __RPC__in const LANGPREFERENCES *pLangPrefs,
            /* [in] */ __RPC__in const FONTCOLORPREFERENCES *pColorPrefs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextManagerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextManagerEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextManagerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextManagerEvents * This);
        
        void ( STDMETHODCALLTYPE *OnRegisterMarkerType )( 
            IVsTextManagerEvents * This,
            /* [in] */ long iMarkerType);
        
        void ( STDMETHODCALLTYPE *OnRegisterView )( 
            IVsTextManagerEvents * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView);
        
        void ( STDMETHODCALLTYPE *OnUnregisterView )( 
            IVsTextManagerEvents * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView);
        
        void ( STDMETHODCALLTYPE *OnUserPreferencesChanged )( 
            IVsTextManagerEvents * This,
            /* [in] */ __RPC__in const VIEWPREFERENCES *pViewPrefs,
            /* [in] */ __RPC__in const FRAMEPREFERENCES *pFramePrefs,
            /* [in] */ __RPC__in const LANGPREFERENCES *pLangPrefs,
            /* [in] */ __RPC__in const FONTCOLORPREFERENCES *pColorPrefs);
        
        END_INTERFACE
    } IVsTextManagerEventsVtbl;

    interface IVsTextManagerEvents
    {
        CONST_VTBL struct IVsTextManagerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextManagerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextManagerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextManagerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextManagerEvents_OnRegisterMarkerType(This,iMarkerType)	\
    ( (This)->lpVtbl -> OnRegisterMarkerType(This,iMarkerType) ) 

#define IVsTextManagerEvents_OnRegisterView(This,pView)	\
    ( (This)->lpVtbl -> OnRegisterView(This,pView) ) 

#define IVsTextManagerEvents_OnUnregisterView(This,pView)	\
    ( (This)->lpVtbl -> OnUnregisterView(This,pView) ) 

#define IVsTextManagerEvents_OnUserPreferencesChanged(This,pViewPrefs,pFramePrefs,pLangPrefs,pColorPrefs)	\
    ( (This)->lpVtbl -> OnUserPreferencesChanged(This,pViewPrefs,pFramePrefs,pLangPrefs,pColorPrefs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextManagerEvents_INTERFACE_DEFINED__ */


#ifndef __IVsTextSelectionAction_INTERFACE_DEFINED__
#define __IVsTextSelectionAction_INTERFACE_DEFINED__

/* interface IVsTextSelectionAction */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextSelectionAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CB49CF53-CCE9-4493-AD7A-3595F4C1CAF3")
    IVsTextSelectionAction : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetOrigin( 
            /* [out] */ __RPC__out SELECTIONSTATE *pSelState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDestination( 
            /* [out] */ __RPC__out SELECTIONSTATE *pSelState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOrigin( 
            /* [in] */ __RPC__in SELECTIONSTATE *pSelState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDestination( 
            /* [in] */ __RPC__in SELECTIONSTATE *pSelState) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextSelectionActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextSelectionAction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextSelectionAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextSelectionAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetOrigin )( 
            IVsTextSelectionAction * This,
            /* [out] */ __RPC__out SELECTIONSTATE *pSelState);
        
        HRESULT ( STDMETHODCALLTYPE *GetDestination )( 
            IVsTextSelectionAction * This,
            /* [out] */ __RPC__out SELECTIONSTATE *pSelState);
        
        HRESULT ( STDMETHODCALLTYPE *SetOrigin )( 
            IVsTextSelectionAction * This,
            /* [in] */ __RPC__in SELECTIONSTATE *pSelState);
        
        HRESULT ( STDMETHODCALLTYPE *SetDestination )( 
            IVsTextSelectionAction * This,
            /* [in] */ __RPC__in SELECTIONSTATE *pSelState);
        
        END_INTERFACE
    } IVsTextSelectionActionVtbl;

    interface IVsTextSelectionAction
    {
        CONST_VTBL struct IVsTextSelectionActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextSelectionAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextSelectionAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextSelectionAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextSelectionAction_GetOrigin(This,pSelState)	\
    ( (This)->lpVtbl -> GetOrigin(This,pSelState) ) 

#define IVsTextSelectionAction_GetDestination(This,pSelState)	\
    ( (This)->lpVtbl -> GetDestination(This,pSelState) ) 

#define IVsTextSelectionAction_SetOrigin(This,pSelState)	\
    ( (This)->lpVtbl -> SetOrigin(This,pSelState) ) 

#define IVsTextSelectionAction_SetDestination(This,pSelState)	\
    ( (This)->lpVtbl -> SetDestination(This,pSelState) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextSelectionAction_INTERFACE_DEFINED__ */


#ifndef __IVsEnumTextViews_INTERFACE_DEFINED__
#define __IVsEnumTextViews_INTERFACE_DEFINED__

/* interface IVsEnumTextViews */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumTextViews;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DB685578-E6D4-4D5E-B714-FA344A509ABF")
    IVsEnumTextViews : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IVsTextView **rgelt,
            __RPC__in ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            __RPC__in ULONG *pCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumTextViewsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumTextViews * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumTextViews * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumTextViews * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumTextViews * This,
            ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IVsTextView **rgelt,
            __RPC__in ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumTextViews * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsEnumTextViews * This,
            __RPC__in ULONG *pCount);
        
        END_INTERFACE
    } IVsEnumTextViewsVtbl;

    interface IVsEnumTextViews
    {
        CONST_VTBL struct IVsEnumTextViewsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumTextViews_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumTextViews_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumTextViews_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumTextViews_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IVsEnumTextViews_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumTextViews_GetCount(This,pCount)	\
    ( (This)->lpVtbl -> GetCount(This,pCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumTextViews_INTERFACE_DEFINED__ */


#ifndef __IVsEnumIndependentViews_INTERFACE_DEFINED__
#define __IVsEnumIndependentViews_INTERFACE_DEFINED__

/* interface IVsEnumIndependentViews */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumIndependentViews;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B9040F95-DADB-443a-A3C3-1C442F1BDA72")
    IVsEnumIndependentViews : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IUnknown **rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            __RPC__in ULONG *pCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumIndependentViewsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumIndependentViews * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumIndependentViews * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumIndependentViews * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumIndependentViews * This,
            ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IUnknown **rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumIndependentViews * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsEnumIndependentViews * This,
            __RPC__in ULONG *pCount);
        
        END_INTERFACE
    } IVsEnumIndependentViewsVtbl;

    interface IVsEnumIndependentViews
    {
        CONST_VTBL struct IVsEnumIndependentViewsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumIndependentViews_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumIndependentViews_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumIndependentViews_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumIndependentViews_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IVsEnumIndependentViews_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumIndependentViews_GetCount(This,pCount)	\
    ( (This)->lpVtbl -> GetCount(This,pCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumIndependentViews_INTERFACE_DEFINED__ */


#ifndef __IVsColorableItem_INTERFACE_DEFINED__
#define __IVsColorableItem_INTERFACE_DEFINED__

/* interface IVsColorableItem */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsColorableItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("56694A40-78D0-45DD-AB15-681BC207579C")
    IVsColorableItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDefaultColors( 
            /* [out] */ __RPC__out COLORINDEX *piForeground,
            /* [out] */ __RPC__out COLORINDEX *piBackground) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultFontFlags( 
            /* [out] */ __RPC__out DWORD *pdwFontFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsColorableItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsColorableItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsColorableItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsColorableItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultColors )( 
            IVsColorableItem * This,
            /* [out] */ __RPC__out COLORINDEX *piForeground,
            /* [out] */ __RPC__out COLORINDEX *piBackground);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultFontFlags )( 
            IVsColorableItem * This,
            /* [out] */ __RPC__out DWORD *pdwFontFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            IVsColorableItem * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        END_INTERFACE
    } IVsColorableItemVtbl;

    interface IVsColorableItem
    {
        CONST_VTBL struct IVsColorableItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsColorableItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsColorableItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsColorableItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsColorableItem_GetDefaultColors(This,piForeground,piBackground)	\
    ( (This)->lpVtbl -> GetDefaultColors(This,piForeground,piBackground) ) 

#define IVsColorableItem_GetDefaultFontFlags(This,pdwFontFlags)	\
    ( (This)->lpVtbl -> GetDefaultFontFlags(This,pdwFontFlags) ) 

#define IVsColorableItem_GetDisplayName(This,pbstrName)	\
    ( (This)->lpVtbl -> GetDisplayName(This,pbstrName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsColorableItem_INTERFACE_DEFINED__ */


#ifndef __IVsMergeableUIItem_INTERFACE_DEFINED__
#define __IVsMergeableUIItem_INTERFACE_DEFINED__

/* interface IVsMergeableUIItem */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsMergeableUIItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0AE3E015-2900-4DDF-87AF-CC522AE02284")
    IVsMergeableUIItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCanonicalName( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrNonLocalizeName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDisplayName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMergingPriority( 
            /* [out] */ __RPC__out long *piMergingPriority) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescription( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDesc) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsMergeableUIItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsMergeableUIItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsMergeableUIItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsMergeableUIItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCanonicalName )( 
            IVsMergeableUIItem * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrNonLocalizeName);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            IVsMergeableUIItem * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDisplayName);
        
        HRESULT ( STDMETHODCALLTYPE *GetMergingPriority )( 
            IVsMergeableUIItem * This,
            /* [out] */ __RPC__out long *piMergingPriority);
        
        HRESULT ( STDMETHODCALLTYPE *GetDescription )( 
            IVsMergeableUIItem * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDesc);
        
        END_INTERFACE
    } IVsMergeableUIItemVtbl;

    interface IVsMergeableUIItem
    {
        CONST_VTBL struct IVsMergeableUIItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsMergeableUIItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsMergeableUIItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsMergeableUIItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsMergeableUIItem_GetCanonicalName(This,pbstrNonLocalizeName)	\
    ( (This)->lpVtbl -> GetCanonicalName(This,pbstrNonLocalizeName) ) 

#define IVsMergeableUIItem_GetDisplayName(This,pbstrDisplayName)	\
    ( (This)->lpVtbl -> GetDisplayName(This,pbstrDisplayName) ) 

#define IVsMergeableUIItem_GetMergingPriority(This,piMergingPriority)	\
    ( (This)->lpVtbl -> GetMergingPriority(This,piMergingPriority) ) 

#define IVsMergeableUIItem_GetDescription(This,pbstrDesc)	\
    ( (This)->lpVtbl -> GetDescription(This,pbstrDesc) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsMergeableUIItem_INTERFACE_DEFINED__ */


#ifndef __IVsProvideColorableItems_INTERFACE_DEFINED__
#define __IVsProvideColorableItems_INTERFACE_DEFINED__

/* interface IVsProvideColorableItems */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsProvideColorableItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("100B9A33-905C-4312-B2A2-452189F19AB9")
    IVsProvideColorableItems : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetItemCount( 
            /* [out] */ __RPC__out int *piCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetColorableItem( 
            /* [in] */ int iIndex,
            /* [out] */ __RPC__deref_out_opt IVsColorableItem **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsProvideColorableItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsProvideColorableItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsProvideColorableItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsProvideColorableItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemCount )( 
            IVsProvideColorableItems * This,
            /* [out] */ __RPC__out int *piCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetColorableItem )( 
            IVsProvideColorableItems * This,
            /* [in] */ int iIndex,
            /* [out] */ __RPC__deref_out_opt IVsColorableItem **ppItem);
        
        END_INTERFACE
    } IVsProvideColorableItemsVtbl;

    interface IVsProvideColorableItems
    {
        CONST_VTBL struct IVsProvideColorableItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsProvideColorableItems_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsProvideColorableItems_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsProvideColorableItems_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsProvideColorableItems_GetItemCount(This,piCount)	\
    ( (This)->lpVtbl -> GetItemCount(This,piCount) ) 

#define IVsProvideColorableItems_GetColorableItem(This,iIndex,ppItem)	\
    ( (This)->lpVtbl -> GetColorableItem(This,iIndex,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsProvideColorableItems_INTERFACE_DEFINED__ */


#ifndef __IVsColorizer_INTERFACE_DEFINED__
#define __IVsColorizer_INTERFACE_DEFINED__

/* interface IVsColorizer */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsColorizer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6698EF11-FF17-441C-8C5D-BC24A339B37D")
    IVsColorizer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStateMaintenanceFlag( 
            /* [out] */ __RPC__out BOOL *pfFlag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStartState( 
            /* [out] */ __RPC__out long *piStartState) = 0;
        
        virtual long STDMETHODCALLTYPE ColorizeLine( 
            /* [in] */ long iLine,
            /* [in] */ long iLength,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iState,
            /* [out] */ __RPC__out ULONG *pAttributes) = 0;
        
        virtual long STDMETHODCALLTYPE GetStateAtEndOfLine( 
            /* [in] */ long iLine,
            /* [in] */ long iLength,
            /* [in] */ __RPC__in const WCHAR *pText,
            /* [in] */ long iState) = 0;
        
        virtual void STDMETHODCALLTYPE CloseColorizer( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsColorizerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsColorizer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsColorizer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsColorizer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetStateMaintenanceFlag )( 
            IVsColorizer * This,
            /* [out] */ __RPC__out BOOL *pfFlag);
        
        HRESULT ( STDMETHODCALLTYPE *GetStartState )( 
            IVsColorizer * This,
            /* [out] */ __RPC__out long *piStartState);
        
        long ( STDMETHODCALLTYPE *ColorizeLine )( 
            IVsColorizer * This,
            /* [in] */ long iLine,
            /* [in] */ long iLength,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iState,
            /* [out] */ __RPC__out ULONG *pAttributes);
        
        long ( STDMETHODCALLTYPE *GetStateAtEndOfLine )( 
            IVsColorizer * This,
            /* [in] */ long iLine,
            /* [in] */ long iLength,
            /* [in] */ __RPC__in const WCHAR *pText,
            /* [in] */ long iState);
        
        void ( STDMETHODCALLTYPE *CloseColorizer )( 
            IVsColorizer * This);
        
        END_INTERFACE
    } IVsColorizerVtbl;

    interface IVsColorizer
    {
        CONST_VTBL struct IVsColorizerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsColorizer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsColorizer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsColorizer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsColorizer_GetStateMaintenanceFlag(This,pfFlag)	\
    ( (This)->lpVtbl -> GetStateMaintenanceFlag(This,pfFlag) ) 

#define IVsColorizer_GetStartState(This,piStartState)	\
    ( (This)->lpVtbl -> GetStartState(This,piStartState) ) 

#define IVsColorizer_ColorizeLine(This,iLine,iLength,pszText,iState,pAttributes)	\
    ( (This)->lpVtbl -> ColorizeLine(This,iLine,iLength,pszText,iState,pAttributes) ) 

#define IVsColorizer_GetStateAtEndOfLine(This,iLine,iLength,pText,iState)	\
    ( (This)->lpVtbl -> GetStateAtEndOfLine(This,iLine,iLength,pText,iState) ) 

#define IVsColorizer_CloseColorizer(This)	\
    ( (This)->lpVtbl -> CloseColorizer(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsColorizer_INTERFACE_DEFINED__ */


#ifndef __IVsEnumGUID_INTERFACE_DEFINED__
#define __IVsEnumGUID_INTERFACE_DEFINED__

/* interface IVsEnumGUID */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumGUID;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C7A919CC-79C5-43D7-9B1E-B22E459F6557")
    IVsEnumGUID : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) GUID *rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IVsEnumGUID **ppenum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *pceltCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumGUIDVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumGUID * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumGUID * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumGUID * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumGUID * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) GUID *rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IVsEnumGUID * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumGUID * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IVsEnumGUID * This,
            /* [out] */ __RPC__deref_out_opt IVsEnumGUID **ppenum);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsEnumGUID * This,
            /* [out] */ __RPC__out ULONG *pceltCount);
        
        END_INTERFACE
    } IVsEnumGUIDVtbl;

    interface IVsEnumGUID
    {
        CONST_VTBL struct IVsEnumGUIDVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumGUID_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumGUID_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumGUID_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumGUID_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IVsEnumGUID_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IVsEnumGUID_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumGUID_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#define IVsEnumGUID_GetCount(This,pceltCount)	\
    ( (This)->lpVtbl -> GetCount(This,pceltCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumGUID_INTERFACE_DEFINED__ */


#ifndef __IVsLanguageInfo_INTERFACE_DEFINED__
#define __IVsLanguageInfo_INTERFACE_DEFINED__

/* interface IVsLanguageInfo */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLanguageInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("11DDB920-52C7-4237-8610-9FE8BB11656D")
    IVsLanguageInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetLanguageName( 
            /* [out] */ __RPC__deref_out_opt BSTR *bstrName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFileExtensions( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrExtensions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetColorizer( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [out] */ __RPC__deref_out_opt IVsColorizer **ppColorizer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCodeWindowManager( 
            /* [in] */ __RPC__in_opt IVsCodeWindow *pCodeWin,
            /* [out] */ __RPC__deref_out_opt IVsCodeWindowManager **ppCodeWinMgr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLanguageInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLanguageInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLanguageInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLanguageInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguageName )( 
            IVsLanguageInfo * This,
            /* [out] */ __RPC__deref_out_opt BSTR *bstrName);
        
        HRESULT ( STDMETHODCALLTYPE *GetFileExtensions )( 
            IVsLanguageInfo * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrExtensions);
        
        HRESULT ( STDMETHODCALLTYPE *GetColorizer )( 
            IVsLanguageInfo * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [out] */ __RPC__deref_out_opt IVsColorizer **ppColorizer);
        
        HRESULT ( STDMETHODCALLTYPE *GetCodeWindowManager )( 
            IVsLanguageInfo * This,
            /* [in] */ __RPC__in_opt IVsCodeWindow *pCodeWin,
            /* [out] */ __RPC__deref_out_opt IVsCodeWindowManager **ppCodeWinMgr);
        
        END_INTERFACE
    } IVsLanguageInfoVtbl;

    interface IVsLanguageInfo
    {
        CONST_VTBL struct IVsLanguageInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLanguageInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLanguageInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLanguageInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLanguageInfo_GetLanguageName(This,bstrName)	\
    ( (This)->lpVtbl -> GetLanguageName(This,bstrName) ) 

#define IVsLanguageInfo_GetFileExtensions(This,pbstrExtensions)	\
    ( (This)->lpVtbl -> GetFileExtensions(This,pbstrExtensions) ) 

#define IVsLanguageInfo_GetColorizer(This,pBuffer,ppColorizer)	\
    ( (This)->lpVtbl -> GetColorizer(This,pBuffer,ppColorizer) ) 

#define IVsLanguageInfo_GetCodeWindowManager(This,pCodeWin,ppCodeWinMgr)	\
    ( (This)->lpVtbl -> GetCodeWindowManager(This,pCodeWin,ppCodeWinMgr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLanguageInfo_INTERFACE_DEFINED__ */


#ifndef __IVsLanguageBlock_INTERFACE_DEFINED__
#define __IVsLanguageBlock_INTERFACE_DEFINED__

/* interface IVsLanguageBlock */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLanguageBlock;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BA303DF5-6283-4961-A4CE-76D4F0662D11")
    IVsLanguageBlock : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrentBlock( 
            /* [in] */ __RPC__in_opt IVsTextLines *pTextLines,
            /* [in] */ LONG iCurrentLine,
            /* [in] */ LONG iCurrentChar,
            /* [out] */ __RPC__out TextSpan *ptsBlockSpan,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDescription,
            /* [retval][out] */ __RPC__out BOOL *pfBlockAvailable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLanguageBlockVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLanguageBlock * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLanguageBlock * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLanguageBlock * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentBlock )( 
            IVsLanguageBlock * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pTextLines,
            /* [in] */ LONG iCurrentLine,
            /* [in] */ LONG iCurrentChar,
            /* [out] */ __RPC__out TextSpan *ptsBlockSpan,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDescription,
            /* [retval][out] */ __RPC__out BOOL *pfBlockAvailable);
        
        END_INTERFACE
    } IVsLanguageBlockVtbl;

    interface IVsLanguageBlock
    {
        CONST_VTBL struct IVsLanguageBlockVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLanguageBlock_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLanguageBlock_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLanguageBlock_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLanguageBlock_GetCurrentBlock(This,pTextLines,iCurrentLine,iCurrentChar,ptsBlockSpan,pbstrDescription,pfBlockAvailable)	\
    ( (This)->lpVtbl -> GetCurrentBlock(This,pTextLines,iCurrentLine,iCurrentChar,ptsBlockSpan,pbstrDescription,pfBlockAvailable) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLanguageBlock_INTERFACE_DEFINED__ */


#ifndef __IVsEnumBSTR_INTERFACE_DEFINED__
#define __IVsEnumBSTR_INTERFACE_DEFINED__

/* interface IVsEnumBSTR */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumBSTR;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A0A9C2B0-95A3-4819-ADA3-5BD9756BBD36")
    IVsEnumBSTR : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) BSTR *rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IVsEnumBSTR **ppenum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *pceltCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumBSTRVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumBSTR * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumBSTR * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumBSTR * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumBSTR * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) BSTR *rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IVsEnumBSTR * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumBSTR * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IVsEnumBSTR * This,
            /* [out] */ __RPC__deref_out_opt IVsEnumBSTR **ppenum);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsEnumBSTR * This,
            /* [out] */ __RPC__out ULONG *pceltCount);
        
        END_INTERFACE
    } IVsEnumBSTRVtbl;

    interface IVsEnumBSTR
    {
        CONST_VTBL struct IVsEnumBSTRVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumBSTR_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumBSTR_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumBSTR_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumBSTR_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IVsEnumBSTR_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IVsEnumBSTR_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumBSTR_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#define IVsEnumBSTR_GetCount(This,pceltCount)	\
    ( (This)->lpVtbl -> GetCount(This,pceltCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumBSTR_INTERFACE_DEFINED__ */


#ifndef __IVsDebugName_INTERFACE_DEFINED__
#define __IVsDebugName_INTERFACE_DEFINED__

/* interface IVsDebugName */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsDebugName;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0BCE4F72-5889-4733-8605-413C28F5899F")
    IVsDebugName : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetName( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLocation( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrMkDoc,
            /* [out] */ __RPC__out TextSpan *pspanLocation) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsDebugNameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsDebugName * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsDebugName * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsDebugName * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetName )( 
            IVsDebugName * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocation )( 
            IVsDebugName * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrMkDoc,
            /* [out] */ __RPC__out TextSpan *pspanLocation);
        
        END_INTERFACE
    } IVsDebugNameVtbl;

    interface IVsDebugName
    {
        CONST_VTBL struct IVsDebugNameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsDebugName_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsDebugName_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsDebugName_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsDebugName_GetName(This,pbstrName)	\
    ( (This)->lpVtbl -> GetName(This,pbstrName) ) 

#define IVsDebugName_GetLocation(This,pbstrMkDoc,pspanLocation)	\
    ( (This)->lpVtbl -> GetLocation(This,pbstrMkDoc,pspanLocation) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsDebugName_INTERFACE_DEFINED__ */


#ifndef __IVsEnumDebugName_INTERFACE_DEFINED__
#define __IVsEnumDebugName_INTERFACE_DEFINED__

/* interface IVsEnumDebugName */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumDebugName;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9AD7EC03-4157-45B4-A999-403D6DB94578")
    IVsEnumDebugName : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IVsDebugName **rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IVsEnumDebugName **ppenum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *pceltCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumDebugNameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumDebugName * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumDebugName * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumDebugName * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumDebugName * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pceltFetched) IVsDebugName **rgelt,
            /* [out] */ __RPC__out ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IVsEnumDebugName * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumDebugName * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IVsEnumDebugName * This,
            /* [out] */ __RPC__deref_out_opt IVsEnumDebugName **ppenum);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsEnumDebugName * This,
            /* [out] */ __RPC__out ULONG *pceltCount);
        
        END_INTERFACE
    } IVsEnumDebugNameVtbl;

    interface IVsEnumDebugName
    {
        CONST_VTBL struct IVsEnumDebugNameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumDebugName_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumDebugName_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumDebugName_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumDebugName_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IVsEnumDebugName_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IVsEnumDebugName_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumDebugName_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#define IVsEnumDebugName_GetCount(This,pceltCount)	\
    ( (This)->lpVtbl -> GetCount(This,pceltCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumDebugName_INTERFACE_DEFINED__ */


#ifndef __IVsLanguageDebugInfo_INTERFACE_DEFINED__
#define __IVsLanguageDebugInfo_INTERFACE_DEFINED__

/* interface IVsLanguageDebugInfo */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLanguageDebugInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F30A6A07-5340-4C0E-B312-5772558B0E63")
    IVsLanguageDebugInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetProximityExpressions( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [in] */ long cLines,
            /* [out] */ __RPC__deref_out_opt IVsEnumBSTR **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ValidateBreakpointLocation( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [out] */ __RPC__out TextSpan *pCodeSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNameOfLocation( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName,
            /* [out] */ __RPC__out long *piLineOffset) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLocationOfName( 
            /* [in] */ __RPC__in LPCOLESTR pszName,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrMkDoc,
            /* [out] */ __RPC__out TextSpan *pspanLocation) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResolveName( 
            /* [in] */ __RPC__in LPCOLESTR pszName,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsEnumDebugName **ppNames) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLanguageID( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [out] */ __RPC__out GUID *pguidLanguageID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsMappedLocation( 
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLanguageDebugInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLanguageDebugInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLanguageDebugInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLanguageDebugInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetProximityExpressions )( 
            IVsLanguageDebugInfo * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [in] */ long cLines,
            /* [out] */ __RPC__deref_out_opt IVsEnumBSTR **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *ValidateBreakpointLocation )( 
            IVsLanguageDebugInfo * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [out] */ __RPC__out TextSpan *pCodeSpan);
        
        HRESULT ( STDMETHODCALLTYPE *GetNameOfLocation )( 
            IVsLanguageDebugInfo * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName,
            /* [out] */ __RPC__out long *piLineOffset);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocationOfName )( 
            IVsLanguageDebugInfo * This,
            /* [in] */ __RPC__in LPCOLESTR pszName,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrMkDoc,
            /* [out] */ __RPC__out TextSpan *pspanLocation);
        
        HRESULT ( STDMETHODCALLTYPE *ResolveName )( 
            IVsLanguageDebugInfo * This,
            /* [in] */ __RPC__in LPCOLESTR pszName,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsEnumDebugName **ppNames);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguageID )( 
            IVsLanguageDebugInfo * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol,
            /* [out] */ __RPC__out GUID *pguidLanguageID);
        
        HRESULT ( STDMETHODCALLTYPE *IsMappedLocation )( 
            IVsLanguageDebugInfo * This,
            /* [in] */ __RPC__in_opt IVsTextBuffer *pBuffer,
            /* [in] */ long iLine,
            /* [in] */ long iCol);
        
        END_INTERFACE
    } IVsLanguageDebugInfoVtbl;

    interface IVsLanguageDebugInfo
    {
        CONST_VTBL struct IVsLanguageDebugInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLanguageDebugInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLanguageDebugInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLanguageDebugInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLanguageDebugInfo_GetProximityExpressions(This,pBuffer,iLine,iCol,cLines,ppEnum)	\
    ( (This)->lpVtbl -> GetProximityExpressions(This,pBuffer,iLine,iCol,cLines,ppEnum) ) 

#define IVsLanguageDebugInfo_ValidateBreakpointLocation(This,pBuffer,iLine,iCol,pCodeSpan)	\
    ( (This)->lpVtbl -> ValidateBreakpointLocation(This,pBuffer,iLine,iCol,pCodeSpan) ) 

#define IVsLanguageDebugInfo_GetNameOfLocation(This,pBuffer,iLine,iCol,pbstrName,piLineOffset)	\
    ( (This)->lpVtbl -> GetNameOfLocation(This,pBuffer,iLine,iCol,pbstrName,piLineOffset) ) 

#define IVsLanguageDebugInfo_GetLocationOfName(This,pszName,pbstrMkDoc,pspanLocation)	\
    ( (This)->lpVtbl -> GetLocationOfName(This,pszName,pbstrMkDoc,pspanLocation) ) 

#define IVsLanguageDebugInfo_ResolveName(This,pszName,dwFlags,ppNames)	\
    ( (This)->lpVtbl -> ResolveName(This,pszName,dwFlags,ppNames) ) 

#define IVsLanguageDebugInfo_GetLanguageID(This,pBuffer,iLine,iCol,pguidLanguageID)	\
    ( (This)->lpVtbl -> GetLanguageID(This,pBuffer,iLine,iCol,pguidLanguageID) ) 

#define IVsLanguageDebugInfo_IsMappedLocation(This,pBuffer,iLine,iCol)	\
    ( (This)->lpVtbl -> IsMappedLocation(This,pBuffer,iLine,iCol) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLanguageDebugInfo_INTERFACE_DEFINED__ */


#ifndef __IVsTextBufferTempInit_INTERFACE_DEFINED__
#define __IVsTextBufferTempInit_INTERFACE_DEFINED__

/* interface IVsTextBufferTempInit */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextBufferTempInit;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F229A34E-5880-4C20-94C3-717CF4BE1FDA")
    IVsTextBufferTempInit : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InitializeContentEx( 
            /* [in] */ __RPC__in BUFFERINITEX *pInit) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextBufferTempInitVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextBufferTempInit * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextBufferTempInit * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextBufferTempInit * This);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeContentEx )( 
            IVsTextBufferTempInit * This,
            /* [in] */ __RPC__in BUFFERINITEX *pInit);
        
        END_INTERFACE
    } IVsTextBufferTempInitVtbl;

    interface IVsTextBufferTempInit
    {
        CONST_VTBL struct IVsTextBufferTempInitVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextBufferTempInit_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextBufferTempInit_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextBufferTempInit_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextBufferTempInit_InitializeContentEx(This,pInit)	\
    ( (This)->lpVtbl -> InitializeContentEx(This,pInit) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextBufferTempInit_INTERFACE_DEFINED__ */


#ifndef __IVsTextBuffer_INTERFACE_DEFINED__
#define __IVsTextBuffer_INTERFACE_DEFINED__

/* interface IVsTextBuffer */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextBuffer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C08E5275-0D26-4DE9-8892-994024C23750")
    IVsTextBuffer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE LockBuffer( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnlockBuffer( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitializeContent( 
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStateFlags( 
            /* [out] */ __RPC__out DWORD *pdwReadOnlyFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStateFlags( 
            /* [in] */ DWORD dwReadOnlyFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPositionOfLine( 
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPositionOfLineIndex( 
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__out long *piPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineIndexOfPosition( 
            /* [in] */ long iPosition,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out CharIndex *piColumn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLengthOfLine( 
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineCount( 
            /* [out] */ __RPC__out long *piLineCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ __RPC__out long *piLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLanguageServiceID( 
            /* [out] */ __RPC__out GUID *pguidLangService) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLanguageServiceID( 
            /* [in] */ __RPC__in REFGUID guidLangService) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUndoManager( 
            /* [out] */ __RPC__deref_out_opt IOleUndoManager **ppUndoManager) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reserved1( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reserved2( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reserved3( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reserved4( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reload( 
            /* [in] */ BOOL fUndoable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LockBufferEx( 
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnlockBufferEx( 
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLastLineIndex( 
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reserved5( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reserved6( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reserved7( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reserved8( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reserved9( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reserved10( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextBufferVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextBuffer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextBuffer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *LockBuffer )( 
            IVsTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockBuffer )( 
            IVsTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeContent )( 
            IVsTextBuffer * This,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetStateFlags )( 
            IVsTextBuffer * This,
            /* [out] */ __RPC__out DWORD *pdwReadOnlyFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetStateFlags )( 
            IVsTextBuffer * This,
            /* [in] */ DWORD dwReadOnlyFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetPositionOfLine )( 
            IVsTextBuffer * This,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piPosition);
        
        HRESULT ( STDMETHODCALLTYPE *GetPositionOfLineIndex )( 
            IVsTextBuffer * This,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__out long *piPosition);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineIndexOfPosition )( 
            IVsTextBuffer * This,
            /* [in] */ long iPosition,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out CharIndex *piColumn);
        
        HRESULT ( STDMETHODCALLTYPE *GetLengthOfLine )( 
            IVsTextBuffer * This,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineCount )( 
            IVsTextBuffer * This,
            /* [out] */ __RPC__out long *piLineCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IVsTextBuffer * This,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguageServiceID )( 
            IVsTextBuffer * This,
            /* [out] */ __RPC__out GUID *pguidLangService);
        
        HRESULT ( STDMETHODCALLTYPE *SetLanguageServiceID )( 
            IVsTextBuffer * This,
            /* [in] */ __RPC__in REFGUID guidLangService);
        
        HRESULT ( STDMETHODCALLTYPE *GetUndoManager )( 
            IVsTextBuffer * This,
            /* [out] */ __RPC__deref_out_opt IOleUndoManager **ppUndoManager);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved1 )( 
            IVsTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved2 )( 
            IVsTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved3 )( 
            IVsTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved4 )( 
            IVsTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reload )( 
            IVsTextBuffer * This,
            /* [in] */ BOOL fUndoable);
        
        HRESULT ( STDMETHODCALLTYPE *LockBufferEx )( 
            IVsTextBuffer * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockBufferEx )( 
            IVsTextBuffer * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetLastLineIndex )( 
            IVsTextBuffer * This,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piIndex);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved5 )( 
            IVsTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved6 )( 
            IVsTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved7 )( 
            IVsTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved8 )( 
            IVsTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved9 )( 
            IVsTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved10 )( 
            IVsTextBuffer * This);
        
        END_INTERFACE
    } IVsTextBufferVtbl;

    interface IVsTextBuffer
    {
        CONST_VTBL struct IVsTextBufferVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextBuffer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextBuffer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextBuffer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextBuffer_LockBuffer(This)	\
    ( (This)->lpVtbl -> LockBuffer(This) ) 

#define IVsTextBuffer_UnlockBuffer(This)	\
    ( (This)->lpVtbl -> UnlockBuffer(This) ) 

#define IVsTextBuffer_InitializeContent(This,pszText,iLength)	\
    ( (This)->lpVtbl -> InitializeContent(This,pszText,iLength) ) 

#define IVsTextBuffer_GetStateFlags(This,pdwReadOnlyFlags)	\
    ( (This)->lpVtbl -> GetStateFlags(This,pdwReadOnlyFlags) ) 

#define IVsTextBuffer_SetStateFlags(This,dwReadOnlyFlags)	\
    ( (This)->lpVtbl -> SetStateFlags(This,dwReadOnlyFlags) ) 

#define IVsTextBuffer_GetPositionOfLine(This,iLine,piPosition)	\
    ( (This)->lpVtbl -> GetPositionOfLine(This,iLine,piPosition) ) 

#define IVsTextBuffer_GetPositionOfLineIndex(This,iLine,iIndex,piPosition)	\
    ( (This)->lpVtbl -> GetPositionOfLineIndex(This,iLine,iIndex,piPosition) ) 

#define IVsTextBuffer_GetLineIndexOfPosition(This,iPosition,piLine,piColumn)	\
    ( (This)->lpVtbl -> GetLineIndexOfPosition(This,iPosition,piLine,piColumn) ) 

#define IVsTextBuffer_GetLengthOfLine(This,iLine,piLength)	\
    ( (This)->lpVtbl -> GetLengthOfLine(This,iLine,piLength) ) 

#define IVsTextBuffer_GetLineCount(This,piLineCount)	\
    ( (This)->lpVtbl -> GetLineCount(This,piLineCount) ) 

#define IVsTextBuffer_GetSize(This,piLength)	\
    ( (This)->lpVtbl -> GetSize(This,piLength) ) 

#define IVsTextBuffer_GetLanguageServiceID(This,pguidLangService)	\
    ( (This)->lpVtbl -> GetLanguageServiceID(This,pguidLangService) ) 

#define IVsTextBuffer_SetLanguageServiceID(This,guidLangService)	\
    ( (This)->lpVtbl -> SetLanguageServiceID(This,guidLangService) ) 

#define IVsTextBuffer_GetUndoManager(This,ppUndoManager)	\
    ( (This)->lpVtbl -> GetUndoManager(This,ppUndoManager) ) 

#define IVsTextBuffer_Reserved1(This)	\
    ( (This)->lpVtbl -> Reserved1(This) ) 

#define IVsTextBuffer_Reserved2(This)	\
    ( (This)->lpVtbl -> Reserved2(This) ) 

#define IVsTextBuffer_Reserved3(This)	\
    ( (This)->lpVtbl -> Reserved3(This) ) 

#define IVsTextBuffer_Reserved4(This)	\
    ( (This)->lpVtbl -> Reserved4(This) ) 

#define IVsTextBuffer_Reload(This,fUndoable)	\
    ( (This)->lpVtbl -> Reload(This,fUndoable) ) 

#define IVsTextBuffer_LockBufferEx(This,dwFlags)	\
    ( (This)->lpVtbl -> LockBufferEx(This,dwFlags) ) 

#define IVsTextBuffer_UnlockBufferEx(This,dwFlags)	\
    ( (This)->lpVtbl -> UnlockBufferEx(This,dwFlags) ) 

#define IVsTextBuffer_GetLastLineIndex(This,piLine,piIndex)	\
    ( (This)->lpVtbl -> GetLastLineIndex(This,piLine,piIndex) ) 

#define IVsTextBuffer_Reserved5(This)	\
    ( (This)->lpVtbl -> Reserved5(This) ) 

#define IVsTextBuffer_Reserved6(This)	\
    ( (This)->lpVtbl -> Reserved6(This) ) 

#define IVsTextBuffer_Reserved7(This)	\
    ( (This)->lpVtbl -> Reserved7(This) ) 

#define IVsTextBuffer_Reserved8(This)	\
    ( (This)->lpVtbl -> Reserved8(This) ) 

#define IVsTextBuffer_Reserved9(This)	\
    ( (This)->lpVtbl -> Reserved9(This) ) 

#define IVsTextBuffer_Reserved10(This)	\
    ( (This)->lpVtbl -> Reserved10(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextBuffer_INTERFACE_DEFINED__ */


#ifndef __IVsTextLines_INTERFACE_DEFINED__
#define __IVsTextLines_INTERFACE_DEFINED__

/* interface IVsTextLines */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextLines;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ECF3E19D-149C-43AA-80C2-D0A46946DAA3")
    IVsTextLines : public IVsTextBuffer
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMarkerData( 
            /* [in] */ long iTopLine,
            /* [in] */ long iBottomLine,
            /* [out] */ __RPC__out MARKERDATA *pMarkerData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseMarkerData( 
            /* [in] */ __RPC__in MARKERDATA *pMarkerData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineData( 
            /* [in] */ long iLine,
            /* [out] */ __RPC__out LINEDATA *pLineData,
            /* [in] */ __RPC__in MARKERDATA *pMarkerData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseLineData( 
            /* [in] */ __RPC__in LINEDATA *pLineData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineText( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBuf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CopyLineText( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPWSTR pszBuf,
            /* [out][in] */ __RPC__inout long *pcchBuf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceLines( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText,
            /* [in] */ long iNewLen,
            /* [out] */ __RPC__out TextSpan *pChangedSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CanReplaceLines( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ long iNewLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateLineMarker( 
            /* [in] */ long iMarkerType,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in_opt IVsTextMarkerClient *pClient,
            /* [out] */ __RPC__deref_out_opt IVsTextLineMarker **ppMarker) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumMarkers( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ long iMarkerType,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsEnumLineMarkers **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FindMarkerByLineIndex( 
            /* [in] */ long iMarkerType,
            /* [in] */ long iStartingLine,
            /* [in] */ CharIndex iStartingIndex,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsTextLineMarker **ppMarker) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AdviseTextLinesEvents( 
            /* [in] */ __RPC__in_opt IVsTextLinesEvents *pSink,
            /* [out] */ __RPC__out DWORD *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnadviseTextLinesEvents( 
            /* [in] */ DWORD dwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPairExtents( 
            /* [in] */ __RPC__in const TextSpan *pSpanIn,
            /* [out] */ __RPC__out TextSpan *pSpanOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReloadLines( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText,
            /* [in] */ long iNewLen,
            /* [out] */ __RPC__out TextSpan *pChangedSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IVsTextLinesReserved1( 
            /* [in] */ long iLine,
            /* [out] */ __RPC__out LINEDATA *pLineData,
            /* [in] */ BOOL fAttributes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineDataEx( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ long iLine,
            /* [in] */ long iStartIndex,
            /* [in] */ long iEndIndex,
            /* [out] */ __RPC__out LINEDATAEX *pLineData,
            /* [in] */ __RPC__in MARKERDATA *pMarkerData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseLineDataEx( 
            /* [in] */ __RPC__in LINEDATAEX *pLineData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateEditPoint( 
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppEditPoint) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceLinesEx( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText,
            /* [in] */ long iNewLen,
            /* [out] */ __RPC__out TextSpan *pChangedSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateTextPoint( 
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppTextPoint) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextLinesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextLines * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextLines * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *LockBuffer )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockBuffer )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeContent )( 
            IVsTextLines * This,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetStateFlags )( 
            IVsTextLines * This,
            /* [out] */ __RPC__out DWORD *pdwReadOnlyFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetStateFlags )( 
            IVsTextLines * This,
            /* [in] */ DWORD dwReadOnlyFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetPositionOfLine )( 
            IVsTextLines * This,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piPosition);
        
        HRESULT ( STDMETHODCALLTYPE *GetPositionOfLineIndex )( 
            IVsTextLines * This,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__out long *piPosition);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineIndexOfPosition )( 
            IVsTextLines * This,
            /* [in] */ long iPosition,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out CharIndex *piColumn);
        
        HRESULT ( STDMETHODCALLTYPE *GetLengthOfLine )( 
            IVsTextLines * This,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineCount )( 
            IVsTextLines * This,
            /* [out] */ __RPC__out long *piLineCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IVsTextLines * This,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguageServiceID )( 
            IVsTextLines * This,
            /* [out] */ __RPC__out GUID *pguidLangService);
        
        HRESULT ( STDMETHODCALLTYPE *SetLanguageServiceID )( 
            IVsTextLines * This,
            /* [in] */ __RPC__in REFGUID guidLangService);
        
        HRESULT ( STDMETHODCALLTYPE *GetUndoManager )( 
            IVsTextLines * This,
            /* [out] */ __RPC__deref_out_opt IOleUndoManager **ppUndoManager);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved1 )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved2 )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved3 )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved4 )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reload )( 
            IVsTextLines * This,
            /* [in] */ BOOL fUndoable);
        
        HRESULT ( STDMETHODCALLTYPE *LockBufferEx )( 
            IVsTextLines * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockBufferEx )( 
            IVsTextLines * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetLastLineIndex )( 
            IVsTextLines * This,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piIndex);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved5 )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved6 )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved7 )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved8 )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved9 )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved10 )( 
            IVsTextLines * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerData )( 
            IVsTextLines * This,
            /* [in] */ long iTopLine,
            /* [in] */ long iBottomLine,
            /* [out] */ __RPC__out MARKERDATA *pMarkerData);
        
        HRESULT ( STDMETHODCALLTYPE *ReleaseMarkerData )( 
            IVsTextLines * This,
            /* [in] */ __RPC__in MARKERDATA *pMarkerData);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineData )( 
            IVsTextLines * This,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out LINEDATA *pLineData,
            /* [in] */ __RPC__in MARKERDATA *pMarkerData);
        
        HRESULT ( STDMETHODCALLTYPE *ReleaseLineData )( 
            IVsTextLines * This,
            /* [in] */ __RPC__in LINEDATA *pLineData);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineText )( 
            IVsTextLines * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBuf);
        
        HRESULT ( STDMETHODCALLTYPE *CopyLineText )( 
            IVsTextLines * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPWSTR pszBuf,
            /* [out][in] */ __RPC__inout long *pcchBuf);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceLines )( 
            IVsTextLines * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText,
            /* [in] */ long iNewLen,
            /* [out] */ __RPC__out TextSpan *pChangedSpan);
        
        HRESULT ( STDMETHODCALLTYPE *CanReplaceLines )( 
            IVsTextLines * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ long iNewLen);
        
        HRESULT ( STDMETHODCALLTYPE *CreateLineMarker )( 
            IVsTextLines * This,
            /* [in] */ long iMarkerType,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in_opt IVsTextMarkerClient *pClient,
            /* [out] */ __RPC__deref_out_opt IVsTextLineMarker **ppMarker);
        
        HRESULT ( STDMETHODCALLTYPE *EnumMarkers )( 
            IVsTextLines * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ long iMarkerType,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsEnumLineMarkers **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *FindMarkerByLineIndex )( 
            IVsTextLines * This,
            /* [in] */ long iMarkerType,
            /* [in] */ long iStartingLine,
            /* [in] */ CharIndex iStartingIndex,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsTextLineMarker **ppMarker);
        
        HRESULT ( STDMETHODCALLTYPE *AdviseTextLinesEvents )( 
            IVsTextLines * This,
            /* [in] */ __RPC__in_opt IVsTextLinesEvents *pSink,
            /* [out] */ __RPC__out DWORD *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseTextLinesEvents )( 
            IVsTextLines * This,
            /* [in] */ DWORD dwCookie);
        
        HRESULT ( STDMETHODCALLTYPE *GetPairExtents )( 
            IVsTextLines * This,
            /* [in] */ __RPC__in const TextSpan *pSpanIn,
            /* [out] */ __RPC__out TextSpan *pSpanOut);
        
        HRESULT ( STDMETHODCALLTYPE *ReloadLines )( 
            IVsTextLines * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText,
            /* [in] */ long iNewLen,
            /* [out] */ __RPC__out TextSpan *pChangedSpan);
        
        HRESULT ( STDMETHODCALLTYPE *IVsTextLinesReserved1 )( 
            IVsTextLines * This,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out LINEDATA *pLineData,
            /* [in] */ BOOL fAttributes);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineDataEx )( 
            IVsTextLines * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ long iLine,
            /* [in] */ long iStartIndex,
            /* [in] */ long iEndIndex,
            /* [out] */ __RPC__out LINEDATAEX *pLineData,
            /* [in] */ __RPC__in MARKERDATA *pMarkerData);
        
        HRESULT ( STDMETHODCALLTYPE *ReleaseLineDataEx )( 
            IVsTextLines * This,
            /* [in] */ __RPC__in LINEDATAEX *pLineData);
        
        HRESULT ( STDMETHODCALLTYPE *CreateEditPoint )( 
            IVsTextLines * This,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppEditPoint);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceLinesEx )( 
            IVsTextLines * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText,
            /* [in] */ long iNewLen,
            /* [out] */ __RPC__out TextSpan *pChangedSpan);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTextPoint )( 
            IVsTextLines * This,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppTextPoint);
        
        END_INTERFACE
    } IVsTextLinesVtbl;

    interface IVsTextLines
    {
        CONST_VTBL struct IVsTextLinesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextLines_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextLines_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextLines_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextLines_LockBuffer(This)	\
    ( (This)->lpVtbl -> LockBuffer(This) ) 

#define IVsTextLines_UnlockBuffer(This)	\
    ( (This)->lpVtbl -> UnlockBuffer(This) ) 

#define IVsTextLines_InitializeContent(This,pszText,iLength)	\
    ( (This)->lpVtbl -> InitializeContent(This,pszText,iLength) ) 

#define IVsTextLines_GetStateFlags(This,pdwReadOnlyFlags)	\
    ( (This)->lpVtbl -> GetStateFlags(This,pdwReadOnlyFlags) ) 

#define IVsTextLines_SetStateFlags(This,dwReadOnlyFlags)	\
    ( (This)->lpVtbl -> SetStateFlags(This,dwReadOnlyFlags) ) 

#define IVsTextLines_GetPositionOfLine(This,iLine,piPosition)	\
    ( (This)->lpVtbl -> GetPositionOfLine(This,iLine,piPosition) ) 

#define IVsTextLines_GetPositionOfLineIndex(This,iLine,iIndex,piPosition)	\
    ( (This)->lpVtbl -> GetPositionOfLineIndex(This,iLine,iIndex,piPosition) ) 

#define IVsTextLines_GetLineIndexOfPosition(This,iPosition,piLine,piColumn)	\
    ( (This)->lpVtbl -> GetLineIndexOfPosition(This,iPosition,piLine,piColumn) ) 

#define IVsTextLines_GetLengthOfLine(This,iLine,piLength)	\
    ( (This)->lpVtbl -> GetLengthOfLine(This,iLine,piLength) ) 

#define IVsTextLines_GetLineCount(This,piLineCount)	\
    ( (This)->lpVtbl -> GetLineCount(This,piLineCount) ) 

#define IVsTextLines_GetSize(This,piLength)	\
    ( (This)->lpVtbl -> GetSize(This,piLength) ) 

#define IVsTextLines_GetLanguageServiceID(This,pguidLangService)	\
    ( (This)->lpVtbl -> GetLanguageServiceID(This,pguidLangService) ) 

#define IVsTextLines_SetLanguageServiceID(This,guidLangService)	\
    ( (This)->lpVtbl -> SetLanguageServiceID(This,guidLangService) ) 

#define IVsTextLines_GetUndoManager(This,ppUndoManager)	\
    ( (This)->lpVtbl -> GetUndoManager(This,ppUndoManager) ) 

#define IVsTextLines_Reserved1(This)	\
    ( (This)->lpVtbl -> Reserved1(This) ) 

#define IVsTextLines_Reserved2(This)	\
    ( (This)->lpVtbl -> Reserved2(This) ) 

#define IVsTextLines_Reserved3(This)	\
    ( (This)->lpVtbl -> Reserved3(This) ) 

#define IVsTextLines_Reserved4(This)	\
    ( (This)->lpVtbl -> Reserved4(This) ) 

#define IVsTextLines_Reload(This,fUndoable)	\
    ( (This)->lpVtbl -> Reload(This,fUndoable) ) 

#define IVsTextLines_LockBufferEx(This,dwFlags)	\
    ( (This)->lpVtbl -> LockBufferEx(This,dwFlags) ) 

#define IVsTextLines_UnlockBufferEx(This,dwFlags)	\
    ( (This)->lpVtbl -> UnlockBufferEx(This,dwFlags) ) 

#define IVsTextLines_GetLastLineIndex(This,piLine,piIndex)	\
    ( (This)->lpVtbl -> GetLastLineIndex(This,piLine,piIndex) ) 

#define IVsTextLines_Reserved5(This)	\
    ( (This)->lpVtbl -> Reserved5(This) ) 

#define IVsTextLines_Reserved6(This)	\
    ( (This)->lpVtbl -> Reserved6(This) ) 

#define IVsTextLines_Reserved7(This)	\
    ( (This)->lpVtbl -> Reserved7(This) ) 

#define IVsTextLines_Reserved8(This)	\
    ( (This)->lpVtbl -> Reserved8(This) ) 

#define IVsTextLines_Reserved9(This)	\
    ( (This)->lpVtbl -> Reserved9(This) ) 

#define IVsTextLines_Reserved10(This)	\
    ( (This)->lpVtbl -> Reserved10(This) ) 


#define IVsTextLines_GetMarkerData(This,iTopLine,iBottomLine,pMarkerData)	\
    ( (This)->lpVtbl -> GetMarkerData(This,iTopLine,iBottomLine,pMarkerData) ) 

#define IVsTextLines_ReleaseMarkerData(This,pMarkerData)	\
    ( (This)->lpVtbl -> ReleaseMarkerData(This,pMarkerData) ) 

#define IVsTextLines_GetLineData(This,iLine,pLineData,pMarkerData)	\
    ( (This)->lpVtbl -> GetLineData(This,iLine,pLineData,pMarkerData) ) 

#define IVsTextLines_ReleaseLineData(This,pLineData)	\
    ( (This)->lpVtbl -> ReleaseLineData(This,pLineData) ) 

#define IVsTextLines_GetLineText(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pbstrBuf)	\
    ( (This)->lpVtbl -> GetLineText(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pbstrBuf) ) 

#define IVsTextLines_CopyLineText(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pszBuf,pcchBuf)	\
    ( (This)->lpVtbl -> CopyLineText(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pszBuf,pcchBuf) ) 

#define IVsTextLines_ReplaceLines(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pszText,iNewLen,pChangedSpan)	\
    ( (This)->lpVtbl -> ReplaceLines(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pszText,iNewLen,pChangedSpan) ) 

#define IVsTextLines_CanReplaceLines(This,iStartLine,iStartIndex,iEndLine,iEndIndex,iNewLen)	\
    ( (This)->lpVtbl -> CanReplaceLines(This,iStartLine,iStartIndex,iEndLine,iEndIndex,iNewLen) ) 

#define IVsTextLines_CreateLineMarker(This,iMarkerType,iStartLine,iStartIndex,iEndLine,iEndIndex,pClient,ppMarker)	\
    ( (This)->lpVtbl -> CreateLineMarker(This,iMarkerType,iStartLine,iStartIndex,iEndLine,iEndIndex,pClient,ppMarker) ) 

#define IVsTextLines_EnumMarkers(This,iStartLine,iStartIndex,iEndLine,iEndIndex,iMarkerType,dwFlags,ppEnum)	\
    ( (This)->lpVtbl -> EnumMarkers(This,iStartLine,iStartIndex,iEndLine,iEndIndex,iMarkerType,dwFlags,ppEnum) ) 

#define IVsTextLines_FindMarkerByLineIndex(This,iMarkerType,iStartingLine,iStartingIndex,dwFlags,ppMarker)	\
    ( (This)->lpVtbl -> FindMarkerByLineIndex(This,iMarkerType,iStartingLine,iStartingIndex,dwFlags,ppMarker) ) 

#define IVsTextLines_AdviseTextLinesEvents(This,pSink,pdwCookie)	\
    ( (This)->lpVtbl -> AdviseTextLinesEvents(This,pSink,pdwCookie) ) 

#define IVsTextLines_UnadviseTextLinesEvents(This,dwCookie)	\
    ( (This)->lpVtbl -> UnadviseTextLinesEvents(This,dwCookie) ) 

#define IVsTextLines_GetPairExtents(This,pSpanIn,pSpanOut)	\
    ( (This)->lpVtbl -> GetPairExtents(This,pSpanIn,pSpanOut) ) 

#define IVsTextLines_ReloadLines(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pszText,iNewLen,pChangedSpan)	\
    ( (This)->lpVtbl -> ReloadLines(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pszText,iNewLen,pChangedSpan) ) 

#define IVsTextLines_IVsTextLinesReserved1(This,iLine,pLineData,fAttributes)	\
    ( (This)->lpVtbl -> IVsTextLinesReserved1(This,iLine,pLineData,fAttributes) ) 

#define IVsTextLines_GetLineDataEx(This,dwFlags,iLine,iStartIndex,iEndIndex,pLineData,pMarkerData)	\
    ( (This)->lpVtbl -> GetLineDataEx(This,dwFlags,iLine,iStartIndex,iEndIndex,pLineData,pMarkerData) ) 

#define IVsTextLines_ReleaseLineDataEx(This,pLineData)	\
    ( (This)->lpVtbl -> ReleaseLineDataEx(This,pLineData) ) 

#define IVsTextLines_CreateEditPoint(This,iLine,iIndex,ppEditPoint)	\
    ( (This)->lpVtbl -> CreateEditPoint(This,iLine,iIndex,ppEditPoint) ) 

#define IVsTextLines_ReplaceLinesEx(This,dwFlags,iStartLine,iStartIndex,iEndLine,iEndIndex,pszText,iNewLen,pChangedSpan)	\
    ( (This)->lpVtbl -> ReplaceLinesEx(This,dwFlags,iStartLine,iStartIndex,iEndLine,iEndIndex,pszText,iNewLen,pChangedSpan) ) 

#define IVsTextLines_CreateTextPoint(This,iLine,iIndex,ppTextPoint)	\
    ( (This)->lpVtbl -> CreateTextPoint(This,iLine,iIndex,ppTextPoint) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextLines_INTERFACE_DEFINED__ */


#ifndef __IVsTextColorState_INTERFACE_DEFINED__
#define __IVsTextColorState_INTERFACE_DEFINED__

/* interface IVsTextColorState */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextColorState;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7A64DE3-9B5C-47F0-ABAD-0AEDBD6CC057")
    IVsTextColorState : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ReColorizeLines( 
            /* [in] */ long iTopLine,
            /* [in] */ long iBottomLine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetColorStateAtStartOfLine( 
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piState) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextColorStateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextColorState * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextColorState * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextColorState * This);
        
        HRESULT ( STDMETHODCALLTYPE *ReColorizeLines )( 
            IVsTextColorState * This,
            /* [in] */ long iTopLine,
            /* [in] */ long iBottomLine);
        
        HRESULT ( STDMETHODCALLTYPE *GetColorStateAtStartOfLine )( 
            IVsTextColorState * This,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piState);
        
        END_INTERFACE
    } IVsTextColorStateVtbl;

    interface IVsTextColorState
    {
        CONST_VTBL struct IVsTextColorStateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextColorState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextColorState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextColorState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextColorState_ReColorizeLines(This,iTopLine,iBottomLine)	\
    ( (This)->lpVtbl -> ReColorizeLines(This,iTopLine,iBottomLine) ) 

#define IVsTextColorState_GetColorStateAtStartOfLine(This,iLine,piState)	\
    ( (This)->lpVtbl -> GetColorStateAtStartOfLine(This,iLine,piState) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextColorState_INTERFACE_DEFINED__ */


#ifndef __IVsTextLinesEvents_INTERFACE_DEFINED__
#define __IVsTextLinesEvents_INTERFACE_DEFINED__

/* interface IVsTextLinesEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextLinesEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("598D7074-DC17-4162-9A2F-97DD4540C2DD")
    IVsTextLinesEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnChangeLineText( 
            /* [in] */ __RPC__in const TextLineChange *pTextLineChange,
            /* [in] */ BOOL fLast) = 0;
        
        virtual void STDMETHODCALLTYPE OnChangeLineAttributes( 
            /* [in] */ long iFirstLine,
            /* [in] */ long iLastLine) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextLinesEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextLinesEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextLinesEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextLinesEvents * This);
        
        void ( STDMETHODCALLTYPE *OnChangeLineText )( 
            IVsTextLinesEvents * This,
            /* [in] */ __RPC__in const TextLineChange *pTextLineChange,
            /* [in] */ BOOL fLast);
        
        void ( STDMETHODCALLTYPE *OnChangeLineAttributes )( 
            IVsTextLinesEvents * This,
            /* [in] */ long iFirstLine,
            /* [in] */ long iLastLine);
        
        END_INTERFACE
    } IVsTextLinesEventsVtbl;

    interface IVsTextLinesEvents
    {
        CONST_VTBL struct IVsTextLinesEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextLinesEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextLinesEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextLinesEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextLinesEvents_OnChangeLineText(This,pTextLineChange,fLast)	\
    ( (This)->lpVtbl -> OnChangeLineText(This,pTextLineChange,fLast) ) 

#define IVsTextLinesEvents_OnChangeLineAttributes(This,iFirstLine,iLastLine)	\
    ( (This)->lpVtbl -> OnChangeLineAttributes(This,iFirstLine,iLastLine) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextLinesEvents_INTERFACE_DEFINED__ */


#ifndef __IVsTextStream_INTERFACE_DEFINED__
#define __IVsTextStream_INTERFACE_DEFINED__

/* interface IVsTextStream */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D3AF020B-A862-4D22-B373-20F1B30B7D9E")
    IVsTextStream : public IVsTextBuffer
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStream( 
            /* [in] */ long iPos,
            /* [in] */ long iLength,
            /* [out] */ __RPC__out WCHAR *pszDest) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceStream( 
            /* [in] */ long iPos,
            /* [in] */ long iOldLen,
            /* [in] */ __RPC__in LPCOLESTR pszText,
            /* [in] */ long iNewLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CanReplaceStream( 
            /* [in] */ long iPos,
            /* [in] */ long iOldLen,
            /* [in] */ long iNewLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateStreamMarker( 
            /* [in] */ long iMarkerType,
            /* [in] */ long iPos,
            /* [in] */ long iLength,
            /* [in] */ __RPC__in_opt IVsTextMarkerClient *pClient,
            /* [out] */ __RPC__deref_out_opt IVsTextStreamMarker **ppMarker) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumMarkers( 
            /* [in] */ long iPos,
            /* [in] */ long iLen,
            /* [in] */ long iMarkerType,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsEnumStreamMarkers **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FindMarkerByPosition( 
            /* [in] */ long iMarkerType,
            /* [in] */ long iStartingPos,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsTextStreamMarker **ppMarker) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AdviseTextStreamEvents( 
            /* [in] */ __RPC__in_opt IVsTextStreamEvents *pSink,
            /* [out] */ __RPC__out DWORD *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnadviseTextStreamEvents( 
            /* [in] */ DWORD dwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReloadStream( 
            /* [in] */ long iPos,
            /* [in] */ long iOldLen,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iNewLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateEditPoint( 
            /* [in] */ long iPosition,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppEditPoint) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceStreamEx( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ long iPos,
            /* [in] */ long iOldLen,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iNewLen,
            /* [out] */ __RPC__out long *piActualLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateTextPoint( 
            /* [in] */ long iPosition,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppTextPoint) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextStream * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *LockBuffer )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockBuffer )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeContent )( 
            IVsTextStream * This,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetStateFlags )( 
            IVsTextStream * This,
            /* [out] */ __RPC__out DWORD *pdwReadOnlyFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetStateFlags )( 
            IVsTextStream * This,
            /* [in] */ DWORD dwReadOnlyFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetPositionOfLine )( 
            IVsTextStream * This,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piPosition);
        
        HRESULT ( STDMETHODCALLTYPE *GetPositionOfLineIndex )( 
            IVsTextStream * This,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__out long *piPosition);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineIndexOfPosition )( 
            IVsTextStream * This,
            /* [in] */ long iPosition,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out CharIndex *piColumn);
        
        HRESULT ( STDMETHODCALLTYPE *GetLengthOfLine )( 
            IVsTextStream * This,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineCount )( 
            IVsTextStream * This,
            /* [out] */ __RPC__out long *piLineCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IVsTextStream * This,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguageServiceID )( 
            IVsTextStream * This,
            /* [out] */ __RPC__out GUID *pguidLangService);
        
        HRESULT ( STDMETHODCALLTYPE *SetLanguageServiceID )( 
            IVsTextStream * This,
            /* [in] */ __RPC__in REFGUID guidLangService);
        
        HRESULT ( STDMETHODCALLTYPE *GetUndoManager )( 
            IVsTextStream * This,
            /* [out] */ __RPC__deref_out_opt IOleUndoManager **ppUndoManager);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved1 )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved2 )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved3 )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved4 )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reload )( 
            IVsTextStream * This,
            /* [in] */ BOOL fUndoable);
        
        HRESULT ( STDMETHODCALLTYPE *LockBufferEx )( 
            IVsTextStream * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockBufferEx )( 
            IVsTextStream * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetLastLineIndex )( 
            IVsTextStream * This,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piIndex);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved5 )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved6 )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved7 )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved8 )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved9 )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reserved10 )( 
            IVsTextStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetStream )( 
            IVsTextStream * This,
            /* [in] */ long iPos,
            /* [in] */ long iLength,
            /* [out] */ __RPC__out WCHAR *pszDest);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceStream )( 
            IVsTextStream * This,
            /* [in] */ long iPos,
            /* [in] */ long iOldLen,
            /* [in] */ __RPC__in LPCOLESTR pszText,
            /* [in] */ long iNewLen);
        
        HRESULT ( STDMETHODCALLTYPE *CanReplaceStream )( 
            IVsTextStream * This,
            /* [in] */ long iPos,
            /* [in] */ long iOldLen,
            /* [in] */ long iNewLen);
        
        HRESULT ( STDMETHODCALLTYPE *CreateStreamMarker )( 
            IVsTextStream * This,
            /* [in] */ long iMarkerType,
            /* [in] */ long iPos,
            /* [in] */ long iLength,
            /* [in] */ __RPC__in_opt IVsTextMarkerClient *pClient,
            /* [out] */ __RPC__deref_out_opt IVsTextStreamMarker **ppMarker);
        
        HRESULT ( STDMETHODCALLTYPE *EnumMarkers )( 
            IVsTextStream * This,
            /* [in] */ long iPos,
            /* [in] */ long iLen,
            /* [in] */ long iMarkerType,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsEnumStreamMarkers **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *FindMarkerByPosition )( 
            IVsTextStream * This,
            /* [in] */ long iMarkerType,
            /* [in] */ long iStartingPos,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsTextStreamMarker **ppMarker);
        
        HRESULT ( STDMETHODCALLTYPE *AdviseTextStreamEvents )( 
            IVsTextStream * This,
            /* [in] */ __RPC__in_opt IVsTextStreamEvents *pSink,
            /* [out] */ __RPC__out DWORD *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseTextStreamEvents )( 
            IVsTextStream * This,
            /* [in] */ DWORD dwCookie);
        
        HRESULT ( STDMETHODCALLTYPE *ReloadStream )( 
            IVsTextStream * This,
            /* [in] */ long iPos,
            /* [in] */ long iOldLen,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iNewLen);
        
        HRESULT ( STDMETHODCALLTYPE *CreateEditPoint )( 
            IVsTextStream * This,
            /* [in] */ long iPosition,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppEditPoint);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceStreamEx )( 
            IVsTextStream * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ long iPos,
            /* [in] */ long iOldLen,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iNewLen,
            /* [out] */ __RPC__out long *piActualLen);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTextPoint )( 
            IVsTextStream * This,
            /* [in] */ long iPosition,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppTextPoint);
        
        END_INTERFACE
    } IVsTextStreamVtbl;

    interface IVsTextStream
    {
        CONST_VTBL struct IVsTextStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextStream_LockBuffer(This)	\
    ( (This)->lpVtbl -> LockBuffer(This) ) 

#define IVsTextStream_UnlockBuffer(This)	\
    ( (This)->lpVtbl -> UnlockBuffer(This) ) 

#define IVsTextStream_InitializeContent(This,pszText,iLength)	\
    ( (This)->lpVtbl -> InitializeContent(This,pszText,iLength) ) 

#define IVsTextStream_GetStateFlags(This,pdwReadOnlyFlags)	\
    ( (This)->lpVtbl -> GetStateFlags(This,pdwReadOnlyFlags) ) 

#define IVsTextStream_SetStateFlags(This,dwReadOnlyFlags)	\
    ( (This)->lpVtbl -> SetStateFlags(This,dwReadOnlyFlags) ) 

#define IVsTextStream_GetPositionOfLine(This,iLine,piPosition)	\
    ( (This)->lpVtbl -> GetPositionOfLine(This,iLine,piPosition) ) 

#define IVsTextStream_GetPositionOfLineIndex(This,iLine,iIndex,piPosition)	\
    ( (This)->lpVtbl -> GetPositionOfLineIndex(This,iLine,iIndex,piPosition) ) 

#define IVsTextStream_GetLineIndexOfPosition(This,iPosition,piLine,piColumn)	\
    ( (This)->lpVtbl -> GetLineIndexOfPosition(This,iPosition,piLine,piColumn) ) 

#define IVsTextStream_GetLengthOfLine(This,iLine,piLength)	\
    ( (This)->lpVtbl -> GetLengthOfLine(This,iLine,piLength) ) 

#define IVsTextStream_GetLineCount(This,piLineCount)	\
    ( (This)->lpVtbl -> GetLineCount(This,piLineCount) ) 

#define IVsTextStream_GetSize(This,piLength)	\
    ( (This)->lpVtbl -> GetSize(This,piLength) ) 

#define IVsTextStream_GetLanguageServiceID(This,pguidLangService)	\
    ( (This)->lpVtbl -> GetLanguageServiceID(This,pguidLangService) ) 

#define IVsTextStream_SetLanguageServiceID(This,guidLangService)	\
    ( (This)->lpVtbl -> SetLanguageServiceID(This,guidLangService) ) 

#define IVsTextStream_GetUndoManager(This,ppUndoManager)	\
    ( (This)->lpVtbl -> GetUndoManager(This,ppUndoManager) ) 

#define IVsTextStream_Reserved1(This)	\
    ( (This)->lpVtbl -> Reserved1(This) ) 

#define IVsTextStream_Reserved2(This)	\
    ( (This)->lpVtbl -> Reserved2(This) ) 

#define IVsTextStream_Reserved3(This)	\
    ( (This)->lpVtbl -> Reserved3(This) ) 

#define IVsTextStream_Reserved4(This)	\
    ( (This)->lpVtbl -> Reserved4(This) ) 

#define IVsTextStream_Reload(This,fUndoable)	\
    ( (This)->lpVtbl -> Reload(This,fUndoable) ) 

#define IVsTextStream_LockBufferEx(This,dwFlags)	\
    ( (This)->lpVtbl -> LockBufferEx(This,dwFlags) ) 

#define IVsTextStream_UnlockBufferEx(This,dwFlags)	\
    ( (This)->lpVtbl -> UnlockBufferEx(This,dwFlags) ) 

#define IVsTextStream_GetLastLineIndex(This,piLine,piIndex)	\
    ( (This)->lpVtbl -> GetLastLineIndex(This,piLine,piIndex) ) 

#define IVsTextStream_Reserved5(This)	\
    ( (This)->lpVtbl -> Reserved5(This) ) 

#define IVsTextStream_Reserved6(This)	\
    ( (This)->lpVtbl -> Reserved6(This) ) 

#define IVsTextStream_Reserved7(This)	\
    ( (This)->lpVtbl -> Reserved7(This) ) 

#define IVsTextStream_Reserved8(This)	\
    ( (This)->lpVtbl -> Reserved8(This) ) 

#define IVsTextStream_Reserved9(This)	\
    ( (This)->lpVtbl -> Reserved9(This) ) 

#define IVsTextStream_Reserved10(This)	\
    ( (This)->lpVtbl -> Reserved10(This) ) 


#define IVsTextStream_GetStream(This,iPos,iLength,pszDest)	\
    ( (This)->lpVtbl -> GetStream(This,iPos,iLength,pszDest) ) 

#define IVsTextStream_ReplaceStream(This,iPos,iOldLen,pszText,iNewLen)	\
    ( (This)->lpVtbl -> ReplaceStream(This,iPos,iOldLen,pszText,iNewLen) ) 

#define IVsTextStream_CanReplaceStream(This,iPos,iOldLen,iNewLen)	\
    ( (This)->lpVtbl -> CanReplaceStream(This,iPos,iOldLen,iNewLen) ) 

#define IVsTextStream_CreateStreamMarker(This,iMarkerType,iPos,iLength,pClient,ppMarker)	\
    ( (This)->lpVtbl -> CreateStreamMarker(This,iMarkerType,iPos,iLength,pClient,ppMarker) ) 

#define IVsTextStream_EnumMarkers(This,iPos,iLen,iMarkerType,dwFlags,ppEnum)	\
    ( (This)->lpVtbl -> EnumMarkers(This,iPos,iLen,iMarkerType,dwFlags,ppEnum) ) 

#define IVsTextStream_FindMarkerByPosition(This,iMarkerType,iStartingPos,dwFlags,ppMarker)	\
    ( (This)->lpVtbl -> FindMarkerByPosition(This,iMarkerType,iStartingPos,dwFlags,ppMarker) ) 

#define IVsTextStream_AdviseTextStreamEvents(This,pSink,pdwCookie)	\
    ( (This)->lpVtbl -> AdviseTextStreamEvents(This,pSink,pdwCookie) ) 

#define IVsTextStream_UnadviseTextStreamEvents(This,dwCookie)	\
    ( (This)->lpVtbl -> UnadviseTextStreamEvents(This,dwCookie) ) 

#define IVsTextStream_ReloadStream(This,iPos,iOldLen,pszText,iNewLen)	\
    ( (This)->lpVtbl -> ReloadStream(This,iPos,iOldLen,pszText,iNewLen) ) 

#define IVsTextStream_CreateEditPoint(This,iPosition,ppEditPoint)	\
    ( (This)->lpVtbl -> CreateEditPoint(This,iPosition,ppEditPoint) ) 

#define IVsTextStream_ReplaceStreamEx(This,dwFlags,iPos,iOldLen,pszText,iNewLen,piActualLen)	\
    ( (This)->lpVtbl -> ReplaceStreamEx(This,dwFlags,iPos,iOldLen,pszText,iNewLen,piActualLen) ) 

#define IVsTextStream_CreateTextPoint(This,iPosition,ppTextPoint)	\
    ( (This)->lpVtbl -> CreateTextPoint(This,iPosition,ppTextPoint) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextStream_INTERFACE_DEFINED__ */


#ifndef __IVsEnumStreamMarkers_INTERFACE_DEFINED__
#define __IVsEnumStreamMarkers_INTERFACE_DEFINED__

/* interface IVsEnumStreamMarkers */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumStreamMarkers;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("06E27359-6FEE-4CCC-9E8B-AFC20C0F662A")
    IVsEnumStreamMarkers : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [retval][out] */ __RPC__deref_out_opt IVsTextStreamMarker **ppRetval) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out long *pcMarkers) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumStreamMarkersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumStreamMarkers * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumStreamMarkers * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumStreamMarkers * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumStreamMarkers * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumStreamMarkers * This,
            /* [retval][out] */ __RPC__deref_out_opt IVsTextStreamMarker **ppRetval);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsEnumStreamMarkers * This,
            /* [out] */ __RPC__out long *pcMarkers);
        
        END_INTERFACE
    } IVsEnumStreamMarkersVtbl;

    interface IVsEnumStreamMarkers
    {
        CONST_VTBL struct IVsEnumStreamMarkersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumStreamMarkers_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumStreamMarkers_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumStreamMarkers_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumStreamMarkers_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumStreamMarkers_Next(This,ppRetval)	\
    ( (This)->lpVtbl -> Next(This,ppRetval) ) 

#define IVsEnumStreamMarkers_GetCount(This,pcMarkers)	\
    ( (This)->lpVtbl -> GetCount(This,pcMarkers) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumStreamMarkers_INTERFACE_DEFINED__ */


#ifndef __IVsEnumLineMarkers_INTERFACE_DEFINED__
#define __IVsEnumLineMarkers_INTERFACE_DEFINED__

/* interface IVsEnumLineMarkers */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumLineMarkers;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("35E981F1-77EF-4343-AAA1-8741F38627A2")
    IVsEnumLineMarkers : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [retval][out] */ __RPC__deref_out_opt IVsTextLineMarker **ppRetval) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out long *pcMarkers) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumLineMarkersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumLineMarkers * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumLineMarkers * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumLineMarkers * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumLineMarkers * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumLineMarkers * This,
            /* [retval][out] */ __RPC__deref_out_opt IVsTextLineMarker **ppRetval);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsEnumLineMarkers * This,
            /* [out] */ __RPC__out long *pcMarkers);
        
        END_INTERFACE
    } IVsEnumLineMarkersVtbl;

    interface IVsEnumLineMarkers
    {
        CONST_VTBL struct IVsEnumLineMarkersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumLineMarkers_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumLineMarkers_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumLineMarkers_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumLineMarkers_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumLineMarkers_Next(This,ppRetval)	\
    ( (This)->lpVtbl -> Next(This,ppRetval) ) 

#define IVsEnumLineMarkers_GetCount(This,pcMarkers)	\
    ( (This)->lpVtbl -> GetCount(This,pcMarkers) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumLineMarkers_INTERFACE_DEFINED__ */


#ifndef __IVsEnumLayerMarkers_INTERFACE_DEFINED__
#define __IVsEnumLayerMarkers_INTERFACE_DEFINED__

/* interface IVsEnumLayerMarkers */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumLayerMarkers;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8F591607-2A26-4A9D-A6C5-147C2E51E895")
    IVsEnumLayerMarkers : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [out] */ __RPC__deref_out_opt IVsTextLayerMarker **ppRetval) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out long *pcMarkers) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumLayerMarkersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumLayerMarkers * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumLayerMarkers * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumLayerMarkers * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumLayerMarkers * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumLayerMarkers * This,
            /* [out] */ __RPC__deref_out_opt IVsTextLayerMarker **ppRetval);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsEnumLayerMarkers * This,
            /* [out] */ __RPC__out long *pcMarkers);
        
        END_INTERFACE
    } IVsEnumLayerMarkersVtbl;

    interface IVsEnumLayerMarkers
    {
        CONST_VTBL struct IVsEnumLayerMarkersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumLayerMarkers_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumLayerMarkers_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumLayerMarkers_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumLayerMarkers_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumLayerMarkers_Next(This,ppRetval)	\
    ( (This)->lpVtbl -> Next(This,ppRetval) ) 

#define IVsEnumLayerMarkers_GetCount(This,pcMarkers)	\
    ( (This)->lpVtbl -> GetCount(This,pcMarkers) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumLayerMarkers_INTERFACE_DEFINED__ */


#ifndef __IVsTextMarker_INTERFACE_DEFINED__
#define __IVsTextMarker_INTERFACE_DEFINED__

/* interface IVsTextMarker */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextMarker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("950122D9-1A51-43CA-8CED-B5D9E42DE1B5")
    IVsTextMarker : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetType( 
            /* [out] */ __RPC__out long *piMarkerType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetType( 
            /* [in] */ long iMarkerType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisualStyle( 
            /* [out] */ __RPC__out DWORD *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisualStyle( 
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Invalidate( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DrawGlyph( 
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTipText( 
            /* [optional][out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnadviseClient( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMarkerCommandInfo( 
            /* [in] */ long iItem,
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out DWORD *pcmdf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ExecMarkerCommand( 
            /* [in] */ long iItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBehavior( 
            /* [out] */ __RPC__out DWORD *pdwBehavior) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBehavior( 
            /* [in] */ DWORD dwBehavior) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPriorityIndex( 
            /* [out] */ __RPC__out long *piPriorityIndex) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextMarkerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextMarker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextMarker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IVsTextMarker * This,
            /* [out] */ __RPC__out long *piMarkerType);
        
        HRESULT ( STDMETHODCALLTYPE *SetType )( 
            IVsTextMarker * This,
            /* [in] */ long iMarkerType);
        
        HRESULT ( STDMETHODCALLTYPE *GetVisualStyle )( 
            IVsTextMarker * This,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetVisualStyle )( 
            IVsTextMarker * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *Invalidate )( 
            IVsTextMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *DrawGlyph )( 
            IVsTextMarker * This,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect);
        
        HRESULT ( STDMETHODCALLTYPE *GetTipText )( 
            IVsTextMarker * This,
            /* [optional][out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseClient )( 
            IVsTextMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerCommandInfo )( 
            IVsTextMarker * This,
            /* [in] */ long iItem,
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out DWORD *pcmdf);
        
        HRESULT ( STDMETHODCALLTYPE *ExecMarkerCommand )( 
            IVsTextMarker * This,
            /* [in] */ long iItem);
        
        HRESULT ( STDMETHODCALLTYPE *GetBehavior )( 
            IVsTextMarker * This,
            /* [out] */ __RPC__out DWORD *pdwBehavior);
        
        HRESULT ( STDMETHODCALLTYPE *SetBehavior )( 
            IVsTextMarker * This,
            /* [in] */ DWORD dwBehavior);
        
        HRESULT ( STDMETHODCALLTYPE *GetPriorityIndex )( 
            IVsTextMarker * This,
            /* [out] */ __RPC__out long *piPriorityIndex);
        
        END_INTERFACE
    } IVsTextMarkerVtbl;

    interface IVsTextMarker
    {
        CONST_VTBL struct IVsTextMarkerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextMarker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextMarker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextMarker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextMarker_GetType(This,piMarkerType)	\
    ( (This)->lpVtbl -> GetType(This,piMarkerType) ) 

#define IVsTextMarker_SetType(This,iMarkerType)	\
    ( (This)->lpVtbl -> SetType(This,iMarkerType) ) 

#define IVsTextMarker_GetVisualStyle(This,pdwFlags)	\
    ( (This)->lpVtbl -> GetVisualStyle(This,pdwFlags) ) 

#define IVsTextMarker_SetVisualStyle(This,dwFlags)	\
    ( (This)->lpVtbl -> SetVisualStyle(This,dwFlags) ) 

#define IVsTextMarker_Invalidate(This)	\
    ( (This)->lpVtbl -> Invalidate(This) ) 

#define IVsTextMarker_DrawGlyph(This,hdc,pRect)	\
    ( (This)->lpVtbl -> DrawGlyph(This,hdc,pRect) ) 

#define IVsTextMarker_GetTipText(This,pbstrText)	\
    ( (This)->lpVtbl -> GetTipText(This,pbstrText) ) 

#define IVsTextMarker_UnadviseClient(This)	\
    ( (This)->lpVtbl -> UnadviseClient(This) ) 

#define IVsTextMarker_GetMarkerCommandInfo(This,iItem,pbstrText,pcmdf)	\
    ( (This)->lpVtbl -> GetMarkerCommandInfo(This,iItem,pbstrText,pcmdf) ) 

#define IVsTextMarker_ExecMarkerCommand(This,iItem)	\
    ( (This)->lpVtbl -> ExecMarkerCommand(This,iItem) ) 

#define IVsTextMarker_GetBehavior(This,pdwBehavior)	\
    ( (This)->lpVtbl -> GetBehavior(This,pdwBehavior) ) 

#define IVsTextMarker_SetBehavior(This,dwBehavior)	\
    ( (This)->lpVtbl -> SetBehavior(This,dwBehavior) ) 

#define IVsTextMarker_GetPriorityIndex(This,piPriorityIndex)	\
    ( (This)->lpVtbl -> GetPriorityIndex(This,piPriorityIndex) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextMarker_INTERFACE_DEFINED__ */


#ifndef __IVsTextStreamMarker_INTERFACE_DEFINED__
#define __IVsTextStreamMarker_INTERFACE_DEFINED__

/* interface IVsTextStreamMarker */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextStreamMarker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("10D17872-91BA-4D65-80CC-E5FC3222AC82")
    IVsTextStreamMarker : public IVsTextMarker
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStreamBuffer( 
            /* [out] */ __RPC__deref_out_opt IVsTextStream **ppBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResetSpan( 
            /* [in] */ long iNewPos,
            /* [in] */ long iNewLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentSpan( 
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLen) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextStreamMarkerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextStreamMarker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextStreamMarker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextStreamMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IVsTextStreamMarker * This,
            /* [out] */ __RPC__out long *piMarkerType);
        
        HRESULT ( STDMETHODCALLTYPE *SetType )( 
            IVsTextStreamMarker * This,
            /* [in] */ long iMarkerType);
        
        HRESULT ( STDMETHODCALLTYPE *GetVisualStyle )( 
            IVsTextStreamMarker * This,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetVisualStyle )( 
            IVsTextStreamMarker * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *Invalidate )( 
            IVsTextStreamMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *DrawGlyph )( 
            IVsTextStreamMarker * This,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect);
        
        HRESULT ( STDMETHODCALLTYPE *GetTipText )( 
            IVsTextStreamMarker * This,
            /* [optional][out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseClient )( 
            IVsTextStreamMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerCommandInfo )( 
            IVsTextStreamMarker * This,
            /* [in] */ long iItem,
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out DWORD *pcmdf);
        
        HRESULT ( STDMETHODCALLTYPE *ExecMarkerCommand )( 
            IVsTextStreamMarker * This,
            /* [in] */ long iItem);
        
        HRESULT ( STDMETHODCALLTYPE *GetBehavior )( 
            IVsTextStreamMarker * This,
            /* [out] */ __RPC__out DWORD *pdwBehavior);
        
        HRESULT ( STDMETHODCALLTYPE *SetBehavior )( 
            IVsTextStreamMarker * This,
            /* [in] */ DWORD dwBehavior);
        
        HRESULT ( STDMETHODCALLTYPE *GetPriorityIndex )( 
            IVsTextStreamMarker * This,
            /* [out] */ __RPC__out long *piPriorityIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamBuffer )( 
            IVsTextStreamMarker * This,
            /* [out] */ __RPC__deref_out_opt IVsTextStream **ppBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *ResetSpan )( 
            IVsTextStreamMarker * This,
            /* [in] */ long iNewPos,
            /* [in] */ long iNewLen);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentSpan )( 
            IVsTextStreamMarker * This,
            /* [out] */ __RPC__out long *piPos,
            /* [out] */ __RPC__out long *piLen);
        
        END_INTERFACE
    } IVsTextStreamMarkerVtbl;

    interface IVsTextStreamMarker
    {
        CONST_VTBL struct IVsTextStreamMarkerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextStreamMarker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextStreamMarker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextStreamMarker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextStreamMarker_GetType(This,piMarkerType)	\
    ( (This)->lpVtbl -> GetType(This,piMarkerType) ) 

#define IVsTextStreamMarker_SetType(This,iMarkerType)	\
    ( (This)->lpVtbl -> SetType(This,iMarkerType) ) 

#define IVsTextStreamMarker_GetVisualStyle(This,pdwFlags)	\
    ( (This)->lpVtbl -> GetVisualStyle(This,pdwFlags) ) 

#define IVsTextStreamMarker_SetVisualStyle(This,dwFlags)	\
    ( (This)->lpVtbl -> SetVisualStyle(This,dwFlags) ) 

#define IVsTextStreamMarker_Invalidate(This)	\
    ( (This)->lpVtbl -> Invalidate(This) ) 

#define IVsTextStreamMarker_DrawGlyph(This,hdc,pRect)	\
    ( (This)->lpVtbl -> DrawGlyph(This,hdc,pRect) ) 

#define IVsTextStreamMarker_GetTipText(This,pbstrText)	\
    ( (This)->lpVtbl -> GetTipText(This,pbstrText) ) 

#define IVsTextStreamMarker_UnadviseClient(This)	\
    ( (This)->lpVtbl -> UnadviseClient(This) ) 

#define IVsTextStreamMarker_GetMarkerCommandInfo(This,iItem,pbstrText,pcmdf)	\
    ( (This)->lpVtbl -> GetMarkerCommandInfo(This,iItem,pbstrText,pcmdf) ) 

#define IVsTextStreamMarker_ExecMarkerCommand(This,iItem)	\
    ( (This)->lpVtbl -> ExecMarkerCommand(This,iItem) ) 

#define IVsTextStreamMarker_GetBehavior(This,pdwBehavior)	\
    ( (This)->lpVtbl -> GetBehavior(This,pdwBehavior) ) 

#define IVsTextStreamMarker_SetBehavior(This,dwBehavior)	\
    ( (This)->lpVtbl -> SetBehavior(This,dwBehavior) ) 

#define IVsTextStreamMarker_GetPriorityIndex(This,piPriorityIndex)	\
    ( (This)->lpVtbl -> GetPriorityIndex(This,piPriorityIndex) ) 


#define IVsTextStreamMarker_GetStreamBuffer(This,ppBuffer)	\
    ( (This)->lpVtbl -> GetStreamBuffer(This,ppBuffer) ) 

#define IVsTextStreamMarker_ResetSpan(This,iNewPos,iNewLen)	\
    ( (This)->lpVtbl -> ResetSpan(This,iNewPos,iNewLen) ) 

#define IVsTextStreamMarker_GetCurrentSpan(This,piPos,piLen)	\
    ( (This)->lpVtbl -> GetCurrentSpan(This,piPos,piLen) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextStreamMarker_INTERFACE_DEFINED__ */


#ifndef __IVsTextLineMarker_INTERFACE_DEFINED__
#define __IVsTextLineMarker_INTERFACE_DEFINED__

/* interface IVsTextLineMarker */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextLineMarker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("31E2DCA7-CCFF-4E09-B433-17C739CF69AD")
    IVsTextLineMarker : public IVsTextMarker
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetLineBuffer( 
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResetSpan( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentSpan( 
            /* [out] */ __RPC__out TextSpan *pSpan) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextLineMarkerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextLineMarker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextLineMarker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextLineMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IVsTextLineMarker * This,
            /* [out] */ __RPC__out long *piMarkerType);
        
        HRESULT ( STDMETHODCALLTYPE *SetType )( 
            IVsTextLineMarker * This,
            /* [in] */ long iMarkerType);
        
        HRESULT ( STDMETHODCALLTYPE *GetVisualStyle )( 
            IVsTextLineMarker * This,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetVisualStyle )( 
            IVsTextLineMarker * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *Invalidate )( 
            IVsTextLineMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *DrawGlyph )( 
            IVsTextLineMarker * This,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect);
        
        HRESULT ( STDMETHODCALLTYPE *GetTipText )( 
            IVsTextLineMarker * This,
            /* [optional][out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseClient )( 
            IVsTextLineMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerCommandInfo )( 
            IVsTextLineMarker * This,
            /* [in] */ long iItem,
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out DWORD *pcmdf);
        
        HRESULT ( STDMETHODCALLTYPE *ExecMarkerCommand )( 
            IVsTextLineMarker * This,
            /* [in] */ long iItem);
        
        HRESULT ( STDMETHODCALLTYPE *GetBehavior )( 
            IVsTextLineMarker * This,
            /* [out] */ __RPC__out DWORD *pdwBehavior);
        
        HRESULT ( STDMETHODCALLTYPE *SetBehavior )( 
            IVsTextLineMarker * This,
            /* [in] */ DWORD dwBehavior);
        
        HRESULT ( STDMETHODCALLTYPE *GetPriorityIndex )( 
            IVsTextLineMarker * This,
            /* [out] */ __RPC__out long *piPriorityIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineBuffer )( 
            IVsTextLineMarker * This,
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *ResetSpan )( 
            IVsTextLineMarker * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentSpan )( 
            IVsTextLineMarker * This,
            /* [out] */ __RPC__out TextSpan *pSpan);
        
        END_INTERFACE
    } IVsTextLineMarkerVtbl;

    interface IVsTextLineMarker
    {
        CONST_VTBL struct IVsTextLineMarkerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextLineMarker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextLineMarker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextLineMarker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextLineMarker_GetType(This,piMarkerType)	\
    ( (This)->lpVtbl -> GetType(This,piMarkerType) ) 

#define IVsTextLineMarker_SetType(This,iMarkerType)	\
    ( (This)->lpVtbl -> SetType(This,iMarkerType) ) 

#define IVsTextLineMarker_GetVisualStyle(This,pdwFlags)	\
    ( (This)->lpVtbl -> GetVisualStyle(This,pdwFlags) ) 

#define IVsTextLineMarker_SetVisualStyle(This,dwFlags)	\
    ( (This)->lpVtbl -> SetVisualStyle(This,dwFlags) ) 

#define IVsTextLineMarker_Invalidate(This)	\
    ( (This)->lpVtbl -> Invalidate(This) ) 

#define IVsTextLineMarker_DrawGlyph(This,hdc,pRect)	\
    ( (This)->lpVtbl -> DrawGlyph(This,hdc,pRect) ) 

#define IVsTextLineMarker_GetTipText(This,pbstrText)	\
    ( (This)->lpVtbl -> GetTipText(This,pbstrText) ) 

#define IVsTextLineMarker_UnadviseClient(This)	\
    ( (This)->lpVtbl -> UnadviseClient(This) ) 

#define IVsTextLineMarker_GetMarkerCommandInfo(This,iItem,pbstrText,pcmdf)	\
    ( (This)->lpVtbl -> GetMarkerCommandInfo(This,iItem,pbstrText,pcmdf) ) 

#define IVsTextLineMarker_ExecMarkerCommand(This,iItem)	\
    ( (This)->lpVtbl -> ExecMarkerCommand(This,iItem) ) 

#define IVsTextLineMarker_GetBehavior(This,pdwBehavior)	\
    ( (This)->lpVtbl -> GetBehavior(This,pdwBehavior) ) 

#define IVsTextLineMarker_SetBehavior(This,dwBehavior)	\
    ( (This)->lpVtbl -> SetBehavior(This,dwBehavior) ) 

#define IVsTextLineMarker_GetPriorityIndex(This,piPriorityIndex)	\
    ( (This)->lpVtbl -> GetPriorityIndex(This,piPriorityIndex) ) 


#define IVsTextLineMarker_GetLineBuffer(This,ppBuffer)	\
    ( (This)->lpVtbl -> GetLineBuffer(This,ppBuffer) ) 

#define IVsTextLineMarker_ResetSpan(This,iStartLine,iStartIndex,iEndLine,iEndIndex)	\
    ( (This)->lpVtbl -> ResetSpan(This,iStartLine,iStartIndex,iEndLine,iEndIndex) ) 

#define IVsTextLineMarker_GetCurrentSpan(This,pSpan)	\
    ( (This)->lpVtbl -> GetCurrentSpan(This,pSpan) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextLineMarker_INTERFACE_DEFINED__ */


#ifndef __IVsTextLayerMarker_INTERFACE_DEFINED__
#define __IVsTextLayerMarker_INTERFACE_DEFINED__

/* interface IVsTextLayerMarker */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextLayerMarker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("28C149D2-8FCB-4AB3-8584-9A2747F3F8FC")
    IVsTextLayerMarker : public IVsTextMarker
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTextLayer( 
            /* [out] */ __RPC__deref_out_opt IVsTextLayer **ppLayer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResetSpan( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentSpan( 
            /* [out] */ __RPC__out TextSpan *pSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsInvalidated( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryClientInterface( 
            /* [in] */ __RPC__in REFIID iid,
            /* [out] */ __RPC__deref_out_opt void **ppClient) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DrawGlyphEx( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect,
            /* [in] */ long iLineHeight) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextLayerMarkerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextLayerMarker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextLayerMarker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextLayerMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IVsTextLayerMarker * This,
            /* [out] */ __RPC__out long *piMarkerType);
        
        HRESULT ( STDMETHODCALLTYPE *SetType )( 
            IVsTextLayerMarker * This,
            /* [in] */ long iMarkerType);
        
        HRESULT ( STDMETHODCALLTYPE *GetVisualStyle )( 
            IVsTextLayerMarker * This,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetVisualStyle )( 
            IVsTextLayerMarker * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *Invalidate )( 
            IVsTextLayerMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *DrawGlyph )( 
            IVsTextLayerMarker * This,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect);
        
        HRESULT ( STDMETHODCALLTYPE *GetTipText )( 
            IVsTextLayerMarker * This,
            /* [optional][out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseClient )( 
            IVsTextLayerMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerCommandInfo )( 
            IVsTextLayerMarker * This,
            /* [in] */ long iItem,
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out DWORD *pcmdf);
        
        HRESULT ( STDMETHODCALLTYPE *ExecMarkerCommand )( 
            IVsTextLayerMarker * This,
            /* [in] */ long iItem);
        
        HRESULT ( STDMETHODCALLTYPE *GetBehavior )( 
            IVsTextLayerMarker * This,
            /* [out] */ __RPC__out DWORD *pdwBehavior);
        
        HRESULT ( STDMETHODCALLTYPE *SetBehavior )( 
            IVsTextLayerMarker * This,
            /* [in] */ DWORD dwBehavior);
        
        HRESULT ( STDMETHODCALLTYPE *GetPriorityIndex )( 
            IVsTextLayerMarker * This,
            /* [out] */ __RPC__out long *piPriorityIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetTextLayer )( 
            IVsTextLayerMarker * This,
            /* [out] */ __RPC__deref_out_opt IVsTextLayer **ppLayer);
        
        HRESULT ( STDMETHODCALLTYPE *ResetSpan )( 
            IVsTextLayerMarker * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentSpan )( 
            IVsTextLayerMarker * This,
            /* [out] */ __RPC__out TextSpan *pSpan);
        
        HRESULT ( STDMETHODCALLTYPE *IsInvalidated )( 
            IVsTextLayerMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *QueryClientInterface )( 
            IVsTextLayerMarker * This,
            /* [in] */ __RPC__in REFIID iid,
            /* [out] */ __RPC__deref_out_opt void **ppClient);
        
        HRESULT ( STDMETHODCALLTYPE *DrawGlyphEx )( 
            IVsTextLayerMarker * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect,
            /* [in] */ long iLineHeight);
        
        END_INTERFACE
    } IVsTextLayerMarkerVtbl;

    interface IVsTextLayerMarker
    {
        CONST_VTBL struct IVsTextLayerMarkerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextLayerMarker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextLayerMarker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextLayerMarker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextLayerMarker_GetType(This,piMarkerType)	\
    ( (This)->lpVtbl -> GetType(This,piMarkerType) ) 

#define IVsTextLayerMarker_SetType(This,iMarkerType)	\
    ( (This)->lpVtbl -> SetType(This,iMarkerType) ) 

#define IVsTextLayerMarker_GetVisualStyle(This,pdwFlags)	\
    ( (This)->lpVtbl -> GetVisualStyle(This,pdwFlags) ) 

#define IVsTextLayerMarker_SetVisualStyle(This,dwFlags)	\
    ( (This)->lpVtbl -> SetVisualStyle(This,dwFlags) ) 

#define IVsTextLayerMarker_Invalidate(This)	\
    ( (This)->lpVtbl -> Invalidate(This) ) 

#define IVsTextLayerMarker_DrawGlyph(This,hdc,pRect)	\
    ( (This)->lpVtbl -> DrawGlyph(This,hdc,pRect) ) 

#define IVsTextLayerMarker_GetTipText(This,pbstrText)	\
    ( (This)->lpVtbl -> GetTipText(This,pbstrText) ) 

#define IVsTextLayerMarker_UnadviseClient(This)	\
    ( (This)->lpVtbl -> UnadviseClient(This) ) 

#define IVsTextLayerMarker_GetMarkerCommandInfo(This,iItem,pbstrText,pcmdf)	\
    ( (This)->lpVtbl -> GetMarkerCommandInfo(This,iItem,pbstrText,pcmdf) ) 

#define IVsTextLayerMarker_ExecMarkerCommand(This,iItem)	\
    ( (This)->lpVtbl -> ExecMarkerCommand(This,iItem) ) 

#define IVsTextLayerMarker_GetBehavior(This,pdwBehavior)	\
    ( (This)->lpVtbl -> GetBehavior(This,pdwBehavior) ) 

#define IVsTextLayerMarker_SetBehavior(This,dwBehavior)	\
    ( (This)->lpVtbl -> SetBehavior(This,dwBehavior) ) 

#define IVsTextLayerMarker_GetPriorityIndex(This,piPriorityIndex)	\
    ( (This)->lpVtbl -> GetPriorityIndex(This,piPriorityIndex) ) 


#define IVsTextLayerMarker_GetTextLayer(This,ppLayer)	\
    ( (This)->lpVtbl -> GetTextLayer(This,ppLayer) ) 

#define IVsTextLayerMarker_ResetSpan(This,iStartLine,iStartIndex,iEndLine,iEndIndex)	\
    ( (This)->lpVtbl -> ResetSpan(This,iStartLine,iStartIndex,iEndLine,iEndIndex) ) 

#define IVsTextLayerMarker_GetCurrentSpan(This,pSpan)	\
    ( (This)->lpVtbl -> GetCurrentSpan(This,pSpan) ) 

#define IVsTextLayerMarker_IsInvalidated(This)	\
    ( (This)->lpVtbl -> IsInvalidated(This) ) 

#define IVsTextLayerMarker_QueryClientInterface(This,iid,ppClient)	\
    ( (This)->lpVtbl -> QueryClientInterface(This,iid,ppClient) ) 

#define IVsTextLayerMarker_DrawGlyphEx(This,dwFlags,hdc,pRect,iLineHeight)	\
    ( (This)->lpVtbl -> DrawGlyphEx(This,dwFlags,hdc,pRect,iLineHeight) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextLayerMarker_INTERFACE_DEFINED__ */


#ifndef __IVsTextMarkerType_INTERFACE_DEFINED__
#define __IVsTextMarkerType_INTERFACE_DEFINED__

/* interface IVsTextMarkerType */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextMarkerType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8C4A2B6E-6377-4C71-9940-FBA1BE6EDD6F")
    IVsTextMarkerType : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetVisualStyle( 
            /* [out] */ __RPC__out DWORD *pdwVisualFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultColors( 
            /* [out] */ __RPC__out COLORINDEX *piForeground,
            /* [out] */ __RPC__out COLORINDEX *piBackground) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultLineStyle( 
            /* [out] */ __RPC__out COLORINDEX *piLineColor,
            /* [out] */ __RPC__out LINESTYLE *piLineIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DrawGlyph( 
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBehaviorFlags( 
            /* [out] */ __RPC__out DWORD *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPriorityIndex( 
            /* [out] */ __RPC__out long *piPriorityIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DrawGlyphEx( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect,
            /* [in] */ long iLineHeight) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextMarkerTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextMarkerType * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextMarkerType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextMarkerType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetVisualStyle )( 
            IVsTextMarkerType * This,
            /* [out] */ __RPC__out DWORD *pdwVisualFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultColors )( 
            IVsTextMarkerType * This,
            /* [out] */ __RPC__out COLORINDEX *piForeground,
            /* [out] */ __RPC__out COLORINDEX *piBackground);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultLineStyle )( 
            IVsTextMarkerType * This,
            /* [out] */ __RPC__out COLORINDEX *piLineColor,
            /* [out] */ __RPC__out LINESTYLE *piLineIndex);
        
        HRESULT ( STDMETHODCALLTYPE *DrawGlyph )( 
            IVsTextMarkerType * This,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect);
        
        HRESULT ( STDMETHODCALLTYPE *GetBehaviorFlags )( 
            IVsTextMarkerType * This,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetPriorityIndex )( 
            IVsTextMarkerType * This,
            /* [out] */ __RPC__out long *piPriorityIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            IVsTextMarkerType * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        HRESULT ( STDMETHODCALLTYPE *DrawGlyphEx )( 
            IVsTextMarkerType * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect,
            /* [in] */ long iLineHeight);
        
        END_INTERFACE
    } IVsTextMarkerTypeVtbl;

    interface IVsTextMarkerType
    {
        CONST_VTBL struct IVsTextMarkerTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextMarkerType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextMarkerType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextMarkerType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextMarkerType_GetVisualStyle(This,pdwVisualFlags)	\
    ( (This)->lpVtbl -> GetVisualStyle(This,pdwVisualFlags) ) 

#define IVsTextMarkerType_GetDefaultColors(This,piForeground,piBackground)	\
    ( (This)->lpVtbl -> GetDefaultColors(This,piForeground,piBackground) ) 

#define IVsTextMarkerType_GetDefaultLineStyle(This,piLineColor,piLineIndex)	\
    ( (This)->lpVtbl -> GetDefaultLineStyle(This,piLineColor,piLineIndex) ) 

#define IVsTextMarkerType_DrawGlyph(This,hdc,pRect)	\
    ( (This)->lpVtbl -> DrawGlyph(This,hdc,pRect) ) 

#define IVsTextMarkerType_GetBehaviorFlags(This,pdwFlags)	\
    ( (This)->lpVtbl -> GetBehaviorFlags(This,pdwFlags) ) 

#define IVsTextMarkerType_GetPriorityIndex(This,piPriorityIndex)	\
    ( (This)->lpVtbl -> GetPriorityIndex(This,piPriorityIndex) ) 

#define IVsTextMarkerType_GetDisplayName(This,pbstrName)	\
    ( (This)->lpVtbl -> GetDisplayName(This,pbstrName) ) 

#define IVsTextMarkerType_DrawGlyphEx(This,dwFlags,hdc,pRect,iLineHeight)	\
    ( (This)->lpVtbl -> DrawGlyphEx(This,dwFlags,hdc,pRect,iLineHeight) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextMarkerType_INTERFACE_DEFINED__ */


#ifndef __IVsTextMarkerColorSet_INTERFACE_DEFINED__
#define __IVsTextMarkerColorSet_INTERFACE_DEFINED__

/* interface IVsTextMarkerColorSet */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextMarkerColorSet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("93373F76-DF07-46DB-9415-1772069F60A4")
    IVsTextMarkerColorSet : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMarkerColors( 
            /* [in] */ long iMarkerType,
            /* [out] */ __RPC__out COLORREF *pclrFore,
            /* [out] */ __RPC__out COLORREF *pclrBack) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextMarkerColorSetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextMarkerColorSet * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextMarkerColorSet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextMarkerColorSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerColors )( 
            IVsTextMarkerColorSet * This,
            /* [in] */ long iMarkerType,
            /* [out] */ __RPC__out COLORREF *pclrFore,
            /* [out] */ __RPC__out COLORREF *pclrBack);
        
        END_INTERFACE
    } IVsTextMarkerColorSetVtbl;

    interface IVsTextMarkerColorSet
    {
        CONST_VTBL struct IVsTextMarkerColorSetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextMarkerColorSet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextMarkerColorSet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextMarkerColorSet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextMarkerColorSet_GetMarkerColors(This,iMarkerType,pclrFore,pclrBack)	\
    ( (This)->lpVtbl -> GetMarkerColors(This,iMarkerType,pclrFore,pclrBack) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextMarkerColorSet_INTERFACE_DEFINED__ */


#ifndef __IVsPackageDefinedTextMarkerType_INTERFACE_DEFINED__
#define __IVsPackageDefinedTextMarkerType_INTERFACE_DEFINED__

/* interface IVsPackageDefinedTextMarkerType */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsPackageDefinedTextMarkerType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C70F1528-1A66-403F-AD42-F60F9D413E05")
    IVsPackageDefinedTextMarkerType : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetVisualStyle( 
            /* [out] */ __RPC__out DWORD *pdwVisualFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultColors( 
            /* [out] */ __RPC__out COLORINDEX *piForeground,
            /* [out] */ __RPC__out COLORINDEX *piBackground) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultLineStyle( 
            /* [out] */ __RPC__out COLORINDEX *piLineColor,
            /* [out] */ __RPC__out LINESTYLE *piLineIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultFontFlags( 
            /* [out] */ __RPC__out DWORD *pdwFontFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DrawGlyphWithColors( 
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect,
            /* [in] */ long iMarkerType,
            /* [in] */ __RPC__in_opt IVsTextMarkerColorSet *pMarkerColors,
            /* [in] */ DWORD dwGlyphDrawFlags,
            /* [in] */ long iLineHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBehaviorFlags( 
            /* [out] */ __RPC__out DWORD *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPriorityIndex( 
            /* [out] */ __RPC__out long *piPriorityIndex) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsPackageDefinedTextMarkerTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsPackageDefinedTextMarkerType * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsPackageDefinedTextMarkerType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsPackageDefinedTextMarkerType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetVisualStyle )( 
            IVsPackageDefinedTextMarkerType * This,
            /* [out] */ __RPC__out DWORD *pdwVisualFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultColors )( 
            IVsPackageDefinedTextMarkerType * This,
            /* [out] */ __RPC__out COLORINDEX *piForeground,
            /* [out] */ __RPC__out COLORINDEX *piBackground);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultLineStyle )( 
            IVsPackageDefinedTextMarkerType * This,
            /* [out] */ __RPC__out COLORINDEX *piLineColor,
            /* [out] */ __RPC__out LINESTYLE *piLineIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultFontFlags )( 
            IVsPackageDefinedTextMarkerType * This,
            /* [out] */ __RPC__out DWORD *pdwFontFlags);
        
        HRESULT ( STDMETHODCALLTYPE *DrawGlyphWithColors )( 
            IVsPackageDefinedTextMarkerType * This,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect,
            /* [in] */ long iMarkerType,
            /* [in] */ __RPC__in_opt IVsTextMarkerColorSet *pMarkerColors,
            /* [in] */ DWORD dwGlyphDrawFlags,
            /* [in] */ long iLineHeight);
        
        HRESULT ( STDMETHODCALLTYPE *GetBehaviorFlags )( 
            IVsPackageDefinedTextMarkerType * This,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetPriorityIndex )( 
            IVsPackageDefinedTextMarkerType * This,
            /* [out] */ __RPC__out long *piPriorityIndex);
        
        END_INTERFACE
    } IVsPackageDefinedTextMarkerTypeVtbl;

    interface IVsPackageDefinedTextMarkerType
    {
        CONST_VTBL struct IVsPackageDefinedTextMarkerTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsPackageDefinedTextMarkerType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsPackageDefinedTextMarkerType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsPackageDefinedTextMarkerType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsPackageDefinedTextMarkerType_GetVisualStyle(This,pdwVisualFlags)	\
    ( (This)->lpVtbl -> GetVisualStyle(This,pdwVisualFlags) ) 

#define IVsPackageDefinedTextMarkerType_GetDefaultColors(This,piForeground,piBackground)	\
    ( (This)->lpVtbl -> GetDefaultColors(This,piForeground,piBackground) ) 

#define IVsPackageDefinedTextMarkerType_GetDefaultLineStyle(This,piLineColor,piLineIndex)	\
    ( (This)->lpVtbl -> GetDefaultLineStyle(This,piLineColor,piLineIndex) ) 

#define IVsPackageDefinedTextMarkerType_GetDefaultFontFlags(This,pdwFontFlags)	\
    ( (This)->lpVtbl -> GetDefaultFontFlags(This,pdwFontFlags) ) 

#define IVsPackageDefinedTextMarkerType_DrawGlyphWithColors(This,hdc,pRect,iMarkerType,pMarkerColors,dwGlyphDrawFlags,iLineHeight)	\
    ( (This)->lpVtbl -> DrawGlyphWithColors(This,hdc,pRect,iMarkerType,pMarkerColors,dwGlyphDrawFlags,iLineHeight) ) 

#define IVsPackageDefinedTextMarkerType_GetBehaviorFlags(This,pdwFlags)	\
    ( (This)->lpVtbl -> GetBehaviorFlags(This,pdwFlags) ) 

#define IVsPackageDefinedTextMarkerType_GetPriorityIndex(This,piPriorityIndex)	\
    ( (This)->lpVtbl -> GetPriorityIndex(This,piPriorityIndex) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsPackageDefinedTextMarkerType_INTERFACE_DEFINED__ */


#ifndef __IVsTextMarkerTypeProvider_INTERFACE_DEFINED__
#define __IVsTextMarkerTypeProvider_INTERFACE_DEFINED__

/* interface IVsTextMarkerTypeProvider */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextMarkerTypeProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7EF86CFD-D561-4BA5-9F38-C1BFF588E3AC")
    IVsTextMarkerTypeProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTextMarkerType( 
            /* [in] */ __RPC__in GUID *pguidMarker,
            /* [out] */ __RPC__deref_out_opt IVsPackageDefinedTextMarkerType **ppMarkerType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextMarkerTypeProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextMarkerTypeProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextMarkerTypeProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextMarkerTypeProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTextMarkerType )( 
            IVsTextMarkerTypeProvider * This,
            /* [in] */ __RPC__in GUID *pguidMarker,
            /* [out] */ __RPC__deref_out_opt IVsPackageDefinedTextMarkerType **ppMarkerType);
        
        END_INTERFACE
    } IVsTextMarkerTypeProviderVtbl;

    interface IVsTextMarkerTypeProvider
    {
        CONST_VTBL struct IVsTextMarkerTypeProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextMarkerTypeProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextMarkerTypeProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextMarkerTypeProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextMarkerTypeProvider_GetTextMarkerType(This,pguidMarker,ppMarkerType)	\
    ( (This)->lpVtbl -> GetTextMarkerType(This,pguidMarker,ppMarkerType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextMarkerTypeProvider_INTERFACE_DEFINED__ */


#ifndef __IVsTextMarkerClient_INTERFACE_DEFINED__
#define __IVsTextMarkerClient_INTERFACE_DEFINED__

/* interface IVsTextMarkerClient */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextMarkerClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B1938F1B-D7A9-42F8-9960-D009027B3D2E")
    IVsTextMarkerClient : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE MarkerInvalidated( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTipText( 
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker,
            /* [optional][out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual void STDMETHODCALLTYPE OnBufferSave( 
            __RPC__in LPCOLESTR pszFileName) = 0;
        
        virtual void STDMETHODCALLTYPE OnBeforeBufferClose( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMarkerCommandInfo( 
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker,
            /* [in] */ long iItem,
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out DWORD *pcmdf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ExecMarkerCommand( 
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker,
            /* [in] */ long iItem) = 0;
        
        virtual void STDMETHODCALLTYPE OnAfterSpanReload( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnAfterMarkerChange( 
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextMarkerClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextMarkerClient * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextMarkerClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextMarkerClient * This);
        
        void ( STDMETHODCALLTYPE *MarkerInvalidated )( 
            IVsTextMarkerClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTipText )( 
            IVsTextMarkerClient * This,
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker,
            /* [optional][out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        void ( STDMETHODCALLTYPE *OnBufferSave )( 
            IVsTextMarkerClient * This,
            __RPC__in LPCOLESTR pszFileName);
        
        void ( STDMETHODCALLTYPE *OnBeforeBufferClose )( 
            IVsTextMarkerClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerCommandInfo )( 
            IVsTextMarkerClient * This,
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker,
            /* [in] */ long iItem,
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out DWORD *pcmdf);
        
        HRESULT ( STDMETHODCALLTYPE *ExecMarkerCommand )( 
            IVsTextMarkerClient * This,
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker,
            /* [in] */ long iItem);
        
        void ( STDMETHODCALLTYPE *OnAfterSpanReload )( 
            IVsTextMarkerClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnAfterMarkerChange )( 
            IVsTextMarkerClient * This,
            /* [in] */ __RPC__in_opt IVsTextMarker *pMarker);
        
        END_INTERFACE
    } IVsTextMarkerClientVtbl;

    interface IVsTextMarkerClient
    {
        CONST_VTBL struct IVsTextMarkerClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextMarkerClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextMarkerClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextMarkerClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextMarkerClient_MarkerInvalidated(This)	\
    ( (This)->lpVtbl -> MarkerInvalidated(This) ) 

#define IVsTextMarkerClient_GetTipText(This,pMarker,pbstrText)	\
    ( (This)->lpVtbl -> GetTipText(This,pMarker,pbstrText) ) 

#define IVsTextMarkerClient_OnBufferSave(This,pszFileName)	\
    ( (This)->lpVtbl -> OnBufferSave(This,pszFileName) ) 

#define IVsTextMarkerClient_OnBeforeBufferClose(This)	\
    ( (This)->lpVtbl -> OnBeforeBufferClose(This) ) 

#define IVsTextMarkerClient_GetMarkerCommandInfo(This,pMarker,iItem,pbstrText,pcmdf)	\
    ( (This)->lpVtbl -> GetMarkerCommandInfo(This,pMarker,iItem,pbstrText,pcmdf) ) 

#define IVsTextMarkerClient_ExecMarkerCommand(This,pMarker,iItem)	\
    ( (This)->lpVtbl -> ExecMarkerCommand(This,pMarker,iItem) ) 

#define IVsTextMarkerClient_OnAfterSpanReload(This)	\
    ( (This)->lpVtbl -> OnAfterSpanReload(This) ) 

#define IVsTextMarkerClient_OnAfterMarkerChange(This,pMarker)	\
    ( (This)->lpVtbl -> OnAfterMarkerChange(This,pMarker) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextMarkerClient_INTERFACE_DEFINED__ */


#ifndef __IVsMouseCursorProvider_INTERFACE_DEFINED__
#define __IVsMouseCursorProvider_INTERFACE_DEFINED__

/* interface IVsMouseCursorProvider */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsMouseCursorProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E32F08DB-6364-4276-8EA8-BAA6752F7807")
    IVsMouseCursorProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetMouseCursor( 
            /* [in] */ DWORD dwReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsMouseCursorProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsMouseCursorProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsMouseCursorProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsMouseCursorProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetMouseCursor )( 
            IVsMouseCursorProvider * This,
            /* [in] */ DWORD dwReserved);
        
        END_INTERFACE
    } IVsMouseCursorProviderVtbl;

    interface IVsMouseCursorProvider
    {
        CONST_VTBL struct IVsMouseCursorProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsMouseCursorProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsMouseCursorProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsMouseCursorProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsMouseCursorProvider_SetMouseCursor(This,dwReserved)	\
    ( (This)->lpVtbl -> SetMouseCursor(This,dwReserved) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsMouseCursorProvider_INTERFACE_DEFINED__ */


#ifndef __IVsTextMarkerGlyphDropHandler_INTERFACE_DEFINED__
#define __IVsTextMarkerGlyphDropHandler_INTERFACE_DEFINED__

/* interface IVsTextMarkerGlyphDropHandler */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextMarkerGlyphDropHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1E220776-3C20-46E9-A691-DE549C295E26")
    IVsTextMarkerGlyphDropHandler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE DrawCandidateOutlineGlyph( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect,
            /* [in] */ COLORREF clrref) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryDropLocation( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in_opt IVsTextView *pDestView,
            /* [in] */ __RPC__in_opt IVsTextLines *pDestBuffer,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__out DWORD *pdwDropResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DropAtLocation( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in_opt IVsTextView *pDestView,
            /* [in] */ __RPC__in_opt IVsTextLines *pDestBuffer,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__out DWORD *pdwDropResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextMarkerGlyphDropHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextMarkerGlyphDropHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextMarkerGlyphDropHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextMarkerGlyphDropHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *DrawCandidateOutlineGlyph )( 
            IVsTextMarkerGlyphDropHandler * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in RECT *pRect,
            /* [in] */ COLORREF clrref);
        
        HRESULT ( STDMETHODCALLTYPE *QueryDropLocation )( 
            IVsTextMarkerGlyphDropHandler * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in_opt IVsTextView *pDestView,
            /* [in] */ __RPC__in_opt IVsTextLines *pDestBuffer,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__out DWORD *pdwDropResult);
        
        HRESULT ( STDMETHODCALLTYPE *DropAtLocation )( 
            IVsTextMarkerGlyphDropHandler * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in_opt IVsTextView *pDestView,
            /* [in] */ __RPC__in_opt IVsTextLines *pDestBuffer,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__out DWORD *pdwDropResult);
        
        END_INTERFACE
    } IVsTextMarkerGlyphDropHandlerVtbl;

    interface IVsTextMarkerGlyphDropHandler
    {
        CONST_VTBL struct IVsTextMarkerGlyphDropHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextMarkerGlyphDropHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextMarkerGlyphDropHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextMarkerGlyphDropHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextMarkerGlyphDropHandler_DrawCandidateOutlineGlyph(This,dwReserved,hdc,pRect,clrref)	\
    ( (This)->lpVtbl -> DrawCandidateOutlineGlyph(This,dwReserved,hdc,pRect,clrref) ) 

#define IVsTextMarkerGlyphDropHandler_QueryDropLocation(This,dwReserved,pDestView,pDestBuffer,iLine,iIndex,pdwDropResult)	\
    ( (This)->lpVtbl -> QueryDropLocation(This,dwReserved,pDestView,pDestBuffer,iLine,iIndex,pdwDropResult) ) 

#define IVsTextMarkerGlyphDropHandler_DropAtLocation(This,dwReserved,pDestView,pDestBuffer,iLine,iIndex,pdwDropResult)	\
    ( (This)->lpVtbl -> DropAtLocation(This,dwReserved,pDestView,pDestBuffer,iLine,iIndex,pdwDropResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextMarkerGlyphDropHandler_INTERFACE_DEFINED__ */


#ifndef __IVsTextTrackingPoint_INTERFACE_DEFINED__
#define __IVsTextTrackingPoint_INTERFACE_DEFINED__

/* interface IVsTextTrackingPoint */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextTrackingPoint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D6BF0A8A-3798-49C5-8806-648A635EACC8")
    IVsTextTrackingPoint : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTextLayer( 
            /* [out] */ __RPC__deref_out_opt IVsTextLayer **ppLayer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentLineIndex( 
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBehavior( 
            /* [out] */ __RPC__out DWORD *pdwBehavior) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBehavior( 
            /* [in] */ DWORD dwBehavior) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextTrackingPointVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextTrackingPoint * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextTrackingPoint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextTrackingPoint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTextLayer )( 
            IVsTextTrackingPoint * This,
            /* [out] */ __RPC__deref_out_opt IVsTextLayer **ppLayer);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentLineIndex )( 
            IVsTextTrackingPoint * This,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetBehavior )( 
            IVsTextTrackingPoint * This,
            /* [out] */ __RPC__out DWORD *pdwBehavior);
        
        HRESULT ( STDMETHODCALLTYPE *SetBehavior )( 
            IVsTextTrackingPoint * This,
            /* [in] */ DWORD dwBehavior);
        
        END_INTERFACE
    } IVsTextTrackingPointVtbl;

    interface IVsTextTrackingPoint
    {
        CONST_VTBL struct IVsTextTrackingPointVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextTrackingPoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextTrackingPoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextTrackingPoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextTrackingPoint_GetTextLayer(This,ppLayer)	\
    ( (This)->lpVtbl -> GetTextLayer(This,ppLayer) ) 

#define IVsTextTrackingPoint_GetCurrentLineIndex(This,piLine,piIndex)	\
    ( (This)->lpVtbl -> GetCurrentLineIndex(This,piLine,piIndex) ) 

#define IVsTextTrackingPoint_GetBehavior(This,pdwBehavior)	\
    ( (This)->lpVtbl -> GetBehavior(This,pdwBehavior) ) 

#define IVsTextTrackingPoint_SetBehavior(This,dwBehavior)	\
    ( (This)->lpVtbl -> SetBehavior(This,dwBehavior) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextTrackingPoint_INTERFACE_DEFINED__ */


#ifndef __IVsFullTextScanner_INTERFACE_DEFINED__
#define __IVsFullTextScanner_INTERFACE_DEFINED__

/* interface IVsFullTextScanner */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsFullTextScanner;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BE93F7B1-F2FD-45B4-938D-1C66441CD421")
    IVsFullTextScanner : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OpenFullTextScan( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FullTextRead( 
            /* [out] */ __RPC__deref_out_opt const WCHAR **ppszText,
            /* [out] */ __RPC__out long *piLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseFullTextScan( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFullTextScannerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFullTextScanner * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFullTextScanner * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFullTextScanner * This);
        
        HRESULT ( STDMETHODCALLTYPE *OpenFullTextScan )( 
            IVsFullTextScanner * This);
        
        HRESULT ( STDMETHODCALLTYPE *FullTextRead )( 
            IVsFullTextScanner * This,
            /* [out] */ __RPC__deref_out_opt const WCHAR **ppszText,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *CloseFullTextScan )( 
            IVsFullTextScanner * This);
        
        END_INTERFACE
    } IVsFullTextScannerVtbl;

    interface IVsFullTextScanner
    {
        CONST_VTBL struct IVsFullTextScannerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFullTextScanner_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFullTextScanner_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFullTextScanner_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFullTextScanner_OpenFullTextScan(This)	\
    ( (This)->lpVtbl -> OpenFullTextScan(This) ) 

#define IVsFullTextScanner_FullTextRead(This,ppszText,piLength)	\
    ( (This)->lpVtbl -> FullTextRead(This,ppszText,piLength) ) 

#define IVsFullTextScanner_CloseFullTextScan(This)	\
    ( (This)->lpVtbl -> CloseFullTextScan(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFullTextScanner_INTERFACE_DEFINED__ */


#ifndef __IVsTextScanner_INTERFACE_DEFINED__
#define __IVsTextScanner_INTERFACE_DEFINED__

/* interface IVsTextScanner */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextScanner;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EBD73923-C190-45C1-91C5-0BC61A8AAB14")
    IVsTextScanner : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OpenScan( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Read( 
            /* [out] */ __RPC__deref_out_opt const WCHAR **ppszText,
            /* [out] */ __RPC__out long *piLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseScan( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextScannerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextScanner * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextScanner * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextScanner * This);
        
        HRESULT ( STDMETHODCALLTYPE *OpenScan )( 
            IVsTextScanner * This);
        
        HRESULT ( STDMETHODCALLTYPE *Read )( 
            IVsTextScanner * This,
            /* [out] */ __RPC__deref_out_opt const WCHAR **ppszText,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *CloseScan )( 
            IVsTextScanner * This);
        
        END_INTERFACE
    } IVsTextScannerVtbl;

    interface IVsTextScanner
    {
        CONST_VTBL struct IVsTextScannerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextScanner_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextScanner_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextScanner_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextScanner_OpenScan(This)	\
    ( (This)->lpVtbl -> OpenScan(This) ) 

#define IVsTextScanner_Read(This,ppszText,piLength)	\
    ( (This)->lpVtbl -> Read(This,ppszText,piLength) ) 

#define IVsTextScanner_CloseScan(This)	\
    ( (This)->lpVtbl -> CloseScan(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextScanner_INTERFACE_DEFINED__ */


#ifndef __IVsTextFind_INTERFACE_DEFINED__
#define __IVsTextFind_INTERFACE_DEFINED__

/* interface IVsTextFind */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextFind;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0BF16544-9CEC-40E1-80B1-E467E21B97FE")
    IVsTextFind : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ long iFlags,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piCol) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextFindVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextFind * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextFind * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextFind * This);
        
        HRESULT ( STDMETHODCALLTYPE *Find )( 
            IVsTextFind * This,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ long iFlags,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piCol);
        
        END_INTERFACE
    } IVsTextFindVtbl;

    interface IVsTextFind
    {
        CONST_VTBL struct IVsTextFindVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextFind_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextFind_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextFind_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextFind_Find(This,pszText,iStartLine,iStartIndex,iEndLine,iEndIndex,iFlags,piLine,piCol)	\
    ( (This)->lpVtbl -> Find(This,pszText,iStartLine,iStartIndex,iEndLine,iEndIndex,iFlags,piLine,piCol) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextFind_INTERFACE_DEFINED__ */


#ifndef __IVsTextBufferEvents_INTERFACE_DEFINED__
#define __IVsTextBufferEvents_INTERFACE_DEFINED__

/* interface IVsTextBufferEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextBufferEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("44B0CAB3-6DF8-4931-9064-8FD18AFBC88E")
    IVsTextBufferEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnNewLanguageService( 
            /* [in] */ __RPC__in REFGUID sidLangServiceID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextBufferEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextBufferEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextBufferEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextBufferEvents * This);
        
        void ( STDMETHODCALLTYPE *OnNewLanguageService )( 
            IVsTextBufferEvents * This,
            /* [in] */ __RPC__in REFGUID sidLangServiceID);
        
        END_INTERFACE
    } IVsTextBufferEventsVtbl;

    interface IVsTextBufferEvents
    {
        CONST_VTBL struct IVsTextBufferEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextBufferEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextBufferEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextBufferEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextBufferEvents_OnNewLanguageService(This,sidLangServiceID)	\
    ( (This)->lpVtbl -> OnNewLanguageService(This,sidLangServiceID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextBufferEvents_INTERFACE_DEFINED__ */


#ifndef __IVsTextBufferDataEvents_INTERFACE_DEFINED__
#define __IVsTextBufferDataEvents_INTERFACE_DEFINED__

/* interface IVsTextBufferDataEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextBufferDataEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B7515E7A-70F0-44ED-96B7-FB7EB6450C10")
    IVsTextBufferDataEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnFileChanged( 
            /* [in] */ DWORD grfChange,
            /* [in] */ DWORD dwFileAttrs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnLoadCompleted( 
            /* [in] */ BOOL fReload) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextBufferDataEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextBufferDataEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextBufferDataEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextBufferDataEvents * This);
        
        void ( STDMETHODCALLTYPE *OnFileChanged )( 
            IVsTextBufferDataEvents * This,
            /* [in] */ DWORD grfChange,
            /* [in] */ DWORD dwFileAttrs);
        
        HRESULT ( STDMETHODCALLTYPE *OnLoadCompleted )( 
            IVsTextBufferDataEvents * This,
            /* [in] */ BOOL fReload);
        
        END_INTERFACE
    } IVsTextBufferDataEventsVtbl;

    interface IVsTextBufferDataEvents
    {
        CONST_VTBL struct IVsTextBufferDataEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextBufferDataEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextBufferDataEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextBufferDataEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextBufferDataEvents_OnFileChanged(This,grfChange,dwFileAttrs)	\
    ( (This)->lpVtbl -> OnFileChanged(This,grfChange,dwFileAttrs) ) 

#define IVsTextBufferDataEvents_OnLoadCompleted(This,fReload)	\
    ( (This)->lpVtbl -> OnLoadCompleted(This,fReload) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextBufferDataEvents_INTERFACE_DEFINED__ */


#ifndef __IVsTextStreamEvents_INTERFACE_DEFINED__
#define __IVsTextStreamEvents_INTERFACE_DEFINED__

/* interface IVsTextStreamEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextStreamEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("96FC7D44-BCDD-4F00-AE4D-07E26B2C0E52")
    IVsTextStreamEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnChangeStreamText( 
            /* [in] */ long iPos,
            /* [in] */ long iOldLen,
            /* [in] */ long iNewLen,
            /* [in] */ BOOL fLast) = 0;
        
        virtual void STDMETHODCALLTYPE OnChangeStreamAttributes( 
            /* [in] */ long iPos,
            /* [in] */ long iLength) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextStreamEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextStreamEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextStreamEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextStreamEvents * This);
        
        void ( STDMETHODCALLTYPE *OnChangeStreamText )( 
            IVsTextStreamEvents * This,
            /* [in] */ long iPos,
            /* [in] */ long iOldLen,
            /* [in] */ long iNewLen,
            /* [in] */ BOOL fLast);
        
        void ( STDMETHODCALLTYPE *OnChangeStreamAttributes )( 
            IVsTextStreamEvents * This,
            /* [in] */ long iPos,
            /* [in] */ long iLength);
        
        END_INTERFACE
    } IVsTextStreamEventsVtbl;

    interface IVsTextStreamEvents
    {
        CONST_VTBL struct IVsTextStreamEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextStreamEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextStreamEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextStreamEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextStreamEvents_OnChangeStreamText(This,iPos,iOldLen,iNewLen,fLast)	\
    ( (This)->lpVtbl -> OnChangeStreamText(This,iPos,iOldLen,iNewLen,fLast) ) 

#define IVsTextStreamEvents_OnChangeStreamAttributes(This,iPos,iLength)	\
    ( (This)->lpVtbl -> OnChangeStreamAttributes(This,iPos,iLength) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextStreamEvents_INTERFACE_DEFINED__ */


#ifndef __IVsSplitPane_INTERFACE_DEFINED__
#define __IVsSplitPane_INTERFACE_DEFINED__

/* interface IVsSplitPane */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsSplitPane;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("721D4D8E-E987-4712-B878-88A0E7DBA117")
    IVsSplitPane : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetParentSplitter( 
            /* [in] */ __RPC__in_opt IVsSplitter *pSplitter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParentSplitter( 
            /* [out] */ __RPC__deref_out_opt IVsSplitter **ppSplitter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFocus( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPosition( 
            /* [in] */ long iLeft,
            /* [in] */ long iTop,
            /* [in] */ long iRight,
            /* [in] */ long iBottom) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ __RPC__out long *piLeft,
            /* [out] */ __RPC__out long *piTop,
            /* [out] */ __RPC__out long *piRight,
            /* [out] */ __RPC__out long *piBottom) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSizeExtents( 
            /* [out] */ __RPC__out long *piMinHorz,
            /* [out] */ __RPC__out long *piMaxHorz,
            /* [out] */ __RPC__out long *piMinVert,
            /* [out] */ __RPC__out long *piMaxVert) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParentWindow( 
            /* [out] */ __RPC__deref_out_opt HWND *phwndParent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPaneFlags( 
            /* [out] */ __RPC__out DWORD *pdwPaneFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ClosePane( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NotifyPane( 
            /* [in] */ SPLITNOTIFYCODE iCode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DetachPane( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsSplitPaneVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsSplitPane * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsSplitPane * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsSplitPane * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetParentSplitter )( 
            IVsSplitPane * This,
            /* [in] */ __RPC__in_opt IVsSplitter *pSplitter);
        
        HRESULT ( STDMETHODCALLTYPE *GetParentSplitter )( 
            IVsSplitPane * This,
            /* [out] */ __RPC__deref_out_opt IVsSplitter **ppSplitter);
        
        HRESULT ( STDMETHODCALLTYPE *SetFocus )( 
            IVsSplitPane * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetPosition )( 
            IVsSplitPane * This,
            /* [in] */ long iLeft,
            /* [in] */ long iTop,
            /* [in] */ long iRight,
            /* [in] */ long iBottom);
        
        HRESULT ( STDMETHODCALLTYPE *GetPosition )( 
            IVsSplitPane * This,
            /* [out] */ __RPC__out long *piLeft,
            /* [out] */ __RPC__out long *piTop,
            /* [out] */ __RPC__out long *piRight,
            /* [out] */ __RPC__out long *piBottom);
        
        HRESULT ( STDMETHODCALLTYPE *GetSizeExtents )( 
            IVsSplitPane * This,
            /* [out] */ __RPC__out long *piMinHorz,
            /* [out] */ __RPC__out long *piMaxHorz,
            /* [out] */ __RPC__out long *piMinVert,
            /* [out] */ __RPC__out long *piMaxVert);
        
        HRESULT ( STDMETHODCALLTYPE *GetParentWindow )( 
            IVsSplitPane * This,
            /* [out] */ __RPC__deref_out_opt HWND *phwndParent);
        
        HRESULT ( STDMETHODCALLTYPE *GetPaneFlags )( 
            IVsSplitPane * This,
            /* [out] */ __RPC__out DWORD *pdwPaneFlags);
        
        HRESULT ( STDMETHODCALLTYPE *ClosePane )( 
            IVsSplitPane * This);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyPane )( 
            IVsSplitPane * This,
            /* [in] */ SPLITNOTIFYCODE iCode);
        
        HRESULT ( STDMETHODCALLTYPE *DetachPane )( 
            IVsSplitPane * This);
        
        END_INTERFACE
    } IVsSplitPaneVtbl;

    interface IVsSplitPane
    {
        CONST_VTBL struct IVsSplitPaneVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsSplitPane_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsSplitPane_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsSplitPane_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsSplitPane_SetParentSplitter(This,pSplitter)	\
    ( (This)->lpVtbl -> SetParentSplitter(This,pSplitter) ) 

#define IVsSplitPane_GetParentSplitter(This,ppSplitter)	\
    ( (This)->lpVtbl -> GetParentSplitter(This,ppSplitter) ) 

#define IVsSplitPane_SetFocus(This)	\
    ( (This)->lpVtbl -> SetFocus(This) ) 

#define IVsSplitPane_SetPosition(This,iLeft,iTop,iRight,iBottom)	\
    ( (This)->lpVtbl -> SetPosition(This,iLeft,iTop,iRight,iBottom) ) 

#define IVsSplitPane_GetPosition(This,piLeft,piTop,piRight,piBottom)	\
    ( (This)->lpVtbl -> GetPosition(This,piLeft,piTop,piRight,piBottom) ) 

#define IVsSplitPane_GetSizeExtents(This,piMinHorz,piMaxHorz,piMinVert,piMaxVert)	\
    ( (This)->lpVtbl -> GetSizeExtents(This,piMinHorz,piMaxHorz,piMinVert,piMaxVert) ) 

#define IVsSplitPane_GetParentWindow(This,phwndParent)	\
    ( (This)->lpVtbl -> GetParentWindow(This,phwndParent) ) 

#define IVsSplitPane_GetPaneFlags(This,pdwPaneFlags)	\
    ( (This)->lpVtbl -> GetPaneFlags(This,pdwPaneFlags) ) 

#define IVsSplitPane_ClosePane(This)	\
    ( (This)->lpVtbl -> ClosePane(This) ) 

#define IVsSplitPane_NotifyPane(This,iCode)	\
    ( (This)->lpVtbl -> NotifyPane(This,iCode) ) 

#define IVsSplitPane_DetachPane(This)	\
    ( (This)->lpVtbl -> DetachPane(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsSplitPane_INTERFACE_DEFINED__ */


#ifndef __IVsSplitter_INTERFACE_DEFINED__
#define __IVsSplitter_INTERFACE_DEFINED__

/* interface IVsSplitter */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsSplitter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("66280096-A495-48E9-8AF4-E758FDE1FCDC")
    IVsSplitter : public IVsSplitPane
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPane( 
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt IVsSplitPane **ppPane) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NotifySplitter( 
            /* [in] */ __RPC__in_opt IVsSplitPane *pPane,
            /* [in] */ PANEEVENTS iEvent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsPanePrimary( 
            /* [in] */ __RPC__in_opt IVsSplitPane *pPane) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HandleMessage( 
            /* [in] */ UINT iMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SplitPane( 
            /* [in] */ __RPC__in_opt IVsSplitPane *pNewPane,
            /* [in] */ long iIndex,
            /* [in] */ long iSize,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsSplitter **ppSplitter) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsSplitterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsSplitter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsSplitter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsSplitter * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetParentSplitter )( 
            IVsSplitter * This,
            /* [in] */ __RPC__in_opt IVsSplitter *pSplitter);
        
        HRESULT ( STDMETHODCALLTYPE *GetParentSplitter )( 
            IVsSplitter * This,
            /* [out] */ __RPC__deref_out_opt IVsSplitter **ppSplitter);
        
        HRESULT ( STDMETHODCALLTYPE *SetFocus )( 
            IVsSplitter * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetPosition )( 
            IVsSplitter * This,
            /* [in] */ long iLeft,
            /* [in] */ long iTop,
            /* [in] */ long iRight,
            /* [in] */ long iBottom);
        
        HRESULT ( STDMETHODCALLTYPE *GetPosition )( 
            IVsSplitter * This,
            /* [out] */ __RPC__out long *piLeft,
            /* [out] */ __RPC__out long *piTop,
            /* [out] */ __RPC__out long *piRight,
            /* [out] */ __RPC__out long *piBottom);
        
        HRESULT ( STDMETHODCALLTYPE *GetSizeExtents )( 
            IVsSplitter * This,
            /* [out] */ __RPC__out long *piMinHorz,
            /* [out] */ __RPC__out long *piMaxHorz,
            /* [out] */ __RPC__out long *piMinVert,
            /* [out] */ __RPC__out long *piMaxVert);
        
        HRESULT ( STDMETHODCALLTYPE *GetParentWindow )( 
            IVsSplitter * This,
            /* [out] */ __RPC__deref_out_opt HWND *phwndParent);
        
        HRESULT ( STDMETHODCALLTYPE *GetPaneFlags )( 
            IVsSplitter * This,
            /* [out] */ __RPC__out DWORD *pdwPaneFlags);
        
        HRESULT ( STDMETHODCALLTYPE *ClosePane )( 
            IVsSplitter * This);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyPane )( 
            IVsSplitter * This,
            /* [in] */ SPLITNOTIFYCODE iCode);
        
        HRESULT ( STDMETHODCALLTYPE *DetachPane )( 
            IVsSplitter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetPane )( 
            IVsSplitter * This,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt IVsSplitPane **ppPane);
        
        HRESULT ( STDMETHODCALLTYPE *NotifySplitter )( 
            IVsSplitter * This,
            /* [in] */ __RPC__in_opt IVsSplitPane *pPane,
            /* [in] */ PANEEVENTS iEvent);
        
        HRESULT ( STDMETHODCALLTYPE *IsPanePrimary )( 
            IVsSplitter * This,
            /* [in] */ __RPC__in_opt IVsSplitPane *pPane);
        
        HRESULT ( STDMETHODCALLTYPE *HandleMessage )( 
            IVsSplitter * This,
            /* [in] */ UINT iMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam);
        
        HRESULT ( STDMETHODCALLTYPE *SplitPane )( 
            IVsSplitter * This,
            /* [in] */ __RPC__in_opt IVsSplitPane *pNewPane,
            /* [in] */ long iIndex,
            /* [in] */ long iSize,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsSplitter **ppSplitter);
        
        END_INTERFACE
    } IVsSplitterVtbl;

    interface IVsSplitter
    {
        CONST_VTBL struct IVsSplitterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsSplitter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsSplitter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsSplitter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsSplitter_SetParentSplitter(This,pSplitter)	\
    ( (This)->lpVtbl -> SetParentSplitter(This,pSplitter) ) 

#define IVsSplitter_GetParentSplitter(This,ppSplitter)	\
    ( (This)->lpVtbl -> GetParentSplitter(This,ppSplitter) ) 

#define IVsSplitter_SetFocus(This)	\
    ( (This)->lpVtbl -> SetFocus(This) ) 

#define IVsSplitter_SetPosition(This,iLeft,iTop,iRight,iBottom)	\
    ( (This)->lpVtbl -> SetPosition(This,iLeft,iTop,iRight,iBottom) ) 

#define IVsSplitter_GetPosition(This,piLeft,piTop,piRight,piBottom)	\
    ( (This)->lpVtbl -> GetPosition(This,piLeft,piTop,piRight,piBottom) ) 

#define IVsSplitter_GetSizeExtents(This,piMinHorz,piMaxHorz,piMinVert,piMaxVert)	\
    ( (This)->lpVtbl -> GetSizeExtents(This,piMinHorz,piMaxHorz,piMinVert,piMaxVert) ) 

#define IVsSplitter_GetParentWindow(This,phwndParent)	\
    ( (This)->lpVtbl -> GetParentWindow(This,phwndParent) ) 

#define IVsSplitter_GetPaneFlags(This,pdwPaneFlags)	\
    ( (This)->lpVtbl -> GetPaneFlags(This,pdwPaneFlags) ) 

#define IVsSplitter_ClosePane(This)	\
    ( (This)->lpVtbl -> ClosePane(This) ) 

#define IVsSplitter_NotifyPane(This,iCode)	\
    ( (This)->lpVtbl -> NotifyPane(This,iCode) ) 

#define IVsSplitter_DetachPane(This)	\
    ( (This)->lpVtbl -> DetachPane(This) ) 


#define IVsSplitter_GetPane(This,iIndex,ppPane)	\
    ( (This)->lpVtbl -> GetPane(This,iIndex,ppPane) ) 

#define IVsSplitter_NotifySplitter(This,pPane,iEvent)	\
    ( (This)->lpVtbl -> NotifySplitter(This,pPane,iEvent) ) 

#define IVsSplitter_IsPanePrimary(This,pPane)	\
    ( (This)->lpVtbl -> IsPanePrimary(This,pPane) ) 

#define IVsSplitter_HandleMessage(This,iMsg,wParam,lParam)	\
    ( (This)->lpVtbl -> HandleMessage(This,iMsg,wParam,lParam) ) 

#define IVsSplitter_SplitPane(This,pNewPane,iIndex,iSize,dwFlags,ppSplitter)	\
    ( (This)->lpVtbl -> SplitPane(This,pNewPane,iIndex,iSize,dwFlags,ppSplitter) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsSplitter_INTERFACE_DEFINED__ */


#ifndef __IVsSplitRoot_INTERFACE_DEFINED__
#define __IVsSplitRoot_INTERFACE_DEFINED__

/* interface IVsSplitRoot */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsSplitRoot;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5486C948-AF82-4DA5-A968-97F3ADA66670")
    IVsSplitRoot : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetRootSplitter( 
            /* [out] */ __RPC__deref_out_opt IVsSplitter **ppPane) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWindowHandle( 
            /* [out] */ __RPC__deref_out_opt HWND *phwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPane( 
            /* [in] */ PANETYPE paneType,
            /* [out] */ __RPC__deref_out_opt IVsSplitPane **ppPane) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsSplitRootVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsSplitRoot * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsSplitRoot * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsSplitRoot * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetRootSplitter )( 
            IVsSplitRoot * This,
            /* [out] */ __RPC__deref_out_opt IVsSplitter **ppPane);
        
        HRESULT ( STDMETHODCALLTYPE *GetWindowHandle )( 
            IVsSplitRoot * This,
            /* [out] */ __RPC__deref_out_opt HWND *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE *GetPane )( 
            IVsSplitRoot * This,
            /* [in] */ PANETYPE paneType,
            /* [out] */ __RPC__deref_out_opt IVsSplitPane **ppPane);
        
        END_INTERFACE
    } IVsSplitRootVtbl;

    interface IVsSplitRoot
    {
        CONST_VTBL struct IVsSplitRootVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsSplitRoot_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsSplitRoot_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsSplitRoot_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsSplitRoot_GetRootSplitter(This,ppPane)	\
    ( (This)->lpVtbl -> GetRootSplitter(This,ppPane) ) 

#define IVsSplitRoot_GetWindowHandle(This,phwnd)	\
    ( (This)->lpVtbl -> GetWindowHandle(This,phwnd) ) 

#define IVsSplitRoot_GetPane(This,paneType,ppPane)	\
    ( (This)->lpVtbl -> GetPane(This,paneType,ppPane) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsSplitRoot_INTERFACE_DEFINED__ */


#ifndef __IVsCodeWindow_INTERFACE_DEFINED__
#define __IVsCodeWindow_INTERFACE_DEFINED__

/* interface IVsCodeWindow */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCodeWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8560CECD-DFAC-4F7B-9D2A-E6D9810F3443")
    IVsCodeWindow : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetBuffer( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBuffer( 
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPrimaryView( 
            /* [out] */ __RPC__deref_out_opt IVsTextView **ppView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSecondaryView( 
            /* [out] */ __RPC__deref_out_opt IVsTextView **ppView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetViewClassID( 
            /* [in] */ __RPC__in REFCLSID clsidView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetViewClassID( 
            /* [out] */ __RPC__out CLSID *pclsidView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBaseEditorCaption( 
            /* [in] */ __RPC__deref_in_opt LPCOLESTR *pszBaseEditorCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEditorCaption( 
            /* [in] */ READONLYSTATUS dwReadOnly,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEditorCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLastActiveView( 
            /* [out] */ __RPC__deref_out_opt IVsTextView **ppView) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCodeWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCodeWindow * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCodeWindow * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCodeWindow * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetBuffer )( 
            IVsCodeWindow * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( 
            IVsCodeWindow * This,
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *GetPrimaryView )( 
            IVsCodeWindow * This,
            /* [out] */ __RPC__deref_out_opt IVsTextView **ppView);
        
        HRESULT ( STDMETHODCALLTYPE *GetSecondaryView )( 
            IVsCodeWindow * This,
            /* [out] */ __RPC__deref_out_opt IVsTextView **ppView);
        
        HRESULT ( STDMETHODCALLTYPE *SetViewClassID )( 
            IVsCodeWindow * This,
            /* [in] */ __RPC__in REFCLSID clsidView);
        
        HRESULT ( STDMETHODCALLTYPE *GetViewClassID )( 
            IVsCodeWindow * This,
            /* [out] */ __RPC__out CLSID *pclsidView);
        
        HRESULT ( STDMETHODCALLTYPE *SetBaseEditorCaption )( 
            IVsCodeWindow * This,
            /* [in] */ __RPC__deref_in_opt LPCOLESTR *pszBaseEditorCaption);
        
        HRESULT ( STDMETHODCALLTYPE *GetEditorCaption )( 
            IVsCodeWindow * This,
            /* [in] */ READONLYSTATUS dwReadOnly,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrEditorCaption);
        
        HRESULT ( STDMETHODCALLTYPE *Close )( 
            IVsCodeWindow * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetLastActiveView )( 
            IVsCodeWindow * This,
            /* [out] */ __RPC__deref_out_opt IVsTextView **ppView);
        
        END_INTERFACE
    } IVsCodeWindowVtbl;

    interface IVsCodeWindow
    {
        CONST_VTBL struct IVsCodeWindowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCodeWindow_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCodeWindow_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCodeWindow_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCodeWindow_SetBuffer(This,pBuffer)	\
    ( (This)->lpVtbl -> SetBuffer(This,pBuffer) ) 

#define IVsCodeWindow_GetBuffer(This,ppBuffer)	\
    ( (This)->lpVtbl -> GetBuffer(This,ppBuffer) ) 

#define IVsCodeWindow_GetPrimaryView(This,ppView)	\
    ( (This)->lpVtbl -> GetPrimaryView(This,ppView) ) 

#define IVsCodeWindow_GetSecondaryView(This,ppView)	\
    ( (This)->lpVtbl -> GetSecondaryView(This,ppView) ) 

#define IVsCodeWindow_SetViewClassID(This,clsidView)	\
    ( (This)->lpVtbl -> SetViewClassID(This,clsidView) ) 

#define IVsCodeWindow_GetViewClassID(This,pclsidView)	\
    ( (This)->lpVtbl -> GetViewClassID(This,pclsidView) ) 

#define IVsCodeWindow_SetBaseEditorCaption(This,pszBaseEditorCaption)	\
    ( (This)->lpVtbl -> SetBaseEditorCaption(This,pszBaseEditorCaption) ) 

#define IVsCodeWindow_GetEditorCaption(This,dwReadOnly,pbstrEditorCaption)	\
    ( (This)->lpVtbl -> GetEditorCaption(This,dwReadOnly,pbstrEditorCaption) ) 

#define IVsCodeWindow_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#define IVsCodeWindow_GetLastActiveView(This,ppView)	\
    ( (This)->lpVtbl -> GetLastActiveView(This,ppView) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCodeWindow_INTERFACE_DEFINED__ */


#ifndef __IVsCodeWindowManager_INTERFACE_DEFINED__
#define __IVsCodeWindowManager_INTERFACE_DEFINED__

/* interface IVsCodeWindowManager */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCodeWindowManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4758CB90-6110-4440-B577-2E3FC91E4B84")
    IVsCodeWindowManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddAdornments( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAdornments( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnNewView( 
            /* [in] */ __RPC__in_opt IVsTextView *pView) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCodeWindowManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCodeWindowManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCodeWindowManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCodeWindowManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddAdornments )( 
            IVsCodeWindowManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAdornments )( 
            IVsCodeWindowManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnNewView )( 
            IVsCodeWindowManager * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView);
        
        END_INTERFACE
    } IVsCodeWindowManagerVtbl;

    interface IVsCodeWindowManager
    {
        CONST_VTBL struct IVsCodeWindowManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCodeWindowManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCodeWindowManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCodeWindowManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCodeWindowManager_AddAdornments(This)	\
    ( (This)->lpVtbl -> AddAdornments(This) ) 

#define IVsCodeWindowManager_RemoveAdornments(This)	\
    ( (This)->lpVtbl -> RemoveAdornments(This) ) 

#define IVsCodeWindowManager_OnNewView(This,pView)	\
    ( (This)->lpVtbl -> OnNewView(This,pView) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCodeWindowManager_INTERFACE_DEFINED__ */


#ifndef __IVsDropdownBarClient_INTERFACE_DEFINED__
#define __IVsDropdownBarClient_INTERFACE_DEFINED__

/* interface IVsDropdownBarClient */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsDropdownBarClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AEE77BDD-05C8-4DE1-B48E-1B003F49ACB7")
    IVsDropdownBarClient : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetDropdownBar( 
            /* [in] */ __RPC__in_opt IVsDropdownBar *pDropdownBar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetComboAttributes( 
            /* [in] */ long iCombo,
            /* [out] */ __RPC__out ULONG *pcEntries,
            /* [out] */ __RPC__out ULONG *puEntryType,
            /* [out] */ __RPC__deref_out_opt HANDLE *phImageList) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEntryText( 
            /* [in] */ long iCombo,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt WCHAR **ppszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEntryAttributes( 
            /* [in] */ long iCombo,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__out ULONG *pAttr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEntryImage( 
            /* [in] */ long iCombo,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__out long *piImageIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnItemSelected( 
            /* [in] */ long iCombo,
            /* [in] */ long iIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnItemChosen( 
            /* [in] */ long iCombo,
            /* [in] */ long iIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnComboGetFocus( 
            /* [in] */ long iCombo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetComboTipText( 
            /* [in] */ long iCombo,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsDropdownBarClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsDropdownBarClient * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsDropdownBarClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsDropdownBarClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetDropdownBar )( 
            IVsDropdownBarClient * This,
            /* [in] */ __RPC__in_opt IVsDropdownBar *pDropdownBar);
        
        HRESULT ( STDMETHODCALLTYPE *GetComboAttributes )( 
            IVsDropdownBarClient * This,
            /* [in] */ long iCombo,
            /* [out] */ __RPC__out ULONG *pcEntries,
            /* [out] */ __RPC__out ULONG *puEntryType,
            /* [out] */ __RPC__deref_out_opt HANDLE *phImageList);
        
        HRESULT ( STDMETHODCALLTYPE *GetEntryText )( 
            IVsDropdownBarClient * This,
            /* [in] */ long iCombo,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__deref_out_opt WCHAR **ppszText);
        
        HRESULT ( STDMETHODCALLTYPE *GetEntryAttributes )( 
            IVsDropdownBarClient * This,
            /* [in] */ long iCombo,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__out ULONG *pAttr);
        
        HRESULT ( STDMETHODCALLTYPE *GetEntryImage )( 
            IVsDropdownBarClient * This,
            /* [in] */ long iCombo,
            /* [in] */ long iIndex,
            /* [out] */ __RPC__out long *piImageIndex);
        
        HRESULT ( STDMETHODCALLTYPE *OnItemSelected )( 
            IVsDropdownBarClient * This,
            /* [in] */ long iCombo,
            /* [in] */ long iIndex);
        
        HRESULT ( STDMETHODCALLTYPE *OnItemChosen )( 
            IVsDropdownBarClient * This,
            /* [in] */ long iCombo,
            /* [in] */ long iIndex);
        
        HRESULT ( STDMETHODCALLTYPE *OnComboGetFocus )( 
            IVsDropdownBarClient * This,
            /* [in] */ long iCombo);
        
        HRESULT ( STDMETHODCALLTYPE *GetComboTipText )( 
            IVsDropdownBarClient * This,
            /* [in] */ long iCombo,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        END_INTERFACE
    } IVsDropdownBarClientVtbl;

    interface IVsDropdownBarClient
    {
        CONST_VTBL struct IVsDropdownBarClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsDropdownBarClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsDropdownBarClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsDropdownBarClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsDropdownBarClient_SetDropdownBar(This,pDropdownBar)	\
    ( (This)->lpVtbl -> SetDropdownBar(This,pDropdownBar) ) 

#define IVsDropdownBarClient_GetComboAttributes(This,iCombo,pcEntries,puEntryType,phImageList)	\
    ( (This)->lpVtbl -> GetComboAttributes(This,iCombo,pcEntries,puEntryType,phImageList) ) 

#define IVsDropdownBarClient_GetEntryText(This,iCombo,iIndex,ppszText)	\
    ( (This)->lpVtbl -> GetEntryText(This,iCombo,iIndex,ppszText) ) 

#define IVsDropdownBarClient_GetEntryAttributes(This,iCombo,iIndex,pAttr)	\
    ( (This)->lpVtbl -> GetEntryAttributes(This,iCombo,iIndex,pAttr) ) 

#define IVsDropdownBarClient_GetEntryImage(This,iCombo,iIndex,piImageIndex)	\
    ( (This)->lpVtbl -> GetEntryImage(This,iCombo,iIndex,piImageIndex) ) 

#define IVsDropdownBarClient_OnItemSelected(This,iCombo,iIndex)	\
    ( (This)->lpVtbl -> OnItemSelected(This,iCombo,iIndex) ) 

#define IVsDropdownBarClient_OnItemChosen(This,iCombo,iIndex)	\
    ( (This)->lpVtbl -> OnItemChosen(This,iCombo,iIndex) ) 

#define IVsDropdownBarClient_OnComboGetFocus(This,iCombo)	\
    ( (This)->lpVtbl -> OnComboGetFocus(This,iCombo) ) 

#define IVsDropdownBarClient_GetComboTipText(This,iCombo,pbstrText)	\
    ( (This)->lpVtbl -> GetComboTipText(This,iCombo,pbstrText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsDropdownBarClient_INTERFACE_DEFINED__ */


#ifndef __IVsDropdownBar_INTERFACE_DEFINED__
#define __IVsDropdownBar_INTERFACE_DEFINED__

/* interface IVsDropdownBar */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsDropdownBar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D7820968-4CF8-4760-B633-570282E5F66D")
    IVsDropdownBar : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Attach( 
            /* [in] */ __RPC__in HWND hwndParent,
            /* [in] */ long cCombos,
            /* [in] */ __RPC__in_opt IVsDropdownBarClient *pClient) = 0;
        
        virtual void STDMETHODCALLTYPE Detach( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentSelection( 
            /* [in] */ long iCombo,
            /* [out] */ __RPC__out long *piCurSel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RefreshCombo( 
            /* [in] */ long iCombo,
            /* [in] */ long iNewSelection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClient( 
            /* [out] */ __RPC__deref_out_opt IVsDropdownBarClient **ppClient) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCurrentSelection( 
            /* [in] */ long iCombo,
            /* [in] */ long iNewSelection) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsDropdownBarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsDropdownBar * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsDropdownBar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsDropdownBar * This);
        
        HRESULT ( STDMETHODCALLTYPE *Attach )( 
            IVsDropdownBar * This,
            /* [in] */ __RPC__in HWND hwndParent,
            /* [in] */ long cCombos,
            /* [in] */ __RPC__in_opt IVsDropdownBarClient *pClient);
        
        void ( STDMETHODCALLTYPE *Detach )( 
            IVsDropdownBar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentSelection )( 
            IVsDropdownBar * This,
            /* [in] */ long iCombo,
            /* [out] */ __RPC__out long *piCurSel);
        
        HRESULT ( STDMETHODCALLTYPE *RefreshCombo )( 
            IVsDropdownBar * This,
            /* [in] */ long iCombo,
            /* [in] */ long iNewSelection);
        
        HRESULT ( STDMETHODCALLTYPE *GetClient )( 
            IVsDropdownBar * This,
            /* [out] */ __RPC__deref_out_opt IVsDropdownBarClient **ppClient);
        
        HRESULT ( STDMETHODCALLTYPE *SetCurrentSelection )( 
            IVsDropdownBar * This,
            /* [in] */ long iCombo,
            /* [in] */ long iNewSelection);
        
        END_INTERFACE
    } IVsDropdownBarVtbl;

    interface IVsDropdownBar
    {
        CONST_VTBL struct IVsDropdownBarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsDropdownBar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsDropdownBar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsDropdownBar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsDropdownBar_Attach(This,hwndParent,cCombos,pClient)	\
    ( (This)->lpVtbl -> Attach(This,hwndParent,cCombos,pClient) ) 

#define IVsDropdownBar_Detach(This)	\
    ( (This)->lpVtbl -> Detach(This) ) 

#define IVsDropdownBar_GetCurrentSelection(This,iCombo,piCurSel)	\
    ( (This)->lpVtbl -> GetCurrentSelection(This,iCombo,piCurSel) ) 

#define IVsDropdownBar_RefreshCombo(This,iCombo,iNewSelection)	\
    ( (This)->lpVtbl -> RefreshCombo(This,iCombo,iNewSelection) ) 

#define IVsDropdownBar_GetClient(This,ppClient)	\
    ( (This)->lpVtbl -> GetClient(This,ppClient) ) 

#define IVsDropdownBar_SetCurrentSelection(This,iCombo,iNewSelection)	\
    ( (This)->lpVtbl -> SetCurrentSelection(This,iCombo,iNewSelection) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsDropdownBar_INTERFACE_DEFINED__ */


#ifndef __IVsDropdownBarManager_INTERFACE_DEFINED__
#define __IVsDropdownBarManager_INTERFACE_DEFINED__

/* interface IVsDropdownBarManager */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsDropdownBarManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5CCB1170-6527-4D88-BE3E-198F0EF5538D")
    IVsDropdownBarManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddDropdownBar( 
            /* [in] */ long cCombos,
            /* [in] */ __RPC__in_opt IVsDropdownBarClient *pClient) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDropdownBar( 
            /* [out] */ __RPC__deref_out_opt IVsDropdownBar **ppDropdownBar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveDropdownBar( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsDropdownBarManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsDropdownBarManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsDropdownBarManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsDropdownBarManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddDropdownBar )( 
            IVsDropdownBarManager * This,
            /* [in] */ long cCombos,
            /* [in] */ __RPC__in_opt IVsDropdownBarClient *pClient);
        
        HRESULT ( STDMETHODCALLTYPE *GetDropdownBar )( 
            IVsDropdownBarManager * This,
            /* [out] */ __RPC__deref_out_opt IVsDropdownBar **ppDropdownBar);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveDropdownBar )( 
            IVsDropdownBarManager * This);
        
        END_INTERFACE
    } IVsDropdownBarManagerVtbl;

    interface IVsDropdownBarManager
    {
        CONST_VTBL struct IVsDropdownBarManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsDropdownBarManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsDropdownBarManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsDropdownBarManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsDropdownBarManager_AddDropdownBar(This,cCombos,pClient)	\
    ( (This)->lpVtbl -> AddDropdownBar(This,cCombos,pClient) ) 

#define IVsDropdownBarManager_GetDropdownBar(This,ppDropdownBar)	\
    ( (This)->lpVtbl -> GetDropdownBar(This,ppDropdownBar) ) 

#define IVsDropdownBarManager_RemoveDropdownBar(This)	\
    ( (This)->lpVtbl -> RemoveDropdownBar(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsDropdownBarManager_INTERFACE_DEFINED__ */


#ifndef __IVsButtonBarClient_INTERFACE_DEFINED__
#define __IVsButtonBarClient_INTERFACE_DEFINED__

/* interface IVsButtonBarClient */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsButtonBarClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B59AF843-E075-496E-A00D-E8EEB3C748EB")
    IVsButtonBarClient : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetButtonBar( 
            /* [in] */ __RPC__in_opt IVsButtonBar *pButtonBar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetButtonTipText( 
            /* [in] */ long iButton,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrTip) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnButtonPressed( 
            /* [in] */ long iButton) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsButtonBarClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsButtonBarClient * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsButtonBarClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsButtonBarClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetButtonBar )( 
            IVsButtonBarClient * This,
            /* [in] */ __RPC__in_opt IVsButtonBar *pButtonBar);
        
        HRESULT ( STDMETHODCALLTYPE *GetButtonTipText )( 
            IVsButtonBarClient * This,
            /* [in] */ long iButton,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrTip);
        
        HRESULT ( STDMETHODCALLTYPE *OnButtonPressed )( 
            IVsButtonBarClient * This,
            /* [in] */ long iButton);
        
        END_INTERFACE
    } IVsButtonBarClientVtbl;

    interface IVsButtonBarClient
    {
        CONST_VTBL struct IVsButtonBarClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsButtonBarClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsButtonBarClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsButtonBarClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsButtonBarClient_SetButtonBar(This,pButtonBar)	\
    ( (This)->lpVtbl -> SetButtonBar(This,pButtonBar) ) 

#define IVsButtonBarClient_GetButtonTipText(This,iButton,pbstrTip)	\
    ( (This)->lpVtbl -> GetButtonTipText(This,iButton,pbstrTip) ) 

#define IVsButtonBarClient_OnButtonPressed(This,iButton)	\
    ( (This)->lpVtbl -> OnButtonPressed(This,iButton) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsButtonBarClient_INTERFACE_DEFINED__ */


#ifndef __IVsButtonBar_INTERFACE_DEFINED__
#define __IVsButtonBar_INTERFACE_DEFINED__

/* interface IVsButtonBar */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsButtonBar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4C4095EC-0AF1-48B2-A900-DB496765EE9E")
    IVsButtonBar : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Attach( 
            /* [in] */ __RPC__in HWND hwndParent,
            /* [in] */ long cButtons,
            /* [in] */ __RPC__in HANDLE hImageList,
            /* [in] */ __RPC__in_opt IVsButtonBarClient *pClient) = 0;
        
        virtual void STDMETHODCALLTYPE Detach( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHeight( 
            /* [in] */ long iHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ __RPC__out long *piWidth,
            __RPC__in long *piHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCurrentSelection( 
            /* [in] */ long iCurButton) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentSelection( 
            /* [out] */ __RPC__out long *piCurButton) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClient( 
            /* [out] */ __RPC__deref_out_opt IVsButtonBarClient **ppClient) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsButtonBarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsButtonBar * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsButtonBar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsButtonBar * This);
        
        HRESULT ( STDMETHODCALLTYPE *Attach )( 
            IVsButtonBar * This,
            /* [in] */ __RPC__in HWND hwndParent,
            /* [in] */ long cButtons,
            /* [in] */ __RPC__in HANDLE hImageList,
            /* [in] */ __RPC__in_opt IVsButtonBarClient *pClient);
        
        void ( STDMETHODCALLTYPE *Detach )( 
            IVsButtonBar * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetHeight )( 
            IVsButtonBar * This,
            /* [in] */ long iHeight);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IVsButtonBar * This,
            /* [out] */ __RPC__out long *piWidth,
            __RPC__in long *piHeight);
        
        HRESULT ( STDMETHODCALLTYPE *SetCurrentSelection )( 
            IVsButtonBar * This,
            /* [in] */ long iCurButton);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentSelection )( 
            IVsButtonBar * This,
            /* [out] */ __RPC__out long *piCurButton);
        
        HRESULT ( STDMETHODCALLTYPE *GetClient )( 
            IVsButtonBar * This,
            /* [out] */ __RPC__deref_out_opt IVsButtonBarClient **ppClient);
        
        END_INTERFACE
    } IVsButtonBarVtbl;

    interface IVsButtonBar
    {
        CONST_VTBL struct IVsButtonBarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsButtonBar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsButtonBar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsButtonBar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsButtonBar_Attach(This,hwndParent,cButtons,hImageList,pClient)	\
    ( (This)->lpVtbl -> Attach(This,hwndParent,cButtons,hImageList,pClient) ) 

#define IVsButtonBar_Detach(This)	\
    ( (This)->lpVtbl -> Detach(This) ) 

#define IVsButtonBar_SetHeight(This,iHeight)	\
    ( (This)->lpVtbl -> SetHeight(This,iHeight) ) 

#define IVsButtonBar_GetSize(This,piWidth,piHeight)	\
    ( (This)->lpVtbl -> GetSize(This,piWidth,piHeight) ) 

#define IVsButtonBar_SetCurrentSelection(This,iCurButton)	\
    ( (This)->lpVtbl -> SetCurrentSelection(This,iCurButton) ) 

#define IVsButtonBar_GetCurrentSelection(This,piCurButton)	\
    ( (This)->lpVtbl -> GetCurrentSelection(This,piCurButton) ) 

#define IVsButtonBar_GetClient(This,ppClient)	\
    ( (This)->lpVtbl -> GetClient(This,ppClient) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsButtonBar_INTERFACE_DEFINED__ */


#ifndef __IVsButtonBarManager_INTERFACE_DEFINED__
#define __IVsButtonBarManager_INTERFACE_DEFINED__

/* interface IVsButtonBarManager */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsButtonBarManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B4D5B0A3-1945-4F5F-B5E1-4ADD352E78C1")
    IVsButtonBarManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddButtonBar( 
            /* [in] */ long cButtons,
            /* [in] */ __RPC__in HANDLE hImageList,
            /* [in] */ __RPC__in_opt IVsButtonBarClient *pClient) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetButtonBar( 
            /* [out] */ __RPC__deref_out_opt IVsButtonBar **ppButtonBar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveButtonBar( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsButtonBarManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsButtonBarManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsButtonBarManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsButtonBarManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddButtonBar )( 
            IVsButtonBarManager * This,
            /* [in] */ long cButtons,
            /* [in] */ __RPC__in HANDLE hImageList,
            /* [in] */ __RPC__in_opt IVsButtonBarClient *pClient);
        
        HRESULT ( STDMETHODCALLTYPE *GetButtonBar )( 
            IVsButtonBarManager * This,
            /* [out] */ __RPC__deref_out_opt IVsButtonBar **ppButtonBar);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveButtonBar )( 
            IVsButtonBarManager * This);
        
        END_INTERFACE
    } IVsButtonBarManagerVtbl;

    interface IVsButtonBarManager
    {
        CONST_VTBL struct IVsButtonBarManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsButtonBarManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsButtonBarManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsButtonBarManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsButtonBarManager_AddButtonBar(This,cButtons,hImageList,pClient)	\
    ( (This)->lpVtbl -> AddButtonBar(This,cButtons,hImageList,pClient) ) 

#define IVsButtonBarManager_GetButtonBar(This,ppButtonBar)	\
    ( (This)->lpVtbl -> GetButtonBar(This,ppButtonBar) ) 

#define IVsButtonBarManager_RemoveButtonBar(This)	\
    ( (This)->lpVtbl -> RemoveButtonBar(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsButtonBarManager_INTERFACE_DEFINED__ */


#ifndef __IVsDefaultButtonBarImages_INTERFACE_DEFINED__
#define __IVsDefaultButtonBarImages_INTERFACE_DEFINED__

/* interface IVsDefaultButtonBarImages */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsDefaultButtonBarImages;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("73B7DC00-F498-4ABD-AB79-D07AFD52F395")
    IVsDefaultButtonBarImages : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetButtonCount( 
            /* [out] */ __RPC__out long *pcButtons) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetImageList( 
            /* [out] */ __RPC__deref_out_opt HANDLE *phImageList) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsDefaultButtonBarImagesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsDefaultButtonBarImages * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsDefaultButtonBarImages * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsDefaultButtonBarImages * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetButtonCount )( 
            IVsDefaultButtonBarImages * This,
            /* [out] */ __RPC__out long *pcButtons);
        
        HRESULT ( STDMETHODCALLTYPE *GetImageList )( 
            IVsDefaultButtonBarImages * This,
            /* [out] */ __RPC__deref_out_opt HANDLE *phImageList);
        
        END_INTERFACE
    } IVsDefaultButtonBarImagesVtbl;

    interface IVsDefaultButtonBarImages
    {
        CONST_VTBL struct IVsDefaultButtonBarImagesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsDefaultButtonBarImages_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsDefaultButtonBarImages_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsDefaultButtonBarImages_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsDefaultButtonBarImages_GetButtonCount(This,pcButtons)	\
    ( (This)->lpVtbl -> GetButtonCount(This,pcButtons) ) 

#define IVsDefaultButtonBarImages_GetImageList(This,phImageList)	\
    ( (This)->lpVtbl -> GetImageList(This,phImageList) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsDefaultButtonBarImages_INTERFACE_DEFINED__ */


#ifndef __IVsTextMacroHelper_INTERFACE_DEFINED__
#define __IVsTextMacroHelper_INTERFACE_DEFINED__

/* interface IVsTextMacroHelper */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextMacroHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CAF8109F-B74B-429F-A11A-4944AADE9AB2")
    IVsTextMacroHelper : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RecordNewLine( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordTypeChar( 
            OLECHAR wchChar,
            BOOL fIsOvertype) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordTypeChars( 
            __RPC__in LPCOLESTR pwszChars,
            BOOL fIsOvertype) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordRemovePreviousTyping( 
            __RPC__in LPCOLESTR pwszPrevChars) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordDelete( 
            BOOL fLeft,
            UINT uiReps) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordDeleteSpace( 
            BOOL fVertical) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordMoveSelectionRel( 
            MOVESELECTION_REL_TYPE mst,
            BOOL fBackwards,
            BOOL fExtend) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordMoveSelectionAbs( 
            MOVESELECTION_ABS_TYPE mst,
            BOOL fExtend) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordCollapseSelection( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordSelectAll( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordSwapAnchor( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordEnterBoxMode( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordActivateDocument( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordGotoLine( 
            long iLine,
            BOOL fExtend) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordCut( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordCopy( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordPaste( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordBookmarkClearAll( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordBookmarkSetClear( 
            BOOL fSet) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordBookmarkNextPrev( 
            BOOL fNext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordChangeCase( 
            CASESELECTION_TYPE cst) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordIndentUnindent( 
            BOOL fIndent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordFormatSelection( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordTabifyUntabify( 
            BOOL fTabify) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordInsertFile( 
            __RPC__in LPCOLESTR pwszName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextMacroHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextMacroHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextMacroHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextMacroHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordNewLine )( 
            IVsTextMacroHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordTypeChar )( 
            IVsTextMacroHelper * This,
            OLECHAR wchChar,
            BOOL fIsOvertype);
        
        HRESULT ( STDMETHODCALLTYPE *RecordTypeChars )( 
            IVsTextMacroHelper * This,
            __RPC__in LPCOLESTR pwszChars,
            BOOL fIsOvertype);
        
        HRESULT ( STDMETHODCALLTYPE *RecordRemovePreviousTyping )( 
            IVsTextMacroHelper * This,
            __RPC__in LPCOLESTR pwszPrevChars);
        
        HRESULT ( STDMETHODCALLTYPE *RecordDelete )( 
            IVsTextMacroHelper * This,
            BOOL fLeft,
            UINT uiReps);
        
        HRESULT ( STDMETHODCALLTYPE *RecordDeleteSpace )( 
            IVsTextMacroHelper * This,
            BOOL fVertical);
        
        HRESULT ( STDMETHODCALLTYPE *RecordMoveSelectionRel )( 
            IVsTextMacroHelper * This,
            MOVESELECTION_REL_TYPE mst,
            BOOL fBackwards,
            BOOL fExtend);
        
        HRESULT ( STDMETHODCALLTYPE *RecordMoveSelectionAbs )( 
            IVsTextMacroHelper * This,
            MOVESELECTION_ABS_TYPE mst,
            BOOL fExtend);
        
        HRESULT ( STDMETHODCALLTYPE *RecordCollapseSelection )( 
            IVsTextMacroHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordSelectAll )( 
            IVsTextMacroHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordSwapAnchor )( 
            IVsTextMacroHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordEnterBoxMode )( 
            IVsTextMacroHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordActivateDocument )( 
            IVsTextMacroHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordGotoLine )( 
            IVsTextMacroHelper * This,
            long iLine,
            BOOL fExtend);
        
        HRESULT ( STDMETHODCALLTYPE *RecordCut )( 
            IVsTextMacroHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordCopy )( 
            IVsTextMacroHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordPaste )( 
            IVsTextMacroHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordBookmarkClearAll )( 
            IVsTextMacroHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordBookmarkSetClear )( 
            IVsTextMacroHelper * This,
            BOOL fSet);
        
        HRESULT ( STDMETHODCALLTYPE *RecordBookmarkNextPrev )( 
            IVsTextMacroHelper * This,
            BOOL fNext);
        
        HRESULT ( STDMETHODCALLTYPE *RecordChangeCase )( 
            IVsTextMacroHelper * This,
            CASESELECTION_TYPE cst);
        
        HRESULT ( STDMETHODCALLTYPE *RecordIndentUnindent )( 
            IVsTextMacroHelper * This,
            BOOL fIndent);
        
        HRESULT ( STDMETHODCALLTYPE *RecordFormatSelection )( 
            IVsTextMacroHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordTabifyUntabify )( 
            IVsTextMacroHelper * This,
            BOOL fTabify);
        
        HRESULT ( STDMETHODCALLTYPE *RecordInsertFile )( 
            IVsTextMacroHelper * This,
            __RPC__in LPCOLESTR pwszName);
        
        END_INTERFACE
    } IVsTextMacroHelperVtbl;

    interface IVsTextMacroHelper
    {
        CONST_VTBL struct IVsTextMacroHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextMacroHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextMacroHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextMacroHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextMacroHelper_RecordNewLine(This)	\
    ( (This)->lpVtbl -> RecordNewLine(This) ) 

#define IVsTextMacroHelper_RecordTypeChar(This,wchChar,fIsOvertype)	\
    ( (This)->lpVtbl -> RecordTypeChar(This,wchChar,fIsOvertype) ) 

#define IVsTextMacroHelper_RecordTypeChars(This,pwszChars,fIsOvertype)	\
    ( (This)->lpVtbl -> RecordTypeChars(This,pwszChars,fIsOvertype) ) 

#define IVsTextMacroHelper_RecordRemovePreviousTyping(This,pwszPrevChars)	\
    ( (This)->lpVtbl -> RecordRemovePreviousTyping(This,pwszPrevChars) ) 

#define IVsTextMacroHelper_RecordDelete(This,fLeft,uiReps)	\
    ( (This)->lpVtbl -> RecordDelete(This,fLeft,uiReps) ) 

#define IVsTextMacroHelper_RecordDeleteSpace(This,fVertical)	\
    ( (This)->lpVtbl -> RecordDeleteSpace(This,fVertical) ) 

#define IVsTextMacroHelper_RecordMoveSelectionRel(This,mst,fBackwards,fExtend)	\
    ( (This)->lpVtbl -> RecordMoveSelectionRel(This,mst,fBackwards,fExtend) ) 

#define IVsTextMacroHelper_RecordMoveSelectionAbs(This,mst,fExtend)	\
    ( (This)->lpVtbl -> RecordMoveSelectionAbs(This,mst,fExtend) ) 

#define IVsTextMacroHelper_RecordCollapseSelection(This)	\
    ( (This)->lpVtbl -> RecordCollapseSelection(This) ) 

#define IVsTextMacroHelper_RecordSelectAll(This)	\
    ( (This)->lpVtbl -> RecordSelectAll(This) ) 

#define IVsTextMacroHelper_RecordSwapAnchor(This)	\
    ( (This)->lpVtbl -> RecordSwapAnchor(This) ) 

#define IVsTextMacroHelper_RecordEnterBoxMode(This)	\
    ( (This)->lpVtbl -> RecordEnterBoxMode(This) ) 

#define IVsTextMacroHelper_RecordActivateDocument(This)	\
    ( (This)->lpVtbl -> RecordActivateDocument(This) ) 

#define IVsTextMacroHelper_RecordGotoLine(This,iLine,fExtend)	\
    ( (This)->lpVtbl -> RecordGotoLine(This,iLine,fExtend) ) 

#define IVsTextMacroHelper_RecordCut(This)	\
    ( (This)->lpVtbl -> RecordCut(This) ) 

#define IVsTextMacroHelper_RecordCopy(This)	\
    ( (This)->lpVtbl -> RecordCopy(This) ) 

#define IVsTextMacroHelper_RecordPaste(This)	\
    ( (This)->lpVtbl -> RecordPaste(This) ) 

#define IVsTextMacroHelper_RecordBookmarkClearAll(This)	\
    ( (This)->lpVtbl -> RecordBookmarkClearAll(This) ) 

#define IVsTextMacroHelper_RecordBookmarkSetClear(This,fSet)	\
    ( (This)->lpVtbl -> RecordBookmarkSetClear(This,fSet) ) 

#define IVsTextMacroHelper_RecordBookmarkNextPrev(This,fNext)	\
    ( (This)->lpVtbl -> RecordBookmarkNextPrev(This,fNext) ) 

#define IVsTextMacroHelper_RecordChangeCase(This,cst)	\
    ( (This)->lpVtbl -> RecordChangeCase(This,cst) ) 

#define IVsTextMacroHelper_RecordIndentUnindent(This,fIndent)	\
    ( (This)->lpVtbl -> RecordIndentUnindent(This,fIndent) ) 

#define IVsTextMacroHelper_RecordFormatSelection(This)	\
    ( (This)->lpVtbl -> RecordFormatSelection(This) ) 

#define IVsTextMacroHelper_RecordTabifyUntabify(This,fTabify)	\
    ( (This)->lpVtbl -> RecordTabifyUntabify(This,fTabify) ) 

#define IVsTextMacroHelper_RecordInsertFile(This,pwszName)	\
    ( (This)->lpVtbl -> RecordInsertFile(This,pwszName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextMacroHelper_INTERFACE_DEFINED__ */


#ifndef __IVsUserData_INTERFACE_DEFINED__
#define __IVsUserData_INTERFACE_DEFINED__

/* interface IVsUserData */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsUserData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("978A8E17-4DF8-432A-9623-D530A26452BC")
    IVsUserData : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetData( 
            /* [in] */ __RPC__in REFGUID riidKey,
            /* [out] */ __RPC__out VARIANT *pvtData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetData( 
            /* [in] */ __RPC__in REFGUID riidKey,
            /* [in] */ VARIANT vtData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsUserDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsUserData * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsUserData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsUserData * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetData )( 
            IVsUserData * This,
            /* [in] */ __RPC__in REFGUID riidKey,
            /* [out] */ __RPC__out VARIANT *pvtData);
        
        HRESULT ( STDMETHODCALLTYPE *SetData )( 
            IVsUserData * This,
            /* [in] */ __RPC__in REFGUID riidKey,
            /* [in] */ VARIANT vtData);
        
        END_INTERFACE
    } IVsUserDataVtbl;

    interface IVsUserData
    {
        CONST_VTBL struct IVsUserDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsUserData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsUserData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsUserData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsUserData_GetData(This,riidKey,pvtData)	\
    ( (This)->lpVtbl -> GetData(This,riidKey,pvtData) ) 

#define IVsUserData_SetData(This,riidKey,vtData)	\
    ( (This)->lpVtbl -> SetData(This,riidKey,vtData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsUserData_INTERFACE_DEFINED__ */


#ifndef __IVsUserDataEvents_INTERFACE_DEFINED__
#define __IVsUserDataEvents_INTERFACE_DEFINED__

/* interface IVsUserDataEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsUserDataEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5E120D5E-9637-47D9-861C-92FA03683C6C")
    IVsUserDataEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnUserDataChange( 
            /* [in] */ __RPC__in REFGUID riidKey,
            /* [in] */ VARIANT vtNewValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsUserDataEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsUserDataEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsUserDataEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsUserDataEvents * This);
        
        void ( STDMETHODCALLTYPE *OnUserDataChange )( 
            IVsUserDataEvents * This,
            /* [in] */ __RPC__in REFGUID riidKey,
            /* [in] */ VARIANT vtNewValue);
        
        END_INTERFACE
    } IVsUserDataEventsVtbl;

    interface IVsUserDataEvents
    {
        CONST_VTBL struct IVsUserDataEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsUserDataEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsUserDataEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsUserDataEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsUserDataEvents_OnUserDataChange(This,riidKey,vtNewValue)	\
    ( (This)->lpVtbl -> OnUserDataChange(This,riidKey,vtNewValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsUserDataEvents_INTERFACE_DEFINED__ */


#ifndef __IVsUndoUnit_INTERFACE_DEFINED__
#define __IVsUndoUnit_INTERFACE_DEFINED__

/* interface IVsUndoUnit */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsUndoUnit;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A8C3D107-7EDF-4B1B-8A81-080AC91590E9")
    IVsUndoUnit : public IUnknown
    {
    public:
        virtual BOOL STDMETHODCALLTYPE fChangeData( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsUndoUnitVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsUndoUnit * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsUndoUnit * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsUndoUnit * This);
        
        BOOL ( STDMETHODCALLTYPE *fChangeData )( 
            IVsUndoUnit * This);
        
        END_INTERFACE
    } IVsUndoUnitVtbl;

    interface IVsUndoUnit
    {
        CONST_VTBL struct IVsUndoUnitVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsUndoUnit_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsUndoUnit_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsUndoUnit_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsUndoUnit_fChangeData(This)	\
    ( (This)->lpVtbl -> fChangeData(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsUndoUnit_INTERFACE_DEFINED__ */


#ifndef __IVsUndoTrackingEvents_INTERFACE_DEFINED__
#define __IVsUndoTrackingEvents_INTERFACE_DEFINED__

/* interface IVsUndoTrackingEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsUndoTrackingEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("31024DD7-30E5-4C91-821D-218BDEADA18B")
    IVsUndoTrackingEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnReturnToCleanState( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsUndoTrackingEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsUndoTrackingEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsUndoTrackingEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsUndoTrackingEvents * This);
        
        void ( STDMETHODCALLTYPE *OnReturnToCleanState )( 
            IVsUndoTrackingEvents * This);
        
        END_INTERFACE
    } IVsUndoTrackingEventsVtbl;

    interface IVsUndoTrackingEvents
    {
        CONST_VTBL struct IVsUndoTrackingEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsUndoTrackingEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsUndoTrackingEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsUndoTrackingEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsUndoTrackingEvents_OnReturnToCleanState(This)	\
    ( (This)->lpVtbl -> OnReturnToCleanState(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsUndoTrackingEvents_INTERFACE_DEFINED__ */


#ifndef __IVsChangeTrackingUndoManager_INTERFACE_DEFINED__
#define __IVsChangeTrackingUndoManager_INTERFACE_DEFINED__

/* interface IVsChangeTrackingUndoManager */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsChangeTrackingUndoManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E33C4DCF-F50C-4356-8CD8-87A7F213337B")
    IVsChangeTrackingUndoManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MarkCleanState( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryCleanState( 
            /* [out] */ __RPC__out BOOL *pfClean) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AdviseTrackingClient( 
            /* [in] */ __RPC__in_opt IVsUndoTrackingEvents *pUndoTrackingEvents) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnadviseTrackingClient( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsChangeTrackingUndoManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsChangeTrackingUndoManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsChangeTrackingUndoManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsChangeTrackingUndoManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *MarkCleanState )( 
            IVsChangeTrackingUndoManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *QueryCleanState )( 
            IVsChangeTrackingUndoManager * This,
            /* [out] */ __RPC__out BOOL *pfClean);
        
        HRESULT ( STDMETHODCALLTYPE *AdviseTrackingClient )( 
            IVsChangeTrackingUndoManager * This,
            /* [in] */ __RPC__in_opt IVsUndoTrackingEvents *pUndoTrackingEvents);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseTrackingClient )( 
            IVsChangeTrackingUndoManager * This);
        
        END_INTERFACE
    } IVsChangeTrackingUndoManagerVtbl;

    interface IVsChangeTrackingUndoManager
    {
        CONST_VTBL struct IVsChangeTrackingUndoManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsChangeTrackingUndoManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsChangeTrackingUndoManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsChangeTrackingUndoManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsChangeTrackingUndoManager_MarkCleanState(This)	\
    ( (This)->lpVtbl -> MarkCleanState(This) ) 

#define IVsChangeTrackingUndoManager_QueryCleanState(This,pfClean)	\
    ( (This)->lpVtbl -> QueryCleanState(This,pfClean) ) 

#define IVsChangeTrackingUndoManager_AdviseTrackingClient(This,pUndoTrackingEvents)	\
    ( (This)->lpVtbl -> AdviseTrackingClient(This,pUndoTrackingEvents) ) 

#define IVsChangeTrackingUndoManager_UnadviseTrackingClient(This)	\
    ( (This)->lpVtbl -> UnadviseTrackingClient(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsChangeTrackingUndoManager_INTERFACE_DEFINED__ */


#ifndef __IVsLinkedUndoClient_INTERFACE_DEFINED__
#define __IVsLinkedUndoClient_INTERFACE_DEFINED__

/* interface IVsLinkedUndoClient */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLinkedUndoClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33452684-FAB0-4F76-B4E9-19EE0B96B4AD")
    IVsLinkedUndoClient : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnInterveningUnitBlockingLinkedUndo( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLinkedUndoClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLinkedUndoClient * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLinkedUndoClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLinkedUndoClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnInterveningUnitBlockingLinkedUndo )( 
            IVsLinkedUndoClient * This);
        
        END_INTERFACE
    } IVsLinkedUndoClientVtbl;

    interface IVsLinkedUndoClient
    {
        CONST_VTBL struct IVsLinkedUndoClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLinkedUndoClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLinkedUndoClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLinkedUndoClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLinkedUndoClient_OnInterveningUnitBlockingLinkedUndo(This)	\
    ( (This)->lpVtbl -> OnInterveningUnitBlockingLinkedUndo(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLinkedUndoClient_INTERFACE_DEFINED__ */


#ifndef __IVsLinkCapableUndoManager_INTERFACE_DEFINED__
#define __IVsLinkCapableUndoManager_INTERFACE_DEFINED__

/* interface IVsLinkCapableUndoManager */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLinkCapableUndoManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F747D466-83CA-41D6-A0E8-3F78283D01E7")
    IVsLinkCapableUndoManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AdviseLinkedUndoClient( 
            /* [in] */ __RPC__in_opt IVsLinkedUndoClient *pClient) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnadviseLinkedUndoClient( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLinkCapableUndoManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLinkCapableUndoManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLinkCapableUndoManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLinkCapableUndoManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *AdviseLinkedUndoClient )( 
            IVsLinkCapableUndoManager * This,
            /* [in] */ __RPC__in_opt IVsLinkedUndoClient *pClient);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseLinkedUndoClient )( 
            IVsLinkCapableUndoManager * This);
        
        END_INTERFACE
    } IVsLinkCapableUndoManagerVtbl;

    interface IVsLinkCapableUndoManager
    {
        CONST_VTBL struct IVsLinkCapableUndoManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLinkCapableUndoManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLinkCapableUndoManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLinkCapableUndoManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLinkCapableUndoManager_AdviseLinkedUndoClient(This,pClient)	\
    ( (This)->lpVtbl -> AdviseLinkedUndoClient(This,pClient) ) 

#define IVsLinkCapableUndoManager_UnadviseLinkedUndoClient(This)	\
    ( (This)->lpVtbl -> UnadviseLinkedUndoClient(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLinkCapableUndoManager_INTERFACE_DEFINED__ */


#ifndef __IVsLifetimeControlledObject_INTERFACE_DEFINED__
#define __IVsLifetimeControlledObject_INTERFACE_DEFINED__

/* interface IVsLifetimeControlledObject */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLifetimeControlledObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B3B2E5D4-F03E-4BB9-85F9-61B5F45AC498")
    IVsLifetimeControlledObject : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SeverReferencesToOwner( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLifetimeControlledObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLifetimeControlledObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLifetimeControlledObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLifetimeControlledObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *SeverReferencesToOwner )( 
            IVsLifetimeControlledObject * This);
        
        END_INTERFACE
    } IVsLifetimeControlledObjectVtbl;

    interface IVsLifetimeControlledObject
    {
        CONST_VTBL struct IVsLifetimeControlledObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLifetimeControlledObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLifetimeControlledObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLifetimeControlledObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLifetimeControlledObject_SeverReferencesToOwner(This)	\
    ( (This)->lpVtbl -> SeverReferencesToOwner(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLifetimeControlledObject_INTERFACE_DEFINED__ */


#ifndef __IVsLinkedUndoTransactionManager_INTERFACE_DEFINED__
#define __IVsLinkedUndoTransactionManager_INTERFACE_DEFINED__

/* interface IVsLinkedUndoTransactionManager */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLinkedUndoTransactionManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F65478CC-96F1-4BA9-9EF9-A575ACB96031")
    IVsLinkedUndoTransactionManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OpenLinkedUndo( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in const WCHAR *pszDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseLinkedUndo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AbortLinkedUndo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsAborted( 
            __RPC__in BOOL *pfAborted) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsStrict( 
            __RPC__in BOOL *pfStrict) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CountOpenTransactions( 
            __RPC__in long *pCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLinkedUndoTransactionManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLinkedUndoTransactionManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLinkedUndoTransactionManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLinkedUndoTransactionManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *OpenLinkedUndo )( 
            IVsLinkedUndoTransactionManager * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in const WCHAR *pszDescription);
        
        HRESULT ( STDMETHODCALLTYPE *CloseLinkedUndo )( 
            IVsLinkedUndoTransactionManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *AbortLinkedUndo )( 
            IVsLinkedUndoTransactionManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *IsAborted )( 
            IVsLinkedUndoTransactionManager * This,
            __RPC__in BOOL *pfAborted);
        
        HRESULT ( STDMETHODCALLTYPE *IsStrict )( 
            IVsLinkedUndoTransactionManager * This,
            __RPC__in BOOL *pfStrict);
        
        HRESULT ( STDMETHODCALLTYPE *CountOpenTransactions )( 
            IVsLinkedUndoTransactionManager * This,
            __RPC__in long *pCount);
        
        END_INTERFACE
    } IVsLinkedUndoTransactionManagerVtbl;

    interface IVsLinkedUndoTransactionManager
    {
        CONST_VTBL struct IVsLinkedUndoTransactionManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLinkedUndoTransactionManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLinkedUndoTransactionManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLinkedUndoTransactionManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLinkedUndoTransactionManager_OpenLinkedUndo(This,dwFlags,pszDescription)	\
    ( (This)->lpVtbl -> OpenLinkedUndo(This,dwFlags,pszDescription) ) 

#define IVsLinkedUndoTransactionManager_CloseLinkedUndo(This)	\
    ( (This)->lpVtbl -> CloseLinkedUndo(This) ) 

#define IVsLinkedUndoTransactionManager_AbortLinkedUndo(This)	\
    ( (This)->lpVtbl -> AbortLinkedUndo(This) ) 

#define IVsLinkedUndoTransactionManager_IsAborted(This,pfAborted)	\
    ( (This)->lpVtbl -> IsAborted(This,pfAborted) ) 

#define IVsLinkedUndoTransactionManager_IsStrict(This,pfStrict)	\
    ( (This)->lpVtbl -> IsStrict(This,pfStrict) ) 

#define IVsLinkedUndoTransactionManager_CountOpenTransactions(This,pCount)	\
    ( (This)->lpVtbl -> CountOpenTransactions(This,pCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLinkedUndoTransactionManager_INTERFACE_DEFINED__ */


#ifndef __IVsChangeClusterEvents_INTERFACE_DEFINED__
#define __IVsChangeClusterEvents_INTERFACE_DEFINED__

/* interface IVsChangeClusterEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsChangeClusterEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E55C4E80-A01C-47E8-9E94-D664B94DF6CF")
    IVsChangeClusterEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnChangeClusterOpening( 
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual void STDMETHODCALLTYPE OnChangeClusterClosing( 
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsChangeClusterEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsChangeClusterEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsChangeClusterEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsChangeClusterEvents * This);
        
        void ( STDMETHODCALLTYPE *OnChangeClusterOpening )( 
            IVsChangeClusterEvents * This,
            /* [in] */ DWORD dwFlags);
        
        void ( STDMETHODCALLTYPE *OnChangeClusterClosing )( 
            IVsChangeClusterEvents * This,
            /* [in] */ DWORD dwFlags);
        
        END_INTERFACE
    } IVsChangeClusterEventsVtbl;

    interface IVsChangeClusterEvents
    {
        CONST_VTBL struct IVsChangeClusterEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsChangeClusterEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsChangeClusterEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsChangeClusterEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsChangeClusterEvents_OnChangeClusterOpening(This,dwFlags)	\
    ( (This)->lpVtbl -> OnChangeClusterOpening(This,dwFlags) ) 

#define IVsChangeClusterEvents_OnChangeClusterClosing(This,dwFlags)	\
    ( (This)->lpVtbl -> OnChangeClusterClosing(This,dwFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsChangeClusterEvents_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_VsLocalUserData;

#ifdef __cplusplus

class DECLSPEC_UUID("5130C7AB-85BB-11d3-B363-00C04F611E41")
VsLocalUserData;
#endif

EXTERN_C const CLSID CLSID_VsUserData;

#ifdef __cplusplus

class DECLSPEC_UUID("F5E7E718-1401-11d1-883B-0000F87579D2")
VsUserData;
#endif

EXTERN_C const CLSID CLSID_VsCodeWindow;

#ifdef __cplusplus

class DECLSPEC_UUID("F5E7E719-1401-11d1-883B-0000F87579D2")
VsCodeWindow;
#endif

EXTERN_C const CLSID CLSID_VsSplitRoot;

#ifdef __cplusplus

class DECLSPEC_UUID("F5E7E71A-1401-11d1-883B-0000F87579D2")
VsSplitRoot;
#endif

EXTERN_C const CLSID CLSID_VsDropdownBar;

#ifdef __cplusplus

class DECLSPEC_UUID("452807CC-9BFA-11d0-8C3F-00C04FC2AAE2")
VsDropdownBar;
#endif

EXTERN_C const CLSID CLSID_VsTextBuffer;

#ifdef __cplusplus

class DECLSPEC_UUID("8E7B96A8-E33D-11d0-A6D5-00C04FB67F6A")
VsTextBuffer;
#endif

EXTERN_C const CLSID CLSID_VsTextLineStorage;

#ifdef __cplusplus

class DECLSPEC_UUID("D6513A91-ACC8-11d2-8919-0000F87579D2")
VsTextLineStorage;
#endif

EXTERN_C const CLSID CLSID_VsTextManager;

#ifdef __cplusplus

class DECLSPEC_UUID("F5E7E71D-1401-11d1-883B-0000F87579D2")
VsTextManager;
#endif

EXTERN_C const CLSID CLSID_VsTextView;

#ifdef __cplusplus

class DECLSPEC_UUID("F5E7E71E-1401-11d1-883B-0000F87579D2")
VsTextView;
#endif

EXTERN_C const CLSID CLSID_VsTextPackage;

#ifdef __cplusplus

class DECLSPEC_UUID("F5E7E720-1401-11d1-883B-0000F87579D2")
VsTextPackage;
#endif

EXTERN_C const CLSID CLSID_VsUndoPackage;

#ifdef __cplusplus

class DECLSPEC_UUID("1D76B2E0-F11B-11d2-AFC3-00105A9991EF")
VsUndoPackage;
#endif

EXTERN_C const CLSID CLSID_VsUndoUnit;

#ifdef __cplusplus

class DECLSPEC_UUID("9ADF33D9-8AAD-11d0-B606-00A0C922E851")
VsUndoUnit;
#endif

EXTERN_C const CLSID CLSID_VsMethodTipWindow;

#ifdef __cplusplus

class DECLSPEC_UUID("261A5572-C649-11d0-A8DF-00A0C921A4D2")
VsMethodTipWindow;
#endif

EXTERN_C const CLSID CLSID_VsTextTipWindow;

#ifdef __cplusplus

class DECLSPEC_UUID("05DD7650-130A-11d3-AFCB-00105A9991EF")
VsTextTipWindow;
#endif

EXTERN_C const CLSID CLSID_VsHiddenTextLayer;

#ifdef __cplusplus

class DECLSPEC_UUID("9B6AB22E-916A-11d2-8914-0000F87579D2")
VsHiddenTextLayer;
#endif

EXTERN_C const CLSID CLSID_VsDefaultButtonBarImages;

#ifdef __cplusplus

class DECLSPEC_UUID("B2715971-D02C-11d2-AFB4-00105A9991EF")
VsDefaultButtonBarImages;
#endif

EXTERN_C const CLSID CLSID_VsSyntheticTextLayer;

#ifdef __cplusplus

class DECLSPEC_UUID("42469677-FCFF-11d2-AFC4-00105A9991EF")
VsSyntheticTextLayer;
#endif

EXTERN_C const CLSID CLSID_VsDiffLayer;

#ifdef __cplusplus

class DECLSPEC_UUID("42469676-FCFF-11d2-AFC4-00105A9991EF")
VsDiffLayer;
#endif

#ifndef __IVsDynamicTabProvider_INTERFACE_DEFINED__
#define __IVsDynamicTabProvider_INTERFACE_DEFINED__

/* interface IVsDynamicTabProvider */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsDynamicTabProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E82466CA-CF0E-4653-9E76-4D4C6C548DA2")
    IVsDynamicTabProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTabStopElements( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out UINT *cEl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTabStop( 
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out struct TabStop *sTabStop) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsDynamicTabProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsDynamicTabProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsDynamicTabProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsDynamicTabProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTabStopElements )( 
            IVsDynamicTabProvider * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out UINT *cEl);
        
        HRESULT ( STDMETHODCALLTYPE *GetTabStop )( 
            IVsDynamicTabProvider * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out struct TabStop *sTabStop);
        
        END_INTERFACE
    } IVsDynamicTabProviderVtbl;

    interface IVsDynamicTabProvider
    {
        CONST_VTBL struct IVsDynamicTabProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsDynamicTabProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsDynamicTabProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsDynamicTabProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsDynamicTabProvider_GetTabStopElements(This,pBuffer,iLine,cEl)	\
    ( (This)->lpVtbl -> GetTabStopElements(This,pBuffer,iLine,cEl) ) 

#define IVsDynamicTabProvider_GetTabStop(This,pBuffer,iLine,sTabStop)	\
    ( (This)->lpVtbl -> GetTabStop(This,pBuffer,iLine,sTabStop) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsDynamicTabProvider_INTERFACE_DEFINED__ */


#ifndef __IVsLastChangeTimeProvider_INTERFACE_DEFINED__
#define __IVsLastChangeTimeProvider_INTERFACE_DEFINED__

/* interface IVsLastChangeTimeProvider */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLastChangeTimeProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("35E88F96-047C-443C-A336-91BB8E2B40EC")
    IVsLastChangeTimeProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetLastChangeTime( 
            /* [out] */ __RPC__out FILETIME *pFileTime) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLastChangeTimeProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLastChangeTimeProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLastChangeTimeProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLastChangeTimeProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetLastChangeTime )( 
            IVsLastChangeTimeProvider * This,
            /* [out] */ __RPC__out FILETIME *pFileTime);
        
        END_INTERFACE
    } IVsLastChangeTimeProviderVtbl;

    interface IVsLastChangeTimeProvider
    {
        CONST_VTBL struct IVsLastChangeTimeProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLastChangeTimeProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLastChangeTimeProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLastChangeTimeProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLastChangeTimeProvider_GetLastChangeTime(This,pFileTime)	\
    ( (This)->lpVtbl -> GetLastChangeTime(This,pFileTime) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLastChangeTimeProvider_INTERFACE_DEFINED__ */


#ifndef __IVsEnumTextSpans_INTERFACE_DEFINED__
#define __IVsEnumTextSpans_INTERFACE_DEFINED__

/* interface IVsEnumTextSpans */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumTextSpans;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0F343A75-968B-439E-81D6-0D066E53D28D")
    IVsEnumTextSpans : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG cEl,
            /* [size_is][out] */ __RPC__out_ecount_full(cEl) TextSpan *ppOut,
            /* [out] */ __RPC__out ULONG *pcElFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *pcSpans) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumTextSpansVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumTextSpans * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumTextSpans * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumTextSpans * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumTextSpans * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumTextSpans * This,
            /* [in] */ ULONG cEl,
            /* [size_is][out] */ __RPC__out_ecount_full(cEl) TextSpan *ppOut,
            /* [out] */ __RPC__out ULONG *pcElFetched);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsEnumTextSpans * This,
            /* [out] */ __RPC__out ULONG *pcSpans);
        
        END_INTERFACE
    } IVsEnumTextSpansVtbl;

    interface IVsEnumTextSpans
    {
        CONST_VTBL struct IVsEnumTextSpansVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumTextSpans_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumTextSpans_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumTextSpans_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumTextSpans_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumTextSpans_Next(This,cEl,ppOut,pcElFetched)	\
    ( (This)->lpVtbl -> Next(This,cEl,ppOut,pcElFetched) ) 

#define IVsEnumTextSpans_GetCount(This,pcSpans)	\
    ( (This)->lpVtbl -> GetCount(This,pcSpans) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumTextSpans_INTERFACE_DEFINED__ */


#ifndef __IVsTextLayer_INTERFACE_DEFINED__
#define __IVsTextLayer_INTERFACE_DEFINED__

/* interface IVsTextLayer */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextLayer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E145D3F-BEFC-4FD9-8714-B01AE89F4396")
    IVsTextLayer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE LocalLineIndexToBase( 
            /* [in] */ long iLocalLine,
            /* [in] */ CharIndex iLocalIndex,
            /* [out] */ __RPC__out long *piBaseLine,
            /* [out] */ __RPC__out CharIndex *piBaseIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BaseLineIndexToLocal( 
            /* [in] */ long iBaseLine,
            /* [in] */ CharIndex iBaseIndex,
            /* [out] */ __RPC__out long *piLocalLine,
            /* [out] */ __RPC__out CharIndex *piLocalIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LocalLineIndexToDeeperLayer( 
            /* [in] */ __RPC__in_opt IVsTextLayer *pTargetLayer,
            /* [in] */ long iLocalLine,
            /* [in] */ CharIndex iLocalIndex,
            /* [out] */ __RPC__out long *piTargetLine,
            /* [out] */ __RPC__out CharIndex *piTargetIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeeperLayerLineIndexToLocal( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IVsTextLayer *pTargetLayer,
            /* [in] */ long iLayerLine,
            /* [in] */ CharIndex iLayerIndex,
            /* [out] */ __RPC__out long *piLocalLine,
            /* [out] */ __RPC__out CharIndex *piLocalIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBaseBuffer( 
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppiBuf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LockBufferEx( 
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnlockBufferEx( 
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLengthOfLine( 
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineCount( 
            /* [out] */ __RPC__out long *piLineCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLastLineIndex( 
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMarkerData( 
            /* [in] */ long iTopLine,
            /* [in] */ long iBottomLine,
            /* [out] */ __RPC__out MARKERDATA *pMarkerData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseMarkerData( 
            /* [in] */ __RPC__in MARKERDATA *pMarkerData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineDataEx( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ long iLine,
            /* [in] */ long iStartIndex,
            /* [in] */ long iEndIndex,
            /* [out] */ __RPC__out LINEDATAEX *pLineData,
            /* [in] */ __RPC__in MARKERDATA *pMarkerData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseLineDataEx( 
            /* [in] */ __RPC__in LINEDATAEX *pLineData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineText( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBuf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CopyLineText( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPWSTR pszBuf,
            /* [out][in] */ __RPC__inout long *pcchBuf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceLines( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText,
            /* [in] */ long iNewLen,
            /* [out] */ __RPC__out TextSpan *pChangedSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CanReplaceLines( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ long iNewLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateTrackingPoint( 
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__deref_out_opt IVsTextTrackingPoint **ppMarker) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumLayerMarkers( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ long iMarkerType,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsEnumLayerMarkers **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceLinesEx( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText,
            /* [in] */ long iNewLen,
            /* [out] */ __RPC__out TextSpan *pChangedSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MapLocalSpansToTextOriginatingLayer( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IVsEnumTextSpans *pLocalSpanEnum,
            /* [out] */ __RPC__deref_out_opt IVsTextLayer **ppTargetLayer,
            /* [out] */ __RPC__deref_out_opt IVsEnumTextSpans **ppTargetSpanEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextLayerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextLayer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextLayer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextLayer * This);
        
        HRESULT ( STDMETHODCALLTYPE *LocalLineIndexToBase )( 
            IVsTextLayer * This,
            /* [in] */ long iLocalLine,
            /* [in] */ CharIndex iLocalIndex,
            /* [out] */ __RPC__out long *piBaseLine,
            /* [out] */ __RPC__out CharIndex *piBaseIndex);
        
        HRESULT ( STDMETHODCALLTYPE *BaseLineIndexToLocal )( 
            IVsTextLayer * This,
            /* [in] */ long iBaseLine,
            /* [in] */ CharIndex iBaseIndex,
            /* [out] */ __RPC__out long *piLocalLine,
            /* [out] */ __RPC__out CharIndex *piLocalIndex);
        
        HRESULT ( STDMETHODCALLTYPE *LocalLineIndexToDeeperLayer )( 
            IVsTextLayer * This,
            /* [in] */ __RPC__in_opt IVsTextLayer *pTargetLayer,
            /* [in] */ long iLocalLine,
            /* [in] */ CharIndex iLocalIndex,
            /* [out] */ __RPC__out long *piTargetLine,
            /* [out] */ __RPC__out CharIndex *piTargetIndex);
        
        HRESULT ( STDMETHODCALLTYPE *DeeperLayerLineIndexToLocal )( 
            IVsTextLayer * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IVsTextLayer *pTargetLayer,
            /* [in] */ long iLayerLine,
            /* [in] */ CharIndex iLayerIndex,
            /* [out] */ __RPC__out long *piLocalLine,
            /* [out] */ __RPC__out CharIndex *piLocalIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetBaseBuffer )( 
            IVsTextLayer * This,
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppiBuf);
        
        HRESULT ( STDMETHODCALLTYPE *LockBufferEx )( 
            IVsTextLayer * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockBufferEx )( 
            IVsTextLayer * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetLengthOfLine )( 
            IVsTextLayer * This,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineCount )( 
            IVsTextLayer * This,
            /* [out] */ __RPC__out long *piLineCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetLastLineIndex )( 
            IVsTextLayer * This,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out long *piIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerData )( 
            IVsTextLayer * This,
            /* [in] */ long iTopLine,
            /* [in] */ long iBottomLine,
            /* [out] */ __RPC__out MARKERDATA *pMarkerData);
        
        HRESULT ( STDMETHODCALLTYPE *ReleaseMarkerData )( 
            IVsTextLayer * This,
            /* [in] */ __RPC__in MARKERDATA *pMarkerData);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineDataEx )( 
            IVsTextLayer * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ long iLine,
            /* [in] */ long iStartIndex,
            /* [in] */ long iEndIndex,
            /* [out] */ __RPC__out LINEDATAEX *pLineData,
            /* [in] */ __RPC__in MARKERDATA *pMarkerData);
        
        HRESULT ( STDMETHODCALLTYPE *ReleaseLineDataEx )( 
            IVsTextLayer * This,
            /* [in] */ __RPC__in LINEDATAEX *pLineData);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineText )( 
            IVsTextLayer * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBuf);
        
        HRESULT ( STDMETHODCALLTYPE *CopyLineText )( 
            IVsTextLayer * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPWSTR pszBuf,
            /* [out][in] */ __RPC__inout long *pcchBuf);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceLines )( 
            IVsTextLayer * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText,
            /* [in] */ long iNewLen,
            /* [out] */ __RPC__out TextSpan *pChangedSpan);
        
        HRESULT ( STDMETHODCALLTYPE *CanReplaceLines )( 
            IVsTextLayer * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ long iNewLen);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTrackingPoint )( 
            IVsTextLayer * This,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__deref_out_opt IVsTextTrackingPoint **ppMarker);
        
        HRESULT ( STDMETHODCALLTYPE *EnumLayerMarkers )( 
            IVsTextLayer * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ long iMarkerType,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsEnumLayerMarkers **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceLinesEx )( 
            IVsTextLayer * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ __RPC__in LPCWSTR pszText,
            /* [in] */ long iNewLen,
            /* [out] */ __RPC__out TextSpan *pChangedSpan);
        
        HRESULT ( STDMETHODCALLTYPE *MapLocalSpansToTextOriginatingLayer )( 
            IVsTextLayer * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IVsEnumTextSpans *pLocalSpanEnum,
            /* [out] */ __RPC__deref_out_opt IVsTextLayer **ppTargetLayer,
            /* [out] */ __RPC__deref_out_opt IVsEnumTextSpans **ppTargetSpanEnum);
        
        END_INTERFACE
    } IVsTextLayerVtbl;

    interface IVsTextLayer
    {
        CONST_VTBL struct IVsTextLayerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextLayer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextLayer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextLayer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextLayer_LocalLineIndexToBase(This,iLocalLine,iLocalIndex,piBaseLine,piBaseIndex)	\
    ( (This)->lpVtbl -> LocalLineIndexToBase(This,iLocalLine,iLocalIndex,piBaseLine,piBaseIndex) ) 

#define IVsTextLayer_BaseLineIndexToLocal(This,iBaseLine,iBaseIndex,piLocalLine,piLocalIndex)	\
    ( (This)->lpVtbl -> BaseLineIndexToLocal(This,iBaseLine,iBaseIndex,piLocalLine,piLocalIndex) ) 

#define IVsTextLayer_LocalLineIndexToDeeperLayer(This,pTargetLayer,iLocalLine,iLocalIndex,piTargetLine,piTargetIndex)	\
    ( (This)->lpVtbl -> LocalLineIndexToDeeperLayer(This,pTargetLayer,iLocalLine,iLocalIndex,piTargetLine,piTargetIndex) ) 

#define IVsTextLayer_DeeperLayerLineIndexToLocal(This,dwFlags,pTargetLayer,iLayerLine,iLayerIndex,piLocalLine,piLocalIndex)	\
    ( (This)->lpVtbl -> DeeperLayerLineIndexToLocal(This,dwFlags,pTargetLayer,iLayerLine,iLayerIndex,piLocalLine,piLocalIndex) ) 

#define IVsTextLayer_GetBaseBuffer(This,ppiBuf)	\
    ( (This)->lpVtbl -> GetBaseBuffer(This,ppiBuf) ) 

#define IVsTextLayer_LockBufferEx(This,dwFlags)	\
    ( (This)->lpVtbl -> LockBufferEx(This,dwFlags) ) 

#define IVsTextLayer_UnlockBufferEx(This,dwFlags)	\
    ( (This)->lpVtbl -> UnlockBufferEx(This,dwFlags) ) 

#define IVsTextLayer_GetLengthOfLine(This,iLine,piLength)	\
    ( (This)->lpVtbl -> GetLengthOfLine(This,iLine,piLength) ) 

#define IVsTextLayer_GetLineCount(This,piLineCount)	\
    ( (This)->lpVtbl -> GetLineCount(This,piLineCount) ) 

#define IVsTextLayer_GetLastLineIndex(This,piLine,piIndex)	\
    ( (This)->lpVtbl -> GetLastLineIndex(This,piLine,piIndex) ) 

#define IVsTextLayer_GetMarkerData(This,iTopLine,iBottomLine,pMarkerData)	\
    ( (This)->lpVtbl -> GetMarkerData(This,iTopLine,iBottomLine,pMarkerData) ) 

#define IVsTextLayer_ReleaseMarkerData(This,pMarkerData)	\
    ( (This)->lpVtbl -> ReleaseMarkerData(This,pMarkerData) ) 

#define IVsTextLayer_GetLineDataEx(This,dwFlags,iLine,iStartIndex,iEndIndex,pLineData,pMarkerData)	\
    ( (This)->lpVtbl -> GetLineDataEx(This,dwFlags,iLine,iStartIndex,iEndIndex,pLineData,pMarkerData) ) 

#define IVsTextLayer_ReleaseLineDataEx(This,pLineData)	\
    ( (This)->lpVtbl -> ReleaseLineDataEx(This,pLineData) ) 

#define IVsTextLayer_GetLineText(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pbstrBuf)	\
    ( (This)->lpVtbl -> GetLineText(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pbstrBuf) ) 

#define IVsTextLayer_CopyLineText(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pszBuf,pcchBuf)	\
    ( (This)->lpVtbl -> CopyLineText(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pszBuf,pcchBuf) ) 

#define IVsTextLayer_ReplaceLines(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pszText,iNewLen,pChangedSpan)	\
    ( (This)->lpVtbl -> ReplaceLines(This,iStartLine,iStartIndex,iEndLine,iEndIndex,pszText,iNewLen,pChangedSpan) ) 

#define IVsTextLayer_CanReplaceLines(This,iStartLine,iStartIndex,iEndLine,iEndIndex,iNewLen)	\
    ( (This)->lpVtbl -> CanReplaceLines(This,iStartLine,iStartIndex,iEndLine,iEndIndex,iNewLen) ) 

#define IVsTextLayer_CreateTrackingPoint(This,iLine,iIndex,ppMarker)	\
    ( (This)->lpVtbl -> CreateTrackingPoint(This,iLine,iIndex,ppMarker) ) 

#define IVsTextLayer_EnumLayerMarkers(This,iStartLine,iStartIndex,iEndLine,iEndIndex,iMarkerType,dwFlags,ppEnum)	\
    ( (This)->lpVtbl -> EnumLayerMarkers(This,iStartLine,iStartIndex,iEndLine,iEndIndex,iMarkerType,dwFlags,ppEnum) ) 

#define IVsTextLayer_ReplaceLinesEx(This,dwFlags,iStartLine,iStartIndex,iEndLine,iEndIndex,pszText,iNewLen,pChangedSpan)	\
    ( (This)->lpVtbl -> ReplaceLinesEx(This,dwFlags,iStartLine,iStartIndex,iEndLine,iEndIndex,pszText,iNewLen,pChangedSpan) ) 

#define IVsTextLayer_MapLocalSpansToTextOriginatingLayer(This,dwFlags,pLocalSpanEnum,ppTargetLayer,ppTargetSpanEnum)	\
    ( (This)->lpVtbl -> MapLocalSpansToTextOriginatingLayer(This,dwFlags,pLocalSpanEnum,ppTargetLayer,ppTargetSpanEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextLayer_INTERFACE_DEFINED__ */


#ifndef __IVsSyntheticRegion_INTERFACE_DEFINED__
#define __IVsSyntheticRegion_INTERFACE_DEFINED__

/* interface IVsSyntheticRegion */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsSyntheticRegion;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B9C97AB2-2A37-4134-93E9-C3014F364AA8")
    IVsSyntheticRegion : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMarkerType( 
            /* [out] */ __RPC__out long *piMarkerType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBehavior( 
            /* [out] */ __RPC__out DWORD *pdwBehavior) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetText( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetText( 
            /* [in] */ __RPC__in LPCWSTR pszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBaseBufferAnchor( 
            /* [out] */ __RPC__out long *piAnchorLine,
            /* [out] */ __RPC__out long *piAnchorIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBaseBufferAnchor( 
            /* [in] */ long iAnchorLine,
            /* [in] */ long iAnchorIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClientData( 
            /* [out] */ __RPC__out DWORD_PTR *pdwData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetClientData( 
            /* [in] */ DWORD_PTR dwData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Invalidate( 
            /* [in] */ DWORD dwUpdate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsValid( 
            /* [out] */ __RPC__out BOOL *pfValid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTextLayer( 
            /* [out] */ __RPC__deref_out_opt IVsTextLayer **ppLayer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSyntheticLayerSpan( 
            /* [out] */ __RPC__out TextSpan *pSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTextImage( 
            /* [out] */ __RPC__deref_out_opt IVsTextImage **ppImage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsSyntheticRegionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsSyntheticRegion * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsSyntheticRegion * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsSyntheticRegion * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerType )( 
            IVsSyntheticRegion * This,
            /* [out] */ __RPC__out long *piMarkerType);
        
        HRESULT ( STDMETHODCALLTYPE *GetBehavior )( 
            IVsSyntheticRegion * This,
            /* [out] */ __RPC__out DWORD *pdwBehavior);
        
        HRESULT ( STDMETHODCALLTYPE *GetText )( 
            IVsSyntheticRegion * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *SetText )( 
            IVsSyntheticRegion * This,
            /* [in] */ __RPC__in LPCWSTR pszText);
        
        HRESULT ( STDMETHODCALLTYPE *GetBaseBufferAnchor )( 
            IVsSyntheticRegion * This,
            /* [out] */ __RPC__out long *piAnchorLine,
            /* [out] */ __RPC__out long *piAnchorIndex);
        
        HRESULT ( STDMETHODCALLTYPE *SetBaseBufferAnchor )( 
            IVsSyntheticRegion * This,
            /* [in] */ long iAnchorLine,
            /* [in] */ long iAnchorIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetClientData )( 
            IVsSyntheticRegion * This,
            /* [out] */ __RPC__out DWORD_PTR *pdwData);
        
        HRESULT ( STDMETHODCALLTYPE *SetClientData )( 
            IVsSyntheticRegion * This,
            /* [in] */ DWORD_PTR dwData);
        
        HRESULT ( STDMETHODCALLTYPE *Invalidate )( 
            IVsSyntheticRegion * This,
            /* [in] */ DWORD dwUpdate);
        
        HRESULT ( STDMETHODCALLTYPE *IsValid )( 
            IVsSyntheticRegion * This,
            /* [out] */ __RPC__out BOOL *pfValid);
        
        HRESULT ( STDMETHODCALLTYPE *GetTextLayer )( 
            IVsSyntheticRegion * This,
            /* [out] */ __RPC__deref_out_opt IVsTextLayer **ppLayer);
        
        HRESULT ( STDMETHODCALLTYPE *GetSyntheticLayerSpan )( 
            IVsSyntheticRegion * This,
            /* [out] */ __RPC__out TextSpan *pSpan);
        
        HRESULT ( STDMETHODCALLTYPE *GetTextImage )( 
            IVsSyntheticRegion * This,
            /* [out] */ __RPC__deref_out_opt IVsTextImage **ppImage);
        
        END_INTERFACE
    } IVsSyntheticRegionVtbl;

    interface IVsSyntheticRegion
    {
        CONST_VTBL struct IVsSyntheticRegionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsSyntheticRegion_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsSyntheticRegion_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsSyntheticRegion_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsSyntheticRegion_GetMarkerType(This,piMarkerType)	\
    ( (This)->lpVtbl -> GetMarkerType(This,piMarkerType) ) 

#define IVsSyntheticRegion_GetBehavior(This,pdwBehavior)	\
    ( (This)->lpVtbl -> GetBehavior(This,pdwBehavior) ) 

#define IVsSyntheticRegion_GetText(This,pbstrText)	\
    ( (This)->lpVtbl -> GetText(This,pbstrText) ) 

#define IVsSyntheticRegion_SetText(This,pszText)	\
    ( (This)->lpVtbl -> SetText(This,pszText) ) 

#define IVsSyntheticRegion_GetBaseBufferAnchor(This,piAnchorLine,piAnchorIndex)	\
    ( (This)->lpVtbl -> GetBaseBufferAnchor(This,piAnchorLine,piAnchorIndex) ) 

#define IVsSyntheticRegion_SetBaseBufferAnchor(This,iAnchorLine,iAnchorIndex)	\
    ( (This)->lpVtbl -> SetBaseBufferAnchor(This,iAnchorLine,iAnchorIndex) ) 

#define IVsSyntheticRegion_GetClientData(This,pdwData)	\
    ( (This)->lpVtbl -> GetClientData(This,pdwData) ) 

#define IVsSyntheticRegion_SetClientData(This,dwData)	\
    ( (This)->lpVtbl -> SetClientData(This,dwData) ) 

#define IVsSyntheticRegion_Invalidate(This,dwUpdate)	\
    ( (This)->lpVtbl -> Invalidate(This,dwUpdate) ) 

#define IVsSyntheticRegion_IsValid(This,pfValid)	\
    ( (This)->lpVtbl -> IsValid(This,pfValid) ) 

#define IVsSyntheticRegion_GetTextLayer(This,ppLayer)	\
    ( (This)->lpVtbl -> GetTextLayer(This,ppLayer) ) 

#define IVsSyntheticRegion_GetSyntheticLayerSpan(This,pSpan)	\
    ( (This)->lpVtbl -> GetSyntheticLayerSpan(This,pSpan) ) 

#define IVsSyntheticRegion_GetTextImage(This,ppImage)	\
    ( (This)->lpVtbl -> GetTextImage(This,ppImage) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsSyntheticRegion_INTERFACE_DEFINED__ */


#ifndef __IVsEnumSyntheticRegions_INTERFACE_DEFINED__
#define __IVsEnumSyntheticRegions_INTERFACE_DEFINED__

/* interface IVsEnumSyntheticRegions */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumSyntheticRegions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("67D9795E-CEA4-45FF-A3DA-055CF78F139A")
    IVsEnumSyntheticRegions : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG cEl,
            /* [size_is][out] */ __RPC__out_ecount_full(cEl) IVsSyntheticRegion **ppOut,
            /* [out] */ __RPC__out ULONG *pcElFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *pcRegions) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumSyntheticRegionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumSyntheticRegions * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumSyntheticRegions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumSyntheticRegions * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumSyntheticRegions * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumSyntheticRegions * This,
            /* [in] */ ULONG cEl,
            /* [size_is][out] */ __RPC__out_ecount_full(cEl) IVsSyntheticRegion **ppOut,
            /* [out] */ __RPC__out ULONG *pcElFetched);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsEnumSyntheticRegions * This,
            /* [out] */ __RPC__out ULONG *pcRegions);
        
        END_INTERFACE
    } IVsEnumSyntheticRegionsVtbl;

    interface IVsEnumSyntheticRegions
    {
        CONST_VTBL struct IVsEnumSyntheticRegionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumSyntheticRegions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumSyntheticRegions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumSyntheticRegions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumSyntheticRegions_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumSyntheticRegions_Next(This,cEl,ppOut,pcElFetched)	\
    ( (This)->lpVtbl -> Next(This,cEl,ppOut,pcElFetched) ) 

#define IVsEnumSyntheticRegions_GetCount(This,pcRegions)	\
    ( (This)->lpVtbl -> GetCount(This,pcRegions) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumSyntheticRegions_INTERFACE_DEFINED__ */


#ifndef __IVsSyntheticTextClient_INTERFACE_DEFINED__
#define __IVsSyntheticTextClient_INTERFACE_DEFINED__

/* interface IVsSyntheticTextClient */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsSyntheticTextClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1A8FBF86-5949-4E08-B9B6-F528AFB2DF9C")
    IVsSyntheticTextClient : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnSyntheticRegionChange( 
            /* [in] */ __RPC__in_opt IVsSyntheticRegion *pSynthReg,
            /* [in] */ SYNTHETIC_REGION_EVENT EventCode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTipText( 
            /* [in] */ __RPC__in_opt IVsSyntheticRegion *pSynthReg,
            /* [optional][out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetErrorText( 
            /* [in] */ DWORD dwReason,
            /* [in] */ __RPC__in_opt IVsSyntheticRegion *pSynthReg,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMarkerCommandInfo( 
            /* [in] */ __RPC__in_opt IVsSyntheticRegion *pSynthReg,
            /* [in] */ long iItem,
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out DWORD *pcmdf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ExecMarkerCommand( 
            /* [in] */ __RPC__in_opt IVsSyntheticRegion *pSynthReg,
            /* [in] */ long iItem) = 0;
        
        virtual void STDMETHODCALLTYPE OnBeforeSessionEnd( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsSyntheticTextClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsSyntheticTextClient * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsSyntheticTextClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsSyntheticTextClient * This);
        
        void ( STDMETHODCALLTYPE *OnSyntheticRegionChange )( 
            IVsSyntheticTextClient * This,
            /* [in] */ __RPC__in_opt IVsSyntheticRegion *pSynthReg,
            /* [in] */ SYNTHETIC_REGION_EVENT EventCode);
        
        HRESULT ( STDMETHODCALLTYPE *GetTipText )( 
            IVsSyntheticTextClient * This,
            /* [in] */ __RPC__in_opt IVsSyntheticRegion *pSynthReg,
            /* [optional][out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrorText )( 
            IVsSyntheticTextClient * This,
            /* [in] */ DWORD dwReason,
            /* [in] */ __RPC__in_opt IVsSyntheticRegion *pSynthReg,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerCommandInfo )( 
            IVsSyntheticTextClient * This,
            /* [in] */ __RPC__in_opt IVsSyntheticRegion *pSynthReg,
            /* [in] */ long iItem,
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out DWORD *pcmdf);
        
        HRESULT ( STDMETHODCALLTYPE *ExecMarkerCommand )( 
            IVsSyntheticTextClient * This,
            /* [in] */ __RPC__in_opt IVsSyntheticRegion *pSynthReg,
            /* [in] */ long iItem);
        
        void ( STDMETHODCALLTYPE *OnBeforeSessionEnd )( 
            IVsSyntheticTextClient * This);
        
        END_INTERFACE
    } IVsSyntheticTextClientVtbl;

    interface IVsSyntheticTextClient
    {
        CONST_VTBL struct IVsSyntheticTextClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsSyntheticTextClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsSyntheticTextClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsSyntheticTextClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsSyntheticTextClient_OnSyntheticRegionChange(This,pSynthReg,EventCode)	\
    ( (This)->lpVtbl -> OnSyntheticRegionChange(This,pSynthReg,EventCode) ) 

#define IVsSyntheticTextClient_GetTipText(This,pSynthReg,pbstrText)	\
    ( (This)->lpVtbl -> GetTipText(This,pSynthReg,pbstrText) ) 

#define IVsSyntheticTextClient_GetErrorText(This,dwReason,pSynthReg,pbstrText)	\
    ( (This)->lpVtbl -> GetErrorText(This,dwReason,pSynthReg,pbstrText) ) 

#define IVsSyntheticTextClient_GetMarkerCommandInfo(This,pSynthReg,iItem,pbstrText,pcmdf)	\
    ( (This)->lpVtbl -> GetMarkerCommandInfo(This,pSynthReg,iItem,pbstrText,pcmdf) ) 

#define IVsSyntheticTextClient_ExecMarkerCommand(This,pSynthReg,iItem)	\
    ( (This)->lpVtbl -> ExecMarkerCommand(This,pSynthReg,iItem) ) 

#define IVsSyntheticTextClient_OnBeforeSessionEnd(This)	\
    ( (This)->lpVtbl -> OnBeforeSessionEnd(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsSyntheticTextClient_INTERFACE_DEFINED__ */


#ifndef __IVsSyntheticTextSession_INTERFACE_DEFINED__
#define __IVsSyntheticTextSession_INTERFACE_DEFINED__

/* interface IVsSyntheticTextSession */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsSyntheticTextSession;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0C71E351-5141-4B6F-B838-E212F0764875")
    IVsSyntheticTextSession : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddSyntheticRegions( 
            /* [in] */ DWORD dwUpdateFlags,
            /* [in] */ long cRegions,
            /* [size_is][in] */ __RPC__in_ecount_full(cRegions) NewSyntheticRegion *rgSynthReg,
            /* [out] */ __RPC__deref_out_opt IVsEnumSyntheticRegions **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumSyntheticRegions( 
            /* [in] */ DWORD dwFindFlags,
            /* [in] */ DWORD_PTR dwCookie,
            /* [in] */ __RPC__in TextSpan *ptsRange,
            /* [out] */ __RPC__deref_out_opt IVsEnumSyntheticRegions **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnadviseClient( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Terminate( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsSyntheticTextSessionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsSyntheticTextSession * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsSyntheticTextSession * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsSyntheticTextSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddSyntheticRegions )( 
            IVsSyntheticTextSession * This,
            /* [in] */ DWORD dwUpdateFlags,
            /* [in] */ long cRegions,
            /* [size_is][in] */ __RPC__in_ecount_full(cRegions) NewSyntheticRegion *rgSynthReg,
            /* [out] */ __RPC__deref_out_opt IVsEnumSyntheticRegions **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *EnumSyntheticRegions )( 
            IVsSyntheticTextSession * This,
            /* [in] */ DWORD dwFindFlags,
            /* [in] */ DWORD_PTR dwCookie,
            /* [in] */ __RPC__in TextSpan *ptsRange,
            /* [out] */ __RPC__deref_out_opt IVsEnumSyntheticRegions **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseClient )( 
            IVsSyntheticTextSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *Terminate )( 
            IVsSyntheticTextSession * This);
        
        END_INTERFACE
    } IVsSyntheticTextSessionVtbl;

    interface IVsSyntheticTextSession
    {
        CONST_VTBL struct IVsSyntheticTextSessionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsSyntheticTextSession_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsSyntheticTextSession_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsSyntheticTextSession_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsSyntheticTextSession_AddSyntheticRegions(This,dwUpdateFlags,cRegions,rgSynthReg,ppEnum)	\
    ( (This)->lpVtbl -> AddSyntheticRegions(This,dwUpdateFlags,cRegions,rgSynthReg,ppEnum) ) 

#define IVsSyntheticTextSession_EnumSyntheticRegions(This,dwFindFlags,dwCookie,ptsRange,ppEnum)	\
    ( (This)->lpVtbl -> EnumSyntheticRegions(This,dwFindFlags,dwCookie,ptsRange,ppEnum) ) 

#define IVsSyntheticTextSession_UnadviseClient(This)	\
    ( (This)->lpVtbl -> UnadviseClient(This) ) 

#define IVsSyntheticTextSession_Terminate(This)	\
    ( (This)->lpVtbl -> Terminate(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsSyntheticTextSession_INTERFACE_DEFINED__ */


#ifndef __IVsSyntheticTextManager_INTERFACE_DEFINED__
#define __IVsSyntheticTextManager_INTERFACE_DEFINED__

/* interface IVsSyntheticTextManager */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsSyntheticTextManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2AB20832-0942-42F9-974F-4E65B85DABF3")
    IVsSyntheticTextManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSyntheticTextSession( 
            /* [in] */ __RPC__in_opt IUnknown *pOwningObject,
            /* [out] */ __RPC__deref_out_opt IVsSyntheticTextSession **ppSession) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateSyntheticTextSession( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IUnknown *pOwningObject,
            /* [in] */ __RPC__in_opt IVsSyntheticTextClient *pClient,
            /* [out] */ __RPC__deref_out_opt IVsSyntheticTextSession **ppState) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsSyntheticTextManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsSyntheticTextManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsSyntheticTextManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsSyntheticTextManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetSyntheticTextSession )( 
            IVsSyntheticTextManager * This,
            /* [in] */ __RPC__in_opt IUnknown *pOwningObject,
            /* [out] */ __RPC__deref_out_opt IVsSyntheticTextSession **ppSession);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSyntheticTextSession )( 
            IVsSyntheticTextManager * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IUnknown *pOwningObject,
            /* [in] */ __RPC__in_opt IVsSyntheticTextClient *pClient,
            /* [out] */ __RPC__deref_out_opt IVsSyntheticTextSession **ppState);
        
        END_INTERFACE
    } IVsSyntheticTextManagerVtbl;

    interface IVsSyntheticTextManager
    {
        CONST_VTBL struct IVsSyntheticTextManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsSyntheticTextManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsSyntheticTextManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsSyntheticTextManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsSyntheticTextManager_GetSyntheticTextSession(This,pOwningObject,ppSession)	\
    ( (This)->lpVtbl -> GetSyntheticTextSession(This,pOwningObject,ppSession) ) 

#define IVsSyntheticTextManager_CreateSyntheticTextSession(This,dwFlags,pOwningObject,pClient,ppState)	\
    ( (This)->lpVtbl -> CreateSyntheticTextSession(This,dwFlags,pOwningObject,pClient,ppState) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsSyntheticTextManager_INTERFACE_DEFINED__ */


#ifndef __IVsTextHidingLayerModule_INTERFACE_DEFINED__
#define __IVsTextHidingLayerModule_INTERFACE_DEFINED__

/* interface IVsTextHidingLayerModule */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextHidingLayerModule;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1A705427-815C-4DB6-9B5C-6D45CDDDD0C4")
    IVsTextHidingLayerModule : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MakeBaseSpanVisible( 
            __RPC__in TextSpan *pBaseSpan) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextHidingLayerModuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextHidingLayerModule * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextHidingLayerModule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextHidingLayerModule * This);
        
        HRESULT ( STDMETHODCALLTYPE *MakeBaseSpanVisible )( 
            IVsTextHidingLayerModule * This,
            __RPC__in TextSpan *pBaseSpan);
        
        END_INTERFACE
    } IVsTextHidingLayerModuleVtbl;

    interface IVsTextHidingLayerModule
    {
        CONST_VTBL struct IVsTextHidingLayerModuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextHidingLayerModule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextHidingLayerModule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextHidingLayerModule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextHidingLayerModule_MakeBaseSpanVisible(This,pBaseSpan)	\
    ( (This)->lpVtbl -> MakeBaseSpanVisible(This,pBaseSpan) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextHidingLayerModule_INTERFACE_DEFINED__ */


#ifndef __IVsHiddenRegion_INTERFACE_DEFINED__
#define __IVsHiddenRegion_INTERFACE_DEFINED__

/* interface IVsHiddenRegion */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsHiddenRegion;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("41E57382-63F9-48E6-9DBD-163D2B14D41B")
    IVsHiddenRegion : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetType( 
            /* [out] */ __RPC__out long *piHiddenRegionType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBehavior( 
            /* [out] */ __RPC__out DWORD *pdwBehavior) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetState( 
            /* [out] */ __RPC__out DWORD *dwState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetState( 
            /* [in] */ DWORD dwState,
            /* [in] */ DWORD dwUpdate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBanner( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBanner) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBanner( 
            /* [in] */ __RPC__in LPCWSTR pszBanner) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSpan( 
            /* [out] */ __RPC__out TextSpan *pSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSpan( 
            /* [in] */ __RPC__in TextSpan *pSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClientData( 
            /* [out] */ __RPC__out DWORD_PTR *pdwData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetClientData( 
            /* [in] */ DWORD_PTR dwData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Invalidate( 
            /* [in] */ DWORD dwUpdate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsValid( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBaseBuffer( 
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsHiddenRegionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsHiddenRegion * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsHiddenRegion * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsHiddenRegion * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IVsHiddenRegion * This,
            /* [out] */ __RPC__out long *piHiddenRegionType);
        
        HRESULT ( STDMETHODCALLTYPE *GetBehavior )( 
            IVsHiddenRegion * This,
            /* [out] */ __RPC__out DWORD *pdwBehavior);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IVsHiddenRegion * This,
            /* [out] */ __RPC__out DWORD *dwState);
        
        HRESULT ( STDMETHODCALLTYPE *SetState )( 
            IVsHiddenRegion * This,
            /* [in] */ DWORD dwState,
            /* [in] */ DWORD dwUpdate);
        
        HRESULT ( STDMETHODCALLTYPE *GetBanner )( 
            IVsHiddenRegion * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBanner);
        
        HRESULT ( STDMETHODCALLTYPE *SetBanner )( 
            IVsHiddenRegion * This,
            /* [in] */ __RPC__in LPCWSTR pszBanner);
        
        HRESULT ( STDMETHODCALLTYPE *GetSpan )( 
            IVsHiddenRegion * This,
            /* [out] */ __RPC__out TextSpan *pSpan);
        
        HRESULT ( STDMETHODCALLTYPE *SetSpan )( 
            IVsHiddenRegion * This,
            /* [in] */ __RPC__in TextSpan *pSpan);
        
        HRESULT ( STDMETHODCALLTYPE *GetClientData )( 
            IVsHiddenRegion * This,
            /* [out] */ __RPC__out DWORD_PTR *pdwData);
        
        HRESULT ( STDMETHODCALLTYPE *SetClientData )( 
            IVsHiddenRegion * This,
            /* [in] */ DWORD_PTR dwData);
        
        HRESULT ( STDMETHODCALLTYPE *Invalidate )( 
            IVsHiddenRegion * This,
            /* [in] */ DWORD dwUpdate);
        
        HRESULT ( STDMETHODCALLTYPE *IsValid )( 
            IVsHiddenRegion * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetBaseBuffer )( 
            IVsHiddenRegion * This,
            /* [out] */ __RPC__deref_out_opt IVsTextLines **ppBuffer);
        
        END_INTERFACE
    } IVsHiddenRegionVtbl;

    interface IVsHiddenRegion
    {
        CONST_VTBL struct IVsHiddenRegionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsHiddenRegion_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsHiddenRegion_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsHiddenRegion_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsHiddenRegion_GetType(This,piHiddenRegionType)	\
    ( (This)->lpVtbl -> GetType(This,piHiddenRegionType) ) 

#define IVsHiddenRegion_GetBehavior(This,pdwBehavior)	\
    ( (This)->lpVtbl -> GetBehavior(This,pdwBehavior) ) 

#define IVsHiddenRegion_GetState(This,dwState)	\
    ( (This)->lpVtbl -> GetState(This,dwState) ) 

#define IVsHiddenRegion_SetState(This,dwState,dwUpdate)	\
    ( (This)->lpVtbl -> SetState(This,dwState,dwUpdate) ) 

#define IVsHiddenRegion_GetBanner(This,pbstrBanner)	\
    ( (This)->lpVtbl -> GetBanner(This,pbstrBanner) ) 

#define IVsHiddenRegion_SetBanner(This,pszBanner)	\
    ( (This)->lpVtbl -> SetBanner(This,pszBanner) ) 

#define IVsHiddenRegion_GetSpan(This,pSpan)	\
    ( (This)->lpVtbl -> GetSpan(This,pSpan) ) 

#define IVsHiddenRegion_SetSpan(This,pSpan)	\
    ( (This)->lpVtbl -> SetSpan(This,pSpan) ) 

#define IVsHiddenRegion_GetClientData(This,pdwData)	\
    ( (This)->lpVtbl -> GetClientData(This,pdwData) ) 

#define IVsHiddenRegion_SetClientData(This,dwData)	\
    ( (This)->lpVtbl -> SetClientData(This,dwData) ) 

#define IVsHiddenRegion_Invalidate(This,dwUpdate)	\
    ( (This)->lpVtbl -> Invalidate(This,dwUpdate) ) 

#define IVsHiddenRegion_IsValid(This)	\
    ( (This)->lpVtbl -> IsValid(This) ) 

#define IVsHiddenRegion_GetBaseBuffer(This,ppBuffer)	\
    ( (This)->lpVtbl -> GetBaseBuffer(This,ppBuffer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsHiddenRegion_INTERFACE_DEFINED__ */


#ifndef __IVsEnumHiddenRegions_INTERFACE_DEFINED__
#define __IVsEnumHiddenRegions_INTERFACE_DEFINED__

/* interface IVsEnumHiddenRegions */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEnumHiddenRegions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("681B0FFF-30B4-4578-A911-B67FB049DAFA")
    IVsEnumHiddenRegions : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG cEl,
            /* [size_is][out] */ __RPC__out_ecount_full(cEl) IVsHiddenRegion **ppOut,
            /* [out] */ __RPC__out ULONG *pcElFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *pcRegions) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEnumHiddenRegionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEnumHiddenRegions * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEnumHiddenRegions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEnumHiddenRegions * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IVsEnumHiddenRegions * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IVsEnumHiddenRegions * This,
            /* [in] */ ULONG cEl,
            /* [size_is][out] */ __RPC__out_ecount_full(cEl) IVsHiddenRegion **ppOut,
            /* [out] */ __RPC__out ULONG *pcElFetched);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsEnumHiddenRegions * This,
            /* [out] */ __RPC__out ULONG *pcRegions);
        
        END_INTERFACE
    } IVsEnumHiddenRegionsVtbl;

    interface IVsEnumHiddenRegions
    {
        CONST_VTBL struct IVsEnumHiddenRegionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEnumHiddenRegions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEnumHiddenRegions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEnumHiddenRegions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEnumHiddenRegions_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IVsEnumHiddenRegions_Next(This,cEl,ppOut,pcElFetched)	\
    ( (This)->lpVtbl -> Next(This,cEl,ppOut,pcElFetched) ) 

#define IVsEnumHiddenRegions_GetCount(This,pcRegions)	\
    ( (This)->lpVtbl -> GetCount(This,pcRegions) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEnumHiddenRegions_INTERFACE_DEFINED__ */


#ifndef __IVsHiddenTextClient_INTERFACE_DEFINED__
#define __IVsHiddenTextClient_INTERFACE_DEFINED__

/* interface IVsHiddenTextClient */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsHiddenTextClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CA3F0E7F-CFA6-444E-A3FE-7B3DFAD6E5E4")
    IVsHiddenTextClient : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnHiddenRegionChange( 
            /* [in] */ __RPC__in_opt IVsHiddenRegion *pHidReg,
            /* [in] */ HIDDEN_REGION_EVENT EventCode,
            /* [in] */ BOOL fBufferModifiable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTipText( 
            /* [in] */ __RPC__in_opt IVsHiddenRegion *pHidReg,
            /* [optional][out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMarkerCommandInfo( 
            /* [in] */ __RPC__in_opt IVsHiddenRegion *pHidReg,
            /* [in] */ long iItem,
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out DWORD *pcmdf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ExecMarkerCommand( 
            /* [in] */ __RPC__in_opt IVsHiddenRegion *pHidReg,
            /* [in] */ long iItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MakeBaseSpanVisible( 
            /* [in] */ __RPC__in_opt IVsHiddenRegion *pHidReg,
            /* [in] */ __RPC__in TextSpan *pBaseSpan) = 0;
        
        virtual void STDMETHODCALLTYPE OnBeforeSessionEnd( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsHiddenTextClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsHiddenTextClient * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsHiddenTextClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsHiddenTextClient * This);
        
        void ( STDMETHODCALLTYPE *OnHiddenRegionChange )( 
            IVsHiddenTextClient * This,
            /* [in] */ __RPC__in_opt IVsHiddenRegion *pHidReg,
            /* [in] */ HIDDEN_REGION_EVENT EventCode,
            /* [in] */ BOOL fBufferModifiable);
        
        HRESULT ( STDMETHODCALLTYPE *GetTipText )( 
            IVsHiddenTextClient * This,
            /* [in] */ __RPC__in_opt IVsHiddenRegion *pHidReg,
            /* [optional][out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarkerCommandInfo )( 
            IVsHiddenTextClient * This,
            /* [in] */ __RPC__in_opt IVsHiddenRegion *pHidReg,
            /* [in] */ long iItem,
            /* [custom][out] */ __RPC__deref_out_opt BSTR *pbstrText,
            /* [out] */ __RPC__out DWORD *pcmdf);
        
        HRESULT ( STDMETHODCALLTYPE *ExecMarkerCommand )( 
            IVsHiddenTextClient * This,
            /* [in] */ __RPC__in_opt IVsHiddenRegion *pHidReg,
            /* [in] */ long iItem);
        
        HRESULT ( STDMETHODCALLTYPE *MakeBaseSpanVisible )( 
            IVsHiddenTextClient * This,
            /* [in] */ __RPC__in_opt IVsHiddenRegion *pHidReg,
            /* [in] */ __RPC__in TextSpan *pBaseSpan);
        
        void ( STDMETHODCALLTYPE *OnBeforeSessionEnd )( 
            IVsHiddenTextClient * This);
        
        END_INTERFACE
    } IVsHiddenTextClientVtbl;

    interface IVsHiddenTextClient
    {
        CONST_VTBL struct IVsHiddenTextClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsHiddenTextClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsHiddenTextClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsHiddenTextClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsHiddenTextClient_OnHiddenRegionChange(This,pHidReg,EventCode,fBufferModifiable)	\
    ( (This)->lpVtbl -> OnHiddenRegionChange(This,pHidReg,EventCode,fBufferModifiable) ) 

#define IVsHiddenTextClient_GetTipText(This,pHidReg,pbstrText)	\
    ( (This)->lpVtbl -> GetTipText(This,pHidReg,pbstrText) ) 

#define IVsHiddenTextClient_GetMarkerCommandInfo(This,pHidReg,iItem,pbstrText,pcmdf)	\
    ( (This)->lpVtbl -> GetMarkerCommandInfo(This,pHidReg,iItem,pbstrText,pcmdf) ) 

#define IVsHiddenTextClient_ExecMarkerCommand(This,pHidReg,iItem)	\
    ( (This)->lpVtbl -> ExecMarkerCommand(This,pHidReg,iItem) ) 

#define IVsHiddenTextClient_MakeBaseSpanVisible(This,pHidReg,pBaseSpan)	\
    ( (This)->lpVtbl -> MakeBaseSpanVisible(This,pHidReg,pBaseSpan) ) 

#define IVsHiddenTextClient_OnBeforeSessionEnd(This)	\
    ( (This)->lpVtbl -> OnBeforeSessionEnd(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsHiddenTextClient_INTERFACE_DEFINED__ */


#ifndef __IVsHiddenTextManager_INTERFACE_DEFINED__
#define __IVsHiddenTextManager_INTERFACE_DEFINED__

/* interface IVsHiddenTextManager */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsHiddenTextManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E5B1E59-53A7-4636-ADBB-0B23C561E293")
    IVsHiddenTextManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetHiddenTextSession( 
            /* [in] */ __RPC__in_opt IUnknown *pOwningObject,
            /* [out] */ __RPC__deref_out_opt IVsHiddenTextSession **ppSession) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateHiddenTextSession( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IUnknown *pOwningObject,
            /* [in] */ __RPC__in_opt IVsHiddenTextClient *pClient,
            /* [out] */ __RPC__deref_out_opt IVsHiddenTextSession **ppState) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsHiddenTextManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsHiddenTextManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsHiddenTextManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsHiddenTextManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetHiddenTextSession )( 
            IVsHiddenTextManager * This,
            /* [in] */ __RPC__in_opt IUnknown *pOwningObject,
            /* [out] */ __RPC__deref_out_opt IVsHiddenTextSession **ppSession);
        
        HRESULT ( STDMETHODCALLTYPE *CreateHiddenTextSession )( 
            IVsHiddenTextManager * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IUnknown *pOwningObject,
            /* [in] */ __RPC__in_opt IVsHiddenTextClient *pClient,
            /* [out] */ __RPC__deref_out_opt IVsHiddenTextSession **ppState);
        
        END_INTERFACE
    } IVsHiddenTextManagerVtbl;

    interface IVsHiddenTextManager
    {
        CONST_VTBL struct IVsHiddenTextManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsHiddenTextManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsHiddenTextManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsHiddenTextManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsHiddenTextManager_GetHiddenTextSession(This,pOwningObject,ppSession)	\
    ( (This)->lpVtbl -> GetHiddenTextSession(This,pOwningObject,ppSession) ) 

#define IVsHiddenTextManager_CreateHiddenTextSession(This,dwFlags,pOwningObject,pClient,ppState)	\
    ( (This)->lpVtbl -> CreateHiddenTextSession(This,dwFlags,pOwningObject,pClient,ppState) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsHiddenTextManager_INTERFACE_DEFINED__ */


#ifndef __IVsHiddenTextSession_INTERFACE_DEFINED__
#define __IVsHiddenTextSession_INTERFACE_DEFINED__

/* interface IVsHiddenTextSession */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsHiddenTextSession;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("82B21BAE-664B-43E1-95B1-0302805FF7D3")
    IVsHiddenTextSession : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddHiddenRegions( 
            /* [in] */ DWORD dwUpdateFlags,
            /* [in] */ long cRegions,
            /* [size_is][in] */ __RPC__in_ecount_full(cRegions) NewHiddenRegion *rgHidReg,
            /* [out] */ __RPC__deref_out_opt IVsEnumHiddenRegions **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumHiddenRegions( 
            /* [in] */ DWORD dwFindFlags,
            /* [in] */ DWORD_PTR dwCookie,
            /* [in] */ __RPC__in TextSpan *ptsRange,
            /* [out] */ __RPC__deref_out_opt IVsEnumHiddenRegions **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnadviseClient( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Terminate( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsHiddenTextSessionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsHiddenTextSession * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsHiddenTextSession * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsHiddenTextSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddHiddenRegions )( 
            IVsHiddenTextSession * This,
            /* [in] */ DWORD dwUpdateFlags,
            /* [in] */ long cRegions,
            /* [size_is][in] */ __RPC__in_ecount_full(cRegions) NewHiddenRegion *rgHidReg,
            /* [out] */ __RPC__deref_out_opt IVsEnumHiddenRegions **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *EnumHiddenRegions )( 
            IVsHiddenTextSession * This,
            /* [in] */ DWORD dwFindFlags,
            /* [in] */ DWORD_PTR dwCookie,
            /* [in] */ __RPC__in TextSpan *ptsRange,
            /* [out] */ __RPC__deref_out_opt IVsEnumHiddenRegions **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseClient )( 
            IVsHiddenTextSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *Terminate )( 
            IVsHiddenTextSession * This);
        
        END_INTERFACE
    } IVsHiddenTextSessionVtbl;

    interface IVsHiddenTextSession
    {
        CONST_VTBL struct IVsHiddenTextSessionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsHiddenTextSession_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsHiddenTextSession_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsHiddenTextSession_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsHiddenTextSession_AddHiddenRegions(This,dwUpdateFlags,cRegions,rgHidReg,ppEnum)	\
    ( (This)->lpVtbl -> AddHiddenRegions(This,dwUpdateFlags,cRegions,rgHidReg,ppEnum) ) 

#define IVsHiddenTextSession_EnumHiddenRegions(This,dwFindFlags,dwCookie,ptsRange,ppEnum)	\
    ( (This)->lpVtbl -> EnumHiddenRegions(This,dwFindFlags,dwCookie,ptsRange,ppEnum) ) 

#define IVsHiddenTextSession_UnadviseClient(This)	\
    ( (This)->lpVtbl -> UnadviseClient(This) ) 

#define IVsHiddenTextSession_Terminate(This)	\
    ( (This)->lpVtbl -> Terminate(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsHiddenTextSession_INTERFACE_DEFINED__ */


#ifndef __IVsOutliningSession_INTERFACE_DEFINED__
#define __IVsOutliningSession_INTERFACE_DEFINED__

/* interface IVsOutliningSession */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsOutliningSession;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9A436975-A86A-4459-A350-B05604B53309")
    IVsOutliningSession : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddOutlineRegions( 
            /* [in] */ DWORD dwOutliningFlags,
            /* [in] */ long cRegions,
            /* [size_is][in] */ __RPC__in_ecount_full(cRegions) NewOutlineRegion *rgOutlnReg) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsOutliningSessionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsOutliningSession * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsOutliningSession * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsOutliningSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddOutlineRegions )( 
            IVsOutliningSession * This,
            /* [in] */ DWORD dwOutliningFlags,
            /* [in] */ long cRegions,
            /* [size_is][in] */ __RPC__in_ecount_full(cRegions) NewOutlineRegion *rgOutlnReg);
        
        END_INTERFACE
    } IVsOutliningSessionVtbl;

    interface IVsOutliningSession
    {
        CONST_VTBL struct IVsOutliningSessionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsOutliningSession_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsOutliningSession_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsOutliningSession_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsOutliningSession_AddOutlineRegions(This,dwOutliningFlags,cRegions,rgOutlnReg)	\
    ( (This)->lpVtbl -> AddOutlineRegions(This,dwOutliningFlags,cRegions,rgOutlnReg) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsOutliningSession_INTERFACE_DEFINED__ */


#ifndef __IVsOutliningCapableLanguage_INTERFACE_DEFINED__
#define __IVsOutliningCapableLanguage_INTERFACE_DEFINED__

/* interface IVsOutliningCapableLanguage */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsOutliningCapableLanguage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B97D5C98-0507-40FA-BF89-CE4F73EBA651")
    IVsOutliningCapableLanguage : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CollapseToDefinitions( 
            /* [in] */ __RPC__in_opt IVsTextLines *pTextLines,
            /* [in] */ __RPC__in_opt IVsOutliningSession *pSession) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsOutliningCapableLanguageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsOutliningCapableLanguage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsOutliningCapableLanguage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsOutliningCapableLanguage * This);
        
        HRESULT ( STDMETHODCALLTYPE *CollapseToDefinitions )( 
            IVsOutliningCapableLanguage * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pTextLines,
            /* [in] */ __RPC__in_opt IVsOutliningSession *pSession);
        
        END_INTERFACE
    } IVsOutliningCapableLanguageVtbl;

    interface IVsOutliningCapableLanguage
    {
        CONST_VTBL struct IVsOutliningCapableLanguageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsOutliningCapableLanguage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsOutliningCapableLanguage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsOutliningCapableLanguage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsOutliningCapableLanguage_CollapseToDefinitions(This,pTextLines,pSession)	\
    ( (This)->lpVtbl -> CollapseToDefinitions(This,pTextLines,pSession) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsOutliningCapableLanguage_INTERFACE_DEFINED__ */


#ifndef __IVsTextLayerEvents_INTERFACE_DEFINED__
#define __IVsTextLayerEvents_INTERFACE_DEFINED__

/* interface IVsTextLayerEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextLayerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CDE3413A-AD8E-495F-A74F-760547294A6F")
    IVsTextLayerEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnMappingChange( void) = 0;
        
        virtual void STDMETHODCALLTYPE OnMappingChangeComplete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextLayerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextLayerEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextLayerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextLayerEvents * This);
        
        void ( STDMETHODCALLTYPE *OnMappingChange )( 
            IVsTextLayerEvents * This);
        
        void ( STDMETHODCALLTYPE *OnMappingChangeComplete )( 
            IVsTextLayerEvents * This);
        
        END_INTERFACE
    } IVsTextLayerEventsVtbl;

    interface IVsTextLayerEvents
    {
        CONST_VTBL struct IVsTextLayerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextLayerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextLayerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextLayerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextLayerEvents_OnMappingChange(This)	\
    ( (This)->lpVtbl -> OnMappingChange(This) ) 

#define IVsTextLayerEvents_OnMappingChangeComplete(This)	\
    ( (This)->lpVtbl -> OnMappingChangeComplete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextLayerEvents_INTERFACE_DEFINED__ */


#ifndef __IVsTextStorage_INTERFACE_DEFINED__
#define __IVsTextStorage_INTERFACE_DEFINED__

/* interface IVsTextStorage */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextStorage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1ABAC269-8FB0-438E-8217-230AC6EB5766")
    IVsTextStorage : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Storage_Attach( 
            /* [in] */ __RPC__in_opt IUnknown *pBuffer) = 0;
        
        virtual void STDMETHODCALLTYPE Storage_Detach( void) = 0;
        
        virtual long STDMETHODCALLTYPE Storage_GetLength( void) = 0;
        
        virtual long STDMETHODCALLTYPE Storage_GetLineCount( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Storage_GetLengthOfLine( 
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Storage_GetPositionOfLineIndex( 
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__out long *piPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Storage_GetLineIndexOfPosition( 
            /* [in] */ long iPosition,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out CharIndex *piIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Storage_Replace( 
            /* [in] */ __RPC__in ChangeInput *pCI,
            /* [out] */ __RPC__out TextSpan *ptsOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Storage_CopyText( 
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iBufMax,
            /* [out] */ __RPC__out WCHAR *pszDest,
            /* [out] */ __RPC__out long *pcCharsCopied) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Storage_GetCharsInSpan( 
            /* [in] */ __RPC__in TextSpan *pSpanToMeasure,
            /* [out] */ __RPC__out long *piChars) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Storage_GetLineDataEx( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ long iLine,
            /* [in] */ long iStartIndex,
            /* [in] */ long iEndIndex,
            /* [out] */ __RPC__out LINEDATAEX *pLineData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Storage_ReleaseLineDataEx( 
            /* [in] */ __RPC__in LINEDATAEX *pLineData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Storage_GetLanguageServiceID( 
            /* [out] */ __RPC__out GUID *pguidLangService) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Storage_SetLanguageServiceID( 
            /* [in] */ __RPC__in REFGUID guidLangService) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Storage_RefreshColorization( 
            /* [in] */ long iTopLine,
            /* [in] */ long iBotLine,
            /* [out] */ __RPC__out long *piLastAffectedLine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Storage_Find( 
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ long iFlags,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out CharIndex *piCol) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextStorageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextStorage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextStorage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextStorage * This);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_Attach )( 
            IVsTextStorage * This,
            /* [in] */ __RPC__in_opt IUnknown *pBuffer);
        
        void ( STDMETHODCALLTYPE *Storage_Detach )( 
            IVsTextStorage * This);
        
        long ( STDMETHODCALLTYPE *Storage_GetLength )( 
            IVsTextStorage * This);
        
        long ( STDMETHODCALLTYPE *Storage_GetLineCount )( 
            IVsTextStorage * This);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_GetLengthOfLine )( 
            IVsTextStorage * This,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_GetPositionOfLineIndex )( 
            IVsTextStorage * This,
            /* [in] */ long iLine,
            /* [in] */ CharIndex iIndex,
            /* [out] */ __RPC__out long *piPosition);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_GetLineIndexOfPosition )( 
            IVsTextStorage * This,
            /* [in] */ long iPosition,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out CharIndex *piIndex);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_Replace )( 
            IVsTextStorage * This,
            /* [in] */ __RPC__in ChangeInput *pCI,
            /* [out] */ __RPC__out TextSpan *ptsOut);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_CopyText )( 
            IVsTextStorage * This,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iBufMax,
            /* [out] */ __RPC__out WCHAR *pszDest,
            /* [out] */ __RPC__out long *pcCharsCopied);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_GetCharsInSpan )( 
            IVsTextStorage * This,
            /* [in] */ __RPC__in TextSpan *pSpanToMeasure,
            /* [out] */ __RPC__out long *piChars);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_GetLineDataEx )( 
            IVsTextStorage * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ long iLine,
            /* [in] */ long iStartIndex,
            /* [in] */ long iEndIndex,
            /* [out] */ __RPC__out LINEDATAEX *pLineData);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_ReleaseLineDataEx )( 
            IVsTextStorage * This,
            /* [in] */ __RPC__in LINEDATAEX *pLineData);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_GetLanguageServiceID )( 
            IVsTextStorage * This,
            /* [out] */ __RPC__out GUID *pguidLangService);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_SetLanguageServiceID )( 
            IVsTextStorage * This,
            /* [in] */ __RPC__in REFGUID guidLangService);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_RefreshColorization )( 
            IVsTextStorage * This,
            /* [in] */ long iTopLine,
            /* [in] */ long iBotLine,
            /* [out] */ __RPC__out long *piLastAffectedLine);
        
        HRESULT ( STDMETHODCALLTYPE *Storage_Find )( 
            IVsTextStorage * This,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ long iStartLine,
            /* [in] */ CharIndex iStartIndex,
            /* [in] */ long iEndLine,
            /* [in] */ CharIndex iEndIndex,
            /* [in] */ long iFlags,
            /* [out] */ __RPC__out long *piLine,
            /* [out] */ __RPC__out CharIndex *piCol);
        
        END_INTERFACE
    } IVsTextStorageVtbl;

    interface IVsTextStorage
    {
        CONST_VTBL struct IVsTextStorageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextStorage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextStorage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextStorage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextStorage_Storage_Attach(This,pBuffer)	\
    ( (This)->lpVtbl -> Storage_Attach(This,pBuffer) ) 

#define IVsTextStorage_Storage_Detach(This)	\
    ( (This)->lpVtbl -> Storage_Detach(This) ) 

#define IVsTextStorage_Storage_GetLength(This)	\
    ( (This)->lpVtbl -> Storage_GetLength(This) ) 

#define IVsTextStorage_Storage_GetLineCount(This)	\
    ( (This)->lpVtbl -> Storage_GetLineCount(This) ) 

#define IVsTextStorage_Storage_GetLengthOfLine(This,iLine,piLength)	\
    ( (This)->lpVtbl -> Storage_GetLengthOfLine(This,iLine,piLength) ) 

#define IVsTextStorage_Storage_GetPositionOfLineIndex(This,iLine,iIndex,piPosition)	\
    ( (This)->lpVtbl -> Storage_GetPositionOfLineIndex(This,iLine,iIndex,piPosition) ) 

#define IVsTextStorage_Storage_GetLineIndexOfPosition(This,iPosition,piLine,piIndex)	\
    ( (This)->lpVtbl -> Storage_GetLineIndexOfPosition(This,iPosition,piLine,piIndex) ) 

#define IVsTextStorage_Storage_Replace(This,pCI,ptsOut)	\
    ( (This)->lpVtbl -> Storage_Replace(This,pCI,ptsOut) ) 

#define IVsTextStorage_Storage_CopyText(This,iStartLine,iStartIndex,iBufMax,pszDest,pcCharsCopied)	\
    ( (This)->lpVtbl -> Storage_CopyText(This,iStartLine,iStartIndex,iBufMax,pszDest,pcCharsCopied) ) 

#define IVsTextStorage_Storage_GetCharsInSpan(This,pSpanToMeasure,piChars)	\
    ( (This)->lpVtbl -> Storage_GetCharsInSpan(This,pSpanToMeasure,piChars) ) 

#define IVsTextStorage_Storage_GetLineDataEx(This,dwFlags,iLine,iStartIndex,iEndIndex,pLineData)	\
    ( (This)->lpVtbl -> Storage_GetLineDataEx(This,dwFlags,iLine,iStartIndex,iEndIndex,pLineData) ) 

#define IVsTextStorage_Storage_ReleaseLineDataEx(This,pLineData)	\
    ( (This)->lpVtbl -> Storage_ReleaseLineDataEx(This,pLineData) ) 

#define IVsTextStorage_Storage_GetLanguageServiceID(This,pguidLangService)	\
    ( (This)->lpVtbl -> Storage_GetLanguageServiceID(This,pguidLangService) ) 

#define IVsTextStorage_Storage_SetLanguageServiceID(This,guidLangService)	\
    ( (This)->lpVtbl -> Storage_SetLanguageServiceID(This,guidLangService) ) 

#define IVsTextStorage_Storage_RefreshColorization(This,iTopLine,iBotLine,piLastAffectedLine)	\
    ( (This)->lpVtbl -> Storage_RefreshColorization(This,iTopLine,iBotLine,piLastAffectedLine) ) 

#define IVsTextStorage_Storage_Find(This,pszText,iStartLine,iStartIndex,iEndLine,iEndIndex,iFlags,piLine,piCol)	\
    ( (This)->lpVtbl -> Storage_Find(This,pszText,iStartLine,iStartIndex,iEndLine,iEndIndex,iFlags,piLine,piCol) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextStorage_INTERFACE_DEFINED__ */


#ifndef __IVsPersistentTextImage_INTERFACE_DEFINED__
#define __IVsPersistentTextImage_INTERFACE_DEFINED__

/* interface IVsPersistentTextImage */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsPersistentTextImage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C47FFD1E-D84E-43A5-8CBE-E4AD06BE795B")
    IVsPersistentTextImage : public IUnknown
    {
    public:
        virtual void *STDMETHODCALLTYPE Image_Alloc( 
            /* [in] */ int iSize) = 0;
        
        virtual void *STDMETHODCALLTYPE Image_Realloc( 
            /* [out][in] */ __RPC__inout void *p,
            /* [in] */ int iSize) = 0;
        
        virtual void STDMETHODCALLTYPE Image_Free( 
            /* [in] */ __RPC__in void *p) = 0;
        
        virtual long STDMETHODCALLTYPE Image_GetLength( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Image_LoadText( 
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ INT iLength,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Image_OpenFullTextScan( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Image_FullTextRead( 
            /* [out] */ __RPC__deref_out_opt const WCHAR **ppszText,
            /* [out] */ __RPC__out long *piLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Image_CloseFullTextScan( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsPersistentTextImageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsPersistentTextImage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsPersistentTextImage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsPersistentTextImage * This);
        
        void *( STDMETHODCALLTYPE *Image_Alloc )( 
            IVsPersistentTextImage * This,
            /* [in] */ int iSize);
        
        void *( STDMETHODCALLTYPE *Image_Realloc )( 
            IVsPersistentTextImage * This,
            /* [out][in] */ __RPC__inout void *p,
            /* [in] */ int iSize);
        
        void ( STDMETHODCALLTYPE *Image_Free )( 
            IVsPersistentTextImage * This,
            /* [in] */ __RPC__in void *p);
        
        long ( STDMETHODCALLTYPE *Image_GetLength )( 
            IVsPersistentTextImage * This);
        
        HRESULT ( STDMETHODCALLTYPE *Image_LoadText )( 
            IVsPersistentTextImage * This,
            /* [in] */ __RPC__in const WCHAR *pszText,
            /* [in] */ INT iLength,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *Image_OpenFullTextScan )( 
            IVsPersistentTextImage * This);
        
        HRESULT ( STDMETHODCALLTYPE *Image_FullTextRead )( 
            IVsPersistentTextImage * This,
            /* [out] */ __RPC__deref_out_opt const WCHAR **ppszText,
            /* [out] */ __RPC__out long *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *Image_CloseFullTextScan )( 
            IVsPersistentTextImage * This);
        
        END_INTERFACE
    } IVsPersistentTextImageVtbl;

    interface IVsPersistentTextImage
    {
        CONST_VTBL struct IVsPersistentTextImageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsPersistentTextImage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsPersistentTextImage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsPersistentTextImage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsPersistentTextImage_Image_Alloc(This,iSize)	\
    ( (This)->lpVtbl -> Image_Alloc(This,iSize) ) 

#define IVsPersistentTextImage_Image_Realloc(This,p,iSize)	\
    ( (This)->lpVtbl -> Image_Realloc(This,p,iSize) ) 

#define IVsPersistentTextImage_Image_Free(This,p)	\
    ( (This)->lpVtbl -> Image_Free(This,p) ) 

#define IVsPersistentTextImage_Image_GetLength(This)	\
    ( (This)->lpVtbl -> Image_GetLength(This) ) 

#define IVsPersistentTextImage_Image_LoadText(This,pszText,iLength,dwFlags)	\
    ( (This)->lpVtbl -> Image_LoadText(This,pszText,iLength,dwFlags) ) 

#define IVsPersistentTextImage_Image_OpenFullTextScan(This)	\
    ( (This)->lpVtbl -> Image_OpenFullTextScan(This) ) 

#define IVsPersistentTextImage_Image_FullTextRead(This,ppszText,piLength)	\
    ( (This)->lpVtbl -> Image_FullTextRead(This,ppszText,piLength) ) 

#define IVsPersistentTextImage_Image_CloseFullTextScan(This)	\
    ( (This)->lpVtbl -> Image_CloseFullTextScan(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsPersistentTextImage_INTERFACE_DEFINED__ */


#ifndef __IVsTextStorageColorState_INTERFACE_DEFINED__
#define __IVsTextStorageColorState_INTERFACE_DEFINED__

/* interface IVsTextStorageColorState */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextStorageColorState;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1F027F1F-9696-4816-B345-3CD7D3122A48")
    IVsTextStorageColorState : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetColorStateAtStartOfLine( 
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piState) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextStorageColorStateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextStorageColorState * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextStorageColorState * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextStorageColorState * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetColorStateAtStartOfLine )( 
            IVsTextStorageColorState * This,
            /* [in] */ long iLine,
            /* [out] */ __RPC__out long *piState);
        
        END_INTERFACE
    } IVsTextStorageColorStateVtbl;

    interface IVsTextStorageColorState
    {
        CONST_VTBL struct IVsTextStorageColorStateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextStorageColorState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextStorageColorState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextStorageColorState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextStorageColorState_GetColorStateAtStartOfLine(This,iLine,piState)	\
    ( (This)->lpVtbl -> GetColorStateAtStartOfLine(This,iLine,piState) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextStorageColorState_INTERFACE_DEFINED__ */


#ifndef __IVsFinalTextChangeCommitEvents_INTERFACE_DEFINED__
#define __IVsFinalTextChangeCommitEvents_INTERFACE_DEFINED__

/* interface IVsFinalTextChangeCommitEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsFinalTextChangeCommitEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CE62717C-797D-445F-BC89-1D02C54CCF96")
    IVsFinalTextChangeCommitEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnChangesCommitted( 
            /* [in] */ DWORD dwGestureFlags,
            /* [in] */ __RPC__in TextSpan *ptsChanged) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFinalTextChangeCommitEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFinalTextChangeCommitEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFinalTextChangeCommitEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFinalTextChangeCommitEvents * This);
        
        void ( STDMETHODCALLTYPE *OnChangesCommitted )( 
            IVsFinalTextChangeCommitEvents * This,
            /* [in] */ DWORD dwGestureFlags,
            /* [in] */ __RPC__in TextSpan *ptsChanged);
        
        END_INTERFACE
    } IVsFinalTextChangeCommitEventsVtbl;

    interface IVsFinalTextChangeCommitEvents
    {
        CONST_VTBL struct IVsFinalTextChangeCommitEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFinalTextChangeCommitEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFinalTextChangeCommitEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFinalTextChangeCommitEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFinalTextChangeCommitEvents_OnChangesCommitted(This,dwGestureFlags,ptsChanged)	\
    ( (This)->lpVtbl -> OnChangesCommitted(This,dwGestureFlags,ptsChanged) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFinalTextChangeCommitEvents_INTERFACE_DEFINED__ */


#ifndef __IVsPreliminaryTextChangeCommitEvents_INTERFACE_DEFINED__
#define __IVsPreliminaryTextChangeCommitEvents_INTERFACE_DEFINED__

/* interface IVsPreliminaryTextChangeCommitEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsPreliminaryTextChangeCommitEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7F57B996-148B-46DE-A261-B1A02E6D9DBA")
    IVsPreliminaryTextChangeCommitEvents : public IVsFinalTextChangeCommitEvents
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IVsPreliminaryTextChangeCommitEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsPreliminaryTextChangeCommitEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsPreliminaryTextChangeCommitEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsPreliminaryTextChangeCommitEvents * This);
        
        void ( STDMETHODCALLTYPE *OnChangesCommitted )( 
            IVsPreliminaryTextChangeCommitEvents * This,
            /* [in] */ DWORD dwGestureFlags,
            /* [in] */ __RPC__in TextSpan *ptsChanged);
        
        END_INTERFACE
    } IVsPreliminaryTextChangeCommitEventsVtbl;

    interface IVsPreliminaryTextChangeCommitEvents
    {
        CONST_VTBL struct IVsPreliminaryTextChangeCommitEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsPreliminaryTextChangeCommitEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsPreliminaryTextChangeCommitEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsPreliminaryTextChangeCommitEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsPreliminaryTextChangeCommitEvents_OnChangesCommitted(This,dwGestureFlags,ptsChanged)	\
    ( (This)->lpVtbl -> OnChangesCommitted(This,dwGestureFlags,ptsChanged) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsPreliminaryTextChangeCommitEvents_INTERFACE_DEFINED__ */


#ifndef __IVsUndoRedoClusterWithCommitEvents_INTERFACE_DEFINED__
#define __IVsUndoRedoClusterWithCommitEvents_INTERFACE_DEFINED__

/* interface IVsUndoRedoClusterWithCommitEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsUndoRedoClusterWithCommitEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F98298D9-53C4-43DB-90D6-D1A3CA4B1849")
    IVsUndoRedoClusterWithCommitEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnUndoRedoClusterClosingWithCommitGesture( 
            /* [in] */ DWORD dwGestureFlags,
            /* [in] */ __RPC__in TextSpan *ptsChanged) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsUndoRedoClusterWithCommitEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsUndoRedoClusterWithCommitEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsUndoRedoClusterWithCommitEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsUndoRedoClusterWithCommitEvents * This);
        
        void ( STDMETHODCALLTYPE *OnUndoRedoClusterClosingWithCommitGesture )( 
            IVsUndoRedoClusterWithCommitEvents * This,
            /* [in] */ DWORD dwGestureFlags,
            /* [in] */ __RPC__in TextSpan *ptsChanged);
        
        END_INTERFACE
    } IVsUndoRedoClusterWithCommitEventsVtbl;

    interface IVsUndoRedoClusterWithCommitEvents
    {
        CONST_VTBL struct IVsUndoRedoClusterWithCommitEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsUndoRedoClusterWithCommitEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsUndoRedoClusterWithCommitEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsUndoRedoClusterWithCommitEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsUndoRedoClusterWithCommitEvents_OnUndoRedoClusterClosingWithCommitGesture(This,dwGestureFlags,ptsChanged)	\
    ( (This)->lpVtbl -> OnUndoRedoClusterClosingWithCommitGesture(This,dwGestureFlags,ptsChanged) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsUndoRedoClusterWithCommitEvents_INTERFACE_DEFINED__ */


#ifndef __IVsTextImageEvents_INTERFACE_DEFINED__
#define __IVsTextImageEvents_INTERFACE_DEFINED__

/* interface IVsTextImageEvents */
/* [object][version][uuid] */ 


EXTERN_C const IID IID_IVsTextImageEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B1ADB4FC-562F-43E6-8A91-CD2CFFA2B377")
    IVsTextImageEvents : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnTextChange( 
            /* [in] */ TextAddress taStart,
            /* [in] */ TextAddress taEnd,
            /* [in] */ TextAddress taNewEnd) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextImageEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextImageEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextImageEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextImageEvents * This);
        
        void ( STDMETHODCALLTYPE *OnTextChange )( 
            IVsTextImageEvents * This,
            /* [in] */ TextAddress taStart,
            /* [in] */ TextAddress taEnd,
            /* [in] */ TextAddress taNewEnd);
        
        END_INTERFACE
    } IVsTextImageEventsVtbl;

    interface IVsTextImageEvents
    {
        CONST_VTBL struct IVsTextImageEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextImageEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextImageEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextImageEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextImageEvents_OnTextChange(This,taStart,taEnd,taNewEnd)	\
    ( (This)->lpVtbl -> OnTextChange(This,taStart,taEnd,taNewEnd) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextImageEvents_INTERFACE_DEFINED__ */


#ifndef __IVsCommitGestureSink_INTERFACE_DEFINED__
#define __IVsCommitGestureSink_INTERFACE_DEFINED__

/* interface IVsCommitGestureSink */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCommitGestureSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("957970B0-71E1-11d3-AFF1-00105A9991EF")
    IVsCommitGestureSink : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnCommitGesture( 
            /* [in] */ DWORD dwGestureFlags) = 0;
        
        virtual void STDMETHODCALLTYPE FlushCommitEventIfCurrentClusterIsOutermost( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCommitGestureSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCommitGestureSink * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCommitGestureSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCommitGestureSink * This);
        
        void ( STDMETHODCALLTYPE *OnCommitGesture )( 
            IVsCommitGestureSink * This,
            /* [in] */ DWORD dwGestureFlags);
        
        void ( STDMETHODCALLTYPE *FlushCommitEventIfCurrentClusterIsOutermost )( 
            IVsCommitGestureSink * This);
        
        END_INTERFACE
    } IVsCommitGestureSinkVtbl;

    interface IVsCommitGestureSink
    {
        CONST_VTBL struct IVsCommitGestureSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCommitGestureSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCommitGestureSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCommitGestureSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCommitGestureSink_OnCommitGesture(This,dwGestureFlags)	\
    ( (This)->lpVtbl -> OnCommitGesture(This,dwGestureFlags) ) 

#define IVsCommitGestureSink_FlushCommitEventIfCurrentClusterIsOutermost(This)	\
    ( (This)->lpVtbl -> FlushCommitEventIfCurrentClusterIsOutermost(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCommitGestureSink_INTERFACE_DEFINED__ */


#ifndef __IVsTextImage_INTERFACE_DEFINED__
#define __IVsTextImage_INTERFACE_DEFINED__

/* interface IVsTextImage */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsTextImage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("67068DC0-C069-11d2-936C-D714766E8B50")
    IVsTextImage : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCharSize( 
            /* [retval][out] */ __RPC__out LONG *pcch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineSize( 
            /* [retval][out] */ __RPC__out LONG *pcLines) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOffsetOfTextAddress( 
            /* [in] */ TextAddress ta,
            /* [retval][out] */ __RPC__out LONG *piOffset) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTextAddressOfOffset( 
            /* [in] */ LONG iOffset,
            /* [retval][out] */ __RPC__out TextAddress *pta) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Replace( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in const TextSpan *pts,
            /* [in] */ LONG cch,
            /* [size_is][in] */ __RPC__in_ecount_full(cch) LPCOLESTR pchText,
            /* [retval][out] */ __RPC__out TextSpan *ptsChanged) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSpanLength( 
            /* [in] */ __RPC__in const TextSpan *pts,
            /* [retval][out] */ __RPC__out LONG *pcch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTextBSTR( 
            /* [in] */ __RPC__in const TextSpan *pts,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetText( 
            /* [in] */ __RPC__in const TextSpan *pts,
            /* [in] */ LONG cch,
            /* [size_is][out] */ __RPC__out_ecount_full(cch) LPOLESTR psz) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineLength( 
            /* [in] */ LONG iLine,
            /* [retval][out] */ __RPC__out LONG *piLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLine( 
            /* [in] */ DWORD grfGet,
            /* [in] */ LONG iLine,
            /* [in] */ LONG iStartIndex,
            /* [in] */ LONG iEndIndex,
            /* [retval][out] */ __RPC__out LINEDATAEX *pLineData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseLine( 
            /* [in] */ __RPC__in LINEDATAEX *pLineData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AdviseTextImageEvents( 
            /* [in] */ __RPC__in_opt IVsTextImageEvents *pSink,
            /* [retval][out] */ __RPC__out DWORD *pCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnadviseTextImageEvents( 
            /* [in] */ DWORD Cookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LockImage( 
            /* [in] */ DWORD grfLock) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnlockImage( 
            /* [in] */ DWORD grfLock) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextImageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextImage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextImage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextImage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCharSize )( 
            IVsTextImage * This,
            /* [retval][out] */ __RPC__out LONG *pcch);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineSize )( 
            IVsTextImage * This,
            /* [retval][out] */ __RPC__out LONG *pcLines);
        
        HRESULT ( STDMETHODCALLTYPE *GetOffsetOfTextAddress )( 
            IVsTextImage * This,
            /* [in] */ TextAddress ta,
            /* [retval][out] */ __RPC__out LONG *piOffset);
        
        HRESULT ( STDMETHODCALLTYPE *GetTextAddressOfOffset )( 
            IVsTextImage * This,
            /* [in] */ LONG iOffset,
            /* [retval][out] */ __RPC__out TextAddress *pta);
        
        HRESULT ( STDMETHODCALLTYPE *Replace )( 
            IVsTextImage * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in const TextSpan *pts,
            /* [in] */ LONG cch,
            /* [size_is][in] */ __RPC__in_ecount_full(cch) LPCOLESTR pchText,
            /* [retval][out] */ __RPC__out TextSpan *ptsChanged);
        
        HRESULT ( STDMETHODCALLTYPE *GetSpanLength )( 
            IVsTextImage * This,
            /* [in] */ __RPC__in const TextSpan *pts,
            /* [retval][out] */ __RPC__out LONG *pcch);
        
        HRESULT ( STDMETHODCALLTYPE *GetTextBSTR )( 
            IVsTextImage * This,
            /* [in] */ __RPC__in const TextSpan *pts,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *GetText )( 
            IVsTextImage * This,
            /* [in] */ __RPC__in const TextSpan *pts,
            /* [in] */ LONG cch,
            /* [size_is][out] */ __RPC__out_ecount_full(cch) LPOLESTR psz);
        
        HRESULT ( STDMETHODCALLTYPE *GetLineLength )( 
            IVsTextImage * This,
            /* [in] */ LONG iLine,
            /* [retval][out] */ __RPC__out LONG *piLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetLine )( 
            IVsTextImage * This,
            /* [in] */ DWORD grfGet,
            /* [in] */ LONG iLine,
            /* [in] */ LONG iStartIndex,
            /* [in] */ LONG iEndIndex,
            /* [retval][out] */ __RPC__out LINEDATAEX *pLineData);
        
        HRESULT ( STDMETHODCALLTYPE *ReleaseLine )( 
            IVsTextImage * This,
            /* [in] */ __RPC__in LINEDATAEX *pLineData);
        
        HRESULT ( STDMETHODCALLTYPE *AdviseTextImageEvents )( 
            IVsTextImage * This,
            /* [in] */ __RPC__in_opt IVsTextImageEvents *pSink,
            /* [retval][out] */ __RPC__out DWORD *pCookie);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseTextImageEvents )( 
            IVsTextImage * This,
            /* [in] */ DWORD Cookie);
        
        HRESULT ( STDMETHODCALLTYPE *LockImage )( 
            IVsTextImage * This,
            /* [in] */ DWORD grfLock);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockImage )( 
            IVsTextImage * This,
            /* [in] */ DWORD grfLock);
        
        END_INTERFACE
    } IVsTextImageVtbl;

    interface IVsTextImage
    {
        CONST_VTBL struct IVsTextImageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextImage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextImage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextImage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextImage_GetCharSize(This,pcch)	\
    ( (This)->lpVtbl -> GetCharSize(This,pcch) ) 

#define IVsTextImage_GetLineSize(This,pcLines)	\
    ( (This)->lpVtbl -> GetLineSize(This,pcLines) ) 

#define IVsTextImage_GetOffsetOfTextAddress(This,ta,piOffset)	\
    ( (This)->lpVtbl -> GetOffsetOfTextAddress(This,ta,piOffset) ) 

#define IVsTextImage_GetTextAddressOfOffset(This,iOffset,pta)	\
    ( (This)->lpVtbl -> GetTextAddressOfOffset(This,iOffset,pta) ) 

#define IVsTextImage_Replace(This,dwFlags,pts,cch,pchText,ptsChanged)	\
    ( (This)->lpVtbl -> Replace(This,dwFlags,pts,cch,pchText,ptsChanged) ) 

#define IVsTextImage_GetSpanLength(This,pts,pcch)	\
    ( (This)->lpVtbl -> GetSpanLength(This,pts,pcch) ) 

#define IVsTextImage_GetTextBSTR(This,pts,pbstrText)	\
    ( (This)->lpVtbl -> GetTextBSTR(This,pts,pbstrText) ) 

#define IVsTextImage_GetText(This,pts,cch,psz)	\
    ( (This)->lpVtbl -> GetText(This,pts,cch,psz) ) 

#define IVsTextImage_GetLineLength(This,iLine,piLength)	\
    ( (This)->lpVtbl -> GetLineLength(This,iLine,piLength) ) 

#define IVsTextImage_GetLine(This,grfGet,iLine,iStartIndex,iEndIndex,pLineData)	\
    ( (This)->lpVtbl -> GetLine(This,grfGet,iLine,iStartIndex,iEndIndex,pLineData) ) 

#define IVsTextImage_ReleaseLine(This,pLineData)	\
    ( (This)->lpVtbl -> ReleaseLine(This,pLineData) ) 

#define IVsTextImage_AdviseTextImageEvents(This,pSink,pCookie)	\
    ( (This)->lpVtbl -> AdviseTextImageEvents(This,pSink,pCookie) ) 

#define IVsTextImage_UnadviseTextImageEvents(This,Cookie)	\
    ( (This)->lpVtbl -> UnadviseTextImageEvents(This,Cookie) ) 

#define IVsTextImage_LockImage(This,grfLock)	\
    ( (This)->lpVtbl -> LockImage(This,grfLock) ) 

#define IVsTextImage_UnlockImage(This,grfLock)	\
    ( (This)->lpVtbl -> UnlockImage(This,grfLock) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextImage_INTERFACE_DEFINED__ */


#ifndef __IVsEditorGoBackLocations_INTERFACE_DEFINED__
#define __IVsEditorGoBackLocations_INTERFACE_DEFINED__

/* interface IVsEditorGoBackLocations */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsEditorGoBackLocations;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("714FFF37-5CDC-424a-BCB4-CA50800524F1")
    IVsEditorGoBackLocations : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetNonMergeableGoBackLocation( 
            /* [in] */ BOOL fCurrentCaretPos,
            /* [in] */ long iBaseLine,
            /* [in] */ long iBaseCol) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMergeableGoBackLocation( 
            /* [in] */ BOOL fCurrentCaretPos,
            /* [in] */ long iBaseLine,
            /* [in] */ long iBaseCol) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsEditorGoBackLocationsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsEditorGoBackLocations * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsEditorGoBackLocations * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsEditorGoBackLocations * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetNonMergeableGoBackLocation )( 
            IVsEditorGoBackLocations * This,
            /* [in] */ BOOL fCurrentCaretPos,
            /* [in] */ long iBaseLine,
            /* [in] */ long iBaseCol);
        
        HRESULT ( STDMETHODCALLTYPE *SetMergeableGoBackLocation )( 
            IVsEditorGoBackLocations * This,
            /* [in] */ BOOL fCurrentCaretPos,
            /* [in] */ long iBaseLine,
            /* [in] */ long iBaseCol);
        
        END_INTERFACE
    } IVsEditorGoBackLocationsVtbl;

    interface IVsEditorGoBackLocations
    {
        CONST_VTBL struct IVsEditorGoBackLocationsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsEditorGoBackLocations_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsEditorGoBackLocations_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsEditorGoBackLocations_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsEditorGoBackLocations_SetNonMergeableGoBackLocation(This,fCurrentCaretPos,iBaseLine,iBaseCol)	\
    ( (This)->lpVtbl -> SetNonMergeableGoBackLocation(This,fCurrentCaretPos,iBaseLine,iBaseCol) ) 

#define IVsEditorGoBackLocations_SetMergeableGoBackLocation(This,fCurrentCaretPos,iBaseLine,iBaseCol)	\
    ( (This)->lpVtbl -> SetMergeableGoBackLocation(This,fCurrentCaretPos,iBaseLine,iBaseCol) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsEditorGoBackLocations_INTERFACE_DEFINED__ */

#endif /* __TextManagerInternal_LIBRARY_DEFINED__ */

#ifndef __IVsTextReplaceEvents_INTERFACE_DEFINED__
#define __IVsTextReplaceEvents_INTERFACE_DEFINED__

/* interface IVsTextReplaceEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsTextReplaceEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CF9928D9-65AE-4319-A446-94ED5C45ECDE")
    IVsTextReplaceEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnReplace( 
            /* [in] */ __RPC__in const ChangeInput *pCI) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextReplaceEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextReplaceEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextReplaceEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextReplaceEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnReplace )( 
            IVsTextReplaceEvents * This,
            /* [in] */ __RPC__in const ChangeInput *pCI);
        
        END_INTERFACE
    } IVsTextReplaceEventsVtbl;

    interface IVsTextReplaceEvents
    {
        CONST_VTBL struct IVsTextReplaceEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextReplaceEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextReplaceEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextReplaceEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextReplaceEvents_OnReplace(This,pCI)	\
    ( (This)->lpVtbl -> OnReplace(This,pCI) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextReplaceEvents_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_textmgr_0000_0001 */
/* [local] */ 


enum __PROMPTONLOADFLAGS
    {	codepageNoPrompt	= 0,
	codepagePrompt	= 0x1
    } ;
typedef DWORD PROMPTONLOADFLAGS;


enum __VSTFF
    {	VSTFF_SIGNATURE	= 0x10000,
	VSTFF_DETECT	= 0x1000000,
	VSTFF_HTML	= 0x2000000,
	VSTFF_XML	= 0x4000000,
	VSTFF_BINARY	= 0x8000000,
	VSTFF_CPMASK	= 0xffff,
	VSTFF_FLAGSMASK	= 0xffff0000
    } ;
typedef DWORD VSTFF;



extern RPC_IF_HANDLE __MIDL_itf_textmgr_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_textmgr_0000_0001_v0_0_s_ifspec;

#ifndef __IVsFormatFilterProvider_INTERFACE_DEFINED__
#define __IVsFormatFilterProvider_INTERFACE_DEFINED__

/* interface IVsFormatFilterProvider */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsFormatFilterProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("181237A7-4861-4D6C-8CA1-8A004BEA2E8E")
    IVsFormatFilterProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFormatFilterList( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrFilterList) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CurFileExtensionFormat( 
            /* [in] */ __RPC__in BSTR bstrFileName,
            /* [out] */ __RPC__out DWORD *pdwExtnIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryInvalidEncoding( 
            /* [in] */ VSTFF format,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrMessage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFormatFilterProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFormatFilterProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFormatFilterProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFormatFilterProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetFormatFilterList )( 
            IVsFormatFilterProvider * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrFilterList);
        
        HRESULT ( STDMETHODCALLTYPE *CurFileExtensionFormat )( 
            IVsFormatFilterProvider * This,
            /* [in] */ __RPC__in BSTR bstrFileName,
            /* [out] */ __RPC__out DWORD *pdwExtnIndex);
        
        HRESULT ( STDMETHODCALLTYPE *QueryInvalidEncoding )( 
            IVsFormatFilterProvider * This,
            /* [in] */ VSTFF format,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrMessage);
        
        END_INTERFACE
    } IVsFormatFilterProviderVtbl;

    interface IVsFormatFilterProvider
    {
        CONST_VTBL struct IVsFormatFilterProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFormatFilterProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFormatFilterProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFormatFilterProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFormatFilterProvider_GetFormatFilterList(This,pbstrFilterList)	\
    ( (This)->lpVtbl -> GetFormatFilterList(This,pbstrFilterList) ) 

#define IVsFormatFilterProvider_CurFileExtensionFormat(This,bstrFileName,pdwExtnIndex)	\
    ( (This)->lpVtbl -> CurFileExtensionFormat(This,bstrFileName,pdwExtnIndex) ) 

#define IVsFormatFilterProvider_QueryInvalidEncoding(This,format,pbstrMessage)	\
    ( (This)->lpVtbl -> QueryInvalidEncoding(This,format,pbstrMessage) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFormatFilterProvider_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_textmgr_0000_0002 */
/* [local] */ 


enum _NavigableLocationResolverFlags
    {	NLR_ABSOLUTEPATH	= 0x1,
	NLR_PARTIALPATH	= 0x2,
	NLR_URL	= 0x10
    } ;
typedef DWORD NavigableLocationResolverFlags;



extern RPC_IF_HANDLE __MIDL_itf_textmgr_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_textmgr_0000_0002_v0_0_s_ifspec;

#ifndef __IVsNavigableLocationResolver_INTERFACE_DEFINED__
#define __IVsNavigableLocationResolver_INTERFACE_DEFINED__

/* interface IVsNavigableLocationResolver */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsNavigableLocationResolver;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("82D04B51-1626-43AA-B57F-9B23D4280333")
    IVsNavigableLocationResolver : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDisplayText( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in TextSpan *ptsBase,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [out] */ __RPC__out NavigableLocationResolverFlags *dwOutFlags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDisplayText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPathFromLocation( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in TextSpan *ptsBase,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in const WCHAR *pszDisplayText,
            /* [out] */ __RPC__out NavigableLocationResolverFlags *dwOutFlags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsNavigableLocationResolverVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsNavigableLocationResolver * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsNavigableLocationResolver * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsNavigableLocationResolver * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayText )( 
            IVsNavigableLocationResolver * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in TextSpan *ptsBase,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [out] */ __RPC__out NavigableLocationResolverFlags *dwOutFlags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDisplayText);
        
        HRESULT ( STDMETHODCALLTYPE *GetPathFromLocation )( 
            IVsNavigableLocationResolver * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in TextSpan *ptsBase,
            /* [in] */ __RPC__in_opt IVsTextLines *pBuffer,
            /* [in] */ __RPC__in const WCHAR *pszDisplayText,
            /* [out] */ __RPC__out NavigableLocationResolverFlags *dwOutFlags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPath);
        
        END_INTERFACE
    } IVsNavigableLocationResolverVtbl;

    interface IVsNavigableLocationResolver
    {
        CONST_VTBL struct IVsNavigableLocationResolverVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsNavigableLocationResolver_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsNavigableLocationResolver_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsNavigableLocationResolver_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsNavigableLocationResolver_GetDisplayText(This,dwReserved,ptsBase,pBuffer,dwOutFlags,pbstrDisplayText)	\
    ( (This)->lpVtbl -> GetDisplayText(This,dwReserved,ptsBase,pBuffer,dwOutFlags,pbstrDisplayText) ) 

#define IVsNavigableLocationResolver_GetPathFromLocation(This,dwReserved,ptsBase,pBuffer,pszDisplayText,dwOutFlags,pbstrPath)	\
    ( (This)->lpVtbl -> GetPathFromLocation(This,dwReserved,ptsBase,pBuffer,pszDisplayText,dwOutFlags,pbstrPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsNavigableLocationResolver_INTERFACE_DEFINED__ */


#ifndef __IVsLanguageTextOps_INTERFACE_DEFINED__
#define __IVsLanguageTextOps_INTERFACE_DEFINED__

/* interface IVsLanguageTextOps */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLanguageTextOps;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("518020A6-8D59-4C80-9AAE-015AB9DCC3DE")
    IVsLanguageTextOps : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDataTip( 
            /* [in] */ __RPC__in_opt IVsTextLayer *pTextLayer,
            /* [in] */ __RPC__in const TextSpan *ptsSel,
            /* [out] */ __RPC__out TextSpan *ptsTip,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPairExtent( 
            /* [in] */ __RPC__in_opt IVsTextLayer *pTextLayer,
            /* [in] */ TextAddress ta,
            /* [retval][out] */ __RPC__out TextSpan *pts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWordExtent( 
            /* [in] */ __RPC__in_opt IVsTextLayer *pTextLayer,
            /* [in] */ TextAddress ta,
            /* [in] */ WORDEXTFLAGS flags,
            /* [retval][out] */ __RPC__out TextSpan *pts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Format( 
            /* [in] */ __RPC__in_opt IVsTextLayer *pTextLayer,
            /* [in] */ __RPC__in const TextSpan *ptsSel) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLanguageTextOpsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLanguageTextOps * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLanguageTextOps * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLanguageTextOps * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetDataTip )( 
            IVsLanguageTextOps * This,
            /* [in] */ __RPC__in_opt IVsTextLayer *pTextLayer,
            /* [in] */ __RPC__in const TextSpan *ptsSel,
            /* [out] */ __RPC__out TextSpan *ptsTip,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *GetPairExtent )( 
            IVsLanguageTextOps * This,
            /* [in] */ __RPC__in_opt IVsTextLayer *pTextLayer,
            /* [in] */ TextAddress ta,
            /* [retval][out] */ __RPC__out TextSpan *pts);
        
        HRESULT ( STDMETHODCALLTYPE *GetWordExtent )( 
            IVsLanguageTextOps * This,
            /* [in] */ __RPC__in_opt IVsTextLayer *pTextLayer,
            /* [in] */ TextAddress ta,
            /* [in] */ WORDEXTFLAGS flags,
            /* [retval][out] */ __RPC__out TextSpan *pts);
        
        HRESULT ( STDMETHODCALLTYPE *Format )( 
            IVsLanguageTextOps * This,
            /* [in] */ __RPC__in_opt IVsTextLayer *pTextLayer,
            /* [in] */ __RPC__in const TextSpan *ptsSel);
        
        END_INTERFACE
    } IVsLanguageTextOpsVtbl;

    interface IVsLanguageTextOps
    {
        CONST_VTBL struct IVsLanguageTextOpsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLanguageTextOps_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLanguageTextOps_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLanguageTextOps_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLanguageTextOps_GetDataTip(This,pTextLayer,ptsSel,ptsTip,pbstrText)	\
    ( (This)->lpVtbl -> GetDataTip(This,pTextLayer,ptsSel,ptsTip,pbstrText) ) 

#define IVsLanguageTextOps_GetPairExtent(This,pTextLayer,ta,pts)	\
    ( (This)->lpVtbl -> GetPairExtent(This,pTextLayer,ta,pts) ) 

#define IVsLanguageTextOps_GetWordExtent(This,pTextLayer,ta,flags,pts)	\
    ( (This)->lpVtbl -> GetWordExtent(This,pTextLayer,ta,flags,pts) ) 

#define IVsLanguageTextOps_Format(This,pTextLayer,ptsSel)	\
    ( (This)->lpVtbl -> Format(This,pTextLayer,ptsSel) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLanguageTextOps_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_textmgr_0000_0004 */
/* [local] */ 

typedef 
enum _LTE_TEXTDATAFLAGS
    {	LTE_NORMAL	= 0,
	LTE_BOX	= 0x1,
	LTE_LINE	= 0x2
    } 	LTE_TEXTDATAFLAGS;



extern RPC_IF_HANDLE __MIDL_itf_textmgr_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_textmgr_0000_0004_v0_0_s_ifspec;

#ifndef __IVsLanguageClipboardOps_INTERFACE_DEFINED__
#define __IVsLanguageClipboardOps_INTERFACE_DEFINED__

/* interface IVsLanguageClipboardOps */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsLanguageClipboardOps;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2ED7B280-B372-415E-862D-D7D9AEAFCD10")
    IVsLanguageClipboardOps : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDataObject( 
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ __RPC__in_opt IVsTextLayer *pTextLayer,
            /* [retval][out] */ __RPC__deref_out_opt IDataObject **ppDO) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsTextData( 
            /* [in] */ __RPC__in_opt IDataObject *pDO) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TextFromData( 
            /* [in] */ __RPC__in_opt IVsTextLayer *pTextLayer,
            /* [in] */ __RPC__in_opt IDataObject *pDO,
            /* [out] */ __RPC__out LTE_TEXTDATAFLAGS *ptdfFlags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DataObjectRendered( 
            /* [in] */ __RPC__in_opt IVsTextLines *pTextLines,
            /* [in] */ DWORD dwHint,
            /* [in] */ __RPC__in TextSpan *ptsInsertedText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLanguageClipboardOpsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLanguageClipboardOps * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLanguageClipboardOps * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLanguageClipboardOps * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetDataObject )( 
            IVsLanguageClipboardOps * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView,
            /* [in] */ __RPC__in_opt IVsTextLayer *pTextLayer,
            /* [retval][out] */ __RPC__deref_out_opt IDataObject **ppDO);
        
        HRESULT ( STDMETHODCALLTYPE *IsTextData )( 
            IVsLanguageClipboardOps * This,
            /* [in] */ __RPC__in_opt IDataObject *pDO);
        
        HRESULT ( STDMETHODCALLTYPE *TextFromData )( 
            IVsLanguageClipboardOps * This,
            /* [in] */ __RPC__in_opt IVsTextLayer *pTextLayer,
            /* [in] */ __RPC__in_opt IDataObject *pDO,
            /* [out] */ __RPC__out LTE_TEXTDATAFLAGS *ptdfFlags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        HRESULT ( STDMETHODCALLTYPE *DataObjectRendered )( 
            IVsLanguageClipboardOps * This,
            /* [in] */ __RPC__in_opt IVsTextLines *pTextLines,
            /* [in] */ DWORD dwHint,
            /* [in] */ __RPC__in TextSpan *ptsInsertedText);
        
        END_INTERFACE
    } IVsLanguageClipboardOpsVtbl;

    interface IVsLanguageClipboardOps
    {
        CONST_VTBL struct IVsLanguageClipboardOpsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLanguageClipboardOps_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLanguageClipboardOps_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLanguageClipboardOps_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLanguageClipboardOps_GetDataObject(This,pView,pTextLayer,ppDO)	\
    ( (This)->lpVtbl -> GetDataObject(This,pView,pTextLayer,ppDO) ) 

#define IVsLanguageClipboardOps_IsTextData(This,pDO)	\
    ( (This)->lpVtbl -> IsTextData(This,pDO) ) 

#define IVsLanguageClipboardOps_TextFromData(This,pTextLayer,pDO,ptdfFlags,pbstrText)	\
    ( (This)->lpVtbl -> TextFromData(This,pTextLayer,pDO,ptdfFlags,pbstrText) ) 

#define IVsLanguageClipboardOps_DataObjectRendered(This,pTextLines,dwHint,ptsInsertedText)	\
    ( (This)->lpVtbl -> DataObjectRendered(This,pTextLines,dwHint,ptsInsertedText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLanguageClipboardOps_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_textmgr_0000_0005 */
/* [local] */ 


enum _QuerySendCommitFlags
    {	QSCF_DO_SEND_ENTER_COMMIT	= 0,
	QSCF_DO_NOT_SEND_ENTER_COMMIT	= 0x1
    } ;
typedef DWORD QuerySendCommitFlags;



extern RPC_IF_HANDLE __MIDL_itf_textmgr_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_textmgr_0000_0005_v0_0_s_ifspec;

#ifndef __IVsQueryLineChangeCommit_INTERFACE_DEFINED__
#define __IVsQueryLineChangeCommit_INTERFACE_DEFINED__

/* interface IVsQueryLineChangeCommit */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsQueryLineChangeCommit;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("72E67329-8765-4586-8B15-0B445E6F3B57")
    IVsQueryLineChangeCommit : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE QuerySendEnterLineCommit( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ long iLineStart,
            /* [in] */ long iLineEnd,
            /* [retval][out] */ __RPC__out QuerySendCommitFlags *dwQuerySendCommitFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsQueryLineChangeCommitVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsQueryLineChangeCommit * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsQueryLineChangeCommit * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsQueryLineChangeCommit * This);
        
        HRESULT ( STDMETHODCALLTYPE *QuerySendEnterLineCommit )( 
            IVsQueryLineChangeCommit * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ long iLineStart,
            /* [in] */ long iLineEnd,
            /* [retval][out] */ __RPC__out QuerySendCommitFlags *dwQuerySendCommitFlags);
        
        END_INTERFACE
    } IVsQueryLineChangeCommitVtbl;

    interface IVsQueryLineChangeCommit
    {
        CONST_VTBL struct IVsQueryLineChangeCommitVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsQueryLineChangeCommit_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsQueryLineChangeCommit_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsQueryLineChangeCommit_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsQueryLineChangeCommit_QuerySendEnterLineCommit(This,dwReserved,iLineStart,iLineEnd,dwQuerySendCommitFlags)	\
    ( (This)->lpVtbl -> QuerySendEnterLineCommit(This,dwReserved,iLineStart,iLineEnd,dwQuerySendCommitFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsQueryLineChangeCommit_INTERFACE_DEFINED__ */


#ifndef __IVsCodeWindowEvents_INTERFACE_DEFINED__
#define __IVsCodeWindowEvents_INTERFACE_DEFINED__

/* interface IVsCodeWindowEvents */
/* [object][uuid] */ 


EXTERN_C const IID IID_IVsCodeWindowEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("26ACC7FD-C665-426B-B120-E96762C5DD1A")
    IVsCodeWindowEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnNewView( 
            /* [in] */ __RPC__in_opt IVsTextView *pView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnCloseView( 
            /* [in] */ __RPC__in_opt IVsTextView *pView) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsCodeWindowEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsCodeWindowEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsCodeWindowEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsCodeWindowEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnNewView )( 
            IVsCodeWindowEvents * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView);
        
        HRESULT ( STDMETHODCALLTYPE *OnCloseView )( 
            IVsCodeWindowEvents * This,
            /* [in] */ __RPC__in_opt IVsTextView *pView);
        
        END_INTERFACE
    } IVsCodeWindowEventsVtbl;

    interface IVsCodeWindowEvents
    {
        CONST_VTBL struct IVsCodeWindowEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsCodeWindowEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsCodeWindowEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsCodeWindowEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsCodeWindowEvents_OnNewView(This,pView)	\
    ( (This)->lpVtbl -> OnNewView(This,pView) ) 

#define IVsCodeWindowEvents_OnCloseView(This,pView)	\
    ( (This)->lpVtbl -> OnCloseView(This,pView) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsCodeWindowEvents_INTERFACE_DEFINED__ */


#ifndef __IVsFileBackup_INTERFACE_DEFINED__
#define __IVsFileBackup_INTERFACE_DEFINED__

/* interface IVsFileBackup */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsFileBackup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7B32BDF9-89D3-4574-B6AC-F2EEE9DEAB18")
    IVsFileBackup : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BackupFile( 
            /* [in] */ __RPC__in LPCOLESTR pszBackupFileName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsBackupFileObsolete( 
            /* [out] */ __RPC__out BOOL *pbObsolete) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFileBackupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFileBackup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFileBackup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFileBackup * This);
        
        HRESULT ( STDMETHODCALLTYPE *BackupFile )( 
            IVsFileBackup * This,
            /* [in] */ __RPC__in LPCOLESTR pszBackupFileName);
        
        HRESULT ( STDMETHODCALLTYPE *IsBackupFileObsolete )( 
            IVsFileBackup * This,
            /* [out] */ __RPC__out BOOL *pbObsolete);
        
        END_INTERFACE
    } IVsFileBackupVtbl;

    interface IVsFileBackup
    {
        CONST_VTBL struct IVsFileBackupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFileBackup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFileBackup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFileBackup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFileBackup_BackupFile(This,pszBackupFileName)	\
    ( (This)->lpVtbl -> BackupFile(This,pszBackupFileName) ) 

#define IVsFileBackup_IsBackupFileObsolete(This,pbObsolete)	\
    ( (This)->lpVtbl -> IsBackupFileObsolete(This,pbObsolete) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFileBackup_INTERFACE_DEFINED__ */


#ifndef __IVsLineAttributes_INTERFACE_DEFINED__
#define __IVsLineAttributes_INTERFACE_DEFINED__

/* interface IVsLineAttributes */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsLineAttributes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BBB6EAEA-4835-4263-BEDB-2705607803CA")
    IVsLineAttributes : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetLineSeparator( 
            /* [in] */ __RPC__in long *rgLines,
            /* [in] */ long cLines,
            /* [in] */ BOOL fRemoveAll) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsLineAttributesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsLineAttributes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsLineAttributes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsLineAttributes * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetLineSeparator )( 
            IVsLineAttributes * This,
            /* [in] */ __RPC__in long *rgLines,
            /* [in] */ long cLines,
            /* [in] */ BOOL fRemoveAll);
        
        END_INTERFACE
    } IVsLineAttributesVtbl;

    interface IVsLineAttributes
    {
        CONST_VTBL struct IVsLineAttributesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsLineAttributes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsLineAttributes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsLineAttributes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsLineAttributes_SetLineSeparator(This,rgLines,cLines,fRemoveAll)	\
    ( (This)->lpVtbl -> SetLineSeparator(This,rgLines,cLines,fRemoveAll) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsLineAttributes_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\textfind.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for textfind.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __textfind_h__
#define __textfind_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IVsTextSpanSet_FWD_DEFINED__
#define __IVsTextSpanSet_FWD_DEFINED__
typedef interface IVsTextSpanSet IVsTextSpanSet;
#endif 	/* __IVsTextSpanSet_FWD_DEFINED__ */


#ifndef __IVsFinder_FWD_DEFINED__
#define __IVsFinder_FWD_DEFINED__
typedef interface IVsFinder IVsFinder;
#endif 	/* __IVsFinder_FWD_DEFINED__ */


#ifndef __IVsFindHelper_FWD_DEFINED__
#define __IVsFindHelper_FWD_DEFINED__
typedef interface IVsFindHelper IVsFindHelper;
#endif 	/* __IVsFindHelper_FWD_DEFINED__ */


#ifndef __IVsFindTarget_FWD_DEFINED__
#define __IVsFindTarget_FWD_DEFINED__
typedef interface IVsFindTarget IVsFindTarget;
#endif 	/* __IVsFindTarget_FWD_DEFINED__ */


#ifndef __IVsFindScope_FWD_DEFINED__
#define __IVsFindScope_FWD_DEFINED__
typedef interface IVsFindScope IVsFindScope;
#endif 	/* __IVsFindScope_FWD_DEFINED__ */


#ifndef __IVsRegisterFindScope_FWD_DEFINED__
#define __IVsRegisterFindScope_FWD_DEFINED__
typedef interface IVsRegisterFindScope IVsRegisterFindScope;
#endif 	/* __IVsRegisterFindScope_FWD_DEFINED__ */


#ifndef __IVsHighlight_FWD_DEFINED__
#define __IVsHighlight_FWD_DEFINED__
typedef interface IVsHighlight IVsHighlight;
#endif 	/* __IVsHighlight_FWD_DEFINED__ */


#ifndef __IVsTextImageUtilities_FWD_DEFINED__
#define __IVsTextImageUtilities_FWD_DEFINED__
typedef interface IVsTextImageUtilities IVsTextImageUtilities;
#endif 	/* __IVsTextImageUtilities_FWD_DEFINED__ */


#ifndef __VsFinder_FWD_DEFINED__
#define __VsFinder_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsFinder VsFinder;
#else
typedef struct VsFinder VsFinder;
#endif /* __cplusplus */

#endif 	/* __VsFinder_FWD_DEFINED__ */


#ifndef __VsTextSpanSet_FWD_DEFINED__
#define __VsTextSpanSet_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsTextSpanSet VsTextSpanSet;
#else
typedef struct VsTextSpanSet VsTextSpanSet;
#endif /* __cplusplus */

#endif 	/* __VsTextSpanSet_FWD_DEFINED__ */


#ifndef __VsTextImage_FWD_DEFINED__
#define __VsTextImage_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsTextImage VsTextImage;
#else
typedef struct VsTextImage VsTextImage;
#endif /* __cplusplus */

#endif 	/* __VsTextImage_FWD_DEFINED__ */


/* header files for imported files */
#include "vsshell.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_textfind_0000_0000 */
/* [local] */ 









enum __VSFINDOPTIONS
    {	FR_OptionMask	= 0xfff,
	FR_MatchCase	= 0x1,
	FR_WholeWord	= 0x2,
	FR_Hidden	= 0x4,
	FR_Backwards	= 0x8,
	FR_Selection	= 0x10,
	FR_Block	= 0x20,
	FR_KeepCase	= 0x40,
	FR_SubFolders	= 0x100,
	FR_KeepOpen	= 0x200,
	FR_NameOnly	= 0x400,
	FR_SyntaxMask	= 0x3000,
	FR_Plain	= 0,
	FR_Wildcard	= 0x1000,
	FR_RegExpr	= 0x2000,
	FR_TargetMask	= 0x70000,
	FR_Document	= 0x10000,
	FR_OpenDocuments	= 0x20000,
	FR_Files	= 0x30000,
	FR_Project	= 0x40000,
	FR_Solution	= 0x50000,
	FR_ActionMask	= 0xf80000,
	FR_MarkAll	= 0x80000,
	FR_Find	= 0x100000,
	FR_FindAll	= 0x200000,
	FR_Replace	= 0x400000,
	FR_ReplaceAll	= 0x800000,
	FR_InternalMask	= 0x7f000000,
	FR_ResetPosition	= 0x1000000,
	FR_FromStart	= 0x2000000,
	FR_OneMatchPerLine	= 0x4000000,
	FR_Report	= 0x8000000,
	FR_SelectionDefault	= 0x10000000,
	FR_NoFind	= 0x80000000,
	FR_CommonOptions	= ( ( ( FR_MatchCase | FR_WholeWord )  | FR_Hidden )  | FR_KeepCase ) ,
	FR_DocOptionSet	= ( ( ( FR_CommonOptions | FR_Backwards )  | FR_Selection )  | FR_Block ) ,
	FR_FIFOptionSet	= ( ( ( FR_CommonOptions | FR_SubFolders )  | FR_KeepOpen )  | FR_NameOnly ) ,
	FR_OptionSet	= ( FR_DocOptionSet | FR_FIFOptionSet ) ,
	FR_SyntaxSet	= ( ( FR_Plain | FR_Wildcard )  | FR_RegExpr ) ,
	FR_Capabilities	= ( ( ( FR_OptionSet | FR_SyntaxSet )  | FR_ActionMask )  | FR_SelectionDefault ) ,
	FR_All	= 0x7fffffff,
	FR_None	= 0,
	FR_Procedure	= FR_Block,
	FR_Pattern	= FR_Wildcard
    } ;
typedef DWORD VSFINDOPTIONS;

#ifndef __RE_E_DEFINED__
#define __RE_E_DEFINED__

enum RE_ERRORS
    {	RE_E_INTERNALERROR	= ( ( 0x80000000 | 0x40000 )  | 0x1 ) ,
	RE_E_SYNTAXERROR	= ( ( 0x80000000 | 0x40000 )  | 0x2 ) ,
	RE_E_STACKOVERFLOW	= ( ( 0x80000000 | 0x40000 )  | 0x3 ) ,
	RE_E_MISSINGARG	= ( ( 0x80000000 | 0x40000 )  | 0x4 ) ,
	RE_E_POWERARGOUTOFRANGE	= ( ( 0x80000000 | 0x40000 )  | 0x5 ) ,
	RE_E_ESCAPEMISSINGARG	= ( ( 0x80000000 | 0x40000 )  | 0x6 ) ,
	RE_E_SPECIALUNKNOWN	= ( ( 0x80000000 | 0x40000 )  | 0x7 ) ,
	RE_E_TAGOUTOFRANGE	= ( ( 0x80000000 | 0x40000 )  | 0x8 ) ,
	RE_E_SETMISSINGCLOSE	= ( ( 0x80000000 | 0x40000 )  | 0x9 ) ,
	RE_E_TAGMISSINGCLOSE	= ( ( 0x80000000 | 0x40000 )  | 0xa ) ,
	RE_E_TOOMANYTAGS	= ( ( 0x80000000 | 0x40000 )  | 0xb ) ,
	RE_E_EMPTYSET	= ( ( 0x80000000 | 0x40000 )  | 0xc ) ,
	RE_E_GROUPMISSINGCLOSE	= ( ( 0x80000000 | 0x40000 )  | 0xd ) ,
	RE_E_REPLACETEXT	= ( ( 0x80000000 | 0x40000 )  | 0xe ) 
    } ;
#endif // __RE_E_DEFINED__

enum __VSFINDBUFFERFLAGS
    {	VSFB_StartOfLine	= 0x1,
	VSFB_EndOfLine	= 0x2,
	FINDBUFFER_StartOfLine	= 0x1,
	FINDBUFFER_EndOfLine	= 0x2
    } ;
typedef DWORD VSFINDBUFFERFLAGS;


enum __VSFINDRESULTLOC
    {	VSFRL_FindResultList1	= 1,
	VSFRL_FindResultList2	= 2,
	FINDREPLACE_RESULTLOC_ResultsList1	= 1,
	FINDREPLACE_RESULTLOC_ResultsList2	= 2
    } ;
typedef DWORD VSFINDRESULTLOC;


enum __VSFINDRESULT
    {	VSFR_NotFound	= 0,
	VSFR_Found	= 1,
	VSFR_Replaced	= 2,
	VSFR_EndOfDoc	= 3,
	VSFR_EndOfSearch	= 4,
	VSFR_FindInFiles	= 5,
	VSFR_NoTarget	= 6,
	VSFR_Error	= 7,
	VSFR_AndInterrupt	= 0x40000000,
	VSFR_AndReplace	= 0x80000000,
	VSFR_FLAGMASK	= 0xff000000,
	FINDREPLACE_RESULT_Failed	= 0,
	FINDREPLACE_RESULT_Found	= 1,
	FINDREPLACE_RESULT_Replaced	= 2,
	FINDREPLACE_RESULT_EndOfDoc	= 3,
	FINDREPLACE_RESULT_EndOfSearch	= 4,
	FINDREPLACE_RESULT_FindInFiles	= 5
    } ;
typedef DWORD VSFINDRESULT;


enum __VSFINDPOS
    {	VSFP_Start	= 0x1,
	VSFP_Current	= 0x2,
	VSFP_Wrapped	= 0x10000,
	VSFP_ResetCounts	= 0x20000
    } ;
typedef DWORD VSFINDPOS;


enum __VSFINDSTATE
    {	VSFS_Error	= 0x10000000,
	VSFS_Empty	= 0,
	VSFS_Start	= 0x1,
	VSFS_Found	= 0x2,
	VSFS_NotFound	= 0x3,
	VSFS_Wrapped	= 0x10000
    } ;
typedef DWORD VSFINDSTATE;


// Helper macros for looking at find state
//
#define VSFS_IsFound(fs) (VSFS_Found == (fs & 0xf))
#define VSFS_IsWrapped(fs) (VSFS_Wrapped & fs)


enum __VSFINDERROR
    {	VSFE_Syntax	= -4,
	VSFE_NotSupported	= -3,
	VSFE_NotInitialized	= -2,
	VSFE_Failure	= -1,
	VSFE_NoError	= 0
    } ;
typedef DWORD VSFINDERROR;


enum __VSFINDHOW
    {	VSFH_Ambient	= 0,
	VSFH_Wrap	= 0x1,
	VSFH_TryMatch	= 0x10000000,
	VSFH_SetMatch	= 0x20000000
    } ;
typedef DWORD VSFINDHOW;


enum __VSFTPROPID
    {	VSFTPROPID_DocName	= 0,
	VSFTPROPID_IsDiskFile	= 1,
	VSFTPROPID_BlockName	= 2,
	VSFTPROPID_InitialPattern	= 3,
	VSFTPROPID_InitialPatternAggressive	= 4,
	VSFTPROPID_WindowFrame	= 5
    } ;
typedef DWORD VSFTPROPID;


enum __VSFTNOTIFY
    {	VSFTNOTIFY_CURRENT	= 0,
	VSFTNOTIFY_NOTCURRENT	= 1,
	VSFTNOTIFY_STARTFIND	= 2,
	VSFTNOTIFY_ENDFIND	= 3
    } ;
typedef DWORD VSFTNOTIFY;



extern RPC_IF_HANDLE __MIDL_itf_textfind_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_textfind_0000_0000_v0_0_s_ifspec;


#ifndef __TextFind_LIBRARY_DEFINED__
#define __TextFind_LIBRARY_DEFINED__

/* library TextFind */
/* [uuid] */ 

#define SID_SVsTextSpanSet IID_IVsTextSpanSet
#define SID_SVsRegisterFindScope IID_IVsRegisterFindScope
#define SID_SVsTextImageUtilities IID_IVsTextImageUtilities

EXTERN_C const IID LIBID_TextFind;

#ifndef __IVsTextSpanSet_INTERFACE_DEFINED__
#define __IVsTextSpanSet_INTERFACE_DEFINED__

/* interface IVsTextSpanSet */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsTextSpanSet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E6BBDFD0-C06A-11d2-936C-D714766E8B50")
    IVsTextSpanSet : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AttachTextImage( 
            /* [in] */ __RPC__in_opt IUnknown *pText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Detach( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SuspendTracking( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResumeTracking( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ LONG cel,
            /* [size_is][in] */ __RPC__in_ecount_full(cel) const TextSpan *pSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ __RPC__out LONG *pcel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ LONG iEl,
            /* [retval][out] */ __RPC__out TextSpan *pSpan) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Sort( 
            /* [in] */ DWORD SortOptions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddFromEnum( 
            /* [in] */ __RPC__in_opt IVsEnumTextSpans *pEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextSpanSetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextSpanSet * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextSpanSet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextSpanSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *AttachTextImage )( 
            IVsTextSpanSet * This,
            /* [in] */ __RPC__in_opt IUnknown *pText);
        
        HRESULT ( STDMETHODCALLTYPE *Detach )( 
            IVsTextSpanSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *SuspendTracking )( 
            IVsTextSpanSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *ResumeTracking )( 
            IVsTextSpanSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *Add )( 
            IVsTextSpanSet * This,
            /* [in] */ LONG cel,
            /* [size_is][in] */ __RPC__in_ecount_full(cel) const TextSpan *pSpan);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IVsTextSpanSet * This,
            /* [retval][out] */ __RPC__out LONG *pcel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            IVsTextSpanSet * This,
            /* [in] */ LONG iEl,
            /* [retval][out] */ __RPC__out TextSpan *pSpan);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            IVsTextSpanSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *Sort )( 
            IVsTextSpanSet * This,
            /* [in] */ DWORD SortOptions);
        
        HRESULT ( STDMETHODCALLTYPE *AddFromEnum )( 
            IVsTextSpanSet * This,
            /* [in] */ __RPC__in_opt IVsEnumTextSpans *pEnum);
        
        END_INTERFACE
    } IVsTextSpanSetVtbl;

    interface IVsTextSpanSet
    {
        CONST_VTBL struct IVsTextSpanSetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextSpanSet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextSpanSet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextSpanSet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextSpanSet_AttachTextImage(This,pText)	\
    ( (This)->lpVtbl -> AttachTextImage(This,pText) ) 

#define IVsTextSpanSet_Detach(This)	\
    ( (This)->lpVtbl -> Detach(This) ) 

#define IVsTextSpanSet_SuspendTracking(This)	\
    ( (This)->lpVtbl -> SuspendTracking(This) ) 

#define IVsTextSpanSet_ResumeTracking(This)	\
    ( (This)->lpVtbl -> ResumeTracking(This) ) 

#define IVsTextSpanSet_Add(This,cel,pSpan)	\
    ( (This)->lpVtbl -> Add(This,cel,pSpan) ) 

#define IVsTextSpanSet_GetCount(This,pcel)	\
    ( (This)->lpVtbl -> GetCount(This,pcel) ) 

#define IVsTextSpanSet_GetAt(This,iEl,pSpan)	\
    ( (This)->lpVtbl -> GetAt(This,iEl,pSpan) ) 

#define IVsTextSpanSet_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 

#define IVsTextSpanSet_Sort(This,SortOptions)	\
    ( (This)->lpVtbl -> Sort(This,SortOptions) ) 

#define IVsTextSpanSet_AddFromEnum(This,pEnum)	\
    ( (This)->lpVtbl -> AddFromEnum(This,pEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextSpanSet_INTERFACE_DEFINED__ */


#ifndef __IVsFinder_INTERFACE_DEFINED__
#define __IVsFinder_INTERFACE_DEFINED__

/* interface IVsFinder */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsFinder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D0C79C30-C06A-11d2-936C-D714766E8B50")
    IVsFinder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AttachTextImage( 
            /* [in] */ __RPC__in_opt IUnknown *pTextImage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Detach( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetScope( 
            /* [in] */ __RPC__in_opt IVsTextSpanSet *pSpanScope) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Init( 
            /* [in] */ DWORD grfOptions,
            /* [in] */ __RPC__in LPCOLESTR pszFindPattern,
            /* [in] */ BOOL fReinit,
            /* [retval][out] */ __RPC__out VSFINDERROR *pResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPosition( 
            /* [in] */ VSFINDPOS fp,
            /* [in] */ TextAddress ta) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ VSFINDHOW grfFindHow,
            /* [out][in] */ __RPC__inout TextSpan *ptsMatch,
            /* [retval][out] */ __RPC__out VSFINDSTATE *pgrfResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMatch( 
            /* [retval][out] */ __RPC__out TextSpan *pts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMatchedSpans( 
            /* [retval][out] */ __RPC__deref_out_opt IVsTextSpanSet **ppSpans) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTaggedSpans( 
            /* [retval][out] */ __RPC__deref_out_opt IVsTextSpanSet **ppTags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetState( 
            /* [out] */ __RPC__out LONG *pcFound,
            /* [out] */ __RPC__out VSFINDERROR *pResult,
            /* [retval][out] */ __RPC__out VSFINDSTATE *pState) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFinderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFinder * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFinder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFinder * This);
        
        HRESULT ( STDMETHODCALLTYPE *AttachTextImage )( 
            IVsFinder * This,
            /* [in] */ __RPC__in_opt IUnknown *pTextImage);
        
        HRESULT ( STDMETHODCALLTYPE *Detach )( 
            IVsFinder * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetScope )( 
            IVsFinder * This,
            /* [in] */ __RPC__in_opt IVsTextSpanSet *pSpanScope);
        
        HRESULT ( STDMETHODCALLTYPE *Init )( 
            IVsFinder * This,
            /* [in] */ DWORD grfOptions,
            /* [in] */ __RPC__in LPCOLESTR pszFindPattern,
            /* [in] */ BOOL fReinit,
            /* [retval][out] */ __RPC__out VSFINDERROR *pResult);
        
        HRESULT ( STDMETHODCALLTYPE *SetPosition )( 
            IVsFinder * This,
            /* [in] */ VSFINDPOS fp,
            /* [in] */ TextAddress ta);
        
        HRESULT ( STDMETHODCALLTYPE *Find )( 
            IVsFinder * This,
            /* [in] */ VSFINDHOW grfFindHow,
            /* [out][in] */ __RPC__inout TextSpan *ptsMatch,
            /* [retval][out] */ __RPC__out VSFINDSTATE *pgrfResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetMatch )( 
            IVsFinder * This,
            /* [retval][out] */ __RPC__out TextSpan *pts);
        
        HRESULT ( STDMETHODCALLTYPE *GetMatchedSpans )( 
            IVsFinder * This,
            /* [retval][out] */ __RPC__deref_out_opt IVsTextSpanSet **ppSpans);
        
        HRESULT ( STDMETHODCALLTYPE *GetTaggedSpans )( 
            IVsFinder * This,
            /* [retval][out] */ __RPC__deref_out_opt IVsTextSpanSet **ppTags);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IVsFinder * This,
            /* [out] */ __RPC__out LONG *pcFound,
            /* [out] */ __RPC__out VSFINDERROR *pResult,
            /* [retval][out] */ __RPC__out VSFINDSTATE *pState);
        
        END_INTERFACE
    } IVsFinderVtbl;

    interface IVsFinder
    {
        CONST_VTBL struct IVsFinderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFinder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFinder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFinder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFinder_AttachTextImage(This,pTextImage)	\
    ( (This)->lpVtbl -> AttachTextImage(This,pTextImage) ) 

#define IVsFinder_Detach(This)	\
    ( (This)->lpVtbl -> Detach(This) ) 

#define IVsFinder_SetScope(This,pSpanScope)	\
    ( (This)->lpVtbl -> SetScope(This,pSpanScope) ) 

#define IVsFinder_Init(This,grfOptions,pszFindPattern,fReinit,pResult)	\
    ( (This)->lpVtbl -> Init(This,grfOptions,pszFindPattern,fReinit,pResult) ) 

#define IVsFinder_SetPosition(This,fp,ta)	\
    ( (This)->lpVtbl -> SetPosition(This,fp,ta) ) 

#define IVsFinder_Find(This,grfFindHow,ptsMatch,pgrfResult)	\
    ( (This)->lpVtbl -> Find(This,grfFindHow,ptsMatch,pgrfResult) ) 

#define IVsFinder_GetMatch(This,pts)	\
    ( (This)->lpVtbl -> GetMatch(This,pts) ) 

#define IVsFinder_GetMatchedSpans(This,ppSpans)	\
    ( (This)->lpVtbl -> GetMatchedSpans(This,ppSpans) ) 

#define IVsFinder_GetTaggedSpans(This,ppTags)	\
    ( (This)->lpVtbl -> GetTaggedSpans(This,ppTags) ) 

#define IVsFinder_GetState(This,pcFound,pResult,pState)	\
    ( (This)->lpVtbl -> GetState(This,pcFound,pResult,pState) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFinder_INTERFACE_DEFINED__ */


#ifndef __IVsFindHelper_INTERFACE_DEFINED__
#define __IVsFindHelper_INTERFACE_DEFINED__

/* interface IVsFindHelper */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsFindHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BB02E777-EC3E-479f-980E-8E36B9617DCA")
    IVsFindHelper : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE FindInText( 
            /* [in] */ __RPC__in LPCOLESTR pszFind,
            /* [in] */ __RPC__in LPCOLESTR pszReplace,
            /* [in] */ VSFINDOPTIONS grfFindOptions,
            /* [in] */ VSFINDBUFFERFLAGS grfBufferFlags,
            /* [in] */ ULONG cchText,
            /* [size_is][in] */ __RPC__in_ecount_full(cchText) LPCOLESTR pchText,
            /* [out] */ __RPC__out ULONG *piFound,
            /* [out] */ __RPC__out ULONG *pcchFound,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrReplaceText,
            /* [retval][out] */ __RPC__out BOOL *pfFound) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFindHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFindHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFindHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFindHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *FindInText )( 
            IVsFindHelper * This,
            /* [in] */ __RPC__in LPCOLESTR pszFind,
            /* [in] */ __RPC__in LPCOLESTR pszReplace,
            /* [in] */ VSFINDOPTIONS grfFindOptions,
            /* [in] */ VSFINDBUFFERFLAGS grfBufferFlags,
            /* [in] */ ULONG cchText,
            /* [size_is][in] */ __RPC__in_ecount_full(cchText) LPCOLESTR pchText,
            /* [out] */ __RPC__out ULONG *piFound,
            /* [out] */ __RPC__out ULONG *pcchFound,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrReplaceText,
            /* [retval][out] */ __RPC__out BOOL *pfFound);
        
        END_INTERFACE
    } IVsFindHelperVtbl;

    interface IVsFindHelper
    {
        CONST_VTBL struct IVsFindHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFindHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFindHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFindHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFindHelper_FindInText(This,pszFind,pszReplace,grfFindOptions,grfBufferFlags,cchText,pchText,piFound,pcchFound,pbstrReplaceText,pfFound)	\
    ( (This)->lpVtbl -> FindInText(This,pszFind,pszReplace,grfFindOptions,grfBufferFlags,cchText,pchText,piFound,pcchFound,pbstrReplaceText,pfFound) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFindHelper_INTERFACE_DEFINED__ */


#ifndef __IVsFindTarget_INTERFACE_DEFINED__
#define __IVsFindTarget_INTERFACE_DEFINED__

/* interface IVsFindTarget */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsFindTarget;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DE89D360-C06A-11d2-936C-D714766E8B50")
    IVsFindTarget : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCapabilities( 
            /* [custom][out] */ __RPC__out BOOL *pfImage,
            /* [out] */ __RPC__out VSFINDOPTIONS *pgrfOptions) = 0;
        
        virtual /* [custom] */ HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ VSFTPROPID propid,
            /* [retval][out] */ __RPC__out VARIANT *pvar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSearchImage( 
            /* [in] */ VSFINDOPTIONS grfOptions,
            /* [custom][out] */ __RPC__deref_out_opt IVsTextSpanSet **ppSpans,
            /* [retval][out] */ __RPC__deref_out_opt IVsTextImage **ppTextImage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ __RPC__in LPCOLESTR pszSearch,
            /* [in] */ VSFINDOPTIONS grfOptions,
            /* [in] */ BOOL fResetStartPoint,
            /* [in] */ __RPC__in_opt IVsFindHelper *pHelper,
            /* [retval][out] */ __RPC__out VSFINDRESULT *pResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Replace( 
            /* [in] */ __RPC__in LPCOLESTR pszSearch,
            /* [in] */ __RPC__in LPCOLESTR pszReplace,
            /* [in] */ VSFINDOPTIONS grfOptions,
            /* [in] */ BOOL fResetStartPoint,
            /* [in] */ __RPC__in_opt IVsFindHelper *pHelper,
            /* [retval][out] */ __RPC__out BOOL *pfReplaced) = 0;
        
        virtual /* [custom] */ HRESULT STDMETHODCALLTYPE GetMatchRect( 
            /* [retval][out] */ __RPC__out PRECT prc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NavigateTo( 
            /* [in] */ __RPC__in const TextSpan *pts) = 0;
        
        virtual /* [custom] */ HRESULT STDMETHODCALLTYPE GetCurrentSpan( 
            /* [retval][out] */ __RPC__out TextSpan *pts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFindState( 
            /* [in] */ __RPC__in_opt IUnknown *punk) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFindState( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppunk) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NotifyFindTarget( 
            /* [in] */ VSFTNOTIFY notification) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MarkSpan( 
            /* [in] */ __RPC__in const TextSpan *pts) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFindTargetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFindTarget * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFindTarget * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFindTarget * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCapabilities )( 
            IVsFindTarget * This,
            /* [custom][out] */ __RPC__out BOOL *pfImage,
            /* [out] */ __RPC__out VSFINDOPTIONS *pgrfOptions);
        
        /* [custom] */ HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            IVsFindTarget * This,
            /* [in] */ VSFTPROPID propid,
            /* [retval][out] */ __RPC__out VARIANT *pvar);
        
        HRESULT ( STDMETHODCALLTYPE *GetSearchImage )( 
            IVsFindTarget * This,
            /* [in] */ VSFINDOPTIONS grfOptions,
            /* [custom][out] */ __RPC__deref_out_opt IVsTextSpanSet **ppSpans,
            /* [retval][out] */ __RPC__deref_out_opt IVsTextImage **ppTextImage);
        
        HRESULT ( STDMETHODCALLTYPE *Find )( 
            IVsFindTarget * This,
            /* [in] */ __RPC__in LPCOLESTR pszSearch,
            /* [in] */ VSFINDOPTIONS grfOptions,
            /* [in] */ BOOL fResetStartPoint,
            /* [in] */ __RPC__in_opt IVsFindHelper *pHelper,
            /* [retval][out] */ __RPC__out VSFINDRESULT *pResult);
        
        HRESULT ( STDMETHODCALLTYPE *Replace )( 
            IVsFindTarget * This,
            /* [in] */ __RPC__in LPCOLESTR pszSearch,
            /* [in] */ __RPC__in LPCOLESTR pszReplace,
            /* [in] */ VSFINDOPTIONS grfOptions,
            /* [in] */ BOOL fResetStartPoint,
            /* [in] */ __RPC__in_opt IVsFindHelper *pHelper,
            /* [retval][out] */ __RPC__out BOOL *pfReplaced);
        
        /* [custom] */ HRESULT ( STDMETHODCALLTYPE *GetMatchRect )( 
            IVsFindTarget * This,
            /* [retval][out] */ __RPC__out PRECT prc);
        
        HRESULT ( STDMETHODCALLTYPE *NavigateTo )( 
            IVsFindTarget * This,
            /* [in] */ __RPC__in const TextSpan *pts);
        
        /* [custom] */ HRESULT ( STDMETHODCALLTYPE *GetCurrentSpan )( 
            IVsFindTarget * This,
            /* [retval][out] */ __RPC__out TextSpan *pts);
        
        HRESULT ( STDMETHODCALLTYPE *SetFindState )( 
            IVsFindTarget * This,
            /* [in] */ __RPC__in_opt IUnknown *punk);
        
        HRESULT ( STDMETHODCALLTYPE *GetFindState )( 
            IVsFindTarget * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppunk);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyFindTarget )( 
            IVsFindTarget * This,
            /* [in] */ VSFTNOTIFY notification);
        
        HRESULT ( STDMETHODCALLTYPE *MarkSpan )( 
            IVsFindTarget * This,
            /* [in] */ __RPC__in const TextSpan *pts);
        
        END_INTERFACE
    } IVsFindTargetVtbl;

    interface IVsFindTarget
    {
        CONST_VTBL struct IVsFindTargetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFindTarget_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFindTarget_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFindTarget_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFindTarget_GetCapabilities(This,pfImage,pgrfOptions)	\
    ( (This)->lpVtbl -> GetCapabilities(This,pfImage,pgrfOptions) ) 

#define IVsFindTarget_GetProperty(This,propid,pvar)	\
    ( (This)->lpVtbl -> GetProperty(This,propid,pvar) ) 

#define IVsFindTarget_GetSearchImage(This,grfOptions,ppSpans,ppTextImage)	\
    ( (This)->lpVtbl -> GetSearchImage(This,grfOptions,ppSpans,ppTextImage) ) 

#define IVsFindTarget_Find(This,pszSearch,grfOptions,fResetStartPoint,pHelper,pResult)	\
    ( (This)->lpVtbl -> Find(This,pszSearch,grfOptions,fResetStartPoint,pHelper,pResult) ) 

#define IVsFindTarget_Replace(This,pszSearch,pszReplace,grfOptions,fResetStartPoint,pHelper,pfReplaced)	\
    ( (This)->lpVtbl -> Replace(This,pszSearch,pszReplace,grfOptions,fResetStartPoint,pHelper,pfReplaced) ) 

#define IVsFindTarget_GetMatchRect(This,prc)	\
    ( (This)->lpVtbl -> GetMatchRect(This,prc) ) 

#define IVsFindTarget_NavigateTo(This,pts)	\
    ( (This)->lpVtbl -> NavigateTo(This,pts) ) 

#define IVsFindTarget_GetCurrentSpan(This,pts)	\
    ( (This)->lpVtbl -> GetCurrentSpan(This,pts) ) 

#define IVsFindTarget_SetFindState(This,punk)	\
    ( (This)->lpVtbl -> SetFindState(This,punk) ) 

#define IVsFindTarget_GetFindState(This,ppunk)	\
    ( (This)->lpVtbl -> GetFindState(This,ppunk) ) 

#define IVsFindTarget_NotifyFindTarget(This,notification)	\
    ( (This)->lpVtbl -> NotifyFindTarget(This,notification) ) 

#define IVsFindTarget_MarkSpan(This,pts)	\
    ( (This)->lpVtbl -> MarkSpan(This,pts) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFindTarget_INTERFACE_DEFINED__ */


#ifndef __IVsFindScope_INTERFACE_DEFINED__
#define __IVsFindScope_INTERFACE_DEFINED__

/* interface IVsFindScope */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsFindScope;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0FE9496A-129C-40ee-99D8-7705A6283518")
    IVsFindScope : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetUIName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbsName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetQuery( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBaseDirectory,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrQuery) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumFilenames( 
            /* [retval][out] */ __RPC__deref_out_opt IEnumString **ppEnumString) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFindScopeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFindScope * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFindScope * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFindScope * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetUIName )( 
            IVsFindScope * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbsName);
        
        HRESULT ( STDMETHODCALLTYPE *GetQuery )( 
            IVsFindScope * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBaseDirectory,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrQuery);
        
        HRESULT ( STDMETHODCALLTYPE *EnumFilenames )( 
            IVsFindScope * This,
            /* [retval][out] */ __RPC__deref_out_opt IEnumString **ppEnumString);
        
        END_INTERFACE
    } IVsFindScopeVtbl;

    interface IVsFindScope
    {
        CONST_VTBL struct IVsFindScopeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFindScope_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFindScope_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFindScope_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFindScope_GetUIName(This,pbsName)	\
    ( (This)->lpVtbl -> GetUIName(This,pbsName) ) 

#define IVsFindScope_GetQuery(This,pbstrBaseDirectory,pbstrQuery)	\
    ( (This)->lpVtbl -> GetQuery(This,pbstrBaseDirectory,pbstrQuery) ) 

#define IVsFindScope_EnumFilenames(This,ppEnumString)	\
    ( (This)->lpVtbl -> EnumFilenames(This,ppEnumString) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFindScope_INTERFACE_DEFINED__ */


#ifndef __IVsRegisterFindScope_INTERFACE_DEFINED__
#define __IVsRegisterFindScope_INTERFACE_DEFINED__

/* interface IVsRegisterFindScope */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsRegisterFindScope;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("08363D65-C178-4484-A293-D148173DD750")
    IVsRegisterFindScope : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RegisterFindScope( 
            /* [in] */ __RPC__in_opt IVsFindScope *pScope,
            /* [out] */ __RPC__out DWORD_PTR *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnRegisterFindScope( 
            /* [in] */ DWORD_PTR dwCookie) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsRegisterFindScopeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsRegisterFindScope * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsRegisterFindScope * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsRegisterFindScope * This);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterFindScope )( 
            IVsRegisterFindScope * This,
            /* [in] */ __RPC__in_opt IVsFindScope *pScope,
            /* [out] */ __RPC__out DWORD_PTR *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE *UnRegisterFindScope )( 
            IVsRegisterFindScope * This,
            /* [in] */ DWORD_PTR dwCookie);
        
        END_INTERFACE
    } IVsRegisterFindScopeVtbl;

    interface IVsRegisterFindScope
    {
        CONST_VTBL struct IVsRegisterFindScopeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsRegisterFindScope_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsRegisterFindScope_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsRegisterFindScope_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsRegisterFindScope_RegisterFindScope(This,pScope,pdwCookie)	\
    ( (This)->lpVtbl -> RegisterFindScope(This,pScope,pdwCookie) ) 

#define IVsRegisterFindScope_UnRegisterFindScope(This,dwCookie)	\
    ( (This)->lpVtbl -> UnRegisterFindScope(This,dwCookie) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsRegisterFindScope_INTERFACE_DEFINED__ */


#ifndef __IVsHighlight_INTERFACE_DEFINED__
#define __IVsHighlight_INTERFACE_DEFINED__

/* interface IVsHighlight */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsHighlight;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("22212CD2-83FF-11d2-92E6-005345000000")
    IVsHighlight : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetHighlightRect( 
            /* [out] */ __RPC__out RECT *prc) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsHighlightVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsHighlight * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsHighlight * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsHighlight * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetHighlightRect )( 
            IVsHighlight * This,
            /* [out] */ __RPC__out RECT *prc);
        
        END_INTERFACE
    } IVsHighlightVtbl;

    interface IVsHighlight
    {
        CONST_VTBL struct IVsHighlightVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsHighlight_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsHighlight_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsHighlight_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsHighlight_GetHighlightRect(This,prc)	\
    ( (This)->lpVtbl -> GetHighlightRect(This,prc) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsHighlight_INTERFACE_DEFINED__ */


#ifndef __IVsTextImageUtilities_INTERFACE_DEFINED__
#define __IVsTextImageUtilities_INTERFACE_DEFINED__

/* interface IVsTextImageUtilities */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsTextImageUtilities;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C5557BAA-B685-46dc-AF46-C16BFDE8FAB7")
    IVsTextImageUtilities : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetReplaceText( 
            /* [in] */ VSFINDOPTIONS grfOptions,
            /* [in] */ __RPC__in LPCOLESTR pszReplace,
            /* [in] */ __RPC__in_opt IVsTextImage *pText,
            /* [in] */ __RPC__in const TextSpan *pMatch,
            /* [in] */ __RPC__in_opt IVsTextSpanSet *pTags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrComputedText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LoadTextFile( 
            /* [in] */ __RPC__in LPCOLESTR pszFilename,
            /* [in] */ VSTFF vstffIn,
            /* [out] */ __RPC__out VSTFF *pvstffOut,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LoadTextImageFromFile( 
            /* [in] */ __RPC__in LPCOLESTR pszFilename,
            /* [in] */ __RPC__in_opt IVsTextImage *pImage,
            /* [in] */ VSTFF vstffIn,
            /* [retval][out] */ __RPC__out VSTFF *pvstffOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveTextImageToFile( 
            /* [in] */ __RPC__in LPCOLESTR pszFilename,
            /* [in] */ __RPC__in_opt IVsTextImage *pImage,
            /* [in] */ VSTFF vstffIn,
            /* [retval][out] */ __RPC__out VSTFF *pvstffOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTextFormat( 
            /* [in] */ VSTFF vstffIn,
            /* [in] */ DWORD cbData,
            /* [size_is][in] */ __RPC__in_ecount_full(cbData) const BYTE *pData,
            /* [retval][out] */ __RPC__out VSTFF *pvstffOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LoadTextImageFromMemory( 
            /* [in] */ __RPC__in_opt IVsTextImage *pImage,
            /* [in] */ VSTFF vstffIn,
            /* [in] */ DWORD cbData,
            /* [size_is][in] */ __RPC__in_ecount_full(cbData) const BYTE *pData,
            /* [retval][out] */ __RPC__out VSTFF *pvstffOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveTextImageToMemory( 
            /* [in] */ __RPC__in_opt IVsTextImage *pImage,
            /* [in] */ VSTFF vstffIn,
            /* [in] */ DWORD cbData,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(cbData, *pcbWritten) BYTE *pData,
            /* [out] */ __RPC__out DWORD *pcbWritten,
            /* [out] */ __RPC__out VSTFF *pvstffOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsTextImageUtilitiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsTextImageUtilities * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsTextImageUtilities * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsTextImageUtilities * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetReplaceText )( 
            IVsTextImageUtilities * This,
            /* [in] */ VSFINDOPTIONS grfOptions,
            /* [in] */ __RPC__in LPCOLESTR pszReplace,
            /* [in] */ __RPC__in_opt IVsTextImage *pText,
            /* [in] */ __RPC__in const TextSpan *pMatch,
            /* [in] */ __RPC__in_opt IVsTextSpanSet *pTags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrComputedText);
        
        HRESULT ( STDMETHODCALLTYPE *LoadTextFile )( 
            IVsTextImageUtilities * This,
            /* [in] */ __RPC__in LPCOLESTR pszFilename,
            /* [in] */ VSTFF vstffIn,
            /* [out] */ __RPC__out VSTFF *pvstffOut,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstr);
        
        HRESULT ( STDMETHODCALLTYPE *LoadTextImageFromFile )( 
            IVsTextImageUtilities * This,
            /* [in] */ __RPC__in LPCOLESTR pszFilename,
            /* [in] */ __RPC__in_opt IVsTextImage *pImage,
            /* [in] */ VSTFF vstffIn,
            /* [retval][out] */ __RPC__out VSTFF *pvstffOut);
        
        HRESULT ( STDMETHODCALLTYPE *SaveTextImageToFile )( 
            IVsTextImageUtilities * This,
            /* [in] */ __RPC__in LPCOLESTR pszFilename,
            /* [in] */ __RPC__in_opt IVsTextImage *pImage,
            /* [in] */ VSTFF vstffIn,
            /* [retval][out] */ __RPC__out VSTFF *pvstffOut);
        
        HRESULT ( STDMETHODCALLTYPE *GetTextFormat )( 
            IVsTextImageUtilities * This,
            /* [in] */ VSTFF vstffIn,
            /* [in] */ DWORD cbData,
            /* [size_is][in] */ __RPC__in_ecount_full(cbData) const BYTE *pData,
            /* [retval][out] */ __RPC__out VSTFF *pvstffOut);
        
        HRESULT ( STDMETHODCALLTYPE *LoadTextImageFromMemory )( 
            IVsTextImageUtilities * This,
            /* [in] */ __RPC__in_opt IVsTextImage *pImage,
            /* [in] */ VSTFF vstffIn,
            /* [in] */ DWORD cbData,
            /* [size_is][in] */ __RPC__in_ecount_full(cbData) const BYTE *pData,
            /* [retval][out] */ __RPC__out VSTFF *pvstffOut);
        
        HRESULT ( STDMETHODCALLTYPE *SaveTextImageToMemory )( 
            IVsTextImageUtilities * This,
            /* [in] */ __RPC__in_opt IVsTextImage *pImage,
            /* [in] */ VSTFF vstffIn,
            /* [in] */ DWORD cbData,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(cbData, *pcbWritten) BYTE *pData,
            /* [out] */ __RPC__out DWORD *pcbWritten,
            /* [out] */ __RPC__out VSTFF *pvstffOut);
        
        END_INTERFACE
    } IVsTextImageUtilitiesVtbl;

    interface IVsTextImageUtilities
    {
        CONST_VTBL struct IVsTextImageUtilitiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsTextImageUtilities_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsTextImageUtilities_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsTextImageUtilities_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsTextImageUtilities_GetReplaceText(This,grfOptions,pszReplace,pText,pMatch,pTags,pbstrComputedText)	\
    ( (This)->lpVtbl -> GetReplaceText(This,grfOptions,pszReplace,pText,pMatch,pTags,pbstrComputedText) ) 

#define IVsTextImageUtilities_LoadTextFile(This,pszFilename,vstffIn,pvstffOut,pbstr)	\
    ( (This)->lpVtbl -> LoadTextFile(This,pszFilename,vstffIn,pvstffOut,pbstr) ) 

#define IVsTextImageUtilities_LoadTextImageFromFile(This,pszFilename,pImage,vstffIn,pvstffOut)	\
    ( (This)->lpVtbl -> LoadTextImageFromFile(This,pszFilename,pImage,vstffIn,pvstffOut) ) 

#define IVsTextImageUtilities_SaveTextImageToFile(This,pszFilename,pImage,vstffIn,pvstffOut)	\
    ( (This)->lpVtbl -> SaveTextImageToFile(This,pszFilename,pImage,vstffIn,pvstffOut) ) 

#define IVsTextImageUtilities_GetTextFormat(This,vstffIn,cbData,pData,pvstffOut)	\
    ( (This)->lpVtbl -> GetTextFormat(This,vstffIn,cbData,pData,pvstffOut) ) 

#define IVsTextImageUtilities_LoadTextImageFromMemory(This,pImage,vstffIn,cbData,pData,pvstffOut)	\
    ( (This)->lpVtbl -> LoadTextImageFromMemory(This,pImage,vstffIn,cbData,pData,pvstffOut) ) 

#define IVsTextImageUtilities_SaveTextImageToMemory(This,pImage,vstffIn,cbData,pData,pcbWritten,pvstffOut)	\
    ( (This)->lpVtbl -> SaveTextImageToMemory(This,pImage,vstffIn,cbData,pData,pcbWritten,pvstffOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsTextImageUtilities_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_VsFinder;

#ifdef __cplusplus

class DECLSPEC_UUID("9F842E53-E27B-426f-AE69-8F075770C6F3")
VsFinder;
#endif

EXTERN_C const CLSID CLSID_VsTextSpanSet;

#ifdef __cplusplus

class DECLSPEC_UUID("31A81214-5A9F-4532-ACD0-3204A9AB5D08")
VsTextSpanSet;
#endif

EXTERN_C const CLSID CLSID_VsTextImage;

#ifdef __cplusplus

class DECLSPEC_UUID("66B88230-2363-4992-B740-B0450A6F51CA")
VsTextImage;
#endif
#endif /* __TextFind_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_textfind_0001_0223 */
/* [local] */ 

const GUID GUID_FindReplace   = { 0xcf2ddc32, 0x8cad, 0x11d2, { 0x93, 0x2, 0x0, 0x53, 0x45, 0x0, 0x0, 0x0 } };
const GUID GUID_FindAdvanced = { 0xe830ec50, 0xc2b5, 0x11d2, { 0x93, 0x75, 0x0, 0x80, 0xc7, 0x47, 0xd9, 0xa0 } };
const GUID GUID_FindResults1  = { 0xf887920, 0xc2b6, 0x11d2, { 0x93, 0x75, 0x0, 0x80, 0xc7, 0x47, 0xd9, 0xa0 } };
const GUID GUID_FindResults2  = { 0xf887921, 0xc2b6, 0x11d2, { 0x93, 0x75, 0x0, 0x80, 0xc7, 0x47, 0xd9, 0xa0 } };


extern RPC_IF_HANDLE __MIDL_itf_textfind_0001_0223_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_textfind_0001_0223_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\textfind2.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for textfind2.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __textfind2_h__
#define __textfind2_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IVsFindTarget2_FWD_DEFINED__
#define __IVsFindTarget2_FWD_DEFINED__
typedef interface IVsFindTarget2 IVsFindTarget2;
#endif 	/* __IVsFindTarget2_FWD_DEFINED__ */


#ifndef __IVsFindCancelDialog_FWD_DEFINED__
#define __IVsFindCancelDialog_FWD_DEFINED__
typedef interface IVsFindCancelDialog IVsFindCancelDialog;
#endif 	/* __IVsFindCancelDialog_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "textfind.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_textfind2_0000_0000 */
/* [local] */ 

#pragma once


extern RPC_IF_HANDLE __MIDL_itf_textfind2_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_textfind2_0000_0000_v0_0_s_ifspec;

#ifndef __IVsFindTarget2_INTERFACE_DEFINED__
#define __IVsFindTarget2_INTERFACE_DEFINED__

/* interface IVsFindTarget2 */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsFindTarget2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DE311250-1F14-430e-B896-EFBDDD8ABB3E")
    IVsFindTarget2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE NavigateTo2( 
            /* [in] */ __RPC__in_opt IVsTextSpanSet *pSpans,
            /* [in] */ enum _TextSelMode iSelMode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFindTarget2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFindTarget2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFindTarget2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFindTarget2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *NavigateTo2 )( 
            IVsFindTarget2 * This,
            /* [in] */ __RPC__in_opt IVsTextSpanSet *pSpans,
            /* [in] */ enum _TextSelMode iSelMode);
        
        END_INTERFACE
    } IVsFindTarget2Vtbl;

    interface IVsFindTarget2
    {
        CONST_VTBL struct IVsFindTarget2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFindTarget2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFindTarget2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFindTarget2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFindTarget2_NavigateTo2(This,pSpans,iSelMode)	\
    ( (This)->lpVtbl -> NavigateTo2(This,pSpans,iSelMode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFindTarget2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_textfind2_0000_0001 */
/* [local] */ 

typedef /* [public] */ 
enum __MIDL___MIDL_itf_textfind2_0000_0001_0001
    {	VSFE_NoErrorAnsiPattern	= 1
    } 	VSFINDERROR2;


enum __VSFINDRESULT2
    {	VSFR_ReplaceIncompleteEOL	= 0x10000000,
	VSFR_CancelledBeforeReplacementsMade	= 0x20000000
    } ;
typedef DWORD VSFINDRESULT2;


enum __VSFINDOPTIONS2
    {	FR_RegExprLineBreaks	= 0x4000,
	FR_BlockThread	= 0x20000000,
	FR_DoNotUpdateUI	= 0x40000000
    } ;
typedef DWORD VSFINDOPTIONS2;


enum __VSFTPROPID2
    {	VSFTPROPID_IsFindInFilesForegroundOnly	= 6
    } ;
typedef DWORD VSFTPROPID2;



extern RPC_IF_HANDLE __MIDL_itf_textfind2_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_textfind2_0000_0001_v0_0_s_ifspec;

#ifndef __IVsFindCancelDialog_INTERFACE_DEFINED__
#define __IVsFindCancelDialog_INTERFACE_DEFINED__

/* interface IVsFindCancelDialog */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsFindCancelDialog;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FE7C62A2-C121-4995-9EC1-561B80D2DA11")
    IVsFindCancelDialog : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE LaunchDialog( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryDialog( 
            /* [out] */ __RPC__out BOOL *pfCancel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseDialog( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFindCancelDialogVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFindCancelDialog * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFindCancelDialog * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFindCancelDialog * This);
        
        HRESULT ( STDMETHODCALLTYPE *LaunchDialog )( 
            IVsFindCancelDialog * This);
        
        HRESULT ( STDMETHODCALLTYPE *QueryDialog )( 
            IVsFindCancelDialog * This,
            /* [out] */ __RPC__out BOOL *pfCancel);
        
        HRESULT ( STDMETHODCALLTYPE *CloseDialog )( 
            IVsFindCancelDialog * This);
        
        END_INTERFACE
    } IVsFindCancelDialogVtbl;

    interface IVsFindCancelDialog
    {
        CONST_VTBL struct IVsFindCancelDialogVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFindCancelDialog_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFindCancelDialog_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFindCancelDialog_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFindCancelDialog_LaunchDialog(This)	\
    ( (This)->lpVtbl -> LaunchDialog(This) ) 

#define IVsFindCancelDialog_QueryDialog(This,pfCancel)	\
    ( (This)->lpVtbl -> QueryDialog(This,pfCancel) ) 

#define IVsFindCancelDialog_CloseDialog(This)	\
    ( (This)->lpVtbl -> CloseDialog(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFindCancelDialog_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\uilocale.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for uilocale.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __uilocale_h__
#define __uilocale_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IUIHostLocale_FWD_DEFINED__
#define __IUIHostLocale_FWD_DEFINED__
typedef interface IUIHostLocale IUIHostLocale;
#endif 	/* __IUIHostLocale_FWD_DEFINED__ */


#ifndef __IUIHostLocale2_FWD_DEFINED__
#define __IUIHostLocale2_FWD_DEFINED__
typedef interface IUIHostLocale2 IUIHostLocale2;
#endif 	/* __IUIHostLocale2_FWD_DEFINED__ */


/* header files for imported files */
#include "oleidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_uilocale_0000_0000 */
/* [local] */ 

#if 0
typedef struct _LOGFONTW
    {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    WCHAR lfFaceName[ 32 ];
    } 	UIDLGLOGFONT;

#else
#define UIDLGLOGFONT LOGFONTW
#endif


extern RPC_IF_HANDLE __MIDL_itf_uilocale_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_uilocale_0000_0000_v0_0_s_ifspec;

#ifndef __IUIHostLocale_INTERFACE_DEFINED__
#define __IUIHostLocale_INTERFACE_DEFINED__

/* interface IUIHostLocale */
/* [object][version][uuid] */ 


EXTERN_C const IID IID_IUIHostLocale;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2C2EA031-02BE-11d1-8C85-00C04FC2AA89")
    IUIHostLocale : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetUILocale( 
            /* [retval][out] */ __RPC__out LCID *plcid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDialogFont( 
            /* [out] */ __RPC__out UIDLGLOGFONT *plogfont) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IUIHostLocaleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IUIHostLocale * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IUIHostLocale * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IUIHostLocale * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetUILocale )( 
            IUIHostLocale * This,
            /* [retval][out] */ __RPC__out LCID *plcid);
        
        HRESULT ( STDMETHODCALLTYPE *GetDialogFont )( 
            IUIHostLocale * This,
            /* [out] */ __RPC__out UIDLGLOGFONT *plogfont);
        
        END_INTERFACE
    } IUIHostLocaleVtbl;

    interface IUIHostLocale
    {
        CONST_VTBL struct IUIHostLocaleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IUIHostLocale_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IUIHostLocale_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IUIHostLocale_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IUIHostLocale_GetUILocale(This,plcid)	\
    ( (This)->lpVtbl -> GetUILocale(This,plcid) ) 

#define IUIHostLocale_GetDialogFont(This,plogfont)	\
    ( (This)->lpVtbl -> GetDialogFont(This,plogfont) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IUIHostLocale_INTERFACE_DEFINED__ */


#ifndef __IUIHostLocale2_INTERFACE_DEFINED__
#define __IUIHostLocale2_INTERFACE_DEFINED__

/* interface IUIHostLocale2 */
/* [object][version][uuid] */ 


EXTERN_C const IID IID_IUIHostLocale2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2C2EA032-02BE-11d1-8C85-00C04FC2AA89")
    IUIHostLocale2 : public IUIHostLocale
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE LoadUILibrary( 
            /* [in] */ __RPC__in LPCOLESTR lpstrPath,
            /* [in] */ __RPC__in LPCOLESTR lpstrDllName,
            /* [in] */ DWORD dwExFlags,
            /* [retval][out] */ __RPC__out DWORD_PTR *phinstOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MungeDialogFont( 
            /* [in] */ DWORD dwSize,
            /* [size_is][in] */ __RPC__in_ecount_full(dwSize) const BYTE *pDlgTemplate,
            /* [out] */ __RPC__deref_out_opt BYTE **ppDlgTemplateOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LoadDialog( 
            /* [in] */ DWORD_PTR hMod,
            /* [in] */ DWORD dwDlgResId,
            /* [out] */ __RPC__deref_out_opt BYTE **ppDlgTemplate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUILibraryFileName( 
            /* [in] */ __RPC__in LPCOLESTR lpstrPath,
            /* [in] */ __RPC__in LPCOLESTR lpstrDllName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IUIHostLocale2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IUIHostLocale2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IUIHostLocale2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IUIHostLocale2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetUILocale )( 
            IUIHostLocale2 * This,
            /* [retval][out] */ __RPC__out LCID *plcid);
        
        HRESULT ( STDMETHODCALLTYPE *GetDialogFont )( 
            IUIHostLocale2 * This,
            /* [out] */ __RPC__out UIDLGLOGFONT *plogfont);
        
        HRESULT ( STDMETHODCALLTYPE *LoadUILibrary )( 
            IUIHostLocale2 * This,
            /* [in] */ __RPC__in LPCOLESTR lpstrPath,
            /* [in] */ __RPC__in LPCOLESTR lpstrDllName,
            /* [in] */ DWORD dwExFlags,
            /* [retval][out] */ __RPC__out DWORD_PTR *phinstOut);
        
        HRESULT ( STDMETHODCALLTYPE *MungeDialogFont )( 
            IUIHostLocale2 * This,
            /* [in] */ DWORD dwSize,
            /* [size_is][in] */ __RPC__in_ecount_full(dwSize) const BYTE *pDlgTemplate,
            /* [out] */ __RPC__deref_out_opt BYTE **ppDlgTemplateOut);
        
        HRESULT ( STDMETHODCALLTYPE *LoadDialog )( 
            IUIHostLocale2 * This,
            /* [in] */ DWORD_PTR hMod,
            /* [in] */ DWORD dwDlgResId,
            /* [out] */ __RPC__deref_out_opt BYTE **ppDlgTemplate);
        
        HRESULT ( STDMETHODCALLTYPE *GetUILibraryFileName )( 
            IUIHostLocale2 * This,
            /* [in] */ __RPC__in LPCOLESTR lpstrPath,
            /* [in] */ __RPC__in LPCOLESTR lpstrDllName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrOut);
        
        END_INTERFACE
    } IUIHostLocale2Vtbl;

    interface IUIHostLocale2
    {
        CONST_VTBL struct IUIHostLocale2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IUIHostLocale2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IUIHostLocale2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IUIHostLocale2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IUIHostLocale2_GetUILocale(This,plcid)	\
    ( (This)->lpVtbl -> GetUILocale(This,plcid) ) 

#define IUIHostLocale2_GetDialogFont(This,plogfont)	\
    ( (This)->lpVtbl -> GetDialogFont(This,plogfont) ) 


#define IUIHostLocale2_LoadUILibrary(This,lpstrPath,lpstrDllName,dwExFlags,phinstOut)	\
    ( (This)->lpVtbl -> LoadUILibrary(This,lpstrPath,lpstrDllName,dwExFlags,phinstOut) ) 

#define IUIHostLocale2_MungeDialogFont(This,dwSize,pDlgTemplate,ppDlgTemplateOut)	\
    ( (This)->lpVtbl -> MungeDialogFont(This,dwSize,pDlgTemplate,ppDlgTemplateOut) ) 

#define IUIHostLocale2_LoadDialog(This,hMod,dwDlgResId,ppDlgTemplate)	\
    ( (This)->lpVtbl -> LoadDialog(This,hMod,dwDlgResId,ppDlgTemplate) ) 

#define IUIHostLocale2_GetUILibraryFileName(This,lpstrPath,lpstrDllName,pbstrOut)	\
    ( (This)->lpVtbl -> GetUILibraryFileName(This,lpstrPath,lpstrDllName,pbstrOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IUIHostLocale2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_uilocale_0000_0002 */
/* [local] */ 

#define SID_SUIHostLocale IID_IUIHostLocale


extern RPC_IF_HANDLE __MIDL_itf_uilocale_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_uilocale_0000_0002_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\undoredo.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for undoredo.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __undoredo_h__
#define __undoredo_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAction_FWD_DEFINED__
#define __IAction_FWD_DEFINED__
typedef interface IAction IAction;
#endif 	/* __IAction_FWD_DEFINED__ */


#ifndef __IEnumActions_FWD_DEFINED__
#define __IEnumActions_FWD_DEFINED__
typedef interface IEnumActions IEnumActions;
#endif 	/* __IEnumActions_FWD_DEFINED__ */


#ifndef __IActionHistory_FWD_DEFINED__
#define __IActionHistory_FWD_DEFINED__
typedef interface IActionHistory IActionHistory;
#endif 	/* __IActionHistory_FWD_DEFINED__ */


#ifndef __ActionHistory_FWD_DEFINED__
#define __ActionHistory_FWD_DEFINED__

#ifdef __cplusplus
typedef class ActionHistory ActionHistory;
#else
typedef struct ActionHistory ActionHistory;
#endif /* __cplusplus */

#endif 	/* __ActionHistory_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __IAction_INTERFACE_DEFINED__
#define __IAction_INTERFACE_DEFINED__

/* interface IAction */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D8C8AB11-7D4A-11d0-A8AA-00A0C921A4D2")
    IAction : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetName( 
            __RPC__deref_in_opt BSTR *bstrName,
            BOOL fLongName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            __RPC__in long *piSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Undo( 
            __RPC__in_opt IUnknown *pObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Redo( 
            __RPC__in_opt IUnknown *pObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Abort( 
            __RPC__in_opt IUnknown *pObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddSibling( 
            __RPC__in_opt IAction *pAction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNextSibling( 
            __RPC__deref_in_opt IAction **ppAction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddChild( 
            __RPC__in_opt IAction *pAction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFirstChild( 
            __RPC__deref_in_opt IAction **ppAction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CanMerge( 
            __RPC__in_opt IAction *pAction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Merge( 
            __RPC__in_opt IAction *pAction) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetName )( 
            IAction * This,
            __RPC__deref_in_opt BSTR *bstrName,
            BOOL fLongName);
        
        HRESULT ( STDMETHODCALLTYPE *GetSize )( 
            IAction * This,
            __RPC__in long *piSize);
        
        HRESULT ( STDMETHODCALLTYPE *Undo )( 
            IAction * This,
            __RPC__in_opt IUnknown *pObject);
        
        HRESULT ( STDMETHODCALLTYPE *Redo )( 
            IAction * This,
            __RPC__in_opt IUnknown *pObject);
        
        HRESULT ( STDMETHODCALLTYPE *Abort )( 
            IAction * This,
            __RPC__in_opt IUnknown *pObject);
        
        HRESULT ( STDMETHODCALLTYPE *AddSibling )( 
            IAction * This,
            __RPC__in_opt IAction *pAction);
        
        HRESULT ( STDMETHODCALLTYPE *GetNextSibling )( 
            IAction * This,
            __RPC__deref_in_opt IAction **ppAction);
        
        HRESULT ( STDMETHODCALLTYPE *AddChild )( 
            IAction * This,
            __RPC__in_opt IAction *pAction);
        
        HRESULT ( STDMETHODCALLTYPE *GetFirstChild )( 
            IAction * This,
            __RPC__deref_in_opt IAction **ppAction);
        
        HRESULT ( STDMETHODCALLTYPE *CanMerge )( 
            IAction * This,
            __RPC__in_opt IAction *pAction);
        
        HRESULT ( STDMETHODCALLTYPE *Merge )( 
            IAction * This,
            __RPC__in_opt IAction *pAction);
        
        END_INTERFACE
    } IActionVtbl;

    interface IAction
    {
        CONST_VTBL struct IActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAction_GetName(This,bstrName,fLongName)	\
    ( (This)->lpVtbl -> GetName(This,bstrName,fLongName) ) 

#define IAction_GetSize(This,piSize)	\
    ( (This)->lpVtbl -> GetSize(This,piSize) ) 

#define IAction_Undo(This,pObject)	\
    ( (This)->lpVtbl -> Undo(This,pObject) ) 

#define IAction_Redo(This,pObject)	\
    ( (This)->lpVtbl -> Redo(This,pObject) ) 

#define IAction_Abort(This,pObject)	\
    ( (This)->lpVtbl -> Abort(This,pObject) ) 

#define IAction_AddSibling(This,pAction)	\
    ( (This)->lpVtbl -> AddSibling(This,pAction) ) 

#define IAction_GetNextSibling(This,ppAction)	\
    ( (This)->lpVtbl -> GetNextSibling(This,ppAction) ) 

#define IAction_AddChild(This,pAction)	\
    ( (This)->lpVtbl -> AddChild(This,pAction) ) 

#define IAction_GetFirstChild(This,ppAction)	\
    ( (This)->lpVtbl -> GetFirstChild(This,ppAction) ) 

#define IAction_CanMerge(This,pAction)	\
    ( (This)->lpVtbl -> CanMerge(This,pAction) ) 

#define IAction_Merge(This,pAction)	\
    ( (This)->lpVtbl -> Merge(This,pAction) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAction_INTERFACE_DEFINED__ */


#ifndef __IEnumActions_INTERFACE_DEFINED__
#define __IEnumActions_INTERFACE_DEFINED__

/* interface IEnumActions */
/* [object][uuid] */ 


EXTERN_C const IID IID_IEnumActions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7A6335C8-7884-11d0-A8A9-00A0C921A4D2")
    IEnumActions : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            ULONG celt,
            __RPC__deref_in_opt IAction **rgelt,
            __RPC__in ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            __RPC__deref_in_opt IEnumActions **ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumActionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumActions * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumActions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumActions * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumActions * This,
            ULONG celt,
            __RPC__deref_in_opt IAction **rgelt,
            __RPC__in ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumActions * This,
            ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumActions * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumActions * This,
            __RPC__deref_in_opt IEnumActions **ppenum);
        
        END_INTERFACE
    } IEnumActionsVtbl;

    interface IEnumActions
    {
        CONST_VTBL struct IEnumActionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumActions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumActions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumActions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumActions_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumActions_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumActions_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumActions_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumActions_INTERFACE_DEFINED__ */


#ifndef __IActionHistory_INTERFACE_DEFINED__
#define __IActionHistory_INTERFACE_DEFINED__

/* interface IActionHistory */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IActionHistory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8D5DE85B-7D42-11D0-A8AA-00A0C921A4D2")
    IActionHistory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RecordAction( 
            /* [in] */ __RPC__in_opt IAction *pAction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenAction( 
            /* [in] */ __RPC__in_opt IAction *pAction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseAction( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AbortAction( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CanUndo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CanRedo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Undo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Redo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumUndoActions( 
            __RPC__deref_in_opt IEnumActions **ppEnumUndoActions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumRedoActions( 
            __RPC__deref_in_opt IEnumActions **ppEnumRedoActions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IActionHistoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IActionHistory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IActionHistory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IActionHistory * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordAction )( 
            IActionHistory * This,
            /* [in] */ __RPC__in_opt IAction *pAction);
        
        HRESULT ( STDMETHODCALLTYPE *OpenAction )( 
            IActionHistory * This,
            /* [in] */ __RPC__in_opt IAction *pAction);
        
        HRESULT ( STDMETHODCALLTYPE *CloseAction )( 
            IActionHistory * This);
        
        HRESULT ( STDMETHODCALLTYPE *AbortAction )( 
            IActionHistory * This);
        
        HRESULT ( STDMETHODCALLTYPE *CanUndo )( 
            IActionHistory * This);
        
        HRESULT ( STDMETHODCALLTYPE *CanRedo )( 
            IActionHistory * This);
        
        HRESULT ( STDMETHODCALLTYPE *Undo )( 
            IActionHistory * This);
        
        HRESULT ( STDMETHODCALLTYPE *Redo )( 
            IActionHistory * This);
        
        HRESULT ( STDMETHODCALLTYPE *EnumUndoActions )( 
            IActionHistory * This,
            __RPC__deref_in_opt IEnumActions **ppEnumUndoActions);
        
        HRESULT ( STDMETHODCALLTYPE *EnumRedoActions )( 
            IActionHistory * This,
            __RPC__deref_in_opt IEnumActions **ppEnumRedoActions);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IActionHistory * This);
        
        END_INTERFACE
    } IActionHistoryVtbl;

    interface IActionHistory
    {
        CONST_VTBL struct IActionHistoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IActionHistory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IActionHistory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IActionHistory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IActionHistory_RecordAction(This,pAction)	\
    ( (This)->lpVtbl -> RecordAction(This,pAction) ) 

#define IActionHistory_OpenAction(This,pAction)	\
    ( (This)->lpVtbl -> OpenAction(This,pAction) ) 

#define IActionHistory_CloseAction(This)	\
    ( (This)->lpVtbl -> CloseAction(This) ) 

#define IActionHistory_AbortAction(This)	\
    ( (This)->lpVtbl -> AbortAction(This) ) 

#define IActionHistory_CanUndo(This)	\
    ( (This)->lpVtbl -> CanUndo(This) ) 

#define IActionHistory_CanRedo(This)	\
    ( (This)->lpVtbl -> CanRedo(This) ) 

#define IActionHistory_Undo(This)	\
    ( (This)->lpVtbl -> Undo(This) ) 

#define IActionHistory_Redo(This)	\
    ( (This)->lpVtbl -> Redo(This) ) 

#define IActionHistory_EnumUndoActions(This,ppEnumUndoActions)	\
    ( (This)->lpVtbl -> EnumUndoActions(This,ppEnumUndoActions) ) 

#define IActionHistory_EnumRedoActions(This,ppEnumRedoActions)	\
    ( (This)->lpVtbl -> EnumRedoActions(This,ppEnumRedoActions) ) 

#define IActionHistory_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IActionHistory_INTERFACE_DEFINED__ */



#ifndef __UNDOREDOLib_LIBRARY_DEFINED__
#define __UNDOREDOLib_LIBRARY_DEFINED__

/* library UNDOREDOLib */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_UNDOREDOLib;

EXTERN_C const CLSID CLSID_ActionHistory;

#ifdef __cplusplus

class DECLSPEC_UUID("F5E7E71F-1401-11d1-883B-0000F87579D2")
ActionHistory;
#endif
#endif /* __UNDOREDOLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\unipriv.h ===
// unipriv.h -- UniLib private internal header

#ifdef _MSC_VER
#pragma once
#endif

#ifndef __UNIPRIV_H__
#define __UNIPRIV_H__

#undef UASSERT

#ifdef FEATURE_PAL
#define __UBREAK__ DebugBreak();
#define UASSERT(exp) _ASSERTE(exp)
#else // FEATURE_PAL

#ifdef _DEBUG

#ifdef _X86_
// Avoid inline assembler in macros because it breaks lambdas; can be changed back when dev10 bug 658310 is fixed
// #define __UBREAK__ _asm { int 3 }
#define __UBREAK__ DebugBreak();
#else
#define __UBREAK__ DebugBreak();
#endif // _X86_

#define UASSERT(exp) do { if (!(exp)) __UBREAK__; } while (FALSE)

#else // _DEBUG

#define UASSERT(exp) do {} while (false)

#endif // _DEBUG

#endif // FEATURE_PAL

#endif // __UNIPRIV_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\textmgruuids.h ===
#pragma once

//                                                   new                                  old
#define uuid_lib_TextManagerInternal                70E2C621-E71B-4232-92B0-2738B9F24D0C //55426A36-808E-11d0-A8AA-00A0C921A4D2
#define uuid_IVsCompoundAction                      B414D071-87BA-411A-9780-33FC7D87D882 //7EA84F9F-CBE3-11d0-AE60-00C04FB68006
#define uuid_IVsCompoundActionEvents                29B88B8E-BC39-45AE-ACAB-0C670E49BCC2 //2AE670EA-CBE6-11d0-AE60-00C04FB68006
#define uuid_IVsAction                              15D2C32A-0770-4872-BB5F-EC21B0FA2436 //D8C8AB11-7D4A-11d0-A8AA-00A0C921A4D2
#define uuid_IVsTextEditorPropertyCategoryContainer A6078038-D578-4F32-B9B2-C83E1726454D //AE996CFE-AD53-4c1f-A84C-257808563397
#define uuid_IVsTextEditorPropertyContainer         7669CC95-4640-461C-8158-16F65265D77C //EF2F6382-FFCF-4289-BDB1-787DF98ABFD9
#define uuid_IVsCompletionSet                       0EF79249-B0BF-4CD0-A966-C4713546C3A5 //14309FF0-BBEC-11d0-A8D7-00A0C921A4D2
#define uuid_IVsTipWindow                           64C7FFC4-B9EE-4599-B130-FF9D890ECFD4 //14309FF1-BBEC-11d0-A8D7-00A0C921A4D2
#define uuid_IVsMethodTipWindow                     794767F6-538A-4CD3-B29E-6C76C79A7C9C //261A5570-C649-11d0-A8DF-00A0C921A4D2
#define uuid_IVsTextTipWindow                       A6ACCB2F-1E0D-458B-A878-D40EB89C1DF4 //05DD7651-130A-11d3-AFCB-00105A9991EF
#define uuid_IVsMethodData                          69D2811C-682C-4290-B92E-5DFB823DF24C //261A5571-C649-11d0-A8DF-00A0C921A4D2
#define uuid_IVsTextTipData                         90609097-17C8-40E8-8128-67194C7384B1 //05DD7653-130A-11d3-AFCB-00105A9991EF
#define uuid_IVsTextView                            BB23A14B-7C61-469A-9890-A95648CED5E6 //B5E23370-C309-11d0-A8DB-00A0C921A4D2
#define uuid_IVsThreadSafeTextView                  FEC3BF2A-7833-4777-AE74-5FFF86D6794E //51911664-911B-11d1-888C-0000F87579D2
#define uuid_IVsLayeredTextView                     60BD661B-133C-4B5C-A335-4B174C5A352F //86C20AA0-E309-11d2-AFBF-00105A9991EF
#define uuid_IVsTextViewFilter                      6B6F0B32-B88B-40F8-A8FE-97438C5BDBEF //DEE4DD21-9031-11d0-A8AC-00A0C921A4D2
#define uuid_IVsLanguageContextProvider             19404D57-F8E4-42F4-9255-B8F889B0C50C //E2BB6B9D-D149-422a-83B1-6454936B32D3
#define uuid_IVsTextMarkerContextProvider           F1671B6B-1090-4DFF-BBFD-133EB428BB6C //166C1772-16C2-447f-AF86-40BB94598276
#define uuid_IVsViewRangeClient                     30491A5B-A47E-4C9C-8204-18586648A277 //B6DC84F3-ED32-11d0-B185-00A0C90F2732
#define uuid_IVsTextViewEvents                      E1965DA9-E791-49E2-9F9D-ED766D885967 //55426A34-808E-11d0-A8AA-00A0C921A4D2
#define uuid_IVsTextManager                         909F83E3-B3FC-4BBF-8820-64378744B39B //55426A30-808E-11d0-A8AA-00A0C921A4D2
#define uuid_IVsShortcutManager                     78201465-554E-4A7B-998F-443156FD71D3 //50D292F0-6F5E-11d1-8FBD-00A0C91BBFA2
#define uuid_IVsEnumTextBuffers                     74BBEE88-AB6E-4276-9BD2-27F566B8BBAF //C2713292-1E53-11d1-A934-00A0C921A4D2
#define uuid_IVsTextManagerEvents                   B3175059-C6AA-4519-86C3-1FE594D26C35 //55426A39-808E-11d0-A8AA-00A0C921A4D2
#define uuid_IVsTextSelectionAction                 CB49CF53-CCE9-4493-AD7A-3595F4C1CAF3 //0621B428-9C32-11d1-8892-0000F87579D2
#define uuid_IVsEnumTextViews                       DB685578-E6D4-4D5E-B714-FA344A509ABF //55426A32-808E-11d0-A8AA-00A0C921A4D2
#define uuid_IVsColorableItem                       56694A40-78D0-45DD-AB15-681BC207579C //21F7F163-7FBE-11d0-A8AA-00A0C921A4D2
#define uuid_IVsMergeableUIItem                     0AE3E015-2900-4DDF-87AF-CC522AE02284 //6F3E3146-B6B8-418f-B17C-FFC237C5E8E3
#define uuid_IVsProvideColorableItems               100B9A33-905C-4312-B2A2-452189F19AB9 //21F7F162-7FBE-11d0-A8AA-00A0C921A4D2
#define uuid_IVsColorizer                           6698EF11-FF17-441C-8C5D-BC24A339B37D //8E7B969E-E33D-11d0-A6D5-00C04FB67F6A
#define uuid_IVsEnumGUID                            C7A919CC-79C5-43D7-9B1E-B22E459F6557 //F87BB463-1C42-11d3-AFCD-00105A9991EF
#define uuid_IVsLanguageInfo                        11DDB920-52C7-4237-8610-9FE8BB11656D //8E7B969F-E33D-11d0-A6D5-00C04FB67F6A
#define uuid_IVsLanguageBlock                       BA303DF5-6283-4961-A4CE-76D4F0662D11 //E9BDA1A2-C207-11d2-9372-0080C747D9A0
#define uuid_IVsEnumBSTR                            A0A9C2B0-95A3-4819-ADA3-5BD9756BBD36 //C2713291-1E53-11d1-A934-00A0C921A4D2
#define uuid_IVsDebugName                           0BCE4F72-5889-4733-8605-413C28F5899F //E8452D00-3538-11d1-A943-00A0C921A4D2
#define uuid_IVsEnumDebugName                       9AD7EC03-4157-45B4-A999-403D6DB94578 //E8452D01-3538-11d1-A943-00A0C921A4D2
#define uuid_IVsLanguageDebugInfo                   F30A6A07-5340-4C0E-B312-5772558B0E63 //C2713290-1E53-11d1-A934-00A0C921A4D2
#define uuid_IVsTextBufferTempInit                  F229A34E-5880-4C20-94C3-717CF4BE1FDA //5FF7F238-41BD-11d2-88E9-0000F87579D2
#define uuid_IVsTextBuffer                          C08E5275-0D26-4DE9-8892-994024C23750 //8E7B96A0-E33D-11d0-A6D5-00C04FB67F6A
#define uuid_IVsTextLines                           ECF3E19D-149C-43AA-80C2-D0A46946DAA3 //8E7B96A1-E33D-11d0-A6D5-00C04FB67F6A
#define uuid_IVsTextColorState                      A7A64DE3-9B5C-47F0-ABAD-0AEDBD6CC057 //E2FE4BDC-18D3-11d1-8CB6-00C04FC2AB22
#define uuid_IVsTextLinesEvents                     598D7074-DC17-4162-9A2F-97DD4540C2DD //8E7B96A7-E33D-11d0-A6D5-00C04FB67F6A
#define uuid_IVsTextStream                          D3AF020B-A862-4D22-B373-20F1B30B7D9E //8E7B96A9-E33D-11d0-A6D5-00C04FB67F6A
#define uuid_IVsEnumStreamMarkers                   06E27359-6FEE-4CCC-9E8B-AFC20C0F662A //43B965F2-E430-11d0-A6D5-00C04FB67F6A
#define uuid_IVsEnumLineMarkers                     35E981F1-77EF-4343-AAA1-8741F38627A2 //43B965F3-E430-11d0-A6D5-00C04FB67F6A
#define uuid_IVsEnumLayerMarkers                    8F591607-2A26-4A9D-A6C5-147C2E51E895 //D6F09128-A5BE-11d2-8918-0000F87579D2
#define uuid_IVsTextMarker                          950122D9-1A51-43CA-8CED-B5D9E42DE1B5 //8E7B96A2-E33D-11d0-A6D5-00C04FB67F6A
#define uuid_IVsTextStreamMarker                    10D17872-91BA-4D65-80CC-E5FC3222AC82 //8E7B96A3-E33D-11d0-A6D5-00C04FB67F6A
#define uuid_IVsTextLineMarker                      31E2DCA7-CCFF-4E09-B433-17C739CF69AD //8E7B96A4-E33D-11d0-A6D5-00C04FB67F6A
#define uuid_IVsTextLayerMarker                     28C149D2-8FCB-4AB3-8584-9A2747F3F8FC //08A9A5EA-9608-11d2-8915-0000F87579D2
#define uuid_IVsTextMarkerType                      8C4A2B6E-6377-4C71-9940-FBA1BE6EDD6F //6E3A1620-9B54-11d0-B608-00A0C922E851
#define uuid_IVsTextMarkerColorSet                  93373F76-DF07-46DB-9415-1772069F60A4 //1C9693C0-619D-11d3-AFEB-00105A9991EF
#define uuid_IVsPackageDefinedTextMarkerType        C70F1528-1A66-403F-AD42-F60F9D413E05 //0E371220-5BF9-11d3-AFE8-00105A9991EF
#define uuid_IVsTextMarkerTypeProvider              7EF86CFD-D561-4BA5-9F38-C1BFF588E3AC //08CB82B1-5CBF-11d3-AFE8-00105A9991EF
#define uuid_IVsTextMarkerClient                    B1938F1B-D7A9-42F8-9960-D009027B3D2E //37E8F1C0-D6BF-11d0-B623-00A0C922E851
#define uuid_IVsMouseCursorProvider                 E32F08DB-6364-4276-8EA8-BAA6752F7807 //1244E494-78D0-4e7a-A2AF-E2CE72689CDD
#define uuid_IVsTextMarkerGlyphDropHandler          1E220776-3C20-46E9-A691-DE549C295E26 //F463910B-8173-4a1d-9F40-90D7D37DFD86
#define uuid_IVsTextTrackingPoint                   D6BF0A8A-3798-49C5-8806-648A635EACC8 //E8C15E90-0985-11d3-AFC6-00105A9991EF
#define uuid_IVsFullTextScanner                     BE93F7B1-F2FD-45B4-938D-1C66441CD421 //1CDE1D3E-9DBB-11d1-8892-0000F87579D2
#define uuid_IVsTextScanner                         EBD73923-C190-45C1-91C5-0BC61A8AAB14 //92DFFFA3-69CE-11d0-A8A9-00A0C921A4D2
#define uuid_IVsTextFind                            0BF16544-9CEC-40E1-80B1-E467E21B97FE //71E853C7-83AE-11d0-8C3C-00C04FC2AAE2
#define uuid_IVsTextBufferEvents                    44B0CAB3-6DF8-4931-9064-8FD18AFBC88E //8E7B96A5-E33D-11d0-A6D5-00C04FB67F6A
#define uuid_IVsTextBufferDataEvents                B7515E7A-70F0-44ED-96B7-FB7EB6450C10 //9F14D3CD-8EB3-11d1-87F9-00C04FB17663
#define uuid_IVsTextStreamEvents                    96FC7D44-BCDD-4F00-AE4D-07E26B2C0E52 //8E7B96A6-E33D-11d0-A6D5-00C04FB67F6A
#define uuid_IVsSplitPane                           721D4D8E-E987-4712-B878-88A0E7DBA117 //3315DFB1-940C-11d0-A8AE-00A0C921A4D2
#define uuid_IVsSplitter                            66280096-A495-48E9-8AF4-E758FDE1FCDC //3315DFB2-940C-11d0-A8AE-00A0C921A4D2
#define uuid_IVsSplitRoot                           5486C948-AF82-4DA5-A968-97F3ADA66670 //88E7CDA0-9685-11d0-A8AF-00A0C921A4D2
#define uuid_IVsCodeWindow                          8560CECD-DFAC-4F7B-9D2A-E6D9810F3443 //DAF27AC3-90DE-11d0-A8AD-00A0C921A4D2
#define uuid_IVsCodeWindowManager                   4758CB90-6110-4440-B577-2E3FC91E4B84 //91244BB0-9B25-11d0-A8B4-00A0C921A4D2
#define uuid_IVsDropdownBarClient                   AEE77BDD-05C8-4DE1-B48E-1B003F49ACB7 //452807CD-9BFA-11d0-8C3F-00C04FC2AAE2
#define uuid_IVsDropdownBar                         D7820968-4CF8-4760-B633-570282E5F66D //452807CB-9BFA-11d0-8C3F-00C04FC2AAE2
#define uuid_IVsDropdownBarManager                  5CCB1170-6527-4D88-BE3E-198F0EF5538D //66BA4472-7F57-11d2-8903-0000F87579D2
#define uuid_IVsButtonBarClient                     B59AF843-E075-496E-A00D-E8EEB3C748EB //6B05ABE1-CA89-11d2-AFAE-00105A9991EF
#define uuid_IVsButtonBar                           4C4095EC-0AF1-48B2-A900-DB496765EE9E //6B05ABE2-CA89-11d2-AFAE-00105A9991EF
#define uuid_IVsButtonBarManager                    B4D5B0A3-1945-4F5F-B5E1-4ADD352E78C1 //6B05ABE0-CA89-11d2-AFAE-00105A9991EF
#define uuid_IVsDefaultButtonBarImages              73B7DC00-F498-4ABD-AB79-D07AFD52F395 //B2715970-D02C-11d2-AFB4-00105A9991EF
#define uuid_IVsTextMacroHelper                     CAF8109F-B74B-429F-A11A-4944AADE9AB2 //AD6D4B78-AB26-11d2-BA99-00C04F79F802
#define uuid_IVsUserData                            978A8E17-4DF8-432A-9623-D530A26452BC //7194CA21-B4D8-11d0-A8CF-00A0C921A4D2
#define uuid_IVsUserDataEvents                      5E120D5E-9637-47D9-861C-92FA03683C6C //87F506A0-442B-11d1-B667-00A0C922E851
#define uuid_IVsUndoUnit                            A8C3D107-7EDF-4B1B-8A81-080AC91590E9 //D8F778D8-C636-11d0-8C63-00C04FC2AB22
#define uuid_IVsUndoTrackingEvents                  31024DD7-30E5-4C91-821D-218BDEADA18B //C476C5B7-C0F5-11d1-88AB-0000F87579D2
#define uuid_IVsChangeTrackingUndoManager           E33C4DCF-F50C-4356-8CD8-87A7F213337B //C476C5B6-C0F5-11d1-88AB-0000F87579D2
#define uuid_IVsLinkedUndoClient                    33452684-FAB0-4F76-B4E9-19EE0B96B4AD //121426B1-F455-11d2-AFC3-00105A9991EF
#define uuid_IVsLinkCapableUndoManager              F747D466-83CA-41D6-A0E8-3F78283D01E7 //121426B0-F455-11d2-AFC3-00105A9991EF
#define uuid_IVsLifetimeControlledObject            B3B2E5D4-F03E-4BB9-85F9-61B5F45AC498 //F37B06A0-6AD3-11d3-AFEF-00105A9991EF
#define uuid_IVsLinkedUndoTransactionManager        F65478CC-96F1-4BA9-9EF9-A575ACB96031 //16C3D9E0-F101-11d2-AFC3-00105A9991EF
#define uuid_IVsChangeClusterEvents                 E55C4E80-A01C-47E8-9E94-D664B94DF6CF //25613CC0-713A-11d3-AFF1-00105A9991EF
#define uuid_coclass_VsLocalUserData              /*74CAEA79-4323-4BED-92AA-2616F34D9E1E*/ 5130C7AB-85BB-11d3-B363-00C04F611E41
#define uuid_coclass_VsUserData                   /*FEF688A3-806D-4C9C-95ED-61C1978AA7DC*/ F5E7E718-1401-11d1-883B-0000F87579D2
#define uuid_coclass_VsCodeWindow                 /*DBA88C29-53DC-44EB-9473-BF40443CA6E8*/ F5E7E719-1401-11d1-883B-0000F87579D2
#define uuid_coclass_VsSplitRoot                  /*37D05D51-4BAF-4131-9CA9-BAFB7665D605*/ F5E7E71A-1401-11d1-883B-0000F87579D2
#define uuid_coclass_VsDropdownBar                /*D5DFBFF9-20A0-4DCD-9E6D-011674B6AA9B*/ 452807CC-9BFA-11d0-8C3F-00C04FC2AAE2
#define uuid_coclass_VsTextBuffer                 /*71EA6CE1-8CCC-4EAA-9410-AC8F31D6CA09*/ 8E7B96A8-E33D-11d0-A6D5-00C04FB67F6A
#define uuid_coclass_VsTextLineStorage            /*DE623C18-23F2-43D1-AEE9-201586866D16*/ D6513A91-ACC8-11d2-8919-0000F87579D2
#define uuid_coclass_VsTextManager                /*7DE6BD48-FB11-40C5-B751-82FD068C588B*/ F5E7E71D-1401-11d1-883B-0000F87579D2
#define uuid_coclass_VsTextView                   /*5A5F8B69-5E98-4258-BAF1-B1B0C0ACFAC4*/ F5E7E71E-1401-11d1-883B-0000F87579D2
#define uuid_coclass_VsTextPackage                /*F206C691-5E00-43C1-8542-FAD53E9DB912*/ F5E7E720-1401-11d1-883B-0000F87579D2
#define uuid_coclass_VsUndoPackage                /*57E96CF3-5C25-47AF-A63F-FD7D4EEE6375*/ 1D76B2E0-F11B-11d2-AFC3-00105A9991EF
#define uuid_coclass_VsUndoUnit                   /*2EB00388-25E0-4F50-99CE-E6623DB8D445*/ 9ADF33D9-8AAD-11d0-B606-00A0C922E851
#define uuid_coclass_VsMethodTipWindow            /*51679893-6260-48FB-883B-1B720D9E1855*/ 261A5572-C649-11d0-A8DF-00A0C921A4D2
#define uuid_coclass_VsTextTipWindow              /*219B3E87-37F2-4FC7-81FF-5AC8DAE9E560*/ 05DD7650-130A-11d3-AFCB-00105A9991EF
#define uuid_coclass_VsHiddenTextLayer            /*F88CF7D8-16EA-4BDB-8489-F8BB8D50BC41*/ 9B6AB22E-916A-11d2-8914-0000F87579D2
#define uuid_coclass_VsDefaultButtonBarImages     /*0A7CBDE4-9AE6-4344-B9FE-C909E3E4749C*/ B2715971-D02C-11d2-AFB4-00105A9991EF
#define uuid_coclass_VsSyntheticTextLayer         /*40E4E341-12FD-47E8-93A8-69E903032CF9*/ 42469677-FCFF-11d2-AFC4-00105A9991EF
#define uuid_coclass_VsDiffLayer                  /*7BAA8929-E209-4019-80E6-A7F522435710*/ 42469676-FCFF-11d2-AFC4-00105A9991EF
#define uuid_IVsDynamicTabProvider                  E82466CA-CF0E-4653-9E76-4D4C6C548DA2 //E0F6FDB8-A6CB-4c0f-9B71-BBA7BF1DE3D0
#define uuid_IVsLastChangeTimeProvider              35E88F96-047C-443C-A336-91BB8E2B40EC //419F606C-6141-11d1-8870-0000F87579D2
#define uuid_IVsEnumTextSpans                       0F343A75-968B-439E-81D6-0D066E53D28D //344431A0-BF9D-11d2-AFAC-00105A9991EF
#define uuid_IVsTextLayer                           0E145D3F-BEFC-4FD9-8714-B01AE89F4396 //E47F5802-055E-11d2-88D5-0000F87579D2
#define uuid_IVsSyntheticRegion                     B9C97AB2-2A37-4134-93E9-C3014F364AA8 //42469670-FCFF-11d2-AFC4-00105A9991EF
#define uuid_IVsEnumSyntheticRegions                67D9795E-CEA4-45FF-A3DA-055CF78F139A //42469678-FCFF-11d2-AFC4-00105A9991EF
#define uuid_IVsSyntheticTextClient                 1A8FBF86-5949-4E08-B9B6-F528AFB2DF9C //42469671-FCFF-11d2-AFC4-00105A9991EF
#define uuid_IVsSyntheticTextSession                0C71E351-5141-4B6F-B838-E212F0764875 //42469673-FCFF-11d2-AFC4-00105A9991EF
#define uuid_IVsSyntheticTextManager                2AB20832-0942-42F9-974F-4E65B85DABF3 //F87BB461-1C42-11d3-AFCD-00105A9991EF
#define uuid_IVsTextHidingLayerModule               1A705427-815C-4DB6-9B5C-6D45CDDDD0C4 //3670467E-6943-11d2-88FC-0000F87579D2
#define uuid_IVsHiddenRegion                        41E57382-63F9-48E6-9DBD-163D2B14D41B //D6F09129-A5BE-11d2-8918-0000F87579D2
#define uuid_IVsEnumHiddenRegions                   681B0FFF-30B4-4578-A911-B67FB049DAFA //D6F0912A-A5BE-11d2-8918-0000F87579D2
#define uuid_IVsHiddenTextClient                    CA3F0E7F-CFA6-444E-A3FE-7B3DFAD6E5E4 //9B6AB22D-916A-11d2-8914-0000F87579D2
#define uuid_IVsHiddenTextManager                   0E5B1E59-53A7-4636-ADBB-0B23C561E293 //D6513A92-ACC8-11d2-8919-0000F87579D2
#define uuid_IVsHiddenTextSession                   82B21BAE-664B-43E1-95B1-0302805FF7D3 //9B6AB22C-916A-11d2-8914-0000F87579D2
#define uuid_IVsOutliningSession                    9A436975-A86A-4459-A350-B05604B53309 //108EE420-25D7-11d3-AFD6-00105A9991EF
#define uuid_IVsOutliningCapableLanguage            B97D5C98-0507-40FA-BF89-CE4F73EBA651 //108EE421-25D7-11d3-AFD6-00105A9991EF
#define uuid_IVsTextLayerEvents                     CDE3413A-AD8E-495F-A74F-760547294A6F //43665C62-6844-11d2-B20E-0080C747D9A0
#define uuid_IVsTextStorage                         1ABAC269-8FB0-438E-8217-230AC6EB5766 //3E7361FC-2B2D-11d2-88E2-0000F87579D2
#define uuid_IVsPersistentTextImage                 C47FFD1E-D84E-43A5-8CBE-E4AD06BE795B //97923ED8-3C68-11d2-88E7-0000F87579D2
#define uuid_IVsTextStorageColorState               1F027F1F-9696-4816-B345-3CD7D3122A48 //6566F8DC-3DCF-11d2-88E8-0000F87579D2
#define uuid_IVsFinalTextChangeCommitEvents         CE62717C-797D-445F-BC89-1D02C54CCF96 //25613CC1-713A-11d3-AFF1-00105A9991EF
#define uuid_IVsPreliminaryTextChangeCommitEvents   7F57B996-148B-46DE-A261-B1A02E6D9DBA //28B2F290-7691-11d3-AFF1-00105A9991EF
#define uuid_IVsUndoRedoClusterWithCommitEvents     F98298D9-53C4-43DB-90D6-D1A3CA4B1849 //E5FDB28F-B7AD-4214-A0A5-9607B591C395
#define uuid_IVsTextImageEvents                     B1ADB4FC-562F-43E6-8A91-CD2CFFA2B377 //708BB450-C068-11d2-936C-D714766E8B50
#define uuid_IVsTextReplaceEvents                   CF9928D9-65AE-4319-A446-94ED5C45ECDE //A72940F5-DEEC-11d2-B25E-00C04F68FD04
#define uuid_IVsFormatFilterProvider                181237A7-4861-4D6C-8CA1-8A004BEA2E8E //EB875D10-3E02-11d3-B33D-00C04F611E41
#define uuid_IVsNavigableLocationResolver           82D04B51-1626-43AA-B57F-9B23D4280333 //66087711-941A-4853-A003-B6052F971DA3
#define uuid_IVsLanguageTextOps                     518020A6-8D59-4C80-9AAE-015AB9DCC3DE //5230519F-3D3A-44ff-AA72-B7BD91A08EFC
#define uuid_IVsLanguageClipboardOps                2ED7B280-B372-415E-862D-D7D9AEAFCD10 //A0798412-B7F9-4548-8F38-F1CBBC4096DE
#define uuid_IVsQueryLineChangeCommit               72E67329-8765-4586-8B15-0B445E6F3B57 //25602B80-40FD-47e9-A4CD-3A1CB192A62B
#define uuid_IVsCodeWindowEvents                    26ACC7FD-C665-426B-B120-E96762C5DD1A //2F0B62F6-6A48-4dcf-A6DC-2480995B53BC
#define uuid_IVsFileBackup                          7B32BDF9-89D3-4574-B6AC-F2EEE9DEAB18 //485F2BE5-8B02-4228-9C43-DB0752063250
// new interfaces
#define uuid_IVsCommitGestureSink                   957970B0-71E1-11d3-AFF1-00105A9991EF
#define uuid_IVsCompoundViewChange                  B5C14FF1-8431-458c-BEBC-34C6925D1976
#define uuid_IVsEditorGoBackLocations               714FFF37-5CDC-424a-BCB4-CA50800524F1
#define uuid_IVsEnumIndependentViews                B9040F95-DADB-443a-A3C3-1C442F1BDA72
#define uuid_IVsBufferExtraFiles                    66EE1DDE-6336-4a1e-9C99-D2864285ABA6
#define uuid_IVsTextManager2                        072A28FD-1AF3-48af-9C85-C79404DBA30C
#define uuid_lib_TextManagerInternal2               8C3074FC-7AAA-4eae-A9F1-862A288AAD8B
#define uuid_IVsTextViewEx                          EAF1EA5B-EB6D-4852-9D87-666E09BC4BEE
#define uuid_IVsCodeWindowEx                        186F17A5-7270-4bc5-A8DE-72F4A0E49647
#define uuid_IVsTextManagerEvents2                  4697E418-183E-414e-9173-E5FBF27692A9
#define uuid_lib_TextFind2                          A40DB83F-F90F-4bbd-8676-2D668A83877F
#define uuid_IVsFindTarget2                         DE311250-1F14-430e-B896-EFBDDD8ABB3E
#define uuid_IVsAutoOutliningClient                 5151882E-58E1-4856-BFE8-4F17A30BE839
#define uuid_IVsLineAttributes                      BBB6EAEA-4835-4263-BEDB-2705607803CA
#define uuid_IVsTextLineMarkerEx                    1C31EE6E-FC66-4fc8-8CC5-6A4134369F4E
#define uuid_IVsTextMarkerClientEx                  BA48A96D-40E9-4723-BDD8-B99072A1A426
#define uuid_IVsDropdownBarClientEx                 F74462E6-2E8E-477c-BA7D-F03D336DCB36
#define uuid_IVsHiddenTextClientEx                  225F2F59-39CF-4ae3-A08E-44CF751DE700
#define uuid_IVsHiddenTextSessionEx                 A43C0083-755F-4385-9574-4C14BFFC4344
#define uuid_IVsHiddenRegionEx                      FA54DAC7-23D3-4c27-B46E-0D2591E5CF0A
#define uuid_IVsAtomicTextProvider                  29CDD341-0F95-42f2-B71C-75BC51A7EB72
#define uuid_IVsTextMarkerClientAdvanced            C4B874D3-1491-4f13-8B9E-17249EC4902B
#define uuid_IVsCompletionSetEx                     3F710016-58D5-4887-AD76-936D1A45A588
#define uuid_IVsSmartTagData                        8C2A8A68-8844-4e55-B0A1-805B4DA0DEB2
#define uuid_IVsSmartTagTipWindow                   E2DECE2A-3A77-4fd3-A4B2-FA5EC4EA41D9
#define uuid_coclass_VsSmartTagTipWindow            5A46C6DE-1FE4-43b8-8E1E-598AE65F184A
#define uuid_IVsLanguageClipboardOpsEx              E36E3541-45D6-4ad8-B5AF-DDCB3E02CF3F
#define uuid_IVsLanguageDragDropOps                 B3F95731-540E-4f1c-B6D9-1A7FF6DEC782
#define uuid_IVsMethodDataEx                        28ABE611-DCB8-4684-9793-105C92839AAB
#define uuid_lib_TextLayer                          04D1B4DC-41F4-415d-B2B2-045C14DDA954
#define uuid_IVsLanguageDebugInfo2                  F1AF0080-C965-4E73-8763-3C6309707D59
#define uuid_IVsFileExtensionMappingEvents          D1ABEDEB-5163-4235-ADE6-17EFAA3A5549
#define uuid_IVsCompletionSetBuilder                CB570E9B-7B88-4159-9819-6F7E71EFFA95
#define uuid_IVsBoyerMooreTable                     2BB5789A-6DF0-4285-8A20-5BB08B7C4B80
#define uuid_IVsDualEncodingTextImage               A2004C8D-1B5C-4129-BB13-AA899DFE3F53
#define uuid_IVsExpansion                           798CC43B-7714-4dc1-925A-47863C24630D
#define uuid_IVsExpansionClient                     9DD0F39A-9502-4068-93B7-B6ADAB33ECD8
#define uuid_IVsExpansionFunction                   563011A2-1611-48ed-B3B1-189060064F66
#define uuid_IVsExpansionSession                    3DFA7603-3B51-4484-81CD-FF1470123C7C
#define uuid_IVsExpansionEnumeration                341E80BE-5B26-4dee-A111-32A8373D1B51
#define uuid_IVsExpansionManager                    CA09E5EA-FEE7-4b52-AFE6-8EA2EC53F681
#define uuid_coclass_VsExpansionManager             4970C2BC-AF33-4a73-A34F-18B0584C40E4
#define uuid_IVsColorizer2                          868A4381-537A-4d61-803C-301819CE2C2F
#define uuid_IVsMethodTipWindow2                    E9E55E72-13BC-4362-B80A-A2EB33A75809
#define uuid_IVsIntellisenseOptions                 592346B2-C79C-4d3f-885A-3DA61899EE4B
#define uuid_IVsExternalCompletionSet               373A9399-FDF5-4f64-8866-E14B7F2CFFF7
#define uuid_IVsExpansionIntellisenseHost           DEF59D57-46FE-4984-8CA4-5EFA3AC5D16E
#define uuid_coclass_VsExpansionPackage             0B680757-2C29-4531-80FA-535A5178AA98
#define uuid_IVsReportExternalErrors                96F0CABD-DB51-428f-A42D-C756057D35C2
#define uuid_IVsEnumExternalErrors                  20890A77-47C8-44dd-ABC7-3F0920C1B79A
#define uuid_IVsLanguageLineIndent                  E5A25E79-4A3C-4fcb-B375-196F5E8D1B2D
#define uuid_IVsQueryUndoUnit                       036FBE7A-9ABD-4894-B7F6-1ED3BD0EE247
#define uuid_IVsQueryUndoManager                    6ED9A1CD-E8FD-460a-8690-DD6E5E44B02D
#define uuid_IPersistFileCheckSum                   35355DA7-3EEA-452e-89F3-68344278F806
#define uuid_IVsExpansionEvents                     08107089-905F-47ab-989F-E365C5087402
#define uuid_IVsCodePageSelection                   49539BFE-84DD-4b7e-8A82-B9E1C7639940
#define uuid_IVsHiColorItem                         16C240B3-4773-43c2-932A-1E8DD2F6F0F8
#define uuid_IVsFindCancelDialog                    FE7C62A2-C121-4995-9EC1-561B80D2DA11
#define uuid_IVsFindCancelDialog2                   0C8E8E61-71AF-41dd-B213-B98D042F07FE
#define uuid_IVsTextBufferEx                        9F0823E9-544D-4fa0-9400-0D602C9A510E
#define uuid_IVsTextLines2                          181B18A3-A0E8-436B-8AEF-500043C7CC78
#define uuid_IVsTextLayer2                          1FE22AB1-40CA-45A0-BD56-7E65FA3B774C
#define uuid_IVsTextImage2                          F86209FE-6BAA-40DC-AA5D-6C9E83B032B9
#define uuid_IVsTextStorage2                        92FE8718-09DF-4615-9BC8-492E67EEB1AB
#define uuid_IVsInsertionUI                         BB73A6E1-B824-42a1-9AB1-2F254386DFFC
#define uuid_IVsReadOnlyViewNotification            FC62B6C7-6E71-44c6-8DD8-016FD5952612
#define uuid_IVsOverrideTextViewAccessibilityState  805DB878-BC47-4149-862A-A12725DBC434
#define uuid_IVSCanCoordinatorClipTextSpan          215564F6-7007-4826-9384-9ED0E962DE27
#define uuid_lib_TextManager90                      2BC84229-60A2-4b66-AA20-2C99411991C1
#define uuid_IVsLanguageDebugInfoRemap              7E3FAAE7-F89E-448b-A5EB-C7D73E0685F5
#define uuid_IVsHiddenColorableItemInTextEditorCategory FAE9C935-0DA2-476b-AD3C-D73FB69432D7
#define uuid_lib_TextManager91                      7D6B8D49-D31F-4bf0-B3B2-EAC1B2ABC36C
#define uuid_lib_TextManager100                     38D4AFE9-E961-49F7-B986-27807A84ADA7
#define uuid_IVsMethodTipWindow3                    5C17E526-0F7B-40FC-8E94-E12ADC618A02
#define uuid_IVsTextTipWindow2                      085F0AB4-5518-4898-8D4A-48E4D3E177DD
#define uuid_IVsSmartTagTipWindow2                  4C5B474B-B539-4A60-9819-82A5BED76C60
#define uuid_SVsFindManager                         912CA552-54A3-4CCA-8F50-DBCF322FB870
#define uuid_IVsFindManager                         53BE8AC6-1975-4240-8F60-367665A7E525
#define uuid_IVsHiddenTextSessionEx2                A40043F7-0865-4322-9308-32133314AD6C
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\venuscmddef.h ===
//-----------------------------------------------------------------------------
//
//    Microsoft Visual Web Developer
//
//    Microsoft Confidential
//    Copyright 1997-2005 Microsoft Corporation.    All Rights Reserved.
//
//    File:    VenusCmdDef.h
//    Area:    Visual Web Developer Commands
//
//-----------------------------------------------------------------------------

#ifndef _VENUSCMDDEF_H_
#define _VENUSCMDDEF_H_

// Internal use mostly
#define icmdCheckout                        15000
#define icmdPartialParse                    15001
#define icmdFullParse                       15002
#define icmdDoIdle                          15003
#define icmdShowValidationErrors            15004

#define icmdGenerateServerCode              15008
#define icmdEnsureCodeGenerationPending     15009
#define icmdEnsureServerCodeReady           15010
#define icmdIsServerCodeReady               15011

#define icmdEnsureReferencesReady           15012

#define icmdGenerateControlSchemas          15013
#define icmdEnsureControlSchemasReady       15014

#define icmdGenerateServerEventHandler      15015
#define icmdGenerateClientEventHandler      15016
#define icmdGeneratePageEventHandler        15017
#define icmdGenerateDocumentEventHandler    15018

#define icmdSyncViews                       15023
#define icmdSyncFromView                    15024

#define icmdIsControlSchemasReady           15025
#ifdef DEFINE_GUID
// guid for HTM Editor group IDs   {D7E8C5E1-BDB8-11d0-9C88-0000F8040A53}
DEFINE_GUID(CMDSETID_HtmEdGrp,
0xd7e8c5e1, 0xbdb8, 0x11d0, 0x9c, 0x88, 0x0, 0x0, 0xf8, 0x4, 0xa, 0x53);

// GUID for Server Form Designer
DEFINE_GUID(CMDSETID_WebForms,
            0x29aab322, 0x2365, 0x11d3, 0x82, 0x2f, 0x0, 0x60, 0x97, 0xde, 0x50, 0xf5);
#endif // DEFINE_GUID

#endif // _VENUSCMDDEF_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\unicase.h ===
// unicase.h - Unicode letter case
//-----------------------------------------------------------------
// Copyright 1998-2000 Microsoft Corporation.  All Rights Reserved.
//
// June 1, 1998
//
//-----------------------------------------------------------------
#ifdef _MSC_VER
#pragma once
#endif

#ifndef __UNICASE_H__
#define __UNICASE_H__

WCHAR   WINAPI  UpperCase (WCHAR c);
WCHAR   WINAPI  LowerCase (WCHAR c);
PWSTR   WINAPI  UpperCaseStr   (_Inout_opt_z_ PWSTR pSrc); // Returns ptr to 0 terminator
PWSTR   WINAPI  LowerCaseStr   (_Inout_opt_z_ PWSTR pSrc); // Returns ptr to 0 terminator

WCHAR   WINAPI  FileSystemUpperCase (WCHAR c);
WCHAR   WINAPI  FileSystemLowerCase (WCHAR c);

//
// To{Upper|Lower}Case - Convert buffer to Upper/Lower case.
// pSrc -- Source string
// pDst -- Destination buffer
// cch  -- For zero-terminated mode, pass -1. pDst assumed to be large enough.
//         Otherwise pass maximum number of characters to convert into pDst
//         including the zero terminator. Conversion always stops at a 0 char
//         in pSrc.
// Returns: pointer to END of pDst
//
PWSTR   WINAPI  ToUpperCase    (_In_opt_z_ _In_count_(cch) PCWSTR pSrc, _Out_z_cap_(cch) PWSTR pDst, size_t cch);
PWSTR   WINAPI  ToLowerCase    (_In_opt_z_ _In_count_(cch) PCWSTR pSrc, _Out_z_cap_(cch) PWSTR pDst, size_t cch);

//
// To{Upper|Lower}Case - Convert buffer to Upper/Lower case in place.
// pBuffer -- String to {upper|lower} case.
// Returns: pointer to BEGINNING of pBuffer.
//
PWSTR   WINAPI  ToUpperCaseInPlace    (_Inout_opt_z_ PWSTR pBuffer); 
PWSTR   WINAPI  ToLowerCaseInPlace    (_Inout_opt_z_ PWSTR pBuffer);

//
// Compare[No]Case[N][Prepared]
//
// The szA and/or szB params may be NULL.
//
// *Prepared variations assume that szA is prepared according to 
// LowerCaseStr or ToLowerCase.
//
// Returns:
//      -1  A < B
//       0  A == B
//       1  A > B
//
int     WINAPI  CompareCase            (_In_opt_z_ PCWSTR szA, _In_opt_z_ PCWSTR szB);
int     WINAPI  CompareNoCase          (_In_opt_z_ PCWSTR szA, _In_opt_z_ PCWSTR szB);
int     WINAPI  CompareCaseN           (_In_opt_count_(cch) PCWSTR szA, _In_opt_count_(cch) PCWSTR szB, size_t cch);
int     WINAPI  CompareNoCaseN         (_In_opt_count_(cch) PCWSTR szA, _In_opt_count_(cch) PCWSTR szB, size_t cch);
int     WINAPI  CompareNoCasePrepared  (_In_opt_z_ PCWSTR szA, _In_opt_z_ PCWSTR szB);
int     WINAPI  CompareNoCaseNPrepared (_In_opt_z_ _In_count_(cch) PCWSTR szA, _In_opt_z_ PCWSTR szB, size_t cch);

//
// CompareString32[NoCase]
//
// String comparision using Win32 CompareString().  Operates on
// the user default locale.  This is just a convenience wrapper
// to make CompareString() appear like wcscmp().  
// szA and szB cannot be NULL.  
//
// Returns:   
//      -1 if A < B
//       0 if A == B
//       1 if A > B
//
int     WINAPI  CompareString32          (_In_opt_z_ PCWSTR szA, _In_opt_z_ PCWSTR szB);
int     WINAPI  CompareString32NoCase    (_In_opt_z_ PCWSTR szA, _In_opt_z_ PCWSTR szB);

//
// CompareFilenames
//
// String comparision for two strings which are filenames or
// extensions.  This is a wrapper around CompareNoCase[N].  
// szA and/or szB can be NULL. 
//
// Returns:   
//      -1 if A < B
//       0 if A == B
//       1 if A > B
//
int     WINAPI  CompareFilenames         (_In_opt_z_ PCWSTR szA, _In_opt_z_ PCWSTR szB);
int     WINAPI  CompareFilenamesN        (_In_opt_count_(cch) PCWSTR szA, _In_opt_count_(cch) PCWSTR szB, size_t cch);
int     WINAPI  CompareFilenamesForSort  (_In_opt_z_ PCWSTR szA, _In_opt_z_ PCWSTR szB);

//
// FilenameTo{Upper|Lower}CaseInPlace - Convert filename to Upper/Lower case in place.
// pBuffer -- Filename to {upper|lower} case.
// Returns: pointer to BEGINNING of pBuffer.
//
PWSTR   WINAPI  FilenameToUpperCaseInPlace    (_Inout_opt_z_ PWSTR pBuffer); 
PWSTR   WINAPI  FilenameToLowerCaseInPlace    (_Inout_opt_z_ PWSTR pBuffer);

//
// StrStrNoCase[prepared] - Find <pattern> within <text>
//
// StrStrNoCasePrepared assumes that <pattern> is prepared 
// according to LowerCaseStr or ToLowerCase.
//
// For case-sensitive, you can use the CRT's wcsstr from wchar.h.
//
PCWSTR  WINAPI  StrStrNoCase           (_In_opt_z_ PCWSTR text, _In_opt_z_ PCWSTR pattern);
PCWSTR  WINAPI  StrStrNoCasePrepared   (_In_opt_z_ PCWSTR text, _In_opt_z_ PCWSTR pattern);
PCWSTR  WINAPI  StrStrNoCaseN          (_In_opt_count_(cch) PCWSTR text, size_t cch, _In_opt_z_ PCWSTR pattern);

// VS7:32377  non-const variants
inline PWSTR WINAPI  StrStrNoCase           (_In_opt_z_ PWSTR text, _In_opt_z_ PCWSTR pattern){return const_cast<PWSTR>(StrStrNoCase (const_cast<PCWSTR>(text), pattern));}
inline PWSTR WINAPI  StrStrNoCasePrepared   (_In_opt_z_ PWSTR text, _In_opt_z_ PCWSTR pattern){return const_cast<PWSTR>(StrStrNoCasePrepared (const_cast<PCWSTR>(text), pattern));}

WCHAR   WINAPI  TitleCaseForUpperCase (WCHAR ch);
BOOL    WINAPI  ExcludeTitleCase      (WCHAR ch);

//----------------------------------------------------------------
// CopyCase  - Copy the letter case of one string to another.
// Changes the case of text in pDst to match the case of the text
// in pSrc. Can be used to implement "Keep Case"-type feature in 
// Find/Replace.
PWSTR WINAPI CopyCase (_In_z_ PCWSTR pSrc, _Inout_z_ PWSTR pDst);

//
// QCompare[No]Case - qsort WCHAR ptr array functions
//
// qsort(arr, cel, sizeof(PCWSTR), QCompareCase);
//
int __cdecl QCompareCase           (const void * pvA, const void * pvB);
int __cdecl QCompareNoCase         (const void * pvA, const void * pvB);

//
// BCompare[No]Case[Prepared] - bsearch WCHAR ptr array
//
// PCWSTR pszKey = L"Find this";
// PCWSTR psz = bsearch(pszKey, arr, cel, sizeof(PCWSTR), BCompareCase);
//
// BCompareNoCasePrepared assumes pvKey is prepared according to 
// LowerCaseStr or ToLowerCase.
//
int __cdecl BCompareCase           (const void * pvKey, const void * pvEl);
int __cdecl BCompareNoCase         (const void * pvKey, const void * pvEl);
int __cdecl BCompareNoCasePrepared (const void * pvKey, const void * pvEl);

#include "unipriv.h"

// PHarring: Performance optimization for LowerCase most common case
WCHAR WINAPI LowerCaseComplete(WCHAR ch);

// Deal with the most frequent cases first for performance
// To get the best performance out of this, compile with /Ot (optimize for speed)
inline WCHAR WINAPI LowerCase(WCHAR ch)
{
    if (ch <  L'A')
    {
        return ch;
    }
    
    // For upper-case A-Z, convert to 'a'-'z' (constant offset)
    if( ch <= L'Z' )
    {
        return ch + (L'a' - L'A');
    }

    // For chars less than 0x00c0 (Latin Capital Letter A With Grave)
    // leave them as-is (already lower-case)
    if( ch < 0x00c0 )
    {
        return ch;
    }

    // For everything else, do the full test
    return LowerCaseComplete(ch);
}

/////////////////////////////////////////////////////////////////
// Title case
//

//---------------------------------------------------------------
// TitleCaseForUpperCase
//
// When you have determined that a character is initial and have 
// the Uppercase form, this function substitutes another character 
// that is better for Titlecase than the Uppercase char, otherwise
// it passes the character through.
//
inline WCHAR WINAPI TitleCaseForUpperCase(WCHAR ch)
{
    UASSERT(ch == UpperCase(ch)); // Call this function only with uppercase form!
    
    // probably not
    if (ch < 0x01c4 || ch > 0x01f1)
        return ch;

    // 01C4;LATIN CAPITAL LETTER DZ WITH CARON -> 01C5;LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON
    // 01C7;LATIN CAPITAL LETTER LJ -> 01C8;LATIN CAPITAL LETTER L WITH SMALL LETTER J
    // 01CA;LATIN CAPITAL LETTER NJ -> 01CB;LATIN CAPITAL LETTER N WITH SMALL LETTER J
    // 01F1;LATIN CAPITAL LETTER DZ -> 01F2;LATIN CAPITAL LETTER D WITH SMALL LETTER Z
    //
    // Unicode nicely places all these adjacent with the Titlecase code point 
    // between the Upper and Lower code points.
    if ((0x01C4 == ch) || (0x01C7 == ch) || (0x01CA == ch) || (0x01F1 == ch))
        ch++; 

    return ch;
}

//---------------------------------------------------------------
// ExcludeTitleCase
//
// For a character with a mapping to Uppercase, excludes that 
// character from mapping to Titlecase.
//
// These are all Greek technical symbols that have Uppercase 
// equivalents, but not for Titlecase use.
//
// Pass this function the original, unmapped char -- not the Upppercase char
//
inline BOOL WINAPI ExcludeTitleCase(WCHAR ch)
{
    // probably not
    if ((ch < 0x3D0) || (ch > 0x03F1))
        return FALSE;

    // In the absence of frequency data to determine an optimal 
    // test ordering, use an ordering with strictly humorous value.
    return ((ch == 0x03D1) || // GREEK THETA SYMBOL   // this one I've actually used back in college...
            (ch == 0x03D5) || // GREEK PHI SYMBOL     // to the
            (ch == 0x03D0) || // GREEK BETA SYMBOL    //    head of
            (ch == 0x03F0) || // GREEK KAPPA SYMBOL   //       the class
            (ch == 0x03F1) || // GREEK RHO SYMBOL     // rho your boat downstream
            (ch == 0x03D6)    // GREEK PI SYMBOL      // dessert comes last (I'd have it first, but it's an odd flavor of pi)
        );
}

#endif // __UNICASE_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\venusids.h ===
//--------------------------------------------------------------------------
// Microsoft Visual Studio
//
// Copyright (c) 1998 - 2003 Microsoft Corporation Inc.
// All rights reserved
//
//
// venusids.h
// Venus command table ids
//---------------------------------------------------------------------------
//NOTE: billhie. CTC compiler cannot handle #pragma once (it issues a warning)
#ifndef __VENUSIDS_H__
#define __VENUSIDS_H__

#include "venuscmddef.h"

//----------------------------------------------------------------------------
//
// GUID Identifiers
//
// Define CommandSet GUIDs in two ways - C compiler and CTC compiler.
// ** MAKE UPDATES TO BOTH GUID DECLS BELOW **
//----------------------------------------------------------------------------
#ifdef DEFINE_GUID

//guidDirPkgGrpId
// {5ADFC620-064F-40ec-88D1-F3F4F01EFC6F}
//guidDirPkgCmdId
// {C7547851-4E3A-4e5b-9173-FA6E9C8BD82C}
DEFINE_GUID(guidVenusCmdId, 
0xc7547851, 0x4e3a, 0x4e5b, 0x91, 0x73, 0xfa, 0x6e, 0x9c, 0x8b, 0xd8, 0x2c);

// {883D561D-1199-49f3-A19E-78B5ADE9C6C1}
DEFINE_GUID(guidVenusStartPageCmdId, 
0x883d561d, 0x1199, 0x49f3, 0xa1, 0x9e, 0x78, 0xb5, 0xad, 0xe9, 0xc6, 0xc1);

//{9685C4E9-4D67-4a43-BC3E-CF405F9DAC05}
DEFINE_GUID(guidSilverlightCmdId, 
0x9685C4E9, 0x4D67, 0x4a43, 0xBC, 0x3E, 0xCF, 0x40, 0x5F, 0x9D, 0xAC, 0x05);

// XML editor guid
//{FA3CD31E-987B-443A-9B81-186104E8DAC1}
DEFINE_GUID(guidXmlEditor, 0XFA3CD31E, 0X987B, 0X443A, 0X9B, 0X81, 0X18, 0X61, 0X04, 0XE8, 0XDA, 0XC1);

#else

// {39C9C826-8EF8-4079-8C95-428F5B1C323F} Used by VenusMenu.ctc
#define CLSID_WebProjectPackage { 0x39c9c826, 0x8ef8, 0x4079, { 0x8c, 0x95, 0x42, 0x8f, 0x5b, 0x1c, 0x32, 0x3f}}

// {5BE15F81-5A3C-11d2-BF19-00C04F79EFBC}
#define guidVenusCmdId {0xc7547851, 0x4e3a, 0x4e5b, { 0x91, 0x73, 0xfa, 0x6e, 0x9c, 0x8b, 0xd8, 0x2c}}

// {883D561D-1199-49f3-A19E-78B5ADE9C6C1}
#define guidVenusStartPageCmdId { 0x883d561d, 0x1199, 0x49f3, { 0xa1, 0x9e, 0x78, 0xb5, 0xad, 0xe9, 0xc6, 0xc1 } }

//{9685C4E9-4D67-4a43-BC3E-CF405F9DAC05}
#define guidSilverlightCmdId { 0x9685C4E9, 0x4D67, 0x4a43, { 0xBC, 0x3E, 0xCF, 0x40, 0x5F, 0x9D, 0xAC, 0x05 }}

// XML editor guid
//{FA3CD31E-987B-443A-9B81-186104E8DAC1}
#define guidXmlEditor { 0XFA3CD31E, 0X987B, 0X443A, { 0X9B, 0X81, 0X18, 0X61, 0X04, 0XE8, 0XDA, 0XC1 }};

// {69021D88-2F43-46E0-8A43-7F00F5B24176}
#define guidDeploymentImages { 0x69021d88, 0x2f43, 0x46e0, { 0x8a, 0x43, 0x7f, 0x0, 0xf5, 0xb2, 0x41, 0x76 } }


#endif

//---------------------------------------------------------------------------
// Comand Table Version
//---------------------------------------------------------------------------
#define COMMANDTABLE_VERSION		1

// web package menus
#define IDM_VENUS_CSCD_ADDWEB      6
#define IDM_VENUS_WEB              8
#define IDM_VENUS_CSCD_ADDFOLDER   9
#define IDM_VENUS_CTXT_ADDREFERENCE 10
#define IDM_VENUS_CTXT_ITEMWEBREFERENCE 11

// "Add Web" Menu Groups
#define IDG_VENUS_ADDWEB_CASCADE          25
#define IDG_VENUS_ADDFOLDER               26
#define IDG_VENUS_CTX_REFERENCE           27
#define IDG_VENUS_PACKAGE                 30
#define IDG_VENUS_CTXT_PACKAGE            31

//Command IDs
#define icmdNewWeb                      0x002B
#define icmdOpenExistingWeb             0x002C
#define icmdAddNewWeb                   0x002D
#define icmdAddExistingWeb              0x002E
#define icmdValidatePage                0x002F
#define icmdOpenSubWeb                  0x0032
#define icmdAddAppAssemblyFolder        0x0034
#define icmdAddAppCodeFolder            0x0035
#define icmdAddAppGlobalResourcesFolder 0x0036
#define icmdAddAppLocalResourcesFolder  0x0037
#define icmdAddAppWebReferencesFolder   0x0038
#define icmdAddAppDataFolder            0x0039
#define icmdAddAppBrowsersFolder        0x0040
#define icmdAddAppThemesFolder          0x0041
#define icmdRunFxCop                    0x0042
#define icmdFxCopConfig                 0x0043
#define icmdBuildLicenseDll             0x0044
#define icmdUpdateReference             0x0045
#define icmdRemoveWebReference          0x0046
#define icmdCreatePackage               0x0050
#define icmdCleanPackage                0x0051
#define icmdContextCreatePackage               0x0052
#define icmdContextCleanPackage                0x0053
#define icmdPackageSettings                0x0054
#define icmdContextPackageSettings                0x0055

// "Web" Menu Groups - Start at 0x100 - they share the same menu guid with 
// commands "guidVenusCmdId"
#define IDG_VS_BUILD_VAILIDATION        0x0100
#define IDG_VENUS_CTX_SUBWEB            0x0101
#define IDG_CTX_REFERENCE               0x0102
#define IDG_CTX_PUBLISH                 0x0103
#define IDG_CTX_BUILD                   0x0104
#define IDG_VENUS_RUN_FXCOP             0x0105
#define IDG_VENUS_RUN_FXCOP_CTXT_PROJ   0x0106
#define IDG_VENUS_CTX_ITEM_WEBREFERENCE  0x0107
#define IDG_VENUS_CTXT_CONFIG_TRANSFORM 0x0108


// Start Page commands (introduced in Whidbey, some re-used in Orcas)
// *** These are referenced in Web.vssettings and WebExpress.vssettings 
// do not change the numbers without updating that file as well!
#define cmdidStartPageCreatePersonalWebSite		0x5000
#define cmdidStartPageCreateWebSite				0x5001
#define cmdidStartPageCreateWebService			0x5002
#define cmdidStartPageStarterKit				0x5003
#define cmdidStartPageCommunity					0x5004
#define cmdidStartPageIntroduction				0x5005
#define cmdidStartPageGuidedTour				0x5006
#define cmdidStartPageWhatsNew					0x5007
#define cmdidStartPageHowDoI					0x5008

// Silverlight commmands
#define cmdidSLOpenInBlend          100
#define cmdidSLAddJScriptCode       101

// Orcas Start Page commands for VWDExpress and other SKUs 
// *** These are referenced in WebExpress.vssettings 
// do not change the numbers without updating that file as well!

#define cmdidVWDStartPageVideoFeatureTour                0x5009
#define cmdidVWDStartPageLearnWebDevelopment             0x500A
#define cmdidVWDStartPageWhatsNew                        0x500B
#define cmdidVWDStartPageBeginnerDeveloperLearningCenter 0x500C
#define cmdidVWDStartPageASPNETDownloads                 0x500D
#define cmdidVWDStartPageASPNETForums                    0x500E
#define cmdidVWDStartPageASPNETCommunitySite             0x500F
#define cmdidVWDStartPageCreateYourFirstWebSite          0x5010
#define cmdidVWDStartPageExplore3rdPartyExtensions       0x5011

// Silverlight defined command id's (from silverlightmenuids.h)
#define cmdAddSilverlightLink          102

#define CreatePackageImage 1
#define PackageSettingsImage 2

#endif
// End of venusids.h
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\vbapkg.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for vbapkg.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __vbapkg_h__
#define __vbapkg_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IVsVba_FWD_DEFINED__
#define __IVsVba_FWD_DEFINED__
typedef interface IVsVba IVsVba;
#endif 	/* __IVsVba_FWD_DEFINED__ */


#ifndef __IVsMacros_FWD_DEFINED__
#define __IVsMacros_FWD_DEFINED__
typedef interface IVsMacros IVsMacros;
#endif 	/* __IVsMacros_FWD_DEFINED__ */


#ifndef __IVsMacroRecorder_FWD_DEFINED__
#define __IVsMacroRecorder_FWD_DEFINED__
typedef interface IVsMacroRecorder IVsMacroRecorder;
#endif 	/* __IVsMacroRecorder_FWD_DEFINED__ */


#ifndef __VsVbaPackage_FWD_DEFINED__
#define __VsVbaPackage_FWD_DEFINED__

#ifdef __cplusplus
typedef class VsVbaPackage VsVbaPackage;
#else
typedef struct VsVbaPackage VsVbaPackage;
#endif /* __cplusplus */

#endif 	/* __VsVbaPackage_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "vsshell.h"

#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __VsVbaPackageLib_LIBRARY_DEFINED__
#define __VsVbaPackageLib_LIBRARY_DEFINED__

/* library VsVbaPackageLib */
/* [helpstring][version][uuid] */ 

const GUID GUID_Mode_Recorder = { 0x85a70471, 0x270a, 0x11d2, {0x88, 0xf9, 0x0, 0x60, 0x8, 0x31, 0x96, 0xc6} };
const GUID GUID_Macro = { 0x23162ff2, 0x3c3f, 0x11d2, {0x89, 0xa, 0x0, 0x60, 0x8, 0x31, 0x96, 0xc6} };
const GUID guidVsVbaPkg = { 0xa659f1b3, 0xad34, 0x11d1, {0xab, 0xad, 0x0, 0x80, 0xc7, 0xb8, 0x9c, 0x95} };
const GUID GUID_MacroProject = { 0x23162ff1, 0x3c3f, 0x11d2, {0x89, 0xa, 0x0, 0x60, 0x8, 0x31, 0x96, 0xc6} };
#define SID_SVsVba IID_IVsVba
#define SID_SVsMacros IID_IVsMacros
typedef 
enum _VSRECORDMODE
    {	VSRECORDMODE_ABSOLUTE	= 1,
	VSRECORDMODE_RELATIVE	= 2
    } 	VSRECORDMODE;

#define SID_SVsMacroRecorder IID_IVsMacroRecorder

EXTERN_C const IID LIBID_VsVbaPackageLib;

#ifndef __IVsVba_INTERFACE_DEFINED__
#define __IVsVba_INTERFACE_DEFINED__

/* interface IVsVba */
/* [object][unique][helpstring][uuid] */ 


EXTERN_C const IID IID_IVsVba;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A659F1B2-AD34-11d1-ABAD-0080C7B89C95")
    IVsVba : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ShowVBA( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVbaUnk( 
            __RPC__deref_in_opt IUnknown **pUnknown) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsVbaVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsVba * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsVba * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsVba * This);
        
        HRESULT ( STDMETHODCALLTYPE *ShowVBA )( 
            IVsVba * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetVbaUnk )( 
            IVsVba * This,
            __RPC__deref_in_opt IUnknown **pUnknown);
        
        END_INTERFACE
    } IVsVbaVtbl;

    interface IVsVba
    {
        CONST_VTBL struct IVsVbaVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsVba_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsVba_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsVba_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsVba_ShowVBA(This)	\
    ( (This)->lpVtbl -> ShowVBA(This) ) 

#define IVsVba_GetVbaUnk(This,pUnknown)	\
    ( (This)->lpVtbl -> GetVbaUnk(This,pUnknown) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsVba_INTERFACE_DEFINED__ */


#ifndef __IVsMacros_INTERFACE_DEFINED__
#define __IVsMacros_INTERFACE_DEFINED__

/* interface IVsMacros */
/* [object][unique][helpstring][uuid] */ 


EXTERN_C const IID IID_IVsMacros;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("55ED27C1-4CE7-11d2-890F-0060083196C6")
    IVsMacros : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMacroCommands( 
            /* [out] */ __RPC__deref_out_opt SAFEARRAY **ppsaMacroCanonicalNames) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsMacrosVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsMacros * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsMacros * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsMacros * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMacroCommands )( 
            IVsMacros * This,
            /* [out] */ __RPC__deref_out_opt SAFEARRAY **ppsaMacroCanonicalNames);
        
        END_INTERFACE
    } IVsMacrosVtbl;

    interface IVsMacros
    {
        CONST_VTBL struct IVsMacrosVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsMacros_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsMacros_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsMacros_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsMacros_GetMacroCommands(This,ppsaMacroCanonicalNames)	\
    ( (This)->lpVtbl -> GetMacroCommands(This,ppsaMacroCanonicalNames) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsMacros_INTERFACE_DEFINED__ */


#ifndef __IVsMacroRecorder_INTERFACE_DEFINED__
#define __IVsMacroRecorder_INTERFACE_DEFINED__

/* interface IVsMacroRecorder */
/* [object][unique][helpstring][uuid] */ 


EXTERN_C const IID IID_IVsMacroRecorder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("04BBF6A5-4697-11d2-890E-0060083196C6")
    IVsMacroRecorder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RecordStart( 
            /* [in] */ __RPC__in LPCOLESTR pszReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordLine( 
            /* [in] */ __RPC__in LPCOLESTR pszLine,
            /* [in] */ __RPC__in REFGUID rguidEmitter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLastEmitterId( 
            /* [out] */ __RPC__out GUID *pguidEmitter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceLine( 
            /* [in] */ __RPC__in LPCOLESTR pszLine,
            /* [in] */ __RPC__in REFGUID rguidEmitter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordCancel( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordPause( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RecordResume( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCodeEmittedFlag( 
            /* [in] */ BOOL fFlag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCodeEmittedFlag( 
            /* [out] */ __RPC__out BOOL *pfFlag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetKeyWord( 
            /* [in] */ UINT uiKeyWordId,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrKeyWord) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsValidIdentifier( 
            /* [in] */ __RPC__in LPCOLESTR pszIdentifier) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordMode( 
            /* [out] */ __RPC__out VSRECORDMODE *peRecordMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRecordMode( 
            /* [in] */ VSRECORDMODE eRecordMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStringLiteralExpression( 
            /* [in] */ __RPC__in LPCOLESTR pszStringValue,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrLiteralExpression) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ExecuteLine( 
            /* [in] */ __RPC__in LPCOLESTR pszLine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddTypeLibRef( 
            /* [in] */ __RPC__in REFGUID guidTypeLib,
            /* [in] */ UINT uVerMaj,
            /* [in] */ UINT uVerMin) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsMacroRecorderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsMacroRecorder * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsMacroRecorder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsMacroRecorder * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordStart )( 
            IVsMacroRecorder * This,
            /* [in] */ __RPC__in LPCOLESTR pszReserved);
        
        HRESULT ( STDMETHODCALLTYPE *RecordEnd )( 
            IVsMacroRecorder * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordLine )( 
            IVsMacroRecorder * This,
            /* [in] */ __RPC__in LPCOLESTR pszLine,
            /* [in] */ __RPC__in REFGUID rguidEmitter);
        
        HRESULT ( STDMETHODCALLTYPE *GetLastEmitterId )( 
            IVsMacroRecorder * This,
            /* [out] */ __RPC__out GUID *pguidEmitter);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceLine )( 
            IVsMacroRecorder * This,
            /* [in] */ __RPC__in LPCOLESTR pszLine,
            /* [in] */ __RPC__in REFGUID rguidEmitter);
        
        HRESULT ( STDMETHODCALLTYPE *RecordCancel )( 
            IVsMacroRecorder * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordPause )( 
            IVsMacroRecorder * This);
        
        HRESULT ( STDMETHODCALLTYPE *RecordResume )( 
            IVsMacroRecorder * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetCodeEmittedFlag )( 
            IVsMacroRecorder * This,
            /* [in] */ BOOL fFlag);
        
        HRESULT ( STDMETHODCALLTYPE *GetCodeEmittedFlag )( 
            IVsMacroRecorder * This,
            /* [out] */ __RPC__out BOOL *pfFlag);
        
        HRESULT ( STDMETHODCALLTYPE *GetKeyWord )( 
            IVsMacroRecorder * This,
            /* [in] */ UINT uiKeyWordId,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrKeyWord);
        
        HRESULT ( STDMETHODCALLTYPE *IsValidIdentifier )( 
            IVsMacroRecorder * This,
            /* [in] */ __RPC__in LPCOLESTR pszIdentifier);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordMode )( 
            IVsMacroRecorder * This,
            /* [out] */ __RPC__out VSRECORDMODE *peRecordMode);
        
        HRESULT ( STDMETHODCALLTYPE *SetRecordMode )( 
            IVsMacroRecorder * This,
            /* [in] */ VSRECORDMODE eRecordMode);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLiteralExpression )( 
            IVsMacroRecorder * This,
            /* [in] */ __RPC__in LPCOLESTR pszStringValue,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrLiteralExpression);
        
        HRESULT ( STDMETHODCALLTYPE *ExecuteLine )( 
            IVsMacroRecorder * This,
            /* [in] */ __RPC__in LPCOLESTR pszLine);
        
        HRESULT ( STDMETHODCALLTYPE *AddTypeLibRef )( 
            IVsMacroRecorder * This,
            /* [in] */ __RPC__in REFGUID guidTypeLib,
            /* [in] */ UINT uVerMaj,
            /* [in] */ UINT uVerMin);
        
        END_INTERFACE
    } IVsMacroRecorderVtbl;

    interface IVsMacroRecorder
    {
        CONST_VTBL struct IVsMacroRecorderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsMacroRecorder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsMacroRecorder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsMacroRecorder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsMacroRecorder_RecordStart(This,pszReserved)	\
    ( (This)->lpVtbl -> RecordStart(This,pszReserved) ) 

#define IVsMacroRecorder_RecordEnd(This)	\
    ( (This)->lpVtbl -> RecordEnd(This) ) 

#define IVsMacroRecorder_RecordLine(This,pszLine,rguidEmitter)	\
    ( (This)->lpVtbl -> RecordLine(This,pszLine,rguidEmitter) ) 

#define IVsMacroRecorder_GetLastEmitterId(This,pguidEmitter)	\
    ( (This)->lpVtbl -> GetLastEmitterId(This,pguidEmitter) ) 

#define IVsMacroRecorder_ReplaceLine(This,pszLine,rguidEmitter)	\
    ( (This)->lpVtbl -> ReplaceLine(This,pszLine,rguidEmitter) ) 

#define IVsMacroRecorder_RecordCancel(This)	\
    ( (This)->lpVtbl -> RecordCancel(This) ) 

#define IVsMacroRecorder_RecordPause(This)	\
    ( (This)->lpVtbl -> RecordPause(This) ) 

#define IVsMacroRecorder_RecordResume(This)	\
    ( (This)->lpVtbl -> RecordResume(This) ) 

#define IVsMacroRecorder_SetCodeEmittedFlag(This,fFlag)	\
    ( (This)->lpVtbl -> SetCodeEmittedFlag(This,fFlag) ) 

#define IVsMacroRecorder_GetCodeEmittedFlag(This,pfFlag)	\
    ( (This)->lpVtbl -> GetCodeEmittedFlag(This,pfFlag) ) 

#define IVsMacroRecorder_GetKeyWord(This,uiKeyWordId,pbstrKeyWord)	\
    ( (This)->lpVtbl -> GetKeyWord(This,uiKeyWordId,pbstrKeyWord) ) 

#define IVsMacroRecorder_IsValidIdentifier(This,pszIdentifier)	\
    ( (This)->lpVtbl -> IsValidIdentifier(This,pszIdentifier) ) 

#define IVsMacroRecorder_GetRecordMode(This,peRecordMode)	\
    ( (This)->lpVtbl -> GetRecordMode(This,peRecordMode) ) 

#define IVsMacroRecorder_SetRecordMode(This,eRecordMode)	\
    ( (This)->lpVtbl -> SetRecordMode(This,eRecordMode) ) 

#define IVsMacroRecorder_GetStringLiteralExpression(This,pszStringValue,pbstrLiteralExpression)	\
    ( (This)->lpVtbl -> GetStringLiteralExpression(This,pszStringValue,pbstrLiteralExpression) ) 

#define IVsMacroRecorder_ExecuteLine(This,pszLine)	\
    ( (This)->lpVtbl -> ExecuteLine(This,pszLine) ) 

#define IVsMacroRecorder_AddTypeLibRef(This,guidTypeLib,uVerMaj,uVerMin)	\
    ( (This)->lpVtbl -> AddTypeLibRef(This,guidTypeLib,uVerMaj,uVerMin) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsMacroRecorder_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_VsVbaPackage;

#ifdef __cplusplus

class DECLSPEC_UUID("A659F1B3-AD34-11d1-ABAD-0080C7B89C95")
VsVbaPackage;
#endif
#endif /* __VsVbaPackageLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\version.h ===
#define rmj 10
#define rmm 0
#define rup 30319
#define rpt 1
#define szVerName ""
#define szVerUser "VSBLD305"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\vsbrowse.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for vsbrowse.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __vsbrowse_h__
#define __vsbrowse_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IVsWebURLMRU_FWD_DEFINED__
#define __IVsWebURLMRU_FWD_DEFINED__
typedef interface IVsWebURLMRU IVsWebURLMRU;
#endif 	/* __IVsWebURLMRU_FWD_DEFINED__ */


#ifndef __IVsWebFavorites_FWD_DEFINED__
#define __IVsWebFavorites_FWD_DEFINED__
typedef interface IVsWebFavorites IVsWebFavorites;
#endif 	/* __IVsWebFavorites_FWD_DEFINED__ */


#ifndef __IVsFavoritesProvider_FWD_DEFINED__
#define __IVsFavoritesProvider_FWD_DEFINED__
typedef interface IVsFavoritesProvider IVsFavoritesProvider;
#endif 	/* __IVsFavoritesProvider_FWD_DEFINED__ */


#ifndef __IVsWebBrowserUser_FWD_DEFINED__
#define __IVsWebBrowserUser_FWD_DEFINED__
typedef interface IVsWebBrowserUser IVsWebBrowserUser;
#endif 	/* __IVsWebBrowserUser_FWD_DEFINED__ */


#ifndef __IVsWebBrowsingService_FWD_DEFINED__
#define __IVsWebBrowsingService_FWD_DEFINED__
typedef interface IVsWebBrowsingService IVsWebBrowsingService;
#endif 	/* __IVsWebBrowsingService_FWD_DEFINED__ */


#ifndef __IVsWebBrowser_FWD_DEFINED__
#define __IVsWebBrowser_FWD_DEFINED__
typedef interface IVsWebBrowser IVsWebBrowser;
#endif 	/* __IVsWebBrowser_FWD_DEFINED__ */


#ifndef __IVsWebPreviewAction_FWD_DEFINED__
#define __IVsWebPreviewAction_FWD_DEFINED__
typedef interface IVsWebPreviewAction IVsWebPreviewAction;
#endif 	/* __IVsWebPreviewAction_FWD_DEFINED__ */


#ifndef __IVsWebPreview_FWD_DEFINED__
#define __IVsWebPreview_FWD_DEFINED__
typedef interface IVsWebPreview IVsWebPreview;
#endif 	/* __IVsWebPreview_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "vsshell.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_vsbrowse_0000_0000 */
/* [local] */ 











extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0000_v0_0_s_ifspec;

#ifndef __IVsWebURLMRU_INTERFACE_DEFINED__
#define __IVsWebURLMRU_INTERFACE_DEFINED__

/* interface IVsWebURLMRU */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsWebURLMRU;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e8b06f3d-6d01-11d2-aa7d-00c04f990343")
    IVsWebURLMRU : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddURL( 
            /* [in] */ __RPC__in BSTR bstrURL) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetURLArray( 
            /* [retval][out] */ __RPC__out VARIANT *pvarURLs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsWebURLMRUVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsWebURLMRU * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsWebURLMRU * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsWebURLMRU * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddURL )( 
            IVsWebURLMRU * This,
            /* [in] */ __RPC__in BSTR bstrURL);
        
        HRESULT ( STDMETHODCALLTYPE *GetURLArray )( 
            IVsWebURLMRU * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarURLs);
        
        END_INTERFACE
    } IVsWebURLMRUVtbl;

    interface IVsWebURLMRU
    {
        CONST_VTBL struct IVsWebURLMRUVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsWebURLMRU_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsWebURLMRU_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsWebURLMRU_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsWebURLMRU_AddURL(This,bstrURL)	\
    ( (This)->lpVtbl -> AddURL(This,bstrURL) ) 

#define IVsWebURLMRU_GetURLArray(This,pvarURLs)	\
    ( (This)->lpVtbl -> GetURLArray(This,pvarURLs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsWebURLMRU_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_vsbrowse_0000_0001 */
/* [local] */ 

#define SID_SVsWebURLMRU IID_IVsWebURLMRU


extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0001_v0_0_s_ifspec;

#ifndef __IVsWebFavorites_INTERFACE_DEFINED__
#define __IVsWebFavorites_INTERFACE_DEFINED__

/* interface IVsWebFavorites */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsWebFavorites;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e8b06f4c-6d01-11d2-aa7d-00c04f990343")
    IVsWebFavorites : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddFavorite( 
            /* [in] */ __RPC__in LPCOLESTR lpszURL,
            /* [in] */ __RPC__in LPCOLESTR lpszName,
            /* [in] */ __RPC__in LPCOLESTR pszIconFileName,
            /* [in] */ int iIconIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrFileName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsWebFavoritesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsWebFavorites * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsWebFavorites * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsWebFavorites * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddFavorite )( 
            IVsWebFavorites * This,
            /* [in] */ __RPC__in LPCOLESTR lpszURL,
            /* [in] */ __RPC__in LPCOLESTR lpszName,
            /* [in] */ __RPC__in LPCOLESTR pszIconFileName,
            /* [in] */ int iIconIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrFileName);
        
        END_INTERFACE
    } IVsWebFavoritesVtbl;

    interface IVsWebFavorites
    {
        CONST_VTBL struct IVsWebFavoritesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsWebFavorites_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsWebFavorites_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsWebFavorites_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsWebFavorites_AddFavorite(This,lpszURL,lpszName,pszIconFileName,iIconIndex,pbstrFileName)	\
    ( (This)->lpVtbl -> AddFavorite(This,lpszURL,lpszName,pszIconFileName,iIconIndex,pbstrFileName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsWebFavorites_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_vsbrowse_0000_0002 */
/* [local] */ 

#define SID_SVsWebFavorites IID_IVsWebFavorites


extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0002_v0_0_s_ifspec;

#ifndef __IVsFavoritesProvider_INTERFACE_DEFINED__
#define __IVsFavoritesProvider_INTERFACE_DEFINED__

/* interface IVsFavoritesProvider */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsFavoritesProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e8b06f4d-6d01-11d2-aa7d-00c04f990343")
    IVsFavoritesProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Navigate( 
            /* [in] */ __RPC__in LPCOLESTR lpszURL,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsWindowFrame **ppFrame) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsFavoritesProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsFavoritesProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsFavoritesProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsFavoritesProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *Navigate )( 
            IVsFavoritesProvider * This,
            /* [in] */ __RPC__in LPCOLESTR lpszURL,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IVsWindowFrame **ppFrame);
        
        END_INTERFACE
    } IVsFavoritesProviderVtbl;

    interface IVsFavoritesProvider
    {
        CONST_VTBL struct IVsFavoritesProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsFavoritesProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsFavoritesProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsFavoritesProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsFavoritesProvider_Navigate(This,lpszURL,dwFlags,ppFrame)	\
    ( (This)->lpVtbl -> Navigate(This,lpszURL,dwFlags,ppFrame) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsFavoritesProvider_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_vsbrowse_0000_0003 */
/* [local] */ 


enum __VSWBCUSTOMURL
    {	VSWBCU_Home	= 0,
	VSWBCU_Search	= 1,
	VSWBCU_Credits	= 2
    } ;
typedef DWORD VSWBCUSTOMURL;



extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0003_v0_0_s_ifspec;

#ifndef __IVsWebBrowserUser_INTERFACE_DEFINED__
#define __IVsWebBrowserUser_INTERFACE_DEFINED__

/* interface IVsWebBrowserUser */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsWebBrowserUser;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e8b06f4b-6d01-11d2-aa7d-00c04f990343")
    IVsWebBrowserUser : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Disconnect( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCustomMenuInfo( 
            /* [in] */ __RPC__in_opt IUnknown *pUnkCmdReserved,
            /* [in] */ __RPC__in_opt IDispatch *pDispReserved,
            /* [in] */ DWORD dwType,
            /* [in] */ DWORD dwPosition,
            /* [out] */ __RPC__out GUID *pguidCmdGroup,
            /* [out] */ __RPC__out long *pdwMenuID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCmdUIGuid( 
            /* [out] */ __RPC__out GUID *pguidCmdUI) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExternalObject( 
            /* [out] */ __RPC__deref_out_opt IDispatch **ppDispObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TranslateUrl( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in LPCOLESTR lpszURLIn,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lppszURLOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FilterDataObject( 
            /* [in] */ __RPC__in_opt IDataObject *pDataObjIn,
            /* [out] */ __RPC__deref_out_opt IDataObject **ppDataObjOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDropTarget( 
            /* [in] */ __RPC__in_opt IDropTarget *pDropTgtIn,
            /* [out] */ __RPC__deref_out_opt IDropTarget **ppDropTgtOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TranslateAccelarator( 
            /* [in] */ __RPC__in LPMSG lpMsg) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCustomURL( 
            /* [in] */ VSWBCUSTOMURL nPage,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrURL) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOptionKeyPath( 
            /* [in] */ DWORD dwReserved,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Resize( 
            /* [in] */ int cx,
            /* [in] */ int cy) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsWebBrowserUserVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsWebBrowserUser * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsWebBrowserUser * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsWebBrowserUser * This);
        
        HRESULT ( STDMETHODCALLTYPE *Disconnect )( 
            IVsWebBrowserUser * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCustomMenuInfo )( 
            IVsWebBrowserUser * This,
            /* [in] */ __RPC__in_opt IUnknown *pUnkCmdReserved,
            /* [in] */ __RPC__in_opt IDispatch *pDispReserved,
            /* [in] */ DWORD dwType,
            /* [in] */ DWORD dwPosition,
            /* [out] */ __RPC__out GUID *pguidCmdGroup,
            /* [out] */ __RPC__out long *pdwMenuID);
        
        HRESULT ( STDMETHODCALLTYPE *GetCmdUIGuid )( 
            IVsWebBrowserUser * This,
            /* [out] */ __RPC__out GUID *pguidCmdUI);
        
        HRESULT ( STDMETHODCALLTYPE *GetExternalObject )( 
            IVsWebBrowserUser * This,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppDispObject);
        
        HRESULT ( STDMETHODCALLTYPE *TranslateUrl )( 
            IVsWebBrowserUser * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in LPCOLESTR lpszURLIn,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lppszURLOut);
        
        HRESULT ( STDMETHODCALLTYPE *FilterDataObject )( 
            IVsWebBrowserUser * This,
            /* [in] */ __RPC__in_opt IDataObject *pDataObjIn,
            /* [out] */ __RPC__deref_out_opt IDataObject **ppDataObjOut);
        
        HRESULT ( STDMETHODCALLTYPE *GetDropTarget )( 
            IVsWebBrowserUser * This,
            /* [in] */ __RPC__in_opt IDropTarget *pDropTgtIn,
            /* [out] */ __RPC__deref_out_opt IDropTarget **ppDropTgtOut);
        
        HRESULT ( STDMETHODCALLTYPE *TranslateAccelarator )( 
            IVsWebBrowserUser * This,
            /* [in] */ __RPC__in LPMSG lpMsg);
        
        HRESULT ( STDMETHODCALLTYPE *GetCustomURL )( 
            IVsWebBrowserUser * This,
            /* [in] */ VSWBCUSTOMURL nPage,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrURL);
        
        HRESULT ( STDMETHODCALLTYPE *GetOptionKeyPath )( 
            IVsWebBrowserUser * This,
            /* [in] */ DWORD dwReserved,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrKey);
        
        HRESULT ( STDMETHODCALLTYPE *Resize )( 
            IVsWebBrowserUser * This,
            /* [in] */ int cx,
            /* [in] */ int cy);
        
        END_INTERFACE
    } IVsWebBrowserUserVtbl;

    interface IVsWebBrowserUser
    {
        CONST_VTBL struct IVsWebBrowserUserVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsWebBrowserUser_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsWebBrowserUser_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsWebBrowserUser_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsWebBrowserUser_Disconnect(This)	\
    ( (This)->lpVtbl -> Disconnect(This) ) 

#define IVsWebBrowserUser_GetCustomMenuInfo(This,pUnkCmdReserved,pDispReserved,dwType,dwPosition,pguidCmdGroup,pdwMenuID)	\
    ( (This)->lpVtbl -> GetCustomMenuInfo(This,pUnkCmdReserved,pDispReserved,dwType,dwPosition,pguidCmdGroup,pdwMenuID) ) 

#define IVsWebBrowserUser_GetCmdUIGuid(This,pguidCmdUI)	\
    ( (This)->lpVtbl -> GetCmdUIGuid(This,pguidCmdUI) ) 

#define IVsWebBrowserUser_GetExternalObject(This,ppDispObject)	\
    ( (This)->lpVtbl -> GetExternalObject(This,ppDispObject) ) 

#define IVsWebBrowserUser_TranslateUrl(This,dwReserved,lpszURLIn,lppszURLOut)	\
    ( (This)->lpVtbl -> TranslateUrl(This,dwReserved,lpszURLIn,lppszURLOut) ) 

#define IVsWebBrowserUser_FilterDataObject(This,pDataObjIn,ppDataObjOut)	\
    ( (This)->lpVtbl -> FilterDataObject(This,pDataObjIn,ppDataObjOut) ) 

#define IVsWebBrowserUser_GetDropTarget(This,pDropTgtIn,ppDropTgtOut)	\
    ( (This)->lpVtbl -> GetDropTarget(This,pDropTgtIn,ppDropTgtOut) ) 

#define IVsWebBrowserUser_TranslateAccelarator(This,lpMsg)	\
    ( (This)->lpVtbl -> TranslateAccelarator(This,lpMsg) ) 

#define IVsWebBrowserUser_GetCustomURL(This,nPage,pbstrURL)	\
    ( (This)->lpVtbl -> GetCustomURL(This,nPage,pbstrURL) ) 

#define IVsWebBrowserUser_GetOptionKeyPath(This,dwReserved,pbstrKey)	\
    ( (This)->lpVtbl -> GetOptionKeyPath(This,dwReserved,pbstrKey) ) 

#define IVsWebBrowserUser_Resize(This,cx,cy)	\
    ( (This)->lpVtbl -> Resize(This,cx,cy) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsWebBrowserUser_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_vsbrowse_0000_0004 */
/* [local] */ 


enum __VSCREATEWEBBROWSER
    {	VSCWB_AutoShow	= 0x1,
	VSCWB_AddToMRU	= 0x2,
	VSCWB_ReuseExisting	= 0x10,
	VSCWB_ForceNew	= 0x20,
	VSCWB_FrameMdiChild	= 0,
	VSCWB_FrameFloat	= 0x40,
	VSCWB_FrameDock	= 0x80,
	VSCWB_StartHome	= 0x100,
	VSCWB_StartSearch	= 0x200,
	VSCWB_StartCustom	= 0x400,
	VSCWB_NoHistory	= 0x10000,
	VSCWB_NoReadCache	= 0x20000,
	VSCWB_NoWriteToCache	= 0x40000,
	VSCWB_AllowAutosearch	= 0x80000,
	VSCWB_OptionNoDocProps	= 0,
	VSCWB_OptionShowDocProps	= 0x1000000,
	VSCWB_OptionCustomDocProps	= 0x2000000,
	VSCWB_OptionDisableFind	= 0x4000000,
	VSCWB_OptionDisableDockable	= 0x8000000,
	VSCWB_OptionDisableStatusBar	= 0x10000000,
	VSCWB_StartURLMask	= 0xf00,
	VSCWB_NavOptionMask	= 0xf0000,
	VSCWB_OptionsMask	= 0xff000000
    } ;
typedef DWORD VSCREATEWEBBROWSER;


enum __VSWBNAVIGATEFLAGS
    {	VSNWB_ForceNew	= 0x1,
	VSNWB_AddToMRU	= 0x2,
	VSNWB_VsURLOnly	= 0x4,
	VSNWB_WebURLOnly	= 0x8
    } ;
typedef DWORD VSWBNAVIGATEFLAGS;



extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0004_v0_0_s_ifspec;

#ifndef __IVsWebBrowsingService_INTERFACE_DEFINED__
#define __IVsWebBrowsingService_INTERFACE_DEFINED__

/* interface IVsWebBrowsingService */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsWebBrowsingService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e8b06f51-6d01-11d2-aa7d-00c04f990343")
    IVsWebBrowsingService : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateWebBrowser( 
            /* [in] */ VSCREATEWEBBROWSER dwCreateFlags,
            /* [in] */ __RPC__in REFGUID rguidOwner,
            /* [in] */ __RPC__in LPCOLESTR lpszBaseCaption,
            /* [in] */ __RPC__in LPCOLESTR lpszStartURL,
            /* [in] */ __RPC__in_opt IVsWebBrowserUser *pUser,
            /* [out] */ __RPC__deref_out_opt IVsWebBrowser **ppBrowser,
            /* [out] */ __RPC__deref_out_opt IVsWindowFrame **ppFrame) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFirstWebBrowser( 
            /* [in] */ __RPC__in REFGUID rguidPersistenceSlot,
            /* [out] */ __RPC__deref_out_opt IVsWindowFrame **ppFrame,
            /* [out] */ __RPC__deref_out_opt IVsWebBrowser **ppBrowser) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWebBrowserEnum( 
            /* [in] */ __RPC__in REFGUID rguidPersistenceSlot,
            /* [out] */ __RPC__deref_out_opt IEnumWindowFrames **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateExternalWebBrowser( 
            /* [in] */ VSCREATEWEBBROWSER dwCreateFlags,
            /* [in] */ VSPREVIEWRESOLUTION dwResolution,
            /* [in] */ __RPC__in LPCOLESTR lpszURL) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateWebBrowserEx( 
            /* [in] */ VSCREATEWEBBROWSER dwCreateFlags,
            /* [in] */ __RPC__in REFGUID rguidPersistenceSlot,
            /* [in] */ DWORD dwId,
            /* [in] */ __RPC__in LPCOLESTR lpszBaseCaption,
            /* [in] */ __RPC__in LPCOLESTR lpszStartURL,
            /* [in] */ __RPC__in_opt IVsWebBrowserUser *pUser,
            /* [out] */ __RPC__deref_out_opt IVsWebBrowser **ppBrowser,
            /* [out] */ __RPC__deref_out_opt IVsWindowFrame **ppFrame) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Navigate( 
            /* [in] */ __RPC__in LPCOLESTR lpszURL,
            /* [in] */ VSWBNAVIGATEFLAGS dwNaviageFlags,
            /* [out] */ __RPC__deref_out_opt IVsWindowFrame **ppFrame) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsWebBrowsingServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsWebBrowsingService * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsWebBrowsingService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsWebBrowsingService * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateWebBrowser )( 
            IVsWebBrowsingService * This,
            /* [in] */ VSCREATEWEBBROWSER dwCreateFlags,
            /* [in] */ __RPC__in REFGUID rguidOwner,
            /* [in] */ __RPC__in LPCOLESTR lpszBaseCaption,
            /* [in] */ __RPC__in LPCOLESTR lpszStartURL,
            /* [in] */ __RPC__in_opt IVsWebBrowserUser *pUser,
            /* [out] */ __RPC__deref_out_opt IVsWebBrowser **ppBrowser,
            /* [out] */ __RPC__deref_out_opt IVsWindowFrame **ppFrame);
        
        HRESULT ( STDMETHODCALLTYPE *GetFirstWebBrowser )( 
            IVsWebBrowsingService * This,
            /* [in] */ __RPC__in REFGUID rguidPersistenceSlot,
            /* [out] */ __RPC__deref_out_opt IVsWindowFrame **ppFrame,
            /* [out] */ __RPC__deref_out_opt IVsWebBrowser **ppBrowser);
        
        HRESULT ( STDMETHODCALLTYPE *GetWebBrowserEnum )( 
            IVsWebBrowsingService * This,
            /* [in] */ __RPC__in REFGUID rguidPersistenceSlot,
            /* [out] */ __RPC__deref_out_opt IEnumWindowFrames **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *CreateExternalWebBrowser )( 
            IVsWebBrowsingService * This,
            /* [in] */ VSCREATEWEBBROWSER dwCreateFlags,
            /* [in] */ VSPREVIEWRESOLUTION dwResolution,
            /* [in] */ __RPC__in LPCOLESTR lpszURL);
        
        HRESULT ( STDMETHODCALLTYPE *CreateWebBrowserEx )( 
            IVsWebBrowsingService * This,
            /* [in] */ VSCREATEWEBBROWSER dwCreateFlags,
            /* [in] */ __RPC__in REFGUID rguidPersistenceSlot,
            /* [in] */ DWORD dwId,
            /* [in] */ __RPC__in LPCOLESTR lpszBaseCaption,
            /* [in] */ __RPC__in LPCOLESTR lpszStartURL,
            /* [in] */ __RPC__in_opt IVsWebBrowserUser *pUser,
            /* [out] */ __RPC__deref_out_opt IVsWebBrowser **ppBrowser,
            /* [out] */ __RPC__deref_out_opt IVsWindowFrame **ppFrame);
        
        HRESULT ( STDMETHODCALLTYPE *Navigate )( 
            IVsWebBrowsingService * This,
            /* [in] */ __RPC__in LPCOLESTR lpszURL,
            /* [in] */ VSWBNAVIGATEFLAGS dwNaviageFlags,
            /* [out] */ __RPC__deref_out_opt IVsWindowFrame **ppFrame);
        
        END_INTERFACE
    } IVsWebBrowsingServiceVtbl;

    interface IVsWebBrowsingService
    {
        CONST_VTBL struct IVsWebBrowsingServiceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsWebBrowsingService_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsWebBrowsingService_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsWebBrowsingService_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsWebBrowsingService_CreateWebBrowser(This,dwCreateFlags,rguidOwner,lpszBaseCaption,lpszStartURL,pUser,ppBrowser,ppFrame)	\
    ( (This)->lpVtbl -> CreateWebBrowser(This,dwCreateFlags,rguidOwner,lpszBaseCaption,lpszStartURL,pUser,ppBrowser,ppFrame) ) 

#define IVsWebBrowsingService_GetFirstWebBrowser(This,rguidPersistenceSlot,ppFrame,ppBrowser)	\
    ( (This)->lpVtbl -> GetFirstWebBrowser(This,rguidPersistenceSlot,ppFrame,ppBrowser) ) 

#define IVsWebBrowsingService_GetWebBrowserEnum(This,rguidPersistenceSlot,ppEnum)	\
    ( (This)->lpVtbl -> GetWebBrowserEnum(This,rguidPersistenceSlot,ppEnum) ) 

#define IVsWebBrowsingService_CreateExternalWebBrowser(This,dwCreateFlags,dwResolution,lpszURL)	\
    ( (This)->lpVtbl -> CreateExternalWebBrowser(This,dwCreateFlags,dwResolution,lpszURL) ) 

#define IVsWebBrowsingService_CreateWebBrowserEx(This,dwCreateFlags,rguidPersistenceSlot,dwId,lpszBaseCaption,lpszStartURL,pUser,ppBrowser,ppFrame)	\
    ( (This)->lpVtbl -> CreateWebBrowserEx(This,dwCreateFlags,rguidPersistenceSlot,dwId,lpszBaseCaption,lpszStartURL,pUser,ppBrowser,ppFrame) ) 

#define IVsWebBrowsingService_Navigate(This,lpszURL,dwNaviageFlags,ppFrame)	\
    ( (This)->lpVtbl -> Navigate(This,lpszURL,dwNaviageFlags,ppFrame) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsWebBrowsingService_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_vsbrowse_0000_0005 */
/* [local] */ 

#define SID_SVsWebBrowsingService IID_IVsWebBrowsingService

enum __VSWBREFRESHTYPE
    {	VSWBR_Normal	= 0,
	VSWBR_IfExpired	= 1,
	VSWBR_Completely	= 3
    } ;
typedef DWORD VSWBREFRESHTYPE;


enum __VSWBDOCINFOINDEX
    {	VSWBDI_DocDispatch	= 0,
	VSWBDI_DocName	= 1,
	VSWBDI_DocURL	= 2,
	VSWBDI_DocType	= 3,
	VSWBDI_DocStatusText	= 4,
	VSWBDI_DocBusyStatus	= 5,
	VSWBDI_DocReadyState	= 6,
	VSWBDI_DocSize	= 7,
	VSWBDI_DocLastCtxMenuPos	= 8
    } ;
typedef DWORD VSWBDOCINFOINDEX;



extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0005_v0_0_s_ifspec;

#ifndef __IVsWebBrowser_INTERFACE_DEFINED__
#define __IVsWebBrowser_INTERFACE_DEFINED__

/* interface IVsWebBrowser */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsWebBrowser;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e8b06f50-6d01-11d2-aa7d-00c04f990343")
    IVsWebBrowser : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Navigate( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in LPCOLESTR lpszURL) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NavigateEx( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in LPCOLESTR lpszURL,
            /* [in] */ __RPC__in VARIANT *pvarTargetFrame,
            /* [in] */ __RPC__in VARIANT *pvarPostData,
            /* [in] */ __RPC__in VARIANT *pvarHeaders) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Refresh( 
            /* [in] */ VSWBREFRESHTYPE dwRefreshType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDocumentInfo( 
            /* [in] */ VSWBDOCINFOINDEX dwInfoIndex,
            /* [out] */ __RPC__out VARIANT *pvarInfo) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsWebBrowserVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsWebBrowser * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsWebBrowser * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsWebBrowser * This);
        
        HRESULT ( STDMETHODCALLTYPE *Navigate )( 
            IVsWebBrowser * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in LPCOLESTR lpszURL);
        
        HRESULT ( STDMETHODCALLTYPE *NavigateEx )( 
            IVsWebBrowser * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in LPCOLESTR lpszURL,
            /* [in] */ __RPC__in VARIANT *pvarTargetFrame,
            /* [in] */ __RPC__in VARIANT *pvarPostData,
            /* [in] */ __RPC__in VARIANT *pvarHeaders);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IVsWebBrowser * This);
        
        HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            IVsWebBrowser * This,
            /* [in] */ VSWBREFRESHTYPE dwRefreshType);
        
        HRESULT ( STDMETHODCALLTYPE *GetDocumentInfo )( 
            IVsWebBrowser * This,
            /* [in] */ VSWBDOCINFOINDEX dwInfoIndex,
            /* [out] */ __RPC__out VARIANT *pvarInfo);
        
        END_INTERFACE
    } IVsWebBrowserVtbl;

    interface IVsWebBrowser
    {
        CONST_VTBL struct IVsWebBrowserVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsWebBrowser_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsWebBrowser_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsWebBrowser_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsWebBrowser_Navigate(This,dwFlags,lpszURL)	\
    ( (This)->lpVtbl -> Navigate(This,dwFlags,lpszURL) ) 

#define IVsWebBrowser_NavigateEx(This,dwFlags,lpszURL,pvarTargetFrame,pvarPostData,pvarHeaders)	\
    ( (This)->lpVtbl -> NavigateEx(This,dwFlags,lpszURL,pvarTargetFrame,pvarPostData,pvarHeaders) ) 

#define IVsWebBrowser_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IVsWebBrowser_Refresh(This,dwRefreshType)	\
    ( (This)->lpVtbl -> Refresh(This,dwRefreshType) ) 

#define IVsWebBrowser_GetDocumentInfo(This,dwInfoIndex,pvarInfo)	\
    ( (This)->lpVtbl -> GetDocumentInfo(This,dwInfoIndex,pvarInfo) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsWebBrowser_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_vsbrowse_0000_0006 */
/* [local] */ 


enum __VSURLZONE
    {	URLZONE_VSAPP	= URLZONE_USER_MIN
    } ;


extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0006_v0_0_s_ifspec;

#ifndef __IVsWebPreviewAction_INTERFACE_DEFINED__
#define __IVsWebPreviewAction_INTERFACE_DEFINED__

/* interface IVsWebPreviewAction */
/* [object][helpstring][version][uuid] */ 


EXTERN_C const IID IID_IVsWebPreviewAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9EC9BA56-B328-11d2-9A98-00C04F79EFC3")
    IVsWebPreviewAction : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnPreviewLoadStart( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnPreviewClose( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnPreviewLoaded( 
            /* [in] */ __RPC__in_opt IDispatch *pDispDocument) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsWebPreviewActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsWebPreviewAction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsWebPreviewAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsWebPreviewAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnPreviewLoadStart )( 
            IVsWebPreviewAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnPreviewClose )( 
            IVsWebPreviewAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnPreviewLoaded )( 
            IVsWebPreviewAction * This,
            /* [in] */ __RPC__in_opt IDispatch *pDispDocument);
        
        END_INTERFACE
    } IVsWebPreviewActionVtbl;

    interface IVsWebPreviewAction
    {
        CONST_VTBL struct IVsWebPreviewActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsWebPreviewAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsWebPreviewAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsWebPreviewAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsWebPreviewAction_OnPreviewLoadStart(This)	\
    ( (This)->lpVtbl -> OnPreviewLoadStart(This) ) 

#define IVsWebPreviewAction_OnPreviewClose(This)	\
    ( (This)->lpVtbl -> OnPreviewClose(This) ) 

#define IVsWebPreviewAction_OnPreviewLoaded(This,pDispDocument)	\
    ( (This)->lpVtbl -> OnPreviewLoaded(This,pDispDocument) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsWebPreviewAction_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_vsbrowse_0000_0007 */
/* [local] */ 


enum __VSWBPREVIEWOPTIONS
    {	VSWBP_FrameMdiChild	= VSCWB_FrameMdiChild,
	VSWBP_FrameFloat	= VSCWB_FrameFloat,
	VSWBP_FrameDock	= VSCWB_FrameDock
    } ;
typedef DWORD VSWBPREVIEWOPTIONS;



extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0007_v0_0_s_ifspec;

#ifndef __IVsWebPreview_INTERFACE_DEFINED__
#define __IVsWebPreview_INTERFACE_DEFINED__

/* interface IVsWebPreview */
/* [object][helpstring][version][uuid] */ 


EXTERN_C const IID IID_IVsWebPreview;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9EC9BA55-B328-11d2-9A98-00C04F79EFC3")
    IVsWebPreview : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PreviewURL( 
            /* [in] */ __RPC__in_opt IVsWebPreviewAction *pAction,
            /* [in] */ __RPC__in LPCOLESTR lpszURL) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PreviewURLEx( 
            /* [in] */ __RPC__in_opt IVsWebPreviewAction *pAction,
            /* [in] */ __RPC__in LPCOLESTR lpszURL,
            /* [in] */ VSWBPREVIEWOPTIONS opt,
            /* [in] */ int cx,
            /* [in] */ int cy) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ActivatePreview( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Resize( 
            /* [in] */ int cx,
            /* [in] */ int cy) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsWebPreviewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsWebPreview * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsWebPreview * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsWebPreview * This);
        
        HRESULT ( STDMETHODCALLTYPE *PreviewURL )( 
            IVsWebPreview * This,
            /* [in] */ __RPC__in_opt IVsWebPreviewAction *pAction,
            /* [in] */ __RPC__in LPCOLESTR lpszURL);
        
        HRESULT ( STDMETHODCALLTYPE *PreviewURLEx )( 
            IVsWebPreview * This,
            /* [in] */ __RPC__in_opt IVsWebPreviewAction *pAction,
            /* [in] */ __RPC__in LPCOLESTR lpszURL,
            /* [in] */ VSWBPREVIEWOPTIONS opt,
            /* [in] */ int cx,
            /* [in] */ int cy);
        
        HRESULT ( STDMETHODCALLTYPE *ActivatePreview )( 
            IVsWebPreview * This);
        
        HRESULT ( STDMETHODCALLTYPE *Resize )( 
            IVsWebPreview * This,
            /* [in] */ int cx,
            /* [in] */ int cy);
        
        END_INTERFACE
    } IVsWebPreviewVtbl;

    interface IVsWebPreview
    {
        CONST_VTBL struct IVsWebPreviewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsWebPreview_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsWebPreview_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsWebPreview_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsWebPreview_PreviewURL(This,pAction,lpszURL)	\
    ( (This)->lpVtbl -> PreviewURL(This,pAction,lpszURL) ) 

#define IVsWebPreview_PreviewURLEx(This,pAction,lpszURL,opt,cx,cy)	\
    ( (This)->lpVtbl -> PreviewURLEx(This,pAction,lpszURL,opt,cx,cy) ) 

#define IVsWebPreview_ActivatePreview(This)	\
    ( (This)->lpVtbl -> ActivatePreview(This) ) 

#define IVsWebPreview_Resize(This,cx,cy)	\
    ( (This)->lpVtbl -> Resize(This,cx,cy) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsWebPreview_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_vsbrowse_0000_0008 */
/* [local] */ 

#define SID_SVsWebPreview IID_IVsWebPreview


extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0008_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_vsbrowse_0000_0008_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

unsigned long             __RPC_USER  HWND_UserSize(     unsigned long *, unsigned long            , HWND * ); 
unsigned char * __RPC_USER  HWND_UserMarshal(  unsigned long *, unsigned char *, HWND * ); 
unsigned char * __RPC_USER  HWND_UserUnmarshal(unsigned long *, unsigned char *, HWND * ); 
void                      __RPC_USER  HWND_UserFree(     unsigned long *, HWND * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long *, unsigned long            , VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  unsigned long *, unsigned char *, VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(unsigned long *, unsigned char *, VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long *, VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\virtkeys.h ===
//////////////////////////////////////////////////////////////////////////////
//
//Copyright 1996-1997 Microsoft Corporation.  All Rights Reserved.
//
//File: VirtKeys.H
//
//Contents: Taken from winuser.h
//////////////////////////////////////////////////////////////////////////////


/*
 * Virtual Keys, Standard Set
 */
#define VK_LBUTTON        0x01
#define VK_RBUTTON        0x02
#define VK_CANCEL         0x03
#define VK_MBUTTON        0x04    /* NOT contiguous with L & RBUTTON */

#define VK_BACK           0x08
#define VK_TAB            0x09

#define VK_CLEAR          0x0C
#define VK_RETURN         0x0D

#define VK_SHIFT          0x10
#define VK_CONTROL        0x11
#define VK_MENU           0x12
#define VK_PAUSE          0x13
#define VK_CAPITAL        0x14


#define VK_ESCAPE         0x1B

#define VK_SPACE          0x20
#define VK_PRIOR          0x21
#define VK_NEXT           0x22
#define VK_END            0x23
#define VK_HOME           0x24
#define VK_LEFT           0x25
#define VK_UP             0x26
#define VK_RIGHT          0x27
#define VK_DOWN           0x28
#define VK_SELECT         0x29
#define VK_PRINT          0x2A
#define VK_EXECUTE        0x2B
#define VK_SNAPSHOT       0x2C
#define VK_INSERT         0x2D
#define VK_DELETE         0x2E
#define VK_HELP           0x2F

/* VK_0 thru VK_9 are the same as ASCII '0' thru '9' (0x30 - 0x39) */
/* VK_A thru VK_Z are the same as ASCII 'A' thru 'Z' (0x41 - 0x5A) */

#define VK_LWIN           0x5B
#define VK_RWIN           0x5C
#define VK_APPS           0x5D

#define VK_NUMPAD0        0x60
#define VK_NUMPAD1        0x61
#define VK_NUMPAD2        0x62
#define VK_NUMPAD3        0x63
#define VK_NUMPAD4        0x64
#define VK_NUMPAD5        0x65
#define VK_NUMPAD6        0x66
#define VK_NUMPAD7        0x67
#define VK_NUMPAD8        0x68
#define VK_NUMPAD9        0x69
#define VK_MULTIPLY       0x6A
#define VK_ADD            0x6B
#define VK_SEPARATOR      0x6C
#define VK_SUBTRACT       0x6D
#define VK_DECIMAL        0x6E
#define VK_DIVIDE         0x6F
#define VK_F1             0x70
#define VK_F2             0x71
#define VK_F3             0x72
#define VK_F4             0x73
#define VK_F5             0x74
#define VK_F6             0x75
#define VK_F7             0x76
#define VK_F8             0x77
#define VK_F9             0x78
#define VK_F10            0x79
#define VK_F11            0x7A
#define VK_F12            0x7B
#define VK_F13            0x7C
#define VK_F14            0x7D
#define VK_F15            0x7E
#define VK_F16            0x7F
#define VK_F17            0x80
#define VK_F18            0x81
#define VK_F19            0x82
#define VK_F20            0x83
#define VK_F21            0x84
#define VK_F22            0x85
#define VK_F23            0x86
#define VK_F24            0x87

#define VK_NUMLOCK        0x90
#define VK_SCROLL         0x91

/*
 * VK_L* & VK_R* - left and right Alt, Ctrl and Shift virtual keys.
 * Used only as parameters to GetAsyncKeyState() and GetKeyState().
 * No other API or message will distinguish left and right keys in this way.
 */
#define VK_LSHIFT         0xA0
#define VK_RSHIFT         0xA1
#define VK_LCONTROL       0xA2
#define VK_RCONTROL       0xA3
#define VK_LMENU          0xA4
#define VK_RMENU          0xA5

#define VK_OEM_1          0xBA   // ;: for USA
#define VK_OEM_5          0xDC   // |\ for USA
#define VK_OEM_PLUS       0xBB   // '+' any country
#define VK_OEM_COMMA      0xBC   // ',' any country
#define VK_OEM_MINUS      0xBD   // '-' any country
#define VK_OEM_PERIOD     0xBE   // '.' any country
#define VK_OEM_7          0xDE   // '" for USA

#define VK_PROCESSKEY     0xE5

#define VK_ATTN           0xF6
#define VK_CRSEL          0xF7
#define VK_EXSEL          0xF8
#define VK_EREOF          0xF9
#define VK_PLAY           0xFA
#define VK_ZOOM           0xFB
#define VK_NONAME         0xFC
#define VK_PA1            0xFD
#define VK_OEM_CLEAR      0xFE
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\VsDbgCmd.h ===
// PkgCmdID.h
// Command IDs used in defining command bars
//

#ifndef _VSDBGCMD_H_INCLUDED
#define _VSDBGCMD_H_INCLUDED

#define MULTIPLE_WATCH_WINDOWS 1

///////////////////////////////////////////////////////////////////////////////
// Menu IDs

// menus
#define IDM_DEBUG_MENU                     0x0401
#define IDM_DEBUG_WINDOWS                  0x0402
#define IDM_STEPINTOSPECIFIC               0x0403
#define IDM_STEP_UNIT                      0x0404
#define IDM_MEMORY_WINDOWS                 0x0405
#define IDM_BREAKPOINTS_WINDOW_COLUMN_LIST 0x0406
#define IDM_HIDDEN_COMMANDS                0x0407
#ifdef MULTIPLE_WATCH_WINDOWS
#define IDM_WATCH_WINDOWS                  0x0408
#endif
#define IDM_DEBUG_TOOLBAR_WINDOWS          0x0409
#define IDM_DEBUGGER_CONTEXT_MENUS         0x0410
#define IDM_EXCEPTIONS                     0x0411
#define IDM_BREAKPOINT_SUBMENU             0x0412
#define IDM_DISASM_BREAKPOINT_SUBMENU      0x0413
#define IDM_CALLSTACK_BREAKPOINT_SUBMENU   0x0414
#define IDM_BREAKPOINTS_WINDOW_NEW_LIST    0x0415
#define IDM_NEW_BREAKPOINT_SUBMENU         0x0416
#define IDM_MODULES_LOADSYMBOLS_SUBMENU    0x0417
#define IDM_CALLSTACK_LOADSYMBOLS_SUBMENU  0x0418
#define IDM_STEPINTOSPECIFIC_CONTEXT       0x0419


// toolbars
// NOTE: IDM_DEBUG_CONTEXT_TOOLBAR comes before IDM_DEBUG_TOOLBAR
// so that the Debug toolbar will appear to the left of the Debug Location toolbar.
// This uses the fact that the toolbar defined earlier go to the right when on the same line
// (see VS7 bug 295621)
#define IDM_DEBUG_CONTEXT_TOOLBAR       0x0420
#define IDM_DEBUG_TOOLBAR               0x0421
#define IDM_BREAKPOINTS_WINDOW_TOOLBAR  0x0422
#define IDM_DISASM_WINDOW_TOOLBAR       0x0423
#define IDM_ATTACHED_PROCS_TOOLBAR      0x0424

#define IDM_MEMORY_WINDOW_TOOLBAR       0x0430
#define IDM_MEMORY_WINDOW_TOOLBAR1      0x0431
#define IDM_MEMORY_WINDOW_TOOLBAR2      0x0432
#define IDM_MEMORY_WINDOW_TOOLBAR3      0x0433
#define IDM_MEMORY_WINDOW_TOOLBAR4      0x0434
#define IDM_BREAKPOINTS_WINDOW_SORT_LIST            0x0435
#define IDM_MODULES_SYMBOLINCLUDELIST_SUBMENU       0x0436
#define IDM_MODULES_SYMBOLEXCLUDELIST_SUBMENU       0x0437
#define IDM_CALLSTACK_SYMBOLINCLUDELIST_SUBMENU     0x0438
#define IDM_CALLSTACK_SYMBOLEXCLUDELIST_SUBMENU     0x0439

// context menus
#define IDM_WATCH_CONTEXT               0x0500
#define IDM_LOCALS_CONTEXT              0x0501
#define IDM_AUTOS_CONTEXT               0x0502
#define IDM_THREADS_CONTEXT             0x0503
#define IDM_CALLSTACK_CONTEXT           0x0504
#define IDM_DISASM_CONTEXT              0x0505
#define IDM_BREAKPOINTS_WINDOW_CONTEXT  0x0506
#define IDM_MEMORY_CONTEXT              0x0507
#define IDM_REGISTERS_CONTEXT           0x0508
#define IDM_MODULES_CONTEXT             0x0509
#define IDM_DATATIP_CONTEXT             0x050A
#define IDM_ATTACHED_PROCS_CONTEXT      0x050B
#define IDM_BREAKPOINT_CONTEXT          0x050C
#define IDM_CONSOLE_CONTEXT             0x050D
#define IDM_OUTPUT_CONTEXT              0x050E
#define IDM_SCRIPT_PROJECT_CONTEXT      0x050F
#define IDM_THREADTIP_CONTEXT           0x0510
#define IDM_THREAD_IP_MARKER_CONTEXT    0x0511
#define IDM_THREAD_IP_MARKERS_CONTEXT   0x0512
#define IDM_LOADSYMBOLS_CONTEXT         0x0513
#define IDM_SYMBOLINCLUDELIST_CONTEXT   0x0514
#define IDM_SYMBOLEXCLUDELIST_CONTEXT   0x0515
#define IDM_DEBUG_VS_CODEWIN_ADD_WATCH_MENU 0x0516

///////////////////////////////////////////////////////////////////////////////
// Menu Group IDs
#define IDG_DEBUG_MENU                      0x0001
#define IDG_DEBUG_WINDOWS_GENERAL           0x0002
#define IDG_DEBUG_TOOLBAR                   0x0003
#define IDG_EXECUTION                       0x0004
#define IDG_STEPPING                        0x0005
#define IDG_WATCH                           0x0006
#define IDG_BREAKPOINTS                     0x0007
#define IDG_HIDDEN_COMMANDS                 0x0008
#define IDG_WINDOWS                         0x0009
#define IDG_STEPINTOSPECIFIC                0x000A
#define IDG_VARIABLES                       0x000B
#define IDG_WATCH_EDIT                      0x000C
#define IDG_THREAD_CONTROL                  0x000F
#define IDG_DEBUG_DISPLAY                   0x0010
#define IDG_DEBUG_TOOLBAR_STEPPING          0x0011
#define IDG_DEBUGGER_CONTEXT_MENUS          0x0012
#define IDG_MEMORY_WINDOWS                  0x0013
#define IDG_DISASM_NAVIGATION               0x0014
#define IDG_DISASM_BREAKPOINTS              0x0015
#define IDG_DISASM_EXECUTION                0x0016
#define IDG_DISASM_DISPLAY                  0x0017
#define IDG_BREAKPOINTS_WINDOW_NEW          0x0018
#define IDG_BREAKPOINTS_WINDOW_DELETE       0x0019
#define IDG_BREAKPOINTS_WINDOW_ALL          0x001A
#define IDG_BREAKPOINTS_WINDOW_VIEW         0x001B
#define IDG_BREAKPOINTS_WINDOW_EDIT         0x001C
#define IDG_BREAKPOINTS_WINDOW_COLUMNS      0x001D
#define IDG_BREAKPOINTS_WINDOW_COLUMN_LIST  0x001E
#define IDG_BREAKPOINTS_WINDOW_NEW_LIST     0x001F
#define IDG_BREAKPOINTS_WINDOW_PROPERTIES_LIST 0x0020
#define IDG_NEW_BREAKPOINT_SUBMENU          0x0021
#define IDG_PROGRAM_TO_DEBUG                0x0024
#define IDG_DEBUG_TOOLBAR_WATCH             0x0025
#define IDG_DEBUG_VS_CODEWIN_ADD_WATCH_GROUP                0x0026
#define IDG_DEBUG_CONTEXT_TOOLBAR           0x0027
#define IDG_DISASM_WINDOW_TOOLBAR           0x0028
#define IDG_MEMORY_FORMAT                   0x0100
#define IDG_MEMORY_INT_FORMAT               0x0101
#define IDG_MEMORY_FLT_FORMAT               0x0102
#define IDG_MEMORY_TEXT                     0x0103
#define IDG_MEMORY_MISC                     0x0104
#define IDG_MEMORY_TOOLBAR                  0x0105
#define IDG_REGISTERS_GROUPS                0x0108
#define IDG_REGISTERS_EDIT                  0x0109
#define IDG_CUSTOMIZABLE_CONTEXT_MENU_COMMANDS 0x0110
#define IDG_CALLSTACK_COPY                  0x0111
#define IDG_CALLSTACK_NAVIGATE              0x0112
#define IDG_CALLSTACK_BREAKPOINTS           0x0113
#define IDG_CALLSTACK_DISPLAY               0x0114
#define IDG_CALLSTACK_OPTIONS               0x0115
#define IDG_DEBUG_WINDOWS_INSPECT           0x0116
#define IDG_DEBUG_WINDOWS_CONTEXT           0x0117
#define IDG_DEBUG_WINDOWS_DISASM            0x0118
#define IDG_CRASHDUMP                       0x0119
#define IDG_DEBUG_TOOLBAR_WINDOWS           0x011A
#define IDG_DEBUG_TOOLBAR_EXECUTION         0x011B
#define IDG_THREAD_COPY                     0x011C
#define IDG_TOOLS_DEBUG                     0x011D
#define IDG_STEP_UNIT                       0x011E
#ifdef MULTIPLE_WATCH_WINDOWS
#define IDG_WATCH_WINDOWS                   0x011F
#endif
#define IDG_CALLSTACK_SYMBOLS               0x0120
#define IDG_MODULES_COPY                    0x0121
#define IDG_MODULES_SYMBOLS                 0x0122
#define IDG_MODULES_DISPLAY                 0x0123
#define IDG_DATATIP_WATCH                   0x0124
#define IDG_DATATIP_VISIBILITY              0x0125
#define IDG_ATTACHED_PROCS_COPY             0x0126
#define IDG_ATTACHED_PROCS_EXECCNTRL        0x0127
#define IDG_ATTACHED_PROCS_ADDBP            0x0128
#define IDG_ATTACHED_PROCS_ATTACH           0x0129
#define IDG_ATTACHED_PROCS_COLUMNS          0x0130
#define IDG_ATTACHED_PROCS_DETACHONSTOP     0x0131
#define IDG_DEBUG_CONSOLE                   0x0132
#define IDG_MODULES_JMC                     0x0133
#define IDG_EXCEPTIONS_GENERAL              0x0134
#define IDG_EXCEPTIONS_SPECIFIC             0x0135
#define IDG_BREAKPOINT_CONTEXT_ADD_DELETE   0x0136
#define IDG_BREAKPOINT_CONTEXT_MODIFY       0x0137
#define IDG_ATTACHED_PROCS_STEPPING         0x0138
#define IDG_CONSOLE_CONTEXT                 0x0139
#define IDG_DATATIP_CLIPBOARD               0x013A
#define IDG_ATTACHED_PROCS_EXECCNTRL2       0x013B
#define IDG_OUTPUT_CONTEXT                  0x013C
#define IDG_SINGLEPROC_EXECUTION            0x013D
#define IDG_THREAD_FLAGGING	                0x013E
#define IDG_THREADTIP_WATCH                 0x013f
#define IDG_THREADTIP_CLIPBOARD             0x0140
#define IDG_THREAD_IP_MARKER_CONTEXT        0x0141
#define IDG_THREAD_IP_MARKERS_CONTEXT       0x0142
#define IDG_THREAD_IP_MARKERS_SWITCHCONTEXT 0x0143
#define IDG_THREAD_IP_MARKERS_FLAG          0x0144
#define IDG_THREAD_IP_MARKERS_UNFLAG        0x0145
#define IDG_DEBUG_CONTEXT_TOGGLE_SUBGROUP   0x0146
#define IDG_DEBUG_CONTEXT_STACKFRAME_SUBGROUP 0x0147
#define IDG_LOAD_SYMBOLS_DEFAULTS           0x0149
#define IDG_BREAKPOINTS_WINDOW_SET_FILTER   0x0151
#define IDG_BREAKPOINTS_WINDOW_SORT         0x0152
#define IDG_BREAKPOINTS_WINDOW_SORT_LIST    0x0153
#define IDG_BREAKPOINTS_WINDOW_SORT_DIRECTION 0x0154
#define IDG_BREAKPOINTS_WINDOW_SORT_NONE    0x0155
#define IDG_BREAKPOINTS_WINDOW_UNDO_REDO    0x0156
#define IDG_BREAKPOINTS_WINDOW_IMPORT_EXPORT 0x0157
#define IDG_BREAKPOINTS_WINDOW_EXPORT       0x0158
#define IDG_BREAKPOINT_EXPORT               0x0159
#define IDG_AUTOLOAD_SYMBOLS_DEFAULTS       0x0160
#define IDG_SYMBOLS_INCLUDELIST_DEFAULTS    0x0161
#define IDG_SYMBOLS_EXCLUDELIST_DEFAULTS    0x0162
#define IDG_DEBUGGER_OPTIONS                0x0163

// Call out memory window instances separately for multiple toolbar support
#define IDG_MEMORY_EXPRESSION1          0x0201
#define IDG_MEMORY_EXPRESSION2          0x0202
#define IDG_MEMORY_EXPRESSION3          0x0203
#define IDG_MEMORY_EXPRESSION4          0x0204
#define IDG_MEMORY_COLUMNS1             0x0211
#define IDG_MEMORY_COLUMNS2             0x0212
#define IDG_MEMORY_COLUMNS3             0x0213
#define IDG_MEMORY_COLUMNS4             0x0214

// this group is for commands that are available in the command window,
// but are not on any menus by default
#define IDG_COMMAND_WINDOW              0x0300

///////////////////////////////////////////////////////////////////////////////
// Indexes into bitmaps (image wells)

// DbgIcons.bmp
#define IDBI_THREADS                    1
#define IDBI_RUNNING_DOCS               2
#define IDBI_EXECUTE                    3
#define IDBI_BREAKPOINTS_WINDOW         4
#define IDBI_ATTACH_TO_PROCESS          5
#define IDBI_EXCEPTIONS                 6
#define IDBI_ENABLE_BREAKPOINT          7
#define IDBI_STACK                      8
#define IDBI_LOCALS                     9
#define IDBI_AUTOS                     10
#define IDBI_DETACH                    11
#define IDBI_DISASM                    12
#define IDBI_MEMORY                    13
#define IDBI_REGISTERS                 14
#define IDBI_WATCH                     15
#define IDBI_MODULES                   16
#define IDBI_CONSOLE_WINDOW            17
#define IDBI_BREAKPOINT                18
#define IDBI_VIEW_BREAKPOINT           19
#define IDBI_AUTO_REEVALUATE           20
#define IDBI_PROCESSES                 21
#define IDBI_GO_TO_SOURCE              22
#define IDBI_GO_TO_DISASSEMBLY         23
#define IDBI_APPLY_CODE_CHANGES        24
#define IDBI_STOP_APPLY_CODE_CHANGES   25
#define IDBI_BREAKPOINT_PROPERTIES     26
#define IDBI_DELETE_ALL_BREAKPOINTS    27
#define IDBI_DISABLE_ALL_BREAKPOINTS   28
#define IDBI_ENABLE_ALL_BREAKPOINTS    29
#define IDBI_TOGGLE_ALL_BREAKPOINTS    30
#define IDBI_DELETE                    31
#define IDBI_UP                        32
#define IDBI_DOWN                      33
#define IDBI_NEWFOLDER                 34
#define IDBI_REFRESH                   35
#define IDBI_TERMINATE_PROCESS         36
#define IDBI_DELETE_BREAKPOINT         37
#define IDBI_FLAG                      38
#define IDBI_TOGGLE_FLAG               39
#define IDBI_TOGGLE_THREAD_IPS         40
#define IDBI_BREAKPOINT_IMPORT         45
#define IDBI_BREAKPOINT_EXPORT         46

//Instructions for adding new icons:
//1) Edit vsdebug\resource\DbgIcons.bmp, adding the new icon to the right of the existing icons.
//2) Add a new #define in this file, defining the new IDBI_ constant as the 1-based (not 0-based) index of the image in the bitmap file, that is,
//      1 + (x / 16) where x is the leftmost x-coordinate of the image in the bitmap.
//3) Add the new value to the enum definition inside vsdebug\package\imagelists.h
//4) Add the references to vsdebug\resource\VSDbgCmdBase.vsct as needed.  
//5) In vsdebug\resource\VSDbgCmdBase.vsct, search for the following code:
//    <Bitmap guid="guidDebuggerIcon" resID="IDB_DEBUGGER_ICONS" usedList="IDBI_THREADS, IDBI_RUNNING_DOCS,...
//   and add the newly created icon to the used list.
//
// For an example of how to do this, see sdv this file, or see changeset #547024 (main server).


// DbgToolwindowIcons.bmp
#define IDBI_TW_THREADS                 1
#define IDBI_TW_RUNNING_DOCS            2
#define IDBI_TW_INSERT_BREAKPOINT       3
#define IDBI_TW_STACK                   4
#define IDBI_TW_LOCALS                  5
#define IDBI_TW_AUTOS                   6
#define IDBI_TW_DISASM                  7
#define IDBI_TW_MEMORY                  8
#define IDBI_TW_REGISTERS               9
#define IDBI_TW_WATCH                  10
#define IDBI_TW_MODULES                11
#define IDBI_TW_CONSOLE_WINDOW         12
#define IDBI_TW_PROCESSES              13

#define IDBI_MAX                       13


///////////////////////////////////////////////////////////////////////////////
// Command IDs
// Unfortunately several debugger cmdid's found in vs\src\common\inc\stdidcmd.h
// cannot be moved into this file for backward compatibility reasons.
// Otherwise, all V7 debugger cmdid's should be defined in here.

///////////////////////////////////////////////////////////////////////////////
// IMPORTANT: Our implementation of multiple-instance toolwindows make use of
// the high-end byte of the cmdid's to store instance information.  Do not use
// this byte unless you are implementing a multiple-instance toolwindow.
///////////////////////////////////////////////////////////////////////////////
#ifdef __cplusplus
inline DWORD DBGCMDID_STRIP(DWORD cmdid)
{
    return cmdid & 0x00ffffff;
}
inline long DBGCMDID_TOOLWINDOW_ID(DWORD cmdid)
{
    return (cmdid >> 24) & 0x000000ff;
}
#endif

// General debugger commands
#define cmdidDebuggerFirst                  0x00000000
#define cmdidDebuggerLast                   0x00000fff

#define cmdidBreakpointsWindowShow          0x00000100
#define cmdidDisasmWindowShow               0x00000101
#define cmdidRegisterWindowShow             0x00000103
#define cmdidModulesWindowShow              0x00000104
#define cmdidApplyCodeChanges               0x00000105
#define cmdidStopApplyCodeChanges           0x00000106
#define cmdidGoToDisassembly                0x00000107
#define cmdidShowDebugOutput                0x00000108
#define cmdidStepUnitLine                   0x00000110
#define cmdidStepUnitStatement              0x00000111
#define cmdidStepUnitInstruction            0x00000112
#define cmdidStepUnitList                   0x00000113
#define cmdidStepUnitListEnum               0x00000114
#define cmdidWriteCrashDump                 0x00000115
#define cmdidProcessList                    0x00000116
#define cmdidProcessListEnum                0x00000117
#define cmdidThreadList                     0x00000118
#define cmdidThreadListEnum                 0x00000119
#define cmdidStackFrameList                 0x00000120
#define cmdidStackFrameListEnum             0x00000121
#define cmdidDisableAllBreakpoints          0x00000122
#define cmdidEnableAllBreakpoints           0x00000123
#define cmdidToggleAllBreakpoints           0x00000124
#define cmdidTerminateAll                   0x00000125
#define cmdidSymbolOptions                  0x00000126
#define cmdidLoadSymbolsFromCurrentPath     0x00000127
#define cmdidSymbolLoadInfo                 0x00000128
#define cmdidStopEvaluatingExpression       0x00000129
#define cmdidAttachedProcsWindowShow        0x00000131 
#define cmdidToggleFlaggedThreads           0x00000132
#define cmdidThreadFlag                     0x00000133
#define cmdidThreadUnflag                   0x00000134
#define cmdidJustMyCode                     0x00000135
#define cmdidNewFileBreakpoint              0x00000136
#define cmdidNewFunctionBreakpoint          0x00000137
#define cmdidNewAddressBreakpoint           0x00000138
#define cmdidNewDataBreakpoint              0x00000139 
#define cmdidThreadUnflagAll                0x00000040
#define cmdidInsertTracepoint               0x00000041
#define cmdidBreakpointLocation             0x00000142
#define cmdidBreakpointCondition            0x00000143
#define cmdidBreakpointHitCount             0x00000144
#define cmdidBreakpointConstraints          0x00000145
#define cmdidBreakpointAction               0x00000146
#define cmdidCreateObjectID                 0x00000147
#define cmdidRunMacrosForBreakpointsJustHit 0x00000148
#define cmdidCopyExpression                 0x00000149
#define cmdidCopyValue                      0x0000014A
#define cmdidDestroyObjectID                0x0000014B
#define cmdidOutputOnException              0x00000150
#define cmdidOutputOnModuleLoad             0x00000151
#define cmdidOutputOnModuleUnload           0x00000152
#define cmdidOutputOnProcessDestroy         0x00000153
#define cmdidOutputOnThreadDestroy          0x00000154
#define cmdidOutputOnOutputDebugString      0x00000155
#define cmdidSingleProcStepInto             0x00000156
#define cmdidSingleProcStepOver             0x00000157
#define cmdidSingleProcStepOut              0x00000158
#define cmdidToggleCurrentThreadFlag        0x00000159
#define cmdidShowThreadIpIndicators         0x0000015A
#define cmdidLoadSymbolsFromPublic          0x0000015B
#define cmdidLoadSymbolsDisabled            0x0000015C
#define cmdidOutputOnStepFilter             0x0000015D
#define cmdidStepFilterToggle               0x0000015E
#define cmdidShowStepIntoSpecificMenu       0x0000015F
#define cmdidBreakpointEditLabels           0x00000160
#define cmdidBreakpointExport               0x00000161
#define cmdidAutoLoadSymbolsEnabled         0x00000163
#define cmdidAutoLoadSymbolsDisabled        0x00000164
#define cmdidSymbolsIncludeListAdd          0x00000165
#define cmdidSymbolsIncludeListRemove       0x00000166
#define cmdidSymbolsIncludeListDisabled     0x00000167
#define cmdidSymbolsExcludeListAdd          0x00000168
#define cmdidSymbolsExcludeListRemove       0x00000169
#define cmdidSymbolsExcludeListDisabled     0x00000170
#define cmdidAddWatchExpression             0x00000171
#define cmdidQuickWatchExpression           0x00000172
#define cmdidDebuggerOptions                0x00000173

// See above for explanation of these constants...
#define cmdidMemoryWindowShow               0x00000200
#define cmdidMemoryWindowShow1              0x01000200
#define cmdidMemoryWindowShow2              0x02000200
#define cmdidMemoryWindowShow3              0x03000200
#define cmdidMemoryWindowShow4              0x04000200

#ifdef MULTIPLE_WATCH_WINDOWS
#define cmdidWatchWindowShow                0x00000300
#define cmdidWatchWindowShow1               0x01000300
#define cmdidWatchWindowShow2               0x02000300
#define cmdidWatchWindowShow3               0x03000300
#define cmdidWatchWindowShow4               0x04000300
#define cmdidWatchWindowShowSingle          0x05000300
#endif

// Breakpoint Window commands
#define cmdidBreakpointsWindowFirst         0x00001000
#define cmdidBreakpointsWindowLast          0x00001fff

#define cmdidBreakpointsWindowNewBreakpoint   0x00001001 // deprecated
#define cmdidBreakpointsWindowNewGroup        0x00001002
#define cmdidBreakpointsWindowDelete          0x00001003
#define cmdidBreakpointsWindowProperties      0x00001004 // deprecated
#define cmdidBreakpointsWindowDefaultGroup    0x00001005
#define cmdidBreakpointsWindowGoToSource      0x00001006
#define cmdidBreakpointsWindowGoToDisassembly 0x00001007
#define cmdidBreakpointsWindowGoToBreakpoint  0x00001008
#define cmdidBreakpointsWindowSetFilter             0x00001009
#define cmdidBreakpointsWindowSetFilterList         0x0000100A
#define cmdidBreakpointsWindowSetFilterDropDown     0x0000100B
#define cmdidBreakpointsWindowSetFilterDropDownList 0x0000100C
#define cmdidBreakpointsWindowImport            0x0000100D
#define cmdidBreakpointsWindowUndo              0x0000100E
#define cmdidBreakpointsWindowRedo              0x0000100F
#define cmdidBreakpointsWindowExport            0x00001010
#define cmdidBreakpointsWindowExportSelected    0x00001011
#define cmdidBreakpointsWindowClearSearchFilter       0x00001013
#define cmdidBreakpointsWindowDeleteAllMatching        0x00001014
#define cmdidBreakpointsWindowToggleAllMatching        0x00001015
#define cmdidBreakpointsWindowSortByColumnName  0x00001200
#define cmdidBreakpointsWindowSortByColumnCondition   0x00001201
#define cmdidBreakpointsWindowSortByColumnHitCount    0x00001202
#define cmdidBreakpointsWindowSortByColumnLanguage    0x00001203
#define cmdidBreakpointsWindowSortByColumnFunction    0x00001204
#define cmdidBreakpointsWindowSortByColumnFile        0x00001205
#define cmdidBreakpointsWindowSortByColumnAddress     0x00001206
#define cmdidBreakpointsWindowSortByColumnData        0x00001207
#define cmdidBreakpointsWindowSortByColumnProcess     0x00001208
#define cmdidBreakpointsWindowSortByColumnConstraints 0x00001209
#define cmdidBreakpointsWindowSortByColumnAction      0x0000120A
#define cmdidBreakpointsWindowSortByColumnLabel       0x0000120B
#define cmdidBreakpointsWindowSortByNone              0x0000120C
#define cmdidBreakpointsWindowSortAscending           0x0000120D
#define cmdidBreakpointsWindowSortDescending          0x0000120E


#define cmdidBreakpointsWindowColumnName        0x00001100
#define cmdidBreakpointsWindowColumnCondition   0x00001101
#define cmdidBreakpointsWindowColumnHitCount    0x00001102
#define cmdidBreakpointsWindowColumnLanguage    0x00001103
#define cmdidBreakpointsWindowColumnFunction    0x00001104
#define cmdidBreakpointsWindowColumnFile        0x00001105
#define cmdidBreakpointsWindowColumnAddress     0x00001106
#define cmdidBreakpointsWindowColumnData        0x00001107
#define cmdidBreakpointsWindowColumnProcess     0x00001108
#define cmdidBreakpointsWindowColumnConstraints 0x00001109
#define cmdidBreakpointsWindowColumnAction      0x0000110A
#define cmdidBreakpointsWindowColumnLabel       0x0000110B



// Disassembly Window commands
#define cmdidDisasmWindowFirst              0x00002000
#define cmdidDisasmWindowLast               0x00002fff

#define cmdidGoToSource                     0x00002001
#define cmdidShowDisasmAddress              0x00002002
#define cmdidShowDisasmSource               0x00002003
#define cmdidShowDisasmCodeBytes            0x00002004
#define cmdidShowDisasmSymbolNames          0x00002005
#define cmdidShowDisasmLineNumbers          0x00002006
#define cmdidShowDisasmToolbar              0x00002007
#define cmdidDisasmExpression               0x00002008
#define cmdidToggleDisassembly              0x00002009

// Memory Window commands
#define cmdidMemoryWindowFirst              0x00003000
#define cmdidMemoryWindowLast               0x00003fff

// The following are specific to each instance of the memory window.  The high-end
// byte is critical for proper operation of these commands.  The high-byte indicates
// the particular toolwindow that this cmdid applies to.  You can change the
// lowest 3 bytes to be whatever you want.

// The first constant in each group marks a cmdid representing the entire group.
// We use this constant inside our switch statements so as to not have to list
// out each separate instance of cmdid.
#define cmdidMemoryExpression               0x00003001
#define cmdidMemoryExpression1              0x01003001
#define cmdidMemoryExpression2              0x02003001
#define cmdidMemoryExpression3              0x03003001
#define cmdidMemoryExpression4              0x04003001

#define cmdidAutoReevaluate                 0x00003002
#define cmdidAutoReevaluate1                0x01003002
#define cmdidAutoReevaluate2                0x02003002
#define cmdidAutoReevaluate3                0x03003002
#define cmdidAutoReevaluate4                0x04003002

#define cmdidMemoryColumns                  0x00003003
#define cmdidMemoryColumns1                 0x01003003
#define cmdidMemoryColumns2                 0x02003003
#define cmdidMemoryColumns3                 0x03003003
#define cmdidMemoryColumns4                 0x04003003

#define cmdidColCountList                   0x00003004
#define cmdidColCountList1                  0x01003004
#define cmdidColCountList2                  0x02003004
#define cmdidColCountList3                  0x03003004
#define cmdidColCountList4                  0x04003004

// The following apply to all instances of the memory windows.  If any of these
// are added to the toolbar, they must be made per-instance!
#define cmdidShowNoData                     0x00003011
#define cmdidOneByteInt                     0x00003012
#define cmdidTwoByteInt                     0x00003013
#define cmdidFourByteInt                    0x00003014
#define cmdidEightByteInt                   0x00003015
#define cmdidFloat                          0x00003020
#define cmdidDouble                         0x00003021
#define cmdidFormatHex                      0x00003030
#define cmdidFormatSigned                   0x00003031
#define cmdidFormatUnsigned                 0x00003032
#define cmdidFormatBigEndian                0x00003033
#define cmdidShowNoText                     0x00003040
#define cmdidShowAnsiText                   0x00003041
#define cmdidShowUnicodeText                0x00003042
#define cmdidEditValue                      0x00003050
#define cmdidShowToolbar                    0x00003062

// MemoryView-specific commands.  These are used internally by the MemoryView implementation.
#define cmdidStopInPlaceEdit                0x00003100

// Registers Window commands
#define cmdidRegisterWindowFirst            0x00004000
#define cmdidRegWinGroupFirst               0x00004001
#define cmdidRegWinGroupLast                0x00004100

#define cmdidRegisterWindowLast             0x00004fff

// QuickWatch commands
#define cmdidQuickWatchFirst                0x00005000
#define cmdidQuickWatchLast                 0x00005fff


// Debug Context toolbar commands
//#define cmdidDebugContextFirst              0x00006000
//#define cmdidDebugContextLast               0x00006fff


// Modules Window commands
#define cmdidModulesWindowFirst             0x00007000
#define cmdidModulesWindowLast              0x00007100

#define cmdidReloadSymbols                  0x00007001 // deprecated
#define cmdidShowAllModules                 0x00007002
#define cmdidToggleUserCode                 0x00007003

// step into specific
#define cmdidStepIntoSpecificFirst          0x00007200
#define cmdidStepIntoSpecificLast           0x00007FFF

// Call Stack commands
#define cmdidCallStackWindowFirst           0x00008000
#define cmdidCallStackWindowLast            0x00008fff

#define cmdidSetCurrentFrame                0x00008001
#define cmdidCallStackValues                0x00008002
#define cmdidCallStackTypes                 0x00008003
#define cmdidCallStackNames                 0x00008004
#define cmdidCallStackModules               0x00008005
#define cmdidCallStackLineOffset            0x00008006
#define cmdidCallStackByteOffset            0x00008007
#define cmdidCrossThreadCallStack           0x00008008
#define cmdidShowExternalCode               0x00008009
#define cmdidUnwindFromException            0x0000800a

// Datatip commands
#define cmdidDatatipFirst                   0x00009000
#define cmdidDatatipLast                    0x00009fff

#define cmdidDatatipNoTransparency          0x00009010
#define cmdidDatatipLowTransparency         0x00009011
#define cmdidDatatipMedTransparency         0x00009012
#define cmdidDatatipHighTransparency        0x00009013

// Attached Processes Window commands
#define cmdidAttachedProcsWindowFirst               0x0000a000
#define cmdidAttachedProcsWindowLast                0x0000a100

#define cmdidAttachedProcsStartProcess              0x0000a001
#define cmdidAttachedProcsPauseProcess              0x0000a002
#define cmdidAttachedProcsStepIntoProcess           0x0000a003
#define cmdidAttachedProcsStepOverProcess           0x0000a004
#define cmdidAttachedProcsStepOutProcess            0x0000a005
#define cmdidAttachedProcsDetachProcess             0x0000a006
#define cmdidAttachedProcsTerminateProcess          0x0000a007
#define cmdidAttachedProcsDetachOnStop              0x0000a008
#define cmdidAttachedProcsColumnName                0x0000a010
#define cmdidAttachedProcsColumnID                  0x0000a011
#define cmdidAttachedProcsColumnPath                0x0000a012
#define cmdidAttachedProcsColumnTitle               0x0000a013
#define cmdidAttachedProcsColumnMachine             0x0000a014
#define cmdidAttachedProcsColumnState               0x0000a015
#define cmdidAttachedProcsColumnTransport           0x0000a016
#define cmdidAttachedProcsColumnTransportQualifier  0x0000a017

#define cmdidThreadIpMarkerSwitchContext            0x0000a018
#define cmdidThreadIpMarkerFlagUnflag               0x0000a019
#define cmdidThreadIpMarkersSwitchContext           0x0000b000
#define cmdidThreadIpMarkersSwitchContextFirst      0x0000b001
#define cmdidThreadIpMarkersSwitchContextLast       0x0000bfff
#define cmdidThreadIpMarkersFlag                    0x0000c000
#define cmdidThreadIpMarkersFlagFirst               0x0000c001
#define cmdidThreadIpMarkersFlagLast                0x0000cfff
#define cmdidThreadIpMarkersUnflag                  0x0000d000
#define cmdidThreadIpMarkersUnflagFirst             0x0000d001
#define cmdidThreadIpMarkersUnflagLast              0x0000dfff



// Command Window commands
// while all commands are available in the command window,
// these are not on any menus by default
//
#define cmdidCommandWindowFirst             0x0000f000
#define cmdidCommandWindowLast              0x0000ffff

#define cmdidListMemory                     0x0000f001
#define cmdidListCallStack                  0x0000f002
#define cmdidListDisassembly                0x0000f003
#define cmdidListRegisters                  0x0000f004 
// unused                                   0x0000f005
#define cmdidListThreads                    0x0000f006
#define cmdidSetRadix                       0x0000f007 
// unused                                   0x0000f008
#define cmdidSetCurrentThread               0x0000f009
#define cmdidSetCurrentStackFrame           0x0000f00a
#define cmdidListSource                     0x0000f00b
#define cmdidSymbolPath                     0x0000f00c
#define cmdidListModules                    0x0000f00d
#define cmdidListProcesses                  0x0000f00e
#define cmdidSetCurrentProcess              0x0000f00f

#endif // _VSDBGCMD_H_INCLUDED
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\vsassert.h ===
//=--------------------------------------------------------------------------=
// VsAssert.H
//=--------------------------------------------------------------------------=
// Headers for common assert macros and debugging functionality
//=--------------------------------------------------------------------------=
// Copyright (c) 1997, Microsoft Corporation
//			All Rights Reserved
//=--------------------------------------------------------------------------=

/*
Throwing assertion support added.

Traditional code often does this
	VSASSERT(p!=NULL, "p was NULL");
	if(!p)
	{
		return E_FAIL;
	}
or something similar. 

Unfortunately, developers often forget to do the checking after an assertion. 
Additionally, the calling function is often not well prepared for this error return.

Exception-safe code has a better choice here. It's already ready to receive an exception
at any time. So we can use that in retail to avoid crashes in these kind of bad-internal
state situations.

The basic pattern here is that exception-safe code can do:

	VsVerifyThrow(p!=NULL, "p was NULL"	);

In debug, this is just a regular assertion. In retail, the code will throw an 
exception, avoiding the crash when p would have been dereferenced, and simplifying
the code because there's no need for the if clause shown above.

Different code bases use different kinds of exceptions, so vsassert is agnostic about
which kind of exception is being used. Its function looks like this

CLINKAGE BOOL ENTRYPOINT 
VsAssertAndThrow
(
	LPCSTR pszMsg, 
	LPCSTR pszAssert, 
	LPCSTR pszFile, 
	UINT line, 
	BOOL *pfThrow,				// Set to true if the use pressed the 'throw' button
	BOOL *pfDisableAssert,		// True if the user asked to disable this assert for ever
	BOOL *pfAlwaysThrow			// True if the user asked to throw this assert for ever
);

pfThrow will be true if the user wants to throw; the calling macro can then throw the
right kind of exception inline.

if pfAlwaysThrow is true, pfDisableAssert must be true too.


*/

#ifndef _INC_VSASSERT_H
#define _INC_VSASSERT_H

#include "windows.h"
#include "ole2.h"
#ifndef FEATURE_PAL
#include "commdlg.h"
#endif

#if _MSC_VER
#define	ENTRYPOINT  __declspec(dllexport) __stdcall
#else
#define ENTRYPOINT
#endif // _MSC_VER
    
#ifdef __cplusplus
#define CLINKAGE	extern "C"
#else
#define CLINKAGE
#endif

//=--------------------------------------------------------------------------=
// Turn off compiler warnings which are exacerbated by constructs in this
// file's definitions:

// Warning C4127: conditional expression is constant.  This is caused by all
//		of the macros with "do { ... } while (false)" syntax.  The syntax is
//		a good way to ensure that a statement-like macro can be used in all
//		contexts (specifically if statements), but the compiler warns about
//		the "while (false)" part. 

#if _MSC_VER
#pragma warning(disable: 4127)
#endif

#pragma push_macro("DEBUG")
#ifdef _DEBUG
#ifndef DEBUG
#define DEBUG
#endif
#endif

//=--------------------------------------------------------------------------=
// Debugging constants.  These flags are used to route debug messages to
// the appropriate places
//
#define DF_ENABLED               0x01 // This option is enabled
#define DF_OUTPUTDEBUGSTRING     0x02 // Use OutputDebugString
#define DF_OUTPUTDEBUGWINDOW     0x04 // Send to the host's immediate window
#define DF_OUTPUTFILE            0x08 // Output to a file
#define DF_OUTPUTDIALOG          0x10 // Use the assert dialog
#define DF_OUTOFPROCDIALOG       0x20 // Go out of proc to report the assert in a dialog (Must be combined with DF_OUTPUTDIALOG)

#define DF_DEFAULTASSERTOPTIONS  (DF_ENABLED | DF_OUTPUTDIALOG | DF_OUTOFPROCDIALOG)
#define DF_DEFAULTPRINTOPTIONS   (DF_ENABLED | DF_OUTPUTDEBUGSTRING)

//=--------------------------------------------------------------------------=
// If you want to route debug messages to an immediate/debug window of the
// hosting app, use this function to setup a callback with the same
// signature as below.  To revoke it, just call the fn again with a NULL
// parameter.
//
#ifdef DEBUG
typedef void (WINAPI *IMMEDIATECALLBACK)(LPCSTR pszMessage);
CLINKAGE BOOL ENTRYPOINT VsSetImmediateCallback(IMMEDIATECALLBACK pImmediateCallback);

//=--------------------------------------------------------------------------=
// Initialization / termination for debugging.  Yes, you can assert before
// and after these calls.  This just enables the fancy stuff.  Only the host
// EXE should call these.
//
CLINKAGE VOID ENTRYPOINT VsDebugInitialize();
CLINKAGE VOID ENTRYPOINT VsDebugTerminate();

//=--------------------------------------------------------------------------=
// Function prototypes.  You should use the macros below to keep debug/retail
// differences transparent.
//
// Support for managed VsTraceListener (note: ANSI strings)
CLINKAGE BOOL ENTRYPOINT VsManagedAssert(LPCSTR pszMsg, LPCSTR pszAssert, UINT line, BOOL *pfDisableAssert);
// Support for managed VsTraceListener (note: ANSI strings)
CLINKAGE VOID ENTRYPOINT VsDebugPrint(LPCSTR pszMsg);
CLINKAGE BOOL ENTRYPOINT VsAssert(LPCSTR pszMsg, LPCSTR pszAssert, LPCSTR pszFile, UINT line, BOOL *pfDisableAssert);
CLINKAGE BOOL ENTRYPOINT VsAssertAndThrow(LPCSTR pszMsg, LPCSTR pszAssert, LPCSTR pszFile, UINT line, BOOL *pfThrow, BOOL *pfDisableAssert, BOOL *pfAlwaysThrow);
#if defined(__cplusplus) && !defined(VSASSERT_MIXED_LINKAGE)
         BOOL ENTRYPOINT VsAssert(LPCWSTR pszMsg, LPCSTR pszAssert, LPCSTR pszFile, UINT line, BOOL *pfDisableAssert);
         BOOL ENTRYPOINT VsAssertAndThrow(LPCWSTR pszMsg, LPCSTR pszAssert, LPCSTR pszFile, UINT line, BOOL *pfThrow, BOOL *pfDisableAssert, BOOL *pfAlwaysThrow);
#endif
CLINKAGE BOOL ENTRYPOINT VsDisplayDebugMessage(LPCSTR pszMsg, LPCSTR pszAssert, LPCSTR pszFile, UINT line, int flags, BOOL *pfDisableAssert, ...);
CLINKAGE BOOL ENTRYPOINT VsDisplayDebugMessageThrow(LPCSTR pszMsg, LPCSTR pszAssert, LPCSTR pszFile, UINT line, int flags, BOOL *pfThrow, BOOL *pfDisableAssert, BOOL *pfAlwaysThrow, ...);
CLINKAGE BOOL ENTRYPOINT VsDisplayDebugMessageThrowVa(LPCSTR pszMsg, LPCSTR pszAssert, LPCSTR pszFile, UINT line, int flags, BOOL *pfThrow, BOOL *pfDisableAssert, BOOL *pfAlwaysThrow, va_list pArgs);
CLINKAGE VOID ENTRYPOINT VsDebugOutput(int dfOutput, LPCSTR pszOutputString, BOOL *pfDoInt3, BOOL *pfDisableAssert);
CLINKAGE VOID ENTRYPOINT VsDebugOutputThrow(int dfOutput, LPCSTR pszOutputString, BOOL *pfDoInt3, BOOL *pfThrow, BOOL *pfDisableAssert, BOOL *pfAlwaysThrow);
CLINKAGE VOID ENTRYPOINT VsDebugPrintf(LPCSTR pszMsg, ...);
CLINKAGE VOID ENTRYPOINT VsDebugPrintIf(BOOL fPrint, LPCSTR pszMsg, ...);
CLINKAGE VOID ENTRYPOINT VsEnableAsserts (BOOL fEnable);
CLINKAGE VOID ENTRYPOINT VsPrintCallstack(int nLines);
CLINKAGE BOOL ENTRYPOINT VsEnsureDebuggerPresent();
         BOOL ENTRYPOINT VsAssertWriteMiniDump();
         
//=--------------------------------------------------------------------------=
// Stack walk and resolve symbols functions
//
CLINKAGE UINT ENTRYPOINT VsGetStackAddresses(UINT ifrStart, UINT cfrTotal, DWORD_PTR * pdwAddr);
CLINKAGE BOOL ENTRYPOINT VsResolveSymbols(DWORD_PTR dwAddress, _Out_cap_(uicBuf) char * pszBuf, UINT uicBuf);

#if defined(_X86_) && !defined(PLATFORM_UNIX) && !defined(_M_CEE)
// Avoid inline assembler in macros because it breaks lambdas; can be changed back when dev10 bug 658310 is fixed
// #define Int3 _asm { int 3 }
#define Int3 DebugBreak();
#else
#define Int3 DebugBreak();
#endif // _X86_
#define VsDebugBreak() do { if (VsEnsureDebuggerPresent()) {Int3; } } while(0)

//=--------------------------------------------------------------------------=
// Debugging macros
//
static BOOL g_fStopOnVsAssert = FALSE;

// function which uses g_fStopOnVsAssert so we don't get a compiler warning
__forceinline
void
VSASSERT_H_UsefStopOnVsAssert()
{
    g_fStopOnVsAssert = g_fStopOnVsAssert;
}

#define VSASSERT(fTest, szMsg)                                      \
  do {                                                              \
    static BOOL fDisableThisAssert = FALSE;                         \
    if (!(fTest) && !fDisableThisAssert)                            \
      {                                                             \
      if(g_fStopOnVsAssert ||                                       \
        VsAssert(szMsg, #fTest, __FILE__, __LINE__, &fDisableThisAssert))\
        VsDebugBreak();                                             \
      }                                                             \
  } while (false)								    \

#define VSVERIFY(fTest, szMsg) VSASSERT((fTest), (szMsg))

#define VSVERIFYTHROW(fTest, szMsg, exception) VSVERIFYFUNC(fTest, szMsg, throw exception)

#define VSVERIFYFUNC(fTest, szMsg, function)                        \
  do                                                                \
    {                                                               \
    static BOOL fDisableThisAssert = FALSE;                         \
    static BOOL fThrowThisAssert = TRUE;                            \
    if (!(fTest))                                                   \
      {                                                             \
      BOOL fThrow=true;                                             \
      if(!fDisableThisAssert)                                       \
        {                                                           \
        if(g_fStopOnVsAssert ||                                     \
          VsAssertAndThrow( szMsg,                                  \
                            #fTest,                                 \
                            __FILE__,                               \
                            __LINE__,                               \
                            &fThrow,                                \
                            &fDisableThisAssert,                    \
                            &fThrowThisAssert))                     \
          {                                                         \
          VsDebugBreak();                                           \
          }                                                         \
        }                                                           \
      else                                                          \
        {                                                           \
          fThrow=fThrowThisAssert;                                  \
        }                                                           \
      if(fThrow)                                                    \
        {                                                           \
          function;                                                 \
        }                                                           \
      }                                                             \
    }                                                               \
  while (false)                                                     \

#define VSFAIL(szMsg) VSASSERT(0, szMsg)
#define VSIMPLIES(fHypothesis, fConclusion, szMsg) VSASSERT(!(fHypothesis) || (fConclusion), szMsg)
#define VSDEBUGPRINTF  VsDebugPrintf
#define VSDEBUGPRINTIF VsDebugPrintIf
#define VSPRINTCALLSTACK(nLines) VsPrintCallstack(nLines)

// "CAssert".  This is a compile time assert that will fire if fTest is
// zero.  Here, "msg" must be a non-quoted single word string that can be
// used as an identifier.
//
#define VSCASSERT(fTest, msg)  { struct foo { int Compile_Assert_##msg:((fTest)!=0); }; }

#else // DEBUG

//=--------------------------------------------------------------------------=
// Retail no-op implementations of debugging macros
//
#ifdef __cplusplus
inline void __cdecl _DebugNop(...) {}
#endif

#define VSASSERT(fTest, szMsg) do {} while (0)
#define VSVERIFY(fTest, szMsg) (void)(fTest);

#define VSVERIFYTHROW(fTest, szMsg, exception) VSVERIFYFUNC(fTest, szMsg, throw exception)

// Note: It is deliberate that this exists in retail too.
#define VSVERIFYFUNC(fTest, szMsg, function)                        \
  do                                                                \
    {                                                               \
    if (!(fTest))                                                   \
      {                                                             \
        function;                                                   \
      }                                                             \
    }                                                               \
  while (false)                                                     \

#define VSFAIL(szMsg) do {} while (0)
#define VSIMPLIES(fHypothesis, fConclusion, szMsg) do {} while (0)
#define VSDEBUGPRINTF 1 ? (void)0 : _DebugNop
#define VSDEBUGPRINTIF VSDEBUGPRINTF
#define VSPRINTCALLSTACK(nLines)
#define VSCASSERT(fTest, msg)

#define VsSetImmediateCallback(pfn)
#define VsDebugInitialize()
#define VsDebugTerminate()

#define VsGetStackAddresses(ifrStart, cfrTotal, pdwAddr) 0
#define VsResolveSymbols(dwAddress, pszBuf, uicBuf)      0
#define VsDebugBreak()  do {} while (0)
#endif // DEBUG

// usability improvement (accepting variable number of arguments and with formatting
// functionality built-in) (bug: 258645 - move the following definitions from
// env\msenv\inc\vbmacro.h to vscommon\vsassert\vsassert.h)

#ifdef DEBUG
    #define VSFAIL_FORMATWITHARGS_5(pwszFormat, ARG1, ARG2, ARG3, ARG4, ARG5) \
    if (pwszFormat && *pwszFormat)                                          \
    {                                                                       \
        WCHAR szFailString[MAX_PATH*4] = L"";                               \
                                                                            \
        VSBufPrint(szFailString, sizeof(szFailString)/sizeof(*szFailString), pwszFormat, ARG1, ARG2, ARG3, ARG4, ARG5);   \
                                                                            \
        VSFAIL(szFailString);                                               \
    }
    #define VSFAIL_FORMATWITHARGS_4(pwszFormat, ARG1, ARG2, ARG3, ARG4) \
        VSFAIL_FORMATWITHARGS_5(pwszFormat, ARG1, ARG2, ARG3, ARG4, NULL);
    #define VSFAIL_FORMATWITHARGS_3(pwszFormat, ARG1, ARG2, ARG3) \
        VSFAIL_FORMATWITHARGS_5(pwszFormat, ARG1, ARG2, ARG3, NULL, NULL);
    #define VSFAIL_FORMATWITHARGS_2(pwszFormat, ARG1, ARG2) \
        VSFAIL_FORMATWITHARGS_5(pwszFormat, ARG1, ARG2, NULL, NULL, NULL);
    #define VSFAIL_FORMATWITHARGS_1(pwszFormat, ARG1) \
        VSFAIL_FORMATWITHARGS_5(pwszFormat, ARG1, NULL, NULL, NULL, NULL);

    #define VSASSERT_FORMATWITHARGS_5(fTest, pwszFormat, ARG1, ARG2, ARG3, ARG4, ARG5)    \
    {                                                                           \
        if (!fTest)                                                             \
        {                                                                       \
            VSFAIL_FORMATWITHARGS_5(pwszFormat, ARG1, ARG2, ARG3, ARG4, ARG5);    \
        }                                                                       \
    }
    #define VSASSERT_FORMATWITHARGS_4(fTest, pwszFormat, ARG1, ARG2, ARG3, ARG4)  \
        VSASSERT_FORMATWITHARGS_5(fTest, pwszFormat, ARG1, ARG2, ARG3, ARG4, NULL);
    #define VSASSERT_FORMATWITHARGS_3(fTest, pwszFormat, ARG1, ARG2, ARG3)  \
        VSASSERT_FORMATWITHARGS_5(fTest, pwszFormat, ARG1, ARG2, ARG3, NULL, NULL);
    #define VSASSERT_FORMATWITHARGS_2(fTest, pwszFormat, ARG1, ARG2)  \
        VSASSERT_FORMATWITHARGS_5(fTest, pwszFormat, ARG1, ARG2, NULL, NULL, NULL);
    #define VSASSERT_FORMATWITHARGS_1(fTest, pwszFormat, ARG1)  \
        VSASSERT_FORMATWITHARGS_5(fTest, pwszFormat, ARG1, NULL, NULL, NULL, NULL);

#else
    #define VSFAIL_FORMATWITHARGS_5(pwszFormat, ARG1, ARG2, ARG3, ARG4, ARG5)
    #define VSFAIL_FORMATWITHARGS_4(pwszFormat, ARG1, ARG2, ARG3, ARG4)
    #define VSFAIL_FORMATWITHARGS_3(pwszFormat, ARG1, ARG2, ARG3)
    #define VSFAIL_FORMATWITHARGS_2(pwszFormat, ARG1, ARG2)
    #define VSFAIL_FORMATWITHARGS_1(pwszFormat, ARG1)

    #define VSASSERT_FORMATWITHARGS_5(fTest, pwszFormat, ARG1, ARG2, ARG3, ARG4, ARG5)
    #define VSASSERT_FORMATWITHARGS_4(fTest, pwszFormat, ARG1, ARG2, ARG3, ARG4)
    #define VSASSERT_FORMATWITHARGS_3(fTest, pwszFormat, ARG1, ARG2, ARG3)
    #define VSASSERT_FORMATWITHARGS_2(fTest, pwszFormat, ARG1, ARG2)
    #define VSASSERT_FORMATWITHARGS_1(fTest, pwszFormat, ARG1)
#endif

//=--------------------------------------------------------------------------=
// Debug heap memory support routines.  These support leak tracking on a per
// DLL basis.  For us to be robust, you should ALWAYS use these routines
// in your debug code, unless there is some really well thought-out
// compelling reason not to.
//

#ifdef DEBUG

// This will get you the process heap
//
#define DEFAULT_HEAP (HANDLE)-1

// Debug allocators have the concept of an instance, which is a unique ID that
// is usually the instance handle of the DLL making the allocation.  This takes
// special support from the DLL, but gives you the benefit of being able to
// track DLL leaks as they exit your process.  You can also identify allocations
// that may occur in static constructors by presetting the instance to UNDEFINED,
// then updating the instances when the DLL's ProcessAttach gets called.
//
#define INSTANCE_GLOBAL    ((DWORD)0)
#define INSTANCE_UNDEFINED ((DWORD)-1)

// you should avoid calling these functions; use the macros defined below
//
CLINKAGE PVOID    ENTRYPOINT VsDebugAllocInternal           (HANDLE hheap, DWORD flags, SIZE_T cb, LPCSTR pszFile,  UINT  uLine, UINT_PTR dwInst, LPCSTR pszExtra);
CLINKAGE PVOID    ENTRYPOINT VsDebugReallocInternal         (HANDLE hheap, PVOID pv, DWORD flags, SIZE_T  cb, LPCSTR pszFile, UINT uLine, UINT_PTR dwInst, LPCSTR pszExtra);
CLINKAGE PVOID    ENTRYPOINT VsDebugSafeReallocInternal     (HANDLE hheap, PVOID pv, DWORD flags, SIZE_T  cb, LPCSTR pszFile, UINT uLine, UINT_PTR dwInst, LPCSTR pszExtra);
CLINKAGE VOID     ENTRYPOINT VsDebugFreeInternal            (HANDLE hheap, PVOID pv);
CLINKAGE SIZE_T   ENTRYPOINT VsDebugSizeInternal            (HANDLE hheap, PVOID pv);
CLINKAGE HANDLE   ENTRYPOINT VsDebugHeapCreateInternal      (DWORD flags, LPCSTR pszName, LPCSTR pszFile, UINT uLine);
CLINKAGE VOID     ENTRYPOINT VsDebugHeapDestroyInternal     (HANDLE hheap, BOOL fLeakCheck);

// debug wrappers for heap allocations.  You should call these to do all of your
// debug memory allocations.
//
#define VsDebAlloc(flags, cb)                 VsDebugAllocInternal(DEFAULT_HEAP, (flags), (cb), __FILE__, __LINE__, INSTANCE_GLOBAL, NULL)
#define VsDebRealloc(pv, flags, cb)           VsDebugReallocInternal(DEFAULT_HEAP, (pv), (flags), (cb), __FILE__, __LINE__, INSTANCE_GLOBAL, NULL)
#define VsDebSafeRealloc(pv, flags, cb)       VsDebugSafeReallocInternal(DEFAULT_HEAP, (pv), (flags), (cb), __FILE__, __LINE__, INSTANCE_GLOBAL, NULL)
#define VsDebFree(pv)                         VsDebugFreeInternal(DEFAULT_HEAP, (pv))
#define VsDebSize(pv)                         VsDebugSizeInternal(DEFAULT_HEAP, (pv))

#define VsDebHeapAlloc(heap, flags, cb)       VsDebugAllocInternal(heap, (flags), (cb), __FILE__, __LINE__, INSTANCE_GLOBAL, NULL)
#define VsDebHeapRealloc(heap, pv, flags, cb) VsDebugReallocInternal(heap, (pv), (flags), (cb), __FILE__, __LINE__, INSTANCE_GLOBAL, NULL)
#define VsDebHeapFree(heap, pv)               VsDebugFreeInternal(heap, (pv))
#define VsDebHeapSize(heap, pv)               VsDebugSizeInternal(heap, (pv))

#define VsDebHeapCreate(flags, name)          VsDebugHeapCreateInternal(flags, name, __FILE__, __LINE__)
#define VsDebHeapDestroy(heap, fLeakCheck)    VsDebugHeapDestroyInternal(heap, fLeakCheck)

// Heap diagnostic functions that you can freely call
//
CLINKAGE VOID     ENTRYPOINT VsDebValidateHeaps     ();
CLINKAGE BOOL     ENTRYPOINT VsDebIsValidHeap       (HANDLE hHeap);
CLINKAGE BOOL     ENTRYPOINT VsDebIsValidHeapPtr    (HANDLE hHeap, PVOID pv);
CLINKAGE VOID     ENTRYPOINT VsDebDumpMemStats      ();

//VsDebGetNextHeap       will return the next CHeapSpy instance. If passed in 0, then will get first instance
CLINKAGE HANDLE    ENTRYPOINT VsDebGetNextHeap       (
    __in HANDLE hHeap, 
    __out LPCSTR *pszHeapName, 
    __out LPCSTR *pszFile, 
    __out ULONG * pnLineNo  
);



#ifdef __cplusplus
CLINKAGE VOID     ENTRYPOINT VsDebCheckLeaks        (HANDLE hHeap, UINT_PTR dwInst = INSTANCE_GLOBAL);
#endif

// This allows you go get at the allocation blocks for a given heap.  Most
// people will never have to call these -- you can use them to mimic the CRT
// debug leak detection scheme.
//
// Note:  You should avoid performing allocations on a heap that you're
//        enumerating.
//
typedef struct _ALLOCATION
  {
  PVOID         m_pv;         //address of block
  SIZE_T        m_cb;         //size of allocation in BYTES
  ULONG         m_cAlloc;     //allocation pass count.  relative to all heaps
  LPCSTR        m_pszFile;    //source file where the allocation was made
  ULONG         m_uLine;      //source line number where the allocation was made
  UINT_PTR      m_dwInst;     //instance ID of this allocation
  LPCSTR        m_pszExtra;   //additional info macros may like to add (eg. class name)
  DWORD         m_dwTid;      //thread ID that caused this allocation
  BOOL          m_fIgnorable; //can we ignore this allocation?
  } ALLOCATION;

// Work around a more strict VC6 compiler. When this file is included in components
// other than vsassert, these should be dllimport anyway. Also, the __declspec(dll*)
// should come *before* the return type.
typedef ALLOCATION* PALLOCATION;

CLINKAGE PALLOCATION ENTRYPOINT VsDebGetFirstBlock(HANDLE hHeap);
CLINKAGE PALLOCATION ENTRYPOINT VsDebGetNextBlock(HANDLE hHeap);

//=--------------------------------------------------------------------------=
// Debug IMallocSpy implementation.  Only an EXE should call these functions
// as there is only one MallocSpy per process.
//
// rgIgnoreList may specify an optional list of sizes of external allocations to
// ignore.  This is usefull if your leaks beyond your control happen that you
// would like to filter out.  rgIgnoreList must be static as it is not copied,
// and it must end in a 0 byte value.  You may pass in NULL here if you do not
// have any special case external allocations to ignore.
//
CLINKAGE HRESULT ENTRYPOINT VsStartMallocSpy(DWORD_PTR *rgIgnoreList); // obsolette, use VsStartMallocSpyEx
#ifdef __cplusplus
CLINKAGE HRESULT ENTRYPOINT VsStartMallocSpyEx(LPCOLESTR pszKnownLeaksFileName = NULL, LPCOLESTR pszGdiKnownLeaksFileName = NULL); 
   // NULL parameters mean default file names: <exename>_leaks.xml amd <exename>_gdileaks.xml
#endif
CLINKAGE HRESULT ENTRYPOINT VsStopMallocSpy();

//=--------------------------------------------------------------------------=
// Displays the standard debugging options dialog.
//
CLINKAGE VOID ENTRYPOINT VsShowDebugOptions(HWND hwndParent);

// you should avoid calling these functions; use the macros defined below
//
CLINKAGE PVOID ENTRYPOINT VsDebOleAllocInternal   (LPCSTR pszFile, ULONG ulLine, SIZE_T cb);
CLINKAGE VOID  ENTRYPOINT VsDebOleFreeInternal    (LPCSTR pszFile, ULONG ulLine, PVOID pv);
CLINKAGE PVOID ENTRYPOINT VsDebOleReallocInternal (LPCSTR pszFile, ULONG ulLine, PVOID pv, SIZE_T cb);

CLINKAGE BSTR  ENTRYPOINT VsSysAllocStringInternal        (LPCSTR pszFile, ULONG ulLine, const OLECHAR *pszString);
CLINKAGE BSTR  ENTRYPOINT VsSysAllocStringByteLenInternal (LPCSTR pszFile, ULONG ulLine, LPCSTR pszString, UINT cb);
CLINKAGE BSTR  ENTRYPOINT VsSysAllocStringLenInternal     (LPCSTR pszFile, ULONG ulLine, const OLECHAR *pszString, UINT cch );

CLINKAGE VOID  ENTRYPOINT VsIgnoreAllocsInternal (BOOL fIgnore);

//utility to help you add leak checking functionality in case you have to wrap
// allocation routines (in which case you loose file/line info)
CLINKAGE VOID  ENTRYPOINT VsDebOleSetAllocInfo (LPCSTR pszFile, ULONG ulLine);

//wrapper for CoCreateInstance, which calls VsIgnoreAllocs
CLINKAGE HRESULT ENTRYPOINT VsCoCreateInstance(REFCLSID rclsid, LPUNKNOWN pUnkOuter,
				    DWORD dwClsContext, REFIID riid, LPVOID FAR* ppv);

// debug wrappers for IMalloc allocations.  You should call these to do all of your debug
// IMalloc / SysAlloc* allocations
//
#define VsDebOleAlloc(cb)        VsDebOleAllocInternal(__FILE__, __LINE__, cb)
#define VsDebOleFree(pv)         VsDebOleFreeInternal(__FILE__, __LINE__, pv)
#define VsDebOleRealloc(pv, cb)  VsDebOleReallocInternal(__FILE__, __LINE__, pv, cb)

#define VsDebSysAllocString(str)            VsSysAllocStringInternal(__FILE__, __LINE__, str)
#define VsDebSysAllocStringByteLen(str, cb) VsSysAllocStringByteLenInternal(__FILE__, __LINE__, str, cb)
#define VsDebSysAllocStringLen(str, cch)    VsSysAllocStringLenInternal(__FILE__, __LINE__, str, cch)

// It may sometimes be necessary to ignore IMalloc allocations.  Common dialogs are
// an example, as they cleanup after our process has left the building.  Call this
// with TRUE for f to disable leak checking for EXTERNAL leaks, and FALSE to re-enable
// it.  Note that this (1) only works for external leaks and (2) is refcounted so
// you must balance it.
//
#define VsIgnoreAllocs(f)      VsIgnoreAllocsInternal(f);

#ifndef FEATURE_PAL
// Wrappers for comdlg.dll 'A' functions which call VsIgnoreAllocsInternal...
CLINKAGE BOOL ENTRYPOINT VsGetOpenFileNameA(LPOPENFILENAMEA pofn);
CLINKAGE BOOL ENTRYPOINT VsGetSaveFileNameA(LPOPENFILENAMEA pofn);
CLINKAGE short ENTRYPOINT VsGetFileTitleA(LPCSTR lpstr1, _Out_z_cap_(w) LPSTR lpstr2, WORD w);
CLINKAGE BOOL ENTRYPOINT VsChooseColorA(LPCHOOSECOLORA pcc);
CLINKAGE HWND ENTRYPOINT VsFindTextA(LPFINDREPLACEA pfr);
CLINKAGE HWND ENTRYPOINT VsReplaceTextA(LPFINDREPLACEA pfr);
CLINKAGE BOOL ENTRYPOINT VsChooseFontA(LPCHOOSEFONTA pcf);
CLINKAGE BOOL ENTRYPOINT VsPrintDlgA(LPPRINTDLGA ppd);
CLINKAGE DWORD ENTRYPOINT VsCommDlgExtendedError(VOID);
CLINKAGE BOOL ENTRYPOINT VsPageSetupDlgA(LPPAGESETUPDLGA pps);
#endif

//=--------------------------------------------------------------------------=
//=--------------------------------------------------------------------------=
// Recommended defaults
//
// This header / dll combination is not designed to be used all by itself.
// You should add appropriate macro definitions to your own global headers
// to hide the fact that you're calling into this DLL.  This allows your team
// to code the way they know how, using team-established standards instead
// of imposing arbitrary rules on them.
//
// The macros below define some guidelines for setting up your own macros.
// If these macros suit all of your needs you may just #define
// VSASSERT_SET_DEFAULTS before including this header.
//
//=--------------------------------------------------------------------------=
//=--------------------------------------------------------------------------=
#if VSASSERT_SET_DEFAULTS

// Assertion / tracing macro definitions
//
#define ASSERT(fTest, szMsg)  VSASSERT((fTest), (szMsg))
#define FAIL(szMsg)           VSFAIL((szMsg))
#define DEBUGPRINTF           VSDEBUGPRINTF
#define DEBUGPRINTIF          VSDEBUGPRINTIF
#define CASSERT(fTest, msg)   VSCASSERT((fTest), (msg))

// Debug switches
//
#define DEFINE_SWITCH(NAME, PACKAGE, DESC)  VSDEFINE_SWITCH(NAME, PACKAGE, DESC)
#define EXTERN_SWITCH(NAME)                 VSEXTERN_SWITCH(NAME)
#define FSWITCH(NAME)                       VSFSWITCH(NAME)

#ifdef DEBUG

// Memory allocation
//
#if 0
// Note:  You should copy these to your own codebase as we cannot link them in here
//
PVOID operator new(size_t size)
      { return VsDebAlloc(0, size); }
PVOID operator new(size_t size, LPCSTR pszFile, UINT uLine)
      { return VsDebugAllocInternal(DEFAULT_HEAP, 0, size, pszFile, uLine, INSTANCE_GLOBAL, NULL); }
void  operator delete(PVOID pv)
      { VsDebFree(pv); }
#endif // 0

PVOID __cdecl operator new(size_t size);
PVOID __cdecl operator new(size_t size, LPCSTR pszFile, UINT uLine);
void  __cdecl operator delete(PVOID pv);
#define new new(__FILE__, __LINE__)

#define calloc(num, size)     VsDebAlloc(0, (num) * (size))
#define malloc(size)          VsDebAlloc(0, (size))
#define realloc(pv, size)     VsDebSafeRealloc((pv), 0, (size))
#define _recalloc(pv, num, size) VsDebSafeRealloc((pv), 0, (num) * (size))
#define free(pv)              VsDebFree((pv))

#define HeapAlloc(heap, flags, size)        VsDebHeapAlloc((heap), (flags), (size))
#define HeapReAlloc(heap, flags, pv, size)  VsDebHeapRealloc((heap), (flags), (pv), (size))
#define HeapFree(heap, flags, pv)           VsDebHeapFree((heap), (pv))
#define HeapSize(heap, flags, pv)           VsDebHeapSize((heap), (pv))

#define CoTaskMemAlloc(cb)        VsDebOleAlloc(cb)
#define CoTaskMemRealloc(pv, cb)  VsDebOleRealloc(pv, cb)
#define CoTaskMemFree(pv)         VsDebOleFree(pv)

#define SysAllocString(str)             VsDebSysAllocString((str))
#define SysAllocStringByteLen(str, cb)  VsDebSysAllocStringByteLen((str), (cb))
#define SysAllocStringLen(str, cch)     VsDebSysAllocStringLen((str), (cch))

#endif // DEBUG

//=--------------------------------------------------------------------------=
//=--------------------------------------------------------------------------=
#endif // VSASSERT_SET_DEFAULTS

#ifdef __cplusplus
//=--------------------------------------------------------------------------=
// This provides users with a way to create switches that only appear in
// debug.  Users can change these switches through a debug dialog that is
// automatically updated with the latest switches as package DLL's are loaded.
//
// These switches are persisted to a vsdebug.ini file in the windows directory.
//
// ...at the top of your code somewhere...
//
// DEFINE_SWITCH(FDisplayZonkerStatus, "Java", "Display Zonker Status");
//
//      FDisplayZonkerStatus    - the name of your switch
//      Java                    - some logical package grouping of your desire
//      Display Zonker Status   - text to display in the dialog
//
// ...then, wherever you would actually write the zonker status...
//
// if(FSWITCH(FDisplayZonkerStatus))
//    OutputDebugString(szZonkerStatus);
//
// Finally, if you need the switch in another file, use this construct:
//
// EXTERN_SWITCH(FDisplayZonkerStatus);
//
// Switches can be shared anywhere within the same DLL, but cannot be
// shared across DLLs.
//
//

class DebSwitch;
CLINKAGE PVOID ENTRYPOINT VsGetDebSwitchHead(void);
CLINKAGE VOID  ENTRYPOINT VsLoadSwitchState(DebSwitch *pSwitch);

class DebSwitch
  {
  public:
    DebSwitch(LPCSTR pszName, LPCSTR pszPackage, LPCSTR pszDesc)
      {
      // set fields
      m_pszName = pszName;
      m_pszPackage = pszPackage;
      m_pszDesc = pszDesc;
      m_fSet = FALSE;

      // link into global list of switches
      DebSwitch **ppHead = (DebSwitch **)VsGetDebSwitchHead();
      this->m_pdebswNext = *ppHead;
      *ppHead = this;

      // now load the switch state.  We must do this piecemeal
      // because DLL's may come and go at random times
      //
      VsLoadSwitchState(this);
      }

    ~DebSwitch()
      {
      // find our link and remove it.
      DebSwitch **ppHead = (DebSwitch **)VsGetDebSwitchHead();
      while (*ppHead) 
        {
        if (*ppHead == this) 
          {
          *ppHead = (*ppHead)->m_pdebswNext;
          break;
          }

          ppHead = &((*ppHead)->m_pdebswNext);
        }
      }

    BOOL m_fSet;              // TRUE if switch is enabled
    LPCSTR m_pszPackage;       // the package name
    LPCSTR m_pszName;          // name of the switch
    LPCSTR m_pszDesc;          // description string
    DebSwitch* m_pdebswNext;  // next switch in global list
  };

#define VSDEFINE_SWITCH(NAME, PACKAGE, DESC)  DebSwitch g_Switch_ ## NAME(#NAME, PACKAGE, DESC)
#define VSEXTERN_SWITCH(NAME)                 extern DebSwitch g_Switch_ ## NAME
#define VSFSWITCH(NAME)                       (g_Switch_ ## NAME . m_fSet)

//****************************************************************************
// Externally Created Switches
//
//****************************************************************************

// These entry points provide a way for packages created in non C languages
// to create and use VS debug switches.  If you wish to run DEBUG binaries
// using these entry points in non-DEBUG drops you should use dynamic binding
// and handle binding failures by providing default switch values.

STDAPI_(PVOID) VsExternalAddSwitch(LPCSTR pszName, LPCSTR pszPackage, LPCSTR pszDesc);
STDAPI_(BOOL) VsExternalQuerySwitch(PVOID pSwitch);
STDAPI_(VOID) VsExternalRemoveSwitch(PVOID pSwitch);


// DebSwitchExt is a version of DebugSwitch that is instantiated via dll
// entry point instead of by macro. The only difference is that this version
// must copy the provided strings since the pointers are not guaranteed to
// point to non-volatile memory.

class DebSwitchExt : public DebSwitch
  {
  public:
    DebSwitchExt(LPCSTR pszName, LPCSTR pszPackage, LPCSTR pszDesc);

    CHAR m_rgszName[100];
    CHAR m_rgszPackage[100];
    CHAR m_rgszDesc[300];
  };

//****************************************************************************
#endif


#else // DEBUG


//=--------------------------------------------------------------------------=
// Retail defines
//
#define VSDEFINE_SWITCH(NAME, PACKAGE, DESC)
#define VSEXTERN_SWITCH(NAME)
#define VSFSWITCH(NAME) FALSE

#define VsIgnoreAllocs(f)

#endif // DEBUG

/////
// This will show up in Debug.Threads in the VC debugger
/////
CLINKAGE VOID ENTRYPOINT VsNameThisThread (LPCSTR szThreadName);


//****************************************************************************
//	    REFERENCE TRACKING
//****************************************************************************
/*
  Tracker Macros
  ==============

    These macros can be used to record AddRef and Release on COM objects so
    reference counting errors can be pinpointed.

    How these macros work:
    =====================

    Whenever a reference is added by calling AddRef on a COM object, there is
    usually a variable somewhere that holds a pointer to the object.  This
    variable "owns" the reference.  When this variable is cleared (or goes out
    of scope) the reference should be released.  If there is a reference leak, it
    means that one of these variables didn't make its call to Release.

    What these macros do in the debug build is that whenever anybody calls
    AddRef, and entry is added to a table.  The entry stores the COM IUnkown
    pointer, the address of the variable that holds this pointer, and a pass count.
    Whenever anybody calls Release, we search the table for an entry where the COM
    IUnknown pointer matches and the address of the variable matches, and remove it.
    (If we don't find it we assert.  This means somebody is over-releasing.)

    Then, at shutdown, we make sure the table is empty.  If it is not empty, then
    we assert.  With the PassCount number, you can restart and break at the
    offending AddRef.  I.e., you can break at exactly the point where somebody
    AddRefs an object but never calls Release.


    How to use:
    ===========

    Here is some sample code which uses these macros.

    IFoo *g_pFoo;

    void PlayWithObjects()
    {
      IFoo *pFoo = NULL;
      IFoo *pFoo2 = NULL;

      GetFooFromSomewhere(&pFoo);
      TRACKER_RECEIVE(pFoo);

      pFoo2 = pFoo;
      TRACKER_ADDREF(pFoo2);

      // assign it to our global variable.  This global
      // is going to hold it for a long time, so we don't
      // release it at the end of this function.  Somebody somewhere
      // else is going to release it later.
      g_pFoo = pFoo;
      TRACKER_ADDREF(g_pFoo);

      // use pFoo and pFoo2 for a while

      TRACKER_RELEASE(pFoo);
      TRACKER_RELEASE(pFoo2);
    }

    Whenever you are given an object (because you called some function that
    returns it to you) and you now hold a reference to it, call TRACKER_RECEIVE.
    (This does nothing in the non-debug build.)  This will make sure you
    remember to call release later.

    Whenever you need to addref (because you copy the pointer into another
    variable, for example) use TRACKER_ADDREF.

    Whenever you need to release (when your variables are going out of scope),
    call TRACKER_RELEASE.

    Other notes: if you're giving out an object to your caller, you will need
    to use TRACKER_GIVE_AWAY.  If you're transferring ownership from one variable
    to another, use TRACKER_ASSIGN.

*/

//****************************************************************************

//---------------------------------------------------------------------------

#ifdef DEBUG
#define TRACKER_ASSERT_EVERYTHING_RELEASED() TrackerAssertEverythingReleased()
#else
#define TRACKER_ASSERT_EVERYTHING_RELEASED()
#define TrackerTransfer() do {} while (0)
#endif	// DEBUG

#ifdef DEBUG

#define TRACKER_ADDREF(punk1) do {	  \
    VSASSERT ((punk1), "TRACKER can't addref NULL");  \
    (punk1)->AddRef();			  	  \
    TrackerTransfer ((punk1), NULL, &(punk1));	  \
  } while (0)					  \

#define TRACKER_RELEASE(punk) do {	    	\
    VSASSERT (punk, "TRACKER can't release NULL");	\
    (punk)->Release();			    	\
    TrackerTransfer ((punk), &(punk), NULL);   	\
    (punk) = NULL;			    	\
  } while (0)					\

#define TRACKER_RECEIVE(punk) do {	       		\
    VSASSERT (punk, "TRACKER can't receive NULL");	\
    TrackerTransfer ((punk), NULL, &(punk)); 		\
  } while (0)						\


#define TRACKER_GIVE_AWAY(punk) do {			\
    VSASSERT (punk, "TRACKER can't give away NULL");	\
    TrackerTransfer ((punk), &(punk), NULL); 		\
  } while (0)						\


#define TRACKER_ASSIGN(punkDest, punkSrc) do {		  \
    VSASSERT (punkSrc, "TRACKER can't assign NULL");	  \
    VSASSERT (!punkDest, "TRACKER must assign to NULL");\
    (punkDest) = (punkSrc);				  \
    TrackerTransfer ((punkSrc), &(punkSrc), &(punkDest));  \
    punkSrc = NULL;					  \
  } while (0)


#define TRACKER_COPY(punkDest, punkSrc) do {		\
    VSASSERT ((punkSrc), "TRACKER can't assign NULL");	\
    VSASSERT ((!punkDest), "TRACKER must assign to NULL");\
    (punkDest) = (punkSrc);				\
    TRACKER_ADDREF ((punkDest));			\
  } while (0)

CLINKAGE void ENTRYPOINT  TrackerTransfer(IUnknown *punk, void *pvFrom, void *pvTo);
CLINKAGE void ENTRYPOINT  TrackerAssertEverythingReleased();

#else // DEBUG

#define TRACKER_ADDREF(punk)	    ((punk)->AddRef())
#define TRACKER_RELEASE(punk)	    ((punk) -> Release(), (punk) = NULL)
#define TRACKER_RECEIVE(punk)	    do {} while (0)
#define TRACKER_GIVE_AWAY(punk)	    do {} while (0)
#define TRACKER_ASSIGN(punkD, punkS) ((punkD) = (punkS), (punkS) = NULL)
#define TRACKER_COPY(punkD, punkS)  ((punkD) = (punkS), (punkD) -> AddRef())

#endif // DEBUG

#define TRACKER_CHECK_RELEASE(punk) do {	\
    if (punk) {					\
      TRACKER_RELEASE(punk);			\
    }						\
  } while (0)					


//******************** Dynamic casting

// The new C++ standard defines dynamic_cast<type> (expr), which appears
// to be particulary usefull for verifying that a pointer to one class
// can safely be casted to a pointer to another.  However, this safety
// requires the use of RTTI, which currently imposes a significant overhead.
// We could almost use static_cast when RTTI is not available, but it has
// slightly different semantics in some circumstances

// The defined(DEBUG) is uneccesary since VSASSERT will go away for retail

#if defined (_CPPRTTI) && defined (DEBUG)

#define ASSERT_TYPE(type, expr) do { \
  VSASSERT ((dynamic_cast <type> (expr)), "Wrong type"); \
  }  while (0)

#else

#define ASSERT_TYPE(type, expr) do { } while (0)

#endif


#pragma pop_macro("DEBUG")

#endif // _INC_VSASSERT_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\vsdebugguids.h ===
// VsDebugGuids.h
//

#ifdef SHOW_INCLUDES
#pragma message("Includes " __FILE__)
#endif

//#ifndef __GUIDS_H_
//#define __GUIDS_H_

#ifdef SHOW_INCLUDES
#pragma message("+++INCLUDING " __FILE__)
#endif


#ifndef _CTC_GUIDS_

#include "objext.h"        // for ILocalRegistry
#include "oleipc.h"        // for ComponentUIManager


// {A27B4E24-A735-4D1D-B8E7-9716E1E3D8E0}
DEFINE_GUID(guidTextEditorFontCategory,
            0xA27B4E24, 0xA735, 0x4D1D, 0xB8, 0xE7, 0x97, 0x16, 0xE1, 0xE3, 0xD8, 0xE0);

// {C9DD4A58-47FB-11d2-83E7-00C04F9902C1}
DEFINE_GUID(guidVSDebugGroup,
            0xC9DD4A58, 0x47FB, 0x11D2, 0x83, 0xE7, 0x00, 0xC0, 0x4F, 0x99, 0x02, 0xC1);

// {C9DD4A59-47FB-11d2-83E7-00C04F9902C1}
DEFINE_GUID(guidVSDebugCommand,
            0xC9DD4A59, 0x47FB, 0x11D2, 0x83, 0xE7, 0x00, 0xC0, 0x4F, 0x99, 0x02, 0xC1);

// {FA9EB535-C624-13D0-AE1F-00A0190FF4C3}
DEFINE_GUID(guidDbgOptGeneralPage,
            0xfa9eb535, 0xc624, 0x13d0, 0xae, 0x1f, 0x00, 0xa0, 0x19, 0x0f, 0xf4, 0xc3);

// {7A8A4060-D909-4485-9860-748BC8713A74}
DEFINE_GUID(guidDbgOptFindSourcePage,
            0x7a8a4060, 0xd909, 0x4485, 0x98, 0x60, 0x74, 0x8b, 0xc8, 0x71, 0x3a, 0x74);

// {C15095AA-49C0-40AC-AE78-611318DD9925}
DEFINE_GUID(guidDbgOptFindSymbolPage,
            0xC15095AA, 0x49C0, 0x40AC, 0xAE, 0x78, 0x61, 0x13, 0x18, 0xDD, 0x99, 0x25);

// {6C3ECAA6-3EFB-4b0d-9660-2A3BA5B8440E}
DEFINE_GUID(guidDbgOptENCPage,
            0x6c3ecaa6, 0x3efb, 0x4b0d, 0x96, 0x60, 0x2a, 0x3b, 0xa5, 0xb8, 0x44, 0xe);

// {3E08D829-6989-45c3-97DA-F8BF3C49AEAB}
DEFINE_GUID(guidDbgOptNativePage,
            0x3e08d829, 0x6989, 0x45c3, 0x97, 0xda, 0xf8, 0xbf, 0x3c, 0x49, 0xae, 0xab);

// {B9EFCAF2-9EAE-4022-9E39-FA947666ADD9}
DEFINE_GUID(guidDbgOptJITPage,
            0xb9efcaf2, 0x9eae, 0x4022, 0x9e, 0x39, 0xfa, 0x94, 0x76, 0x66, 0xad, 0xd9);

// {1F5E080F-CBD2-459C-8267-39fd83032166}
DEFINE_GUID(guidDbgOptSymbolPage,
            0x1f5e080f, 0xcbd2, 0x459c, 0x82, 0x67, 0x39, 0xfd, 0x83, 0x03, 0x21, 0x66);

// {FC076020-078A-11D1-A7DF-00A0C9110051}
DEFINE_GUID(guidDebugOutputPane,
            0xfc076020, 0x078a, 0x11d1, 0xa7, 0xdf, 0x00, 0xa0, 0xc9, 0x11, 0x00, 0x51);

// {C16FB7C4-9F84-11D2-8405-00C04F9902C1}
DEFINE_GUID(guidDisasmLangSvc,
            0xc16fb7c4, 0x9f84, 0x11d2, 0x84, 0x05, 0x00, 0xc0, 0x4f, 0x99, 0x02, 0xc1);

// {3BFC1046-049F-11d3-B87F-00C04F79E479}
DEFINE_GUID(guidMemoryView,
            0x3bfc1046, 0x49f, 0x11d3, 0xb8, 0x7f, 0x0, 0xc0, 0x4f, 0x79, 0xe4, 0x79);

// {DF38847E-CC19-11d2-8ADA-00C04F79E479}
DEFINE_GUID(guidMemoryLangSvc,
            0xdf38847e, 0xcc19, 0x11d2, 0x8a, 0xda, 0x0, 0xc0, 0x4f, 0x79, 0xe4, 0x79);

// {13F6A341-59C0-11d3-994C-00C04F68FDAF}
DEFINE_GUID(guidRegisterLangSvc,
            0x13f6a341, 0x59c0, 0x11d3, 0x99, 0x4c, 0x0, 0xc0, 0x4f, 0x68, 0xfd, 0xaf);

// {75058B12-F5A9-4b1c-9161-9B3754D7488F}
DEFINE_GUID(guidENCStaleLangSvc,
            0x75058b12, 0xf5a9, 0x4b1c, 0x91, 0x61, 0x9b, 0x37, 0x54, 0xd7, 0x48, 0x8f);


// {44B05627-95C2-4CE8-BDCD-4AA722785093}
DEFINE_GUID(guidDebuggerMarkerService,
            0x44b05627, 0x95c2, 0x4ce8, 0xbd, 0xcd, 0x4a, 0xa7, 0x22, 0x78, 0x50, 0x93);

// UNDONE: this should be defined by the environment in vsshell.idl
// {A2FE74E1-B743-11d0-AE1A-00A0C90FFFC3}
DEFINE_GUID(guidExternalFilesProject,
            0xa2fe74e1, 0xb743, 0x11d0, 0xae, 0x1a, 0x00, 0xa0, 0xc9, 0x0f, 0xff, 0xc3);

// {201BFBC6-D20B-11d2-910F-00C04F9902C1}
// this CmdUIContext is defined when the debugger is started for Just-In-Time debugging
DEFINE_GUID(guidJitDebug,
            0x201bfbc6, 0xd20b, 0x11d2, 0x91, 0x0f, 0x00, 0xc0, 0x4f, 0x99, 0x02, 0xc1);

// {E5776E42-0966-11d3-B87F-00C04F79E479}
// This is a private interface used by the memory view for communicating with a Language service.
DEFINE_GUID(IID_IMemoryViewLangServiceInterop,
            0xe5776e42, 0x966, 0x11d3, 0xb8, 0x7f, 0x0, 0xc0, 0x4f, 0x79, 0xe4, 0x79);

// {8C7DDC02-C7B5-4532-AB98-9AEC7C9E02FA}
DEFINE_GUID(guidENCOptionRelink,
            0x8c7ddc02, 0xc7b5, 0x4532, 0xab, 0x98, 0x9a, 0xec, 0x7c, 0x9e, 0x2, 0xfa);

// {C46344BE-C093-4672-AAFC-80012715798C}
DEFINE_GUID(guidENCOptionPrecompile,
            0xc46344be, 0xc093, 0x4672, 0xaa, 0xfc, 0x80, 0x1, 0x27, 0x15, 0x79, 0x8c);

// {EE71B5E6-1FE6-4f14-8D73-0981BC4CF5BA}
DEFINE_GUID(guidENCOptionNativeApplyOnContinue,
            0xee71b5e6, 0x1fe6, 0x4f14, 0x8d, 0x73, 0x9, 0x81, 0xbc, 0x4c, 0xf5, 0xba);

// {ABA46DCE-94D3-469f-A785-D7B529C5B1B7}
DEFINE_GUID(guidENCOptionNativeAllowRemote, 
            0xaba46dce, 0x94d3, 0x469f, 0xa7, 0x85, 0xd7, 0xb5, 0x29, 0xc5, 0xb1, 0xb7);

// {ce2eced5-c21c-464c-9b45-15e10e9f9ef9}
DEFINE_GUID(guidFontColorMemory,
            0xce2eced5, 0xc21c, 0x464c, 0x9b, 0x45, 0x15, 0xe1, 0x0e, 0x9f, 0x9e, 0xf9);

// {40660f54-80fa-4375-89a3-8d06aa954eba}
DEFINE_GUID(guidFontColorRegisters,
            0x40660f54, 0x80fa, 0x4375, 0x89, 0xa3, 0x8d, 0x06, 0xaa, 0x95, 0x4e, 0xba);

// {3B70A4AE-BB91-4abe-A05C-C4DE07B9763E}
DEFINE_GUID(guidDebuggerFontColorSvc,
            0x3b70a4ae, 0xbb91, 0x4abe, 0xa0, 0x5c, 0xc4, 0xde, 0x7, 0xb9, 0x76, 0x3e);

// {358463D0-D084-400f-997E-A34FC570BC72}
DEFINE_GUID(guidWatchFontColor,
            0x358463d0, 0xd084, 0x400f, 0x99, 0x7e, 0xa3, 0x4f, 0xc5, 0x70, 0xbc, 0x72);

// {A7EE6BEE-D0AA-4b2f-AD9D-748276A725F6}
DEFINE_GUID(guidAutosFontColor,
            0xa7ee6bee, 0xd0aa, 0x4b2f, 0xad, 0x9d, 0x74, 0x82, 0x76, 0xa7, 0x25, 0xf6);

// {8259ACED-490A-41b3-A0FB-64C842CCDC80}
DEFINE_GUID(guidLocalsFontColor,
            0x8259aced, 0x490a, 0x41b3, 0xa0, 0xfb, 0x64, 0xc8, 0x42, 0xcc, 0xdc, 0x80);

// {FD2219AF-EBF8-4116-A801-3B503C48DFF0}
DEFINE_GUID(guidCallStackFontColor,
            0xfd2219af, 0xebf8, 0x4116, 0xa8, 0x1, 0x3b, 0x50, 0x3c, 0x48, 0xdf, 0xf0);

// {BB8FE807-A186-404a-81FA-D20B908CA93B}
DEFINE_GUID(guidThreadsFontColor,
            0xbb8fe807, 0xa186, 0x404a, 0x81, 0xfa, 0xd2, 0xb, 0x90, 0x8c, 0xa9, 0x3b);

// {F7B7B222-E186-48df-A5EE-174E8129891B}
DEFINE_GUID(guidDataTipsFontColor,
            0xf7b7b222, 0xe186, 0x48df, 0xa5, 0xee, 0x17, 0x4e, 0x81, 0x29, 0x89, 0x1b);

// {B20C0001-0836-4535-A5E8-96E595B1F094}
DEFINE_GUID(guidDebugLocationFontColor, 
            0xb20c0001, 0x836, 0x4535, 0xa5, 0xe8, 0x96, 0xe5, 0x95, 0xb1, 0xf0, 0x94);


// {35B25E75-AB53-4c5d-80EA-6682EBB2BBBD}
DEFINE_GUID(guidVarWndsFontColor,
            0x35b25e75, 0xab53, 0x4c5d, 0x80, 0xea, 0x66, 0x82, 0xeb, 0xb2, 0xbb, 0xbd);

// {8DAFF493-5F7C-4e19-81BF-D5E63C1545D3}
DEFINE_GUID(guidProjectLaunchSettings,
			0x8daff493, 0x5f7c, 0x4e19, 0x81, 0xbf, 0xd5, 0xe6, 0x3c, 0x15, 0x45, 0xd3);

// {60AFC91C-3AD5-4D33-8C00-D8EF5DEDDCD1}
DEFINE_GUID(guidITraceDebuggerService,
			0x60afc91c, 0x3ad5, 0x4d33, 0x8c, 0x00, 0xd8, 0xef, 0x5d, 0xed, 0xdc, 0xd1);

#else  // _CTC_GUIDS

#define guidVSDebugPackage        { 0xC9DD4A57, 0x47FB, 0x11D2, { 0x83, 0xE7, 0x00, 0xC0, 0x4F, 0x99, 0x02, 0xC1 } }
#define guidVSDebugGroup          { 0xC9DD4A58, 0x47FB, 0x11D2, { 0x83, 0xE7, 0x00, 0xC0, 0x4F, 0x99, 0x02, 0xC1 } }
#define guidVSDebugCommand        { 0xC9DD4A59, 0x47FB, 0x11D2, { 0x83, 0xE7, 0x00, 0xC0, 0x4F, 0x99, 0x02, 0xC1 } }

#define guidDbgOptGeneralPage     { 0xfa9eb535, 0xc624, 0x13d0, { 0xae, 0x1f, 0x00, 0xa0, 0x19, 0x0f, 0xf4, 0xc3 } }
#define guidDbgOptFindSourcePage  { 0x7a8a4060, 0xd909, 0x4485, { 0x98, 0x60, 0x74, 0x8b, 0xc8, 0x71, 0x3a, 0x74 } }
#define guidDbgOptFindSymbolPage  { 0xc15095aa, 0x49c0, 0x40ac, { 0xae, 0x78, 0x61, 0x13, 0x18, 0xdd, 0x99, 0x25 } }
#define guidDbgOptENCPage         { 0x6c3ecaa6, 0x3efb, 0x4b0d, { 0x96, 0x60, 0x2a, 0x3b, 0xa5, 0xb8, 0x44, 0x0e } }
#define guidDbgOptNativePage      { 0x3e08d829, 0x6989, 0x45c3, { 0x97, 0xda, 0xf8, 0xbf, 0x3c, 0x49, 0xae, 0xab } }
#define guidDbgOptJITPage         { 0xb9efcaf2, 0x9eae, 0x4022, { 0x9e, 0x39, 0xfa, 0x94, 0x76, 0x66, 0xad, 0xd9 } }

#define guidDebugOutputPane       { 0xfc076020, 0x078a, 0x11d1, { 0xa7, 0xdf, 0x00, 0xa0, 0xc9, 0x11, 0x00, 0x51 } }
#define guidDisasmLangSvc         { 0xc16fb7c4, 0x9f84, 0x11d2, { 0x84, 0x05, 0x00, 0xc0, 0x4f, 0x99, 0x02, 0xc1 } }
#define guidMemoryLangSvc         { 0xdf38847e, 0xcc19, 0x11d2, { 0x8a, 0xda, 0x00, 0xc0, 0x4f, 0x79, 0xe4, 0x79 } }

#define guidFontColorMemory       { 0xce2eced5, 0xc21c, 0x464c, { 0x9b, 0x45, 0x15, 0xe1, 0x0e, 0x9f, 0x9e, 0xf9 } }
#define guidFontColorRegisters    { 0x40660f54, 0x80fa, 0x4375, { 0x89, 0xa3, 0x8d, 0x06, 0xaa, 0x95, 0x4e, 0xba } }

#define guidDebuggerFontColorSvc  { 0x3b70a4ae, 0xbb91, 0x4abe, { 0xa0, 0x5c, 0xc4, 0xde, 0x7, 0xb9, 0x76, 0x3e } }
#define guidWatchFontColor    { 0x358463d0, 0xd084, 0x400f, { 0x99, 0x7e, 0xa3, 0x4f, 0xc5, 0x70, 0xbc, 0x72 } }
#define guidAutosFontColor    { 0xa7ee6bee, 0xd0aa, 0x4b2f, { 0xad, 0x9d, 0x74, 0x82, 0x76, 0xa7, 0x25, 0xf6 } }
#define guidLocalsFontColor    { 0x8259aced, 0x490a, 0x41b3, { 0xa0, 0xfb, 0x64, 0xc8, 0x42, 0xcc, 0xdc, 0x80 } }
#define guidCallStackFontColor   { 0xfd2219af, 0xebf8, 0x4116, { 0xa8, 0x1, 0x3b, 0x50, 0x3c, 0x48, 0xdf, 0xf0  } }
#define guidThreadsFontColor   { 0xbb8fe807, 0xa186, 0x404a, { 0x81, 0xfa, 0xd2, 0xb, 0x90, 0x8c, 0xa9, 0x3b  } }
#define guidDataTipsFontColor   { 0xf7b7b222, 0xe186, 0x48df, { 0xa5, 0xee, 0x17, 0x4e, 0x81, 0x29, 0x89, 0x1b } }
#define guidVarWndsFontColor   { 0x35b25e75, 0xab53, 0x4c5d, { 0x80, 0xea, 0x66, 0x82, 0xeb, 0xb2, 0xbb, 0xbd } };

#endif // _CTC_GUIDS_


//#endif // __GUIDS_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\vseeguids.h ===
/*-----------------------------------------------------------------------------
Microsoft VSEE

Copyright 1995-2000 Microsoft Corporation. All Rights Reserved.

@doc
@module VseeGuids.h - Guids for VSEE services/interfaces |
This is included by .idl files to define guids for VSEE services/interfaces.
These are the non-shell-SDK interfaces, in idl/vsee

@owner Source Control Integration Team
-----------------------------------------------------------------------------*/
#pragma once

#ifdef _WIN64

#define uuid_IVsSccManager							53474C4D-0F05-4735-8AAC-264109CF68AC
#define uuid_IVsSccProject							53474C4D-CD19-4928-A834-AFCD8A966C36
#define uuid_IVsQueryEditQuerySave					53474C4D-7E28-4d0c-A00F-3446801350CE
#define uuid_IVsTrackProjectDocuments				53474C4D-449A-4487-A56F-740CF8130032
#define uuid_IVsTrackProjectDocumentsEvents			53474C4D-A98B-4fd3-AA79-B182EE26185B
#define uuid_IVsSccEngine							53474C4D-F82C-11d0-8D84-00AA00A3F593
#define uuid_IVsSccPopulateList						53474C4D-F8CF-11d0-8D84-00AA00A3F593
#define uuid_IVsSccToolsOptions						53474C4D-304B-4D82-AD93-074816C1A0E5
#define uuid_IVsSccManagerTooltip					53474C4D-DF28-406D-81DA-96DEEB800B64


#else

#define uuid_IVsSccManager							53544C4D-0F05-4735-8AAC-264109CF68AC
#define uuid_IVsSccProject							53544C4D-CD19-4928-A834-AFCD8A966C36
#define uuid_IVsQueryEditQuerySave					53544C4D-7E28-4d0c-A00F-3446801350CE
#define uuid_IVsTrackProjectDocuments				53544C4D-449A-4487-A56F-740CF8130032
#define uuid_IVsTrackProjectDocumentsEvents			53544C4D-A98B-4fd3-AA79-B182EE26185B
#define uuid_IVsSccEngine							53544C4D-F82C-11d0-8D84-00AA00A3F593
#define uuid_IVsSccPopulateList						53544C4D-F8CF-11d0-8D84-00AA00A3F593
#define uuid_IVsSccToolsOptions						53544C4D-304B-4D82-AD93-074816C1A0E5
#define uuid_IVsSccManagerTooltip					53544C4D-DF28-406D-81DA-96DEEB800B64

#endif

#define uuid_SVsSccToolsOptions						53544C4D-104B-4D82-AD93-074816C1A0E5
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\VSEditor.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for VSEditor.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __VSEditor_h__
#define __VSEditor_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IEnumeratorBSTR_FWD_DEFINED__
#define __IEnumeratorBSTR_FWD_DEFINED__
typedef interface IEnumeratorBSTR IEnumeratorBSTR;
#endif 	/* __IEnumeratorBSTR_FWD_DEFINED__ */


#ifndef __IEnumerableBSTR_FWD_DEFINED__
#define __IEnumerableBSTR_FWD_DEFINED__
typedef interface IEnumerableBSTR IEnumerableBSTR;
#endif 	/* __IEnumerableBSTR_FWD_DEFINED__ */


#ifndef __IEnumeratorIVxContentType_FWD_DEFINED__
#define __IEnumeratorIVxContentType_FWD_DEFINED__
typedef interface IEnumeratorIVxContentType IEnumeratorIVxContentType;
#endif 	/* __IEnumeratorIVxContentType_FWD_DEFINED__ */


#ifndef __IEnumerableIVxContentType_FWD_DEFINED__
#define __IEnumerableIVxContentType_FWD_DEFINED__
typedef interface IEnumerableIVxContentType IEnumerableIVxContentType;
#endif 	/* __IEnumerableIVxContentType_FWD_DEFINED__ */


#ifndef __IVxTextDocumentFileActionEvent_FWD_DEFINED__
#define __IVxTextDocumentFileActionEvent_FWD_DEFINED__
typedef interface IVxTextDocumentFileActionEvent IVxTextDocumentFileActionEvent;
#endif 	/* __IVxTextDocumentFileActionEvent_FWD_DEFINED__ */


#ifndef __IVxEventArgsEvent_FWD_DEFINED__
#define __IVxEventArgsEvent_FWD_DEFINED__
typedef interface IVxEventArgsEvent IVxEventArgsEvent;
#endif 	/* __IVxEventArgsEvent_FWD_DEFINED__ */


#ifndef __IVxTextDocumentEvent_FWD_DEFINED__
#define __IVxTextDocumentEvent_FWD_DEFINED__
typedef interface IVxTextDocumentEvent IVxTextDocumentEvent;
#endif 	/* __IVxTextDocumentEvent_FWD_DEFINED__ */


#ifndef __IVxSnapshotSpanEvent_FWD_DEFINED__
#define __IVxSnapshotSpanEvent_FWD_DEFINED__
typedef interface IVxSnapshotSpanEvent IVxSnapshotSpanEvent;
#endif 	/* __IVxSnapshotSpanEvent_FWD_DEFINED__ */


#ifndef __IVxTextContentChangedEvent_FWD_DEFINED__
#define __IVxTextContentChangedEvent_FWD_DEFINED__
typedef interface IVxTextContentChangedEvent IVxTextContentChangedEvent;
#endif 	/* __IVxTextContentChangedEvent_FWD_DEFINED__ */


#ifndef __IVxTextContentChangingEvent_FWD_DEFINED__
#define __IVxTextContentChangingEvent_FWD_DEFINED__
typedef interface IVxTextContentChangingEvent IVxTextContentChangingEvent;
#endif 	/* __IVxTextContentChangingEvent_FWD_DEFINED__ */


#ifndef __IVxContentTypeChangedEvent_FWD_DEFINED__
#define __IVxContentTypeChangedEvent_FWD_DEFINED__
typedef interface IVxContentTypeChangedEvent IVxContentTypeChangedEvent;
#endif 	/* __IVxContentTypeChangedEvent_FWD_DEFINED__ */


#ifndef __IVxTextBufferCreatedEvent_FWD_DEFINED__
#define __IVxTextBufferCreatedEvent_FWD_DEFINED__
typedef interface IVxTextBufferCreatedEvent IVxTextBufferCreatedEvent;
#endif 	/* __IVxTextBufferCreatedEvent_FWD_DEFINED__ */


#ifndef __IEnumeratorIVxTextSnapshotLine_FWD_DEFINED__
#define __IEnumeratorIVxTextSnapshotLine_FWD_DEFINED__
typedef interface IEnumeratorIVxTextSnapshotLine IEnumeratorIVxTextSnapshotLine;
#endif 	/* __IEnumeratorIVxTextSnapshotLine_FWD_DEFINED__ */


#ifndef __IEnumerableIVxTextSnapshotLine_FWD_DEFINED__
#define __IEnumerableIVxTextSnapshotLine_FWD_DEFINED__
typedef interface IEnumerableIVxTextSnapshotLine IEnumerableIVxTextSnapshotLine;
#endif 	/* __IEnumerableIVxTextSnapshotLine_FWD_DEFINED__ */


#ifndef __IEnumeratorVxSpan_FWD_DEFINED__
#define __IEnumeratorVxSpan_FWD_DEFINED__
typedef interface IEnumeratorVxSpan IEnumeratorVxSpan;
#endif 	/* __IEnumeratorVxSpan_FWD_DEFINED__ */


#ifndef __IListVxSpan_FWD_DEFINED__
#define __IListVxSpan_FWD_DEFINED__
typedef interface IListVxSpan IListVxSpan;
#endif 	/* __IListVxSpan_FWD_DEFINED__ */


#ifndef __IEnumeratorIVxTextBuffer_FWD_DEFINED__
#define __IEnumeratorIVxTextBuffer_FWD_DEFINED__
typedef interface IEnumeratorIVxTextBuffer IEnumeratorIVxTextBuffer;
#endif 	/* __IEnumeratorIVxTextBuffer_FWD_DEFINED__ */


#ifndef __IListIVxTextBuffer_FWD_DEFINED__
#define __IListIVxTextBuffer_FWD_DEFINED__
typedef interface IListIVxTextBuffer IListIVxTextBuffer;
#endif 	/* __IListIVxTextBuffer_FWD_DEFINED__ */


#ifndef __IVxGraphBuffersChangedEvent_FWD_DEFINED__
#define __IVxGraphBuffersChangedEvent_FWD_DEFINED__
typedef interface IVxGraphBuffersChangedEvent IVxGraphBuffersChangedEvent;
#endif 	/* __IVxGraphBuffersChangedEvent_FWD_DEFINED__ */


#ifndef __IVxGraphBufferContentTypeChangedEvent_FWD_DEFINED__
#define __IVxGraphBufferContentTypeChangedEvent_FWD_DEFINED__
typedef interface IVxGraphBufferContentTypeChangedEvent IVxGraphBufferContentTypeChangedEvent;
#endif 	/* __IVxGraphBufferContentTypeChangedEvent_FWD_DEFINED__ */


#ifndef __IEnumeratorIVxTextSnapshot_FWD_DEFINED__
#define __IEnumeratorIVxTextSnapshot_FWD_DEFINED__
typedef interface IEnumeratorIVxTextSnapshot IEnumeratorIVxTextSnapshot;
#endif 	/* __IEnumeratorIVxTextSnapshot_FWD_DEFINED__ */


#ifndef __IListIVxTextSnapshot_FWD_DEFINED__
#define __IListIVxTextSnapshot_FWD_DEFINED__
typedef interface IListIVxTextSnapshot IListIVxTextSnapshot;
#endif 	/* __IListIVxTextSnapshot_FWD_DEFINED__ */


#ifndef __IEnumeratorVxSnapshotSpan_FWD_DEFINED__
#define __IEnumeratorVxSnapshotSpan_FWD_DEFINED__
typedef interface IEnumeratorVxSnapshotSpan IEnumeratorVxSnapshotSpan;
#endif 	/* __IEnumeratorVxSnapshotSpan_FWD_DEFINED__ */


#ifndef __IListVxSnapshotSpan_FWD_DEFINED__
#define __IListVxSnapshotSpan_FWD_DEFINED__
typedef interface IListVxSnapshotSpan IListVxSnapshotSpan;
#endif 	/* __IListVxSnapshotSpan_FWD_DEFINED__ */


#ifndef __IEnumeratorVxSnapshotPoint_FWD_DEFINED__
#define __IEnumeratorVxSnapshotPoint_FWD_DEFINED__
typedef interface IEnumeratorVxSnapshotPoint IEnumeratorVxSnapshotPoint;
#endif 	/* __IEnumeratorVxSnapshotPoint_FWD_DEFINED__ */


#ifndef __IListVxSnapshotPoint_FWD_DEFINED__
#define __IListVxSnapshotPoint_FWD_DEFINED__
typedef interface IListVxSnapshotPoint IListVxSnapshotPoint;
#endif 	/* __IListVxSnapshotPoint_FWD_DEFINED__ */


#ifndef __IEnumeratorIUnknown_FWD_DEFINED__
#define __IEnumeratorIUnknown_FWD_DEFINED__
typedef interface IEnumeratorIUnknown IEnumeratorIUnknown;
#endif 	/* __IEnumeratorIUnknown_FWD_DEFINED__ */


#ifndef __IListIUnknown_FWD_DEFINED__
#define __IListIUnknown_FWD_DEFINED__
typedef interface IListIUnknown IListIUnknown;
#endif 	/* __IListIUnknown_FWD_DEFINED__ */


#ifndef __IVxProjectionSourceSpansChangedEvent_FWD_DEFINED__
#define __IVxProjectionSourceSpansChangedEvent_FWD_DEFINED__
typedef interface IVxProjectionSourceSpansChangedEvent IVxProjectionSourceSpansChangedEvent;
#endif 	/* __IVxProjectionSourceSpansChangedEvent_FWD_DEFINED__ */


#ifndef __IVxProjectionSourceBuffersChangedEvent_FWD_DEFINED__
#define __IVxProjectionSourceBuffersChangedEvent_FWD_DEFINED__
typedef interface IVxProjectionSourceBuffersChangedEvent IVxProjectionSourceBuffersChangedEvent;
#endif 	/* __IVxProjectionSourceBuffersChangedEvent_FWD_DEFINED__ */


#ifndef __IEnumeratorIVxTrackingSpan_FWD_DEFINED__
#define __IEnumeratorIVxTrackingSpan_FWD_DEFINED__
typedef interface IEnumeratorIVxTrackingSpan IEnumeratorIVxTrackingSpan;
#endif 	/* __IEnumeratorIVxTrackingSpan_FWD_DEFINED__ */


#ifndef __IListIVxTrackingSpan_FWD_DEFINED__
#define __IListIVxTrackingSpan_FWD_DEFINED__
typedef interface IListIVxTrackingSpan IListIVxTrackingSpan;
#endif 	/* __IListIVxTrackingSpan_FWD_DEFINED__ */


#ifndef __IEnumeratorIVxTextChange_FWD_DEFINED__
#define __IEnumeratorIVxTextChange_FWD_DEFINED__
typedef interface IEnumeratorIVxTextChange IEnumeratorIVxTextChange;
#endif 	/* __IEnumeratorIVxTextChange_FWD_DEFINED__ */


#ifndef __IListIVxTextChange_FWD_DEFINED__
#define __IListIVxTextChange_FWD_DEFINED__
typedef interface IListIVxTextChange IListIVxTextChange;
#endif 	/* __IListIVxTextChange_FWD_DEFINED__ */


#ifndef __IVxDisposable_FWD_DEFINED__
#define __IVxDisposable_FWD_DEFINED__
typedef interface IVxDisposable IVxDisposable;
#endif 	/* __IVxDisposable_FWD_DEFINED__ */


#ifndef __IVxPropertyOwner_FWD_DEFINED__
#define __IVxPropertyOwner_FWD_DEFINED__
typedef interface IVxPropertyOwner IVxPropertyOwner;
#endif 	/* __IVxPropertyOwner_FWD_DEFINED__ */


#ifndef __IVxPropertyCollection_FWD_DEFINED__
#define __IVxPropertyCollection_FWD_DEFINED__
typedef interface IVxPropertyCollection IVxPropertyCollection;
#endif 	/* __IVxPropertyCollection_FWD_DEFINED__ */


#ifndef __IVxContentTypeRegistryService_FWD_DEFINED__
#define __IVxContentTypeRegistryService_FWD_DEFINED__
typedef interface IVxContentTypeRegistryService IVxContentTypeRegistryService;
#endif 	/* __IVxContentTypeRegistryService_FWD_DEFINED__ */


#ifndef __IVxContentType_FWD_DEFINED__
#define __IVxContentType_FWD_DEFINED__
typedef interface IVxContentType IVxContentType;
#endif 	/* __IVxContentType_FWD_DEFINED__ */


#ifndef __IVxTextDocument_FWD_DEFINED__
#define __IVxTextDocument_FWD_DEFINED__
typedef interface IVxTextDocument IVxTextDocument;
#endif 	/* __IVxTextDocument_FWD_DEFINED__ */


#ifndef __IVxTextDocumentFactoryService_FWD_DEFINED__
#define __IVxTextDocumentFactoryService_FWD_DEFINED__
typedef interface IVxTextDocumentFactoryService IVxTextDocumentFactoryService;
#endif 	/* __IVxTextDocumentFactoryService_FWD_DEFINED__ */


#ifndef __IVxTextDocumentEventArgs_FWD_DEFINED__
#define __IVxTextDocumentEventArgs_FWD_DEFINED__
typedef interface IVxTextDocumentEventArgs IVxTextDocumentEventArgs;
#endif 	/* __IVxTextDocumentEventArgs_FWD_DEFINED__ */


#ifndef __IVxTextDocumentFileActionEventArgs_FWD_DEFINED__
#define __IVxTextDocumentFileActionEventArgs_FWD_DEFINED__
typedef interface IVxTextDocumentFileActionEventArgs IVxTextDocumentFileActionEventArgs;
#endif 	/* __IVxTextDocumentFileActionEventArgs_FWD_DEFINED__ */


#ifndef __IVxTextSnapshotChangedEventArgs_FWD_DEFINED__
#define __IVxTextSnapshotChangedEventArgs_FWD_DEFINED__
typedef interface IVxTextSnapshotChangedEventArgs IVxTextSnapshotChangedEventArgs;
#endif 	/* __IVxTextSnapshotChangedEventArgs_FWD_DEFINED__ */


#ifndef __IVxContentTypeChangedEventArgs_FWD_DEFINED__
#define __IVxContentTypeChangedEventArgs_FWD_DEFINED__
typedef interface IVxContentTypeChangedEventArgs IVxContentTypeChangedEventArgs;
#endif 	/* __IVxContentTypeChangedEventArgs_FWD_DEFINED__ */


#ifndef __IVxMappingPoint_FWD_DEFINED__
#define __IVxMappingPoint_FWD_DEFINED__
typedef interface IVxMappingPoint IVxMappingPoint;
#endif 	/* __IVxMappingPoint_FWD_DEFINED__ */


#ifndef __IVxMappingSpan_FWD_DEFINED__
#define __IVxMappingSpan_FWD_DEFINED__
typedef interface IVxMappingSpan IVxMappingSpan;
#endif 	/* __IVxMappingSpan_FWD_DEFINED__ */


#ifndef __IVxNormalizedTextChangeCollection_FWD_DEFINED__
#define __IVxNormalizedTextChangeCollection_FWD_DEFINED__
typedef interface IVxNormalizedTextChangeCollection IVxNormalizedTextChangeCollection;
#endif 	/* __IVxNormalizedTextChangeCollection_FWD_DEFINED__ */


#ifndef __IVxReadOnlyRegion_FWD_DEFINED__
#define __IVxReadOnlyRegion_FWD_DEFINED__
typedef interface IVxReadOnlyRegion IVxReadOnlyRegion;
#endif 	/* __IVxReadOnlyRegion_FWD_DEFINED__ */


#ifndef __IVxTextBufferEdit_FWD_DEFINED__
#define __IVxTextBufferEdit_FWD_DEFINED__
typedef interface IVxTextBufferEdit IVxTextBufferEdit;
#endif 	/* __IVxTextBufferEdit_FWD_DEFINED__ */


#ifndef __IVxReadOnlyRegionEdit_FWD_DEFINED__
#define __IVxReadOnlyRegionEdit_FWD_DEFINED__
typedef interface IVxReadOnlyRegionEdit IVxReadOnlyRegionEdit;
#endif 	/* __IVxReadOnlyRegionEdit_FWD_DEFINED__ */


#ifndef __IVxTextBuffer_FWD_DEFINED__
#define __IVxTextBuffer_FWD_DEFINED__
typedef interface IVxTextBuffer IVxTextBuffer;
#endif 	/* __IVxTextBuffer_FWD_DEFINED__ */


#ifndef __IVxTextBufferFactoryService_FWD_DEFINED__
#define __IVxTextBufferFactoryService_FWD_DEFINED__
typedef interface IVxTextBufferFactoryService IVxTextBufferFactoryService;
#endif 	/* __IVxTextBufferFactoryService_FWD_DEFINED__ */


#ifndef __IVxTextChange_FWD_DEFINED__
#define __IVxTextChange_FWD_DEFINED__
typedef interface IVxTextChange IVxTextChange;
#endif 	/* __IVxTextChange_FWD_DEFINED__ */


#ifndef __IVxTextEdit_FWD_DEFINED__
#define __IVxTextEdit_FWD_DEFINED__
typedef interface IVxTextEdit IVxTextEdit;
#endif 	/* __IVxTextEdit_FWD_DEFINED__ */


#ifndef __IVxTextSnapshot_FWD_DEFINED__
#define __IVxTextSnapshot_FWD_DEFINED__
typedef interface IVxTextSnapshot IVxTextSnapshot;
#endif 	/* __IVxTextSnapshot_FWD_DEFINED__ */


#ifndef __IVxTextSnapshotLine_FWD_DEFINED__
#define __IVxTextSnapshotLine_FWD_DEFINED__
typedef interface IVxTextSnapshotLine IVxTextSnapshotLine;
#endif 	/* __IVxTextSnapshotLine_FWD_DEFINED__ */


#ifndef __IVxTextVersion_FWD_DEFINED__
#define __IVxTextVersion_FWD_DEFINED__
typedef interface IVxTextVersion IVxTextVersion;
#endif 	/* __IVxTextVersion_FWD_DEFINED__ */


#ifndef __IVxTrackingPoint_FWD_DEFINED__
#define __IVxTrackingPoint_FWD_DEFINED__
typedef interface IVxTrackingPoint IVxTrackingPoint;
#endif 	/* __IVxTrackingPoint_FWD_DEFINED__ */


#ifndef __IVxTrackingSpan_FWD_DEFINED__
#define __IVxTrackingSpan_FWD_DEFINED__
typedef interface IVxTrackingSpan IVxTrackingSpan;
#endif 	/* __IVxTrackingSpan_FWD_DEFINED__ */


#ifndef __IVxNormalizedSnapshotSpanCollection_FWD_DEFINED__
#define __IVxNormalizedSnapshotSpanCollection_FWD_DEFINED__
typedef interface IVxNormalizedSnapshotSpanCollection IVxNormalizedSnapshotSpanCollection;
#endif 	/* __IVxNormalizedSnapshotSpanCollection_FWD_DEFINED__ */


#ifndef __IVxNormalizedSpanCollection_FWD_DEFINED__
#define __IVxNormalizedSpanCollection_FWD_DEFINED__
typedef interface IVxNormalizedSpanCollection IVxNormalizedSpanCollection;
#endif 	/* __IVxNormalizedSpanCollection_FWD_DEFINED__ */


#ifndef __IVxTextContentChangedEventArgs_FWD_DEFINED__
#define __IVxTextContentChangedEventArgs_FWD_DEFINED__
typedef interface IVxTextContentChangedEventArgs IVxTextContentChangedEventArgs;
#endif 	/* __IVxTextContentChangedEventArgs_FWD_DEFINED__ */


#ifndef __IVxGraphBufferContentTypeChangedEventArgs_FWD_DEFINED__
#define __IVxGraphBufferContentTypeChangedEventArgs_FWD_DEFINED__
typedef interface IVxGraphBufferContentTypeChangedEventArgs IVxGraphBufferContentTypeChangedEventArgs;
#endif 	/* __IVxGraphBufferContentTypeChangedEventArgs_FWD_DEFINED__ */


#ifndef __IVxGraphBuffersChangedEventArgs_FWD_DEFINED__
#define __IVxGraphBuffersChangedEventArgs_FWD_DEFINED__
typedef interface IVxGraphBuffersChangedEventArgs IVxGraphBuffersChangedEventArgs;
#endif 	/* __IVxGraphBuffersChangedEventArgs_FWD_DEFINED__ */


#ifndef __IVxBufferGraph_FWD_DEFINED__
#define __IVxBufferGraph_FWD_DEFINED__
typedef interface IVxBufferGraph IVxBufferGraph;
#endif 	/* __IVxBufferGraph_FWD_DEFINED__ */


#ifndef __IVxProjectionBufferBase_FWD_DEFINED__
#define __IVxProjectionBufferBase_FWD_DEFINED__
typedef interface IVxProjectionBufferBase IVxProjectionBufferBase;
#endif 	/* __IVxProjectionBufferBase_FWD_DEFINED__ */


#ifndef __IVxProjectionSnapshot_FWD_DEFINED__
#define __IVxProjectionSnapshot_FWD_DEFINED__
typedef interface IVxProjectionSnapshot IVxProjectionSnapshot;
#endif 	/* __IVxProjectionSnapshot_FWD_DEFINED__ */


#ifndef __IVxProjectionBuffer_FWD_DEFINED__
#define __IVxProjectionBuffer_FWD_DEFINED__
typedef interface IVxProjectionBuffer IVxProjectionBuffer;
#endif 	/* __IVxProjectionBuffer_FWD_DEFINED__ */


#ifndef __IVxProjectionSourceSpansChangedEventArgs_FWD_DEFINED__
#define __IVxProjectionSourceSpansChangedEventArgs_FWD_DEFINED__
typedef interface IVxProjectionSourceSpansChangedEventArgs IVxProjectionSourceSpansChangedEventArgs;
#endif 	/* __IVxProjectionSourceSpansChangedEventArgs_FWD_DEFINED__ */


#ifndef __IVxProjectionSourceBuffersChangedEventArgs_FWD_DEFINED__
#define __IVxProjectionSourceBuffersChangedEventArgs_FWD_DEFINED__
typedef interface IVxProjectionSourceBuffersChangedEventArgs IVxProjectionSourceBuffersChangedEventArgs;
#endif 	/* __IVxProjectionSourceBuffersChangedEventArgs_FWD_DEFINED__ */


#ifndef __IVxSnapshotSpanEventArgs_FWD_DEFINED__
#define __IVxSnapshotSpanEventArgs_FWD_DEFINED__
typedef interface IVxSnapshotSpanEventArgs IVxSnapshotSpanEventArgs;
#endif 	/* __IVxSnapshotSpanEventArgs_FWD_DEFINED__ */


#ifndef __IVxTextBufferCreatedEventArgs_FWD_DEFINED__
#define __IVxTextBufferCreatedEventArgs_FWD_DEFINED__
typedef interface IVxTextBufferCreatedEventArgs IVxTextBufferCreatedEventArgs;
#endif 	/* __IVxTextBufferCreatedEventArgs_FWD_DEFINED__ */


#ifndef __IVxTextContentChangingEventArgs_FWD_DEFINED__
#define __IVxTextContentChangingEventArgs_FWD_DEFINED__
typedef interface IVxTextContentChangingEventArgs IVxTextContentChangingEventArgs;
#endif 	/* __IVxTextContentChangingEventArgs_FWD_DEFINED__ */


#ifndef __IVxTextSearchService_FWD_DEFINED__
#define __IVxTextSearchService_FWD_DEFINED__
typedef interface IVxTextSearchService IVxTextSearchService;
#endif 	/* __IVxTextSearchService_FWD_DEFINED__ */


#ifndef __IVxTextStructureNavigator_FWD_DEFINED__
#define __IVxTextStructureNavigator_FWD_DEFINED__
typedef interface IVxTextStructureNavigator IVxTextStructureNavigator;
#endif 	/* __IVxTextStructureNavigator_FWD_DEFINED__ */


#ifndef __IVxPlatformFactory_FWD_DEFINED__
#define __IVxPlatformFactory_FWD_DEFINED__
typedef interface IVxPlatformFactory IVxPlatformFactory;
#endif 	/* __IVxPlatformFactory_FWD_DEFINED__ */


#ifndef __IVxThumbnailSupport_FWD_DEFINED__
#define __IVxThumbnailSupport_FWD_DEFINED__
typedef interface IVxThumbnailSupport IVxThumbnailSupport;
#endif 	/* __IVxThumbnailSupport_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __VSEditorLibrary_LIBRARY_DEFINED__
#define __VSEditorLibrary_LIBRARY_DEFINED__

/* library VSEditorLibrary */
/* [uuid] */ 















































































typedef 
enum _VxEnumerableCardinality
    {	VxEnumerableCardinalityZero	= 0,
	VxEnumerableCardinalityOne	= 1,
	VxEnumerableCardinalityTwoOrMore	= 2
    } 	VxEnumerableCardinality;

typedef 
enum _VxCompositionTraceId
    {	VxCompositionTraceIdRejection_DefinitionRejected	= 1,
	VxCompositionTraceIdRejection_DefinitionResurrected	= 2,
	VxCompositionTraceIdDiscovery_AssemblyLoadFailed	= 3,
	VxCompositionTraceIdDiscovery_DefinitionMarkedWithPartNotDiscoverableAttribute	= 4,
	VxCompositionTraceIdDiscovery_DefinitionContainsGenericParameters	= 5,
	VxCompositionTraceIdDiscovery_DefinitionContainsNoExports	= 6,
	VxCompositionTraceIdDiscovery_MemberMarkedWithMultipleImportAndImportMany	= 7
    } 	VxCompositionTraceId;

typedef 
enum _VxAtomicCompositionQueryState
    {	VxAtomicCompositionQueryStateUnknown	= 0,
	VxAtomicCompositionQueryStateTreatAsRejected	= 1,
	VxAtomicCompositionQueryStateTreatAsValidated	= 2,
	VxAtomicCompositionQueryStateNeedsTesting	= 3
    } 	VxAtomicCompositionQueryState;

typedef 
enum _VxExportCardinalityCheckResult
    {	VxExportCardinalityCheckResultMatch	= 0,
	VxExportCardinalityCheckResultNoExports	= 1,
	VxExportCardinalityCheckResultTooManyExports	= 2
    } 	VxExportCardinalityCheckResult;

typedef 
enum _VxImportState
    {	VxImportStateNoImportsSatisfied	= 0,
	VxImportStateImportsPreviewing	= 1,
	VxImportStateImportsPreviewed	= 2,
	VxImportStatePreExportImportsSatisfying	= 3,
	VxImportStatePreExportImportsSatisfied	= 4,
	VxImportStatePostExportImportsSatisfying	= 5,
	VxImportStatePostExportImportsSatisfied	= 6,
	VxImportStateComposedNotifying	= 7,
	VxImportStateComposed	= 8
    } 	VxImportState;

typedef 
enum _VxImportCardinality
    {	VxImportCardinalityZeroOrOne	= 0,
	VxImportCardinalityExactlyOne	= 1,
	VxImportCardinalityZeroOrMore	= 2
    } 	VxImportCardinality;

typedef 
enum _VxReflectionItemType
    {	VxReflectionItemTypeParameter	= 0,
	VxReflectionItemTypeField	= 1,
	VxReflectionItemTypeProperty	= 2,
	VxReflectionItemTypeMethod	= 3,
	VxReflectionItemTypeType	= 4
    } 	VxReflectionItemType;

typedef 
enum _VxCompositionErrorId
    {	VxCompositionErrorIdUnknown	= 0,
	VxCompositionErrorIdInvalidExportMetadata	= 1,
	VxCompositionErrorIdRequiredMetadataNotFound	= 2,
	VxCompositionErrorIdUnsupportedExportType	= 3,
	VxCompositionErrorIdImportNotSetOnPart	= 4,
	VxCompositionErrorIdImportEngine_ComposeTookTooManyIterations	= 5,
	VxCompositionErrorIdImportEngine_ImportCardinalityMismatch	= 6,
	VxCompositionErrorIdImportEngine_PartCycle	= 7,
	VxCompositionErrorIdImportEngine_PartCannotSetImport	= 8,
	VxCompositionErrorIdImportEngine_PartCannotGetExportedValue	= 9,
	VxCompositionErrorIdImportEngine_PartCannotActivate	= 10,
	VxCompositionErrorIdImportEngine_PreventedByExistingImport	= 11,
	VxCompositionErrorIdImportEngine_InvalidStateForRecomposition	= 12,
	VxCompositionErrorIdReflectionModel_PartConstructorMissing	= 13,
	VxCompositionErrorIdReflectionModel_PartConstructorThrewException	= 14,
	VxCompositionErrorIdReflectionModel_PartOnImportsSatisfiedThrewException	= 15,
	VxCompositionErrorIdReflectionModel_ExportNotReadable	= 16,
	VxCompositionErrorIdReflectionModel_ExportThrewException	= 17,
	VxCompositionErrorIdReflectionModel_ExportMethodTooManyParameters	= 18,
	VxCompositionErrorIdReflectionModel_ImportNotWritable	= 19,
	VxCompositionErrorIdReflectionModel_ImportThrewException	= 20,
	VxCompositionErrorIdReflectionModel_ImportNotAssignableFromExport	= 21,
	VxCompositionErrorIdReflectionModel_ImportCollectionNull	= 22,
	VxCompositionErrorIdReflectionModel_ImportCollectionNotWritable	= 23,
	VxCompositionErrorIdReflectionModel_ImportCollectionConstructionThrewException	= 24,
	VxCompositionErrorIdReflectionModel_ImportCollectionGetThrewException	= 25,
	VxCompositionErrorIdReflectionModel_ImportCollectionIsReadOnlyThrewException	= 26,
	VxCompositionErrorIdReflectionModel_ImportCollectionClearThrewException	= 27,
	VxCompositionErrorIdReflectionModel_ImportCollectionAddThrewException	= 28,
	VxCompositionErrorIdReflectionModel_ImportManyOnParameterCanOnlyBeAssigned	= 29
    } 	VxCompositionErrorId;

typedef 
enum _VxCreationPolicy
    {	VxCreationPolicyAny	= 0,
	VxCreationPolicyShared	= 1,
	VxCreationPolicyNonShared	= 2
    } 	VxCreationPolicy;

typedef 
enum _VxDifferenceType
    {	VxDifferenceTypeAdd	= 0,
	VxDifferenceTypeRemove	= 1,
	VxDifferenceTypeChange	= 2
    } 	VxDifferenceType;

typedef 
enum _VxStringDifferenceTypes
    {	VxStringDifferenceTypesLine	= 1,
	VxStringDifferenceTypesWord	= 2,
	VxStringDifferenceTypesCharacter	= 4
    } 	VxStringDifferenceTypes;

typedef 
enum _VxWordSplitBehavior
    {	VxWordSplitBehaviorDefault	= 0,
	VxWordSplitBehaviorCharacterClass	= 0,
	VxWordSplitBehaviorWhiteSpace	= 1,
	VxWordSplitBehaviorWhiteSpaceAndPunctuation	= 2
    } 	VxWordSplitBehavior;

typedef 
enum _VxReloadResult
    {	VxReloadResultAborted	= 0,
	VxReloadResultSucceeded	= 1,
	VxReloadResultSucceededWithCharacterSubstitutions	= 2
    } 	VxReloadResult;

typedef 
enum _VxFileActionTypes
    {	VxFileActionTypesContentSavedToDisk	= 1,
	VxFileActionTypesContentLoadedFromDisk	= 2,
	VxFileActionTypesDocumentRenamed	= 4
    } 	VxFileActionTypes;

typedef 
enum _VxEdgeInsertionMode
    {	VxEdgeInsertionModeAllow	= 0,
	VxEdgeInsertionModeDeny	= 1
    } 	VxEdgeInsertionMode;

typedef 
enum _VxPointTrackingMode
    {	VxPointTrackingModePositive	= 0,
	VxPointTrackingModeNegative	= 1
    } 	VxPointTrackingMode;

typedef 
enum _VxPositionAffinity
    {	VxPositionAffinityPredecessor	= 0,
	VxPositionAffinitySuccessor	= 1
    } 	VxPositionAffinity;

typedef 
enum _VxElisionBufferOptions
    {	VxElisionBufferOptionsNone	= 0,
	VxElisionBufferOptionsFillInMappingMode	= 1
    } 	VxElisionBufferOptions;

typedef 
enum _VxProjectionBufferOptions
    {	VxProjectionBufferOptionsNone	= 0,
	VxProjectionBufferOptionsPermissiveEdgeInclusiveSourceSpans	= 1,
	VxProjectionBufferOptionsWritableLiteralSpans	= 2
    } 	VxProjectionBufferOptions;

typedef 
enum _VxSpanTrackingMode
    {	VxSpanTrackingModeEdgeExclusive	= 0,
	VxSpanTrackingModeEdgeInclusive	= 1,
	VxSpanTrackingModeEdgePositive	= 2,
	VxSpanTrackingModeEdgeNegative	= 3,
	VxSpanTrackingModeCustom	= 4
    } 	VxSpanTrackingMode;

typedef 
enum _VxTrackingFidelityMode
    {	VxTrackingFidelityModeForward	= 0,
	VxTrackingFidelityModeBackward	= 1,
	VxTrackingFidelityModeUndoRedo	= 2
    } 	VxTrackingFidelityMode;

typedef 
enum _VxTagAggregatorOptions
    {	VxTagAggregatorOptionsNone	= 0,
	VxTagAggregatorOptionsMapByContentType	= 1
    } 	VxTagAggregatorOptions;

typedef 
enum _VxChangeTypes
    {	VxChangeTypesNone	= 0,
	VxChangeTypesChangedSinceOpened	= 1,
	VxChangeTypesChangedSinceSaved	= 2
    } 	VxChangeTypes;

typedef 
enum _VxFindOptions
    {	VxFindOptionsNone	= 0,
	VxFindOptionsMatchCase	= 1,
	VxFindOptionsUseRegularExpressions	= 2,
	VxFindOptionsWholeWord	= 4,
	VxFindOptionsSearchReverse	= 8
    } 	VxFindOptions;

typedef 
enum _VxTextUndoHistoryState
    {	VxTextUndoHistoryStateIdle	= 0,
	VxTextUndoHistoryStateUndoing	= 1,
	VxTextUndoHistoryStateRedoing	= 2
    } 	VxTextUndoHistoryState;

typedef 
enum _VxTextUndoTransactionCompletionResult
    {	VxTextUndoTransactionCompletionResultTransactionAdded	= 0,
	VxTextUndoTransactionCompletionResultTransactionMerged	= 1
    } 	VxTextUndoTransactionCompletionResult;

typedef 
enum _VxUndoTransactionState
    {	VxUndoTransactionStateOpen	= 0,
	VxUndoTransactionStateCompleted	= 1,
	VxUndoTransactionStateCanceled	= 2,
	VxUndoTransactionStateRedoing	= 3,
	VxUndoTransactionStateUndoing	= 4,
	VxUndoTransactionStateUndone	= 5,
	VxUndoTransactionStateInvalid	= 6
    } 	VxUndoTransactionState;

typedef 
enum _VxPopupStyles
    {	VxPopupStylesNone	= 0,
	VxPopupStylesDismissOnMouseLeaveText	= 4,
	VxPopupStylesDismissOnMouseLeaveTextOrContent	= 8,
	VxPopupStylesPositionLeftOrRight	= 16,
	VxPopupStylesPreferLeftOrTopPosition	= 32,
	VxPopupStylesRightOrBottomJustify	= 64,
	VxPopupStylesPositionClosest	= 128
    } 	VxPopupStyles;

typedef 
enum _VxEnsureSpanVisibleOptions
    {	VxEnsureSpanVisibleOptionsShowStart	= 1,
	VxEnsureSpanVisibleOptionsMinimumScroll	= 2,
	VxEnsureSpanVisibleOptionsAlwaysCenter	= 4,
	VxEnsureSpanVisibleOptionsNone	= 0
    } 	VxEnsureSpanVisibleOptions;

typedef 
enum _VxScrollDirection
    {	VxScrollDirectionUp	= 0,
	VxScrollDirectionDown	= 1
    } 	VxScrollDirection;

typedef 
enum _VxTextSelectionMode
    {	VxTextSelectionModeStream	= 0,
	VxTextSelectionModeBox	= 1
    } 	VxTextSelectionMode;

typedef 
enum _VxViewRelativePosition
    {	VxViewRelativePositionTop	= 0,
	VxViewRelativePositionBottom	= 1
    } 	VxViewRelativePosition;

typedef 
enum _VxWordWrapStyles
    {	VxWordWrapStylesNone	= 0,
	VxWordWrapStylesWordWrap	= 1,
	VxWordWrapStylesVisibleGlyphs	= 2,
	VxWordWrapStylesAutoIndent	= 4
    } 	VxWordWrapStyles;

typedef 
enum _VxTextViewLineChange
    {	VxTextViewLineChangeNone	= 0,
	VxTextViewLineChangeNewOrReformatted	= 1,
	VxTextViewLineChangeTranslated	= 2
    } 	VxTextViewLineChange;

typedef 
enum _VxVisibilityState
    {	VxVisibilityStateUnattached	= 0,
	VxVisibilityStateHidden	= 1,
	VxVisibilityStatePartiallyVisible	= 2,
	VxVisibilityStateFullyVisible	= 3
    } 	VxVisibilityState;

typedef 
enum _VxIncrementalSearchDirection
    {	VxIncrementalSearchDirectionForward	= 0,
	VxIncrementalSearchDirectionBackward	= 1
    } 	VxIncrementalSearchDirection;

typedef 
enum _VxAdornmentPositioningBehavior
    {	VxAdornmentPositioningBehaviorOwnerControlled	= 0,
	VxAdornmentPositioningBehaviorViewportRelative	= 1,
	VxAdornmentPositioningBehaviorTextRelative	= 2
    } 	VxAdornmentPositioningBehavior;

typedef 
enum _VxDragDropPointerEffects
    {	VxDragDropPointerEffectsNone	= 0,
	VxDragDropPointerEffectsCopy	= 1,
	VxDragDropPointerEffectsLink	= 2,
	VxDragDropPointerEffectsMove	= 4,
	VxDragDropPointerEffectsScroll	= 8,
	VxDragDropPointerEffectsTrack	= 16,
	VxDragDropPointerEffectsAll	= 31
    } 	VxDragDropPointerEffects;

typedef 
enum _VxConnectionReason
    {	VxConnectionReasonTextViewLifetime	= 0,
	VxConnectionReasonContentTypeChange	= 1,
	VxConnectionReasonBufferGraphChange	= 2
    } 	VxConnectionReason;

typedef 
enum _VxCompletionMatchType
    {	VxCompletionMatchTypeMatchDisplayText	= 0,
	VxCompletionMatchTypeMatchInsertionText	= 1
    } 	VxCompletionMatchType;

typedef 
enum _VxIntellisenseKeyboardCommand
    {	VxIntellisenseKeyboardCommandUp	= 0,
	VxIntellisenseKeyboardCommandDown	= 1,
	VxIntellisenseKeyboardCommandPageUp	= 2,
	VxIntellisenseKeyboardCommandPageDown	= 3,
	VxIntellisenseKeyboardCommandTopLine	= 4,
	VxIntellisenseKeyboardCommandBottomLine	= 5,
	VxIntellisenseKeyboardCommandHome	= 6,
	VxIntellisenseKeyboardCommandEnd	= 7,
	VxIntellisenseKeyboardCommandEnter	= 8,
	VxIntellisenseKeyboardCommandEscape	= 9,
	VxIntellisenseKeyboardCommandIncreaseFilterLevel	= 10,
	VxIntellisenseKeyboardCommandDecreaseFilterLevel	= 11
    } 	VxIntellisenseKeyboardCommand;

typedef 
enum _VxSmartTagState
    {	VxSmartTagStateCollapsed	= 0,
	VxSmartTagStateIntermediate	= 1,
	VxSmartTagStateExpanded	= 2
    } 	VxSmartTagState;

typedef 
enum _VxSmartTagType
    {	VxSmartTagTypeFactoid	= 0,
	VxSmartTagTypeEphemeral	= 1
    } 	VxSmartTagType;

typedef 
enum _VxStandardGlyphGroup
    {	VxStandardGlyphGroupGlyphGroupClass	= 0,
	VxStandardGlyphGroupGlyphGroupConstant	= 6,
	VxStandardGlyphGroupGlyphGroupDelegate	= 12,
	VxStandardGlyphGroupGlyphGroupEnum	= 18,
	VxStandardGlyphGroupGlyphGroupEnumMember	= 24,
	VxStandardGlyphGroupGlyphGroupEvent	= 30,
	VxStandardGlyphGroupGlyphGroupException	= 36,
	VxStandardGlyphGroupGlyphGroupField	= 42,
	VxStandardGlyphGroupGlyphGroupInterface	= 48,
	VxStandardGlyphGroupGlyphGroupMacro	= 54,
	VxStandardGlyphGroupGlyphGroupMap	= 60,
	VxStandardGlyphGroupGlyphGroupMapItem	= 66,
	VxStandardGlyphGroupGlyphGroupMethod	= 72,
	VxStandardGlyphGroupGlyphGroupOverload	= 78,
	VxStandardGlyphGroupGlyphGroupModule	= 84,
	VxStandardGlyphGroupGlyphGroupNamespace	= 90,
	VxStandardGlyphGroupGlyphGroupOperator	= 96,
	VxStandardGlyphGroupGlyphGroupProperty	= 102,
	VxStandardGlyphGroupGlyphGroupStruct	= 108,
	VxStandardGlyphGroupGlyphGroupTemplate	= 114,
	VxStandardGlyphGroupGlyphGroupTypedef	= 120,
	VxStandardGlyphGroupGlyphGroupType	= 126,
	VxStandardGlyphGroupGlyphGroupUnion	= 132,
	VxStandardGlyphGroupGlyphGroupVariable	= 138,
	VxStandardGlyphGroupGlyphGroupValueType	= 144,
	VxStandardGlyphGroupGlyphGroupIntrinsic	= 150,
	VxStandardGlyphGroupGlyphGroupJSharpMethod	= 156,
	VxStandardGlyphGroupGlyphGroupJSharpField	= 162,
	VxStandardGlyphGroupGlyphGroupJSharpClass	= 168,
	VxStandardGlyphGroupGlyphGroupJSharpNamespace	= 174,
	VxStandardGlyphGroupGlyphGroupJSharpInterface	= 180,
	VxStandardGlyphGroupGlyphGroupError	= 186,
	VxStandardGlyphGroupGlyphBscFile	= 191,
	VxStandardGlyphGroupGlyphAssembly	= 192,
	VxStandardGlyphGroupGlyphLibrary	= 193,
	VxStandardGlyphGroupGlyphVBProject	= 194,
	VxStandardGlyphGroupGlyphCoolProject	= 196,
	VxStandardGlyphGroupGlyphCppProject	= 199,
	VxStandardGlyphGroupGlyphDialogId	= 200,
	VxStandardGlyphGroupGlyphOpenFolder	= 201,
	VxStandardGlyphGroupGlyphClosedFolder	= 202,
	VxStandardGlyphGroupGlyphArrow	= 203,
	VxStandardGlyphGroupGlyphCSharpFile	= 204,
	VxStandardGlyphGroupGlyphCSharpExpansion	= 205,
	VxStandardGlyphGroupGlyphKeyword	= 206,
	VxStandardGlyphGroupGlyphInformation	= 207,
	VxStandardGlyphGroupGlyphReference	= 208,
	VxStandardGlyphGroupGlyphRecursion	= 209,
	VxStandardGlyphGroupGlyphXmlItem	= 210,
	VxStandardGlyphGroupGlyphJSharpProject	= 211,
	VxStandardGlyphGroupGlyphJSharpDocument	= 212,
	VxStandardGlyphGroupGlyphForwardType	= 213,
	VxStandardGlyphGroupGlyphCallersGraph	= 214,
	VxStandardGlyphGroupGlyphCallGraph	= 215,
	VxStandardGlyphGroupGlyphWarning	= 216,
	VxStandardGlyphGroupGlyphMaybeReference	= 217,
	VxStandardGlyphGroupGlyphMaybeCaller	= 218,
	VxStandardGlyphGroupGlyphMaybeCall	= 219,
	VxStandardGlyphGroupGlyphExtensionMethod	= 220,
	VxStandardGlyphGroupGlyphExtensionMethodInternal	= 221,
	VxStandardGlyphGroupGlyphExtensionMethodFriend	= 222,
	VxStandardGlyphGroupGlyphExtensionMethodProtected	= 223,
	VxStandardGlyphGroupGlyphExtensionMethodPrivate	= 224,
	VxStandardGlyphGroupGlyphExtensionMethodShortcut	= 225,
	VxStandardGlyphGroupGlyphXmlAttribute	= 226,
	VxStandardGlyphGroupGlyphXmlChild	= 227,
	VxStandardGlyphGroupGlyphXmlDescendant	= 228,
	VxStandardGlyphGroupGlyphXmlNamespace	= 229,
	VxStandardGlyphGroupGlyphXmlAttributeQuestion	= 230,
	VxStandardGlyphGroupGlyphXmlAttributeCheck	= 231,
	VxStandardGlyphGroupGlyphXmlChildQuestion	= 232,
	VxStandardGlyphGroupGlyphXmlChildCheck	= 233,
	VxStandardGlyphGroupGlyphXmlDescendantQuestion	= 234,
	VxStandardGlyphGroupGlyphXmlDescendantCheck	= 235,
	VxStandardGlyphGroupGlyphGroupUnknown	= 236
    } 	VxStandardGlyphGroup;

typedef 
enum _VxStandardGlyphItem
    {	VxStandardGlyphItemGlyphItemPublic	= 0,
	VxStandardGlyphItemGlyphItemInternal	= 1,
	VxStandardGlyphItemGlyphItemFriend	= 2,
	VxStandardGlyphItemGlyphItemProtected	= 3,
	VxStandardGlyphItemGlyphItemPrivate	= 4,
	VxStandardGlyphItemGlyphItemShortcut	= 5,
	VxStandardGlyphItemTotalGlyphItems	= 6
    } 	VxStandardGlyphItem;

typedef 
enum _VxUIElementType
    {	VxUIElementTypeSmall	= 0,
	VxUIElementTypeLarge	= 1,
	VxUIElementTypeTooltip	= 2
    } 	VxUIElementType;

typedef 
enum _VxVisitState
    {	VxVisitStateNotVisited	= 0,
	VxVisitStateVisiting	= 1,
	VxVisitStateVisited	= 2
    } 	VxVisitState;

typedef 
enum _VxQuickInfoState
    {	VxQuickInfoStateInitialized	= 1,
	VxQuickInfoStateCalculating	= 2,
	VxQuickInfoStateStarted	= 4,
	VxQuickInfoStateDismissed	= 8
    } 	VxQuickInfoState;

typedef 
enum _VxDefaultSmartTagPresenterStates
    {	VxDefaultSmartTagPresenterStatesInvisible	= 0,
	VxDefaultSmartTagPresenterStatesTickler	= 1,
	VxDefaultSmartTagPresenterStatesBareButton	= 2,
	VxDefaultSmartTagPresenterStatesGlowingButton	= 3,
	VxDefaultSmartTagPresenterStatesListMenu	= 4,
	VxDefaultSmartTagPresenterStatesOwnerDrawingTag	= 5
    } 	VxDefaultSmartTagPresenterStates;

typedef 
enum _VxInternalState
    {	VxInternalStateInitialized	= 1,
	VxInternalStateCalculating	= 2,
	VxInternalStateStartedAndCalculating	= 4,
	VxInternalStateStarted	= 8,
	VxInternalStateDismissed	= 16
    } 	VxInternalState;

typedef 
enum _VxDragDropState
    {	VxDragDropStateStart	= 0,
	VxDragDropStateMouseDown	= 1,
	VxDragDropStateDragging	= 2,
	VxDragDropStateCanceled	= 3,
	VxDragDropStateDropped	= 4
    } 	VxDragDropState;

typedef 
enum _VxCaretMovementDirection
    {	VxCaretMovementDirectionPrevious	= 0,
	VxCaretMovementDirectionNext	= 1
    } 	VxCaretMovementDirection;

typedef 
enum _VxLetterCase
    {	VxLetterCaseUppercase	= 0,
	VxLetterCaseLowercase	= 1
    } 	VxLetterCase;

typedef 
enum _VxSelectionUpdate
    {	VxSelectionUpdatePreserve	= 0,
	VxSelectionUpdateReset	= 1,
	VxSelectionUpdateResetUnlessEmptyBox	= 2,
	VxSelectionUpdateIgnore	= 3,
	VxSelectionUpdateClearVirtualSpace	= 4
    } 	VxSelectionUpdate;

typedef 
enum _VxTextEditAction
    {	VxTextEditActionNone	= 0,
	VxTextEditActionType	= 1,
	VxTextEditActionDelete	= 2,
	VxTextEditActionBackspace	= 3,
	VxTextEditActionPaste	= 4,
	VxTextEditActionEnter	= 5,
	VxTextEditActionAutoIndent	= 6,
	VxTextEditActionReplace	= 7,
	VxTextEditActionProvisionalOverwrite	= 8
    } 	VxTextEditAction;

typedef 
enum _VxTextTransactionMergeDirections
    {	VxTextTransactionMergeDirectionsForward	= 1,
	VxTextTransactionMergeDirectionsBackward	= 2
    } 	VxTextTransactionMergeDirections;

typedef 
enum _VxCharacterType
    {	VxCharacterTypeAlphaNumeric	= 0,
	VxCharacterTypeWhiteSpace	= 1,
	VxCharacterTypeSymbols	= 2
    } 	VxCharacterType;

typedef 
enum _VxSpanType
    {	VxSpanTypeEmpty	= 0,
	VxSpanTypeMultipleCharacters	= 1,
	VxSpanTypeWord	= 2,
	VxSpanTypeMultipleWords	= 3,
	VxSpanTypeSentence	= 4,
	VxSpanTypeMultipleSentences	= 5,
	VxSpanTypeParagraph	= 6,
	VxSpanTypeMultipleParagraphs	= 7,
	VxSpanTypeDocument	= 8
    } 	VxSpanType;

typedef 
enum _VxLineCalculationState
    {	VxLineCalculationStatePrimary	= 0,
	VxLineCalculationStateAppend	= 1,
	VxLineCalculationStatePrepend	= 2,
	VxLineCalculationStateBipend	= 3
    } 	VxLineCalculationState;

typedef 
enum _VxLineBreakBoundaryConditions
    {	VxLineBreakBoundaryConditionsNone	= 0,
	VxLineBreakBoundaryConditionsPrecedingReturn	= 1,
	VxLineBreakBoundaryConditionsSucceedingNewline	= 2
    } 	VxLineBreakBoundaryConditions;

typedef 
enum _VxValidProtocolFound
    {	VxValidProtocolFoundValidProtocol	= 0,
	VxValidProtocolFoundValidProtocolNoSlash	= 1,
	VxValidProtocolFoundInvalidProtocol	= 2
    } 	VxValidProtocolFound;

typedef struct _VxStringDifferenceOptions
    {
    VxStringDifferenceTypes differenceType;
    int locality;
    BOOL ignoreTrimWhiteSpace;
    } 	VxStringDifferenceOptions;

typedef struct _VxEditOptions
    {
    BOOL computeMinimalChange;
    VxStringDifferenceOptions differenceOptions;
    } 	VxEditOptions;

typedef struct _VxSnapshotPoint
    {
    IVxTextSnapshot *snapshot;
    int position;
    } 	VxSnapshotPoint;

typedef struct _VxSnapshotSpan
    {
    VxSnapshotPoint start;
    int length;
    } 	VxSnapshotSpan;

typedef struct _VxSpan
    {
    int start;
    int length;
    } 	VxSpan;

typedef struct _VxFindData
    {
    BSTR _searchString;
    IVxTextSnapshot *_textSnapshotToSearch;
    VxFindOptions _findOptions;
    IVxTextStructureNavigator *_textStructureNavigator;
    } 	VxFindData;

typedef struct _VxTextExtent
    {
    VxSnapshotSpan _span;
    BOOL _isSignificant;
    } 	VxTextExtent;


EXTERN_C const IID LIBID_VSEditorLibrary;

#ifndef __IEnumeratorBSTR_INTERFACE_DEFINED__
#define __IEnumeratorBSTR_INTERFACE_DEFINED__

/* interface IEnumeratorBSTR */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumeratorBSTR;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("18a2071c-67fb-4543-bd62-d11e68a6785b")
    IEnumeratorBSTR : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrent( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumeratorBSTRVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumeratorBSTR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumeratorBSTR * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumeratorBSTR * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrent )( 
            IEnumeratorBSTR * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            IEnumeratorBSTR * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumeratorBSTR * This);
        
        END_INTERFACE
    } IEnumeratorBSTRVtbl;

    interface IEnumeratorBSTR
    {
        CONST_VTBL struct IEnumeratorBSTRVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumeratorBSTR_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumeratorBSTR_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumeratorBSTR_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumeratorBSTR_GetCurrent(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCurrent(This,pRetVal) ) 

#define IEnumeratorBSTR_MoveNext(This,pRetVal)	\
    ( (This)->lpVtbl -> MoveNext(This,pRetVal) ) 

#define IEnumeratorBSTR_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumeratorBSTR_INTERFACE_DEFINED__ */


#ifndef __IEnumerableBSTR_INTERFACE_DEFINED__
#define __IEnumerableBSTR_INTERFACE_DEFINED__

/* interface IEnumerableBSTR */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumerableBSTR;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b887db4f-490c-415e-9ff4-f4657b757772")
    IEnumerableBSTR : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumeratorBSTR **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumerableBSTRVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumerableBSTR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumerableBSTR * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumerableBSTR * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IEnumerableBSTR * This,
            /* [retval][out] */ IEnumeratorBSTR **ppRetVal);
        
        END_INTERFACE
    } IEnumerableBSTRVtbl;

    interface IEnumerableBSTR
    {
        CONST_VTBL struct IEnumerableBSTRVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumerableBSTR_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumerableBSTR_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumerableBSTR_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumerableBSTR_GetEnumerator(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumerableBSTR_INTERFACE_DEFINED__ */


#ifndef __IEnumeratorIVxContentType_INTERFACE_DEFINED__
#define __IEnumeratorIVxContentType_INTERFACE_DEFINED__

/* interface IEnumeratorIVxContentType */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumeratorIVxContentType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d92cce42-6e23-4ce3-a633-8b76ac0826f2")
    IEnumeratorIVxContentType : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrent( 
            /* [retval][out] */ IVxContentType **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumeratorIVxContentTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumeratorIVxContentType * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumeratorIVxContentType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumeratorIVxContentType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrent )( 
            IEnumeratorIVxContentType * This,
            /* [retval][out] */ IVxContentType **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            IEnumeratorIVxContentType * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumeratorIVxContentType * This);
        
        END_INTERFACE
    } IEnumeratorIVxContentTypeVtbl;

    interface IEnumeratorIVxContentType
    {
        CONST_VTBL struct IEnumeratorIVxContentTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumeratorIVxContentType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumeratorIVxContentType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumeratorIVxContentType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumeratorIVxContentType_GetCurrent(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetCurrent(This,ppRetVal) ) 

#define IEnumeratorIVxContentType_MoveNext(This,pRetVal)	\
    ( (This)->lpVtbl -> MoveNext(This,pRetVal) ) 

#define IEnumeratorIVxContentType_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumeratorIVxContentType_INTERFACE_DEFINED__ */


#ifndef __IEnumerableIVxContentType_INTERFACE_DEFINED__
#define __IEnumerableIVxContentType_INTERFACE_DEFINED__

/* interface IEnumerableIVxContentType */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumerableIVxContentType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("acc50312-81c5-4da1-92b0-3f37acfa1106")
    IEnumerableIVxContentType : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumeratorIVxContentType **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumerableIVxContentTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumerableIVxContentType * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumerableIVxContentType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumerableIVxContentType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IEnumerableIVxContentType * This,
            /* [retval][out] */ IEnumeratorIVxContentType **ppRetVal);
        
        END_INTERFACE
    } IEnumerableIVxContentTypeVtbl;

    interface IEnumerableIVxContentType
    {
        CONST_VTBL struct IEnumerableIVxContentTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumerableIVxContentType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumerableIVxContentType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumerableIVxContentType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumerableIVxContentType_GetEnumerator(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumerableIVxContentType_INTERFACE_DEFINED__ */


#ifndef __IVxTextDocumentFileActionEvent_INTERFACE_DEFINED__
#define __IVxTextDocumentFileActionEvent_INTERFACE_DEFINED__

/* interface IVxTextDocumentFileActionEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxTextDocumentFileActionEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7598112a-a45e-4ec3-9b15-2536d26b1cab")
    IVxTextDocumentFileActionEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnTextDocumentFileAction( 
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxTextDocumentFileActionEventArgs *pE) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxTextDocumentFileActionEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxTextDocumentFileActionEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxTextDocumentFileActionEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxTextDocumentFileActionEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnTextDocumentFileAction )( 
            IVxTextDocumentFileActionEvent * This,
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxTextDocumentFileActionEventArgs *pE);
        
        END_INTERFACE
    } IVxTextDocumentFileActionEventVtbl;

    interface IVxTextDocumentFileActionEvent
    {
        CONST_VTBL struct IVxTextDocumentFileActionEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxTextDocumentFileActionEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxTextDocumentFileActionEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxTextDocumentFileActionEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxTextDocumentFileActionEvent_OnTextDocumentFileAction(This,pSender,pE)	\
    ( (This)->lpVtbl -> OnTextDocumentFileAction(This,pSender,pE) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxTextDocumentFileActionEvent_INTERFACE_DEFINED__ */


#ifndef __IVxEventArgsEvent_INTERFACE_DEFINED__
#define __IVxEventArgsEvent_INTERFACE_DEFINED__

/* interface IVxEventArgsEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxEventArgsEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("765b3465-12be-4cfe-8bd1-85b27f2cb081")
    IVxEventArgsEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnEventArgs( 
            /* [in] */ IUnknown *pSender,
            /* [in] */ IUnknown *pE) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxEventArgsEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxEventArgsEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxEventArgsEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxEventArgsEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnEventArgs )( 
            IVxEventArgsEvent * This,
            /* [in] */ IUnknown *pSender,
            /* [in] */ IUnknown *pE);
        
        END_INTERFACE
    } IVxEventArgsEventVtbl;

    interface IVxEventArgsEvent
    {
        CONST_VTBL struct IVxEventArgsEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxEventArgsEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxEventArgsEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxEventArgsEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxEventArgsEvent_OnEventArgs(This,pSender,pE)	\
    ( (This)->lpVtbl -> OnEventArgs(This,pSender,pE) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxEventArgsEvent_INTERFACE_DEFINED__ */


#ifndef __IVxTextDocumentEvent_INTERFACE_DEFINED__
#define __IVxTextDocumentEvent_INTERFACE_DEFINED__

/* interface IVxTextDocumentEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxTextDocumentEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("36811be1-5281-4eca-9a64-dacb86fabf66")
    IVxTextDocumentEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnTextDocument( 
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxTextDocumentEventArgs *pE) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxTextDocumentEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxTextDocumentEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxTextDocumentEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxTextDocumentEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnTextDocument )( 
            IVxTextDocumentEvent * This,
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxTextDocumentEventArgs *pE);
        
        END_INTERFACE
    } IVxTextDocumentEventVtbl;

    interface IVxTextDocumentEvent
    {
        CONST_VTBL struct IVxTextDocumentEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxTextDocumentEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxTextDocumentEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxTextDocumentEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxTextDocumentEvent_OnTextDocument(This,pSender,pE)	\
    ( (This)->lpVtbl -> OnTextDocument(This,pSender,pE) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxTextDocumentEvent_INTERFACE_DEFINED__ */


#ifndef __IVxSnapshotSpanEvent_INTERFACE_DEFINED__
#define __IVxSnapshotSpanEvent_INTERFACE_DEFINED__

/* interface IVxSnapshotSpanEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxSnapshotSpanEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8b881e32-b5f3-47a1-b62d-1dd1f2ff7803")
    IVxSnapshotSpanEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnSnapshotSpan( 
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxSnapshotSpanEventArgs *pE) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxSnapshotSpanEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxSnapshotSpanEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxSnapshotSpanEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxSnapshotSpanEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnSnapshotSpan )( 
            IVxSnapshotSpanEvent * This,
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxSnapshotSpanEventArgs *pE);
        
        END_INTERFACE
    } IVxSnapshotSpanEventVtbl;

    interface IVxSnapshotSpanEvent
    {
        CONST_VTBL struct IVxSnapshotSpanEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxSnapshotSpanEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxSnapshotSpanEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxSnapshotSpanEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxSnapshotSpanEvent_OnSnapshotSpan(This,pSender,pE)	\
    ( (This)->lpVtbl -> OnSnapshotSpan(This,pSender,pE) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxSnapshotSpanEvent_INTERFACE_DEFINED__ */


#ifndef __IVxTextContentChangedEvent_INTERFACE_DEFINED__
#define __IVxTextContentChangedEvent_INTERFACE_DEFINED__

/* interface IVxTextContentChangedEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxTextContentChangedEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5be64365-ae6e-4d88-b265-b22c5e743450")
    IVxTextContentChangedEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnTextContentChanged( 
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxTextContentChangedEventArgs *pE) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxTextContentChangedEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxTextContentChangedEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxTextContentChangedEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxTextContentChangedEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnTextContentChanged )( 
            IVxTextContentChangedEvent * This,
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxTextContentChangedEventArgs *pE);
        
        END_INTERFACE
    } IVxTextContentChangedEventVtbl;

    interface IVxTextContentChangedEvent
    {
        CONST_VTBL struct IVxTextContentChangedEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxTextContentChangedEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxTextContentChangedEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxTextContentChangedEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxTextContentChangedEvent_OnTextContentChanged(This,pSender,pE)	\
    ( (This)->lpVtbl -> OnTextContentChanged(This,pSender,pE) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxTextContentChangedEvent_INTERFACE_DEFINED__ */


#ifndef __IVxTextContentChangingEvent_INTERFACE_DEFINED__
#define __IVxTextContentChangingEvent_INTERFACE_DEFINED__

/* interface IVxTextContentChangingEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxTextContentChangingEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5e12035a-0f79-408d-8d48-6896ff85bf7d")
    IVxTextContentChangingEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnTextContentChanging( 
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxTextContentChangingEventArgs *pE) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxTextContentChangingEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxTextContentChangingEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxTextContentChangingEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxTextContentChangingEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnTextContentChanging )( 
            IVxTextContentChangingEvent * This,
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxTextContentChangingEventArgs *pE);
        
        END_INTERFACE
    } IVxTextContentChangingEventVtbl;

    interface IVxTextContentChangingEvent
    {
        CONST_VTBL struct IVxTextContentChangingEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxTextContentChangingEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxTextContentChangingEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxTextContentChangingEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxTextContentChangingEvent_OnTextContentChanging(This,pSender,pE)	\
    ( (This)->lpVtbl -> OnTextContentChanging(This,pSender,pE) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxTextContentChangingEvent_INTERFACE_DEFINED__ */


#ifndef __IVxContentTypeChangedEvent_INTERFACE_DEFINED__
#define __IVxContentTypeChangedEvent_INTERFACE_DEFINED__

/* interface IVxContentTypeChangedEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxContentTypeChangedEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b58ad157-69a4-4225-aa41-0e5547b6cda3")
    IVxContentTypeChangedEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnContentTypeChanged( 
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxContentTypeChangedEventArgs *pE) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxContentTypeChangedEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxContentTypeChangedEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxContentTypeChangedEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxContentTypeChangedEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnContentTypeChanged )( 
            IVxContentTypeChangedEvent * This,
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxContentTypeChangedEventArgs *pE);
        
        END_INTERFACE
    } IVxContentTypeChangedEventVtbl;

    interface IVxContentTypeChangedEvent
    {
        CONST_VTBL struct IVxContentTypeChangedEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxContentTypeChangedEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxContentTypeChangedEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxContentTypeChangedEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxContentTypeChangedEvent_OnContentTypeChanged(This,pSender,pE)	\
    ( (This)->lpVtbl -> OnContentTypeChanged(This,pSender,pE) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxContentTypeChangedEvent_INTERFACE_DEFINED__ */


#ifndef __IVxTextBufferCreatedEvent_INTERFACE_DEFINED__
#define __IVxTextBufferCreatedEvent_INTERFACE_DEFINED__

/* interface IVxTextBufferCreatedEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxTextBufferCreatedEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7a45771d-7a36-4d18-9b81-c5daa88985b8")
    IVxTextBufferCreatedEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnTextBufferCreated( 
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxTextBufferCreatedEventArgs *pE) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxTextBufferCreatedEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxTextBufferCreatedEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxTextBufferCreatedEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxTextBufferCreatedEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnTextBufferCreated )( 
            IVxTextBufferCreatedEvent * This,
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxTextBufferCreatedEventArgs *pE);
        
        END_INTERFACE
    } IVxTextBufferCreatedEventVtbl;

    interface IVxTextBufferCreatedEvent
    {
        CONST_VTBL struct IVxTextBufferCreatedEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxTextBufferCreatedEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxTextBufferCreatedEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxTextBufferCreatedEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxTextBufferCreatedEvent_OnTextBufferCreated(This,pSender,pE)	\
    ( (This)->lpVtbl -> OnTextBufferCreated(This,pSender,pE) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxTextBufferCreatedEvent_INTERFACE_DEFINED__ */


#ifndef __IEnumeratorIVxTextSnapshotLine_INTERFACE_DEFINED__
#define __IEnumeratorIVxTextSnapshotLine_INTERFACE_DEFINED__

/* interface IEnumeratorIVxTextSnapshotLine */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumeratorIVxTextSnapshotLine;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5ba4ea24-9310-4284-9e86-6ebec3e1818e")
    IEnumeratorIVxTextSnapshotLine : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrent( 
            /* [retval][out] */ IVxTextSnapshotLine **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumeratorIVxTextSnapshotLineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumeratorIVxTextSnapshotLine * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumeratorIVxTextSnapshotLine * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumeratorIVxTextSnapshotLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrent )( 
            IEnumeratorIVxTextSnapshotLine * This,
            /* [retval][out] */ IVxTextSnapshotLine **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            IEnumeratorIVxTextSnapshotLine * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumeratorIVxTextSnapshotLine * This);
        
        END_INTERFACE
    } IEnumeratorIVxTextSnapshotLineVtbl;

    interface IEnumeratorIVxTextSnapshotLine
    {
        CONST_VTBL struct IEnumeratorIVxTextSnapshotLineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumeratorIVxTextSnapshotLine_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumeratorIVxTextSnapshotLine_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumeratorIVxTextSnapshotLine_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumeratorIVxTextSnapshotLine_GetCurrent(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetCurrent(This,ppRetVal) ) 

#define IEnumeratorIVxTextSnapshotLine_MoveNext(This,pRetVal)	\
    ( (This)->lpVtbl -> MoveNext(This,pRetVal) ) 

#define IEnumeratorIVxTextSnapshotLine_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumeratorIVxTextSnapshotLine_INTERFACE_DEFINED__ */


#ifndef __IEnumerableIVxTextSnapshotLine_INTERFACE_DEFINED__
#define __IEnumerableIVxTextSnapshotLine_INTERFACE_DEFINED__

/* interface IEnumerableIVxTextSnapshotLine */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumerableIVxTextSnapshotLine;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("021b71e1-59bb-481a-9ac6-c9b4ad7b7446")
    IEnumerableIVxTextSnapshotLine : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumeratorIVxTextSnapshotLine **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumerableIVxTextSnapshotLineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumerableIVxTextSnapshotLine * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumerableIVxTextSnapshotLine * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumerableIVxTextSnapshotLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IEnumerableIVxTextSnapshotLine * This,
            /* [retval][out] */ IEnumeratorIVxTextSnapshotLine **ppRetVal);
        
        END_INTERFACE
    } IEnumerableIVxTextSnapshotLineVtbl;

    interface IEnumerableIVxTextSnapshotLine
    {
        CONST_VTBL struct IEnumerableIVxTextSnapshotLineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumerableIVxTextSnapshotLine_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumerableIVxTextSnapshotLine_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumerableIVxTextSnapshotLine_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumerableIVxTextSnapshotLine_GetEnumerator(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumerableIVxTextSnapshotLine_INTERFACE_DEFINED__ */


#ifndef __IEnumeratorVxSpan_INTERFACE_DEFINED__
#define __IEnumeratorVxSpan_INTERFACE_DEFINED__

/* interface IEnumeratorVxSpan */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumeratorVxSpan;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f5c3a3cb-442d-4abc-84b7-687611079c21")
    IEnumeratorVxSpan : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrent( 
            /* [retval][out] */ VxSpan *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumeratorVxSpanVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumeratorVxSpan * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumeratorVxSpan * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumeratorVxSpan * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrent )( 
            IEnumeratorVxSpan * This,
            /* [retval][out] */ VxSpan *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            IEnumeratorVxSpan * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumeratorVxSpan * This);
        
        END_INTERFACE
    } IEnumeratorVxSpanVtbl;

    interface IEnumeratorVxSpan
    {
        CONST_VTBL struct IEnumeratorVxSpanVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumeratorVxSpan_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumeratorVxSpan_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumeratorVxSpan_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumeratorVxSpan_GetCurrent(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCurrent(This,pRetVal) ) 

#define IEnumeratorVxSpan_MoveNext(This,pRetVal)	\
    ( (This)->lpVtbl -> MoveNext(This,pRetVal) ) 

#define IEnumeratorVxSpan_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumeratorVxSpan_INTERFACE_DEFINED__ */


#ifndef __IListVxSpan_INTERFACE_DEFINED__
#define __IListVxSpan_INTERFACE_DEFINED__

/* interface IListVxSpan */
/* [uuid][object] */ 


EXTERN_C const IID IID_IListVxSpan;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f265752d-e60c-4c02-a3d4-9200a936b1b4")
    IListVxSpan : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ int *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [in] */ int index,
            /* [retval][out] */ VxSpan *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumeratorVxSpan **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IListVxSpanVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IListVxSpan * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IListVxSpan * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IListVxSpan * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IListVxSpan * This,
            /* [retval][out] */ int *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetElement )( 
            IListVxSpan * This,
            /* [in] */ int index,
            /* [retval][out] */ VxSpan *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IListVxSpan * This,
            /* [retval][out] */ IEnumeratorVxSpan **ppRetVal);
        
        END_INTERFACE
    } IListVxSpanVtbl;

    interface IListVxSpan
    {
        CONST_VTBL struct IListVxSpanVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IListVxSpan_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IListVxSpan_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IListVxSpan_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IListVxSpan_GetCount(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCount(This,pRetVal) ) 

#define IListVxSpan_GetElement(This,index,pRetVal)	\
    ( (This)->lpVtbl -> GetElement(This,index,pRetVal) ) 

#define IListVxSpan_GetEnumerator(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IListVxSpan_INTERFACE_DEFINED__ */


#ifndef __IEnumeratorIVxTextBuffer_INTERFACE_DEFINED__
#define __IEnumeratorIVxTextBuffer_INTERFACE_DEFINED__

/* interface IEnumeratorIVxTextBuffer */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumeratorIVxTextBuffer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7a1e5f7c-6f1d-4e1e-b13d-8656b71f2f97")
    IEnumeratorIVxTextBuffer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrent( 
            /* [retval][out] */ IVxTextBuffer **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumeratorIVxTextBufferVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumeratorIVxTextBuffer * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumeratorIVxTextBuffer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumeratorIVxTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrent )( 
            IEnumeratorIVxTextBuffer * This,
            /* [retval][out] */ IVxTextBuffer **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            IEnumeratorIVxTextBuffer * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumeratorIVxTextBuffer * This);
        
        END_INTERFACE
    } IEnumeratorIVxTextBufferVtbl;

    interface IEnumeratorIVxTextBuffer
    {
        CONST_VTBL struct IEnumeratorIVxTextBufferVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumeratorIVxTextBuffer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumeratorIVxTextBuffer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumeratorIVxTextBuffer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumeratorIVxTextBuffer_GetCurrent(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetCurrent(This,ppRetVal) ) 

#define IEnumeratorIVxTextBuffer_MoveNext(This,pRetVal)	\
    ( (This)->lpVtbl -> MoveNext(This,pRetVal) ) 

#define IEnumeratorIVxTextBuffer_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumeratorIVxTextBuffer_INTERFACE_DEFINED__ */


#ifndef __IListIVxTextBuffer_INTERFACE_DEFINED__
#define __IListIVxTextBuffer_INTERFACE_DEFINED__

/* interface IListIVxTextBuffer */
/* [uuid][object] */ 


EXTERN_C const IID IID_IListIVxTextBuffer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("121811be-de48-4320-b7c6-1237c0d2ff3b")
    IListIVxTextBuffer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ int *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [in] */ int index,
            /* [retval][out] */ IVxTextBuffer **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumeratorIVxTextBuffer **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IListIVxTextBufferVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IListIVxTextBuffer * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IListIVxTextBuffer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IListIVxTextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IListIVxTextBuffer * This,
            /* [retval][out] */ int *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetElement )( 
            IListIVxTextBuffer * This,
            /* [in] */ int index,
            /* [retval][out] */ IVxTextBuffer **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IListIVxTextBuffer * This,
            /* [retval][out] */ IEnumeratorIVxTextBuffer **ppRetVal);
        
        END_INTERFACE
    } IListIVxTextBufferVtbl;

    interface IListIVxTextBuffer
    {
        CONST_VTBL struct IListIVxTextBufferVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IListIVxTextBuffer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IListIVxTextBuffer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IListIVxTextBuffer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IListIVxTextBuffer_GetCount(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCount(This,pRetVal) ) 

#define IListIVxTextBuffer_GetElement(This,index,ppRetVal)	\
    ( (This)->lpVtbl -> GetElement(This,index,ppRetVal) ) 

#define IListIVxTextBuffer_GetEnumerator(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IListIVxTextBuffer_INTERFACE_DEFINED__ */


#ifndef __IVxGraphBuffersChangedEvent_INTERFACE_DEFINED__
#define __IVxGraphBuffersChangedEvent_INTERFACE_DEFINED__

/* interface IVxGraphBuffersChangedEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxGraphBuffersChangedEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d1b54e5e-2782-4cd7-b6a0-2eff76c07dfb")
    IVxGraphBuffersChangedEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnGraphBuffersChanged( 
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxGraphBuffersChangedEventArgs *pE) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxGraphBuffersChangedEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxGraphBuffersChangedEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxGraphBuffersChangedEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxGraphBuffersChangedEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnGraphBuffersChanged )( 
            IVxGraphBuffersChangedEvent * This,
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxGraphBuffersChangedEventArgs *pE);
        
        END_INTERFACE
    } IVxGraphBuffersChangedEventVtbl;

    interface IVxGraphBuffersChangedEvent
    {
        CONST_VTBL struct IVxGraphBuffersChangedEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxGraphBuffersChangedEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxGraphBuffersChangedEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxGraphBuffersChangedEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxGraphBuffersChangedEvent_OnGraphBuffersChanged(This,pSender,pE)	\
    ( (This)->lpVtbl -> OnGraphBuffersChanged(This,pSender,pE) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxGraphBuffersChangedEvent_INTERFACE_DEFINED__ */


#ifndef __IVxGraphBufferContentTypeChangedEvent_INTERFACE_DEFINED__
#define __IVxGraphBufferContentTypeChangedEvent_INTERFACE_DEFINED__

/* interface IVxGraphBufferContentTypeChangedEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxGraphBufferContentTypeChangedEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("566861da-0ce4-4f47-896f-133cfb73a62f")
    IVxGraphBufferContentTypeChangedEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnGraphBufferContentTypeChanged( 
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxGraphBufferContentTypeChangedEventArgs *pE) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxGraphBufferContentTypeChangedEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxGraphBufferContentTypeChangedEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxGraphBufferContentTypeChangedEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxGraphBufferContentTypeChangedEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnGraphBufferContentTypeChanged )( 
            IVxGraphBufferContentTypeChangedEvent * This,
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxGraphBufferContentTypeChangedEventArgs *pE);
        
        END_INTERFACE
    } IVxGraphBufferContentTypeChangedEventVtbl;

    interface IVxGraphBufferContentTypeChangedEvent
    {
        CONST_VTBL struct IVxGraphBufferContentTypeChangedEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxGraphBufferContentTypeChangedEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxGraphBufferContentTypeChangedEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxGraphBufferContentTypeChangedEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxGraphBufferContentTypeChangedEvent_OnGraphBufferContentTypeChanged(This,pSender,pE)	\
    ( (This)->lpVtbl -> OnGraphBufferContentTypeChanged(This,pSender,pE) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxGraphBufferContentTypeChangedEvent_INTERFACE_DEFINED__ */


#ifndef __IEnumeratorIVxTextSnapshot_INTERFACE_DEFINED__
#define __IEnumeratorIVxTextSnapshot_INTERFACE_DEFINED__

/* interface IEnumeratorIVxTextSnapshot */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumeratorIVxTextSnapshot;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("13dc5d4f-7e53-4180-8779-1364b6ae8322")
    IEnumeratorIVxTextSnapshot : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrent( 
            /* [retval][out] */ IVxTextSnapshot **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumeratorIVxTextSnapshotVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumeratorIVxTextSnapshot * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumeratorIVxTextSnapshot * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumeratorIVxTextSnapshot * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrent )( 
            IEnumeratorIVxTextSnapshot * This,
            /* [retval][out] */ IVxTextSnapshot **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            IEnumeratorIVxTextSnapshot * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumeratorIVxTextSnapshot * This);
        
        END_INTERFACE
    } IEnumeratorIVxTextSnapshotVtbl;

    interface IEnumeratorIVxTextSnapshot
    {
        CONST_VTBL struct IEnumeratorIVxTextSnapshotVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumeratorIVxTextSnapshot_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumeratorIVxTextSnapshot_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumeratorIVxTextSnapshot_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumeratorIVxTextSnapshot_GetCurrent(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetCurrent(This,ppRetVal) ) 

#define IEnumeratorIVxTextSnapshot_MoveNext(This,pRetVal)	\
    ( (This)->lpVtbl -> MoveNext(This,pRetVal) ) 

#define IEnumeratorIVxTextSnapshot_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumeratorIVxTextSnapshot_INTERFACE_DEFINED__ */


#ifndef __IListIVxTextSnapshot_INTERFACE_DEFINED__
#define __IListIVxTextSnapshot_INTERFACE_DEFINED__

/* interface IListIVxTextSnapshot */
/* [uuid][object] */ 


EXTERN_C const IID IID_IListIVxTextSnapshot;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b886572e-8f74-43c8-b8c1-f8bc0bdb5d1c")
    IListIVxTextSnapshot : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ int *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [in] */ int index,
            /* [retval][out] */ IVxTextSnapshot **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumeratorIVxTextSnapshot **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IListIVxTextSnapshotVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IListIVxTextSnapshot * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IListIVxTextSnapshot * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IListIVxTextSnapshot * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IListIVxTextSnapshot * This,
            /* [retval][out] */ int *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetElement )( 
            IListIVxTextSnapshot * This,
            /* [in] */ int index,
            /* [retval][out] */ IVxTextSnapshot **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IListIVxTextSnapshot * This,
            /* [retval][out] */ IEnumeratorIVxTextSnapshot **ppRetVal);
        
        END_INTERFACE
    } IListIVxTextSnapshotVtbl;

    interface IListIVxTextSnapshot
    {
        CONST_VTBL struct IListIVxTextSnapshotVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IListIVxTextSnapshot_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IListIVxTextSnapshot_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IListIVxTextSnapshot_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IListIVxTextSnapshot_GetCount(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCount(This,pRetVal) ) 

#define IListIVxTextSnapshot_GetElement(This,index,ppRetVal)	\
    ( (This)->lpVtbl -> GetElement(This,index,ppRetVal) ) 

#define IListIVxTextSnapshot_GetEnumerator(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IListIVxTextSnapshot_INTERFACE_DEFINED__ */


#ifndef __IEnumeratorVxSnapshotSpan_INTERFACE_DEFINED__
#define __IEnumeratorVxSnapshotSpan_INTERFACE_DEFINED__

/* interface IEnumeratorVxSnapshotSpan */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumeratorVxSnapshotSpan;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fd6cb9a7-f2c2-450d-b14e-756b5a013591")
    IEnumeratorVxSnapshotSpan : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrent( 
            /* [retval][out] */ VxSnapshotSpan *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumeratorVxSnapshotSpanVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumeratorVxSnapshotSpan * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumeratorVxSnapshotSpan * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumeratorVxSnapshotSpan * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrent )( 
            IEnumeratorVxSnapshotSpan * This,
            /* [retval][out] */ VxSnapshotSpan *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            IEnumeratorVxSnapshotSpan * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumeratorVxSnapshotSpan * This);
        
        END_INTERFACE
    } IEnumeratorVxSnapshotSpanVtbl;

    interface IEnumeratorVxSnapshotSpan
    {
        CONST_VTBL struct IEnumeratorVxSnapshotSpanVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumeratorVxSnapshotSpan_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumeratorVxSnapshotSpan_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumeratorVxSnapshotSpan_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumeratorVxSnapshotSpan_GetCurrent(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCurrent(This,pRetVal) ) 

#define IEnumeratorVxSnapshotSpan_MoveNext(This,pRetVal)	\
    ( (This)->lpVtbl -> MoveNext(This,pRetVal) ) 

#define IEnumeratorVxSnapshotSpan_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumeratorVxSnapshotSpan_INTERFACE_DEFINED__ */


#ifndef __IListVxSnapshotSpan_INTERFACE_DEFINED__
#define __IListVxSnapshotSpan_INTERFACE_DEFINED__

/* interface IListVxSnapshotSpan */
/* [uuid][object] */ 


EXTERN_C const IID IID_IListVxSnapshotSpan;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("75970b1d-36b9-419b-bf43-ec2a66776955")
    IListVxSnapshotSpan : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ int *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [in] */ int index,
            /* [retval][out] */ VxSnapshotSpan *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumeratorVxSnapshotSpan **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IListVxSnapshotSpanVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IListVxSnapshotSpan * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IListVxSnapshotSpan * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IListVxSnapshotSpan * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IListVxSnapshotSpan * This,
            /* [retval][out] */ int *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetElement )( 
            IListVxSnapshotSpan * This,
            /* [in] */ int index,
            /* [retval][out] */ VxSnapshotSpan *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IListVxSnapshotSpan * This,
            /* [retval][out] */ IEnumeratorVxSnapshotSpan **ppRetVal);
        
        END_INTERFACE
    } IListVxSnapshotSpanVtbl;

    interface IListVxSnapshotSpan
    {
        CONST_VTBL struct IListVxSnapshotSpanVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IListVxSnapshotSpan_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IListVxSnapshotSpan_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IListVxSnapshotSpan_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IListVxSnapshotSpan_GetCount(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCount(This,pRetVal) ) 

#define IListVxSnapshotSpan_GetElement(This,index,pRetVal)	\
    ( (This)->lpVtbl -> GetElement(This,index,pRetVal) ) 

#define IListVxSnapshotSpan_GetEnumerator(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IListVxSnapshotSpan_INTERFACE_DEFINED__ */


#ifndef __IEnumeratorVxSnapshotPoint_INTERFACE_DEFINED__
#define __IEnumeratorVxSnapshotPoint_INTERFACE_DEFINED__

/* interface IEnumeratorVxSnapshotPoint */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumeratorVxSnapshotPoint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("30ddec83-f0b5-4bd7-a4d3-2d82d51d6d70")
    IEnumeratorVxSnapshotPoint : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrent( 
            /* [retval][out] */ VxSnapshotPoint *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumeratorVxSnapshotPointVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumeratorVxSnapshotPoint * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumeratorVxSnapshotPoint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumeratorVxSnapshotPoint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrent )( 
            IEnumeratorVxSnapshotPoint * This,
            /* [retval][out] */ VxSnapshotPoint *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            IEnumeratorVxSnapshotPoint * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumeratorVxSnapshotPoint * This);
        
        END_INTERFACE
    } IEnumeratorVxSnapshotPointVtbl;

    interface IEnumeratorVxSnapshotPoint
    {
        CONST_VTBL struct IEnumeratorVxSnapshotPointVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumeratorVxSnapshotPoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumeratorVxSnapshotPoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumeratorVxSnapshotPoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumeratorVxSnapshotPoint_GetCurrent(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCurrent(This,pRetVal) ) 

#define IEnumeratorVxSnapshotPoint_MoveNext(This,pRetVal)	\
    ( (This)->lpVtbl -> MoveNext(This,pRetVal) ) 

#define IEnumeratorVxSnapshotPoint_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumeratorVxSnapshotPoint_INTERFACE_DEFINED__ */


#ifndef __IListVxSnapshotPoint_INTERFACE_DEFINED__
#define __IListVxSnapshotPoint_INTERFACE_DEFINED__

/* interface IListVxSnapshotPoint */
/* [uuid][object] */ 


EXTERN_C const IID IID_IListVxSnapshotPoint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("587a5a1a-4b4e-43f8-896f-7d61716a33cb")
    IListVxSnapshotPoint : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ int *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [in] */ int index,
            /* [retval][out] */ VxSnapshotPoint *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumeratorVxSnapshotPoint **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IListVxSnapshotPointVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IListVxSnapshotPoint * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IListVxSnapshotPoint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IListVxSnapshotPoint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IListVxSnapshotPoint * This,
            /* [retval][out] */ int *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetElement )( 
            IListVxSnapshotPoint * This,
            /* [in] */ int index,
            /* [retval][out] */ VxSnapshotPoint *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IListVxSnapshotPoint * This,
            /* [retval][out] */ IEnumeratorVxSnapshotPoint **ppRetVal);
        
        END_INTERFACE
    } IListVxSnapshotPointVtbl;

    interface IListVxSnapshotPoint
    {
        CONST_VTBL struct IListVxSnapshotPointVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IListVxSnapshotPoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IListVxSnapshotPoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IListVxSnapshotPoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IListVxSnapshotPoint_GetCount(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCount(This,pRetVal) ) 

#define IListVxSnapshotPoint_GetElement(This,index,pRetVal)	\
    ( (This)->lpVtbl -> GetElement(This,index,pRetVal) ) 

#define IListVxSnapshotPoint_GetEnumerator(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IListVxSnapshotPoint_INTERFACE_DEFINED__ */


#ifndef __IEnumeratorIUnknown_INTERFACE_DEFINED__
#define __IEnumeratorIUnknown_INTERFACE_DEFINED__

/* interface IEnumeratorIUnknown */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumeratorIUnknown;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("379d6c69-25b8-413d-b58c-015f2c7a942d")
    IEnumeratorIUnknown : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrent( 
            /* [retval][out] */ IUnknown **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumeratorIUnknownVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumeratorIUnknown * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumeratorIUnknown * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumeratorIUnknown * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrent )( 
            IEnumeratorIUnknown * This,
            /* [retval][out] */ IUnknown **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            IEnumeratorIUnknown * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumeratorIUnknown * This);
        
        END_INTERFACE
    } IEnumeratorIUnknownVtbl;

    interface IEnumeratorIUnknown
    {
        CONST_VTBL struct IEnumeratorIUnknownVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumeratorIUnknown_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumeratorIUnknown_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumeratorIUnknown_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumeratorIUnknown_GetCurrent(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetCurrent(This,ppRetVal) ) 

#define IEnumeratorIUnknown_MoveNext(This,pRetVal)	\
    ( (This)->lpVtbl -> MoveNext(This,pRetVal) ) 

#define IEnumeratorIUnknown_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumeratorIUnknown_INTERFACE_DEFINED__ */


#ifndef __IListIUnknown_INTERFACE_DEFINED__
#define __IListIUnknown_INTERFACE_DEFINED__

/* interface IListIUnknown */
/* [uuid][object] */ 


EXTERN_C const IID IID_IListIUnknown;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fdc0603f-f733-49c9-aad2-ac3e0ae513bb")
    IListIUnknown : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ int *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [in] */ int index,
            /* [retval][out] */ IUnknown **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumeratorIUnknown **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IListIUnknownVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IListIUnknown * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IListIUnknown * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IListIUnknown * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IListIUnknown * This,
            /* [retval][out] */ int *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetElement )( 
            IListIUnknown * This,
            /* [in] */ int index,
            /* [retval][out] */ IUnknown **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IListIUnknown * This,
            /* [retval][out] */ IEnumeratorIUnknown **ppRetVal);
        
        END_INTERFACE
    } IListIUnknownVtbl;

    interface IListIUnknown
    {
        CONST_VTBL struct IListIUnknownVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IListIUnknown_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IListIUnknown_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IListIUnknown_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IListIUnknown_GetCount(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCount(This,pRetVal) ) 

#define IListIUnknown_GetElement(This,index,ppRetVal)	\
    ( (This)->lpVtbl -> GetElement(This,index,ppRetVal) ) 

#define IListIUnknown_GetEnumerator(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IListIUnknown_INTERFACE_DEFINED__ */


#ifndef __IVxProjectionSourceSpansChangedEvent_INTERFACE_DEFINED__
#define __IVxProjectionSourceSpansChangedEvent_INTERFACE_DEFINED__

/* interface IVxProjectionSourceSpansChangedEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxProjectionSourceSpansChangedEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6c6c11a3-ec8a-426d-9c73-180431dcf306")
    IVxProjectionSourceSpansChangedEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnProjectionSourceSpansChanged( 
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxProjectionSourceSpansChangedEventArgs *pE) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxProjectionSourceSpansChangedEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxProjectionSourceSpansChangedEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxProjectionSourceSpansChangedEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxProjectionSourceSpansChangedEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnProjectionSourceSpansChanged )( 
            IVxProjectionSourceSpansChangedEvent * This,
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxProjectionSourceSpansChangedEventArgs *pE);
        
        END_INTERFACE
    } IVxProjectionSourceSpansChangedEventVtbl;

    interface IVxProjectionSourceSpansChangedEvent
    {
        CONST_VTBL struct IVxProjectionSourceSpansChangedEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxProjectionSourceSpansChangedEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxProjectionSourceSpansChangedEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxProjectionSourceSpansChangedEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxProjectionSourceSpansChangedEvent_OnProjectionSourceSpansChanged(This,pSender,pE)	\
    ( (This)->lpVtbl -> OnProjectionSourceSpansChanged(This,pSender,pE) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxProjectionSourceSpansChangedEvent_INTERFACE_DEFINED__ */


#ifndef __IVxProjectionSourceBuffersChangedEvent_INTERFACE_DEFINED__
#define __IVxProjectionSourceBuffersChangedEvent_INTERFACE_DEFINED__

/* interface IVxProjectionSourceBuffersChangedEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxProjectionSourceBuffersChangedEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5fd8dc1e-0c10-4026-8fde-a3f198815998")
    IVxProjectionSourceBuffersChangedEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnProjectionSourceBuffersChanged( 
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxProjectionSourceBuffersChangedEventArgs *pE) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxProjectionSourceBuffersChangedEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxProjectionSourceBuffersChangedEvent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxProjectionSourceBuffersChangedEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxProjectionSourceBuffersChangedEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnProjectionSourceBuffersChanged )( 
            IVxProjectionSourceBuffersChangedEvent * This,
            /* [in] */ IUnknown *pSender,
            /* [in] */ IVxProjectionSourceBuffersChangedEventArgs *pE);
        
        END_INTERFACE
    } IVxProjectionSourceBuffersChangedEventVtbl;

    interface IVxProjectionSourceBuffersChangedEvent
    {
        CONST_VTBL struct IVxProjectionSourceBuffersChangedEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxProjectionSourceBuffersChangedEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxProjectionSourceBuffersChangedEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxProjectionSourceBuffersChangedEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxProjectionSourceBuffersChangedEvent_OnProjectionSourceBuffersChanged(This,pSender,pE)	\
    ( (This)->lpVtbl -> OnProjectionSourceBuffersChanged(This,pSender,pE) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxProjectionSourceBuffersChangedEvent_INTERFACE_DEFINED__ */


#ifndef __IEnumeratorIVxTrackingSpan_INTERFACE_DEFINED__
#define __IEnumeratorIVxTrackingSpan_INTERFACE_DEFINED__

/* interface IEnumeratorIVxTrackingSpan */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumeratorIVxTrackingSpan;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("496727c4-5622-4889-94ae-ddd857bacea7")
    IEnumeratorIVxTrackingSpan : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrent( 
            /* [retval][out] */ IVxTrackingSpan **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumeratorIVxTrackingSpanVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumeratorIVxTrackingSpan * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumeratorIVxTrackingSpan * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumeratorIVxTrackingSpan * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrent )( 
            IEnumeratorIVxTrackingSpan * This,
            /* [retval][out] */ IVxTrackingSpan **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            IEnumeratorIVxTrackingSpan * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumeratorIVxTrackingSpan * This);
        
        END_INTERFACE
    } IEnumeratorIVxTrackingSpanVtbl;

    interface IEnumeratorIVxTrackingSpan
    {
        CONST_VTBL struct IEnumeratorIVxTrackingSpanVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumeratorIVxTrackingSpan_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumeratorIVxTrackingSpan_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumeratorIVxTrackingSpan_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumeratorIVxTrackingSpan_GetCurrent(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetCurrent(This,ppRetVal) ) 

#define IEnumeratorIVxTrackingSpan_MoveNext(This,pRetVal)	\
    ( (This)->lpVtbl -> MoveNext(This,pRetVal) ) 

#define IEnumeratorIVxTrackingSpan_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumeratorIVxTrackingSpan_INTERFACE_DEFINED__ */


#ifndef __IListIVxTrackingSpan_INTERFACE_DEFINED__
#define __IListIVxTrackingSpan_INTERFACE_DEFINED__

/* interface IListIVxTrackingSpan */
/* [uuid][object] */ 


EXTERN_C const IID IID_IListIVxTrackingSpan;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fb17674f-3e6c-4ad2-9d17-e605c3f45262")
    IListIVxTrackingSpan : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ int *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [in] */ int index,
            /* [retval][out] */ IVxTrackingSpan **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumeratorIVxTrackingSpan **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IListIVxTrackingSpanVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IListIVxTrackingSpan * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IListIVxTrackingSpan * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IListIVxTrackingSpan * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IListIVxTrackingSpan * This,
            /* [retval][out] */ int *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetElement )( 
            IListIVxTrackingSpan * This,
            /* [in] */ int index,
            /* [retval][out] */ IVxTrackingSpan **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IListIVxTrackingSpan * This,
            /* [retval][out] */ IEnumeratorIVxTrackingSpan **ppRetVal);
        
        END_INTERFACE
    } IListIVxTrackingSpanVtbl;

    interface IListIVxTrackingSpan
    {
        CONST_VTBL struct IListIVxTrackingSpanVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IListIVxTrackingSpan_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IListIVxTrackingSpan_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IListIVxTrackingSpan_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IListIVxTrackingSpan_GetCount(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCount(This,pRetVal) ) 

#define IListIVxTrackingSpan_GetElement(This,index,ppRetVal)	\
    ( (This)->lpVtbl -> GetElement(This,index,ppRetVal) ) 

#define IListIVxTrackingSpan_GetEnumerator(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IListIVxTrackingSpan_INTERFACE_DEFINED__ */


#ifndef __IEnumeratorIVxTextChange_INTERFACE_DEFINED__
#define __IEnumeratorIVxTextChange_INTERFACE_DEFINED__

/* interface IEnumeratorIVxTextChange */
/* [uuid][object] */ 


EXTERN_C const IID IID_IEnumeratorIVxTextChange;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a4728f3b-90ee-4783-a6af-0caeeea73147")
    IEnumeratorIVxTextChange : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrent( 
            /* [retval][out] */ IVxTextChange **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumeratorIVxTextChangeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumeratorIVxTextChange * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumeratorIVxTextChange * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumeratorIVxTextChange * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrent )( 
            IEnumeratorIVxTextChange * This,
            /* [retval][out] */ IVxTextChange **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            IEnumeratorIVxTextChange * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumeratorIVxTextChange * This);
        
        END_INTERFACE
    } IEnumeratorIVxTextChangeVtbl;

    interface IEnumeratorIVxTextChange
    {
        CONST_VTBL struct IEnumeratorIVxTextChangeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumeratorIVxTextChange_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumeratorIVxTextChange_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumeratorIVxTextChange_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumeratorIVxTextChange_GetCurrent(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetCurrent(This,ppRetVal) ) 

#define IEnumeratorIVxTextChange_MoveNext(This,pRetVal)	\
    ( (This)->lpVtbl -> MoveNext(This,pRetVal) ) 

#define IEnumeratorIVxTextChange_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumeratorIVxTextChange_INTERFACE_DEFINED__ */


#ifndef __IListIVxTextChange_INTERFACE_DEFINED__
#define __IListIVxTextChange_INTERFACE_DEFINED__

/* interface IListIVxTextChange */
/* [uuid][object] */ 


EXTERN_C const IID IID_IListIVxTextChange;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7627a97f-187f-428e-bba9-07183f73a088")
    IListIVxTextChange : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ int *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [in] */ int index,
            /* [retval][out] */ IVxTextChange **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumeratorIVxTextChange **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IListIVxTextChangeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IListIVxTextChange * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IListIVxTextChange * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IListIVxTextChange * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IListIVxTextChange * This,
            /* [retval][out] */ int *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetElement )( 
            IListIVxTextChange * This,
            /* [in] */ int index,
            /* [retval][out] */ IVxTextChange **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IListIVxTextChange * This,
            /* [retval][out] */ IEnumeratorIVxTextChange **ppRetVal);
        
        END_INTERFACE
    } IListIVxTextChangeVtbl;

    interface IListIVxTextChange
    {
        CONST_VTBL struct IListIVxTextChangeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IListIVxTextChange_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IListIVxTextChange_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IListIVxTextChange_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IListIVxTextChange_GetCount(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCount(This,pRetVal) ) 

#define IListIVxTextChange_GetElement(This,index,ppRetVal)	\
    ( (This)->lpVtbl -> GetElement(This,index,ppRetVal) ) 

#define IListIVxTextChange_GetEnumerator(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IListIVxTextChange_INTERFACE_DEFINED__ */


#ifndef __IVxDisposable_INTERFACE_DEFINED__
#define __IVxDisposable_INTERFACE_DEFINED__

/* interface IVxDisposable */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxDisposable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00c8c1e7-de26-42cf-a058-5ccda2b42beb")
    IVxDisposable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Dispose( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxDisposableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxDisposable * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxDisposable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxDisposable * This);
        
        HRESULT ( STDMETHODCALLTYPE *Dispose )( 
            IVxDisposable * This);
        
        END_INTERFACE
    } IVxDisposableVtbl;

    interface IVxDisposable
    {
        CONST_VTBL struct IVxDisposableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxDisposable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxDisposable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxDisposable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxDisposable_Dispose(This)	\
    ( (This)->lpVtbl -> Dispose(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxDisposable_INTERFACE_DEFINED__ */


#ifndef __IVxPropertyOwner_INTERFACE_DEFINED__
#define __IVxPropertyOwner_INTERFACE_DEFINED__

/* interface IVxPropertyOwner */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxPropertyOwner;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b7b3e0d6-f9f3-415e-a977-a06cc723aff1")
    IVxPropertyOwner : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetProperties( 
            /* [retval][out] */ IVxPropertyCollection **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxPropertyOwnerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxPropertyOwner * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxPropertyOwner * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxPropertyOwner * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperties )( 
            IVxPropertyOwner * This,
            /* [retval][out] */ IVxPropertyCollection **ppRetVal);
        
        END_INTERFACE
    } IVxPropertyOwnerVtbl;

    interface IVxPropertyOwner
    {
        CONST_VTBL struct IVxPropertyOwnerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxPropertyOwner_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxPropertyOwner_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxPropertyOwner_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxPropertyOwner_GetProperties(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetProperties(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxPropertyOwner_INTERFACE_DEFINED__ */


#ifndef __IVxPropertyCollection_INTERFACE_DEFINED__
#define __IVxPropertyCollection_INTERFACE_DEFINED__

/* interface IVxPropertyCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxPropertyCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("275f2096-2f87-4886-bff7-a216f6decaab")
    IVxPropertyCollection : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddProperty( 
            /* [in] */ IUnknown *pKey,
            /* [in] */ IUnknown *pProperty) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveProperty( 
            /* [in] */ IUnknown *pKey,
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty_2( 
            /* [in] */ IUnknown *pKey,
            /* [retval][out] */ IUnknown **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ContainsProperty( 
            /* [in] */ IUnknown *pKey,
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxPropertyCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxPropertyCollection * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxPropertyCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxPropertyCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddProperty )( 
            IVxPropertyCollection * This,
            /* [in] */ IUnknown *pKey,
            /* [in] */ IUnknown *pProperty);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveProperty )( 
            IVxPropertyCollection * This,
            /* [in] */ IUnknown *pKey,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty_2 )( 
            IVxPropertyCollection * This,
            /* [in] */ IUnknown *pKey,
            /* [retval][out] */ IUnknown **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *ContainsProperty )( 
            IVxPropertyCollection * This,
            /* [in] */ IUnknown *pKey,
            /* [retval][out] */ BOOL *pRetVal);
        
        END_INTERFACE
    } IVxPropertyCollectionVtbl;

    interface IVxPropertyCollection
    {
        CONST_VTBL struct IVxPropertyCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxPropertyCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxPropertyCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxPropertyCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxPropertyCollection_AddProperty(This,pKey,pProperty)	\
    ( (This)->lpVtbl -> AddProperty(This,pKey,pProperty) ) 

#define IVxPropertyCollection_RemoveProperty(This,pKey,pRetVal)	\
    ( (This)->lpVtbl -> RemoveProperty(This,pKey,pRetVal) ) 

#define IVxPropertyCollection_GetProperty_2(This,pKey,ppRetVal)	\
    ( (This)->lpVtbl -> GetProperty_2(This,pKey,ppRetVal) ) 

#define IVxPropertyCollection_ContainsProperty(This,pKey,pRetVal)	\
    ( (This)->lpVtbl -> ContainsProperty(This,pKey,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxPropertyCollection_INTERFACE_DEFINED__ */


#ifndef __IVxContentTypeRegistryService_INTERFACE_DEFINED__
#define __IVxContentTypeRegistryService_INTERFACE_DEFINED__

/* interface IVxContentTypeRegistryService */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxContentTypeRegistryService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("aeefbb53-ff73-45d0-a826-4f978725d21e")
    IVxContentTypeRegistryService : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetContentType( 
            /* [in] */ BSTR typeName,
            /* [retval][out] */ IVxContentType **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddContentType( 
            /* [in] */ BSTR typeName,
            /* [in] */ IEnumerableBSTR *pBaseTypeNames,
            /* [retval][out] */ IVxContentType **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveContentType( 
            /* [in] */ BSTR typeName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUnknownContentType( 
            /* [retval][out] */ IVxContentType **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContentTypes( 
            /* [retval][out] */ IEnumerableIVxContentType **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxContentTypeRegistryServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxContentTypeRegistryService * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxContentTypeRegistryService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxContentTypeRegistryService * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetContentType )( 
            IVxContentTypeRegistryService * This,
            /* [in] */ BSTR typeName,
            /* [retval][out] */ IVxContentType **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *AddContentType )( 
            IVxContentTypeRegistryService * This,
            /* [in] */ BSTR typeName,
            /* [in] */ IEnumerableBSTR *pBaseTypeNames,
            /* [retval][out] */ IVxContentType **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveContentType )( 
            IVxContentTypeRegistryService * This,
            /* [in] */ BSTR typeName);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknownContentType )( 
            IVxContentTypeRegistryService * This,
            /* [retval][out] */ IVxContentType **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetContentTypes )( 
            IVxContentTypeRegistryService * This,
            /* [retval][out] */ IEnumerableIVxContentType **ppRetVal);
        
        END_INTERFACE
    } IVxContentTypeRegistryServiceVtbl;

    interface IVxContentTypeRegistryService
    {
        CONST_VTBL struct IVxContentTypeRegistryServiceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxContentTypeRegistryService_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxContentTypeRegistryService_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxContentTypeRegistryService_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxContentTypeRegistryService_GetContentType(This,typeName,ppRetVal)	\
    ( (This)->lpVtbl -> GetContentType(This,typeName,ppRetVal) ) 

#define IVxContentTypeRegistryService_AddContentType(This,typeName,pBaseTypeNames,ppRetVal)	\
    ( (This)->lpVtbl -> AddContentType(This,typeName,pBaseTypeNames,ppRetVal) ) 

#define IVxContentTypeRegistryService_RemoveContentType(This,typeName)	\
    ( (This)->lpVtbl -> RemoveContentType(This,typeName) ) 

#define IVxContentTypeRegistryService_GetUnknownContentType(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetUnknownContentType(This,ppRetVal) ) 

#define IVxContentTypeRegistryService_GetContentTypes(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetContentTypes(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxContentTypeRegistryService_INTERFACE_DEFINED__ */


#ifndef __IVxContentType_INTERFACE_DEFINED__
#define __IVxContentType_INTERFACE_DEFINED__

/* interface IVxContentType */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxContentType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6faa3727-ed8f-4fc0-8032-82ad17394029")
    IVxContentType : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTypeName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsOfType( 
            /* [in] */ BSTR type,
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBaseTypes( 
            /* [retval][out] */ IEnumerableIVxContentType **ppRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxContentTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxContentType * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxContentType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxContentType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeName )( 
            IVxContentType * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            IVxContentType * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *IsOfType )( 
            IVxContentType * This,
            /* [in] */ BSTR type,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetBaseTypes )( 
            IVxContentType * This,
            /* [retval][out] */ IEnumerableIVxContentType **ppRetVal);
        
        END_INTERFACE
    } IVxContentTypeVtbl;

    interface IVxContentType
    {
        CONST_VTBL struct IVxContentTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxContentType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxContentType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxContentType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxContentType_GetTypeName(This,pRetVal)	\
    ( (This)->lpVtbl -> GetTypeName(This,pRetVal) ) 

#define IVxContentType_GetDisplayName(This,pRetVal)	\
    ( (This)->lpVtbl -> GetDisplayName(This,pRetVal) ) 

#define IVxContentType_IsOfType(This,type,pRetVal)	\
    ( (This)->lpVtbl -> IsOfType(This,type,pRetVal) ) 

#define IVxContentType_GetBaseTypes(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetBaseTypes(This,ppRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxContentType_INTERFACE_DEFINED__ */


#ifndef __IVxTextDocument_INTERFACE_DEFINED__
#define __IVxTextDocument_INTERFACE_DEFINED__

/* interface IVxTextDocument */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxTextDocument;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5498337a-84b2-41bf-ab74-e5b88419079f")
    IVxTextDocument : public IVxDisposable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFilePath( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTextBuffer( 
            /* [retval][out] */ IVxTextBuffer **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIsDirty( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AdviseFileActionOccurred( 
            /* [in] */ IVxTextDocumentFileActionEvent *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnadviseFileActionOccurred( 
            /* [in] */ IVxTextDocumentFileActionEvent *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AdviseDirtyStateChanged( 
            /* [in] */ IVxEventArgsEvent *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnadviseDirtyStateChanged( 
            /* [in] */ IVxEventArgsEvent *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Rename( 
            /* [in] */ BSTR newFilePath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reload( 
            /* [retval][out] */ VxReloadResult *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reload_2( 
            /* [in] */ VxEditOptions options,
            /* [retval][out] */ VxReloadResult *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIsReloading( 
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR filePath,
            /* [in] */ BOOL overwrite) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveAs_2( 
            /* [in] */ BSTR filePath,
            /* [in] */ BOOL overwrite,
            /* [in] */ BOOL createFolder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveAs_3( 
            /* [in] */ BSTR filePath,
            /* [in] */ BOOL overwrite,
            /* [in] */ IVxContentType *pNewContentType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveAs_4( 
            /* [in] */ BSTR filePath,
            /* [in] */ BOOL overwrite,
            /* [in] */ BOOL createFolder,
            /* [in] */ IVxContentType *pNewContentType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveCopy( 
            /* [in] */ BSTR filePath,
            /* [in] */ BOOL overwrite) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveCopy_2( 
            /* [in] */ BSTR filePath,
            /* [in] */ BOOL overwrite,
            /* [in] */ BOOL createFolder) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxTextDocumentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxTextDocument * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxTextDocument * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxTextDocument * This);
        
        HRESULT ( STDMETHODCALLTYPE *Dispose )( 
            IVxTextDocument * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetFilePath )( 
            IVxTextDocument * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetTextBuffer )( 
            IVxTextDocument * This,
            /* [retval][out] */ IVxTextBuffer **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsDirty )( 
            IVxTextDocument * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *AdviseFileActionOccurred )( 
            IVxTextDocument * This,
            /* [in] */ IVxTextDocumentFileActionEvent *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseFileActionOccurred )( 
            IVxTextDocument * This,
            /* [in] */ IVxTextDocumentFileActionEvent *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *AdviseDirtyStateChanged )( 
            IVxTextDocument * This,
            /* [in] */ IVxEventArgsEvent *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *UnadviseDirtyStateChanged )( 
            IVxTextDocument * This,
            /* [in] */ IVxEventArgsEvent *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *Rename )( 
            IVxTextDocument * This,
            /* [in] */ BSTR newFilePath);
        
        HRESULT ( STDMETHODCALLTYPE *Reload )( 
            IVxTextDocument * This,
            /* [retval][out] */ VxReloadResult *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Reload_2 )( 
            IVxTextDocument * This,
            /* [in] */ VxEditOptions options,
            /* [retval][out] */ VxReloadResult *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsReloading )( 
            IVxTextDocument * This,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *Save )( 
            IVxTextDocument * This);
        
        HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            IVxTextDocument * This,
            /* [in] */ BSTR filePath,
            /* [in] */ BOOL overwrite);
        
        HRESULT ( STDMETHODCALLTYPE *SaveAs_2 )( 
            IVxTextDocument * This,
            /* [in] */ BSTR filePath,
            /* [in] */ BOOL overwrite,
            /* [in] */ BOOL createFolder);
        
        HRESULT ( STDMETHODCALLTYPE *SaveAs_3 )( 
            IVxTextDocument * This,
            /* [in] */ BSTR filePath,
            /* [in] */ BOOL overwrite,
            /* [in] */ IVxContentType *pNewContentType);
        
        HRESULT ( STDMETHODCALLTYPE *SaveAs_4 )( 
            IVxTextDocument * This,
            /* [in] */ BSTR filePath,
            /* [in] */ BOOL overwrite,
            /* [in] */ BOOL createFolder,
            /* [in] */ IVxContentType *pNewContentType);
        
        HRESULT ( STDMETHODCALLTYPE *SaveCopy )( 
            IVxTextDocument * This,
            /* [in] */ BSTR filePath,
            /* [in] */ BOOL overwrite);
        
        HRESULT ( STDMETHODCALLTYPE *SaveCopy_2 )( 
            IVxTextDocument * This,
            /* [in] */ BSTR filePath,
            /* [in] */ BOOL overwrite,
            /* [in] */ BOOL createFolder);
        
        END_INTERFACE
    } IVxTextDocumentVtbl;

    interface IVxTextDocument
    {
        CONST_VTBL struct IVxTextDocumentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVxTextDocument_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVxTextDocument_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVxTextDocument_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVxTextDocument_Dispose(This)	\
    ( (This)->lpVtbl -> Dispose(This) ) 


#define IVxTextDocument_GetFilePath(This,pRetVal)	\
    ( (This)->lpVtbl -> GetFilePath(This,pRetVal) ) 

#define IVxTextDocument_GetTextBuffer(This,ppRetVal)	\
    ( (This)->lpVtbl -> GetTextBuffer(This,ppRetVal) ) 

#define IVxTextDocument_GetIsDirty(This,pRetVal)	\
    ( (This)->lpVtbl -> GetIsDirty(This,pRetVal) ) 

#define IVxTextDocument_AdviseFileActionOccurred(This,pValue)	\
    ( (This)->lpVtbl -> AdviseFileActionOccurred(This,pValue) ) 

#define IVxTextDocument_UnadviseFileActionOccurred(This,pValue)	\
    ( (This)->lpVtbl -> UnadviseFileActionOccurred(This,pValue) ) 

#define IVxTextDocument_AdviseDirtyStateChanged(This,pValue)	\
    ( (This)->lpVtbl -> AdviseDirtyStateChanged(This,pValue) ) 

#define IVxTextDocument_UnadviseDirtyStateChanged(This,pValue)	\
    ( (This)->lpVtbl -> UnadviseDirtyStateChanged(This,pValue) ) 

#define IVxTextDocument_Rename(This,newFilePath)	\
    ( (This)->lpVtbl -> Rename(This,newFilePath) ) 

#define IVxTextDocument_Reload(This,pRetVal)	\
    ( (This)->lpVtbl -> Reload(This,pRetVal) ) 

#define IVxTextDocument_Reload_2(This,options,pRetVal)	\
    ( (This)->lpVtbl -> Reload_2(This,options,pRetVal) ) 

#define IVxTextDocument_GetIsReloading(This,pRetVal)	\
    ( (This)->lpVtbl -> GetIsReloading(This,pRetVal) ) 

#define IVxTextDocument_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define IVxTextDocument_SaveAs(This,filePath,overwrite)	\
    ( (This)->lpVtbl -> SaveAs(This,filePath,overwrite) ) 

#define IVxTextDocument_SaveAs_2(This,filePath,overwrite,createFolder)	\
    ( (This)->lpVtbl -> SaveAs_2(This,filePath,overwrite,createFolder) ) 

#define IVxTextDocument_SaveAs_3(This,filePath,overwrite,pNewContentType)	\
    ( (This)->lpVtbl -> SaveAs_3(This,filePath,overwrite,pNewContentType) ) 

#define IVxTextDocument_SaveAs_4(This,filePath,overwrite,createFolder,pNewContentType)	\
    ( (This)->lpVtbl -> SaveAs_4(This,filePath,overwrite,createFolder,pNewContentType) ) 

#define IVxTextDocument_SaveCopy(This,filePath,overwrite)	\
    ( (This)->lpVtbl -> SaveCopy(This,filePath,overwrite) ) 

#define IVxTextDocument_SaveCopy_2(This,filePath,overwrite,createFolder)	\
    ( (This)->lpVtbl -> SaveCopy_2(This,filePath,overwrite,createFolder) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVxTextDocument_INTERFACE_DEFINED__ */


#ifndef __IVxTextDocumentFactoryService_INTERFACE_DEFINED__
#define __IVxTextDocumentFactoryService_INTERFACE_DEFINED__

/* interface IVxTextDocumentFactoryService */
/* [uuid][object] */ 


EXTERN_C const IID IID_IVxTextDocumentFactoryService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f4d19c93-7267-4509-9284-88e8c08be615")
    IVxTextDocumentFactoryService : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateAndLoadTextDocument( 
            /* [in] */ BSTR filePath,
            /* [in] */ IVxContentType *pContentType,
            /* [retval][out] */ IVxTextDocument **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateTextDocument( 
            /* [in] */ IVxTextBuffer *pTextBuffer,
            /* [in] */ BSTR filePath,
            /* [retval][out] */ IVxTextDocument **ppRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TryGetTextDocument( 
            /* [in] */ IVxTextBuffer *pTextBuffer,
            /* [out] */ IVxTextDocument **ppTextDocument,
            /* [retval][out] */ BOOL *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AdviseTextDocumentCreated( 
            /* [in] */ IVxTextDocumentEvent *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnadviseTextDocumentCreated( 
            /* [in] */ IVxTextDocumentEvent *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AdviseTextDocumentDisposed( 
            /* [in] */ IVxTextDocumentEvent *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnadviseTextDocumentDisposed( 
            /* [in] */ IVxTextDocumentEvent *pValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVxTextDocumentFactoryServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVxTextDocumentFactoryService * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVxTextDocumentFactoryService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVxTextDocumentFactoryService * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateAndLoadTextDocument )( 
            IVxTextDocumentFactoryService * This,
            /* [in] */ BSTR filePath,
            /* [in] */ IVxContentType *pContentType,
            /* [retval][out] */ IVxTextDocument **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTextDocument )( 
            IVxTextDocumentFactoryService * This,
            /* [in] */ IVxTextBuffer *pTextBuffer,
            /* [in] */ BSTR filePath,
            /* [retval][out] */ IVxTextDocument **ppRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *TryGetTextDocument )( 
            IVxTextDocumentFactoryService * This,
            /* [in] */ IVxTextBuffer *pTextBuffer,
            /* [out] */ IVxTextDocument **ppTextDocument,
            /* [retval][out] */ BOOL *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *AdviseTextDocumentCreated )( 
            IVxTextDocumentFactoryService * This,
            /* [in] */ IVxT