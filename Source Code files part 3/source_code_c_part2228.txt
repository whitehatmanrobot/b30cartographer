    virtual HRESULT STDMETHODCALLTYPE RemoveElement( 
            /* [in] */ __RPC__in_opt IHTMLElement *pElementRemove) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerFinish) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Copy( 
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerSourceStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerSourceFinish,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerTarget) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerSourceStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerSourceFinish,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerTarget) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertText( 
            /* [in] */ __RPC__in OLECHAR *pchText,
            /* [in] */ long cch,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerTarget) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ParseString( 
            /* [in] */ __RPC__in OLECHAR *pchHTML,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IMarkupContainer **ppContainerResult,
            /* [in] */ __RPC__in_opt IMarkupPointer *ppPointerStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *ppPointerFinish) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ParseGlobal( 
            /* [in] */ __RPC__in HGLOBAL hglobalHTML,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IMarkupContainer **ppContainerResult,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerFinish) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsScopedElement( 
            /* [in] */ __RPC__in_opt IHTMLElement *pElement,
            /* [out] */ __RPC__out BOOL *pfScoped) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElementTagId( 
            /* [in] */ __RPC__in_opt IHTMLElement *pElement,
            /* [out] */ __RPC__out ELEMENT_TAG_ID *ptagId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTagIDForName( 
            /* [in] */ __RPC__in BSTR bstrName,
            /* [out] */ __RPC__out ELEMENT_TAG_ID *ptagId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNameForTagID( 
            /* [in] */ ELEMENT_TAG_ID tagId,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MovePointersToRange( 
            /* [in] */ __RPC__in_opt IHTMLTxtRange *pIRange,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerFinish) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveRangeToPointers( 
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerFinish,
            /* [in] */ __RPC__in_opt IHTMLTxtRange *pIRange) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BeginUndoUnit( 
            /* [in] */ __RPC__in OLECHAR *pchTitle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndUndoUnit( void) = 0;
        
    };
    




#endif 	/* __IMarkupServices_INTERFACE_DEFINED__ */


#ifndef __IMarkupServices2_INTERFACE_DEFINED__
#define __IMarkupServices2_INTERFACE_DEFINED__

/* interface IMarkupServices2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IMarkupServices2;

    
    MIDL_INTERFACE("3050f682-98b5-11cf-bb82-00aa00bdce0b")
    IMarkupServices2 : public IMarkupServices
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ParseGlobalEx( 
            /* [in] */ __RPC__in HGLOBAL hglobalHTML,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IMarkupContainer *pContext,
            /* [out] */ __RPC__deref_out_opt IMarkupContainer **ppContainerResult,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerFinish) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ValidateElements( 
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerFinish,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerTarget,
            /* [out][in] */ __RPC__inout_opt IMarkupPointer *pPointerStatus,
            /* [out] */ __RPC__deref_out_opt IHTMLElement **ppElemFailBottom,
            /* [out] */ __RPC__deref_out_opt IHTMLElement **ppElemFailTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveSegmentsToClipboard( 
            /* [in] */ __RPC__in_opt ISegmentList *pSegmentList,
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    




#endif 	/* __IMarkupServices2_INTERFACE_DEFINED__ */


#ifndef __IHTMLChangePlayback_INTERFACE_DEFINED__
#define __IHTMLChangePlayback_INTERFACE_DEFINED__

/* interface IHTMLChangePlayback */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLChangePlayback;

    
    MIDL_INTERFACE("3050f6e0-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLChangePlayback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ExecChange( 
            /* [in] */ __RPC__in BYTE *pbRecord,
            /* [in] */ BOOL fForward) = 0;
        
    };
    




#endif 	/* __IHTMLChangePlayback_INTERFACE_DEFINED__ */


#ifndef __IMarkupPointer2_INTERFACE_DEFINED__
#define __IMarkupPointer2_INTERFACE_DEFINED__

/* interface IMarkupPointer2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IMarkupPointer2;

    
    MIDL_INTERFACE("3050f675-98b5-11cf-bb82-00aa00bdce0b")
    IMarkupPointer2 : public IMarkupPointer
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE IsAtWordBreak( 
            /* [out] */ __RPC__out BOOL *pfAtBreak) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMarkupPosition( 
            /* [out] */ __RPC__out long *plMP) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToMarkupPosition( 
            /* [in] */ __RPC__in_opt IMarkupContainer *pContainer,
            /* [in] */ long lMP) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveUnitBounded( 
            /* [in] */ MOVEUNIT_ACTION muAction,
            /* [in] */ __RPC__in_opt IMarkupPointer *pIBoundary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsInsideURL( 
            /* [in] */ __RPC__in_opt IMarkupPointer *pRight,
            /* [out] */ __RPC__out BOOL *pfResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToContent( 
            /* [in] */ __RPC__in_opt IHTMLElement *pIElement,
            /* [in] */ BOOL fAtStart) = 0;
        
    };
    




#endif 	/* __IMarkupPointer2_INTERFACE_DEFINED__ */


#ifndef __IMarkupTextFrags_INTERFACE_DEFINED__
#define __IMarkupTextFrags_INTERFACE_DEFINED__

/* interface IMarkupTextFrags */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IMarkupTextFrags;

    
    MIDL_INTERFACE("3050f5fa-98b5-11cf-bb82-00aa00bdce0b")
    IMarkupTextFrags : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTextFragCount( 
            /* [out] */ __RPC__out long *pcFrags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTextFrag( 
            /* [in] */ long iFrag,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrFrag,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerFrag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveTextFrag( 
            /* [in] */ long iFrag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertTextFrag( 
            /* [in] */ long iFrag,
            /* [in] */ __RPC__in BSTR bstrInsert,
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerInsert) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FindTextFragFromMarkupPointer( 
            /* [in] */ __RPC__in_opt IMarkupPointer *pPointerFind,
            /* [out] */ __RPC__out long *piFrag,
            /* [out] */ __RPC__out BOOL *pfFragFound) = 0;
        
    };
    




#endif 	/* __IMarkupTextFrags_INTERFACE_DEFINED__ */


#ifndef __IXMLGenericParse_INTERFACE_DEFINED__
#define __IXMLGenericParse_INTERFACE_DEFINED__

/* interface IXMLGenericParse */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IXMLGenericParse;

    
    MIDL_INTERFACE("E4E23071-4D07-11d2-AE76-0080C73BC199")
    IXMLGenericParse : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetGenericParse( 
            /* [in] */ VARIANT_BOOL fDoGeneric) = 0;
        
    };
    




#endif 	/* __IXMLGenericParse_INTERFACE_DEFINED__ */


#ifndef __IHTMLEditHost_INTERFACE_DEFINED__
#define __IHTMLEditHost_INTERFACE_DEFINED__

/* interface IHTMLEditHost */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLEditHost;

    
    MIDL_INTERFACE("3050f6a0-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEditHost : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SnapRect( 
            /* [in] */ __RPC__in_opt IHTMLElement *pIElement,
            /* [out][in] */ __RPC__inout RECT *prcNew,
            /* [in] */ ELEMENT_CORNER eHandle) = 0;
        
    };
    




#endif 	/* __IHTMLEditHost_INTERFACE_DEFINED__ */


#ifndef __IHTMLEditHost2_INTERFACE_DEFINED__
#define __IHTMLEditHost2_INTERFACE_DEFINED__

/* interface IHTMLEditHost2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLEditHost2;

    
    MIDL_INTERFACE("3050f848-98b5-11cf-bb82-00aa00bdce0d")
    IHTMLEditHost2 : public IHTMLEditHost
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PreDrag( void) = 0;
        
    };
    




#endif 	/* __IHTMLEditHost2_INTERFACE_DEFINED__ */


#ifndef __ISequenceNumber_INTERFACE_DEFINED__
#define __ISequenceNumber_INTERFACE_DEFINED__

/* interface ISequenceNumber */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ISequenceNumber;

    
    MIDL_INTERFACE("3050f6c1-98b5-11cf-bb82-00aa00bdce0b")
    ISequenceNumber : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSequenceNumber( 
            /* [in] */ long nCurrent,
            /* [out] */ __RPC__out long *pnNew) = 0;
        
    };
    




#endif 	/* __ISequenceNumber_INTERFACE_DEFINED__ */


#ifndef __IIMEServices_INTERFACE_DEFINED__
#define __IIMEServices_INTERFACE_DEFINED__

/* interface IIMEServices */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IIMEServices;

    
    MIDL_INTERFACE("3050f6ca-98b5-11cf-bb82-00aa00bdce0b")
    IIMEServices : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetActiveIMM( 
            /* [out] */ __RPC__deref_out_opt IActiveIMMApp **ppActiveIMM) = 0;
        
    };
    




#endif 	/* __IIMEServices_INTERFACE_DEFINED__ */


#ifndef __ISelectionServicesListener_INTERFACE_DEFINED__
#define __ISelectionServicesListener_INTERFACE_DEFINED__

/* interface ISelectionServicesListener */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ISelectionServicesListener;

    
    MIDL_INTERFACE("3050f699-98b5-11cf-bb82-00aa00bdce0b")
    ISelectionServicesListener : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BeginSelectionUndo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndSelectionUndo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnSelectedElementExit( 
            /* [in] */ __RPC__in_opt IMarkupPointer *pIElementStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *pIElementEnd,
            /* [in] */ __RPC__in_opt IMarkupPointer *pIElementContentStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *pIElementContentEnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnChangeType( 
            /* [in] */ SELECTION_TYPE eType,
            /* [in] */ __RPC__in_opt ISelectionServicesListener *pIListener) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTypeDetail( 
            /* [out] */ __RPC__deref_out_opt BSTR *pTypeDetail) = 0;
        
    };
    




#endif 	/* __ISelectionServicesListener_INTERFACE_DEFINED__ */


#ifndef __ISelectionServices_INTERFACE_DEFINED__
#define __ISelectionServices_INTERFACE_DEFINED__

/* interface ISelectionServices */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ISelectionServices;

    
    MIDL_INTERFACE("3050f684-98b5-11cf-bb82-00aa00bdce0b")
    ISelectionServices : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetSelectionType( 
            /* [in] */ SELECTION_TYPE eType,
            /* [in] */ __RPC__in_opt ISelectionServicesListener *pIListener) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMarkupContainer( 
            /* [out] */ __RPC__deref_out_opt IMarkupContainer **ppIContainer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddSegment( 
            /* [in] */ __RPC__in_opt IMarkupPointer *pIStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *pIEnd,
            /* [out] */ __RPC__deref_out_opt ISegment **ppISegmentAdded) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddElementSegment( 
            /* [in] */ __RPC__in_opt IHTMLElement *pIElement,
            /* [out] */ __RPC__deref_out_opt IElementSegment **ppISegmentAdded) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveSegment( 
            /* [in] */ __RPC__in_opt ISegment *pISegment) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectionServicesListener( 
            /* [out] */ __RPC__deref_out_opt ISelectionServicesListener **ppISelectionServicesListener) = 0;
        
    };
    




#endif 	/* __ISelectionServices_INTERFACE_DEFINED__ */


#ifndef __IHTMLEditDesigner_INTERFACE_DEFINED__
#define __IHTMLEditDesigner_INTERFACE_DEFINED__

/* interface IHTMLEditDesigner */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLEditDesigner;

    
    MIDL_INTERFACE("3050f662-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEditDesigner : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PreHandleEvent( 
            /* [in] */ DISPID inEvtDispId,
            /* [in] */ __RPC__in_opt IHTMLEventObj *pIEventObj) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PostHandleEvent( 
            /* [in] */ DISPID inEvtDispId,
            /* [in] */ __RPC__in_opt IHTMLEventObj *pIEventObj) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TranslateAccelerator( 
            /* [in] */ DISPID inEvtDispId,
            /* [in] */ __RPC__in_opt IHTMLEventObj *pIEventObj) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PostEditorEventNotify( 
            /* [in] */ DISPID inEvtDispId,
            /* [in] */ __RPC__in_opt IHTMLEventObj *pIEventObj) = 0;
        
    };
    




#endif 	/* __IHTMLEditDesigner_INTERFACE_DEFINED__ */


#ifndef __IHTMLEditServices_INTERFACE_DEFINED__
#define __IHTMLEditServices_INTERFACE_DEFINED__

/* interface IHTMLEditServices */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLEditServices;

    
    MIDL_INTERFACE("3050f663-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEditServices : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddDesigner( 
            /* [in] */ __RPC__in_opt IHTMLEditDesigner *pIDesigner) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveDesigner( 
            /* [in] */ __RPC__in_opt IHTMLEditDesigner *pIDesigner) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectionServices( 
            /* [in] */ __RPC__in_opt IMarkupContainer *pIContainer,
            /* [out] */ __RPC__deref_out_opt ISelectionServices **ppSelSvc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToSelectionAnchor( 
            /* [in] */ __RPC__in_opt IMarkupPointer *pIStartAnchor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToSelectionEnd( 
            /* [in] */ __RPC__in_opt IMarkupPointer *pIEndAnchor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SelectRange( 
            /* [in] */ __RPC__in_opt IMarkupPointer *pStart,
            /* [in] */ __RPC__in_opt IMarkupPointer *pEnd,
            /* [in] */ SELECTION_TYPE eType) = 0;
        
    };
    




#endif 	/* __IHTMLEditServices_INTERFACE_DEFINED__ */


#ifndef __IHTMLEditServices2_INTERFACE_DEFINED__
#define __IHTMLEditServices2_INTERFACE_DEFINED__

/* interface IHTMLEditServices2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLEditServices2;

    
    MIDL_INTERFACE("3050f812-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEditServices2 : public IHTMLEditServices
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MoveToSelectionAnchorEx( 
            /* [in] */ __RPC__in_opt IDisplayPointer *pIStartAnchor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToSelectionEndEx( 
            /* [in] */ __RPC__in_opt IDisplayPointer *pIEndAnchor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FreezeVirtualCaretPos( 
            /* [in] */ BOOL fReCompute) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnFreezeVirtualCaretPos( 
            /* [in] */ BOOL fReset) = 0;
        
    };
    




#endif 	/* __IHTMLEditServices2_INTERFACE_DEFINED__ */


#ifndef __IHTMLComputedStyle_INTERFACE_DEFINED__
#define __IHTMLComputedStyle_INTERFACE_DEFINED__

/* interface IHTMLComputedStyle */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLComputedStyle;

    
    MIDL_INTERFACE("3050f6c3-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLComputedStyle : public IUnknown
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bold( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_italic( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_underline( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_overline( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_strikeOut( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_subScript( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_superScript( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_explicitFace( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fontWeight( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fontSize( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fontName( 
            /* [out][retval] */ __RPC__out TCHAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_hasBgColor( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_textColor( 
            /* [out][retval] */ __RPC__out DWORD *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundColor( 
            /* [out][retval] */ __RPC__out DWORD *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_preFormatted( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_direction( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_blockDirection( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_OL( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsEqual( 
            /* [in] */ __RPC__in_opt IHTMLComputedStyle *pComputedStyle,
            /* [out] */ __RPC__out VARIANT_BOOL *pfEqual) = 0;
        
    };
    




#endif 	/* __IHTMLComputedStyle_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HtmlDlgSafeHelper;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f819-98b5-11cf-bb82-00aa00bdce0b")
HtmlDlgSafeHelper;
#endif

EXTERN_C const CLSID CLSID_BlockFormats;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f831-98b5-11cf-bb82-00aa00bdce0b")
BlockFormats;
#endif

EXTERN_C const CLSID CLSID_FontNames;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f83a-98b5-11cf-bb82-00aa00bdce0b")
FontNames;
#endif

#ifndef __HTMLNamespaceEvents_DISPINTERFACE_DEFINED__
#define __HTMLNamespaceEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLNamespaceEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLNamespaceEvents;


    MIDL_INTERFACE("3050f6bd-98b5-11cf-bb82-00aa00bdce0b")
    HTMLNamespaceEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLNamespaceEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLNamespace_INTERFACE_DEFINED__
#define __IHTMLNamespace_INTERFACE_DEFINED__

/* interface IHTMLNamespace */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLNamespace;

    
    MIDL_INTERFACE("3050f6bb-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLNamespace : public IDispatch
    {
    public:
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_urn( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_tagNames( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onreadystatechange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onreadystatechange( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE doImport( 
            /* [in] */ __RPC__in BSTR bstrImplementationUrl) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE attachEvent( 
            /* [in] */ __RPC__in BSTR event,
            /* [in] */ __RPC__in_opt IDispatch *pDisp,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfResult) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE detachEvent( 
            /* [in] */ __RPC__in BSTR event,
            /* [in] */ __RPC__in_opt IDispatch *pDisp) = 0;
        
    };
    




#endif 	/* __IHTMLNamespace_INTERFACE_DEFINED__ */


#ifndef __IHTMLNamespaceCollection_INTERFACE_DEFINED__
#define __IHTMLNamespaceCollection_INTERFACE_DEFINED__

/* interface IHTMLNamespaceCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLNamespaceCollection;

    
    MIDL_INTERFACE("3050f6b8-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLNamespaceCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ VARIANT index,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **ppNamespace) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE add( 
            /* [in] */ __RPC__in BSTR bstrNamespace,
            /* [in] */ __RPC__in BSTR bstrUrn,
            /* [in][optional] */ VARIANT implementationUrl,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **ppNamespace) = 0;
        
    };
    




#endif 	/* __IHTMLNamespaceCollection_INTERFACE_DEFINED__ */


#ifndef __DispHTMLNamespace_DISPINTERFACE_DEFINED__
#define __DispHTMLNamespace_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLNamespace */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLNamespace;


    MIDL_INTERFACE("3050f54f-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLNamespace : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLNamespace_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLNamespace;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f6bc-98b5-11cf-bb82-00aa00bdce0b")
HTMLNamespace;
#endif

#ifndef __DispHTMLNamespaceCollection_DISPINTERFACE_DEFINED__
#define __DispHTMLNamespaceCollection_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLNamespaceCollection */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLNamespaceCollection;


    MIDL_INTERFACE("3050f550-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLNamespaceCollection : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLNamespaceCollection_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLNamespaceCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f6b9-98b5-11cf-bb82-00aa00bdce0b")
HTMLNamespaceCollection;
#endif

#ifndef __IHTMLPainter_INTERFACE_DEFINED__
#define __IHTMLPainter_INTERFACE_DEFINED__

/* interface IHTMLPainter */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLPainter;

    
    MIDL_INTERFACE("3050f6a6-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPainter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Draw( 
            /* [in] */ RECT rcBounds,
            /* [in] */ RECT rcUpdate,
            /* [in] */ LONG lDrawFlags,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ __RPC__in LPVOID pvDrawObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnResize( 
            /* [in] */ SIZE size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPainterInfo( 
            /* [out] */ __RPC__out HTML_PAINTER_INFO *pInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HitTestPoint( 
            /* [in] */ POINT pt,
            /* [out] */ __RPC__out BOOL *pbHit,
            /* [out] */ __RPC__out LONG *plPartID) = 0;
        
    };
    




#endif 	/* __IHTMLPainter_INTERFACE_DEFINED__ */


#ifndef __IHTMLPaintSite_INTERFACE_DEFINED__
#define __IHTMLPaintSite_INTERFACE_DEFINED__

/* interface IHTMLPaintSite */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLPaintSite;

    
    MIDL_INTERFACE("3050f6a7-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPaintSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InvalidatePainterInfo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateRect( 
            /* [in] */ __RPC__in RECT *prcInvalid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateRegion( 
            /* [in] */ __RPC__in HRGN rgnInvalid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDrawInfo( 
            /* [in] */ LONG lFlags,
            /* [out] */ __RPC__out HTML_PAINT_DRAW_INFO *pDrawInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TransformGlobalToLocal( 
            /* [in] */ POINT ptGlobal,
            /* [out] */ __RPC__out POINT *pptLocal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TransformLocalToGlobal( 
            /* [in] */ POINT ptLocal,
            /* [out] */ __RPC__out POINT *pptGlobal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHitTestCookie( 
            /* [out] */ __RPC__out LONG *plCookie) = 0;
        
    };
    




#endif 	/* __IHTMLPaintSite_INTERFACE_DEFINED__ */


#ifndef __IHTMLPainterEventInfo_INTERFACE_DEFINED__
#define __IHTMLPainterEventInfo_INTERFACE_DEFINED__

/* interface IHTMLPainterEventInfo */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLPainterEventInfo;

    
    MIDL_INTERFACE("3050f6df-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPainterEventInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEventInfoFlags( 
            /* [out] */ __RPC__out long *plEventInfoFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEventTarget( 
            /* [in] */ __RPC__deref_in_opt IHTMLElement **ppElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCursor( 
            /* [in] */ LONG lPartID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StringFromPartID( 
            /* [in] */ LONG lPartID,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrPart) = 0;
        
    };
    




#endif 	/* __IHTMLPainterEventInfo_INTERFACE_DEFINED__ */


#ifndef __IHTMLPainterOverlay_INTERFACE_DEFINED__
#define __IHTMLPainterOverlay_INTERFACE_DEFINED__

/* interface IHTMLPainterOverlay */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLPainterOverlay;

    
    MIDL_INTERFACE("3050f7e3-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPainterOverlay : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnMove( 
            /* [in] */ RECT rcDevice) = 0;
        
    };
    




#endif 	/* __IHTMLPainterOverlay_INTERFACE_DEFINED__ */


#ifndef __IHTMLIPrintCollection_INTERFACE_DEFINED__
#define __IHTMLIPrintCollection_INTERFACE_DEFINED__

/* interface IHTMLIPrintCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLIPrintCollection;

    
    MIDL_INTERFACE("3050f6b5-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLIPrintCollection : public IDispatch
    {
    public:
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ long index,
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **ppIPrint) = 0;
        
    };
    




#endif 	/* __IHTMLIPrintCollection_INTERFACE_DEFINED__ */


#ifndef __IEnumPrivacyRecords_INTERFACE_DEFINED__
#define __IEnumPrivacyRecords_INTERFACE_DEFINED__

/* interface IEnumPrivacyRecords */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IEnumPrivacyRecords;

    
    MIDL_INTERFACE("3050f844-98b5-11cf-bb82-00aa00bdce0b")
    IEnumPrivacyRecords : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ __RPC__out ULONG *pSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPrivacyImpacted( 
            /* [out] */ __RPC__out BOOL *pState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrUrl,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrPolicyRef,
            /* [out] */ __RPC__out LONG *pdwReserved,
            /* [out] */ __RPC__out DWORD *pdwPrivacyFlags) = 0;
        
    };
    




#endif 	/* __IEnumPrivacyRecords_INTERFACE_DEFINED__ */


#ifndef __IWPCBlockedUrls_INTERFACE_DEFINED__
#define __IWPCBlockedUrls_INTERFACE_DEFINED__

/* interface IWPCBlockedUrls */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IWPCBlockedUrls;

    
    MIDL_INTERFACE("30510413-98b5-11cf-bb82-00aa00bdce0b")
    IWPCBlockedUrls : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out DWORD *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUrl( 
            /* [in] */ DWORD dwIdx,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrUrl) = 0;
        
    };
    




#endif 	/* __IWPCBlockedUrls_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMConstructorCollection_INTERFACE_DEFINED__
#define __IHTMLDOMConstructorCollection_INTERFACE_DEFINED__

/* interface IHTMLDOMConstructorCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMConstructorCollection;

    
    MIDL_INTERFACE("3051049c-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMConstructorCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Attr( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_BehaviorUrnsCollection( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_BookmarkCollection( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_CompatibleInfo( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_CompatibleInfoCollection( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ControlRangeCollection( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_CSSCurrentStyleDeclaration( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_CSSRuleList( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_CSSRuleStyleDeclaration( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_CSSStyleDeclaration( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_CSSStyleRule( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_CSSStyleSheet( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_DataTransfer( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_DOMImplementation( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Element( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Event( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_History( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTCElementBehaviorDefaults( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLAnchorElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLAreaElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLAreasCollection( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLBaseElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLBaseFontElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLBGSoundElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLBlockElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLBodyElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLBRElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLButtonElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLCollection( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLCommentElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLDDElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLDivElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLDocument( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLDListElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLDTElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLEmbedElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLFieldSetElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLFontElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLFormElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLFrameElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLFrameSetElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLGenericElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLHeadElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLHeadingElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLHRElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLHtmlElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLIFrameElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLImageElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLInputElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLIsIndexElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLLabelElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLLegendElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLLIElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLLinkElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLMapElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLMarqueeElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLMetaElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLModelessDialog( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLNamespaceInfo( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLNamespaceInfoCollection( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLNextIdElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLNoShowElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLObjectElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLOListElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLOptionElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLParagraphElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLParamElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLPhraseElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLPluginsCollection( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLPopup( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLScriptElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLSelectElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLSpanElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLStyleElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLTableCaptionElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLTableCellElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLTableColElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLTableElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLTableRowElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLTableSectionElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLTextAreaElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLTextElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLTitleElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLUListElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HTMLUnknownElement( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Image( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Location( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_NamedNodeMap( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Navigator( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_NodeList( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Option( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Screen( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_StaticNodeList( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Storage( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_StyleSheetList( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_StyleSheetPage( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_StyleSheetPageList( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_TextRange( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_TextRangeCollection( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_TextRectangle( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_TextRectangleList( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Window( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_XDomainRequest( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_XMLHttpRequest( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
    };
    




#endif 	/* __IHTMLDOMConstructorCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLDialog_INTERFACE_DEFINED__
#define __IHTMLDialog_INTERFACE_DEFINED__

/* interface IHTMLDialog */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDialog;

    
    MIDL_INTERFACE("3050f216-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDialog : public IDispatch
    {
    public:
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_dialogTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_dialogTop( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_dialogLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_dialogLeft( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_dialogWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_dialogWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_dialogHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_dialogHeight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_dialogArguments( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_menuArguments( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_returnValue( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_returnValue( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE close( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *String) = 0;
        
    };
    




#endif 	/* __IHTMLDialog_INTERFACE_DEFINED__ */


#ifndef __IHTMLDialog2_INTERFACE_DEFINED__
#define __IHTMLDialog2_INTERFACE_DEFINED__

/* interface IHTMLDialog2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDialog2;

    
    MIDL_INTERFACE("3050f5e0-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDialog2 : public IDispatch
    {
    public:
        virtual /* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_status( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_status( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_resizable( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_resizable( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    




#endif 	/* __IHTMLDialog2_INTERFACE_DEFINED__ */


#ifndef __IHTMLDialog3_INTERFACE_DEFINED__
#define __IHTMLDialog3_INTERFACE_DEFINED__

/* interface IHTMLDialog3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDialog3;

    
    MIDL_INTERFACE("3050f388-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDialog3 : public IDispatch
    {
    public:
        virtual /* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_unadorned( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_unadorned( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_dialogHide( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_dialogHide( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    




#endif 	/* __IHTMLDialog3_INTERFACE_DEFINED__ */


#ifndef __IHTMLModelessInit_INTERFACE_DEFINED__
#define __IHTMLModelessInit_INTERFACE_DEFINED__

/* interface IHTMLModelessInit */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLModelessInit;

    
    MIDL_INTERFACE("3050f5e4-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLModelessInit : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parameters( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_optionString( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_moniker( 
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_document( 
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p) = 0;
        
    };
    




#endif 	/* __IHTMLModelessInit_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ThreadDialogProcParam;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f5eb-98b5-11cf-bb82-00aa00bdce0b")
ThreadDialogProcParam;
#endif

EXTERN_C const CLSID CLSID_HTMLDialog;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f28a-98b5-11cf-bb82-00aa00bdce0b")
HTMLDialog;
#endif

#ifndef __IHTMLPopup_INTERFACE_DEFINED__
#define __IHTMLPopup_INTERFACE_DEFINED__

/* interface IHTMLPopup */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLPopup;

    
    MIDL_INTERFACE("3050f666-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPopup : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE show( 
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long w,
            /* [in] */ long h,
            /* [in] */ __RPC__in VARIANT *pElement) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hide( void) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_document( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDocument **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_isOpen( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
    };
    




#endif 	/* __IHTMLPopup_INTERFACE_DEFINED__ */


#ifndef __DispHTMLPopup_DISPINTERFACE_DEFINED__
#define __DispHTMLPopup_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLPopup */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLPopup;


    MIDL_INTERFACE("3050f589-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLPopup : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLPopup_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLPopup;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f667-98b5-11cf-bb82-00aa00bdce0b")
HTMLPopup;
#endif

#ifndef __IHTMLAppBehavior_INTERFACE_DEFINED__
#define __IHTMLAppBehavior_INTERFACE_DEFINED__

/* interface IHTMLAppBehavior */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAppBehavior;

    
    MIDL_INTERFACE("3050f5ca-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAppBehavior : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_applicationName( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_applicationName( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_version( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_version( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_icon( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_icon( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_singleInstance( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_singleInstance( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_minimizeButton( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_minimizeButton( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_maximizeButton( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_maximizeButton( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_sysMenu( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_sysMenu( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_caption( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_caption( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_windowState( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_windowState( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_showInTaskBar( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_showInTaskBar( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_commandLine( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    




#endif 	/* __IHTMLAppBehavior_INTERFACE_DEFINED__ */


#ifndef __IHTMLAppBehavior2_INTERFACE_DEFINED__
#define __IHTMLAppBehavior2_INTERFACE_DEFINED__

/* interface IHTMLAppBehavior2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAppBehavior2;

    
    MIDL_INTERFACE("3050f5c9-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAppBehavior2 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_contextMenu( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_contextMenu( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_innerBorder( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_innerBorder( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_scroll( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_scroll( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollFlat( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollFlat( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_selection( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_selection( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    




#endif 	/* __IHTMLAppBehavior2_INTERFACE_DEFINED__ */


#ifndef __IHTMLAppBehavior3_INTERFACE_DEFINED__
#define __IHTMLAppBehavior3_INTERFACE_DEFINED__

/* interface IHTMLAppBehavior3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAppBehavior3;

    
    MIDL_INTERFACE("3050f5cd-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAppBehavior3 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_navigable( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_navigable( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    




#endif 	/* __IHTMLAppBehavior3_INTERFACE_DEFINED__ */


#ifndef __DispHTMLAppBehavior_DISPINTERFACE_DEFINED__
#define __DispHTMLAppBehavior_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLAppBehavior */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLAppBehavior;


    MIDL_INTERFACE("3050f57c-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLAppBehavior : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLAppBehavior_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLAppBehavior;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f5cb-98b5-11cf-bb82-00aa00bdce0b")
HTMLAppBehavior;
#endif

EXTERN_C const CLSID CLSID_OldHTMLDocument;

#ifdef __cplusplus

class DECLSPEC_UUID("D48A6EC9-6A4A-11CF-94A7-444553540000")
OldHTMLDocument;
#endif

EXTERN_C const CLSID CLSID_OldHTMLFormElement;

#ifdef __cplusplus

class DECLSPEC_UUID("0D04D285-6BEC-11CF-8B97-00AA00476DA6")
OldHTMLFormElement;
#endif

#ifndef __DispIHTMLInputButtonElement_DISPINTERFACE_DEFINED__
#define __DispIHTMLInputButtonElement_DISPINTERFACE_DEFINED__

/* dispinterface DispIHTMLInputButtonElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispIHTMLInputButtonElement;


    MIDL_INTERFACE("3050f51e-98b5-11cf-bb82-00aa00bdce0b")
    DispIHTMLInputButtonElement : public IDispatch
    {
    };
    


#endif 	/* __DispIHTMLInputButtonElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLInputButtonElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2b4-98b5-11cf-bb82-00aa00bdce0b")
HTMLInputButtonElement;
#endif

#ifndef __DispIHTMLInputTextElement_DISPINTERFACE_DEFINED__
#define __DispIHTMLInputTextElement_DISPINTERFACE_DEFINED__

/* dispinterface DispIHTMLInputTextElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispIHTMLInputTextElement;


    MIDL_INTERFACE("3050f520-98b5-11cf-bb82-00aa00bdce0b")
    DispIHTMLInputTextElement : public IDispatch
    {
    };
    


#endif 	/* __DispIHTMLInputTextElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLInputTextElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2ab-98b5-11cf-bb82-00aa00bdce0b")
HTMLInputTextElement;
#endif

#ifndef __DispIHTMLInputFileElement_DISPINTERFACE_DEFINED__
#define __DispIHTMLInputFileElement_DISPINTERFACE_DEFINED__

/* dispinterface DispIHTMLInputFileElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispIHTMLInputFileElement;


    MIDL_INTERFACE("3050f542-98b5-11cf-bb82-00aa00bdce0b")
    DispIHTMLInputFileElement : public IDispatch
    {
    };
    


#endif 	/* __DispIHTMLInputFileElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLInputFileElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2ae-98b5-11cf-bb82-00aa00bdce0b")
HTMLInputFileElement;
#endif

#ifndef __DispIHTMLOptionButtonElement_DISPINTERFACE_DEFINED__
#define __DispIHTMLOptionButtonElement_DISPINTERFACE_DEFINED__

/* dispinterface DispIHTMLOptionButtonElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispIHTMLOptionButtonElement;


    MIDL_INTERFACE("3050f509-98b5-11cf-bb82-00aa00bdce0b")
    DispIHTMLOptionButtonElement : public IDispatch
    {
    };
    


#endif 	/* __DispIHTMLOptionButtonElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLOptionButtonElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2be-98b5-11cf-bb82-00aa00bdce0b")
HTMLOptionButtonElement;
#endif

#ifndef __DispIHTMLInputImage_DISPINTERFACE_DEFINED__
#define __DispIHTMLInputImage_DISPINTERFACE_DEFINED__

/* dispinterface DispIHTMLInputImage */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispIHTMLInputImage;


    MIDL_INTERFACE("3050f51d-98b5-11cf-bb82-00aa00bdce0b")
    DispIHTMLInputImage : public IDispatch
    {
    };
    


#endif 	/* __DispIHTMLInputImage_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLInputImage;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2c4-98b5-11cf-bb82-00aa00bdce0b")
HTMLInputImage;
#endif

#ifndef __IElementNamespace_INTERFACE_DEFINED__
#define __IElementNamespace_INTERFACE_DEFINED__

/* interface IElementNamespace */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementNamespace;

    
    MIDL_INTERFACE("3050f671-98b5-11cf-bb82-00aa00bdce0b")
    IElementNamespace : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddTag( 
            /* [in] */ __RPC__in BSTR bstrTagName,
            /* [in] */ LONG lFlags) = 0;
        
    };
    




#endif 	/* __IElementNamespace_INTERFACE_DEFINED__ */


#ifndef __IElementNamespaceTable_INTERFACE_DEFINED__
#define __IElementNamespaceTable_INTERFACE_DEFINED__

/* interface IElementNamespaceTable */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementNamespaceTable;

    
    MIDL_INTERFACE("3050f670-98b5-11cf-bb82-00aa00bdce0b")
    IElementNamespaceTable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddNamespace( 
            /* [in] */ __RPC__in BSTR bstrNamespace,
            /* [in] */ __RPC__in BSTR bstrUrn,
            /* [in] */ LONG lFlags,
            /* [in] */ __RPC__in VARIANT *pvarFactory) = 0;
        
    };
    




#endif 	/* __IElementNamespaceTable_INTERFACE_DEFINED__ */


#ifndef __IElementNamespaceFactory_INTERFACE_DEFINED__
#define __IElementNamespaceFactory_INTERFACE_DEFINED__

/* interface IElementNamespaceFactory */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementNamespaceFactory;

    
    MIDL_INTERFACE("3050f672-98b5-11cf-bb82-00aa00bdce0b")
    IElementNamespaceFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Create( 
            /* [in] */ __RPC__in_opt IElementNamespace *pNamespace) = 0;
        
    };
    




#endif 	/* __IElementNamespaceFactory_INTERFACE_DEFINED__ */


#ifndef __IElementNamespaceFactory2_INTERFACE_DEFINED__
#define __IElementNamespaceFactory2_INTERFACE_DEFINED__

/* interface IElementNamespaceFactory2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementNamespaceFactory2;

    
    MIDL_INTERFACE("3050f805-98b5-11cf-bb82-00aa00bdce0b")
    IElementNamespaceFactory2 : public IElementNamespaceFactory
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateWithImplementation( 
            /* [in] */ __RPC__in_opt IElementNamespace *pNamespace,
            /* [in] */ __RPC__in BSTR bstrImplementation) = 0;
        
    };
    




#endif 	/* __IElementNamespaceFactory2_INTERFACE_DEFINED__ */


#ifndef __IElementNamespaceFactoryCallback_INTERFACE_DEFINED__
#define __IElementNamespaceFactoryCallback_INTERFACE_DEFINED__

/* interface IElementNamespaceFactoryCallback */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementNamespaceFactoryCallback;

    
    MIDL_INTERFACE("3050f7fd-98b5-11cf-bb82-00aa00bdce0b")
    IElementNamespaceFactoryCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Resolve( 
            /* [in] */ __RPC__in BSTR bstrNamespace,
            /* [in] */ __RPC__in BSTR bstrTagName,
            /* [in] */ __RPC__in BSTR bstrAttrs,
            /* [in] */ __RPC__in_opt IElementNamespace *pNamespace) = 0;
        
    };
    




#endif 	/* __IElementNamespaceFactoryCallback_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteOM2_INTERFACE_DEFINED__
#define __IElementBehaviorSiteOM2_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteOM2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteOM2;

    
    MIDL_INTERFACE("3050f659-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteOM2 : public IElementBehaviorSiteOM
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDefaults( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElementDefaults **ppDefaults) = 0;
        
    };
    




#endif 	/* __IElementBehaviorSiteOM2_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorCategory_INTERFACE_DEFINED__
#define __IElementBehaviorCategory_INTERFACE_DEFINED__

/* interface IElementBehaviorCategory */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorCategory;

    
    MIDL_INTERFACE("3050f4ed-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorCategory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCategory( 
            /* [out][retval] */ __RPC__deref_out_opt LPOLESTR *ppchCategory) = 0;
        
    };
    




#endif 	/* __IElementBehaviorCategory_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteCategory_INTERFACE_DEFINED__
#define __IElementBehaviorSiteCategory_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteCategory */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteCategory;

    
    MIDL_INTERFACE("3050f4ee-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteCategory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetRelatedBehaviors( 
            /* [in] */ LONG lDirection,
            /* [in] */ __RPC__in LPOLESTR pchCategory,
            /* [out][retval] */ __RPC__deref_out_opt IEnumUnknown **ppEnumerator) = 0;
        
    };
    




#endif 	/* __IElementBehaviorSiteCategory_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSubmit_INTERFACE_DEFINED__
#define __IElementBehaviorSubmit_INTERFACE_DEFINED__

/* interface IElementBehaviorSubmit */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSubmit;

    
    MIDL_INTERFACE("3050f646-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSubmit : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSubmitInfo( 
            /* [in] */ __RPC__in_opt IHTMLSubmitData *pSubmitData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    




#endif 	/* __IElementBehaviorSubmit_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorFocus_INTERFACE_DEFINED__
#define __IElementBehaviorFocus_INTERFACE_DEFINED__

/* interface IElementBehaviorFocus */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorFocus;

    
    MIDL_INTERFACE("3050f6b6-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorFocus : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFocusRect( 
            /* [in] */ __RPC__in RECT *pRect) = 0;
        
    };
    




#endif 	/* __IElementBehaviorFocus_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorLayout_INTERFACE_DEFINED__
#define __IElementBehaviorLayout_INTERFACE_DEFINED__

/* interface IElementBehaviorLayout */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorLayout;

    
    MIDL_INTERFACE("3050f6ba-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorLayout : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [in] */ LONG dwFlags,
            /* [in] */ SIZE sizeContent,
            /* [out][in] */ __RPC__inout POINT *pptTranslateBy,
            /* [out][in] */ __RPC__inout POINT *pptTopLeft,
            /* [out][in] */ __RPC__inout SIZE *psizeProposed) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLayoutInfo( 
            /* [out][retval] */ __RPC__out LONG *plLayoutInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [in] */ LONG lFlags,
            /* [out][in] */ __RPC__inout POINT *pptTopLeft) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MapSize( 
            /* [in] */ __RPC__in SIZE *psizeIn,
            /* [out] */ __RPC__out RECT *prcOut) = 0;
        
    };
    




#endif 	/* __IElementBehaviorLayout_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorLayout2_INTERFACE_DEFINED__
#define __IElementBehaviorLayout2_INTERFACE_DEFINED__

/* interface IElementBehaviorLayout2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorLayout2;

    
    MIDL_INTERFACE("3050f846-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorLayout2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTextDescent( 
            /* [out] */ __RPC__out LONG *plDescent) = 0;
        
    };
    




#endif 	/* __IElementBehaviorLayout2_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteLayout_INTERFACE_DEFINED__
#define __IElementBehaviorSiteLayout_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteLayout */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteLayout;

    
    MIDL_INTERFACE("3050f6b7-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteLayout : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InvalidateLayoutInfo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateSize( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMediaResolution( 
            /* [out][retval] */ __RPC__out SIZE *psizeResolution) = 0;
        
    };
    




#endif 	/* __IElementBehaviorSiteLayout_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteLayout2_INTERFACE_DEFINED__
#define __IElementBehaviorSiteLayout2_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteLayout2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteLayout2;

    
    MIDL_INTERFACE("3050f847-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteLayout2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFontInfo( 
            /* [out] */ __RPC__out LOGFONTW *plf) = 0;
        
    };
    




#endif 	/* __IElementBehaviorSiteLayout2_INTERFACE_DEFINED__ */


#ifndef __IHostBehaviorInit_INTERFACE_DEFINED__
#define __IHostBehaviorInit_INTERFACE_DEFINED__

/* interface IHostBehaviorInit */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHostBehaviorInit;

    
    MIDL_INTERFACE("3050f842-98b5-11cf-bb82-00aa00bdce0b")
    IHostBehaviorInit : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PopulateNamespaceTable( void) = 0;
        
    };
    




#endif 	/* __IHostBehaviorInit_INTERFACE_DEFINED__ */

#endif /* __MSHTML_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  VARIANT_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

unsigned long             __RPC_USER  VARIANT_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree64(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


#endif /* !defined(__cplusplus) || defined(CINTERFACE) */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\msiltcfg.h ===
/*****************************************************************************\
*                                                                             *
* msiltcfg.h - - Interface for external access to Installer Service           *
*                                                                             *
* Version 4.0                                                                 *
*                                                                             *
* NOTES:  All buffers sizes are TCHAR count, null included only on input      *
*         Return argument pointers may be null if not interested in value     *
*                                                                             *
* Copyright (c) Microsoft Corporation. All rights reserved.                   *
*                                                                             *
\*****************************************************************************/

#ifndef _MSILTCFG_H_
#define _MSILTCFG_H_

#ifdef __cplusplus
extern "C" {
#endif

// Send shutdown msi.dll message to all the processes

UINT WINAPI ShutdownMsi(DWORD dwReserved);

// Send restart msi.dll message to all the processes

UINT WINAPI RestartMsi(DWORD dwReserved);

#ifdef __cplusplus
}
#endif

#endif // _MSILTCFG_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\Msi.h ===
/*****************************************************************************\
*                                                                             *
* msi.h - - Interface for external access to Installer Service                *
*                                                                             *
* Version 4.0                                                                 *
*                                                                             *
* NOTES:  All buffers sizes are TCHAR count, null included only on input      *
*         Return argument pointers may be null if not interested in value     *
*                                                                             *
* Copyright (c) Microsoft Corporation. All rights reserved.                   *
*                                                                             *
\*****************************************************************************/

#ifndef _MSI_H_
#define _MSI_H_

#ifndef NTDDI_WIN2K
#define NTDDI_WIN2K                         0x05000000
#endif
#ifndef NTDDI_WINXP
#define NTDDI_WINXP                         0x05010000
#endif
#ifndef NTDDI_WINXPSP2
#define NTDDI_WINXPSP2                      0x05010200
#endif
#ifndef NTDDI_WS03SP1
#define NTDDI_WS03SP1                       0x05020100
#endif
#ifndef NTDDI_VISTA
#define NTDDI_VISTA                         0x06000000
#endif
#ifndef NTDDI_VISTASP1
#define NTDDI_VISTASP1                      0x06000100
#endif
#ifndef NTDDI_WIN7
#define NTDDI_WIN7                          0x06010000
#endif

#ifndef _WIN32_MSI
#if (_WIN32_WINNT >= 0x0601 || (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_WIN7))
  #define _WIN32_MSI   500
#elif (_WIN32_WINNT >= 0x0501 || (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_WINXP))
  #if (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_VISTASP1)
    #define _WIN32_MSI   450
  #elif (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_VISTA)
    #define _WIN32_MSI   400
  #elif (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_WS03SP1)
    #define _WIN32_MSI   310
  #elif (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_WINXPSP2)
    #define _WIN32_MSI   300
  #else
    #define _WIN32_MSI   200
  #endif
#elif (_WIN32_WINNT >= 0x0500 || (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_WIN2K))
  #define _WIN32_MSI   110
#else
  #define _WIN32_MSI   100
#endif //_WIN32_WINNT
#endif // !_WIN32_MSI

#include "specstrings.h"
#define MAX_GUID_CHARS  38


#if (_WIN32_MSI >= 150)
#ifndef _MSI_NO_CRYPTO
#include "wincrypt.h"
#endif // _MSI_NO_CRYPTO
#endif //(_WIN32_MSI >= 150)

// --------------------------------------------------------------------------
// Installer generic handle definitions
// --------------------------------------------------------------------------

typedef unsigned long MSIHANDLE;     // abstract generic handle, 0 == no handle

#ifdef __cplusplus
extern "C" {
#endif

// Close a open handle of any type
// All handles obtained from API calls must be closed when no longer needed
// Normally succeeds, returning TRUE. 

UINT WINAPI MsiCloseHandle(MSIHANDLE hAny);

// Close all handles open in the process, a diagnostic call
// This should NOT be used as a cleanup mechanism -- use PMSIHANDLE class
// Can be called at termination to assure that all handles have been closed
// Returns 0 if all handles have been close, else number of open handles

UINT WINAPI MsiCloseAllHandles();

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus

// C++ wrapper object to automatically free handle when going out of scope

class PMSIHANDLE
{
	MSIHANDLE m_h;
 public:
	PMSIHANDLE():m_h(0){}
	PMSIHANDLE(MSIHANDLE h):m_h(h){}
  ~PMSIHANDLE(){if (m_h!=0) MsiCloseHandle(m_h);}
	void operator =(MSIHANDLE h) {if (m_h) MsiCloseHandle(m_h); m_h=h;}
	operator MSIHANDLE() {return m_h;}
	MSIHANDLE* operator &() {if (m_h) MsiCloseHandle(m_h); m_h = 0; return &m_h;}
};
#endif  //__cplusplus

// Install message type for callback is a combination of the following:
//  A message box style:      MB_*, where MB_OK is the default
//  A message box icon type:  MB_ICON*, where no icon is the default
//  A default button:         MB_DEFBUTTON?, where MB_DEFBUTTON1 is the default
//  One of the following install message types, no default
typedef enum tagINSTALLMESSAGE
{
	INSTALLMESSAGE_FATALEXIT      = 0x00000000L, // premature termination, possibly fatal OOM
	INSTALLMESSAGE_ERROR          = 0x01000000L, // formatted error message
	INSTALLMESSAGE_WARNING        = 0x02000000L, // formatted warning message
	INSTALLMESSAGE_USER           = 0x03000000L, // user request message
	INSTALLMESSAGE_INFO           = 0x04000000L, // informative message for log
	INSTALLMESSAGE_FILESINUSE     = 0x05000000L, // list of files in use that need to be replaced
	INSTALLMESSAGE_RESOLVESOURCE  = 0x06000000L, // request to determine a valid source location
	INSTALLMESSAGE_OUTOFDISKSPACE = 0x07000000L, // insufficient disk space message
	INSTALLMESSAGE_ACTIONSTART    = 0x08000000L, // start of action: action name & description
	INSTALLMESSAGE_ACTIONDATA     = 0x09000000L, // formatted data associated with individual action item
	INSTALLMESSAGE_PROGRESS       = 0x0A000000L, // progress gauge info: units so far, total
	INSTALLMESSAGE_COMMONDATA     = 0x0B000000L, // product info for dialog: language Id, dialog caption
	INSTALLMESSAGE_INITIALIZE     = 0x0C000000L, // sent prior to UI initialization, no string data
	INSTALLMESSAGE_TERMINATE      = 0x0D000000L, // sent after UI termination, no string data
	INSTALLMESSAGE_SHOWDIALOG     = 0x0E000000L, // sent prior to display or authored dialog or wizard
#if (_WIN32_MSI >= 500)
	INSTALLMESSAGE_PERFORMANCE    = 0x0F000000L, // log only, to log performance number like action time
#endif // (_WIN32_MSI >= 500)
#if (_WIN32_MSI >= 400)
	INSTALLMESSAGE_RMFILESINUSE   = 0x19000000L, // the list of apps that the user can request Restart Manager to shut down and restart
#endif // (_WIN32_MSI >= 400)
#if (_WIN32_MSI >= 450)
	INSTALLMESSAGE_INSTALLSTART   = 0x1A000000L, // sent prior to server-side install of a product
	INSTALLMESSAGE_INSTALLEND     = 0x1B000000L, // sent after server-side install
#endif // (_WIN32_MSI >= 450)
} INSTALLMESSAGE;

// external error handler supplied to installation API functions
typedef int (WINAPI *INSTALLUI_HANDLERA)(LPVOID pvContext, UINT iMessageType, LPCSTR szMessage);
// external error handler supplied to installation API functions
typedef int (WINAPI *INSTALLUI_HANDLERW)(LPVOID pvContext, UINT iMessageType, LPCWSTR szMessage);
#ifdef UNICODE
#define INSTALLUI_HANDLER  INSTALLUI_HANDLERW
#else
#define INSTALLUI_HANDLER  INSTALLUI_HANDLERA
#endif // !UNICODE
#if (_WIN32_MSI >= 310)
typedef int (WINAPI *INSTALLUI_HANDLER_RECORD)(LPVOID pvContext, UINT iMessageType, MSIHANDLE hRecord);
typedef INSTALLUI_HANDLER_RECORD* PINSTALLUI_HANDLER_RECORD;
#endif // (_WIN32_MSI >= 310)

typedef enum tagINSTALLUILEVEL
{
	INSTALLUILEVEL_NOCHANGE = 0,    // UI level is unchanged
	INSTALLUILEVEL_DEFAULT  = 1,    // default UI is used
	INSTALLUILEVEL_NONE     = 2,    // completely silent installation
	INSTALLUILEVEL_BASIC    = 3,    // simple progress and error handling
	INSTALLUILEVEL_REDUCED  = 4,    // authored UI, wizard dialogs suppressed
	INSTALLUILEVEL_FULL     = 5,    // authored UI with wizards, progress, errors
	INSTALLUILEVEL_ENDDIALOG    = 0x80, // display success/failure dialog at end of install
	INSTALLUILEVEL_PROGRESSONLY = 0x40, // display only progress dialog
	INSTALLUILEVEL_HIDECANCEL   = 0x20, // do not display the cancel button in basic UI
	INSTALLUILEVEL_SOURCERESONLY = 0x100, // force display of source resolution even if quiet
#if (_WIN32_MSI >= 500)
	INSTALLUILEVEL_UACONLY = 0x200, // show UAC prompt even if quiet
#endif // (_WIN32_MSI >= 500)
} INSTALLUILEVEL;

typedef enum tagINSTALLSTATE
{
	INSTALLSTATE_NOTUSED      = -7,  // component disabled
	INSTALLSTATE_BADCONFIG    = -6,  // configuration data corrupt
	INSTALLSTATE_INCOMPLETE   = -5,  // installation suspended or in progress
	INSTALLSTATE_SOURCEABSENT = -4,  // run from source, source is unavailable
	INSTALLSTATE_MOREDATA     = -3,  // return buffer overflow
	INSTALLSTATE_INVALIDARG   = -2,  // invalid function argument
	INSTALLSTATE_UNKNOWN      = -1,  // unrecognized product or feature
	INSTALLSTATE_BROKEN       =  0,  // broken
	INSTALLSTATE_ADVERTISED   =  1,  // advertised feature
	INSTALLSTATE_REMOVED      =  1,  // component being removed (action state, not settable)
	INSTALLSTATE_ABSENT       =  2,  // uninstalled (or action state absent but clients remain)
	INSTALLSTATE_LOCAL        =  3,  // installed on local drive
	INSTALLSTATE_SOURCE       =  4,  // run from source, CD or net
	INSTALLSTATE_DEFAULT      =  5,  // use default, local or source
} INSTALLSTATE;

typedef enum tagUSERINFOSTATE
{
	USERINFOSTATE_MOREDATA   = -3,  // return buffer overflow
	USERINFOSTATE_INVALIDARG = -2,  // invalid function argument
	USERINFOSTATE_UNKNOWN    = -1,  // unrecognized product
	USERINFOSTATE_ABSENT     =  0,  // user info and PID not initialized
	USERINFOSTATE_PRESENT    =  1,  // user info and PID initialized
} USERINFOSTATE;

typedef enum tagINSTALLLEVEL
{
	INSTALLLEVEL_DEFAULT = 0,      // install authored default
	INSTALLLEVEL_MINIMUM = 1,      // install only required features
	INSTALLLEVEL_MAXIMUM = 0xFFFF, // install all features
} INSTALLLEVEL;                   // intermediate levels dependent on authoring

typedef enum tagREINSTALLMODE  // bit flags
{
	REINSTALLMODE_REPAIR           = 0x00000001,  // Reserved bit - currently ignored
	REINSTALLMODE_FILEMISSING      = 0x00000002,  // Reinstall only if file is missing
	REINSTALLMODE_FILEOLDERVERSION = 0x00000004,  // Reinstall if file is missing, or older version
	REINSTALLMODE_FILEEQUALVERSION = 0x00000008,  // Reinstall if file is missing, or equal or older version
	REINSTALLMODE_FILEEXACT        = 0x00000010,  // Reinstall if file is missing, or not exact version
	REINSTALLMODE_FILEVERIFY       = 0x00000020,  // checksum executables, reinstall if missing or corrupt
	REINSTALLMODE_FILEREPLACE      = 0x00000040,  // Reinstall all files, regardless of version
	REINSTALLMODE_MACHINEDATA      = 0x00000080,  // insure required machine reg entries
	REINSTALLMODE_USERDATA         = 0x00000100,  // insure required user reg entries
	REINSTALLMODE_SHORTCUT         = 0x00000200,  // validate shortcuts items
	REINSTALLMODE_PACKAGE          = 0x00000400,  // use re-cache source install package
} REINSTALLMODE;

typedef enum tagINSTALLOGMODE  // bit flags for use with MsiEnableLog and MsiSetExternalUI
{
	INSTALLLOGMODE_FATALEXIT      = (1 << (INSTALLMESSAGE_FATALEXIT      >> 24)),
	INSTALLLOGMODE_ERROR          = (1 << (INSTALLMESSAGE_ERROR          >> 24)),
	INSTALLLOGMODE_WARNING        = (1 << (INSTALLMESSAGE_WARNING        >> 24)),
	INSTALLLOGMODE_USER           = (1 << (INSTALLMESSAGE_USER           >> 24)),
	INSTALLLOGMODE_INFO           = (1 << (INSTALLMESSAGE_INFO           >> 24)),
	INSTALLLOGMODE_RESOLVESOURCE  = (1 << (INSTALLMESSAGE_RESOLVESOURCE  >> 24)),
	INSTALLLOGMODE_OUTOFDISKSPACE = (1 << (INSTALLMESSAGE_OUTOFDISKSPACE >> 24)),
	INSTALLLOGMODE_ACTIONSTART    = (1 << (INSTALLMESSAGE_ACTIONSTART    >> 24)),
	INSTALLLOGMODE_ACTIONDATA     = (1 << (INSTALLMESSAGE_ACTIONDATA     >> 24)),
	INSTALLLOGMODE_COMMONDATA     = (1 << (INSTALLMESSAGE_COMMONDATA     >> 24)),
	INSTALLLOGMODE_PROPERTYDUMP   = (1 << (INSTALLMESSAGE_PROGRESS       >> 24)), // log only
	INSTALLLOGMODE_VERBOSE        = (1 << (INSTALLMESSAGE_INITIALIZE     >> 24)), // log only
	INSTALLLOGMODE_EXTRADEBUG     = (1 << (INSTALLMESSAGE_TERMINATE      >> 24)), // log only
	INSTALLLOGMODE_LOGONLYONERROR = (1 << (INSTALLMESSAGE_SHOWDIALOG     >> 24)), // log only	
#if (_WIN32_MSI >= 500)
	INSTALLLOGMODE_LOGPERFORMANCE = (1 << (INSTALLMESSAGE_PERFORMANCE    >> 24)), // log only	
#endif // (_WIN32_MSI >= 500)
	INSTALLLOGMODE_PROGRESS       = (1 << (INSTALLMESSAGE_PROGRESS       >> 24)), // external handler only
	INSTALLLOGMODE_INITIALIZE     = (1 << (INSTALLMESSAGE_INITIALIZE     >> 24)), // external handler only
	INSTALLLOGMODE_TERMINATE      = (1 << (INSTALLMESSAGE_TERMINATE      >> 24)), // external handler only
	INSTALLLOGMODE_SHOWDIALOG     = (1 << (INSTALLMESSAGE_SHOWDIALOG     >> 24)), // external handler only
	INSTALLLOGMODE_FILESINUSE     = (1 << (INSTALLMESSAGE_FILESINUSE     >> 24)), // external handler only
#if (_WIN32_MSI >= 400)
	INSTALLLOGMODE_RMFILESINUSE   = (1 << (INSTALLMESSAGE_RMFILESINUSE   >> 24)), // external handler only
#endif // (_WIN32_MSI >= 400)
#if (_WIN32_MSI >= 450)
	INSTALLLOGMODE_INSTALLSTART   = (1 << (INSTALLMESSAGE_INSTALLSTART   >> 24)), // external/embedded only
	INSTALLLOGMODE_INSTALLEND     = (1 << (INSTALLMESSAGE_INSTALLEND     >> 24)), // external/embedded only
#endif // (_WIN32_MSI >= 450)
} INSTALLLOGMODE;

typedef enum tagINSTALLLOGATTRIBUTES // flag attributes for MsiEnableLog
{
	INSTALLLOGATTRIBUTES_APPEND            = (1 << 0),
	INSTALLLOGATTRIBUTES_FLUSHEACHLINE     = (1 << 1),
} INSTALLLOGATTRIBUTES;

typedef enum tagINSTALLFEATUREATTRIBUTE // bit flags
{
	INSTALLFEATUREATTRIBUTE_FAVORLOCAL             = 1 << 0,
	INSTALLFEATUREATTRIBUTE_FAVORSOURCE            = 1 << 1,
	INSTALLFEATUREATTRIBUTE_FOLLOWPARENT           = 1 << 2,
	INSTALLFEATUREATTRIBUTE_FAVORADVERTISE         = 1 << 3,
	INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE      = 1 << 4,
	INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE = 1 << 5,
} INSTALLFEATUREATTRIBUTE;

typedef enum tagINSTALLMODE
{
#if (_WIN32_MSI >=  150)
	INSTALLMODE_NODETECTION_ANY      = -4,  // provide any, if available, supported internally for MsiProvideAssembly
#endif
	INSTALLMODE_NOSOURCERESOLUTION   = -3,  // skip source resolution
	INSTALLMODE_NODETECTION          = -2,  // skip detection
	INSTALLMODE_EXISTING             = -1,  // provide, if available
	INSTALLMODE_DEFAULT              =  0,  // install, if absent
} INSTALLMODE;

#if (_WIN32_MSI >=  300)
typedef enum tagMSIPATCHSTATE
{
	MSIPATCHSTATE_INVALID     =  0,  // broken
	MSIPATCHSTATE_APPLIED     =  1,  // applied patch
	MSIPATCHSTATE_SUPERSEDED  =  2,  // applied but superseded
	MSIPATCHSTATE_OBSOLETED   =  4,  // applied but obsoleted
	MSIPATCHSTATE_REGISTERED  =  8,   // registered only - Not applied
	MSIPATCHSTATE_ALL         =  (MSIPATCHSTATE_APPLIED | MSIPATCHSTATE_SUPERSEDED | MSIPATCHSTATE_OBSOLETED | MSIPATCHSTATE_REGISTERED)
} MSIPATCHSTATE;

typedef enum tagMSIINSTALLCONTEXT
{
        MSIINSTALLCONTEXT_FIRSTVISIBLE   =  0,  // product visible to the current user
        MSIINSTALLCONTEXT_NONE           =  0,  // Invalid context for a product
        MSIINSTALLCONTEXT_USERMANAGED    =  1,  // user managed install context
        MSIINSTALLCONTEXT_USERUNMANAGED  =  2,  // user non-managed context
        MSIINSTALLCONTEXT_MACHINE        =  4,  // per-machine context
        MSIINSTALLCONTEXT_ALL            =  (MSIINSTALLCONTEXT_USERMANAGED | MSIINSTALLCONTEXT_USERUNMANAGED | MSIINSTALLCONTEXT_MACHINE),	// All contexts. OR of all valid values
        MSIINSTALLCONTEXT_ALLUSERMANAGED =  8,  // all user-managed contexts
} MSIINSTALLCONTEXT;

typedef enum tagMSIPATCHDATATYPE
{
	MSIPATCH_DATATYPE_PATCHFILE = 0,
	MSIPATCH_DATATYPE_XMLPATH   = 1,
	MSIPATCH_DATATYPE_XMLBLOB   = 2,
} MSIPATCHDATATYPE, * PMSIPATCHDATATYPE;

typedef struct tagMSIPATCHSEQUENCEINFOA
{
	LPCSTR   szPatchData;
	MSIPATCHDATATYPE ePatchDataType;
	DWORD   dwOrder;
	UINT    uStatus;
} MSIPATCHSEQUENCEINFOA, * PMSIPATCHSEQUENCEINFOA;
typedef struct tagMSIPATCHSEQUENCEINFOW
{
	LPCWSTR  szPatchData;
	MSIPATCHDATATYPE ePatchDataType;
	DWORD   dwOrder;
	UINT    uStatus;
} MSIPATCHSEQUENCEINFOW, * PMSIPATCHSEQUENCEINFOW;
#ifdef UNICODE
typedef MSIPATCHSEQUENCEINFOW MSIPATCHSEQUENCEINFO;
typedef PMSIPATCHSEQUENCEINFOW PMSIPATCHSEQUENCEINFO;
#else
typedef MSIPATCHSEQUENCEINFOA MSIPATCHSEQUENCEINFO;
typedef PMSIPATCHSEQUENCEINFOA PMSIPATCHSEQUENCEINFO;
#endif // UNICODE

#endif //(_WIN32_MSI >=  300)



#define MAX_FEATURE_CHARS  38   // maximum chars in feature name (same as string GUID)


// Product info attributes: advertised information

#define INSTALLPROPERTY_PACKAGENAME           __TEXT("PackageName")
#define INSTALLPROPERTY_TRANSFORMS            __TEXT("Transforms")
#define INSTALLPROPERTY_LANGUAGE              __TEXT("Language")
#define INSTALLPROPERTY_PRODUCTNAME           __TEXT("ProductName")
#define INSTALLPROPERTY_ASSIGNMENTTYPE        __TEXT("AssignmentType")
#if (_WIN32_MSI >= 150)
#define INSTALLPROPERTY_INSTANCETYPE          __TEXT("InstanceType")
#endif //(_WIN32_MSI >= 150)
#if (_WIN32_MSI >= 300)
#define INSTALLPROPERTY_AUTHORIZED_LUA_APP    __TEXT("AuthorizedLUAApp")
#endif //(_WIN32_MSI >= 300)


#define INSTALLPROPERTY_PACKAGECODE           __TEXT("PackageCode")
#define INSTALLPROPERTY_VERSION               __TEXT("Version")
#if (_WIN32_MSI >=  110)
#define INSTALLPROPERTY_PRODUCTICON           __TEXT("ProductIcon")
#endif //(_WIN32_MSI >=  110)

// Product info attributes: installed information

#define INSTALLPROPERTY_INSTALLEDPRODUCTNAME  __TEXT("InstalledProductName")
#define INSTALLPROPERTY_VERSIONSTRING         __TEXT("VersionString")
#define INSTALLPROPERTY_HELPLINK              __TEXT("HelpLink")
#define INSTALLPROPERTY_HELPTELEPHONE         __TEXT("HelpTelephone")
#define INSTALLPROPERTY_INSTALLLOCATION       __TEXT("InstallLocation")
#define INSTALLPROPERTY_INSTALLSOURCE         __TEXT("InstallSource")
#define INSTALLPROPERTY_INSTALLDATE           __TEXT("InstallDate")
#define INSTALLPROPERTY_PUBLISHER             __TEXT("Publisher")
#define INSTALLPROPERTY_LOCALPACKAGE          __TEXT("LocalPackage")
#define INSTALLPROPERTY_URLINFOABOUT          __TEXT("URLInfoAbout")
#define INSTALLPROPERTY_URLUPDATEINFO         __TEXT("URLUpdateInfo")
#define INSTALLPROPERTY_VERSIONMINOR          __TEXT("VersionMinor")
#define INSTALLPROPERTY_VERSIONMAJOR          __TEXT("VersionMajor")
#define INSTALLPROPERTY_PRODUCTID             __TEXT("ProductID")
#define INSTALLPROPERTY_REGCOMPANY            __TEXT("RegCompany")
#define INSTALLPROPERTY_REGOWNER              __TEXT("RegOwner")
#if (_WIN32_MSI >= 500)
#define INSTALLPROPERTY_INSTALLEDLANGUAGE     __TEXT("InstalledLanguage")
#endif //(_WIN32_MSI >= 500)

#if (_WIN32_MSI >= 300)
#define	INSTALLPROPERTY_UNINSTALLABLE         __TEXT("Uninstallable")
#define	INSTALLPROPERTY_PRODUCTSTATE          __TEXT("State")
#define	INSTALLPROPERTY_PATCHSTATE            __TEXT("State")
#define INSTALLPROPERTY_PATCHTYPE             __TEXT("PatchType")
#define INSTALLPROPERTY_LUAENABLED            __TEXT("LUAEnabled")
#define INSTALLPROPERTY_DISPLAYNAME           __TEXT("DisplayName")
#define INSTALLPROPERTY_MOREINFOURL           __TEXT("MoreInfoURL")

// Source List Info attributes: Advertised information
#define INSTALLPROPERTY_LASTUSEDSOURCE        __TEXT("LastUsedSource")
#define INSTALLPROPERTY_LASTUSEDTYPE          __TEXT("LastUsedType")
#define INSTALLPROPERTY_MEDIAPACKAGEPATH      __TEXT("MediaPackagePath")
#define INSTALLPROPERTY_DISKPROMPT            __TEXT("DiskPrompt")
#endif // (_WIN32_MSI >= 300)

typedef enum tagSCRIPTFLAGS
{
	SCRIPTFLAGS_CACHEINFO                = 0x00000001L,   // set if the icons need to be created/ removed
	SCRIPTFLAGS_SHORTCUTS                = 0x00000004L,   // set if the shortcuts needs to be created/ deleted
	SCRIPTFLAGS_MACHINEASSIGN            = 0x00000008L,   // set if product to be assigned to machine
	SCRIPTFLAGS_REGDATA_CNFGINFO         = 0x00000020L,   // set if the product cnfg mgmt. registry data needs to be written/ removed
	SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST = 0x00000040L,
#if (_WIN32_MSI >=  110)
	SCRIPTFLAGS_REGDATA_CLASSINFO        = 0x00000080L,   // set if COM classes related app info needs to be  created/ deleted
	SCRIPTFLAGS_REGDATA_EXTENSIONINFO    = 0x00000100L,   // set if extension related app info needs to be  created/ deleted
	SCRIPTFLAGS_REGDATA_APPINFO          = SCRIPTFLAGS_REGDATA_CLASSINFO | SCRIPTFLAGS_REGDATA_EXTENSIONINFO,  // for source level backward compatibility
#else //_WIN32_MSI == 100
	SCRIPTFLAGS_REGDATA_APPINFO          = 0x00000010L,
#endif //(_WIN32_MSI >=  110)
	SCRIPTFLAGS_REGDATA                  = SCRIPTFLAGS_REGDATA_APPINFO | SCRIPTFLAGS_REGDATA_CNFGINFO, // for source level backward compatibility
}SCRIPTFLAGS;


typedef enum tagADVERTISEFLAGS
{
	ADVERTISEFLAGS_MACHINEASSIGN   =    0,   // set if the product is to be machine assigned
	ADVERTISEFLAGS_USERASSIGN      =    1,   // set if the product is to be user assigned
}ADVERTISEFLAGS;

typedef enum tagINSTALLTYPE
{
	INSTALLTYPE_DEFAULT            =    0,   // set to indicate default behavior
	INSTALLTYPE_NETWORK_IMAGE      =    1,   // set to indicate network install
	INSTALLTYPE_SINGLE_INSTANCE    =    2,   // set to indicate a particular instance 
}INSTALLTYPE;

#if (_WIN32_MSI >=  150)

typedef struct _MSIFILEHASHINFO {
	ULONG dwFileHashInfoSize;
	ULONG dwData [ 4 ];
} MSIFILEHASHINFO, *PMSIFILEHASHINFO;

typedef enum tagMSIARCHITECTUREFLAGS
{
	MSIARCHITECTUREFLAGS_X86   = 0x00000001L, // set if creating the script for i386 platform
	MSIARCHITECTUREFLAGS_IA64  = 0x00000002L, // set if creating the script for IA64 platform
	MSIARCHITECTUREFLAGS_AMD64 = 0x00000004L // set if creating the script for AMD64 platform
}MSIARCHITECTUREFLAGS;

typedef enum tagMSIOPENPACKAGEFLAGS
{
	MSIOPENPACKAGEFLAGS_IGNOREMACHINESTATE = 0x00000001L, // ignore the machine state when creating the engine
}MSIOPENPACKAGEFLAGS;

typedef enum tagMSIADVERTISEOPTIONFLAGS
{
	MSIADVERTISEOPTIONFLAGS_INSTANCE = 0x00000001L, // set if advertising a new instance
}MSIADVERTISEOPTIONFLAGS;

#endif //(_WIN32_MSI >=  150)


#if (_WIN32_MSI >= 300)

typedef enum tagMSISOURCETYPE
{
	MSISOURCETYPE_UNKNOWN = 0x00000000L,
	MSISOURCETYPE_NETWORK = 0x00000001L, // network source
	MSISOURCETYPE_URL     = 0x00000002L, // URL source
	MSISOURCETYPE_MEDIA   = 0x00000004L  // media source
}MSISOURCETYPE;

typedef enum tagMSICODE
{
	MSICODE_PRODUCT = 0x00000000L, // product code provided
	MSICODE_PATCH   = 0x40000000L  // patch code provided
}MSICODE;

#if (_WIN32_MSI >= 450)

typedef enum tagMSITRANSACTION
{
	MSITRANSACTION_CHAIN_EMBEDDEDUI = 0x00000001L,
	MSITRANSACTION_JOIN_EXISTING_EMBEDDEDUI = 0x00000002L,
}MSITRANSACTION;

typedef enum tagMSITRANSACTIONSTATE
{
	MSITRANSACTIONSTATE_ROLLBACK = 0x00000000L,
	MSITRANSACTIONSTATE_COMMIT   = 0x00000001L,

}MSITRANSACTIONSTATE;

#endif //(_WIN32_MSI >= 450)


#endif //(_WIN32_MSI >= 300)


#ifdef __cplusplus
extern "C" {
#endif


// --------------------------------------------------------------------------
// Functions to set the UI handling and logging. The UI will be used for error,
// progress, and log messages for all subsequent calls to Installer Service
// API functions that require UI.
// --------------------------------------------------------------------------

// Enable internal UI

INSTALLUILEVEL WINAPI MsiSetInternalUI(
	__in INSTALLUILEVEL  dwUILevel,     // UI level
	__inout_opt HWND  *phWnd);          // handle of owner window

// Enable external UI handling, returns any previous handler or NULL if none.
// Messages are designated with a combination of bits from INSTALLLOGMODE enum.

INSTALLUI_HANDLERA WINAPI MsiSetExternalUIA(
	__in_opt INSTALLUI_HANDLERA puiHandler,  // for progress and error handling 
	__in DWORD              dwMessageFilter, // bit flags designating messages to handle
	__in_opt LPVOID             pvContext);  // application context
INSTALLUI_HANDLERW WINAPI MsiSetExternalUIW(
	__in_opt INSTALLUI_HANDLERW puiHandler,  // for progress and error handling 
	__in DWORD              dwMessageFilter, // bit flags designating messages to handle
	__in_opt LPVOID             pvContext);  // application context
#ifdef UNICODE
#define MsiSetExternalUI  MsiSetExternalUIW
#else
#define MsiSetExternalUI  MsiSetExternalUIA
#endif // !UNICODE

#if (_WIN32_MSI >= 310)

UINT WINAPI MsiSetExternalUIRecord(
	__in_opt INSTALLUI_HANDLER_RECORD puiHandler,         // for progress and error handling 
	__in DWORD              dwMessageFilter,              // bit flags designating messages to handle
	__in_opt LPVOID             pvContext,                // application context
	__out_opt PINSTALLUI_HANDLER_RECORD ppuiPrevHandler); // pointer to the previously set handler
	
#endif // (_WIN32_MSI >= 310)

// Enable logging to a file for all install sessions for the client process,
// with control over which log messages are passed to the specified log file.
// Messages are designated with a combination of bits from INSTALLLOGMODE enum.

UINT WINAPI MsiEnableLogA(
	__in DWORD     dwLogMode,           // bit flags designating operations to report
	__in_opt LPCSTR  szLogFile,       // log file, or NULL to disable logging
	__in DWORD     dwLogAttributes);    // INSTALLLOGATTRIBUTES flags
UINT WINAPI MsiEnableLogW(
	__in DWORD     dwLogMode,           // bit flags designating operations to report
	__in_opt LPCWSTR  szLogFile,       // log file, or NULL to disable logging
	__in DWORD     dwLogAttributes);    // INSTALLLOGATTRIBUTES flags
#ifdef UNICODE
#define MsiEnableLog  MsiEnableLogW
#else
#define MsiEnableLog  MsiEnableLogA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Functions to query and configure a product as a whole.
// --------------------------------------------------------------------------

// Return the installed state for a product

INSTALLSTATE WINAPI MsiQueryProductStateA(
	__in LPCSTR  szProduct);
INSTALLSTATE WINAPI MsiQueryProductStateW(
	__in LPCWSTR  szProduct);
#ifdef UNICODE
#define MsiQueryProductState  MsiQueryProductStateW
#else
#define MsiQueryProductState  MsiQueryProductStateA
#endif // !UNICODE

// Return product info

UINT WINAPI MsiGetProductInfoA(
	__in LPCSTR   szProduct,                              // product code
	__in LPCSTR   szAttribute,                            // attribute name, case-sensitive
	__out_ecount_opt(*pcchValueBuf) LPSTR lpValueBuf,     // returned value, NULL if not desired
	__inout_opt                     LPDWORD pcchValueBuf);  // in/out buffer character count
UINT WINAPI MsiGetProductInfoW(
	__in LPCWSTR   szProduct,                              // product code
	__in LPCWSTR   szAttribute,                            // attribute name, case-sensitive
	__out_ecount_opt(*pcchValueBuf) LPWSTR lpValueBuf,     // returned value, NULL if not desired
	__inout_opt                     LPDWORD pcchValueBuf);  // in/out buffer character count
#ifdef UNICODE
#define MsiGetProductInfo  MsiGetProductInfoW
#else
#define MsiGetProductInfo  MsiGetProductInfoA
#endif // !UNICODE

#if (_WIN32_MSI >= 300)
// Retrieve product info for a particular product instance

UINT WINAPI MsiGetProductInfoExA(
		__in LPCSTR szProductCode,                  // Information is queried on this product
		__in_opt LPCSTR szUserSid,                  // Account of this product instance
		__in MSIINSTALLCONTEXT dwContext,             // Context of this product instance
		__in LPCSTR szProperty,                     // Property being queried
		__out_ecount_opt(*pcchValue) LPSTR szValue, // Value read
		__inout_opt LPDWORD pcchValue);               // size of the szValue buffer
UINT WINAPI MsiGetProductInfoExW(
		__in LPCWSTR szProductCode,                  // Information is queried on this product
		__in_opt LPCWSTR szUserSid,                  // Account of this product instance
		__in MSIINSTALLCONTEXT dwContext,             // Context of this product instance
		__in LPCWSTR szProperty,                     // Property being queried
		__out_ecount_opt(*pcchValue) LPWSTR szValue, // Value read
		__inout_opt LPDWORD pcchValue);               // size of the szValue buffer
#ifdef UNICODE
#define MsiGetProductInfoEx  MsiGetProductInfoExW
#else
#define MsiGetProductInfoEx  MsiGetProductInfoExA
#endif // !UNICODE
#endif //(_WIN32_MSI >= 300)

// Install a new product.
// Either may be NULL, but the DATABASE property must be specfied

UINT WINAPI MsiInstallProductA(
	__in LPCSTR      szPackagePath,        // location of package to install
	__in_opt LPCSTR      szCommandLine);   // command line <property settings>
UINT WINAPI MsiInstallProductW(
	__in LPCWSTR      szPackagePath,        // location of package to install
	__in_opt LPCWSTR      szCommandLine);   // command line <property settings>
#ifdef UNICODE
#define MsiInstallProduct  MsiInstallProductW
#else
#define MsiInstallProduct  MsiInstallProductA
#endif // !UNICODE

// Install/uninstall an advertised or installed product
// No action if installed and INSTALLSTATE_DEFAULT specified

UINT WINAPI MsiConfigureProductA(
	__in LPCSTR      szProduct,       // product code
	__in int          iInstallLevel,    // how much of the product to install
	__in INSTALLSTATE eInstallState);   // local/source/default/absent/lock/uncache
UINT WINAPI MsiConfigureProductW(
	__in LPCWSTR      szProduct,       // product code
	__in int          iInstallLevel,    // how much of the product to install
	__in INSTALLSTATE eInstallState);   // local/source/default/absent/lock/uncache
#ifdef UNICODE
#define MsiConfigureProduct  MsiConfigureProductW
#else
#define MsiConfigureProduct  MsiConfigureProductA
#endif // !UNICODE

// Install/uninstall an advertised or installed product
// No action if installed and INSTALLSTATE_DEFAULT specified

UINT WINAPI MsiConfigureProductExA(
	__in LPCSTR      szProduct,            // product code
	__in int          iInstallLevel,         // how much of the product to install
	__in INSTALLSTATE eInstallState,         // local/source/default/absent/lock/uncache
	__in_opt LPCSTR      szCommandLine);   // command line <property settings>
UINT WINAPI MsiConfigureProductExW(
	__in LPCWSTR      szProduct,            // product code
	__in int          iInstallLevel,         // how much of the product to install
	__in INSTALLSTATE eInstallState,         // local/source/default/absent/lock/uncache
	__in_opt LPCWSTR      szCommandLine);   // command line <property settings>
#ifdef UNICODE
#define MsiConfigureProductEx  MsiConfigureProductExW
#else
#define MsiConfigureProductEx  MsiConfigureProductExA
#endif // !UNICODE

// Reinstall product, used to validate or correct problems

UINT WINAPI MsiReinstallProductA(
	__in LPCSTR      szProduct,        // product code
	__in DWORD         szReinstallMode); // one or more REINSTALLMODE modes
UINT WINAPI MsiReinstallProductW(
	__in LPCWSTR      szProduct,        // product code
	__in DWORD         szReinstallMode); // one or more REINSTALLMODE modes
#ifdef UNICODE
#define MsiReinstallProduct  MsiReinstallProductW
#else
#define MsiReinstallProduct  MsiReinstallProductA
#endif // !UNICODE

#if (_WIN32_MSI >=  150)

// Output reg and shortcut info to script file for specified architecture for Assign or Publish
// If dwPlatform is 0, then the script is created based on the current platform (behavior of MsiAdvertiseProduct)
// If dwPlatform specifies a platform, then the script is created as if the current platform is the
//    platform specified in dwPlatform 
// If dwOptions includes MSIADVERTISEOPTIONFLAGS_INSTANCE, then a new instance is advertised. Use of
//    this option requires that szTransforms include the instance transform that changes the product code

UINT WINAPI MsiAdvertiseProductExA(
	__in LPCSTR	szPackagePath,      // location of package
	__in_opt LPCSTR    szScriptfilePath,   // if NULL, product is locally advertised
	__in_opt LPCSTR    szTransforms,       // list of transforms to be applied
	__in LANGID      lgidLanguage,       // install language
	__in DWORD       dwPlatform,         // the MSIARCHITECTUREFLAGS that control for which platform
	                                //   to create the script, ignored if szScriptfilePath is NULL
	__in DWORD       dwOptions);         // the MSIADVERTISEOPTIONFLAGS that specify extra advertise parameters
UINT WINAPI MsiAdvertiseProductExW(
	__in LPCWSTR	szPackagePath,      // location of package
	__in_opt LPCWSTR    szScriptfilePath,   // if NULL, product is locally advertised
	__in_opt LPCWSTR    szTransforms,       // list of transforms to be applied
	__in LANGID      lgidLanguage,       // install language
	__in DWORD       dwPlatform,         // the MSIARCHITECTUREFLAGS that control for which platform
	                                //   to create the script, ignored if szScriptfilePath is NULL
	__in DWORD       dwOptions);         // the MSIADVERTISEOPTIONFLAGS that specify extra advertise parameters
#ifdef UNICODE
#define MsiAdvertiseProductEx  MsiAdvertiseProductExW
#else
#define MsiAdvertiseProductEx  MsiAdvertiseProductExA
#endif // !UNICODE

#endif // (_WIN32_MSI >= 150)

// Output reg and shortcut info to script file for Assign or Publish

UINT WINAPI MsiAdvertiseProductA(
	__in LPCSTR      szPackagePath,    // location of package
	__in_opt LPCSTR      szScriptfilePath,  // if NULL, product is locally advertised
	__in_opt LPCSTR      szTransforms,      // list of transforms to be applied
	__in LANGID        lgidLanguage);     // install language
UINT WINAPI MsiAdvertiseProductW(
	__in LPCWSTR      szPackagePath,    // location of package
	__in_opt LPCWSTR      szScriptfilePath,  // if NULL, product is locally advertised
	__in_opt LPCWSTR      szTransforms,      // list of transforms to be applied
	__in LANGID        lgidLanguage);     // install language
#ifdef UNICODE
#define MsiAdvertiseProduct  MsiAdvertiseProductW
#else
#define MsiAdvertiseProduct  MsiAdvertiseProductA
#endif // !UNICODE


#if (_WIN32_MSI >=  150)

// Process advertise script file into supplied locations
// If an icon folder is specified, icon files will be placed there
// If an registry key is specified, registry data will be mapped under it
// If fShortcuts is TRUE, shortcuts will be created. If a special folder is
//    returned by SHGetSpecialFolderLocation(?), it will hold the shortcuts.
// if fRemoveItems is TRUE, items that are present will be removed

UINT WINAPI MsiProcessAdvertiseScriptA(
	__in LPCSTR      szScriptFile,  // path to script from MsiAdvertiseProduct
	__in_opt LPCSTR      szIconFolder,  // optional path to folder for icon files and transforms
	__in_opt HKEY         hRegData,      // optional parent registry key
	__in BOOL         fShortcuts,    // TRUE if shortcuts output to special folder
	__in BOOL         fRemoveItems); // TRUE if specified items are to be removed
UINT WINAPI MsiProcessAdvertiseScriptW(
	__in LPCWSTR      szScriptFile,  // path to script from MsiAdvertiseProduct
	__in_opt LPCWSTR      szIconFolder,  // optional path to folder for icon files and transforms
	__in_opt HKEY         hRegData,      // optional parent registry key
	__in BOOL         fShortcuts,    // TRUE if shortcuts output to special folder
	__in BOOL         fRemoveItems); // TRUE if specified items are to be removed
#ifdef UNICODE
#define MsiProcessAdvertiseScript  MsiProcessAdvertiseScriptW
#else
#define MsiProcessAdvertiseScript  MsiProcessAdvertiseScriptA
#endif // !UNICODE

#endif // (_WIN32_MSI >= 150)


// Process advertise script file using the supplied dwFlags control flags
// if fRemoveItems is TRUE, items that are present will be removed

UINT WINAPI MsiAdvertiseScriptA(
	__in LPCSTR      szScriptFile,  // path to script from MsiAdvertiseProduct
	__in DWORD         dwFlags,       // the SCRIPTFLAGS bit flags that control the script execution
	__in_opt PHKEY         phRegData,     // optional parent registry key
	__in BOOL          fRemoveItems); // TRUE if specified items are to be removed
UINT WINAPI MsiAdvertiseScriptW(
	__in LPCWSTR      szScriptFile,  // path to script from MsiAdvertiseProduct
	__in DWORD         dwFlags,       // the SCRIPTFLAGS bit flags that control the script execution
	__in_opt PHKEY         phRegData,     // optional parent registry key
	__in BOOL          fRemoveItems); // TRUE if specified items are to be removed
#ifdef UNICODE
#define MsiAdvertiseScript  MsiAdvertiseScriptW
#else
#define MsiAdvertiseScript  MsiAdvertiseScriptA
#endif // !UNICODE

// Return product info from an installer script file:
//   product code, language, version, readable name, path to package
// Returns TRUE is success, FALSE if szScriptFile is not a valid script file

UINT WINAPI MsiGetProductInfoFromScriptA(
	__in                               LPCSTR  szScriptFile,    // path to installer script file
	__out_ecount_opt(MAX_GUID_CHARS+1) LPSTR   lpProductBuf39,  // buffer for product code string GUID, 39 chars
	__out_opt                          LANGID   *plgidLanguage,  // return language Id
	__out_opt                          LPDWORD   pdwVersion,     // return version: Maj:Min:Build <8:8:16>
	__out_ecount_opt(*pcchNameBuf)     LPSTR   lpNameBuf,       // buffer to return readable product name
	__inout_opt                        LPDWORD   pcchNameBuf,    // in/out name buffer character count
	__out_ecount_opt(*pcchPackageBuf)  LPSTR   lpPackageBuf,   // buffer for path to product package
	__inout_opt                        LPDWORD   pcchPackageBuf);// in/out path buffer character count
UINT WINAPI MsiGetProductInfoFromScriptW(
	__in                               LPCWSTR  szScriptFile,    // path to installer script file
	__out_ecount_opt(MAX_GUID_CHARS+1) LPWSTR   lpProductBuf39,  // buffer for product code string GUID, 39 chars
	__out_opt                          LANGID   *plgidLanguage,  // return language Id
	__out_opt                          LPDWORD   pdwVersion,     // return version: Maj:Min:Build <8:8:16>
	__out_ecount_opt(*pcchNameBuf)     LPWSTR   lpNameBuf,       // buffer to return readable product name
	__inout_opt                        LPDWORD   pcchNameBuf,    // in/out name buffer character count
	__out_ecount_opt(*pcchPackageBuf)  LPWSTR   lpPackageBuf,   // buffer for path to product package
	__inout_opt                        LPDWORD   pcchPackageBuf);// in/out path buffer character count
#ifdef UNICODE
#define MsiGetProductInfoFromScript  MsiGetProductInfoFromScriptW
#else
#define MsiGetProductInfoFromScript  MsiGetProductInfoFromScriptA
#endif // !UNICODE

// Return the product code for a registered component, called once by apps

UINT WINAPI MsiGetProductCodeA(
	__in LPCSTR   szComponent,   // component Id registered for this product
	__out_ecount(MAX_GUID_CHARS+1) LPSTR lpBuf39);   // returned string GUID, sized for 39 characters
UINT WINAPI MsiGetProductCodeW(
	__in LPCWSTR   szComponent,   // component Id registered for this product
	__out_ecount(MAX_GUID_CHARS+1) LPWSTR lpBuf39);   // returned string GUID, sized for 39 characters
#ifdef UNICODE
#define MsiGetProductCode  MsiGetProductCodeW
#else
#define MsiGetProductCode  MsiGetProductCodeA
#endif // !UNICODE

// Return the registered user information for an installed product

USERINFOSTATE WINAPI MsiGetUserInfoA(
	__in                                   LPCSTR  szProduct,    // product code, string GUID
	__out_ecount_opt(*pcchUserNameBuf) LPSTR   lpUserNameBuf,    // return user name           
	__inout_opt                        LPDWORD   pcchUserNameBuf, // in/out buffer character count
	__out_ecount_opt(*pcchOrgNameBuf)  LPSTR   lpOrgNameBuf,     // return company name           
	__inout_opt                        LPDWORD   pcchOrgNameBuf,  // in/out buffer character count
	__out_ecount_opt(*pcchSerialBuf)   LPSTR   lpSerialBuf,      // return product serial number
	__inout_opt                        LPDWORD   pcchSerialBuf);  // in/out buffer character count
USERINFOSTATE WINAPI MsiGetUserInfoW(
	__in                                   LPCWSTR  szProduct,    // product code, string GUID
	__out_ecount_opt(*pcchUserNameBuf) LPWSTR   lpUserNameBuf,    // return user name           
	__inout_opt                        LPDWORD   pcchUserNameBuf, // in/out buffer character count
	__out_ecount_opt(*pcchOrgNameBuf)  LPWSTR   lpOrgNameBuf,     // return company name           
	__inout_opt                        LPDWORD   pcchOrgNameBuf,  // in/out buffer character count
	__out_ecount_opt(*pcchSerialBuf)   LPWSTR   lpSerialBuf,      // return product serial number
	__inout_opt                        LPDWORD   pcchSerialBuf);  // in/out buffer character count
#ifdef UNICODE
#define MsiGetUserInfo  MsiGetUserInfoW
#else
#define MsiGetUserInfo  MsiGetUserInfoA
#endif // !UNICODE

// Obtain and store user info and PID from installation wizard (first run)

UINT WINAPI MsiCollectUserInfoA(
	__in LPCSTR  szProduct);     // product code, string GUID
UINT WINAPI MsiCollectUserInfoW(
	__in LPCWSTR  szProduct);     // product code, string GUID
#ifdef UNICODE
#define MsiCollectUserInfo  MsiCollectUserInfoW
#else
#define MsiCollectUserInfo  MsiCollectUserInfoA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Functions to query, apply, and remove patches to a product.
// --------------------------------------------------------------------------

// Patch all possible installed products.

UINT WINAPI MsiApplyPatchA(
	__in LPCSTR szPatchPackage,       // location of patch package
	__in_opt LPCSTR szInstallPackage, // location of package for install to patch <optional>
	__in INSTALLTYPE eInstallType,      // type of install to patch
	__in_opt LPCSTR szCommandLine);   // command line <property settings>
UINT WINAPI MsiApplyPatchW(
	__in LPCWSTR szPatchPackage,       // location of patch package
	__in_opt LPCWSTR szInstallPackage, // location of package for install to patch <optional>
	__in INSTALLTYPE eInstallType,      // type of install to patch
	__in_opt LPCWSTR szCommandLine);   // command line <property settings>
#ifdef UNICODE
#define MsiApplyPatch  MsiApplyPatchW
#else
#define MsiApplyPatch  MsiApplyPatchA
#endif // !UNICODE

// Return patch info for first visible patch

UINT WINAPI MsiGetPatchInfoA(
	__in LPCSTR szPatch,                              // patch code
	__in LPCSTR szAttribute,                          // attribute name, case-sensitive
	__out_ecount_opt(*pcchValueBuf) LPSTR lpValueBuf, // returned value, NULL if not desired
	__inout_opt LPDWORD pcchValueBuf);                  // in/out buffer character count
UINT WINAPI MsiGetPatchInfoW(
	__in LPCWSTR szPatch,                              // patch code
	__in LPCWSTR szAttribute,                          // attribute name, case-sensitive
	__out_ecount_opt(*pcchValueBuf) LPWSTR lpValueBuf, // returned value, NULL if not desired
	__inout_opt LPDWORD pcchValueBuf);                  // in/out buffer character count
#ifdef UNICODE
#define MsiGetPatchInfo  MsiGetPatchInfoW
#else
#define MsiGetPatchInfo  MsiGetPatchInfoA
#endif // !UNICODE

// Enumerate all patches for a product in contexts visible to caller

UINT WINAPI MsiEnumPatchesA(
	__in LPCSTR szProduct,
	__in DWORD iPatchIndex,
	__out_ecount(MAX_GUID_CHARS+1)   LPSTR  lpPatchBuf,
	__out_ecount(*pcchTransformsBuf) LPSTR  lpTransformsBuf,
	__inout LPDWORD  pcchTransformsBuf);
UINT WINAPI MsiEnumPatchesW(
	__in LPCWSTR szProduct,
	__in DWORD iPatchIndex,
	__out_ecount(MAX_GUID_CHARS+1)   LPWSTR  lpPatchBuf,
	__out_ecount(*pcchTransformsBuf) LPWSTR  lpTransformsBuf,
	__inout LPDWORD  pcchTransformsBuf);
#ifdef UNICODE
#define MsiEnumPatches  MsiEnumPatchesW
#else
#define MsiEnumPatches  MsiEnumPatchesA
#endif // !UNICODE
	
#if (_WIN32_MSI >= 300)
// Remove one or more patches from the specified product.

UINT WINAPI MsiRemovePatchesA(
	__in LPCSTR szPatchList,         // semi-colon delimited list of patches to remove; patch can be referenced by patch package path or Patch GUID
	__in LPCSTR szProductCode,       // ProductCode GUID of product with patch to remove
	__in INSTALLTYPE eUninstallType,   // type of patch uninstall to perform. Must be INSTALLTYPE_SINGLE_INSTANCE.
	__in_opt LPCSTR szPropertyList); // command line property settings using PROPERTY=VALUE pairs
UINT WINAPI MsiRemovePatchesW(
	__in LPCWSTR szPatchList,         // semi-colon delimited list of patches to remove; patch can be referenced by patch package path or Patch GUID
	__in LPCWSTR szProductCode,       // ProductCode GUID of product with patch to remove
	__in INSTALLTYPE eUninstallType,   // type of patch uninstall to perform. Must be INSTALLTYPE_SINGLE_INSTANCE.
	__in_opt LPCWSTR szPropertyList); // command line property settings using PROPERTY=VALUE pairs
#ifdef UNICODE
#define MsiRemovePatches  MsiRemovePatchesW
#else
#define MsiRemovePatches  MsiRemovePatchesA
#endif // !UNICODE

// Extract XML data from the patch

UINT WINAPI MsiExtractPatchXMLDataA(
	__in LPCSTR szPatchPath,                         // Patch file to open
	__reserved DWORD dwReserved,                       // Reserved
	__out_ecount_opt(*pcchXMLData) LPSTR szXMLData,  // Buffer that gets the XML data
	__inout_opt LPDWORD pcchXMLData);                  // in/out XML data buffer character count
UINT WINAPI MsiExtractPatchXMLDataW(
	__in LPCWSTR szPatchPath,                         // Patch file to open
	__reserved DWORD dwReserved,                       // Reserved
	__out_ecount_opt(*pcchXMLData) LPWSTR szXMLData,  // Buffer that gets the XML data
	__inout_opt LPDWORD pcchXMLData);                  // in/out XML data buffer character count
#ifdef UNICODE
#define MsiExtractPatchXMLData  MsiExtractPatchXMLDataW
#else
#define MsiExtractPatchXMLData  MsiExtractPatchXMLDataA
#endif // !UNICODE

// Retrieve extended patch info for a particular patch applied
// to a particular product instance.

UINT WINAPI MsiGetPatchInfoExA(
        __in LPCSTR szPatchCode,                    // target patch to query
        __in LPCSTR szProductCode,                  // target product of patch application
        __in_opt LPCSTR szUserSid,                  // Account of this product instance
        __in MSIINSTALLCONTEXT dwContext,             // context to query for product and patch
        __in LPCSTR szProperty,                     // property of patch to retrieve
        __out_ecount_opt(*pcchValue) LPSTR lpValue, // address buffer for data
        __inout_opt LPDWORD pcchValue);               // in/out value buffer character count
UINT WINAPI MsiGetPatchInfoExW(
        __in LPCWSTR szPatchCode,                    // target patch to query
        __in LPCWSTR szProductCode,                  // target product of patch application
        __in_opt LPCWSTR szUserSid,                  // Account of this product instance
        __in MSIINSTALLCONTEXT dwContext,             // context to query for product and patch
        __in LPCWSTR szProperty,                     // property of patch to retrieve
        __out_ecount_opt(*pcchValue) LPWSTR lpValue, // address buffer for data
        __inout_opt LPDWORD pcchValue);               // in/out value buffer character count
#ifdef UNICODE
#define MsiGetPatchInfoEx  MsiGetPatchInfoExW
#else
#define MsiGetPatchInfoEx  MsiGetPatchInfoExA
#endif // !UNICODE

// Apply multiple patches to the specified product or to all eligible products
// on the machine

UINT WINAPI MsiApplyMultiplePatchesA(
        __in LPCSTR szPatchPackages,       // Patches to apply
        __in_opt LPCSTR szProductCode,     // target product of patch application
        __in_opt LPCSTR szPropertiesList); // Properties settings
UINT WINAPI MsiApplyMultiplePatchesW(
        __in LPCWSTR szPatchPackages,       // Patches to apply
        __in_opt LPCWSTR szProductCode,     // target product of patch application
        __in_opt LPCWSTR szPropertiesList); // Properties settings
#ifdef UNICODE
#define MsiApplyMultiplePatches  MsiApplyMultiplePatchesW
#else
#define MsiApplyMultiplePatches  MsiApplyMultiplePatchesA
#endif // !UNICODE

// Determines which patches apply and in what sequence for the provided set of
// patch files, XML files, and/or XML blobs. Patches already applied to the product
// are taken into account

UINT WINAPI MsiDeterminePatchSequenceA(
	__in LPCSTR szProductCode,                                   // Product code GUID of an installed product
	__in_opt LPCSTR szUserSid,                                   // User account we're interested in
	__in MSIINSTALLCONTEXT dwContext,                              // Installation context we're interested in
	__in DWORD cPatchInfo,                                         // Number of patches in the array
	__inout_ecount(cPatchInfo) PMSIPATCHSEQUENCEINFOA pPatchInfo); // Array of patch sequence information data
UINT WINAPI MsiDeterminePatchSequenceW(
	__in LPCWSTR szProductCode,                                   // Product code GUID of an installed product
	__in_opt LPCWSTR szUserSid,                                   // User account we're interested in
	__in MSIINSTALLCONTEXT dwContext,                              // Installation context we're interested in
	__in DWORD cPatchInfo,                                         // Number of patches in the array
	__inout_ecount(cPatchInfo) PMSIPATCHSEQUENCEINFOW pPatchInfo); // Array of patch sequence information data
#ifdef UNICODE
#define MsiDeterminePatchSequence  MsiDeterminePatchSequenceW
#else
#define MsiDeterminePatchSequence  MsiDeterminePatchSequenceA
#endif // !UNICODE

// Determines which patches apply and what sequence for the provided set of patch files,
// XML files, and/or XML blobs. Does not take into account either products or patches
// already installed on the machine.

UINT WINAPI MsiDetermineApplicablePatchesA(
	__in LPCSTR szProductPackagePath,                            // Fully qualified path to a product MSI database
	__in DWORD cPatchInfo,                                         // Number of patches in the array
	__inout_ecount(cPatchInfo) PMSIPATCHSEQUENCEINFOA pPatchInfo); // Array of patch sequence information data
UINT WINAPI MsiDetermineApplicablePatchesW(
	__in LPCWSTR szProductPackagePath,                            // Fully qualified path to a product MSI database
	__in DWORD cPatchInfo,                                         // Number of patches in the array
	__inout_ecount(cPatchInfo) PMSIPATCHSEQUENCEINFOW pPatchInfo); // Array of patch sequence information data
#ifdef UNICODE
#define MsiDetermineApplicablePatches  MsiDetermineApplicablePatchesW
#else
#define MsiDetermineApplicablePatches  MsiDetermineApplicablePatchesA
#endif // !UNICODE

// Enumerates all patches applied for a single product or all products based upon
// enumeration context and filter.

UINT WINAPI MsiEnumPatchesExA(
	__in_opt LPCSTR szProductCode,                                   // Enumerate patches on instances of this product
	__in_opt LPCSTR szUserSid,                                       // Account for enumeration
	__in DWORD dwContext,                                              // Contexts for enumeration
	__in DWORD dwFilter,                                               // Filter for enumeration
	__in DWORD dwIndex,                                                // Index for enumeration
	__out_ecount_opt(MAX_GUID_CHARS+1) CHAR szPatchCode[39],         // Enumerated patch code
	__out_ecount_opt(MAX_GUID_CHARS+1) CHAR szTargetProductCode[39], // Enumerated patch's product code
	__out_opt MSIINSTALLCONTEXT *pdwTargetProductContext,              //Enumerated patch's context
	__out_ecount_opt(*pcchTargetUserSid) LPSTR  szTargetUserSid,     // Enumerated patch's user account
	__inout_opt LPDWORD pcchTargetUserSid);                            // in/out character count of szTargetUserSid
UINT WINAPI MsiEnumPatchesExW(
	__in_opt LPCWSTR szProductCode,                                   // Enumerate patches on instances of this product
	__in_opt LPCWSTR szUserSid,                                       // Account for enumeration
	__in DWORD dwContext,                                              // Contexts for enumeration
	__in DWORD dwFilter,                                               // Filter for enumeration
	__in DWORD dwIndex,                                                // Index for enumeration
	__out_ecount_opt(MAX_GUID_CHARS+1) WCHAR szPatchCode[39],         // Enumerated patch code
	__out_ecount_opt(MAX_GUID_CHARS+1) WCHAR szTargetProductCode[39], // Enumerated patch's product code
	__out_opt MSIINSTALLCONTEXT *pdwTargetProductContext,              //Enumerated patch's context
	__out_ecount_opt(*pcchTargetUserSid) LPWSTR  szTargetUserSid,     // Enumerated patch's user account
	__inout_opt LPDWORD pcchTargetUserSid);                            // in/out character count of szTargetUserSid
#ifdef UNICODE
#define MsiEnumPatchesEx  MsiEnumPatchesExW
#else
#define MsiEnumPatchesEx  MsiEnumPatchesExA
#endif // !UNICODE

#endif //(_WIN32_MSI >= 300)

// --------------------------------------------------------------------------
// Functions to query and configure a feature within a product.
// --------------------------------------------------------------------------

// Return the installed state for a product feature

INSTALLSTATE WINAPI MsiQueryFeatureStateA(
	__in LPCSTR  szProduct,
	__in LPCSTR  szFeature);
INSTALLSTATE WINAPI MsiQueryFeatureStateW(
	__in LPCWSTR  szProduct,
	__in LPCWSTR  szFeature);
#ifdef UNICODE
#define MsiQueryFeatureState  MsiQueryFeatureStateW
#else
#define MsiQueryFeatureState  MsiQueryFeatureStateA
#endif // !UNICODE

#if (_WIN32_MSI >= 300)	
// Retrieve the installed state for a product feature in a particular product instance

UINT WINAPI MsiQueryFeatureStateExA(
		__in LPCSTR szProductCode,        // Information is queried on this product
		__in_opt LPCSTR szUserSid,        // Account of this product instance
		__in MSIINSTALLCONTEXT dwContext,   // Context of this product instance
		__in LPCSTR szFeature,            // Name of the feature being queried
		__out_opt INSTALLSTATE *pdwState);  // State value
UINT WINAPI MsiQueryFeatureStateExW(
		__in LPCWSTR szProductCode,        // Information is queried on this product
		__in_opt LPCWSTR szUserSid,        // Account of this product instance
		__in MSIINSTALLCONTEXT dwContext,   // Context of this product instance
		__in LPCWSTR szFeature,            // Name of the feature being queried
		__out_opt INSTALLSTATE *pdwState);  // State value
#ifdef UNICODE
#define MsiQueryFeatureStateEx  MsiQueryFeatureStateExW
#else
#define MsiQueryFeatureStateEx  MsiQueryFeatureStateExA
#endif // !UNICODE
#endif //(_WIN32_MSI >= 300)

// Indicate intent to use a product feature, increments usage count
// Prompts for CD if not loaded, does not install feature

INSTALLSTATE WINAPI MsiUseFeatureA(
	__in LPCSTR  szProduct,
	__in LPCSTR  szFeature);
INSTALLSTATE WINAPI MsiUseFeatureW(
	__in LPCWSTR  szProduct,
	__in LPCWSTR  szFeature);
#ifdef UNICODE
#define MsiUseFeature  MsiUseFeatureW
#else
#define MsiUseFeature  MsiUseFeatureA
#endif // !UNICODE

// Indicate intent to use a product feature, increments usage count
// Prompts for CD if not loaded, does not install feature
// Allows for bypassing component detection where performance is critical

INSTALLSTATE WINAPI MsiUseFeatureExA(
	__in LPCSTR  szProduct,          // product code
	__in LPCSTR  szFeature,          // feature ID
	__in DWORD     dwInstallMode,      // INSTALLMODE_NODETECTION, else 0
	__reserved DWORD     dwReserved);  // reserved, must be 0
INSTALLSTATE WINAPI MsiUseFeatureExW(
	__in LPCWSTR  szProduct,          // product code
	__in LPCWSTR  szFeature,          // feature ID
	__in DWORD     dwInstallMode,      // INSTALLMODE_NODETECTION, else 0
	__reserved DWORD     dwReserved);  // reserved, must be 0
#ifdef UNICODE
#define MsiUseFeatureEx  MsiUseFeatureExW
#else
#define MsiUseFeatureEx  MsiUseFeatureExA
#endif // !UNICODE

// Return the usage metrics for a product feature

UINT WINAPI MsiGetFeatureUsageA(
	__in LPCSTR      szProduct,            // product code
	__in LPCSTR      szFeature,            // feature ID
	__out_opt LPDWORD       pdwUseCount,     // returned use count
	__out_opt LPWORD        pwDateUsed);     // last date used (DOS date format)
UINT WINAPI MsiGetFeatureUsageW(
	__in LPCWSTR      szProduct,            // product code
	__in LPCWSTR      szFeature,            // feature ID
	__out_opt LPDWORD       pdwUseCount,     // returned use count
	__out_opt LPWORD        pwDateUsed);     // last date used (DOS date format)
#ifdef UNICODE
#define MsiGetFeatureUsage  MsiGetFeatureUsageW
#else
#define MsiGetFeatureUsage  MsiGetFeatureUsageA
#endif // !UNICODE

// Force the installed state for a product feature

UINT WINAPI MsiConfigureFeatureA(
	__in LPCSTR  szProduct,
	__in LPCSTR  szFeature,
	__in INSTALLSTATE eInstallState);   // local/source/default/absent/lock/uncache
UINT WINAPI MsiConfigureFeatureW(
	__in LPCWSTR  szProduct,
	__in LPCWSTR  szFeature,
	__in INSTALLSTATE eInstallState);   // local/source/default/absent/lock/uncache
#ifdef UNICODE
#define MsiConfigureFeature  MsiConfigureFeatureW
#else
#define MsiConfigureFeature  MsiConfigureFeatureA
#endif // !UNICODE


// Reinstall feature, used to validate or correct problems

UINT WINAPI MsiReinstallFeatureA(
	__in LPCSTR      szProduct,        // product code
	__in LPCSTR      szFeature,        // feature ID, NULL for entire product
	__in DWORD         dwReinstallMode); // one or more REINSTALLMODE modes
UINT WINAPI MsiReinstallFeatureW(
	__in LPCWSTR      szProduct,        // product code
	__in LPCWSTR      szFeature,        // feature ID, NULL for entire product
	__in DWORD         dwReinstallMode); // one or more REINSTALLMODE modes
#ifdef UNICODE
#define MsiReinstallFeature  MsiReinstallFeatureW
#else
#define MsiReinstallFeature  MsiReinstallFeatureA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Functions to query a component. For functions that return a path to
// a particular component, the state of the feature being used should
// have been checked previously.
// --------------------------------------------------------------------------

// Return full component path, performing any necessary installation
// calls MsiQueryFeatureState to detect that all components are installed
// then calls MsiConfigureFeature if any of its components are uninstalled
// then calls MsiLocateComponent to obtain the path the its key file

UINT WINAPI MsiProvideComponentA(
	__in LPCSTR     szProduct,                               // product code in case install required
	__in LPCSTR     szFeature,                               // feature ID in case install required
	__in LPCSTR     szComponent,                             // component ID
	__in DWORD        dwInstallMode,                           // either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	__out_ecount_opt(*pcchPathBuf)  LPSTR      lpPathBuf,    // returned path, NULL if not desired
	__inout_opt                     LPDWORD      pcchPathBuf); // in/out buffer character count
UINT WINAPI MsiProvideComponentW(
	__in LPCWSTR     szProduct,                               // product code in case install required
	__in LPCWSTR     szFeature,                               // feature ID in case install required
	__in LPCWSTR     szComponent,                             // component ID
	__in DWORD        dwInstallMode,                           // either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	__out_ecount_opt(*pcchPathBuf)  LPWSTR      lpPathBuf,    // returned path, NULL if not desired
	__inout_opt                     LPDWORD      pcchPathBuf); // in/out buffer character count
#ifdef UNICODE
#define MsiProvideComponent  MsiProvideComponentW
#else
#define MsiProvideComponent  MsiProvideComponentA
#endif // !UNICODE

// Return full component path for a qualified component, performing any necessary installation. 
// Prompts for source if necessary and increments the usage count for the feature.

UINT WINAPI MsiProvideQualifiedComponentA(
	__in LPCSTR     szCategory,                           // component category ID
	__in LPCSTR     szQualifier,                          // specifies which component to access
	__in DWORD        dwInstallMode,                        // either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	__out_ecount_opt(*pcchPathBuf)  LPSTR  lpPathBuf,     // returned path, NULL if not desired
	__inout_opt                     LPDWORD  pcchPathBuf);  // in/out buffer character count
UINT WINAPI MsiProvideQualifiedComponentW(
	__in LPCWSTR     szCategory,                           // component category ID
	__in LPCWSTR     szQualifier,                          // specifies which component to access
	__in DWORD        dwInstallMode,                        // either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	__out_ecount_opt(*pcchPathBuf)  LPWSTR  lpPathBuf,     // returned path, NULL if not desired
	__inout_opt                     LPDWORD  pcchPathBuf);  // in/out buffer character count
#ifdef UNICODE
#define MsiProvideQualifiedComponent  MsiProvideQualifiedComponentW
#else
#define MsiProvideQualifiedComponent  MsiProvideQualifiedComponentA
#endif // !UNICODE

// Return full component path for a qualified component, performing any necessary installation. 
// Prompts for source if necessary and increments the usage count for the feature.
// The szProduct parameter specifies the product to match that has published the qualified
// component. If null, this API works the same as MsiProvideQualifiedComponent. 

UINT WINAPI MsiProvideQualifiedComponentExA(
	__in LPCSTR     szCategory,                           // component category ID
	__in LPCSTR     szQualifier,                          // specifies which component to access
	__in DWORD        dwInstallMode,                        // either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	__in_opt LPCSTR     szProduct,                        // the product code 
	__reserved DWORD        dwUnused1,                      // not used, must be zero
	__reserved DWORD        dwUnused2,                      // not used, must be zero
	__out_ecount_opt(*pcchPathBuf)  LPSTR  lpPathBuf,     // returned path, NULL if not desired
	__inout_opt                     LPDWORD  pcchPathBuf);  // in/out buffer character count
UINT WINAPI MsiProvideQualifiedComponentExW(
	__in LPCWSTR     szCategory,                           // component category ID
	__in LPCWSTR     szQualifier,                          // specifies which component to access
	__in DWORD        dwInstallMode,                        // either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	__in_opt LPCWSTR     szProduct,                        // the product code 
	__reserved DWORD        dwUnused1,                      // not used, must be zero
	__reserved DWORD        dwUnused2,                      // not used, must be zero
	__out_ecount_opt(*pcchPathBuf)  LPWSTR  lpPathBuf,     // returned path, NULL if not desired
	__inout_opt                     LPDWORD  pcchPathBuf);  // in/out buffer character count
#ifdef UNICODE
#define MsiProvideQualifiedComponentEx  MsiProvideQualifiedComponentExW
#else
#define MsiProvideQualifiedComponentEx  MsiProvideQualifiedComponentExA
#endif // !UNICODE

// Return full path to an installed component

INSTALLSTATE WINAPI MsiGetComponentPathA(
	__in LPCSTR   szProduct,                        // product code for client product
	__in LPCSTR   szComponent,                      // component Id, string GUID
	__out_ecount_opt(*pcchBuf)  LPSTR  lpPathBuf,   // returned path
	__inout_opt                 LPDWORD  pcchBuf);    // in/out buffer character count
INSTALLSTATE WINAPI MsiGetComponentPathW(
	__in LPCWSTR   szProduct,                        // product code for client product
	__in LPCWSTR   szComponent,                      // component Id, string GUID
	__out_ecount_opt(*pcchBuf)  LPWSTR  lpPathBuf,   // returned path
	__inout_opt                 LPDWORD  pcchBuf);    // in/out buffer character count
#ifdef UNICODE
#define MsiGetComponentPath  MsiGetComponentPathW
#else
#define MsiGetComponentPath  MsiGetComponentPathA
#endif // !UNICODE

#if (_WIN32_MSI >= 500)
// Return full path to an installed component for a given user
// and context

INSTALLSTATE WINAPI MsiGetComponentPathExA(		
	__in					LPCSTR		szProductCode,		// ProductCode
	__in					LPCSTR		szComponentCode,	// ComponentCode
	__in_opt				LPCSTR		szUserSid,		// User account
	__in_opt				MSIINSTALLCONTEXT	dwContext,		// Install context
	__out_ecount_opt(*pcchOutPathBuffer)	LPSTR			lpOutPathBuffer,	// returned path
	__inout_opt				LPDWORD			pcchOutPathBuffer);	// in/out buffer character count
INSTALLSTATE WINAPI MsiGetComponentPathExW(		
	__in					LPCWSTR		szProductCode,		// ProductCode
	__in					LPCWSTR		szComponentCode,	// ComponentCode
	__in_opt				LPCWSTR		szUserSid,		// User account
	__in_opt				MSIINSTALLCONTEXT	dwContext,		// Install context
	__out_ecount_opt(*pcchOutPathBuffer)	LPWSTR			lpOutPathBuffer,	// returned path
	__inout_opt				LPDWORD			pcchOutPathBuffer);	// in/out buffer character count
#ifdef UNICODE
#define MsiGetComponentPathEx  MsiGetComponentPathExW
#else
#define MsiGetComponentPathEx  MsiGetComponentPathExA
#endif // !UNICODE
#endif // (_WIN32_MSI >= 500)		

#if (_WIN32_MSI >= 150)

#define MSIASSEMBLYINFO_NETASSEMBLY   0 // Net assemblies
#define MSIASSEMBLYINFO_WIN32ASSEMBLY 1 // Win32 assemblies

// Return full component path for an assembly installed via the WI, performing any necessary installation. 
// Prompts for source if necessary and increments the usage count for the feature.
// The szAssemblyName parameter specifies the stringized assembly name. 
// The szAppContext is the full path to the .cfg file or the app exe to which the assembly being requested 
// has been privatised to, which is null for global assemblies

UINT WINAPI MsiProvideAssemblyA(
	__in LPCSTR    szAssemblyName,                       // stringized assembly name
	__in_opt LPCSTR    szAppContext,                     // specifies the full path to the parent asm's .cfg file, null for global assemblies
	__in DWORD       dwInstallMode,                        // either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	__in DWORD       dwAssemblyInfo,                       // assembly info, including assembly type
	__out_ecount_opt(*pcchPathBuf)  LPSTR  lpPathBuf,    // returned path, NULL if not desired
	__inout_opt                     LPDWORD  pcchPathBuf); // in/out buffer character count
UINT WINAPI MsiProvideAssemblyW(
	__in LPCWSTR    szAssemblyName,                       // stringized assembly name
	__in_opt LPCWSTR    szAppContext,                     // specifies the full path to the parent asm's .cfg file, null for global assemblies
	__in DWORD       dwInstallMode,                        // either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	__in DWORD       dwAssemblyInfo,                       // assembly info, including assembly type
	__out_ecount_opt(*pcchPathBuf)  LPWSTR  lpPathBuf,    // returned path, NULL if not desired
	__inout_opt                     LPDWORD  pcchPathBuf); // in/out buffer character count
#ifdef UNICODE
#define MsiProvideAssembly  MsiProvideAssemblyW
#else
#define MsiProvideAssembly  MsiProvideAssemblyA
#endif // !UNICODE

#endif //(_WIN32_MSI >=  150)

#if (_WIN32_MSI >= 300)
// Query the installed state of a component in the specified product instance

UINT WINAPI MsiQueryComponentStateA(
		__in LPCSTR szProductCode,       // Information is queried on this product
		__in_opt LPCSTR szUserSid,       // Account of this product instance
		__in MSIINSTALLCONTEXT dwContext,  // Context of this product instance
		__in LPCSTR szComponentCode,     // Name of the component being queried
		__out_opt INSTALLSTATE *pdwState); // State value
UINT WINAPI MsiQueryComponentStateW(
		__in LPCWSTR szProductCode,       // Information is queried on this product
		__in_opt LPCWSTR szUserSid,       // Account of this product instance
		__in MSIINSTALLCONTEXT dwContext,  // Context of this product instance
		__in LPCWSTR szComponentCode,     // Name of the component being queried
		__out_opt INSTALLSTATE *pdwState); // State value
#ifdef UNICODE
#define MsiQueryComponentState  MsiQueryComponentStateW
#else
#define MsiQueryComponentState  MsiQueryComponentStateA
#endif // !UNICODE
#endif //(_WIN32_MSI >= 300)


// --------------------------------------------------------------------------
// Functions to iterate registered products, features, and components.
// As with reg keys, they accept a 0-based index into the enumeration.
// --------------------------------------------------------------------------

// Enumerate the registered products, either installed or advertised

UINT WINAPI MsiEnumProductsA(
	__in DWORD     iProductIndex,                               // 0-based index into registered products
	__out_ecount(MAX_GUID_CHARS+1)  LPSTR   lpProductBuf);    // buffer of char count: 39 (size of string GUID)
UINT WINAPI MsiEnumProductsW(
	__in DWORD     iProductIndex,                               // 0-based index into registered products
	__out_ecount(MAX_GUID_CHARS+1)  LPWSTR   lpProductBuf);    // buffer of char count: 39 (size of string GUID)
#ifdef UNICODE
#define MsiEnumProducts  MsiEnumProductsW
#else
#define MsiEnumProducts  MsiEnumProductsA
#endif // !UNICODE

#if (_WIN32_MSI >= 300)
// Enumerate the registered products, either installed or advertised in
// the specified context
UINT WINAPI MsiEnumProductsExA(
		__in_opt LPCSTR szProductCode,                                      // Enumerate instances of this product
		__in_opt LPCSTR szUserSid,                                          // Account for enumeration
		__in DWORD dwContext,                                                 // Contexts for enumeration
		__in DWORD dwIndex,                                                   // Index for enumeration
		__out_ecount_opt(MAX_GUID_CHARS+1) CHAR szInstalledProductCode[39], // Enumerated product's ProductCode
		__out_opt MSIINSTALLCONTEXT *pdwInstalledContext,                     // Enumerated product's context
		__out_ecount_opt(*pcchSid) LPSTR  szSid,                            // Enumerated product's user account
		__inout_opt LPDWORD pcchSid);                                         // in/out character count of szSid 
// Enumerate the registered products, either installed or advertised in
// the specified context
UINT WINAPI MsiEnumProductsExW(
		__in_opt LPCWSTR szProductCode,                                      // Enumerate instances of this product
		__in_opt LPCWSTR szUserSid,                                          // Account for enumeration
		__in DWORD dwContext,                                                 // Contexts for enumeration
		__in DWORD dwIndex,                                                   // Index for enumeration
		__out_ecount_opt(MAX_GUID_CHARS+1) WCHAR szInstalledProductCode[39], // Enumerated product's ProductCode
		__out_opt MSIINSTALLCONTEXT *pdwInstalledContext,                     // Enumerated product's context
		__out_ecount_opt(*pcchSid) LPWSTR  szSid,                            // Enumerated product's user account
		__inout_opt LPDWORD pcchSid);                                         // in/out character count of szSid 
#ifdef UNICODE
#define MsiEnumProductsEx  MsiEnumProductsExW
#else
#define MsiEnumProductsEx  MsiEnumProductsExA
#endif // !UNICODE
#endif //(_WIN32_MSI >= 300)

#if (_WIN32_MSI >=  110)

// Enumerate products with given upgrade code

UINT WINAPI MsiEnumRelatedProductsA(
	__in LPCSTR  lpUpgradeCode,                               // upgrade code of products to enumerate
	__reserved DWORD     dwReserved,                            // reserved, must be 0
	__in DWORD     iProductIndex,                               // 0-based index into registered products
	__out_ecount(MAX_GUID_CHARS+1)  LPSTR   lpProductBuf);    // buffer of char count: 39 (size of string GUID)
UINT WINAPI MsiEnumRelatedProductsW(
	__in LPCWSTR  lpUpgradeCode,                               // upgrade code of products to enumerate
	__reserved DWORD     dwReserved,                            // reserved, must be 0
	__in DWORD     iProductIndex,                               // 0-based index into registered products
	__out_ecount(MAX_GUID_CHARS+1)  LPWSTR   lpProductBuf);    // buffer of char count: 39 (size of string GUID)
#ifdef UNICODE
#define MsiEnumRelatedProducts  MsiEnumRelatedProductsW
#else
#define MsiEnumRelatedProducts  MsiEnumRelatedProductsA
#endif // !UNICODE

#endif //(_WIN32_MSI >=  110)

// Enumerate the advertised features for a given product.
// If parent is not required, supplying NULL will improve performance.

UINT WINAPI MsiEnumFeaturesA(
	__in LPCSTR  szProduct,
	__in DWORD     iFeatureIndex,                                    // 0-based index into published features
	__out_ecount(MAX_FEATURE_CHARS+1)      LPSTR   lpFeatureBuf,   // feature name buffer,   size=MAX_FEATURE_CHARS+1
	__out_ecount_opt(MAX_FEATURE_CHARS+1)  LPSTR   lpParentBuf);   // parent feature buffer, size=MAX_FEATURE_CHARS+1
UINT WINAPI MsiEnumFeaturesW(
	__in LPCWSTR  szProduct,
	__in DWORD     iFeatureIndex,                                    // 0-based index into published features
	__out_ecount(MAX_FEATURE_CHARS+1)      LPWSTR   lpFeatureBuf,   // feature name buffer,   size=MAX_FEATURE_CHARS+1
	__out_ecount_opt(MAX_FEATURE_CHARS+1)  LPWSTR   lpParentBuf);   // parent feature buffer, size=MAX_FEATURE_CHARS+1
#ifdef UNICODE
#define MsiEnumFeatures  MsiEnumFeaturesW
#else
#define MsiEnumFeatures  MsiEnumFeaturesA
#endif // !UNICODE

// Enumerate the installed components for all products

UINT WINAPI MsiEnumComponentsA(
	__in DWORD    iComponentIndex,                              // 0-based index into installed components
	__out_ecount(MAX_GUID_CHARS+1)  LPSTR   lpComponentBuf);  // buffer of char count: 39 (size of string GUID)
UINT WINAPI MsiEnumComponentsW(
	__in DWORD    iComponentIndex,                              // 0-based index into installed components
	__out_ecount(MAX_GUID_CHARS+1)  LPWSTR   lpComponentBuf);  // buffer of char count: 39 (size of string GUID)
#ifdef UNICODE
#define MsiEnumComponents  MsiEnumComponentsW
#else
#define MsiEnumComponents  MsiEnumComponentsA
#endif // !UNICODE

#if (_WIN32_MSI >=  500)
// Enumerate installed components for all products for a given users 
// and context

UINT WINAPI MsiEnumComponentsExA(	
	__in_opt				LPCSTR		szUserSid,			// Account for enumeration
	__in					DWORD			dwContext,			// Contexts for enumeration
	__in					DWORD			dwIndex,			// 0-based index into installed components
	__out_ecount_opt(MAX_GUID_CHARS+1)	CHAR			szInstalledComponentCode[39],	// Enumerated component's ComponentCode
	__out_opt				MSIINSTALLCONTEXT*	pdwInstalledContext,		// Enumerated component's context
	__out_ecount_opt(*pcchSid)		LPSTR			szSid,				// Enumerated component's user account
	__inout_opt				LPDWORD			pcchSid);			// in/out character count of szSid 
UINT WINAPI MsiEnumComponentsExW(	
	__in_opt				LPCWSTR		szUserSid,			// Account for enumeration
	__in					DWORD			dwContext,			// Contexts for enumeration
	__in					DWORD			dwIndex,			// 0-based index into installed components
	__out_ecount_opt(MAX_GUID_CHARS+1)	WCHAR			szInstalledComponentCode[39],	// Enumerated component's ComponentCode
	__out_opt				MSIINSTALLCONTEXT*	pdwInstalledContext,		// Enumerated component's context
	__out_ecount_opt(*pcchSid)		LPWSTR			szSid,				// Enumerated component's user account
	__inout_opt				LPDWORD			pcchSid);			// in/out character count of szSid 
#ifdef UNICODE
#define MsiEnumComponentsEx  MsiEnumComponentsExW
#else
#define MsiEnumComponentsEx  MsiEnumComponentsExA
#endif // !UNICODE
	
#endif // (_WIN32_MSI >= 500)

// Enumerate the client products for a component

UINT WINAPI MsiEnumClientsA(
	__in LPCSTR  szComponent,
	__in DWORD     iProductIndex,                               // 0-based index into client products
	__out_ecount(MAX_GUID_CHARS+1)  LPSTR   lpProductBuf);    // buffer of char count: 39 (size of string GUID)
UINT WINAPI MsiEnumClientsW(
	__in LPCWSTR  szComponent,
	__in DWORD     iProductIndex,                               // 0-based index into client products
	__out_ecount(MAX_GUID_CHARS+1)  LPWSTR   lpProductBuf);    // buffer of char count: 39 (size of string GUID)
#ifdef UNICODE
#define MsiEnumClients  MsiEnumClientsW
#else
#define MsiEnumClients  MsiEnumClientsA
#endif // !UNICODE

#if (_WIN32_MSI >=  500)
// Enumerate the client products for a component for a given users 
// and context

UINT WINAPI MsiEnumClientsExA (	
	__in					LPCSTR		szComponent,		// ComponentCode for enumeration
	__in_opt				LPCSTR		szUserSid,		// Account for enumeration
	__in					DWORD			dwContext,		// Contexts for enumeration
	__in					DWORD			dwProductIndex,		// 0-based index into component clients
	__out_ecount_opt(MAX_GUID_CHARS+1)	CHAR			szProductBuf[39],	// Enumerated component's client ProductCode
	__out_opt				MSIINSTALLCONTEXT	*pdwInstalledContext,	// Enumerated component's client product's context
	__out_ecount_opt(*pcchSid)		LPSTR			szSid,			// Enumerated user account
	__inout_opt				LPDWORD			pcchSid);		// in/out character count of szSid 
UINT WINAPI MsiEnumClientsExW (	
	__in					LPCWSTR		szComponent,		// ComponentCode for enumeration
	__in_opt				LPCWSTR		szUserSid,		// Account for enumeration
	__in					DWORD			dwContext,		// Contexts for enumeration
	__in					DWORD			dwProductIndex,		// 0-based index into component clients
	__out_ecount_opt(MAX_GUID_CHARS+1)	WCHAR			szProductBuf[39],	// Enumerated component's client ProductCode
	__out_opt				MSIINSTALLCONTEXT	*pdwInstalledContext,	// Enumerated component's client product's context
	__out_ecount_opt(*pcchSid)		LPWSTR			szSid,			// Enumerated user account
	__inout_opt				LPDWORD			pcchSid);		// in/out character count of szSid 
#ifdef UNICODE
#define MsiEnumClientsEx  MsiEnumClientsExW
#else
#define MsiEnumClientsEx  MsiEnumClientsExA
#endif // !UNICODE
#endif // (_WIN32_MSI >= 500)									

// Enumerate the qualifiers for an advertised component.

UINT WINAPI MsiEnumComponentQualifiersA(
	__in                                       LPCSTR   szComponent,             // generic component ID that is qualified
	__in                                       DWORD      iIndex,	               // 0-based index into qualifiers
	__out_ecount(*pcchQualifierBuf)            LPSTR    lpQualifierBuf,          // qualifier buffer
	__inout                                    LPDWORD    pcchQualifierBuf,        // in/out qualifier buffer character count
	__out_ecount_opt(*pcchApplicationDataBuf)  LPSTR    lpApplicationDataBuf,    // description buffer
	__inout_opt                                LPDWORD    pcchApplicationDataBuf); // in/out description buffer character count
UINT WINAPI MsiEnumComponentQualifiersW(
	__in                                       LPCWSTR   szComponent,             // generic component ID that is qualified
	__in                                       DWORD      iIndex,	               // 0-based index into qualifiers
	__out_ecount(*pcchQualifierBuf)            LPWSTR    lpQualifierBuf,          // qualifier buffer
	__inout                                    LPDWORD    pcchQualifierBuf,        // in/out qualifier buffer character count
	__out_ecount_opt(*pcchApplicationDataBuf)  LPWSTR    lpApplicationDataBuf,    // description buffer
	__inout_opt                                LPDWORD    pcchApplicationDataBuf); // in/out description buffer character count
#ifdef UNICODE
#define MsiEnumComponentQualifiers  MsiEnumComponentQualifiersW
#else
#define MsiEnumComponentQualifiers  MsiEnumComponentQualifiersA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Functions to obtain product or package information.
// --------------------------------------------------------------------------

// Open the installation for a product to obtain detailed information

UINT WINAPI MsiOpenProductA(
	__in LPCSTR   szProduct,     // product code
	__out MSIHANDLE  *hProduct);   // returned product handle, must be closed
UINT WINAPI MsiOpenProductW(
	__in LPCWSTR   szProduct,     // product code
	__out MSIHANDLE  *hProduct);   // returned product handle, must be closed
#ifdef UNICODE
#define MsiOpenProduct  MsiOpenProductW
#else
#define MsiOpenProduct  MsiOpenProductA
#endif // !UNICODE

// Open a product package in order to access product properties

UINT WINAPI MsiOpenPackageA(
	__in LPCSTR    szPackagePath,      // path to package, or database handle: #nnnn
	__out MSIHANDLE  *hProduct);         // returned product handle, must be closed
UINT WINAPI MsiOpenPackageW(
	__in LPCWSTR    szPackagePath,      // path to package, or database handle: #nnnn
	__out MSIHANDLE  *hProduct);         // returned product handle, must be closed
#ifdef UNICODE
#define MsiOpenPackage  MsiOpenPackageW
#else
#define MsiOpenPackage  MsiOpenPackageA
#endif // !UNICODE

#if (_WIN32_MSI >=  150)

// Open a product package in order to access product properties
// Option to create a "safe" engine that does not look at machine state
//  and does not allow for modification of machine state

UINT WINAPI MsiOpenPackageExA(
	__in LPCSTR   szPackagePath,  // path to package, or database handle: #nnnn
	__in DWORD      dwOptions,      // options flags to indicate whether or not to ignore machine state
	__out MSIHANDLE *hProduct);     // returned product handle, must be closed
UINT WINAPI MsiOpenPackageExW(
	__in LPCWSTR   szPackagePath,  // path to package, or database handle: #nnnn
	__in DWORD      dwOptions,      // options flags to indicate whether or not to ignore machine state
	__out MSIHANDLE *hProduct);     // returned product handle, must be closed
#ifdef UNICODE
#define MsiOpenPackageEx  MsiOpenPackageExW
#else
#define MsiOpenPackageEx  MsiOpenPackageExA
#endif // !UNICODE

#endif //(_WIN32_MSI >= 150)

#if (_WIN32_MSI >= 400)

UINT WINAPI MsiGetPatchFileListA(
	__in  LPCSTR    szProductCode,
	__in  LPCSTR    szPatchPackages,
	__out LPDWORD      pcFiles,
	__deref_out MSIHANDLE** pphFileRecords);
UINT WINAPI MsiGetPatchFileListW(
	__in  LPCWSTR    szProductCode,
	__in  LPCWSTR    szPatchPackages,
	__out LPDWORD      pcFiles,
	__deref_out MSIHANDLE** pphFileRecords);
#ifdef UNICODE
#define MsiGetPatchFileList  MsiGetPatchFileListW
#else
#define MsiGetPatchFileList  MsiGetPatchFileListA
#endif // !UNICODE

#endif // #if (_WIN32_MSI >= 400)

// Provide the value for an installation property.

UINT WINAPI MsiGetProductPropertyA(
	__in MSIHANDLE   hProduct,                                   // product handle obtained from MsiOpenProduct
	__in LPCSTR    szProperty,                                 // property name, case-sensitive
	__out_ecount_opt(*pcchValueBuf)  LPSTR     lpValueBuf,     // returned value, NULL if not desired
	__inout_opt                      LPDWORD     pcchValueBuf);  // in/out buffer character count
UINT WINAPI MsiGetProductPropertyW(
	__in MSIHANDLE   hProduct,                                   // product handle obtained from MsiOpenProduct
	__in LPCWSTR    szProperty,                                 // property name, case-sensitive
	__out_ecount_opt(*pcchValueBuf)  LPWSTR     lpValueBuf,     // returned value, NULL if not desired
	__inout_opt                      LPDWORD     pcchValueBuf);  // in/out buffer character count
#ifdef UNICODE
#define MsiGetProductProperty  MsiGetProductPropertyW
#else
#define MsiGetProductProperty  MsiGetProductPropertyA
#endif // !UNICODE


// Determine whether a file is a package
// Returns ERROR_SUCCESS if file is a package.

UINT WINAPI MsiVerifyPackageA(
	__in LPCSTR      szPackagePath);   // location of package
UINT WINAPI MsiVerifyPackageW(
	__in LPCWSTR      szPackagePath);   // location of package
#ifdef UNICODE
#define MsiVerifyPackage  MsiVerifyPackageW
#else
#define MsiVerifyPackage  MsiVerifyPackageA
#endif // !UNICODE


// Provide descriptive information for product feature: title and description.
// Returns the install level for the feature, or -1 if feature is unknown.
//   0 = feature is not available on this machine
//   1 = highest priority, feature installed if parent is installed
//  >1 = decreasing priority, feature installation based on InstallLevel property

UINT WINAPI MsiGetFeatureInfoA(
	__in                             MSIHANDLE   hProduct,      // product handle obtained from MsiOpenProduct
	__in                             LPCSTR    szFeature,     // feature name
	__out_opt                        LPDWORD     lpAttributes,  // attribute flags for the feature, using INSTALLFEATUREATTRIBUTE
	__out_ecount_opt(*pcchTitleBuf)  LPSTR     lpTitleBuf,    // returned localized name, NULL if not desired
	__inout_opt                      LPDWORD     pcchTitleBuf,  // in/out buffer character count
	__out_ecount_opt(*pcchHelpBuf)   LPSTR     lpHelpBuf,     // returned description, NULL if not desired
	__inout_opt                      LPDWORD     pcchHelpBuf);  // in/out buffer character count
UINT WINAPI MsiGetFeatureInfoW(
	__in                             MSIHANDLE   hProduct,      // product handle obtained from MsiOpenProduct
	__in                             LPCWSTR    szFeature,     // feature name
	__out_opt                        LPDWORD     lpAttributes,  // attribute flags for the feature, using INSTALLFEATUREATTRIBUTE
	__out_ecount_opt(*pcchTitleBuf)  LPWSTR     lpTitleBuf,    // returned localized name, NULL if not desired
	__inout_opt                      LPDWORD     pcchTitleBuf,  // in/out buffer character count
	__out_ecount_opt(*pcchHelpBuf)   LPWSTR     lpHelpBuf,     // returned description, NULL if not desired
	__inout_opt                      LPDWORD     pcchHelpBuf);  // in/out buffer character count
#ifdef UNICODE
#define MsiGetFeatureInfo  MsiGetFeatureInfoW
#else
#define MsiGetFeatureInfo  MsiGetFeatureInfoA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Functions to access or install missing components and files.
// These should be used as a last resort.
// --------------------------------------------------------------------------

// Install a component unexpectedly missing, provided only for error recovery
// This would typically occur due to failue to establish feature availability
// The product feature having the smallest incremental cost is installed

UINT WINAPI MsiInstallMissingComponentA(
	__in LPCSTR      szProduct,        // product code
	__in LPCSTR      szComponent,      // component Id, string GUID
	__in INSTALLSTATE eInstallState);    // local/source/default, absent invalid
UINT WINAPI MsiInstallMissingComponentW(
	__in LPCWSTR      szProduct,        // product code
	__in LPCWSTR      szComponent,      // component Id, string GUID
	__in INSTALLSTATE eInstallState);    // local/source/default, absent invalid
#ifdef UNICODE
#define MsiInstallMissingComponent  MsiInstallMissingComponentW
#else
#define MsiInstallMissingComponent  MsiInstallMissingComponentA
#endif // !UNICODE

// Install a file unexpectedly missing, provided only for error recovery
// This would typically occur due to failue to establish feature availability
// The missing component is determined from the product's File table, then
// the product feature having the smallest incremental cost is installed

UINT WINAPI MsiInstallMissingFileA(
	__in LPCSTR      szProduct,        // product code
	__in LPCSTR      szFile);          // file name, without path
UINT WINAPI MsiInstallMissingFileW(
	__in LPCWSTR      szProduct,        // product code
	__in LPCWSTR      szFile);          // file name, without path
#ifdef UNICODE
#define MsiInstallMissingFile  MsiInstallMissingFileW
#else
#define MsiInstallMissingFile  MsiInstallMissingFileA
#endif // !UNICODE

// Return full path to an installed component without a product code
// This function attempts to determine the product using MsiGetProductCode
// but is not guaranteed to find the correct product for the caller.
// MsiGetComponentPath should always be called when possible.

INSTALLSTATE WINAPI MsiLocateComponentA(
	__in LPCSTR szComponent,                         // component Id, string GUID
	__out_ecount_opt(*pcchBuf)  LPSTR  lpPathBuf,    // returned path
	__inout_opt                 LPDWORD  pcchBuf);     // in/out buffer character count
INSTALLSTATE WINAPI MsiLocateComponentW(
	__in LPCWSTR szComponent,                         // component Id, string GUID
	__out_ecount_opt(*pcchBuf)  LPWSTR  lpPathBuf,    // returned path
	__inout_opt                 LPDWORD  pcchBuf);     // in/out buffer character count
#ifdef UNICODE
#define MsiLocateComponent  MsiLocateComponentW
#else
#define MsiLocateComponent  MsiLocateComponentA
#endif // !UNICODE

#if (_WIN32_MSI >=  110)

// --------------------------------------------------------------------------
// Functions used to manage the list of valid sources.
// --------------------------------------------------------------------------

// Opens the list of sources for the specified user's install of the product
// and removes all network sources from the list. A NULL or empty value for
// the user name indicates the per-machine install.

UINT WINAPI MsiSourceListClearAllA(
	__in LPCSTR szProduct,          // product code
	__in_opt LPCSTR szUserName,     // user name or NULL/empty for per-machine
	__reserved  DWORD    dwReserved); // reserved - must be 0
UINT WINAPI MsiSourceListClearAllW(
	__in LPCWSTR szProduct,          // product code
	__in_opt LPCWSTR szUserName,     // user name or NULL/empty for per-machine
	__reserved  DWORD    dwReserved); // reserved - must be 0
#ifdef UNICODE
#define MsiSourceListClearAll  MsiSourceListClearAllW
#else
#define MsiSourceListClearAll  MsiSourceListClearAllA
#endif // !UNICODE

// Opens the list of sources for the specified user's install of the product
// and adds the provided source as a new network source. A NULL or empty 
// value for the user name indicates the per-machine install.

UINT WINAPI MsiSourceListAddSourceA(
	__in LPCSTR szProduct,          // product code
	__in_opt LPCSTR szUserName,     // user name or NULL/empty for per-machine
	__reserved DWORD    dwReserved,   // reserved - must be 0
	__in LPCSTR szSource);          // new source
UINT WINAPI MsiSourceListAddSourceW(
	__in LPCWSTR szProduct,          // product code
	__in_opt LPCWSTR szUserName,     // user name or NULL/empty for per-machine
	__reserved DWORD    dwReserved,   // reserved - must be 0
	__in LPCWSTR szSource);          // new source
#ifdef UNICODE
#define MsiSourceListAddSource  MsiSourceListAddSourceW
#else
#define MsiSourceListAddSource  MsiSourceListAddSourceA
#endif // !UNICODE

// Forces the installer to reevaluate the list of sources the next time that
// the specified product needs a source.

UINT WINAPI MsiSourceListForceResolutionA(
	__in LPCSTR szProduct,          // product code
	__in_opt LPCSTR szUserName,     // user name or NULL/empty for per-machine
	__reserved DWORD    dwReserved);  // reserved - must be 0
UINT WINAPI MsiSourceListForceResolutionW(
	__in LPCWSTR szProduct,          // product code
	__in_opt LPCWSTR szUserName,     // user name or NULL/empty for per-machine
	__reserved DWORD    dwReserved);  // reserved - must be 0
#ifdef UNICODE
#define MsiSourceListForceResolution  MsiSourceListForceResolutionW
#else
#define MsiSourceListForceResolution  MsiSourceListForceResolutionA
#endif // !UNICODE
	
#endif //(_WIN32_MSI >=  110)

#if (_WIN32_MSI >= 300)
// Adds a source or moves a source within the list of sources for the 
// specified product or patch instance. The source can be network/url type.

UINT WINAPI MsiSourceListAddSourceExA(
	__in LPCSTR szProductCodeOrPatchCode,// Source will be added to this product or patch
	__in_opt LPCSTR szUserSid,           // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,      // Context of this product/patch instance
	__in DWORD dwOptions,                  // Additional qualifiers
	__in LPCSTR szSource,                // source to be added/re-ordered
	__in DWORD dwIndex);                   // new index for the source
UINT WINAPI MsiSourceListAddSourceExW(
	__in LPCWSTR szProductCodeOrPatchCode,// Source will be added to this product or patch
	__in_opt LPCWSTR szUserSid,           // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,      // Context of this product/patch instance
	__in DWORD dwOptions,                  // Additional qualifiers
	__in LPCWSTR szSource,                // source to be added/re-ordered
	__in DWORD dwIndex);                   // new index for the source
#ifdef UNICODE
#define MsiSourceListAddSourceEx  MsiSourceListAddSourceExW
#else
#define MsiSourceListAddSourceEx  MsiSourceListAddSourceExA
#endif // !UNICODE

// Add or update a media source for the specified product or patch instance

UINT WINAPI MsiSourceListAddMediaDiskA(
	__in LPCSTR szProductCodeOrPatchCode,// Disk will be added to this product or patch
	__in_opt LPCSTR szUserSid,           // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,      // Context of this product/patch instance
	__in DWORD dwOptions,                  // Additional qualifiers
	__in DWORD dwDiskId,                   // ID of the disk to be added/updated
	__in_opt LPCSTR szVolumeLabel,       // Volume Label of the disk
	__in_opt LPCSTR szDiskPrompt);       // Disk Prompt of the disk
UINT WINAPI MsiSourceListAddMediaDiskW(
	__in LPCWSTR szProductCodeOrPatchCode,// Disk will be added to this product or patch
	__in_opt LPCWSTR szUserSid,           // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,      // Context of this product/patch instance
	__in DWORD dwOptions,                  // Additional qualifiers
	__in DWORD dwDiskId,                   // ID of the disk to be added/updated
	__in_opt LPCWSTR szVolumeLabel,       // Volume Label of the disk
	__in_opt LPCWSTR szDiskPrompt);       // Disk Prompt of the disk
#ifdef UNICODE
#define MsiSourceListAddMediaDisk  MsiSourceListAddMediaDiskW
#else
#define MsiSourceListAddMediaDisk  MsiSourceListAddMediaDiskA
#endif // !UNICODE

// Remove an existing source for the specified product or patch instance

UINT WINAPI MsiSourceListClearSourceA(
	__in LPCSTR szProductCodeOrPatchCode, // Source will be cleared for this product or patch
	__in_opt LPCSTR szUserSid,            // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,       // Context of this product/patch instance
	__in DWORD dwOptions,                   // Additional qualifiers
	__in LPCSTR szSource);                // source to be removed
UINT WINAPI MsiSourceListClearSourceW(
	__in LPCWSTR szProductCodeOrPatchCode, // Source will be cleared for this product or patch
	__in_opt LPCWSTR szUserSid,            // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,       // Context of this product/patch instance
	__in DWORD dwOptions,                   // Additional qualifiers
	__in LPCWSTR szSource);                // source to be removed
#ifdef UNICODE
#define MsiSourceListClearSource  MsiSourceListClearSourceW
#else
#define MsiSourceListClearSource  MsiSourceListClearSourceA
#endif // !UNICODE

// Remove an existing registered disk under the media source for the specified product or
// patch instance

UINT WINAPI MsiSourceListClearMediaDiskA(
	__in LPCSTR szProductCodeOrPatchCode, // Disk will be cleared for this product or patch
	__in_opt LPCSTR szUserSid,            // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,       // Context of this product/patch instance
	__in DWORD dwOptions,                   // Additional qualifiers
	__in DWORD dwDiskId);                   // DiskID to be removed
UINT WINAPI MsiSourceListClearMediaDiskW(
	__in LPCWSTR szProductCodeOrPatchCode, // Disk will be cleared for this product or patch
	__in_opt LPCWSTR szUserSid,            // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,       // Context of this product/patch instance
	__in DWORD dwOptions,                   // Additional qualifiers
	__in DWORD dwDiskId);                   // DiskID to be removed
#ifdef UNICODE
#define MsiSourceListClearMediaDisk  MsiSourceListClearMediaDiskW
#else
#define MsiSourceListClearMediaDisk  MsiSourceListClearMediaDiskA
#endif // !UNICODE

// Remove all existing sources of the given source type for the specified product or patch
// instance

UINT WINAPI MsiSourceListClearAllExA(
	__in LPCSTR szProductCodeOrPatchCode, // All sources will be cleared for this product or patch
	__in_opt LPCSTR szUserSid,            // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,       // Context of this product/patch instance
	__in DWORD dwOptions);                  // Additional qualifiers
UINT WINAPI MsiSourceListClearAllExW(
	__in LPCWSTR szProductCodeOrPatchCode, // All sources will be cleared for this product or patch
	__in_opt LPCWSTR szUserSid,            // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,       // Context of this product/patch instance
	__in DWORD dwOptions);                  // Additional qualifiers
#ifdef UNICODE
#define MsiSourceListClearAllEx  MsiSourceListClearAllExW
#else
#define MsiSourceListClearAllEx  MsiSourceListClearAllExA
#endif // !UNICODE

// Forces the installer to reevaluate the list of sources the next time that
// the specified product or patch instance needs a source.

UINT WINAPI MsiSourceListForceResolutionExA(
	__in LPCSTR szProductCodeOrPatchCode,  // Source Resolution will be forced for this product or patch
	__in_opt LPCSTR szUserSid,             // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,        // Context of this product/patch instance
	__in DWORD dwOptions);                   // Additional qualifiers
UINT WINAPI MsiSourceListForceResolutionExW(
	__in LPCWSTR szProductCodeOrPatchCode,  // Source Resolution will be forced for this product or patch
	__in_opt LPCWSTR szUserSid,             // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,        // Context of this product/patch instance
	__in DWORD dwOptions);                   // Additional qualifiers
#ifdef UNICODE
#define MsiSourceListForceResolutionEx  MsiSourceListForceResolutionExW
#else
#define MsiSourceListForceResolutionEx  MsiSourceListForceResolutionExA
#endif // !UNICODE

// Set the source list property to the provided value for the specified product or patch instance

UINT WINAPI MsiSourceListSetInfoA(
	__in LPCSTR szProductCodeOrPatchCode, // Source Info will be set for this product or patch
	__in_opt LPCSTR szUserSid,            // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,       // Context of this product/patch instance
	__in DWORD dwOptions,                   // Additional qualifiers
	__in LPCSTR szProperty,               // Property being set/modified
	__in LPCSTR szValue);                 // Value to be set
UINT WINAPI MsiSourceListSetInfoW(
	__in LPCWSTR szProductCodeOrPatchCode, // Source Info will be set for this product or patch
	__in_opt LPCWSTR szUserSid,            // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,       // Context of this product/patch instance
	__in DWORD dwOptions,                   // Additional qualifiers
	__in LPCWSTR szProperty,               // Property being set/modified
	__in LPCWSTR szValue);                 // Value to be set
#ifdef UNICODE
#define MsiSourceListSetInfo  MsiSourceListSetInfoW
#else
#define MsiSourceListSetInfo  MsiSourceListSetInfoA
#endif // !UNICODE

// Query the given source list property for the specified product or patch instance

UINT WINAPI MsiSourceListGetInfoA(
	__in LPCSTR szProductCodeOrPatchCode,        // Source Info will be queried for this produt or patch
	__in_opt LPCSTR szUserSid,                   // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,              // Context of this product/patch instance
	__in DWORD dwOptions,                          // Additional qualifiers
	__in LPCSTR szProperty,                      // Property being queried
	__out_ecount_opt(*pcchValue)  LPSTR szValue, // Buffer to get the value
	__inout_opt LPDWORD pcchValue);                // in/out character count of szValue
UINT WINAPI MsiSourceListGetInfoW(
	__in LPCWSTR szProductCodeOrPatchCode,        // Source Info will be queried for this produt or patch
	__in_opt LPCWSTR szUserSid,                   // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,              // Context of this product/patch instance
	__in DWORD dwOptions,                          // Additional qualifiers
	__in LPCWSTR szProperty,                      // Property being queried
	__out_ecount_opt(*pcchValue)  LPWSTR szValue, // Buffer to get the value
	__inout_opt LPDWORD pcchValue);                // in/out character count of szValue
#ifdef UNICODE
#define MsiSourceListGetInfo  MsiSourceListGetInfoW
#else
#define MsiSourceListGetInfo  MsiSourceListGetInfoA
#endif // !UNICODE

// Enumerate all sources for the specified product or patch instance

UINT WINAPI MsiSourceListEnumSourcesA(
	__in LPCSTR szProductCodeOrPatchCode,             // Sources will be enumerated for this product or patch
	__in_opt LPCSTR szUserSid,                        // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,                   // Context of this product/patch instance
	__in DWORD dwOptions,                               // Additional qualifiers
	__in DWORD dwIndex,                                 // Index value for enumeration
	__out_ecount_opt(*pcchSource)  LPSTR szSource,    // Buffer to receive the enumerated source
	__inout_opt                    LPDWORD pcchSource); // in/out character count of szSource
UINT WINAPI MsiSourceListEnumSourcesW(
	__in LPCWSTR szProductCodeOrPatchCode,             // Sources will be enumerated for this product or patch
	__in_opt LPCWSTR szUserSid,                        // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,                   // Context of this product/patch instance
	__in DWORD dwOptions,                               // Additional qualifiers
	__in DWORD dwIndex,                                 // Index value for enumeration
	__out_ecount_opt(*pcchSource)  LPWSTR szSource,    // Buffer to receive the enumerated source
	__inout_opt                    LPDWORD pcchSource); // in/out character count of szSource
#ifdef UNICODE
#define MsiSourceListEnumSources  MsiSourceListEnumSourcesW
#else
#define MsiSourceListEnumSources  MsiSourceListEnumSourcesA
#endif // !UNICODE

// Enumerate all registered media disks for the specified product or patch instance

UINT WINAPI MsiSourceListEnumMediaDisksA(
	__in LPCSTR szProductCodeOrPatchCode,                      // Disks will be enumerated for this product or patch
	__in_opt LPCSTR szUserSid,                                 // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,                            // Context of this product/patch instance
	__in DWORD dwOptions,                                        // Additional qualifiers
	__in DWORD dwIndex,                                          // Index value for enumeration
	__out_opt LPDWORD pdwDiskId,                                 // ID of the disk being enumerated
	__out_ecount_opt(*pcchVolumeLabel)  LPSTR szVolumeLabel,   // Volume label of the disk being enumerated
	__inout_opt                         LPDWORD pcchVolumeLabel, // in/out character count of szVolumeLabel
	__out_ecount_opt(*pcchDiskPrompt)   LPSTR szDiskPrompt,    // DiskPrompt of the disk being enumerated
	__inout_opt                         LPDWORD pcchDiskPrompt); // in/out character count of szDiskPrompt
UINT WINAPI MsiSourceListEnumMediaDisksW(
	__in LPCWSTR szProductCodeOrPatchCode,                      // Disks will be enumerated for this product or patch
	__in_opt LPCWSTR szUserSid,                                 // Account of this product/patch instance
	__in MSIINSTALLCONTEXT dwContext,                            // Context of this product/patch instance
	__in DWORD dwOptions,                                        // Additional qualifiers
	__in DWORD dwIndex,                                          // Index value for enumeration
	__out_opt LPDWORD pdwDiskId,                                 // ID of the disk being enumerated
	__out_ecount_opt(*pcchVolumeLabel)  LPWSTR szVolumeLabel,   // Volume label of the disk being enumerated
	__inout_opt                         LPDWORD pcchVolumeLabel, // in/out character count of szVolumeLabel
	__out_ecount_opt(*pcchDiskPrompt)   LPWSTR szDiskPrompt,    // DiskPrompt of the disk being enumerated
	__inout_opt                         LPDWORD pcchDiskPrompt); // in/out character count of szDiskPrompt
#ifdef UNICODE
#define MsiSourceListEnumMediaDisks  MsiSourceListEnumMediaDisksW
#else
#define MsiSourceListEnumMediaDisks  MsiSourceListEnumMediaDisksA
#endif // !UNICODE

#endif //(_WIN32_MSI >= 300)

// --------------------------------------------------------------------------
// Utility functions
// --------------------------------------------------------------------------

// Give the version string and language for a specified file

UINT WINAPI MsiGetFileVersionA(
	__in                               LPCSTR    szFilePath,       // path to the file
	__out_ecount_opt(*pcchVersionBuf)  LPSTR     lpVersionBuf,     // returned version string
	__inout_opt                        LPDWORD     pcchVersionBuf,   // in/out buffer byte count
	__out_ecount_opt(*pcchLangBuf)     LPSTR     lpLangBuf,        // returned language string
	__inout_opt                        LPDWORD     pcchLangBuf);     // in/out buffer byte count
UINT WINAPI MsiGetFileVersionW(
	__in                               LPCWSTR    szFilePath,       // path to the file
	__out_ecount_opt(*pcchVersionBuf)  LPWSTR     lpVersionBuf,     // returned version string
	__inout_opt                        LPDWORD     pcchVersionBuf,   // in/out buffer byte count
	__out_ecount_opt(*pcchLangBuf)     LPWSTR     lpLangBuf,        // returned language string
	__inout_opt                        LPDWORD     pcchLangBuf);     // in/out buffer byte count
#ifdef UNICODE
#define MsiGetFileVersion  MsiGetFileVersionW
#else
#define MsiGetFileVersion  MsiGetFileVersionA
#endif // !UNICODE


#if (_WIN32_MSI >=  150)

UINT WINAPI MsiGetFileHashA(
	__in LPCSTR         szFilePath,  // path to the file
	__in DWORD            dwOptions,   // options
	__inout PMSIFILEHASHINFO pHash);     // returned file hash info
UINT WINAPI MsiGetFileHashW(
	__in LPCWSTR         szFilePath,  // path to the file
	__in DWORD            dwOptions,   // options
	__inout PMSIFILEHASHINFO pHash);     // returned file hash info
#ifdef UNICODE
#define MsiGetFileHash  MsiGetFileHashW
#else
#define MsiGetFileHash  MsiGetFileHashA
#endif // !UNICODE

#endif //(_WIN32_MSI >=  150)

#if (_WIN32_MSI >= 150)
#ifndef _MSI_NO_CRYPTO

HRESULT WINAPI MsiGetFileSignatureInformationA(
	__in LPCSTR szSignedObjectPath,                     // path to the signed object
	__in DWORD dwFlags,                                   // special extra error case flags
	__deref_out PCCERT_CONTEXT  *ppcCertContext,          // returned signer cert context
	__out_bcount_opt(*pcbHashData) LPBYTE   pbHashData,   // returned hash buffer, NULL if not desired
	__inout_opt LPDWORD pcbHashData);                     // in/out buffer byte count
HRESULT WINAPI MsiGetFileSignatureInformationW(
	__in LPCWSTR szSignedObjectPath,                     // path to the signed object
	__in DWORD dwFlags,                                   // special extra error case flags
	__deref_out PCCERT_CONTEXT  *ppcCertContext,          // returned signer cert context
	__out_bcount_opt(*pcbHashData) LPBYTE   pbHashData,   // returned hash buffer, NULL if not desired
	__inout_opt LPDWORD pcbHashData);                     // in/out buffer byte count
#ifdef UNICODE
#define MsiGetFileSignatureInformation  MsiGetFileSignatureInformationW
#else
#define MsiGetFileSignatureInformation  MsiGetFileSignatureInformationA
#endif // !UNICODE

// By default, when only requesting the certificate context, an invalid hash
// in the digital signature is not a fatal error.  Set this flag in the dwFlags
// parameter to make the TRUST_E_BAD_DIGEST error fatal.
#define MSI_INVALID_HASH_IS_FATAL 0x1

#endif// _MSI_NO_CRYPTO
#endif //(_WIN32_MSI >= 150)

#if (_WIN32_MSI >=  110)

// examine a shortcut, and retrieve its descriptor information 
// if available.

UINT WINAPI MsiGetShortcutTargetA(
	__in                                   LPCSTR    szShortcutPath,    // full file path for the shortcut
	__out_ecount_opt(MAX_GUID_CHARS+1)     LPSTR     szProductCode,     // returned product code   - GUID
	__out_ecount_opt(MAX_FEATURE_CHARS+1)  LPSTR     szFeatureId,       // returned Feature Id.
	__out_ecount_opt(MAX_GUID_CHARS+1)     LPSTR     szComponentCode);  // returned component code - GUID
UINT WINAPI MsiGetShortcutTargetW(
	__in                                   LPCWSTR    szShortcutPath,    // full file path for the shortcut
	__out_ecount_opt(MAX_GUID_CHARS+1)     LPWSTR     szProductCode,     // returned product code   - GUID
	__out_ecount_opt(MAX_FEATURE_CHARS+1)  LPWSTR     szFeatureId,       // returned Feature Id.
	__out_ecount_opt(MAX_GUID_CHARS+1)     LPWSTR     szComponentCode);  // returned component code - GUID
#ifdef UNICODE
#define MsiGetShortcutTarget  MsiGetShortcutTargetW
#else
#define MsiGetShortcutTarget  MsiGetShortcutTargetA
#endif // !UNICODE

#endif //(_WIN32_MSI >=  110)

#if (_WIN32_MSI >=  110)

// checks to see if a product is managed
// checks per-machine if called from system context, per-user if from
// user context
UINT WINAPI MsiIsProductElevatedA(
	__in LPCSTR szProduct,  // product code
	__out BOOL *pfElevated);  // result   
// checks to see if a product is managed
// checks per-machine if called from system context, per-user if from
// user context
UINT WINAPI MsiIsProductElevatedW(
	__in LPCWSTR szProduct,  // product code
	__out BOOL *pfElevated);  // result   
#ifdef UNICODE
#define MsiIsProductElevated  MsiIsProductElevatedW
#else
#define MsiIsProductElevated  MsiIsProductElevatedA
#endif // !UNICODE

#endif //(_WIN32_MSI >=  110)


#if (_WIN32_MSI >= 310)

// Caller notifies us of a user who's been moved and results in a sid change.

UINT WINAPI MsiNotifySidChangeA(__in LPCSTR pOldSid,
                                __in LPCSTR pNewSid);
UINT WINAPI MsiNotifySidChangeW(__in LPCWSTR pOldSid,
                                __in LPCWSTR pNewSid);
#ifdef UNICODE
#define MsiNotifySidChange  MsiNotifySidChangeW
#else
#define MsiNotifySidChange  MsiNotifySidChangeA
#endif // !UNICODE

#else // _WIN32_MSI < 310


#endif // (_WIN32_MSI >= 310)


#if (_WIN32_MSI >=  450)

// Start a multi package transaction
UINT WINAPI MsiBeginTransactionA(
	__in LPCSTR szName,                         // A name to identify the transaction
	__in DWORD dwTransactionAttributes,           // Attributes to control the nature of the transaction
	__out MSIHANDLE* phTransactionHandle,         // Transaction handle
	__out HANDLE* phChangeOfOwnerEvent);          // Change Of Owner Event handle
// Start a multi package transaction
UINT WINAPI MsiBeginTransactionW(
	__in LPCWSTR szName,                         // A name to identify the transaction
	__in DWORD dwTransactionAttributes,           // Attributes to control the nature of the transaction
	__out MSIHANDLE* phTransactionHandle,         // Transaction handle
	__out HANDLE* phChangeOfOwnerEvent);          // Change Of Owner Event handle
#ifdef UNICODE
#define MsiBeginTransaction  MsiBeginTransactionW
#else
#define MsiBeginTransaction  MsiBeginTransactionA
#endif // !UNICODE

// End a multi package transaction
UINT WINAPI MsiEndTransaction(
	__in DWORD dwTransactionState);      // Flags to indicate how to end a transaction

// Join an already created multi package transaction
UINT WINAPI MsiJoinTransaction(
	__in MSIHANDLE hTransactionHandle,   //Transaction handle returned by MsiBeginTransaction
	__in DWORD dwTransactionAttributes,  //Transaction attributes
	__out HANDLE* phChangeOfOwnerEvent); //Change Of Owner Event handle


#endif // #if (_WIN32_MSI >= 450)


#ifdef __cplusplus
}
#endif

// --------------------------------------------------------------------------
// Error codes for installer access functions
// --------------------------------------------------------------------------

#ifndef ERROR_INSTALL_FAILURE
#define ERROR_INSTALL_USEREXIT      1602L  // User cancel installation.
#define ERROR_INSTALL_FAILURE       1603L  // Fatal error during installation.
#define ERROR_INSTALL_SUSPEND       1604L  // Installation suspended, incomplete.
// LOCALIZE BEGIN:
#define ERROR_UNKNOWN_PRODUCT       1605L  // This action is only valid for products that are currently installed.
// LOCALIZE END
#define ERROR_UNKNOWN_FEATURE       1606L  // Feature ID not registered.
#define ERROR_UNKNOWN_COMPONENT     1607L  // Component ID not registered.
#define ERROR_UNKNOWN_PROPERTY      1608L  // Unknown property.
#define ERROR_INVALID_HANDLE_STATE  1609L  // Handle is in an invalid state.
// LOCALIZE BEGIN:
#define ERROR_BAD_CONFIGURATION     1610L  // The configuration data for this product is corrupt.  Contact your support personnel.
// LOCALIZE END:
#define ERROR_INDEX_ABSENT          1611L  // Component qualifier not present.
// LOCALIZE BEGIN:
#define ERROR_INSTALL_SOURCE_ABSENT 1612L  // The installation source for this product is not available.  Verify that the source exists and that you can access it.
// LOCALIZE END
#define ERROR_PRODUCT_UNINSTALLED   1614L  // Product is uninstalled.
#define ERROR_BAD_QUERY_SYNTAX      1615L  // SQL query syntax invalid or unsupported.
#define ERROR_INVALID_FIELD         1616L  // Record field does not exist.
#endif

// LOCALIZE BEGIN:
#ifndef ERROR_INSTALL_SERVICE_FAILURE
#define ERROR_INSTALL_SERVICE_FAILURE      1601L // The Windows Installer Service could not be accessed. This can occur if the Windows Installer is not correctly installed. Contact your support personnel for assistance.
#define ERROR_INSTALL_PACKAGE_VERSION      1613L // This installation package cannot be installed by the Windows Installer service.  You must install a Windows service pack that contains a newer version of the Windows Installer service.
#define ERROR_INSTALL_ALREADY_RUNNING      1618L // Another program is being installed. Please wait until that installation is complete, and then try installing this software again.
#define ERROR_INSTALL_PACKAGE_OPEN_FAILED  1619L // This installation package could not be opened.  Verify that the package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer package.
#define ERROR_INSTALL_PACKAGE_INVALID      1620L // This installation package could not be opened.  Contact the application vendor to verify that this is a valid Windows Installer package.
#define ERROR_INSTALL_UI_FAILURE           1621L // There was an error starting the Windows Installer service user interface.  Contact your support personnel.
#define ERROR_INSTALL_LOG_FAILURE          1622L // Error opening installation log file.  Verify that the specified log file location exists and is writable.
#define ERROR_INSTALL_LANGUAGE_UNSUPPORTED 1623L // This language of this installation package is not supported by your system.
#define ERROR_INSTALL_PACKAGE_REJECTED     1625L // The system administrator has set policies to prevent this installation.
// LOCALIZE END

#define ERROR_FUNCTION_NOT_CALLED          1626L // Function could not be executed.
#define ERROR_FUNCTION_FAILED              1627L // Function failed during execution.
#define ERROR_INVALID_TABLE                1628L // Invalid or unknown table specified.
#define ERROR_DATATYPE_MISMATCH            1629L // Data supplied is of wrong type.
#define ERROR_UNSUPPORTED_TYPE             1630L // Data of this type is not supported.
// LOCALIZE BEGIN:
#define ERROR_CREATE_FAILED                1631L // The Windows Installer service failed to start.  Contact your support personnel.
// LOCALIZE END:
#endif

// LOCALIZE BEGIN:
#ifndef ERROR_INSTALL_TEMP_UNWRITABLE      
#define ERROR_INSTALL_TEMP_UNWRITABLE      1632L // The Temp folder is on a drive that is full or is inaccessible. Free up space on the drive or verify that you have write permission on the Temp folder.
#endif

#ifndef ERROR_INSTALL_PLATFORM_UNSUPPORTED
#define ERROR_INSTALL_PLATFORM_UNSUPPORTED 1633L // This installation package is not supported by this processor type. Contact your product vendor.
#endif
// LOCALIZE END

#ifndef ERROR_INSTALL_NOTUSED
#define ERROR_INSTALL_NOTUSED              1634L // Component not used on this machine
#endif

// LOCALIZE BEGIN:
#ifndef ERROR_INSTALL_TRANSFORM_FAILURE
#define ERROR_INSTALL_TRANSFORM_FAILURE     1624L // Error applying transforms.  Verify that the specified transform paths are valid.
#endif

#ifndef ERROR_PATCH_PACKAGE_OPEN_FAILED
#define ERROR_PATCH_PACKAGE_OPEN_FAILED    1635L // This patch package could not be opened.  Verify that the patch package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer patch package.
#define ERROR_PATCH_PACKAGE_INVALID        1636L // This patch package could not be opened.  Contact the application vendor to verify that this is a valid Windows Installer patch package.
#define ERROR_PATCH_PACKAGE_UNSUPPORTED    1637L // This patch package cannot be processed by the Windows Installer service.  You must install a Windows service pack that contains a newer version of the Windows Installer service.
#endif

#ifndef ERROR_PRODUCT_VERSION
#define ERROR_PRODUCT_VERSION              1638L // Another version of this product is already installed.  Installation of this version cannot continue.  To configure or remove the existing version of this product, use Add/Remove Programs on the Control Panel.
#endif

#ifndef ERROR_INVALID_COMMAND_LINE
#define ERROR_INVALID_COMMAND_LINE         1639L // Invalid command line argument.  Consult the Windows Installer SDK for detailed command line help.
#endif

// The following three error codes are not returned from MSI version 1.0

#ifndef ERROR_INSTALL_REMOTE_DISALLOWED
#define ERROR_INSTALL_REMOTE_DISALLOWED    1640L // Only administrators have permission to add, remove, or configure server software during a Terminal services remote session. If you want to install or configure software on the server, contact your network administrator.
#endif

// LOCALIZE END

#ifndef ERROR_SUCCESS_REBOOT_INITIATED
#define ERROR_SUCCESS_REBOOT_INITIATED     1641L // The requested operation completed successfully.  The system will be restarted so the changes can take effect.
#endif

// LOCALIZE BEGIN:
#ifndef ERROR_PATCH_TARGET_NOT_FOUND
#define ERROR_PATCH_TARGET_NOT_FOUND       1642L // The upgrade patch cannot be installed by the Windows Installer service because the program to be upgraded may be missing, or the upgrade patch may update a different version of the program. Verify that the program to be upgraded exists on your computer and that you have the correct upgrade patch.
#endif
// LOCALIZE END

// The following two error codes are not returned from MSI version 1.0, 1.1. or 1.2

// LOCALIZE BEGIN:
#ifndef ERROR_PATCH_PACKAGE_REJECTED
#define ERROR_PATCH_PACKAGE_REJECTED       1643L // The patch package is not permitted by software restriction policy.
#endif

#ifndef ERROR_INSTALL_TRANSFORM_REJECTED
#define ERROR_INSTALL_TRANSFORM_REJECTED   1644L // One or more customizations are not permitted by software restriction policy.
#endif
// LOCALIZE END

// The following error code is returned only from MSI post version 2.0

// LOCALIZE BEGIN:
#ifndef ERROR_INSTALL_REMOTE_PROHIBITED
#define ERROR_INSTALL_REMOTE_PROHIBITED    1645L // The Windows Installer does not permit installation from a Remote Desktop Connection.
#endif
// LOCALIZE END

// The following error codes are returned from MSI 3.0 and later.

// LOCALIZE BEGIN:
#ifndef ERROR_PATCH_REMOVAL_UNSUPPORTED
#define ERROR_PATCH_REMOVAL_UNSUPPORTED  1646L // Uninstallation of the patch package is not supported.
#endif
// LOCALIZE END

// LOCALIZE BEGIN:
#ifndef ERROR_UNKNOWN_PATCH
#define ERROR_UNKNOWN_PATCH                1647L // The patch is not applied to this product.
#endif
// LOCALIZE END

// LOCALIZE BEGIN:
#ifndef ERROR_PATCH_NO_SEQUENCE
#define ERROR_PATCH_NO_SEQUENCE            1648L // No valid sequence could be found for the set of patches.
#endif
// LOCALIZE END

// LOCALIZE BEGIN:
#ifndef ERROR_PATCH_REMOVAL_DISALLOWED
#define ERROR_PATCH_REMOVAL_DISALLOWED      1649L // Patch removal was disallowed by policy.
#endif
// LOCALIZE END

// LOCALIZE BEGIN:
#ifndef ERROR_INVALID_PATCH_XML
#define ERROR_INVALID_PATCH_XML             1650L // The XML patch data is invalid.
#endif
// LOCALIZE END

// LOCALIZE BEGIN:
#ifndef ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT
#define ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT 1651L // Windows Installer does not permit patching of managed advertised products. At least one feature of the product must be installed before applying the patch.
#endif
// LOCALIZE END

// The following error codes are returned from MSI 4.0 and later

// LOCALIZE BEGIN:
#ifndef ERROR_INSTALL_SERVICE_SAFEBOOT
#define ERROR_INSTALL_SERVICE_SAFEBOOT     1652L // The Windows Installer service is not accessible in Safe Mode. Please try again when your computer is not in Safe Mode or you can use System Restore to return your machine to a previous good state.
#endif
// LOCALIZE END

// The following error codes are returned from MSI 4.5 and later

// LOCALIZE BEGIN:
#ifndef ERROR_ROLLBACK_DISABLED
#define ERROR_ROLLBACK_DISABLED     1653L // Multi-package transaction cannot be run when rollback is disabled.
#endif
// LOCALIZE END


#endif // _MSI_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\MsiDefs.h ===
//--------------------------------------------------------------------------
//
//  Microsoft Windows - Windows Installer (MSI)
//
//  Copyright (C) Microsoft Corporation. All rights reserved.
//
//--------------------------------------------------------------------------

#ifndef __MSIDEFS
#define __MSIDEFS

#ifndef NTDDI_WIN2K
#define NTDDI_WIN2K                         0x05000000
#endif
#ifndef NTDDI_WINXP
#define NTDDI_WINXP                         0x05010000
#endif
#ifndef NTDDI_WINXPSP2
#define NTDDI_WINXPSP2                      0x05010200
#endif
#ifndef NTDDI_WS03SP1
#define NTDDI_WS03SP1                       0x05020100
#endif
#ifndef NTDDI_VISTA
#define NTDDI_VISTA                         0x06000000
#endif
#ifndef NTDDI_VISTASP1
#define NTDDI_VISTASP1                      0x06000100
#endif
#ifndef NTDDI_WIN7
#define NTDDI_WIN7                          0x06010000
#endif

#ifndef _WIN32_MSI
#if (_WIN32_WINNT >= 0x0601 || (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_WIN7))
  #define _WIN32_MSI   500
#elif (_WIN32_WINNT >= 0x0600 || (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_VISTA))
  #if (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_VISTASP1)
    #define _WIN32_MSI   450
  #else
    #define _WIN32_MSI   400
  #endif 
#elif (_WIN32_WINNT >= 0x0501 || (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_WINXP))
  #if (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_WS03SP1)
    #define _WIN32_MSI   310
  #elif (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_WINXPSP2)
    #define _WIN32_MSI   300
  #else
    #define _WIN32_MSI   200
  #endif
#elif (_WIN32_WINNT >= 0x0500 || (defined(NTDDI_VERSION) && NTDDI_VERSION >= NTDDI_WIN2K))
  #define _WIN32_MSI   110
#else
  #define _WIN32_MSI   100
#endif //_WIN32_WINNT
#endif // !_WIN32_MSI

//__________________________________________________________________________
//
// INSTALLER PROPERTY DEFINITIONS
//__________________________________________________________________________

// Required properties: set in Property table
#define IPROPNAME_PRODUCTNAME      TEXT("ProductName")      // name registered for display
#define IPROPNAME_PRODUCTCODE      TEXT("ProductCode")      // unique string GUID for product
#define IPROPNAME_PRODUCTVERSION   TEXT("ProductVersion")   // string product version
#define IPROPNAME_INSTALLLANGUAGE  TEXT("ProductLanguage")  // install language of product, use to load resources        
#define IPROPNAME_MANUFACTURER     TEXT("Manufacturer")     // name of manufacturer

// Customization properties: set in Property table
#define IPROPNAME_UPGRADECODE      TEXT("UpgradeCode")      // unique string GUID for product family
#define IPROPNAME_PIDTEMPLATE      TEXT("PIDTemplate")      // drives Product ID processing
#define IPROPNAME_DISKPROMPT       TEXT("DiskPrompt")       // prompt for CD
#define IPROPNAME_LEFTUNIT         TEXT("LeftUnit")         // name of unit placed to left of number instead of right
#define IPROPNAME_ADMIN_PROPERTIES TEXT("AdminProperties")  // properties to stuff in admin package
#define IPROPNAME_DEFAULTUIFONT    TEXT("DefaultUIFont")    // the font used in the UI if no other font is specified
#define IPROPNAME_ALLOWEDPROPERTIES TEXT("SecureCustomProperties")
#define IPROPNAME_ENABLEUSERCONTROL TEXT("EnableUserControl") // allows user to specify any public property
#define IPROPNAME_HIDDEN_PROPERTIES TEXT("MsiHiddenProperties")  // properties that should not be dumped into the log file

// Customization properties: set on command-line or in Property table
#define IPROPNAME_USERNAME         TEXT("USERNAME")
#define IPROPNAME_COMPANYNAME      TEXT("COMPANYNAME")
#define IPROPNAME_PIDKEY           TEXT("PIDKEY")           // used with PIDTemplate to form ProductID
#define IPROPNAME_PATCH            TEXT("PATCH")            // patch package to apply - SET BY INSTALLER
#define IPROPNAME_MSIPATCHREMOVE   TEXT("MSIPATCHREMOVE")   // patch package to remove - SET BY INSTALLER
#define IPROPNAME_TARGETDIR        TEXT("TARGETDIR")        // target location - defaults to ROOTDRIVE
#define IPROPNAME_ACTION           TEXT("ACTION")           // top-level action to perform - default to INSTALL
#define IPROPNAME_LIMITUI          TEXT("LIMITUI")          // limit ui level to Basic
#define IPROPNAME_LOGACTION        TEXT("LOGACTION")        // log only these actions
#define IPROPNAME_ALLUSERS         TEXT("ALLUSERS")         // install for all users
#define IPROPNAME_INSTALLLEVEL     TEXT("INSTALLLEVEL")
#define IPROPNAME_REBOOT           TEXT("REBOOT")           // force or suppress reboot
#if (_WIN32_MSI >=  110)
#define IPROPNAME_REBOOTPROMPT     TEXT("REBOOTPROMPT")     // allow or suppress reboot prompt
#endif //(_WIN32_MSI >=  110)
#define IPROPNAME_EXECUTEMODE      TEXT("EXECUTEMODE")      // NONE or SCRIPT
#define IPROPVALUE_EXECUTEMODE_NONE TEXT("NONE")            // do not update system
#define IPROPVALUE_EXECUTEMODE_SCRIPT TEXT("SCRIPT")        // default - run script to update system
#define IPROPNAME_EXECUTEACTION    TEXT("EXECUTEACTION")    // run action on server side
#define IPROPNAME_SOURCELIST       TEXT("SOURCELIST")
#define IPROPNAME_ROOTDRIVE        TEXT("ROOTDRIVE")        // default drive to install - SET BY INSTALLER
#define IPROPNAME_TRANSFORMS       TEXT("TRANSFORMS")       // transforms to apply
#define IPROPNAME_TRANSFORMSATSOURCE TEXT("TRANSFORMSATSOURCE") // transforms can be found at source
#define IPROPNAME_TRANSFORMSSECURE   TEXT("TRANSFORMSSECURE")   // file transforms are secured
#define IPROPNAME_SEQUENCE         TEXT("SEQUENCE")         // sequence table to run with SEQUENCE action
#define IPROPNAME_SHORTFILENAMES   TEXT("SHORTFILENAMES")   // force short file names
#define IPROPNAME_PRIMARYFOLDER    TEXT("PRIMARYFOLDER")	   // Folder on the volume the author wants costing info for
#define IPROPNAME_AFTERREBOOT      TEXT("AFTERREBOOT")      // install is after a ForceReboot triggered reboot
#define IPROPNAME_NOCOMPANYNAME    TEXT("NOCOMPANYNAME")
#define IPROPNAME_NOUSERNAME       TEXT("NOUSERNAME")
#define IPROPNAME_DISABLEROLLBACK  TEXT("DISABLEROLLBACK")  // disable rollback for this install
#define IPROPNAME_AVAILABLEFREEREG TEXT("AVAILABLEFREEREG") // set up the free space in the registry before commencing the install
#define IPROPNAME_DISABLEADVTSHORTCUTS TEXT("DISABLEADVTSHORTCUTS") // disable creating darwin shortcuts even if supported
#define IPROPNAME_PATCHNEWPACKAGECODE TEXT("PATCHNEWPACKAGECODE")   // added to property table by patch transforms - used to update
																						  // PackageCode of admin packages when patching admin installs
#define IPROPNAME_PATCHNEWSUMMARYSUBJECT TEXT("PATCHNEWSUMMARYSUBJECT") // added to property table by patch transforms - used to update
																								// Subject summary info property of admin packages when patching admin installs
#define IPROPNAME_PATCHNEWSUMMARYCOMMENTS TEXT("PATCHNEWSUMMARYCOMMENTS") // added to property table by patch transforms - used to update
																								  // Comments summary info property of admin packages when patching admin installs
#define IPROPNAME_PRODUCTLANGUAGE  TEXT("PRODUCTLANGUAGE")   // requested language, must be one in summary information list, selects language transform

#if (_WIN32_MSI >= 150)
#define IPROPNAME_CHECKCRCS        TEXT("MSICHECKCRCS")      // requests Darwin to check CRCs after copying, moving, patching & duplicating files.
#define IPROPNAME_MSINODISABLEMEDIA TEXT("MSINODISABLEMEDIA")  // if set, DISABLEMEDIA won't be set in the AdminProperties stream during an admin install of
																					// a package with compressed source
																					
// property used for URT bootstrapping
#define IPROPNAME_CARRYINGNDP	TEXT("CARRYINGNDP")
#define IPROPVALUE__CARRYINGNDP_URTREINSTALL  TEXT("URTREINSTALL")   // reinstalling/ uninstalling core URT files
#define IPROPVALUE__CARRYINGNDP_URTUPGRADE  TEXT("URTUPGRADE")  // upgrading core URT files
#define IPROPNAME_ENFORCE_UPGRADE_COMPONENT_RULES  TEXT("MSIENFORCEUPGRADECOMPONENTRULES")  // if set, doesn't allow upgrade packages to break component rules.

// property used for multiple instance support
#define IPROPNAME_MSINEWINSTANCE TEXT("MSINEWINSTANCE")
#define IPROPNAME_MSIINSTANCEGUID TEXT("MSIINSTANCEGUID")

// properties used for URL download reduction for admins
#define IPROPNAME_MSIPACKAGEDOWNLOADLOCALCOPY TEXT("MSIPACKAGEDOWNLOADLOCALCOPY")
#define IPROPNAME_MSIPATCHDOWNLOADLOCALCOPY TEXT("MSIPATCHDOWNLOADLOCALCOPY")

#endif // (_WIN32_MSI >= 150)

#if (_WIN32_MSI >= 300)
// properties for limited-user account (LUA) patching support (per-machine applications only)
#define IPROPNAME_MSIDISABLELUAPATCHING TEXT("MSIDISABLELUAPATCHING")
#endif //(_WIN32_MSI >= 300)

#if (_WIN32_MSI >= 400)

// properties related to logging
#define IPROPNAME_MSILOGGINGMODE      TEXT("MsiLogging")
#define IPROPNAME_MSILOGFILELOCATION  TEXT("MsiLogFileLocation")

// properties related to Restart Manager
#define IPROPNAME_MSI_RM_CONTROL          TEXT("MSIRESTARTMANAGERCONTROL")
#define IPROPVALUE_MSI_RM_CONTROL_DISABLE TEXT("Disable")
#define IPROPVALUE_MSI_RM_CONTROL_DISABLESHUTDOWN TEXT("DisableShutdown")
#define IPROPNAME_MSI_RM_SESSION_KEY      TEXT("MsiRestartManagerSessionKey")
#define IPROPNAME_MSI_REBOOT_PENDING      TEXT("MsiSystemRebootPending")
#define IPROPNAME_MSI_RM_SHUTDOWN         TEXT("MSIRMSHUTDOWN")
#define IPROPNAME_MSI_RM_DISABLE_RESTART  TEXT("MSIDISABLERMRESTART")

// properties related to UAC
#define IPROPNAME_MSI_UAC_DEPLOYMENT_COMPLIANT TEXT("MSIDEPLOYMENTCOMPLIANT")
#define IPROPNAME_MSI_USE_REAL_ADMIN_DETECTION TEXT("MSIUSEREALADMINDETECTION")

#endif //(_WIN32_MSI >= 400)

// Property related to patch supersedence
#if (_WIN32_MSI >= 450)
#define IPROPNAME_MSI_UNINSTALL_SUPERSEDED_COMPONENTS TEXT("MSIUNINSTALLSUPERSEDEDCOMPONENTS")
#endif //(_WIN32_MSI >= 450)

// Property related to Embedded UI
#if (_WIN32_MSI >= 450)
#define IPROPNAME_MSIDISABLEEEUI          TEXT("MSIDISABLEEEUI")
#endif //(_WIN32_MSI >= 450)

#if (_WIN32_MSI >= 500)

// property for fast install option
#define IPROPNAME_MSI_FASTINSTALL         TEXT("MSIFASTINSTALL")
// When this property is set to 1 indicates that the package is a true
// per user package and no UAC is required to install this package.
#define IPROPNAME_INSTALLPERUSER         TEXT("MSIINSTALLPERUSER")
// Internal property to store if the package is installed per user.
#define IPROPNAME_INTERNALINSTALLEDPERUSER         TEXT("MSIINTERNALINSTALLEDPERUSER")

#endif //(_WIN32_MSI >= 500)

// Properties used to populate Add/Remove Control Panel values 
#define IPROPNAME_ARPAUTHORIZEDCDFPREFIX  TEXT("ARPAUTHORIZEDCDFPREFIX")
#define IPROPNAME_ARPCOMMENTS             TEXT("ARPCOMMENTS")
#define IPROPNAME_ARPCONTACT              TEXT("ARPCONTACT")
#define IPROPNAME_ARPHELPLINK             TEXT("ARPHELPLINK")
#define IPROPNAME_ARPHELPTELEPHONE        TEXT("ARPHELPTELEPHONE")
#define IPROPNAME_ARPINSTALLLOCATION      TEXT("ARPINSTALLLOCATION")
#define IPROPNAME_ARPNOMODIFY             TEXT("ARPNOMODIFY")
#define IPROPNAME_ARPNOREMOVE             TEXT("ARPNOREMOVE")
#define IPROPNAME_ARPNOREPAIR             TEXT("ARPNOREPAIR")
#define IPROPNAME_ARPREADME               TEXT("ARPREADME")
#define IPROPNAME_ARPSIZE                 TEXT("ARPSIZE")
#define IPROPNAME_ARPSYSTEMCOMPONENT      TEXT("ARPSYSTEMCOMPONENT")
#define IPROPNAME_ARPURLINFOABOUT         TEXT("ARPURLINFOABOUT")
#define IPROPNAME_ARPURLUPDATEINFO        TEXT("ARPURLUPDATEINFO")
#if (_WIN32_MSI >=  110)
#define IPROPNAME_ARPPRODUCTICON          TEXT("ARPPRODUCTICON")
#endif //(_WIN32_MSI >=  110)
#if (_WIN32_MSI >=  400)
#define IPROPNAME_ARPSETTINGSIDENTIFIER   TEXT("MSIARPSETTINGSIDENTIFIER")
#endif //(_WIN32_MSI >=  400)
#if (_WIN32_MSI >= 500)
#define IPROPNAME_ARPSHIMFLAGS            TEXT("SHIMFLAGS")
#define IPROPNAME_ARPSHIMVERSIONNT        TEXT("SHIMVERSIONNT")
#define IPROPNAME_ARPSHIMSERVICEPACKLEVEL TEXT("SHIMSERVICEPACKLEVEL")
#endif

// Dynamic properties set by installer during install
#define IPROPNAME_INSTALLED        TEXT("Installed")        // product already installed
#define IPROPNAME_PRODUCTSTATE     TEXT("ProductState")     // state of product (installed,advertised,etc...)
#define IPROPNAME_PRESELECTED      TEXT("Preselected")      // selections made on command line
#define IPROPNAME_RESUME           TEXT("RESUME")           // resuming suspended install
#define IPROPNAME_UPDATESTARTED    TEXT("UpdateStarted")    // have begun to update system
#define IPROPNAME_PRODUCTID        TEXT("ProductID")        // the complete validated Product ID
#define IPROPNAME_OUTOFDISKSPACE   TEXT("OutOfDiskSpace")
#define IPROPNAME_OUTOFNORBDISKSPACE TEXT("OutOfNoRbDiskSpace")
#define IPROPNAME_COSTINGCOMPLETE  TEXT("CostingComplete")
#define IPROPNAME_SOURCEDIR        TEXT("SourceDir")        // source location - SET BY INSTALLER
#define IPROPNAME_REPLACEDINUSEFILES TEXT("ReplacedInUseFiles") // need reboot to completely install one or more files
#define IPROPNAME_PRIMARYFOLDER_PATH TEXT("PrimaryVolumePath")
#define IPROPNAME_PRIMARYFOLDER_SPACEAVAILABLE TEXT("PrimaryVolumeSpaceAvailable")
#define IPROPNAME_PRIMARYFOLDER_SPACEREQUIRED TEXT("PrimaryVolumeSpaceRequired")
#define IPROPNAME_PRIMARYFOLDER_SPACEREMAINING TEXT("PrimaryVolumeSpaceRemaining")
#define IPROPNAME_ISADMINPACKAGE   TEXT("IsAdminPackage")
#define IPROPNAME_ROLLBACKDISABLED TEXT("RollbackDisabled")
#define IPROPNAME_RESTRICTEDUSERCONTROL TEXT("RestrictedUserControl")
#if (_WIN32_MSI >= 300)
#define IPROPNAME_SOURCERESONLY TEXT("MsiUISourceResOnly") // INSTALLUILEVEL_SOURCERESONLY provided as internal UI level
#define IPROPNAME_HIDECANCEL    TEXT("MsiUIHideCancel") // UI configured with a hidden cancel button (INSTALLUILEVEL_HIDECANCEL)
#define IPROPNAME_PROGRESSONLY  TEXT("MsiUIProgressOnly") // UI configured to only show progress, no modal or error dialogs displayed (INSTALLUILEVEL_PROGRESSONLY)
#endif // (_WIN32_MSI >= 300)
#if (_WIN32_MSI >= 500)
#define IPROPNAME_UACONLY TEXT("MsiUIUACOnly") // INSTALLUILEVEL_UACONLY provided as internal UI level
#endif // (_WIN32_MSI >= 500)

// Dynamic properties evaluated upon use
#define IPROPNAME_TIME             TEXT("Time")
#define IPROPNAME_DATE             TEXT("Date")
#define IPROPNAME_DATETIME         TEXT("DateTime")

// Hardware properties: set by installer at initialization
#define IPROPNAME_INTEL            TEXT("Intel")
#if (_WIN32_MSI >= 150)
#define IPROPNAME_TEMPLATE_AMD64   TEXT("AMD64")  // Oct. 2004: this is to be retired once grace period expires, use the x64 below instead
#define IPROPNAME_TEMPLATE_X64     TEXT("x64")
#define IPROPNAME_MSIAMD64         TEXT("MsiAMD64")  // Oct. 2004: this is to be retired once grace period expires, use the x64 below instead
#define IPROPNAME_MSIX64           TEXT("Msix64")
#define IPROPNAME_INTEL64          TEXT("Intel64")
#else // (_WIN32_MSI >= 150)
#define IPROPNAME_IA64             TEXT("IA64")
#endif // (_WIN32_MSI >= 150)
#define IPROPNAME_TEXTHEIGHT       TEXT("TextHeight")
#if (_WIN32_MSI >= 400)
#define IPROPNAME_TEXTINTERNALLEADING       TEXT("TextInternalLeading")
#endif // (_WIN32_MSI >= 400)
#define IPROPNAME_SCREENX          TEXT("ScreenX")
#define IPROPNAME_SCREENY          TEXT("ScreenY")
#define IPROPNAME_CAPTIONHEIGHT    TEXT("CaptionHeight")
#define IPROPNAME_BORDERTOP        TEXT("BorderTop")
#define IPROPNAME_BORDERSIDE       TEXT("BorderSide")
#define IPROPNAME_COLORBITS        TEXT("ColorBits")
#define IPROPNAME_PHYSICALMEMORY   TEXT("PhysicalMemory")
#define IPROPNAME_VIRTUALMEMORY    TEXT("VirtualMemory")
#if (_WIN32_MSI >= 150)
#define IPROPNAME_TEXTHEIGHT_CORRECTION  TEXT("TextHeightCorrection")
#endif // (_WIN32_MSI >= 150)
#if (_WIN32_MSI >= 400)
#define IPROPNAME_MSITABLETPC         TEXT("MsiTabletPC")
#endif // (_WIN32_MSI >= 400)

// Operating System properties: set by installer at initialization
#define IPROPNAME_VERSIONNT         TEXT("VersionNT")
#define IPROPNAME_VERSION9X         TEXT("Version9X")
#if (_WIN32_MSI >= 150)
#define IPROPNAME_VERSIONNT64       TEXT("VersionNT64")
#endif // (_WIN32_MSI >= 150)
#define IPROPNAME_WINDOWSBUILD      TEXT("WindowsBuild")
#define IPROPNAME_SERVICEPACKLEVEL  TEXT("ServicePackLevel")
#if (_WIN32_MSI >=  110)
#define IPROPNAME_SERVICEPACKLEVELMINOR TEXT("ServicePackLevelMinor")
#endif //(_WIN32_MSI >=  110)
#define IPROPNAME_SHAREDWINDOWS     TEXT("SharedWindows")
#define IPROPNAME_COMPUTERNAME      TEXT("ComputerName")
#define IPROPNAME_SHELLADVTSUPPORT  TEXT("ShellAdvtSupport")
#define IPROPNAME_OLEADVTSUPPORT    TEXT("OLEAdvtSupport")
#define IPROPNAME_SYSTEMLANGUAGEID  TEXT("SystemLanguageID")
#define IPROPNAME_TTCSUPPORT        TEXT("TTCSupport")
#define IPROPNAME_TERMSERVER		TEXT("TerminalServer")
#if (_WIN32_MSI >=  110)
#define IPROPNAME_REMOTEADMINTS		TEXT("RemoteAdminTS")
#define IPROPNAME_REDIRECTEDDLLSUPPORT TEXT("RedirectedDllSupport")
#endif //(_WIN32_MSI >=  110)
#if (_WIN32_MSI >= 150)
#define IPROPNAME_NTPRODUCTTYPE                   TEXT("MsiNTProductType")
#define IPROPNAME_NTSUITEBACKOFFICE               TEXT("MsiNTSuiteBackOffice")
#define IPROPNAME_NTSUITEDATACENTER               TEXT("MsiNTSuiteDataCenter")
#define IPROPNAME_NTSUITEENTERPRISE               TEXT("MsiNTSuiteEnterprise")
#define IPROPNAME_NTSUITESMALLBUSINESS            TEXT("MsiNTSuiteSmallBusiness")
#define IPROPNAME_NTSUITESMALLBUSINESSRESTRICTED  TEXT("MsiNTSuiteSmallBusinessRestricted")
#define IPROPNAME_NTSUITEPERSONAL                 TEXT("MsiNTSuitePersonal")
#define IPROPNAME_NTSUITEWEBSERVER                TEXT("MsiNTSuiteWebServer")
#define IPROPNAME_NETASSEMBLYSUPPORT              TEXT("MsiNetAssemblySupport")
#define IPROPNAME_WIN32ASSEMBLYSUPPORT            TEXT("MsiWin32AssemblySupport")
#endif // (_WIN32_MSI >= 150)


// User properties: set by installer at initialization
#define IPROPNAME_LOGONUSER        TEXT("LogonUser")
#define IPROPNAME_USERSID          TEXT("UserSID")
#define IPROPNAME_ADMINUSER        TEXT("AdminUser")
#define IPROPNAME_USERLANGUAGEID   TEXT("UserLanguageID")
#define IPROPNAME_PRIVILEGED       TEXT("Privileged")
#if (_WIN32_MSI >= 400)
#define IPROPNAME_RUNNINGELEVATED  TEXT("MsiRunningElevated")
#endif // (_WIN32_MSI >= 400)
#if (_WIN32_MSI >= 500)
#define IPROPNAME_TRUEADMINUSER    TEXT("MsiTrueAdminUser")
#endif // (_WIN32_MSI >= 500)

// System folder properties: set by installer at initialization
#define IPROPNAME_WINDOWS_FOLDER   TEXT("WindowsFolder")
#define IPROPNAME_SYSTEM_FOLDER    TEXT("SystemFolder")
#define IPROPNAME_SYSTEM16_FOLDER  TEXT("System16Folder")
#define IPROPNAME_WINDOWS_VOLUME   TEXT("WindowsVolume")
#define IPROPNAME_TEMP_FOLDER      TEXT("TempFolder")
#define IPROPNAME_PROGRAMFILES_FOLDER TEXT("ProgramFilesFolder")
#define IPROPNAME_COMMONFILES_FOLDER TEXT("CommonFilesFolder")
#if (_WIN32_MSI >= 150)
#define IPROPNAME_SYSTEM64_FOLDER    TEXT("System64Folder")
#define IPROPNAME_PROGRAMFILES64_FOLDER TEXT("ProgramFiles64Folder")
#define IPROPNAME_COMMONFILES64_FOLDER TEXT("CommonFiles64Folder")
#endif // (_WIN32_MSI >= 150)
#define IPROPNAME_STARTMENU_FOLDER TEXT("StartMenuFolder")
#define IPROPNAME_PROGRAMMENU_FOLDER TEXT("ProgramMenuFolder")
#define IPROPNAME_STARTUP_FOLDER   TEXT("StartupFolder")
#define IPROPNAME_NETHOOD_FOLDER   TEXT("NetHoodFolder")
#define IPROPNAME_PERSONAL_FOLDER  TEXT("PersonalFolder")
#define IPROPNAME_SENDTO_FOLDER    TEXT("SendToFolder")
#define IPROPNAME_DESKTOP_FOLDER   TEXT("DesktopFolder")
#define IPROPNAME_TEMPLATE_FOLDER  TEXT("TemplateFolder")
#define IPROPNAME_FONTS_FOLDER     TEXT("FontsFolder")
#define IPROPNAME_FAVORITES_FOLDER TEXT("FavoritesFolder")
#define IPROPNAME_RECENT_FOLDER    TEXT("RecentFolder")
#define IPROPNAME_APPDATA_FOLDER   TEXT("AppDataFolder")
#define IPROPNAME_PRINTHOOD_FOLDER TEXT("PrintHoodFolder")
#if (_WIN32_MSI >=  110)
#define IPROPNAME_ADMINTOOLS_FOLDER TEXT("AdminToolsFolder")
#define IPROPNAME_COMMONAPPDATA_FOLDER TEXT("CommonAppDataFolder")
#define IPROPNAME_LOCALAPPDATA_FOLDER TEXT("LocalAppDataFolder")
#define IPROPNAME_MYPICTURES_FOLDER TEXT("MyPicturesFolder")
#endif //(_WIN32_MSI >=  110)

// Feature/Component installation properties: set on command-line
#define IPROPNAME_FEATUREADDLOCAL  TEXT("ADDLOCAL")
#define IPROPNAME_FEATUREADDSOURCE TEXT("ADDSOURCE")
#define IPROPNAME_FEATUREADDDEFAULT TEXT("ADDDEFAULT")
#define IPROPNAME_FEATUREREMOVE    TEXT("REMOVE")
#define IPROPNAME_FEATUREADVERTISE TEXT("ADVERTISE")
#define IPROPVALUE_FEATURE_ALL  TEXT("ALL")

#define IPROPNAME_COMPONENTADDLOCAL  TEXT("COMPADDLOCAL")
#define IPROPNAME_COMPONENTADDSOURCE TEXT("COMPADDSOURCE")
#define IPROPNAME_COMPONENTADDDEFAULT TEXT("COMPADDDEFAULT")

#define IPROPNAME_FILEADDLOCAL     TEXT("FILEADDLOCAL")
#define IPROPNAME_FILEADDSOURCE    TEXT("FILEADDSOURCE")
#define IPROPNAME_FILEADDDEFAULT   TEXT("FILEADDDEFAULT")

#define IPROPNAME_REINSTALL        TEXT("REINSTALL")
#define IPROPNAME_REINSTALLMODE    TEXT("REINSTALLMODE")
#define IPROPNAME_PROMPTROLLBACKCOST  TEXT("PROMPTROLLBACKCOST")
#define IPROPVALUE_RBCOST_PROMPT      TEXT("P")
#define IPROPVALUE_RBCOST_SILENT      TEXT("D")
#define IPROPVALUE_RBCOST_FAIL        TEXT("F")

// Property for custom actions to communicate
#define IPROPNAME_CUSTOMACTIONDATA     TEXT("CustomActionData")

//__________________________________________________________________________
//
// TOP-LEVEL ACTION NAMES
//__________________________________________________________________________

#define IACTIONNAME_INSTALL        TEXT("INSTALL")
#define IACTIONNAME_ADVERTISE      TEXT("ADVERTISE")
#define IACTIONNAME_ADMIN          TEXT("ADMIN")
#define IACTIONNAME_SEQUENCE       TEXT("SEQUENCE")
#define IACTIONNAME_COLLECTUSERINFO TEXT("CollectUserInfo")
#define IACTIONNAME_FIRSTRUN       TEXT("FirstRun")

//__________________________________________________________________________
//
//  SummaryInformation property stream property IDs
//__________________________________________________________________________

#undef PID_SECURITY // defined as ( 0x80000002 ) in objidl.h, need to redefine here

// standard property definitions, from OLE2 documentation
#define PID_DICTIONARY  ( 0 )// integer count + array of entries
#define PID_CODEPAGE  ( 0x1 )// short integer
#define PID_TITLE         2  // string
#define PID_SUBJECT       3  // string
#define PID_AUTHOR        4  // string
#define PID_KEYWORDS      5  // string
#define PID_COMMENTS      6  // string
#define PID_TEMPLATE      7  // string
#define PID_LASTAUTHOR    8  // string
#define PID_REVNUMBER     9  // string
#define PID_EDITTIME     10  // datatime
#define PID_LASTPRINTED  11  // datetime
#define PID_CREATE_DTM   12  // datetime
#define PID_LASTSAVE_DTM 13  // datetime
#define PID_PAGECOUNT    14  // integer 
#define PID_WORDCOUNT    15  // integer 
#define PID_CHARCOUNT    16  // integer 
#define PID_THUMBNAIL    17  // clipboard format + metafile/bitmap (not supported)
#define PID_APPNAME      18  // string
#define PID_SECURITY     19  // integer

// PIDs given specific meanings for Installer
#define PID_MSIVERSION     PID_PAGECOUNT  // integer, Installer version number (major*100+minor)
#define PID_MSISOURCE      PID_WORDCOUNT  // integer, type of file image, short/long, media/tree
#define PID_MSIRESTRICT    PID_CHARCOUNT  // integer, transform restrictions

//__________________________________________________________________________
//
// INSTALLER DATABASE INTEGER COLUMN DEFINITIONS
//__________________________________________________________________________

// BBControl.Attributes
// Control.Attributes
enum msidbControlAttributes
{
	msidbControlAttributesVisible           = 0x00000001,
	msidbControlAttributesEnabled           = 0x00000002,
	msidbControlAttributesSunken            = 0x00000004,
	msidbControlAttributesIndirect          = 0x00000008,
	msidbControlAttributesInteger           = 0x00000010,
	msidbControlAttributesRTLRO             = 0x00000020,
	msidbControlAttributesRightAligned      = 0x00000040,
	msidbControlAttributesLeftScroll        = 0x00000080,
	msidbControlAttributesBiDi              = msidbControlAttributesRTLRO |
	                                          msidbControlAttributesRightAligned |
										               msidbControlAttributesLeftScroll,
	
	// Text controls
	msidbControlAttributesTransparent       = 0x00010000,
	msidbControlAttributesNoPrefix          = 0x00020000,
	msidbControlAttributesNoWrap            = 0x00040000,
	msidbControlAttributesFormatSize        = 0x00080000,
	msidbControlAttributesUsersLanguage     = 0x00100000,

	// Edit controls
	msidbControlAttributesMultiline         = 0x00010000,
#if (_WIN32_MSI >=  110)
	msidbControlAttributesPasswordInput     = 0x00200000,
#endif //(_WIN32_MSI >=  110)
	
	// ProgressBar controls
	msidbControlAttributesProgress95        = 0x00010000,
	
	// VolumeSelectCombo and DirectoryCombo controls
	msidbControlAttributesRemovableVolume   = 0x00010000,
	msidbControlAttributesFixedVolume       = 0x00020000,
	msidbControlAttributesRemoteVolume      = 0x00040000,
	msidbControlAttributesCDROMVolume       = 0x00080000,
	msidbControlAttributesRAMDiskVolume     = 0x00100000,
	msidbControlAttributesFloppyVolume      = 0x00200000,
	// VolumeCostList controls
	msidbControlShowRollbackCost            = 0x00400000,
	
	// ListBox and ComboBox controls
	msidbControlAttributesSorted            = 0x00010000,
	msidbControlAttributesComboList         = 0x00020000,
	
	// picture button controls
	msidbControlAttributesImageHandle       = 0x00010000,
	msidbControlAttributesPushLike          = 0x00020000,
	msidbControlAttributesBitmap            = 0x00040000,
	msidbControlAttributesIcon              = 0x00080000,
	msidbControlAttributesFixedSize         = 0x00100000,
	msidbControlAttributesIconSize16        = 0x00200000,
	msidbControlAttributesIconSize32        = 0x00400000,
	msidbControlAttributesIconSize48        = 0x00600000,
#if (_WIN32_MSI >= 400)
	msidbControlAttributesElevationShield   = 0x00800000,
#endif //(_WIN32_MSI >=  400)

	// RadioButton controls
	msidbControlAttributesHasBorder         = 0x01000000,
};

// CompLocator.Type
// IniLocator.Type
// RegLocator.Type
typedef enum _msidbLocatorType
{
	msidbLocatorTypeDirectory = 0x00000000,
	msidbLocatorTypeFileName  = 0x00000001,
#if (_WIN32_MSI >=  110)
	msidbLocatorTypeRawValue  = 0x00000002,
#endif //(_WIN32_MSI >=  110)
#if (_WIN32_MSI >= 150)
	msidbLocatorType64bit     = 0x00000010,
#endif //(_WIN32_MSI >= 150)
} msidbLocatorType;

// Component.Attributes
enum msidbComponentAttributes
{
	msidbComponentAttributesLocalOnly          = 0x00000000,
	msidbComponentAttributesSourceOnly         = 0x00000001,
	msidbComponentAttributesOptional           = 0x00000002, // local or source
	msidbComponentAttributesRegistryKeyPath    = 0x00000004, // KeyPath is key to Registry table
	msidbComponentAttributesSharedDllRefCount  = 0x00000008, // increment SharedDll count
	msidbComponentAttributesPermanent          = 0x00000010, // never uninstall component
	msidbComponentAttributesODBCDataSource     = 0x00000020, // KeyFile is key to ODBCDataSource table
	msidbComponentAttributesTransitive         = 0x00000040, // Can transition to/from installed/uninstalled based on changing conditional
	msidbComponentAttributesNeverOverwrite     = 0x00000080, // dont stomp over existing component if key path exists (file/ regkey)
#if (_WIN32_MSI >= 150)
	msidbComponentAttributes64bit              = 0x00000100, // designates a 64-bit component; 32-bit if missing.
#endif // (_WIN32_MSI >= 150)
#if (_WIN32_MSI >= 400)
	msidbComponentAttributesDisableRegistryReflection = 0x00000200, // Disables registry reflection for this component.
#endif // (_WIN32_MSI >= 400)
#if (_WIN32_MSI >= 450)
	msidbComponentAttributesUninstallOnSupersedence = 0x00000400,
	msidbComponentAttributesShared = 0x00000800,
#endif // (_WIN32_MSI >= 450)
};

#if (_WIN32_MSI >= 150)
// Assembly.Attributes
enum msidbAssemblyAttributes
{
	msidbAssemblyAttributesURT   = 0x00000000,
	msidbAssemblyAttributesWin32 = 0x00000001,
};
#endif // (_WIN32_MSI >= 150)

// CustomAction.Type
enum msidbCustomActionType
{
	// executable types
	msidbCustomActionTypeDll              = 0x00000001,  // Target = entry point name
	msidbCustomActionTypeExe              = 0x00000002,  // Target = command line args
	msidbCustomActionTypeTextData         = 0x00000003,  // Target = text string to be formatted and set into property
	msidbCustomActionTypeJScript          = 0x00000005,  // Target = entry point name, null if none to call
	msidbCustomActionTypeVBScript         = 0x00000006,  // Target = entry point name, null if none to call
	msidbCustomActionTypeInstall          = 0x00000007,  // Target = property list for nested engine initialization

	// source of code
	msidbCustomActionTypeBinaryData       = 0x00000000,  // Source = Binary.Name, data stored in stream
	msidbCustomActionTypeSourceFile       = 0x00000010,  // Source = File.File, file part of installation
	msidbCustomActionTypeDirectory        = 0x00000020,  // Source = Directory.Directory, folder containing existing file
	msidbCustomActionTypeProperty         = 0x00000030,  // Source = Property.Property, full path to executable

	// return processing                  // default is syncronous execution, process return code
	msidbCustomActionTypeContinue         = 0x00000040,  // ignore action return status, continue running
	msidbCustomActionTypeAsync            = 0x00000080,  // run asynchronously
	
	// execution scheduling flags               // default is execute whenever sequenced
	msidbCustomActionTypeFirstSequence    = 0x00000100,  // skip if UI sequence already run
	msidbCustomActionTypeOncePerProcess   = 0x00000200,  // skip if UI sequence already run in same process
	msidbCustomActionTypeClientRepeat     = 0x00000300,  // run on client only if UI already run on client
	msidbCustomActionTypeInScript         = 0x00000400,  // queue for execution within script
	msidbCustomActionTypeRollback         = 0x00000100,  // in conjunction with InScript: queue in Rollback script
	msidbCustomActionTypeCommit           = 0x00000200,  // in conjunction with InScript: run Commit ops from script on success

	// security context flag, default to impersonate as user, valid only if InScript
	msidbCustomActionTypeNoImpersonate    = 0x00000800,  // no impersonation, run in system context
#if (_WIN32_MSI >= 150)
	msidbCustomActionTypeTSAware          = 0x00004000,  // impersonate for per-machine installs on TS machines
#endif // (_WIN32_MSI >= 150)

#if (_WIN32_MSI >= 150)
	// script requires 64bit process
	msidbCustomActionType64BitScript      = 0x00001000,  // script should run in 64bit process

	// don't record the contents of the Target field in the log file.
	msidbCustomActionTypeHideTarget       = 0x00002000,
#endif // (_WIN32_MSI >= 150)

#if (_WIN32_MSI >= 450)
	msidbCustomActionTypePatchUninstall      = 0x00008000,  // custom action to be run only during a patch uninstall
#endif // (_WIN32_MSI >= 450)

};

// Dialog.Attributes
enum msidbDialogAttributes
{
	msidbDialogAttributesVisible          = 0x00000001,
	msidbDialogAttributesModal            = 0x00000002,
	msidbDialogAttributesMinimize         = 0x00000004,
	msidbDialogAttributesSysModal         = 0x00000008,
	msidbDialogAttributesKeepModeless     = 0x00000010,
	msidbDialogAttributesTrackDiskSpace   = 0x00000020,
	msidbDialogAttributesUseCustomPalette = 0x00000040,
	msidbDialogAttributesRTLRO            = 0x00000080,
	msidbDialogAttributesRightAligned     = 0x00000100,
	msidbDialogAttributesLeftScroll       = 0x00000200,
	msidbDialogAttributesBiDi             = msidbDialogAttributesRTLRO |
										             msidbDialogAttributesRightAligned |
										             msidbDialogAttributesLeftScroll,
	msidbDialogAttributesError            = 0x00010000,
};

// Feature.Attributes
enum msidbFeatureAttributes
{
	msidbFeatureAttributesFavorLocal            = 0x00000000,
	msidbFeatureAttributesFavorSource           = 0x00000001,
	msidbFeatureAttributesFollowParent          = 0x00000002,
	msidbFeatureAttributesFavorAdvertise        = 0x00000004,
	msidbFeatureAttributesDisallowAdvertise     = 0x00000008,
	msidbFeatureAttributesUIDisallowAbsent      = 0x00000010,
	msidbFeatureAttributesNoUnsupportedAdvertise= 0x00000020,
};

// File.Attributes
enum msidbFileAttributes
{
	msidbFileAttributesReadOnly       = 0x00000001,
	msidbFileAttributesHidden         = 0x00000002,
	msidbFileAttributesSystem         = 0x00000004,
	msidbFileAttributesReserved0      = 0x00000008, // Internal use only - must be 0
	msidbFileAttributesIsolatedComp   = 0x00000010,
	msidbFileAttributesReserved1      = 0x00000040, // Internal use only - must be 0
	msidbFileAttributesReserved2      = 0x00000080, // Internal use only - must be 0
	msidbFileAttributesReserved3      = 0x00000100, // Internal use only - must be 0
	msidbFileAttributesVital          = 0x00000200,
	msidbFileAttributesChecksum       = 0x00000400,
	msidbFileAttributesPatchAdded     = 0x00001000, // Internal use only - set by patches
	msidbFileAttributesNoncompressed  = 0x00002000,
	msidbFileAttributesCompressed     = 0x00004000,
	msidbFileAttributesReserved4      = 0x00008000, // Internal use only - must be 0
};

// IniFile.Action
// RemoveIniFile.Action
typedef enum _msidbIniFileAction
{
	msidbIniFileActionAddLine    = 0x00000000,
	msidbIniFileActionCreateLine = 0x00000001,
	msidbIniFileActionRemoveLine = 0x00000002,
	msidbIniFileActionAddTag     = 0x00000003,
	msidbIniFileActionRemoveTag  = 0x00000004,
} msidbIniFileAction;

// MoveFile.Options
enum msidbMoveFileOptions
{
	msidbMoveFileOptionsMove = 0x00000001,
};

// ODBCDataSource.Registration
typedef enum _msidbODBCDataSourceRegistration
{
	msidbODBCDataSourceRegistrationPerMachine  = 0x00000000,
	msidbODBCDataSourceRegistrationPerUser     = 0x00000001,
} msidbODBCDataSourceRegistration;

#if (_WIN32_MSI >=  110)

// Class.Attributes
enum msidbClassAttributes
{
	msidbClassAttributesRelativePath  = 0x00000001,
};

#endif //(_WIN32_MSI >=  110)

// Patch.Attributes
enum msidbPatchAttributes
{
	msidbPatchAttributesNonVital = 0x00000001,
};

// Registry.Root
// RegLocator.Root
// RemoveRegistry.Root
enum msidbRegistryRoot
{
	msidbRegistryRootClassesRoot  = 0,
	msidbRegistryRootCurrentUser  = 1,
	msidbRegistryRootLocalMachine = 2,
	msidbRegistryRootUsers        = 3,
};

// RemoveFile.InstallMode
enum msidbRemoveFileInstallMode
{
	msidbRemoveFileInstallModeOnInstall = 0x00000001,
	msidbRemoveFileInstallModeOnRemove  = 0x00000002,
	msidbRemoveFileInstallModeOnBoth    = 0x00000003,
};

// ServiceControl.Event
enum msidbServiceControlEvent
{
	msidbServiceControlEventStart             = 0x00000001,
	msidbServiceControlEventStop              = 0x00000002,
	msidbServiceControlEventDelete            = 0x00000008,
	msidbServiceControlEventUninstallStart    = 0x00000010,
	msidbServiceControlEventUninstallStop     = 0x00000020,
	msidbServiceControlEventUninstallDelete   = 0x00000080,
};


// ServiceConfigure.Event, ServiceConfigureFailureActions.Event
enum msidbServiceConfigEvent
{
	msidbServiceConfigEventInstall            = 0x00000001,
	msidbServiceConfigEventUninstall          = 0x00000002,
	msidbServiceConfigEventReinstall          = 0x00000004,
};

// ServiceInstall.ErrorControl
enum msidbServiceInstallErrorControl
{
	msidbServiceInstallErrorControlVital = 0x00008000,
};

// TextStyle.StyleBits
enum msidbTextStyleStyleBits
{
	msidbTextStyleStyleBitsBold         = 0x00000001,
	msidbTextStyleStyleBitsItalic       = 0x00000002,
	msidbTextStyleStyleBitsUnderline    = 0x00000004,
	msidbTextStyleStyleBitsStrike       = 0x00000008,
};

#if (_WIN32_MSI >=  110)

// Upgrade.Attributes
enum msidbUpgradeAttributes
{
	msidbUpgradeAttributesMigrateFeatures     = 0x00000001,
	msidbUpgradeAttributesOnlyDetect          = 0x00000002,
	msidbUpgradeAttributesIgnoreRemoveFailure = 0x00000004,
	msidbUpgradeAttributesVersionMinInclusive = 0x00000100,
	msidbUpgradeAttributesVersionMaxInclusive = 0x00000200,
	msidbUpgradeAttributesLanguagesExclusive  = 0x00000400,
};

#endif //(_WIN32_MSI >=  110)

//embedded UI attributes
#if (_WIN32_MSI >= 450)
enum msidbEmbeddedUIAttributes
{
	msidbEmbeddedUI = 0x01,
	msidbEmbeddedHandlesBasic = 0x02,
};
#endif // if(_WIN32_MSI >= 450)

//__________________________________________________________________________
//
// SUMMARY INFORMATION PROPERTY DEFINITIONS
//__________________________________________________________________________

enum msidbSumInfoSourceType
{
	msidbSumInfoSourceTypeSFN            = 0x00000001,  // source uses short filenames
	msidbSumInfoSourceTypeCompressed     = 0x00000002,  // source is compressed
	msidbSumInfoSourceTypeAdminImage     = 0x00000004,  // source is an admin image
#if (_WIN32_MSI >= 400)
	msidbSumInfoSourceTypeLUAPackage     = 0x00000008,  // package can be installed by LUA user (elevated privileges are not required for install)
#endif //(_WIN32_MSI >= 400)
};

//__________________________________________________________________________
//
// REBOOT EVENTLOG VALUE DEFINITIONS
//__________________________________________________________________________

#if (_WIN32_MSI >= 400)

enum msirbRebootType
{
	msirbRebootImmediate = 1,
	msirbRebootDeferred = 2,
};

enum msirbRebootReason
{
	msirbRebootUndeterminedReason = 0,
	msirbRebootInUseFilesReason = 1,
	msirbRebootScheduleRebootReason = 2,
	msirbRebootForceRebootReason = 3,
	msirbRebootCustomActionReason = 4,
};

#endif //(WIN32_MSI >= 400)

//__________________________________________________________________________
//
// MSIFASTINSTALL VALUE DEFINITIONS
//__________________________________________________________________________

#if (_WIN32_MSI >= 500)

enum msifiFastInstallBits
{
	msifiFastInstallNoSR         = 0x00000001,	// no system restore point for per-user install
	msifiFastInstallQuickCosting = 0x00000002,  // only perform file related costing (baseline costing not included though)
	msifiFastInstallLessPrgMsg   = 0x00000004   // less progress message 
};

#endif //(WIN32_MSI >= 500)

#endif // __MSIDEFS
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\MsHtmdid.h ===
//*********************************************************************
//*                  Microsoft Windows                               **
//*            Copyright(c) Microsoft Corp., 1996-1997               **
//*********************************************************************

//;begin_internal
/***********************************************************************************************

  This is a distributed SDK component - do not put any #includes or other directives that rely
  upon files not dropped. If in doubt - build iedev

  If you add comments please enclose in a ;begin_internal, ;end_internal block - such as this one!

 ***********************************************************************************************/
//;end_internal

//;begin_internal
#ifndef __COREDISP_H__
#define __COREDISP_H__
//;end_internal

//;begin_internal
//
// The following dispid must be the smallest possible dispid so that it
// always ends up first in our attr array.
// It does not need to be exposed to the outside world
#define DISPID_INTERNAL_CELEMENTCLASSCACHE  MINLONG
//;end_internal


#define DISPID_XOBJ_MIN                 0x80010000
#define DISPID_XOBJ_MAX                 0x8001FFFF
#define DISPID_XOBJ_BASE                DISPID_XOBJ_MIN
#define DISPID_HTMLOBJECT               (DISPID_XOBJ_BASE   + 500)
#define DISPID_ELEMENT                  (DISPID_HTMLOBJECT  + 500)
#define DISPID_SITE                     (DISPID_ELEMENT     + 1000)
#define DISPID_OBJECT                   (DISPID_SITE        + 1000)
#define DISPID_STYLE                    (DISPID_OBJECT      + 1000)
#define DISPID_ATTRS                    (DISPID_STYLE       + 1000)
#define DISPID_EVENTS                   (DISPID_ATTRS       + 1000)
#define DISPID_XOBJ_EXPANDO             (DISPID_EVENTS      + 1000)
#define DISPID_XOBJ_ORDINAL             (DISPID_XOBJ_EXPANDO+ 1000)

//;begin_internal
// Expandos for ActiveX controls, note these are very limited compared to
// normal expandos on an element.

#define DISPID_ACTIVEX_EXPANDO_BASE      DISPID_XOBJ_EXPANDO
#define DISPID_ACTIVEX_EXPANDO_MAX       (DISPID_ACTIVEX_EXPANDO_BASE + 999)

#define DISPID_OBJECT_ORDINAL_BASE       DISPID_XOBJ_ORDINAL
#define DISPID_OBJECT_ORDINAL_MAX       (DISPID_OBJECT_ORDINAL_BASE + 999)

#define DISPID_COLLECTION_MIN           1000000
#define DISPID_COLLECTION_MAX           2999999

// Divide collection dispid space into "named member" half and "ordinal access" half
// for stylesheets collection.
#define DISPID_STYLESHEETSCOLLECTION_NAMED_BASE        (DISPID_COLLECTION_MIN)
#define DISPID_STYLESHEETSCOLLECTION_NAMED_MAX         (DISPID_COLLECTION_MIN+((DISPID_COLLECTION_MAX-DISPID_COLLECTION_MIN)/2))
#define DISPID_STYLESHEETSCOLLECTION_ORDINAL_BASE      (DISPID_STYLESHEETSCOLLECTION_NAMED_MAX+1)
#define DISPID_STYLESHEETSCOLLECTION_ORDINAL_MAX       (DISPID_COLLECTION_MAX)

// DISPID range for expandos not associated with an ActiveX control
#define DISPID_EXPANDO_BASE             3000000
#define DISPID_EXPANDO_MAX              3999999

#define IsStandardDispid(dispid)        (dispid <= 0)
#define IsExpandoDispid(dispid)         (DISPID_EXPANDO_BASE <= dispid && dispid <= DISPID_EXPANDO_MAX)

#define DISPID_EVENTHOOK_SENSITIVE_BASE   4000000
#define DISPID_EVENTHOOK_SENSITIVE_MAX    4499999
#define DISPID_EVENTHOOK_INSENSITIVE_BASE 4500000
#define DISPID_EVENTHOOK_INSENSITIVE_MAX  4999999

#define DISPID_PEER_HOLDER_BASE         5000000

#define IsPeerDispid(dispid)            (DISPID_PEER_HOLDER_BASE <= dispid)

//;end_internal

//;begin_internal
//
// IE 4 dispids that no longer exist
//
//;end_internal
#define DISPID_HTMLOPTIONBUTTONELEMENTEVENTS_ONCHANGE       DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONCHANGE

//;begin_internal
//
// Standard control properties
//
//;end_internal

//;begin_internal
//;QUESTION: rgardner - why do we use these names ???
//;end_internal
#define DISPID_CommonCtrl_FONTNAME        1
#define DISPID_CommonCtrl_FONTSIZE        2
#define DISPID_CommonCtrl_FONTBOLD        3
#define DISPID_CommonCtrl_FONTITAL        4
#define DISPID_CommonCtrl_FONTUNDER       5
#define DISPID_CommonCtrl_FONTSTRIKE      6
#define DISPID_CommonCtrl_FONTWEIGHT      7
#define DISPID_CommonCtrl_FONTCHARSET     8
#define DISPID_CommonCtrl_FONTSUPERSCRIPT 9
#define DISPID_CommonCtrl_FONTSUBSCRIPT   10

// Data Binding DISPID's
#define DISPID_MSDATASRCINTERFACE       (-3900)
#define DISPID_ADVISEDATASRCCHANGEEVENT (-3901)


//;begin_internal
// DISPID values for HTML Dialogs files per interface
//;end_internal

#define DISPID_HTMLDLG                          25000
#define DISPID_HTMLDLGMODEL                     26000

//;begin_internal
// DISPID values for HTML Popup files per interface
//;end_internal

#define DISPID_HTMLPOPUP                        27000

//;begin_internal
// DISPID values for HTML Application files per interface
//;end_internal

#define DISPID_HTMLAPP                          5000

//;begin_internal
//----------------------------------------------------------------------------
//
//  Semi-standard x-object properties.
//
//  These values match those used by VB and are for the benefit of controls
//  with hard coded knowledge of VB.
//
//----------------------------------------------------------------------------
//;end_internal

#define STDPROPID_XOBJ_NAME                 (DISPID_XOBJ_BASE + 0x0)
#define STDPROPID_XOBJ_INDEX                (DISPID_XOBJ_BASE + 0x1)
//;begin_internal
// for IE3 compatibility

#define STDPROPID_IE3XOBJ_OBJECTALIGN     (DISPID_XOBJ_BASE + 0x1)

// STDPROPID_XOBJ_BASEHREF is a constant used by IE3
//;end_internal
#define STDPROPID_XOBJ_BASEHREF             (DISPID_XOBJ_BASE + 0x2)
#define STDPROPID_XOBJ_LEFT                 (DISPID_XOBJ_BASE + 0x3)
#define STDPROPID_XOBJ_TOP                  (DISPID_XOBJ_BASE + 0x4)
#define STDPROPID_XOBJ_WIDTH                (DISPID_XOBJ_BASE + 0x5)
#define STDPROPID_XOBJ_HEIGHT               (DISPID_XOBJ_BASE + 0x6)
#define STDPROPID_XOBJ_VISIBLE              (DISPID_XOBJ_BASE + 0x7)
#define STDPROPID_XOBJ_PARENT               (DISPID_XOBJ_BASE + 0x8)
#define STDPROPID_XOBJ_DRAGMODE             (DISPID_XOBJ_BASE + 0x9)
#define STDPROPID_XOBJ_DRAGICON             (DISPID_XOBJ_BASE + 0xA)
#define STDPROPID_XOBJ_TAG                  (DISPID_XOBJ_BASE + 0xB)
#define STDPROPID_XOBJ_TABSTOP              (DISPID_XOBJ_BASE + 0xE)
#define STDPROPID_XOBJ_TABINDEX             (DISPID_XOBJ_BASE + 0xF)
#define STDPROPID_XOBJ_HELPCONTEXTID        (DISPID_XOBJ_BASE + 0x32)
#define STDPROPID_XOBJ_DEFAULT              (DISPID_XOBJ_BASE + 0x37)
#define STDPROPID_XOBJ_CANCEL               (DISPID_XOBJ_BASE + 0x38)
#define STDPROPID_XOBJ_LEFTNORUN            (DISPID_XOBJ_BASE + 0x39)
#define STDPROPID_XOBJ_TOPNORUN             (DISPID_XOBJ_BASE + 0x3A)
#define STDPROPID_XOBJ_ALIGNPERSIST         (DISPID_XOBJ_BASE + 0x3C)
#define STDPROPID_XOBJ_LINKTIMEOUT          (DISPID_XOBJ_BASE + 0x3D)
#define STDPROPID_XOBJ_LINKTOPIC            (DISPID_XOBJ_BASE + 0x3E)
#define STDPROPID_XOBJ_LINKITEM             (DISPID_XOBJ_BASE + 0x3F)
#define STDPROPID_XOBJ_LINKMODE             (DISPID_XOBJ_BASE + 0x40)
#define STDPROPID_XOBJ_DATACHANGED          (DISPID_XOBJ_BASE + 0x41)
#define STDPROPID_XOBJ_DATAFIELD            (DISPID_XOBJ_BASE + 0x42)
#define STDPROPID_XOBJ_DATASOURCE           (DISPID_XOBJ_BASE + 0x43)
#define STDPROPID_XOBJ_WHATSTHISHELPID      (DISPID_XOBJ_BASE + 0x44)
#define STDPROPID_XOBJ_CONTROLTIPTEXT       (DISPID_XOBJ_BASE + 0x45)
#define STDPROPID_XOBJ_STATUSBARTEXT        (DISPID_XOBJ_BASE + 0x46)
#define STDPROPID_XOBJ_APPLICATION          (DISPID_XOBJ_BASE + 0x47)
#define STDPROPID_XOBJ_BLOCKALIGN           (DISPID_XOBJ_BASE + 0x48)
#define STDPROPID_XOBJ_CONTROLALIGN         (DISPID_XOBJ_BASE + 0x49)
#define STDPROPID_XOBJ_STYLE                (DISPID_XOBJ_BASE + 0x4A)
#define STDPROPID_XOBJ_COUNT                (DISPID_XOBJ_BASE + 0x4B)
#define STDPROPID_XOBJ_DISABLED             (DISPID_XOBJ_BASE + 0x4C)
#define STDPROPID_XOBJ_RIGHT                (DISPID_XOBJ_BASE + 0x4D)
#define STDPROPID_XOBJ_BOTTOM               (DISPID_XOBJ_BASE + 0x4E)

//;begin_internal
//----------------------------------------------------------------------------
//
//  Semi-standard x-object properties.
//
//  These are events that are fired for all sites
//----------------------------------------------------------------------------
//;end_internal

#define STDDISPID_XOBJ_ONBLUR                           (DISPID_XOBJ_BASE)
#define STDDISPID_XOBJ_ONFOCUS                          (DISPID_XOBJ_BASE + 1)
#define STDDISPID_XOBJ_BEFOREUPDATE                     (DISPID_XOBJ_BASE + 4)
#define STDDISPID_XOBJ_AFTERUPDATE                      (DISPID_XOBJ_BASE + 5)
#define STDDISPID_XOBJ_ONROWEXIT                        (DISPID_XOBJ_BASE + 6)
#define STDDISPID_XOBJ_ONROWENTER                       (DISPID_XOBJ_BASE + 7)
#define STDDISPID_XOBJ_ONMOUSEOVER                      (DISPID_XOBJ_BASE + 8)
#define STDDISPID_XOBJ_ONMOUSEOUT                       (DISPID_XOBJ_BASE + 9)
#define STDDISPID_XOBJ_ONHELP                           (DISPID_XOBJ_BASE + 10)
#define STDDISPID_XOBJ_ONDRAGSTART                      (DISPID_XOBJ_BASE + 11)
#define STDDISPID_XOBJ_ONSELECTSTART                    (DISPID_XOBJ_BASE + 12)
#define STDDISPID_XOBJ_ERRORUPDATE                      (DISPID_XOBJ_BASE + 13)
#define STDDISPID_XOBJ_ONDATASETCHANGED                 (DISPID_XOBJ_BASE + 14)
#define STDDISPID_XOBJ_ONDATAAVAILABLE                  (DISPID_XOBJ_BASE + 15)
#define STDDISPID_XOBJ_ONDATASETCOMPLETE                (DISPID_XOBJ_BASE + 16)
#define STDDISPID_XOBJ_ONFILTER                         (DISPID_XOBJ_BASE + 17)
#define STDDISPID_XOBJ_ONLOSECAPTURE                    (DISPID_XOBJ_BASE + 18)
#define STDDISPID_XOBJ_ONPROPERTYCHANGE                 (DISPID_XOBJ_BASE + 19)
#define STDDISPID_XOBJ_ONDRAG                           (DISPID_XOBJ_BASE + 20)
#define STDDISPID_XOBJ_ONDRAGEND                        (DISPID_XOBJ_BASE + 21)
#define STDDISPID_XOBJ_ONDRAGENTER                      (DISPID_XOBJ_BASE + 22)
#define STDDISPID_XOBJ_ONDRAGOVER                       (DISPID_XOBJ_BASE + 23)
#define STDDISPID_XOBJ_ONDRAGLEAVE                      (DISPID_XOBJ_BASE + 24)
#define STDDISPID_XOBJ_ONDROP                           (DISPID_XOBJ_BASE + 25)
#define STDDISPID_XOBJ_ONCUT                            (DISPID_XOBJ_BASE + 26)
#define STDDISPID_XOBJ_ONCOPY                           (DISPID_XOBJ_BASE + 27)
#define STDDISPID_XOBJ_ONPASTE                          (DISPID_XOBJ_BASE + 28)
#define STDDISPID_XOBJ_ONBEFORECUT                      (DISPID_XOBJ_BASE + 29)
#define STDDISPID_XOBJ_ONBEFORECOPY                     (DISPID_XOBJ_BASE + 30)
#define STDDISPID_XOBJ_ONBEFOREPASTE                    (DISPID_XOBJ_BASE + 31)
#define STDDISPID_XOBJ_ONROWSDELETE                     (DISPID_XOBJ_BASE + 32)
#define STDDISPID_XOBJ_ONROWSINSERTED                   (DISPID_XOBJ_BASE + 33)
#define STDDISPID_XOBJ_ONCELLCHANGE                     (DISPID_XOBJ_BASE + 34)

//;begin_internal
//----------------------------------------------------------------------------
//
//  Base DISPIDs for each class.
//
//  Object and its base classes must use ids in the reserved x-object range.
//
//----------------------------------------------------------------------------
//;end_internal

#define DISPID_NORMAL_FIRST                     1000

//;begin_internal
// Basing the DISPID range past any special DISPID's used by the code.
//;end_internal
#define DISPID_IE8_NORMAL_FIRST                 (DISPID_NORMAL_FIRST+150)
#define DISPID_ANCHOR                           DISPID_NORMAL_FIRST
#define DISPID_BLOCK                            DISPID_NORMAL_FIRST
#define DISPID_BODY                             (DISPID_TEXTSITE + 1000)
#define DISPID_BR                               DISPID_NORMAL_FIRST
#define DISPID_BGSOUND                          DISPID_NORMAL_FIRST
#define DISPID_DD                               DISPID_NORMAL_FIRST
#define DISPID_DIR                              DISPID_NORMAL_FIRST
#define DISPID_DIV                              DISPID_NORMAL_FIRST
#define DISPID_DL                               DISPID_NORMAL_FIRST
#define DISPID_DT                               DISPID_NORMAL_FIRST
#define DISPID_EFONT                            DISPID_NORMAL_FIRST
#define DISPID_FORM                             DISPID_NORMAL_FIRST
#define DISPID_HEADER                           DISPID_NORMAL_FIRST
#define DISPID_HEDELEMS                         DISPID_NORMAL_FIRST
#define DISPID_HR                               DISPID_NORMAL_FIRST
#define DISPID_LABEL                            DISPID_NORMAL_FIRST
#define DISPID_LI                               DISPID_NORMAL_FIRST
#define DISPID_IMGBASE                          DISPID_NORMAL_FIRST
#define DISPID_IMG                              (DISPID_IMGBASE + 1000)
#define DISPID_INPUTIMAGE                       (DISPID_IMGBASE + 1000)
#define DISPID_INPUT                            (DISPID_TEXTSITE + 1000)
#define DISPID_INPUTTEXTBASE                    (DISPID_INPUT+1000)
#define DISPID_INPUTTEXT                        (DISPID_INPUTTEXTBASE+1000)
#define DISPID_MENU                             DISPID_NORMAL_FIRST
#define DISPID_OL                               DISPID_NORMAL_FIRST
#define DISPID_PARA                             DISPID_NORMAL_FIRST
#define DISPID_SELECT                           DISPID_NORMAL_FIRST
#define DISPID_SELECTOBJ                        DISPID_NORMAL_FIRST
#define DISPID_TABLE                            DISPID_NORMAL_FIRST
#define DISPID_TEXTSITE                         DISPID_NORMAL_FIRST
#define DISPID_TEXTAREA                         (DISPID_INPUTTEXT + 1000)
#define DISPID_MARQUEE                          (DISPID_TEXTAREA + 1000)
#define DISPID_RICHTEXT                         (DISPID_MARQUEE + 1000)
#define DISPID_BUTTON                           (DISPID_RICHTEXT + 1000)
#define DISPID_UL                               DISPID_NORMAL_FIRST
#define DISPID_PHRASE                           DISPID_NORMAL_FIRST
#define DISPID_UNKNOWNPDL                       DISPID_NORMAL_FIRST
#define DISPID_COMMENTPDL                       DISPID_NORMAL_FIRST
#define DISPID_TABLECELL                        (DISPID_TEXTSITE + 1000)
#define DISPID_RANGE                            DISPID_NORMAL_FIRST
#define DISPID_SELECTION                        DISPID_NORMAL_FIRST
#define DISPID_OPTION                           DISPID_NORMAL_FIRST
#define DISPID_1D                               (DISPID_TEXTSITE + 1000)
#define DISPID_MAP                              DISPID_NORMAL_FIRST
#define DISPID_AREA                             DISPID_NORMAL_FIRST
#define DISPID_PARAM                            DISPID_NORMAL_FIRST
#define DISPID_TABLESECTION                     DISPID_NORMAL_FIRST
#define DISPID_TABLEROW                         DISPID_NORMAL_FIRST
#define DISPID_TABLECOL                         DISPID_NORMAL_FIRST
#define DISPID_SCRIPT                           DISPID_NORMAL_FIRST
#define DISPID_STYLESHEET                       DISPID_NORMAL_FIRST
#define DISPID_STYLERULE                        DISPID_NORMAL_FIRST
#define DISPID_STYLEPAGE                        DISPID_NORMAL_FIRST
#define DISPID_STYLESHEETS_COL                  DISPID_NORMAL_FIRST
#define DISPID_STYLERULES_COL                   DISPID_NORMAL_FIRST
#define DISPID_STYLEPAGES_COL                   DISPID_NORMAL_FIRST
#define DISPID_MIMETYPES_COL                    DISPID_NORMAL_FIRST
#define DISPID_PLUGINS_COL                      DISPID_NORMAL_FIRST
#define DISPID_2D                               DISPID_NORMAL_FIRST
#define DISPID_OMWINDOW                         DISPID_NORMAL_FIRST
#define DISPID_EVENTOBJ                         DISPID_NORMAL_FIRST
#define DISPID_PERSISTDATA                      DISPID_NORMAL_FIRST
#define DISPID_OLESITE                          DISPID_NORMAL_FIRST
#define DISPID_FRAMESET                         DISPID_NORMAL_FIRST
#define DISPID_LINK                             DISPID_NORMAL_FIRST
#define DISPID_STYLEELEMENT                     DISPID_NORMAL_FIRST
#define DISPID_FILTERS                          DISPID_NORMAL_FIRST
#define DISPID_TABLESECTION                     DISPID_NORMAL_FIRST
#define DISPID_OMRECT                           DISPID_NORMAL_FIRST
#define DISPID_DOMATTRIBUTE                     DISPID_NORMAL_FIRST
#define DISPID_DOMTEXTNODE                      DISPID_NORMAL_FIRST
#define DISPID_GENERIC                          DISPID_NORMAL_FIRST
#define DISPID_URN_COLL                         DISPID_NORMAL_FIRST
#define DISPID_NAMESPACE_COLLECTION             DISPID_NORMAL_FIRST
#define DISPID_NAMESPACE                        DISPID_NORMAL_FIRST
#define DISPID_TAGNAMES_COLLECTION              DISPID_NORMAL_FIRST
#define DISPID_XMLHTTPREQUEST                   DISPID_NORMAL_FIRST
#define DISPID_DOCUMENTCOMPATIBLEINFO_COLLECTION       DISPID_NORMAL_FIRST
#define DISPID_DOCUMENTCOMPATIBLEINFO           DISPID_NORMAL_FIRST
#define DISPID_XDOMAINREQUEST                   DISPID_NORMAL_FIRST
#define DISPID_DOMSTORAGEITEM                   DISPID_NORMAL_FIRST
#define DISPID_DOMSTORAGE                       DISPID_NORMAL_FIRST
#define DISPID_DOMSTORAGELIST                   DISPID_NORMAL_FIRST

#define DISPID_HTMLDOCUMENT                     DISPID_NORMAL_FIRST
#define DISPID_OMDOCUMENT                       DISPID_NORMAL_FIRST
#define DISPID_DATATRANSFER                     DISPID_NORMAL_FIRST
#define DISPID_XMLDECL                          DISPID_NORMAL_FIRST
#define DISPID_DOCFRAG                          DISPID_NORMAL_FIRST
#define DISPID_ILINEINFO                        DISPID_NORMAL_FIRST
#define DISPID_IHTMLCOMPUTEDSTYLE               DISPID_NORMAL_FIRST
//;begin_internal
    // Special case for compatability with IE4 -> therefore the 1:
//;end_internal
#define DISPID_WINDOW                           1
#define DISPID_SCREEN                           DISPID_NORMAL_FIRST
#define DISPID_FRAMESCOLLECTION                 DISPID_NORMAL_FIRST
#define DISPID_HISTORY                          1
#define DISPID_LOCATION                         1
#define DISPID_NAVIGATOR                        1
#define DISPID_COLLECTION                       (DISPID_NORMAL_FIRST+500)
#define DISPID_OPTIONS_COL                      (DISPID_NORMAL_FIRST+500)

#define DISPID_CHECKBOX                         DISPID_NORMAL_FIRST
#define DISPID_RADIO                            (DISPID_CHECKBOX + 1000)

#define DISPID_FRAMESITE                        (DISPID_SITE        + 1000)
#define DISPID_FRAME                            (DISPID_FRAMESITE   + 1000)
#define DISPID_IFRAME                           (DISPID_FRAMESITE   + 1000)

#define WEBOC_DISPIDBASE                        (DISPID_FRAMESITE   + 2000)
#define WEBOC_DISPIDMAX                         (WEBOC_DISPIDBASE   +  100)

#define DISPID_PROTECTEDELEMENT                 DISPID_NORMAL_FIRST
#define DISPID_DEFAULTS                         DISPID_NORMAL_FIRST
#define DISPID_MARKUP                           DISPID_NORMAL_FIRST
#define DISPID_DOMIMPLEMENTATION                DISPID_NORMAL_FIRST

//;begin_internal
//----------------------------------------------------------------------------
//
//  DISPID used for IE8 interfaces in each class
//  just like above except start using DISPID_IE8_NORMAL_FIRST
//  if your < IE8 interface is in the range of DISPID_XOBJ_MIN - DISPID_XOBJ_MAX
//  you need to handle it specially so that there's no conflict
//
//----------------------------------------------------------------------------
//;end_internal

#define DISPID_IE8_ANCHOR                       DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_AREA                         DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_BASE                         DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_BODY                         DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_FORM                         DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_HEAD                         DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_IMG                          DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_INPUT                        DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_LINK                         DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_MOD                          DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_SCRIPT                       DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_ATTR                         DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_NAMEDNODEMAP                 DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_COLLECTION                   DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_PARAM                        DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_EMBED                        DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_BLOCK                        DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_META                         DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_STYLE                        DISPID_IE8_NORMAL_FIRST
#define DISPID_IE8_SELECT                       DISPID_IE8_NORMAL_FIRST

//;begin_internal
    // IE8 ELEMENT fits within DISPID_ELEMENT - DISPID_SITE + 200(account for ELEMENTS current interface DISPIDS)
//;end_internal
#define DISPID_IE8_ELEMENTBASE                  (DISPID_ELEMENT      + 200)
#define DISPID_IE8_ELEMENTMAX                   (DISPID_SITE         - 1)
#define DISPID_IE8_ELEMENT                      DISPID_IE8_ELEMENTBASE

//;begin_internal
    // IE8 FRAMESITE fits within DISPID_FRAMSITE - WEBOC_DISPIDBASE + 20(account for FRAME/IFRAME interface DISPIDS)
//;end_internal
#define DISPID_IE8_FRAMESITEBASE                (DISPID_FRAMESITE   + 1120)
#define DISPID_IE8_FRAMEMAX                     (WEBOC_DISPIDBASE   - 1)
#define DISPID_IE8_FRAME                        DISPID_IE8_FRAMESITEBASE
#define DISPID_IE8_IFRAME                       DISPID_IE8_FRAMESITEBASE

//;begin_internal
    // IE8 OBJECT fits within DISPID_OBJECT - DISPID_STYLE + 30(account for OBJECT interface DISPIDS)
//;end_internal
#define DISPID_IE8_OBJECTBASE                   (DISPID_OBJECT      + 30)
#define DISPID_IE8_OBJECTMAX                    (DISPID_STYLE       - 1)
#define DISPID_IE8_OBJECT                       DISPID_IE8_OBJECTBASE

//;begin_internal
//----------------------------------------------------------------------------
//
//  Reserved negative DISPIDs
//
//----------------------------------------------------------------------------
//;end_internal

#define DISPID_WINDOWOBJECT                     (-5500)
#define DISPID_LOCATIONOBJECT                   (-5506)
#define DISPID_HISTORYOBJECT                    (-5507)
#define DISPID_NAVIGATOROBJECT                  (-5508)
#define DISPID_SECURITYCTX                      (-5511)
#define DISPID_AMBIENT_DLCONTROL                (-5512)
#define DISPID_AMBIENT_USERAGENT                (-5513)
#define DISPID_SECURITYDOMAIN                   (-5514)
//;begin_internal
#define DISPID_DEBUG_ISSECUREPROXY              (-5515)
#define DISPID_DEBUG_TRUSTEDPROXY               (-5516)
#define DISPID_DEBUG_INTERNALWINDOW             (-5517)
#define DISPID_DEBUG_ENABLESECUREPROXYASSERTS   (-5518)
//;end_internal
#define DLCTL_DLIMAGES                          0x00000010
#define DLCTL_VIDEOS                            0x00000020
#define DLCTL_BGSOUNDS                          0x00000040
#define DLCTL_NO_SCRIPTS                        0x00000080
#define DLCTL_NO_JAVA                           0x00000100
#define DLCTL_NO_RUNACTIVEXCTLS                 0x00000200
#define DLCTL_NO_DLACTIVEXCTLS                  0x00000400
#define DLCTL_DOWNLOADONLY                      0x00000800
#define DLCTL_NO_FRAMEDOWNLOAD                  0x00001000
#define DLCTL_RESYNCHRONIZE                     0x00002000
#define DLCTL_PRAGMA_NO_CACHE                   0x00004000
#define DLCTL_NO_BEHAVIORS                      0x00008000
#define DLCTL_NO_METACHARSET                    0x00010000
#define DLCTL_URL_ENCODING_DISABLE_UTF8         0x00020000
#define DLCTL_URL_ENCODING_ENABLE_UTF8          0x00040000
#define DLCTL_NOFRAMES                          0x00080000
#define DLCTL_FORCEOFFLINE                      0x10000000
#define DLCTL_NO_CLIENTPULL                     0x20000000
#define DLCTL_SILENT                            0x40000000
#define DLCTL_OFFLINEIFNOTCONNECTED             0x80000000
#define DLCTL_OFFLINE                           DLCTL_OFFLINEIFNOTCONNECTED

//;begin_internal
//----------------------------------------------------------------------------
//
//  DISPID for each non xobject event
//
//----------------------------------------------------------------------------
//;end_internal

#define DISPID_ONABORT                          (DISPID_NORMAL_FIRST)
#define DISPID_ONCHANGE                         (DISPID_NORMAL_FIRST + 1)
#define DISPID_ONERROR                          (DISPID_NORMAL_FIRST + 2)
#define DISPID_ONLOAD                           (DISPID_NORMAL_FIRST + 3)
#define DISPID_ONSELECT                         (DISPID_NORMAL_FIRST + 6)
#define DISPID_ONSUBMIT                         (DISPID_NORMAL_FIRST + 7)
#define DISPID_ONUNLOAD                         (DISPID_NORMAL_FIRST + 8)
#define DISPID_ONBOUNCE                         (DISPID_NORMAL_FIRST + 9)
#define DISPID_ONFINISH                         (DISPID_NORMAL_FIRST + 10)
#define DISPID_ONSTART                          (DISPID_NORMAL_FIRST + 11)
#define DISPID_ONLAYOUT                         (DISPID_NORMAL_FIRST + 13)
#define DISPID_ONSCROLL                         (DISPID_NORMAL_FIRST + 14)
#define DISPID_ONRESET                          (DISPID_NORMAL_FIRST + 15)
#define DISPID_ONRESIZE                         (DISPID_NORMAL_FIRST + 16)
#define DISPID_ONBEFOREUNLOAD                   (DISPID_NORMAL_FIRST + 17)
#define DISPID_ONCHANGEFOCUS                    (DISPID_NORMAL_FIRST + 18)
#define DISPID_ONCHANGEBLUR                     (DISPID_NORMAL_FIRST + 19)
#define DISPID_ONPERSIST                        (DISPID_NORMAL_FIRST + 20)
#define DISPID_ONPERSISTSAVE                    (DISPID_NORMAL_FIRST + 21)
#define DISPID_ONPERSISTLOAD                    (DISPID_NORMAL_FIRST + 22)
#define DISPID_ONCONTEXTMENU                    (DISPID_NORMAL_FIRST + 23)
#define DISPID_ONBEFOREPRINT                    (DISPID_NORMAL_FIRST + 24)
#define DISPID_ONAFTERPRINT                     (DISPID_NORMAL_FIRST + 25)
#define DISPID_ONSTOP                           (DISPID_NORMAL_FIRST + 26)
#define DISPID_ONBEFOREEDITFOCUS                (DISPID_NORMAL_FIRST + 27)
#define DISPID_ONMOUSEHOVER                     (DISPID_NORMAL_FIRST + 28)
#define DISPID_ONCONTENTREADY                   (DISPID_NORMAL_FIRST + 29)
#define DISPID_ONLAYOUTCOMPLETE                 (DISPID_NORMAL_FIRST + 30)
#define DISPID_ONPAGE                           (DISPID_NORMAL_FIRST + 31)
#define DISPID_ONLINKEDOVERFLOW                 (DISPID_NORMAL_FIRST + 32)
#define DISPID_ONMOUSEWHEEL                     (DISPID_NORMAL_FIRST + 33)
#define DISPID_ONBEFOREDEACTIVATE               (DISPID_NORMAL_FIRST + 34)
#define DISPID_ONMOVE                           (DISPID_NORMAL_FIRST + 35)
#define DISPID_ONCONTROLSELECT                  (DISPID_NORMAL_FIRST + 36)
#define DISPID_ONSELECTIONCHANGE                (DISPID_NORMAL_FIRST + 37)
#define DISPID_ONMOVESTART                      (DISPID_NORMAL_FIRST + 38)
#define DISPID_ONMOVEEND                        (DISPID_NORMAL_FIRST + 39)
#define DISPID_ONRESIZESTART                    (DISPID_NORMAL_FIRST + 40)
#define DISPID_ONRESIZEEND                      (DISPID_NORMAL_FIRST + 41)
#define DISPID_ONMOUSEENTER                     (DISPID_NORMAL_FIRST + 42)
#define DISPID_ONMOUSELEAVE                     (DISPID_NORMAL_FIRST + 43)
#define DISPID_ONACTIVATE                       (DISPID_NORMAL_FIRST + 44)
#define DISPID_ONDEACTIVATE                     (DISPID_NORMAL_FIRST + 45)
#define DISPID_ONMULTILAYOUTCLEANUP             (DISPID_NORMAL_FIRST + 46)
#define DISPID_ONBEFOREACTIVATE                 (DISPID_NORMAL_FIRST + 47)
#define DISPID_ONFOCUSIN                        (DISPID_NORMAL_FIRST + 48)
#define DISPID_ONFOCUSOUT                       (DISPID_NORMAL_FIRST + 49)
#define DISPID_ONVALUECHANGE                    (DISPID_NORMAL_FIRST + 50)
#define DISPID_ONSELECTADD                      (DISPID_NORMAL_FIRST + 51)
#define DISPID_ONSELECTREMOVE                   (DISPID_NORMAL_FIRST + 52)
#define DISPID_ONSELECTWITHIN                   (DISPID_NORMAL_FIRST + 53)
#define DISPID_ONSYSTEMSCROLLINGSTART           (DISPID_NORMAL_FIRST + 54)
#define DISPID_ONSYSTEMSCROLLINGEND             (DISPID_NORMAL_FIRST + 55)
#define DISPID_ONOBJECTCONTENTSCROLLED          (DISPID_NORMAL_FIRST + 56)
#define DISPID_ONSTORAGE                        (DISPID_NORMAL_FIRST + 57)
#define DISPID_ONSTORAGECOMMIT                  (DISPID_NORMAL_FIRST + 58)
#define DISPID_ONSHOW                           (DISPID_NORMAL_FIRST + 59)
#define DISPID_ONHIDE                           (DISPID_NORMAL_FIRST + 60)
#define DISPID_ONALERT                          (DISPID_NORMAL_FIRST + 61)
#define DISPID_ONPOPUPMENUSTART                 (DISPID_NORMAL_FIRST + 62)
#define DISPID_ONPOPUPMENUEND                   (DISPID_NORMAL_FIRST + 63)
#define DISPID_ONONLINE                         (DISPID_NORMAL_FIRST + 64)
#define DISPID_ONOFFLINE                        (DISPID_NORMAL_FIRST + 65)
#define DISPID_ONHASHCHANGE                     (DISPID_NORMAL_FIRST + 66)
#define DISPID_ONMESSAGE                        (DISPID_NORMAL_FIRST + 67)
#define DISPID_ONDOMMUTATION                    (DISPID_NORMAL_FIRST + 68)

//;begin_internal
//----------------------------------------------------------------------------
//
//  DISPID for each unique HtmlAttribute/CssAttribute
//
//----------------------------------------------------------------------------
//;end_internal

#define DISPID_A_FIRST                          DISPID_ATTRS
#define DISPID_A_MIN                            DISPID_ATTRS
#define DISPID_A_MAX                            (DISPID_ATTRS+999)

#define DISPID_A_BACKGROUNDIMAGE                (DISPID_A_FIRST+1)
#define DISPID_A_COLOR                          (DISPID_A_FIRST+2)
#define DISPID_A_TEXTTRANSFORM                  (DISPID_A_FIRST+4)
#define DISPID_A_NOWRAP                         (DISPID_A_FIRST+5)
#define DISPID_A_LINEHEIGHT                     (DISPID_A_FIRST+6)
#define DISPID_A_TEXTINDENT                     (DISPID_A_FIRST+7)
#define DISPID_A_LETTERSPACING                  (DISPID_A_FIRST+8)
#define DISPID_A_LANG                           (DISPID_A_FIRST+9)
#define DISPID_A_OVERFLOW                       (DISPID_A_FIRST+10)

#define DISPID_A_PADDING                        (DISPID_A_FIRST+11)
#define DISPID_A_PADDINGTOP                     (DISPID_A_FIRST+12)
#define DISPID_A_PADDINGRIGHT                   (DISPID_A_FIRST+13)
#define DISPID_A_PADDINGBOTTOM                  (DISPID_A_FIRST+14)
#define DISPID_A_PADDINGLEFT                    (DISPID_A_FIRST+15)

#define DISPID_A_CLEAR                          (DISPID_A_FIRST+16)
#define DISPID_A_LISTTYPE                       (DISPID_A_FIRST+17)
#define DISPID_A_FONTFACE                       (DISPID_A_FIRST+18)
#define DISPID_A_FONTSIZE                       (DISPID_A_FIRST+19)

#define DISPID_A_TEXTDECORATIONLINETHROUGH      (DISPID_A_FIRST+20)
#define DISPID_A_TEXTDECORATIONUNDERLINE        (DISPID_A_FIRST+21)
#define DISPID_A_TEXTDECORATIONBLINK            (DISPID_A_FIRST+22)
#define DISPID_A_TEXTDECORATIONNONE             (DISPID_A_FIRST+23)


#define DISPID_A_FONTSTYLE                      (DISPID_A_FIRST+24)
#define DISPID_A_FONTVARIANT                    (DISPID_A_FIRST+25)
#define DISPID_A_BASEFONT                       (DISPID_A_FIRST+26)
#define DISPID_A_FONTWEIGHT                     (DISPID_A_FIRST+27)

#define DISPID_A_TABLEBORDERCOLOR               (DISPID_A_FIRST+28)
#define DISPID_A_TABLEBORDERCOLORLIGHT          (DISPID_A_FIRST+29)
#define DISPID_A_TABLEBORDERCOLORDARK           (DISPID_A_FIRST+30)
#define DISPID_A_TABLEVALIGN                    (DISPID_A_FIRST+31)

#define DISPID_A_BACKGROUND                     (DISPID_A_FIRST+32)
#define DISPID_A_BACKGROUNDPOSX                 (DISPID_A_FIRST+33)
#define DISPID_A_BACKGROUNDPOSY                 (DISPID_A_FIRST+34)

#define DISPID_A_TEXTDECORATION                 (DISPID_A_FIRST+35)

#define DISPID_A_MARGIN                         (DISPID_A_FIRST+36)
#define DISPID_A_MARGINTOP                      (DISPID_A_FIRST+37)
#define DISPID_A_MARGINRIGHT                    (DISPID_A_FIRST+38)
#define DISPID_A_MARGINBOTTOM                   (DISPID_A_FIRST+39)
#define DISPID_A_MARGINLEFT                     (DISPID_A_FIRST+40)

#define DISPID_A_FONT                           (DISPID_A_FIRST+41)
#define DISPID_A_FONTSIZEKEYWORD                (DISPID_A_FIRST+42)
#define DISPID_A_FONTSIZECOMBINE                (DISPID_A_FIRST+43)

#define DISPID_A_BACKGROUNDREPEAT               (DISPID_A_FIRST+44)
#define DISPID_A_BACKGROUNDATTACHMENT           (DISPID_A_FIRST+45)
#define DISPID_A_BACKGROUNDPOSITION             (DISPID_A_FIRST+46)
#define DISPID_A_WORDSPACING                    (DISPID_A_FIRST+47)
#define DISPID_A_VERTICALALIGN                  (DISPID_A_FIRST+48)
#define DISPID_A_BORDER                         (DISPID_A_FIRST+49)
#define DISPID_A_BORDERTOP                      (DISPID_A_FIRST+50)
#define DISPID_A_BORDERRIGHT                    (DISPID_A_FIRST+51)
#define DISPID_A_BORDERBOTTOM                   (DISPID_A_FIRST+52)
#define DISPID_A_BORDERLEFT                     (DISPID_A_FIRST+53)
#define DISPID_A_BORDERCOLOR                    (DISPID_A_FIRST+54)
#define DISPID_A_BORDERTOPCOLOR                 (DISPID_A_FIRST+55)
#define DISPID_A_BORDERRIGHTCOLOR               (DISPID_A_FIRST+56)
#define DISPID_A_BORDERBOTTOMCOLOR              (DISPID_A_FIRST+57)
#define DISPID_A_BORDERLEFTCOLOR                (DISPID_A_FIRST+58)
#define DISPID_A_BORDERWIDTH                    (DISPID_A_FIRST+59)
#define DISPID_A_BORDERTOPWIDTH                 (DISPID_A_FIRST+60)
#define DISPID_A_BORDERRIGHTWIDTH               (DISPID_A_FIRST+61)
#define DISPID_A_BORDERBOTTOMWIDTH              (DISPID_A_FIRST+62)
#define DISPID_A_BORDERLEFTWIDTH                (DISPID_A_FIRST+63)
#define DISPID_A_BORDERSTYLE                    (DISPID_A_FIRST+64)
#define DISPID_A_BORDERTOPSTYLE                 (DISPID_A_FIRST+65)
#define DISPID_A_BORDERRIGHTSTYLE               (DISPID_A_FIRST+66)
#define DISPID_A_BORDERBOTTOMSTYLE              (DISPID_A_FIRST+67)
#define DISPID_A_BORDERLEFTSTYLE                (DISPID_A_FIRST+68)
#define DISPID_A_TEXTDECORATIONOVERLINE         (DISPID_A_FIRST+69)
#define DISPID_A_FLOAT                          (DISPID_A_FIRST+70)
#define DISPID_A_DISPLAY                        (DISPID_A_FIRST+71)
#define DISPID_A_LISTSTYLETYPE                  (DISPID_A_FIRST+72)
#define DISPID_A_LISTSTYLEPOSITION              (DISPID_A_FIRST+73)
#define DISPID_A_LISTSTYLEIMAGE                 (DISPID_A_FIRST+74)
#define DISPID_A_LISTSTYLE                      (DISPID_A_FIRST+75)
#define DISPID_A_WHITESPACE                     (DISPID_A_FIRST+76)
#define DISPID_A_PAGEBREAKBEFORE                (DISPID_A_FIRST+77)
#define DISPID_A_PAGEBREAKAFTER                 (DISPID_A_FIRST+78)
#define DISPID_A_SCROLL                         (DISPID_A_FIRST+79)
#define DISPID_A_VISIBILITY                     (DISPID_A_FIRST+80)
//;begin_internal
// This dispid is available
#define DISPID_A_HIDDEN                         (DISPID_A_FIRST+81)
//;end_internal
#define DISPID_A_FILTER                         (DISPID_A_FIRST+82)

#define DISPID_DEFAULTVALUE                     (DISPID_A_FIRST+83)

#define DISPID_A_BORDERCOLLAPSE                 (DISPID_A_FIRST+84)

#define DISPID_A_POSITION                       (DISPID_A_FIRST+90)
#define DISPID_A_ZINDEX                         (DISPID_A_FIRST+91)
#define DISPID_A_CLIP                           (DISPID_A_FIRST+92)
#define DISPID_A_CLIPRECTTOP                    (DISPID_A_FIRST+93)
#define DISPID_A_CLIPRECTRIGHT                  (DISPID_A_FIRST+94)
#define DISPID_A_CLIPRECTBOTTOM                 (DISPID_A_FIRST+95)
#define DISPID_A_CLIPRECTLEFT                   (DISPID_A_FIRST+96)

#define DISPID_A_FONTFACESRC                    (DISPID_A_FIRST+97)
#define DISPID_A_TABLELAYOUT                    (DISPID_A_FIRST+98)

//;begin_internal
// The style as a text string
//;end_internal
#define DISPID_A_STYLETEXT                      (DISPID_A_FIRST+99)

//;begin_internal
// Known attributes that have special meaning
//;end_internal
#define DISPID_A_LANGUAGE                       (DISPID_A_FIRST+100)

#define DISPID_A_VALUE                          (DISPID_A_FIRST+101)
#define DISPID_A_CURSOR                         (DISPID_A_FIRST+102)


//;begin_internal
//+-----------------------------------------------------------------------
//  A couple of dispids that are used internally for firing
//  events and prop notifies.
// Keep all the internal dispid's together, otherwise we'll trip up

#define DISPID_A_EVENTSINK                      (DISPID_A_FIRST+103)
#define DISPID_A_PROPNOTIFYSINK                 (DISPID_A_FIRST+104)
#define DISPID_A_ROWSETNOTIFYSINK               (DISPID_A_FIRST+105)
#define DISPID_INTERNAL_INLINESTYLEAA           (DISPID_A_FIRST+106) // In line style Attr Array
#define DISPID_INTERNAL_CSTYLEPTRCACHE          (DISPID_A_FIRST+107) // Cached CStyle Ptr
#define DISPID_INTERNAL_CRUNTIMESTYLEPTRCACHE   (DISPID_A_FIRST+108) // runtime style ptr obj
#define DISPID_INTERNAL_INVOKECONTEXT           (DISPID_A_FIRST+109) // Cached Invoke context

#define DISPID_A_BGURLIMGCTXCACHEINDEX          (DISPID_A_FIRST+110)
#define DISPID_A_LIURLIMGCTXCACHEINDEX          (DISPID_A_FIRST+111)
#define DISPID_A_ROWSETASYNCHNOTIFYSINK         (DISPID_A_FIRST+112)
#define DISPID_INTERNAL_FILTERPTRCACHE          (DISPID_A_FIRST+113) // FilterCollection in AttrArray
#define DISPID_A_ROWPOSITIONCHANGESINK          (DISPID_A_FIRST+114)
//;end_internal

#define DISPID_A_BEHAVIOR                       (DISPID_A_FIRST+115) // xtags
#define DISPID_A_READYSTATE                     (DISPID_A_FIRST+116) // ready state

#define DISPID_A_DIR                            (DISPID_A_FIRST+117) // Complex Text support for bidi
#define DISPID_A_UNICODEBIDI                    (DISPID_A_FIRST+118) // Complex Text support for CSS2 unicode-bidi
#define DISPID_A_DIRECTION                      (DISPID_A_FIRST+119) // Complex Text support for CSS2 direction

#define DISPID_A_IMEMODE                        (DISPID_A_FIRST+120)

#define DISPID_A_RUBYALIGN                      (DISPID_A_FIRST+121)
#define DISPID_A_RUBYPOSITION                   (DISPID_A_FIRST+122)
#define DISPID_A_RUBYOVERHANG                   (DISPID_A_FIRST+123)

//;begin_internal
#define DISPID_INTERNAL_ONBEHAVIOR_CONTENTREADY  (DISPID_A_FIRST+124)
#define DISPID_INTERNAL_ONBEHAVIOR_DOCUMENTREADY (DISPID_A_FIRST+125)
#define DISPID_INTERNAL_CDOMCHILDRENPTRCACHE     (DISPID_A_FIRST+126)
//;end_internal

#define DISPID_A_LAYOUTGRIDCHAR                 (DISPID_A_FIRST+127)
#define DISPID_A_LAYOUTGRIDLINE                 (DISPID_A_FIRST+128)
#define DISPID_A_LAYOUTGRIDMODE                 (DISPID_A_FIRST+129)
#define DISPID_A_LAYOUTGRIDTYPE                 (DISPID_A_FIRST+130)
#define DISPID_A_LAYOUTGRID                     (DISPID_A_FIRST+131)

#define DISPID_A_TEXTAUTOSPACE                  (DISPID_A_FIRST+132)

#define DISPID_A_LINEBREAK                      (DISPID_A_FIRST+133)
#define DISPID_A_WORDBREAK                      (DISPID_A_FIRST+134)

#define DISPID_A_TEXTJUSTIFY                    (DISPID_A_FIRST+135)
#define DISPID_A_TEXTJUSTIFYTRIM                (DISPID_A_FIRST+136)
#define DISPID_A_TEXTKASHIDA                    (DISPID_A_FIRST+137)

#define DISPID_A_OVERFLOWX                      (DISPID_A_FIRST+139)
#define DISPID_A_OVERFLOWY                      (DISPID_A_FIRST+140)

#define DISPID_A_HTCDISPATCHITEM_VALUE          (DISPID_A_FIRST+141)
#define DISPID_A_DOCFRAGMENT                    (DISPID_A_FIRST+142)

#define DISPID_A_HTCDD_ELEMENT                  (DISPID_A_FIRST+143)
#define DISPID_A_HTCDD_CREATEEVENTOBJECT        (DISPID_A_FIRST+144)

#define DISPID_A_URNATOM                        (DISPID_A_FIRST+145)
#define DISPID_A_UNIQUEPEERNUMBER               (DISPID_A_FIRST+146)

#define DISPID_A_ACCELERATOR                    (DISPID_A_FIRST+147)

//;begin_internal
#define DISPID_INTERNAL_ONBEHAVIOR_APPLYSTYLE       (DISPID_A_FIRST+148)
#define DISPID_INTERNAL_RUNTIMESTYLEAA              (DISPID_A_FIRST+149)
#define DISPID_A_HTCDISPATCHITEM_VALUE_SCRIPTSONLY  (DISPID_A_FIRST+150)
//;end_internal

#define DISPID_A_EXTENDEDTAGDESC                (DISPID_A_FIRST+151)

#define DISPID_A_ROTATE                         (DISPID_A_FIRST+152)
#define DISPID_A_ZOOM                           (DISPID_A_FIRST+153)

#define DISPID_A_HTCDD_PROTECTEDELEMENT         (DISPID_A_FIRST+154)
#define DISPID_A_LAYOUTFLOW                     (DISPID_A_FIRST+155)
// DISPID_A_FIRST+156 unused -- removing 'rectangular'
// #define DISPID_A_RECTANGULAR                    (DISPID_A_FIRST+156)

#define DISPID_A_HTCDD_ISMARKUPSHARED           (DISPID_A_FIRST+157)
#define DISPID_A_WORDWRAP                       (DISPID_A_FIRST+158)
#define DISPID_A_TEXTUNDERLINEPOSITION          (DISPID_A_FIRST+159)
#define DISPID_A_HASLAYOUT                      (DISPID_A_FIRST+160)
#define DISPID_A_MEDIA                          (DISPID_A_FIRST+161)
#define DISPID_A_EDITABLE                       (DISPID_A_FIRST+162)
#define DISPID_A_HIDEFOCUS                      (DISPID_A_FIRST+163)

//;begin_internal
#define DISPID_INTERNAL_LAYOUTRECTREGISTRYPTRCACHE  (DISPID_A_FIRST+164)
//;end_internal

#define DISPID_A_HTCDD_DEFAULTS                 (DISPID_A_FIRST+165)

#define DISPID_A_TEXTLINETHROUGHSTYLE           (DISPID_A_FIRST+166)
#define DISPID_A_TEXTUNDERLINESTYLE             (DISPID_A_FIRST+167)
#define DISPID_A_TEXTEFFECT                     (DISPID_A_FIRST+168)
#define DISPID_A_TEXTBACKGROUNDCOLOR            (DISPID_A_FIRST+169)
#define DISPID_A_RENDERINGPRIORITY              (DISPID_A_FIRST+170)

//;begin_internal
#define DISPID_INTERNAL_DWNPOSTPTRCACHE             (DISPID_A_FIRST+171)
#define DISPID_INTERNAL_CODEPAGESETTINGSPTRCACHE    (DISPID_A_FIRST+172)
#define DISPID_INTERNAL_DWNDOCPTRCACHE              (DISPID_A_FIRST+173)
#define DISPID_INTERNAL_DATABINDTASKPTRCACHE        (DISPID_A_FIRST+174)
#define DISPID_INTERNAL_URLLOCATIONCACHE            (DISPID_A_FIRST+175)
#define DISPID_INTERNAL_ARYELEMENTRELEASENOTIFYPTRCACHE (DISPID_A_FIRST+176)
#define DISPID_INTERNAL_PEERFACTORYURLMAPPTRCACHE   (DISPID_A_FIRST+177)
#define DISPID_INTERNAL_STMDIRTYPTRCACHE            (DISPID_A_FIRST+178)
//;end_internal

//;begin_internal
#define DISPID_INTERNAL_COMPUTEFORMATSTATECACHE     (DISPID_A_FIRST+179)
//;end_internal

//
#define DISPID_A_SCROLLBARBASECOLOR             (DISPID_A_FIRST+180)
#define DISPID_A_SCROLLBARFACECOLOR             (DISPID_A_FIRST+181)
#define DISPID_A_SCROLLBAR3DLIGHTCOLOR          (DISPID_A_FIRST+182)
#define DISPID_A_SCROLLBARSHADOWCOLOR           (DISPID_A_FIRST+183)
#define DISPID_A_SCROLLBARHIGHLIGHTCOLOR        (DISPID_A_FIRST+184)
#define DISPID_A_SCROLLBARDARKSHADOWCOLOR       (DISPID_A_FIRST+185)
#define DISPID_A_SCROLLBARARROWCOLOR            (DISPID_A_FIRST+186)

//;begin_internal
#define DISPID_INTERNAL_ONBEHAVIOR_CONTENTSAVE  (DISPID_A_FIRST+187)
//;end_internal

#define DISPID_A_DEFAULTTEXTSELECTION           (DISPID_A_FIRST+188)
#define DISPID_A_TEXTDECORATIONCOLOR            (DISPID_A_FIRST+189)
#define DISPID_A_TEXTCOLOR                      (DISPID_A_FIRST+190)
#define DISPID_A_STYLETEXTDECORATION            (DISPID_A_FIRST+191)

#define DISPID_A_WRITINGMODE                    (DISPID_A_FIRST+192)

//;begin_internal
#define DISPID_INTERNAL_MEDIA_REFERENCE         (DISPID_A_FIRST+193)
#define DISPID_INTERNAL_GENERICCOMPLUSREF       (DISPID_A_FIRST+194)
//;end_internal

//;begin_internal
#define DISPID_INTERNAL_FOCUSITEMS              (DISPID_A_FIRST+195)
//;end_internal

#define DISPID_A_SCROLLBARTRACKCOLOR            (DISPID_A_FIRST+196)

//;begin_internal
#define DISPID_INTERNAL_DWNHEADERCACHE          (DISPID_A_FIRST+197)
//;end_internal

#define DISPID_A_FROZEN                         (DISPID_A_FIRST+198)
#define DISPID_A_VIEWINHERITSTYLE               (DISPID_A_FIRST+199)

//;begin_internal
#define DISPID_INTERNAL_FRAMESCOLLECTION        (DISPID_A_FIRST+200)
//;end_internal

//;begin_internal
#define DISPID_A_BGURLIMGCTXCACHEINDEX_FLINE    (DISPID_A_FIRST+201)
#define DISPID_A_BGURLIMGCTXCACHEINDEX_FLETTER  (DISPID_A_FIRST+202)
//;end_internal

#define DISPID_A_TEXTALIGNLAST                  (DISPID_A_FIRST+203)
#define DISPID_A_TEXTKASHIDASPACE               (DISPID_A_FIRST+204)

//;begin_internal
#define DISPID_INTERNAL_FONTHISTORYINDEX        (DISPID_A_FIRST+205)
//;end_internal

#define DISPID_A_ALLOWTRANSPARENCY              (DISPID_A_FIRST+206)

#define DISPID_INTERNAL_URLSEARCHCACHE          (DISPID_A_FIRST+207)

#define DISPID_A_ISBLOCK                        (DISPID_A_FIRST+208)

#define DISPID_A_TEXTOVERFLOW                   (DISPID_A_FIRST+209)

//;begin_internal
#define DISPID_INTERNAL_CATTRIBUTECOLLPTRCACHE  (DISPID_A_FIRST+210)
//;end_internal

#define DISPID_A_MINHEIGHT                      (DISPID_A_FIRST+211)

//;begin_internal
#define DISPID_INTERNAL_INVOKECONTEXTDOCUMENT   (DISPID_A_FIRST+212)
//;end_internal

#define DISPID_A_INTERPOLATION                  (DISPID_A_FIRST+213)

#define DISPID_A_MAXHEIGHT                      (DISPID_A_FIRST+214)
#define DISPID_A_MINWIDTH                       (DISPID_A_FIRST+215)
#define DISPID_A_MAXWIDTH                       (DISPID_A_FIRST+216)

//;begin_internal
#define DISPID_INTERNAL_ARYOBJECTRELEASECLEANUPPTRCACHE (DISPID_A_FIRST+217)
//;end_internal

#define DISPID_A_CONTENT                        (DISPID_A_FIRST+218)
#define DISPID_A_CAPTIONSIDE                    (DISPID_A_FIRST+219)
#define DISPID_A_COUNTERINCREMENT               (DISPID_A_FIRST+220)
#define DISPID_A_COUNTERRESET                   (DISPID_A_FIRST+221)
#define DISPID_A_OUTLINE                        (DISPID_A_FIRST+222)
#define DISPID_A_OUTLINEWIDTH                   (DISPID_A_FIRST+223)
#define DISPID_A_OUTLINESTYLE                   (DISPID_A_FIRST+224)
#define DISPID_A_OUTLINECOLOR                   (DISPID_A_FIRST+225)
#define DISPID_A_BOXSIZING                      (DISPID_A_FIRST+226)
#define DISPID_A_BORDERSPACING                  (DISPID_A_FIRST+227)
#define DISPID_A_ORPHANS                        (DISPID_A_FIRST+228)
#define DISPID_A_WIDOWS                         (DISPID_A_FIRST+229)
#define DISPID_A_PAGEBREAKINSIDE                (DISPID_A_FIRST+230)

#define DISPID_A_MS_BEHAVIOR                    (DISPID_A_FIRST+231)
#define DISPID_A_MS_SCROLLBARBASECOLOR          (DISPID_A_FIRST+232)
#define DISPID_A_MS_SCROLLBARFACECOLOR          (DISPID_A_FIRST+233)
#define DISPID_A_MS_SCROLLBAR3DLIGHTCOLOR       (DISPID_A_FIRST+234)
#define DISPID_A_MS_SCROLLBARSHADOWCOLOR        (DISPID_A_FIRST+235)
#define DISPID_A_MS_SCROLLBARHIGHLIGHTCOLOR     (DISPID_A_FIRST+236)
#define DISPID_A_MS_SCROLLBARDARKSHADOWCOLOR    (DISPID_A_FIRST+237)
#define DISPID_A_MS_SCROLLBARARROWCOLOR         (DISPID_A_FIRST+238)
#define DISPID_A_MS_SCROLLBARTRACKCOLOR         (DISPID_A_FIRST+239)
#define DISPID_A_MS_TEXTALIGNLAST               (DISPID_A_FIRST+240)
#define DISPID_A_MS_TEXTOVERFLOW                (DISPID_A_FIRST+241)
#define DISPID_A_MS_TEXTUNDERLINEPOSITION       (DISPID_A_FIRST+242)
#define DISPID_A_MS_WRITINGMODE                 (DISPID_A_FIRST+243)
#define DISPID_A_MS_IMEMODE                     (DISPID_A_FIRST+244)
#define DISPID_A_MS_BACKGROUNDPOSX              (DISPID_A_FIRST+245)
#define DISPID_A_MS_BACKGROUNDPOSY              (DISPID_A_FIRST+246)
#define DISPID_A_MS_ACCELERATOR                 (DISPID_A_FIRST+247)
#define DISPID_A_MS_LAYOUTFLOW                  (DISPID_A_FIRST+248)
#define DISPID_A_MS_ZOOM                        (DISPID_A_FIRST+249)
#define DISPID_A_EMPTYCELLS                     (DISPID_A_FIRST+250)
#define DISPID_A_MS_BLOCKPROGRESSION            (DISPID_A_FIRST+251)
#define DISPID_A_QUOTES                         (DISPID_A_FIRST+252)

//;begin_internal
#define DISPID_INTERNAL_BGURLIMGCTXCACHEINDEX_GCBEFORE  (DISPID_A_FIRST+253)
#define DISPID_INTERNAL_BGURLIMGCTXCACHEINDEX_GCAFTER   (DISPID_A_FIRST+254)
#define DISPID_INTERNAL_BGURLIMGCTXCACHEINDEX_URLBEFORE (DISPID_A_FIRST+255)
#define DISPID_INTERNAL_BGURLIMGCTXCACHEINDEX_URLAFTER  (DISPID_A_FIRST+256)
#define DISPID_AAHEADER                                 (DISPID_A_FIRST+257)
#define DISPID_INTERNAL_GETTERSETTERCOLLECTION          (DISPID_A_FIRST+258)
//;end_internal

#define DISPID_A_MS_LAYOUTGRIDCHAR              (DISPID_A_FIRST+259)
#define DISPID_A_MS_LAYOUTGRIDLINE              (DISPID_A_FIRST+260)
#define DISPID_A_MS_LAYOUTGRIDMODE              (DISPID_A_FIRST+261)
#define DISPID_A_MS_LAYOUTGRIDTYPE              (DISPID_A_FIRST+262)
#define DISPID_A_MS_LAYOUTGRID                  (DISPID_A_FIRST+263)
#define DISPID_A_MS_LINEBREAK                   (DISPID_A_FIRST+264)
#define DISPID_A_MS_FILTER                      (DISPID_A_FIRST+265)
#define DISPID_A_MS_OVERFLOWX                   (DISPID_A_FIRST+266)
#define DISPID_A_MS_OVERFLOWY                   (DISPID_A_FIRST+267)
#define DISPID_A_MS_TEXTAUTOSPACE               (DISPID_A_FIRST+268)
#define DISPID_A_MS_TEXTJUSTIFY                 (DISPID_A_FIRST+269)
#define DISPID_A_MS_TEXTKASHIDASPACE            (DISPID_A_FIRST+270)
#define DISPID_A_MS_WORDBREAK                   (DISPID_A_FIRST+271)
#define DISPID_A_MS_WORDWRAP                    (DISPID_A_FIRST+272)

//;begin_internal
#define DISPID_INTERNAL_URIBEFOREREDIRECT       (DISPID_A_FIRST+273)
//;end_internal

//;begin_internal
//------------------------------------------------------------------------
//
//  Event property and method dispids
//
//------------------------------------------------------------------------
//;end_internal

#define DISPID_EVPROP_ONMOUSEOVER           (DISPID_EVENTS +  0)
#define DISPID_EVMETH_ONMOUSEOVER            STDDISPID_XOBJ_ONMOUSEOVER
#define DISPID_EVPROP_ONMOUSEOUT            (DISPID_EVENTS +  1)
#define DISPID_EVMETH_ONMOUSEOUT             STDDISPID_XOBJ_ONMOUSEOUT
#define DISPID_EVPROP_ONMOUSEDOWN           (DISPID_EVENTS +  2)
#define DISPID_EVMETH_ONMOUSEDOWN            DISPID_MOUSEDOWN
#define DISPID_EVPROP_ONMOUSEUP             (DISPID_EVENTS +  3)
#define DISPID_EVMETH_ONMOUSEUP              DISPID_MOUSEUP
#define DISPID_EVPROP_ONMOUSEMOVE           (DISPID_EVENTS +  4)
#define DISPID_EVMETH_ONMOUSEMOVE            DISPID_MOUSEMOVE
#define DISPID_EVPROP_ONKEYDOWN             (DISPID_EVENTS +  5)
#define DISPID_EVMETH_ONKEYDOWN              DISPID_KEYDOWN
#define DISPID_EVPROP_ONKEYUP               (DISPID_EVENTS +  6)
#define DISPID_EVMETH_ONKEYUP                DISPID_KEYUP
#define DISPID_EVPROP_ONKEYPRESS            (DISPID_EVENTS +  7)
#define DISPID_EVMETH_ONKEYPRESS             DISPID_KEYPRESS
#define DISPID_EVPROP_ONCLICK               (DISPID_EVENTS +  8)
#define DISPID_EVMETH_ONCLICK                DISPID_CLICK
#define DISPID_EVPROP_ONDBLCLICK            (DISPID_EVENTS +  9)
#define DISPID_EVMETH_ONDBLCLICK             DISPID_DBLCLICK
#define DISPID_EVPROP_ONSELECT              (DISPID_EVENTS + 10)
#define DISPID_EVMETH_ONSELECT               DISPID_ONSELECT
#define DISPID_EVPROP_ONSUBMIT              (DISPID_EVENTS + 11)
#define DISPID_EVMETH_ONSUBMIT               DISPID_ONSUBMIT
#define DISPID_EVPROP_ONRESET               (DISPID_EVENTS + 12)
#define DISPID_EVMETH_ONRESET                DISPID_ONRESET
#define DISPID_EVPROP_ONHELP                (DISPID_EVENTS + 13)
#define DISPID_EVMETH_ONHELP                 STDDISPID_XOBJ_ONHELP
#define DISPID_EVPROP_ONFOCUS               (DISPID_EVENTS + 14)
#define DISPID_EVMETH_ONFOCUS                STDDISPID_XOBJ_ONFOCUS
#define DISPID_EVPROP_ONBLUR                (DISPID_EVENTS + 15)
#define DISPID_EVMETH_ONBLUR                 STDDISPID_XOBJ_ONBLUR
#define DISPID_EVPROP_ONROWEXIT             (DISPID_EVENTS + 18)
#define DISPID_EVMETH_ONROWEXIT              STDDISPID_XOBJ_ONROWEXIT
#define DISPID_EVPROP_ONROWENTER            (DISPID_EVENTS + 19)
#define DISPID_EVMETH_ONROWENTER             STDDISPID_XOBJ_ONROWENTER
#define DISPID_EVPROP_ONBOUNCE              (DISPID_EVENTS + 20)
#define DISPID_EVMETH_ONBOUNCE               DISPID_ONBOUNCE
#define DISPID_EVPROP_ONBEFOREUPDATE        (DISPID_EVENTS + 21)
#define DISPID_EVMETH_ONBEFOREUPDATE         STDDISPID_XOBJ_BEFOREUPDATE
#define DISPID_EVPROP_ONAFTERUPDATE         (DISPID_EVENTS + 22)
#define DISPID_EVMETH_ONAFTERUPDATE          STDDISPID_XOBJ_AFTERUPDATE
#define DISPID_EVPROP_ONBEFOREDRAGOVER      (DISPID_EVENTS + 23)
#define DISPID_EVMETH_ONBEFOREDRAGOVER       EVENTID_CommonCtrlEvent_BeforeDragOver
#define DISPID_EVPROP_ONBEFOREDROPORPASTE   (DISPID_EVENTS + 24)
#define DISPID_EVMETH_ONBEFOREDROPORPASTE    EVENTID_CommonCtrlEvent_BeforeDropOrPaste
#define DISPID_EVPROP_ONREADYSTATECHANGE    (DISPID_EVENTS + 25)
#define DISPID_EVMETH_ONREADYSTATECHANGE     DISPID_READYSTATECHANGE
#define DISPID_EVPROP_ONFINISH              (DISPID_EVENTS + 26)
#define DISPID_EVMETH_ONFINISH               DISPID_ONFINISH
#define DISPID_EVPROP_ONSTART               (DISPID_EVENTS + 27)
#define DISPID_EVMETH_ONSTART                DISPID_ONSTART
#define DISPID_EVPROP_ONABORT               (DISPID_EVENTS + 28)
#define DISPID_EVMETH_ONABORT                DISPID_ONABORT
#define DISPID_EVPROP_ONERROR               (DISPID_EVENTS + 29)
#define DISPID_EVMETH_ONERROR                DISPID_ONERROR
#define DISPID_EVPROP_ONCHANGE              (DISPID_EVENTS + 30)
#define DISPID_EVMETH_ONCHANGE               DISPID_ONCHANGE
#define DISPID_EVPROP_ONSCROLL              (DISPID_EVENTS + 31)
#define DISPID_EVMETH_ONSCROLL               DISPID_ONSCROLL
#define DISPID_EVPROP_ONLOAD                (DISPID_EVENTS + 32)
#define DISPID_EVMETH_ONLOAD                 DISPID_ONLOAD
#define DISPID_EVPROP_ONUNLOAD              (DISPID_EVENTS + 33)
#define DISPID_EVMETH_ONUNLOAD               DISPID_ONUNLOAD
#define DISPID_EVPROP_ONLAYOUT              (DISPID_EVENTS + 34)
#define DISPID_EVMETH_ONLAYOUT               DISPID_ONLAYOUT
#define DISPID_EVPROP_ONDRAGSTART           (DISPID_EVENTS + 35)
#define DISPID_EVMETH_ONDRAGSTART            STDDISPID_XOBJ_ONDRAGSTART
#define DISPID_EVPROP_ONRESIZE              (DISPID_EVENTS + 36)
#define DISPID_EVMETH_ONRESIZE               DISPID_ONRESIZE
#define DISPID_EVPROP_ONSELECTSTART         (DISPID_EVENTS + 37)
#define DISPID_EVMETH_ONSELECTSTART          STDDISPID_XOBJ_ONSELECTSTART
#define DISPID_EVPROP_ONERRORUPDATE         (DISPID_EVENTS + 38)
#define DISPID_EVMETH_ONERRORUPDATE          STDDISPID_XOBJ_ERRORUPDATE
#define DISPID_EVPROP_ONBEFOREUNLOAD        (DISPID_EVENTS + 39)
#define DISPID_EVMETH_ONBEFOREUNLOAD         DISPID_ONBEFOREUNLOAD
#define DISPID_EVPROP_ONDATASETCHANGED      (DISPID_EVENTS + 40)
#define DISPID_EVMETH_ONDATASETCHANGED       STDDISPID_XOBJ_ONDATASETCHANGED
#define DISPID_EVPROP_ONDATAAVAILABLE       (DISPID_EVENTS + 41)
#define DISPID_EVMETH_ONDATAAVAILABLE        STDDISPID_XOBJ_ONDATAAVAILABLE
#define DISPID_EVPROP_ONDATASETCOMPLETE     (DISPID_EVENTS + 42)
#define DISPID_EVMETH_ONDATASETCOMPLETE      STDDISPID_XOBJ_ONDATASETCOMPLETE
#define DISPID_EVPROP_ONFILTER              (DISPID_EVENTS + 43)
#define DISPID_EVMETH_ONFILTER               STDDISPID_XOBJ_ONFILTER
#define DISPID_EVPROP_ONCHANGEFOCUS         (DISPID_EVENTS + 44)
#define DISPID_EVMETH_ONCHANGEFOCUS          DISPID_ONCHANGEFOCUS
#define DISPID_EVPROP_ONCHANGEBLUR          (DISPID_EVENTS + 45)
#define DISPID_EVMETH_ONCHANGEBLUR           DISPID_ONCHANGEBLUR
#define DISPID_EVPROP_ONLOSECAPTURE         (DISPID_EVENTS + 46)
#define DISPID_EVMETH_ONLOSECAPTURE          STDDISPID_XOBJ_ONLOSECAPTURE
#define DISPID_EVPROP_ONPROPERTYCHANGE      (DISPID_EVENTS + 47)
#define DISPID_EVMETH_ONPROPERTYCHANGE       STDDISPID_XOBJ_ONPROPERTYCHANGE
#define DISPID_EVPROP_ONPERSISTSAVE         (DISPID_EVENTS + 48)
#define DISPID_EVMETH_ONPERSISTSAVE          DISPID_ONPERSISTSAVE
#define DISPID_EVPROP_ONDRAG                (DISPID_EVENTS + 49)
#define DISPID_EVMETH_ONDRAG                 STDDISPID_XOBJ_ONDRAG
#define DISPID_EVPROP_ONDRAGEND             (DISPID_EVENTS + 50)
#define DISPID_EVMETH_ONDRAGEND              STDDISPID_XOBJ_ONDRAGEND
#define DISPID_EVPROP_ONDRAGENTER           (DISPID_EVENTS + 51)
#define DISPID_EVMETH_ONDRAGENTER            STDDISPID_XOBJ_ONDRAGENTER
#define DISPID_EVPROP_ONDRAGOVER            (DISPID_EVENTS + 52)
#define DISPID_EVMETH_ONDRAGOVER             STDDISPID_XOBJ_ONDRAGOVER
#define DISPID_EVPROP_ONDRAGLEAVE           (DISPID_EVENTS + 53)
#define DISPID_EVMETH_ONDRAGLEAVE            STDDISPID_XOBJ_ONDRAGLEAVE
#define DISPID_EVPROP_ONDROP                (DISPID_EVENTS + 54)
#define DISPID_EVMETH_ONDROP                 STDDISPID_XOBJ_ONDROP
#define DISPID_EVPROP_ONCUT                 (DISPID_EVENTS + 55)
#define DISPID_EVMETH_ONCUT                  STDDISPID_XOBJ_ONCUT
#define DISPID_EVPROP_ONCOPY                (DISPID_EVENTS + 56)
#define DISPID_EVMETH_ONCOPY                 STDDISPID_XOBJ_ONCOPY
#define DISPID_EVPROP_ONPASTE               (DISPID_EVENTS + 57)
#define DISPID_EVMETH_ONPASTE                STDDISPID_XOBJ_ONPASTE
#define DISPID_EVPROP_ONBEFORECUT           (DISPID_EVENTS + 58)
#define DISPID_EVMETH_ONBEFORECUT            STDDISPID_XOBJ_ONBEFORECUT
#define DISPID_EVPROP_ONBEFORECOPY          (DISPID_EVENTS + 59)
#define DISPID_EVMETH_ONBEFORECOPY           STDDISPID_XOBJ_ONBEFORECOPY
#define DISPID_EVPROP_ONBEFOREPASTE         (DISPID_EVENTS + 60)
#define DISPID_EVMETH_ONBEFOREPASTE          STDDISPID_XOBJ_ONBEFOREPASTE
#define DISPID_EVPROP_ONPERSISTLOAD         (DISPID_EVENTS + 61)
#define DISPID_EVMETH_ONPERSISTLOAD          DISPID_ONPERSISTLOAD
#define DISPID_EVPROP_ONROWSDELETE          (DISPID_EVENTS + 62)
#define DISPID_EVMETH_ONROWSDELETE           STDDISPID_XOBJ_ONROWSDELETE
#define DISPID_EVPROP_ONROWSINSERTED        (DISPID_EVENTS + 63)
#define DISPID_EVMETH_ONROWSINSERTED         STDDISPID_XOBJ_ONROWSINSERTED
#define DISPID_EVPROP_ONCELLCHANGE          (DISPID_EVENTS + 64)
#define DISPID_EVMETH_ONCELLCHANGE           STDDISPID_XOBJ_ONCELLCHANGE
#define DISPID_EVPROP_ONCONTEXTMENU         (DISPID_EVENTS + 65)
#define DISPID_EVMETH_ONCONTEXTMENU          DISPID_ONCONTEXTMENU
#define DISPID_EVPROP_ONBEFOREPRINT         (DISPID_EVENTS + 66)
#define DISPID_EVMETH_ONBEFOREPRINT          DISPID_ONBEFOREPRINT
#define DISPID_EVPROP_ONAFTERPRINT          (DISPID_EVENTS + 67)
#define DISPID_EVMETH_ONAFTERPRINT           DISPID_ONAFTERPRINT
#define DISPID_EVPROP_ONSTOP                (DISPID_EVENTS + 68)
#define DISPID_EVMETH_ONSTOP                DISPID_ONSTOP
#define DISPID_EVPROP_ONBEFOREEDITFOCUS     (DISPID_EVENTS + 69)
#define DISPID_EVMETH_ONBEFOREEDITFOCUS      DISPID_ONBEFOREEDITFOCUS
#define DISPID_EVPROP_ONATTACHEVENT         (DISPID_EVENTS + 70)
#define DISPID_EVPROP_ONMOUSEHOVER          (DISPID_EVENTS + 71)
#define DISPID_EVMETH_ONMOUSEHOVER           DISPID_ONMOUSEHOVER
#define DISPID_EVPROP_ONCONTENTREADY        (DISPID_EVENTS + 72)
#define DISPID_EVMETH_ONCONTENTREADY         DISPID_ONCONTENTREADY
#define DISPID_EVPROP_ONLAYOUTCOMPLETE      (DISPID_EVENTS + 73)
#define DISPID_EVMETH_ONLAYOUTCOMPLETE       DISPID_ONLAYOUTCOMPLETE
#define DISPID_EVPROP_ONPAGE                (DISPID_EVENTS + 74)
#define DISPID_EVMETH_ONPAGE                 DISPID_ONPAGE
#define DISPID_EVPROP_ONLINKEDOVERFLOW      (DISPID_EVENTS + 75)
#define DISPID_EVMETH_ONLINKEDOVERFLOW       DISPID_ONLINKEDOVERFLOW
#define DISPID_EVPROP_ONMOUSEWHEEL          (DISPID_EVENTS + 76)
#define DISPID_EVMETH_ONMOUSEWHEEL           DISPID_ONMOUSEWHEEL
#define DISPID_EVPROP_ONBEFOREDEACTIVATE    (DISPID_EVENTS + 77)
#define DISPID_EVMETH_ONBEFOREDEACTIVATE     DISPID_ONBEFOREDEACTIVATE
#define DISPID_EVPROP_ONMOVE                (DISPID_EVENTS + 78)
#define DISPID_EVMETH_ONMOVE                 DISPID_ONMOVE
#define DISPID_EVPROP_ONCONTROLSELECT       (DISPID_EVENTS + 79)
#define DISPID_EVMETH_ONCONTROLSELECT        DISPID_ONCONTROLSELECT
#define DISPID_EVPROP_ONSELECTIONCHANGE     (DISPID_EVENTS + 80)
#define DISPID_EVMETH_ONSELECTIONCHANGE      DISPID_ONSELECTIONCHANGE
#define DISPID_EVPROP_ONMOVESTART           (DISPID_EVENTS + 81)
#define DISPID_EVMETH_ONMOVESTART            DISPID_ONMOVESTART
#define DISPID_EVPROP_ONMOVEEND             (DISPID_EVENTS + 82)
#define DISPID_EVMETH_ONMOVEEND              DISPID_ONMOVEEND
#define DISPID_EVPROP_ONRESIZESTART         (DISPID_EVENTS + 83)
#define DISPID_EVMETH_ONRESIZESTART          DISPID_ONRESIZESTART
#define DISPID_EVPROP_ONRESIZEEND           (DISPID_EVENTS + 84)
#define DISPID_EVMETH_ONRESIZEEND            DISPID_ONRESIZEEND
#define DISPID_EVPROP_ONMOUSEENTER          (DISPID_EVENTS + 85)
#define DISPID_EVMETH_ONMOUSEENTER           DISPID_ONMOUSEENTER
#define DISPID_EVPROP_ONMOUSELEAVE          (DISPID_EVENTS + 86)
#define DISPID_EVMETH_ONMOUSELEAVE           DISPID_ONMOUSELEAVE
#define DISPID_EVPROP_ONACTIVATE            (DISPID_EVENTS + 87)
#define DISPID_EVMETH_ONACTIVATE             DISPID_ONACTIVATE
#define DISPID_EVPROP_ONDEACTIVATE          (DISPID_EVENTS + 88)
#define DISPID_EVMETH_ONDEACTIVATE           DISPID_ONDEACTIVATE
#define DISPID_EVPROP_ONMULTILAYOUTCLEANUP  (DISPID_EVENTS + 89)
#define DISPID_EVMETH_ONMULTILAYOUTCLEANUP   DISPID_ONMULTILAYOUTCLEANUP
#define DISPID_EVPROP_ONBEFOREACTIVATE      (DISPID_EVENTS + 90)
#define DISPID_EVMETH_ONBEFOREACTIVATE       DISPID_ONBEFOREACTIVATE
#define DISPID_EVPROP_ONFOCUSIN             (DISPID_EVENTS + 91)
#define DISPID_EVMETH_ONFOCUSIN              DISPID_ONFOCUSIN
#define DISPID_EVPROP_ONFOCUSOUT            (DISPID_EVENTS + 92)
#define DISPID_EVMETH_ONFOCUSOUT             DISPID_ONFOCUSOUT
#define DISPID_EVPROP_ONVALUECHANGE         (DISPID_EVENTS + 93)
#define DISPID_EVMETH_ONVALUECHANGE          DISPID_ONVALUECHANGE
#define DISPID_EVPROP_ONSELECTADD           (DISPID_EVENTS + 94)
#define DISPID_EVMETH_ONSELECTADD            DISPID_ONSELECTADD
#define DISPID_EVPROP_ONSELECTREMOVE        (DISPID_EVENTS + 95)
#define DISPID_EVMETH_ONSELECTREMOVE         DISPID_ONSELECTREMOVE
#define DISPID_EVPROP_ONSELECTWITHIN        (DISPID_EVENTS + 96)
#define DISPID_EVMETH_ONSELECTWITHIN         DISPID_ONSELECTWITHIN
#define DISPID_EVPROP_ONSYSTEMSCROLLINGSTART (DISPID_EVENTS + 97)
#define DISPID_EVMETH_ONSYSTEMSCROLLINGSTART DISPID_ONSYSTEMSCROLLINGSTART
#define DISPID_EVPROP_ONSYSTEMSCROLLINGEND   (DISPID_EVENTS + 98)
#define DISPID_EVMETH_ONSYSTEMSCROLLINGEND   DISPID_ONSYSTEMSCROLLINGEND
#define DISPID_EVPROP_ONOBJECTCONTENTSCROLLED   (DISPID_EVENTS + 99)
#define DISPID_EVMETH_ONOBJECTCONTENTSCROLLED   DISPID_ONOBJECTCONTENTSCROLLED
#define DISPID_EVPROP_ONSTORAGE              (DISPID_EVENTS + 100)
#define DISPID_EVMETH_ONSTORAGE              DISPID_ONSTORAGE
#define DISPID_EVPROP_ONSTORAGECOMMIT        (DISPID_EVENTS + 101)
#define DISPID_EVMETH_ONSTORAGECOMMIT        DISPID_ONSTORAGECOMMIT
#define DISPID_EVPROP_ONSHOW                 (DISPID_EVENTS + 102)
#define DISPID_EVMETH_ONSHOW                 DISPID_ONSHOW
#define DISPID_EVPROP_ONHIDE                 (DISPID_EVENTS + 103)
#define DISPID_EVMETH_ONHIDE                 DISPID_ONHIDE
#define DISPID_EVPROP_ONALERT                (DISPID_EVENTS + 104)
#define DISPID_EVMETH_ONALERT                DISPID_ONALERT
#define DISPID_EVPROP_ONPOPUPMENUSTART       (DISPID_EVENTS + 105)
#define DISPID_EVMETH_ONPOPUPMENUSTART       DISPID_ONPOPUPMENUSTART
#define DISPID_EVPROP_ONPOPUPMENUEND         (DISPID_EVENTS + 106)
#define DISPID_EVMETH_ONPOPUPMENUEND         DISPID_ONPOPUPMENUEND
#define DISPID_EVPROP_ONONLINE               (DISPID_EVENTS + 107)
#define DISPID_EVMETH_ONONLINE               DISPID_ONONLINE
#define DISPID_EVPROP_ONOFFLINE              (DISPID_EVENTS + 108)
#define DISPID_EVMETH_ONOFFLINE              DISPID_ONOFFLINE
#define DISPID_EVPROP_ONHASHCHANGE           (DISPID_EVENTS + 109)
#define DISPID_EVMETH_ONHASHCHANGE           DISPID_ONHASHCHANGE
#define DISPID_EVPROP_ONMESSAGE              (DISPID_EVENTS + 110)
#define DISPID_EVMETH_ONMESSAGE              DISPID_ONMESSAGE
#define DISPID_EVPROP_ONDOMMUTATION          (DISPID_EVENTS + 111)
#define DISPID_EVMETH_ONDOMMUTATION          DISPID_ONDOMMUTATION
#define DISPID_EVPROPS_COUNT                 (                112)


//;begin_internal
#endif // __COREDISP_H__
//;end_internal
//    DISPIDs for interface IHTMLFiltersCollection

#define DISPID_IHTMLFILTERSCOLLECTION_LENGTH                      DISPID_FILTERS+1
#define DISPID_IHTMLFILTERSCOLLECTION__NEWENUM                    DISPID_NEWENUM
#define DISPID_IHTMLFILTERSCOLLECTION_ITEM                        DISPID_VALUE

//    DISPIDs for interface IDispatchEx

#define DISPID_IDISPATCHEX_GETDISPID                              
#define DISPID_IDISPATCHEX_INVOKEEX                               
#define DISPID_IDISPATCHEX_DELETEMEMBERBYNAME                     
#define DISPID_IDISPATCHEX_DELETEMEMBERBYDISPID                   
#define DISPID_IDISPATCHEX_GETMEMBERPROPERTIES                    
#define DISPID_IDISPATCHEX_GETMEMBERNAME                          
#define DISPID_IDISPATCHEX_GETNEXTDISPID                          
#define DISPID_IDISPATCHEX_GETNAMESPACEPARENT                     

//    DISPIDs for interface IObjectIdentity

#define DISPID_IOBJECTIDENTITY_ISEQUALOBJECT                      

//    DISPIDs for interface IPerPropertyBrowsing

#define DISPID_IPERPROPERTYBROWSING_GETDISPLAYSTRING              
#define DISPID_IPERPROPERTYBROWSING_MAPPROPERTYTOPAGE             
#define DISPID_IPERPROPERTYBROWSING_GETPREDEFINEDSTRINGS          
#define DISPID_IPERPROPERTYBROWSING_GETPREDEFINEDVALUE            

//    DISPIDs for interface IHTMLDOMConstructor

#define DISPID_IHTMLDOMCONSTRUCTOR_CONSTRUCTOR                    DISPID_HTMLOBJECT+9
#define DISPID_IHTMLDOMCONSTRUCTOR_LOOKUPGETTER                   
#define DISPID_IHTMLDOMCONSTRUCTOR_LOOKUPSETTER                   
#define DISPID_IHTMLDOMCONSTRUCTOR_DEFINEGETTER                   
#define DISPID_IHTMLDOMCONSTRUCTOR_DEFINESETTER                   

//    DISPIDs for interface IHTMLStyle

#define DISPID_IHTMLSTYLE_FONTFAMILY                              DISPID_A_FONTFACE
#define DISPID_IHTMLSTYLE_FONTSTYLE                               DISPID_A_FONTSTYLE
#define DISPID_IHTMLSTYLE_FONTVARIANT                             DISPID_A_FONTVARIANT
#define DISPID_IHTMLSTYLE_FONTWEIGHT                              DISPID_A_FONTWEIGHT
#define DISPID_IHTMLSTYLE_FONTSIZE                                DISPID_A_FONTSIZE
#define DISPID_IHTMLSTYLE_FONT                                    DISPID_A_FONT
#define DISPID_IHTMLSTYLE_COLOR                                   DISPID_A_COLOR
#define DISPID_IHTMLSTYLE_BACKGROUND                              DISPID_A_BACKGROUND
#define DISPID_IHTMLSTYLE_BACKGROUNDCOLOR                         DISPID_BACKCOLOR
#define DISPID_IHTMLSTYLE_BACKGROUNDIMAGE                         DISPID_A_BACKGROUNDIMAGE
#define DISPID_IHTMLSTYLE_BACKGROUNDREPEAT                        DISPID_A_BACKGROUNDREPEAT
#define DISPID_IHTMLSTYLE_BACKGROUNDATTACHMENT                    DISPID_A_BACKGROUNDATTACHMENT
#define DISPID_IHTMLSTYLE_BACKGROUNDPOSITION                      DISPID_A_BACKGROUNDPOSITION
#define DISPID_IHTMLSTYLE_BACKGROUNDPOSITIONX                     DISPID_A_BACKGROUNDPOSX
#define DISPID_IHTMLSTYLE_BACKGROUNDPOSITIONY                     DISPID_A_BACKGROUNDPOSY
#define DISPID_IHTMLSTYLE_WORDSPACING                             DISPID_A_WORDSPACING
#define DISPID_IHTMLSTYLE_LETTERSPACING                           DISPID_A_LETTERSPACING
#define DISPID_IHTMLSTYLE_TEXTDECORATION                          DISPID_A_TEXTDECORATION
#define DISPID_IHTMLSTYLE_TEXTDECORATIONNONE                      DISPID_A_TEXTDECORATIONNONE
#define DISPID_IHTMLSTYLE_TEXTDECORATIONUNDERLINE                 DISPID_A_TEXTDECORATIONUNDERLINE
#define DISPID_IHTMLSTYLE_TEXTDECORATIONOVERLINE                  DISPID_A_TEXTDECORATIONOVERLINE
#define DISPID_IHTMLSTYLE_TEXTDECORATIONLINETHROUGH               DISPID_A_TEXTDECORATIONLINETHROUGH
#define DISPID_IHTMLSTYLE_TEXTDECORATIONBLINK                     DISPID_A_TEXTDECORATIONBLINK
#define DISPID_IHTMLSTYLE_VERTICALALIGN                           DISPID_A_VERTICALALIGN
#define DISPID_IHTMLSTYLE_TEXTTRANSFORM                           DISPID_A_TEXTTRANSFORM
#define DISPID_IHTMLSTYLE_TEXTALIGN                               STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLSTYLE_TEXTINDENT                              DISPID_A_TEXTINDENT
#define DISPID_IHTMLSTYLE_LINEHEIGHT                              DISPID_A_LINEHEIGHT
#define DISPID_IHTMLSTYLE_MARGINTOP                               DISPID_A_MARGINTOP
#define DISPID_IHTMLSTYLE_MARGINRIGHT                             DISPID_A_MARGINRIGHT
#define DISPID_IHTMLSTYLE_MARGINBOTTOM                            DISPID_A_MARGINBOTTOM
#define DISPID_IHTMLSTYLE_MARGINLEFT                              DISPID_A_MARGINLEFT
#define DISPID_IHTMLSTYLE_MARGIN                                  DISPID_A_MARGIN
#define DISPID_IHTMLSTYLE_PADDINGTOP                              DISPID_A_PADDINGTOP
#define DISPID_IHTMLSTYLE_PADDINGRIGHT                            DISPID_A_PADDINGRIGHT
#define DISPID_IHTMLSTYLE_PADDINGBOTTOM                           DISPID_A_PADDINGBOTTOM
#define DISPID_IHTMLSTYLE_PADDINGLEFT                             DISPID_A_PADDINGLEFT
#define DISPID_IHTMLSTYLE_PADDING                                 DISPID_A_PADDING
#define DISPID_IHTMLSTYLE_BORDER                                  DISPID_A_BORDER
#define DISPID_IHTMLSTYLE_BORDERTOP                               DISPID_A_BORDERTOP
#define DISPID_IHTMLSTYLE_BORDERRIGHT                             DISPID_A_BORDERRIGHT
#define DISPID_IHTMLSTYLE_BORDERBOTTOM                            DISPID_A_BORDERBOTTOM
#define DISPID_IHTMLSTYLE_BORDERLEFT                              DISPID_A_BORDERLEFT
#define DISPID_IHTMLSTYLE_BORDERCOLOR                             DISPID_A_BORDERCOLOR
#define DISPID_IHTMLSTYLE_BORDERTOPCOLOR                          DISPID_A_BORDERTOPCOLOR
#define DISPID_IHTMLSTYLE_BORDERRIGHTCOLOR                        DISPID_A_BORDERRIGHTCOLOR
#define DISPID_IHTMLSTYLE_BORDERBOTTOMCOLOR                       DISPID_A_BORDERBOTTOMCOLOR
#define DISPID_IHTMLSTYLE_BORDERLEFTCOLOR                         DISPID_A_BORDERLEFTCOLOR
#define DISPID_IHTMLSTYLE_BORDERWIDTH                             DISPID_A_BORDERWIDTH
#define DISPID_IHTMLSTYLE_BORDERTOPWIDTH                          DISPID_A_BORDERTOPWIDTH
#define DISPID_IHTMLSTYLE_BORDERRIGHTWIDTH                        DISPID_A_BORDERRIGHTWIDTH
#define DISPID_IHTMLSTYLE_BORDERBOTTOMWIDTH                       DISPID_A_BORDERBOTTOMWIDTH
#define DISPID_IHTMLSTYLE_BORDERLEFTWIDTH                         DISPID_A_BORDERLEFTWIDTH
#define DISPID_IHTMLSTYLE_BORDERSTYLE                             DISPID_A_BORDERSTYLE
#define DISPID_IHTMLSTYLE_BORDERTOPSTYLE                          DISPID_A_BORDERTOPSTYLE
#define DISPID_IHTMLSTYLE_BORDERRIGHTSTYLE                        DISPID_A_BORDERRIGHTSTYLE
#define DISPID_IHTMLSTYLE_BORDERBOTTOMSTYLE                       DISPID_A_BORDERBOTTOMSTYLE
#define DISPID_IHTMLSTYLE_BORDERLEFTSTYLE                         DISPID_A_BORDERLEFTSTYLE
#define DISPID_IHTMLSTYLE_WIDTH                                   STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLSTYLE_HEIGHT                                  STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLSTYLE_STYLEFLOAT                              DISPID_A_FLOAT
#define DISPID_IHTMLSTYLE_CLEAR                                   DISPID_A_CLEAR
#define DISPID_IHTMLSTYLE_DISPLAY                                 DISPID_A_DISPLAY
#define DISPID_IHTMLSTYLE_VISIBILITY                              DISPID_A_VISIBILITY
#define DISPID_IHTMLSTYLE_LISTSTYLETYPE                           DISPID_A_LISTSTYLETYPE
#define DISPID_IHTMLSTYLE_LISTSTYLEPOSITION                       DISPID_A_LISTSTYLEPOSITION
#define DISPID_IHTMLSTYLE_LISTSTYLEIMAGE                          DISPID_A_LISTSTYLEIMAGE
#define DISPID_IHTMLSTYLE_LISTSTYLE                               DISPID_A_LISTSTYLE
#define DISPID_IHTMLSTYLE_WHITESPACE                              DISPID_A_WHITESPACE
#define DISPID_IHTMLSTYLE_TOP                                     STDPROPID_XOBJ_TOP
#define DISPID_IHTMLSTYLE_LEFT                                    STDPROPID_XOBJ_LEFT
#define DISPID_IHTMLSTYLE_POSITION                                DISPID_A_POSITION
#define DISPID_IHTMLSTYLE_ZINDEX                                  DISPID_A_ZINDEX
#define DISPID_IHTMLSTYLE_OVERFLOW                                DISPID_A_OVERFLOW
#define DISPID_IHTMLSTYLE_PAGEBREAKBEFORE                         DISPID_A_PAGEBREAKBEFORE
#define DISPID_IHTMLSTYLE_PAGEBREAKAFTER                          DISPID_A_PAGEBREAKAFTER
#define DISPID_IHTMLSTYLE_CSSTEXT                                 DISPID_A_STYLETEXT
#define DISPID_IHTMLSTYLE_PIXELTOP                                DISPID_STYLE+0
#define DISPID_IHTMLSTYLE_PIXELLEFT                               DISPID_STYLE+1
#define DISPID_IHTMLSTYLE_PIXELWIDTH                              DISPID_STYLE+2
#define DISPID_IHTMLSTYLE_PIXELHEIGHT                             DISPID_STYLE+3
#define DISPID_IHTMLSTYLE_POSTOP                                  DISPID_STYLE+4
#define DISPID_IHTMLSTYLE_POSLEFT                                 DISPID_STYLE+5
#define DISPID_IHTMLSTYLE_POSWIDTH                                DISPID_STYLE+6
#define DISPID_IHTMLSTYLE_POSHEIGHT                               DISPID_STYLE+7
#define DISPID_IHTMLSTYLE_CURSOR                                  DISPID_A_CURSOR
#define DISPID_IHTMLSTYLE_CLIP                                    DISPID_A_CLIP
#define DISPID_IHTMLSTYLE_FILTER                                  DISPID_A_FILTER
#define DISPID_IHTMLSTYLE_SETATTRIBUTE                            DISPID_HTMLOBJECT+1
#define DISPID_IHTMLSTYLE_GETATTRIBUTE                            DISPID_HTMLOBJECT+2
#define DISPID_IHTMLSTYLE_REMOVEATTRIBUTE                         DISPID_HTMLOBJECT+3
#define DISPID_IHTMLSTYLE_TOSTRING                                DISPID_STYLE+8

//    DISPIDs for interface IHTMLStyle2

#define DISPID_IHTMLSTYLE2_TABLELAYOUT                            DISPID_A_TABLELAYOUT
#define DISPID_IHTMLSTYLE2_BORDERCOLLAPSE                         DISPID_A_BORDERCOLLAPSE
#define DISPID_IHTMLSTYLE2_DIRECTION                              DISPID_A_DIRECTION
#define DISPID_IHTMLSTYLE2_BEHAVIOR                               DISPID_A_BEHAVIOR
#define DISPID_IHTMLSTYLE2_SETEXPRESSION                          DISPID_HTMLOBJECT+4
#define DISPID_IHTMLSTYLE2_GETEXPRESSION                          DISPID_HTMLOBJECT+5
#define DISPID_IHTMLSTYLE2_REMOVEEXPRESSION                       DISPID_HTMLOBJECT+6
#define DISPID_IHTMLSTYLE2_POSITION                               DISPID_A_POSITION
#define DISPID_IHTMLSTYLE2_UNICODEBIDI                            DISPID_A_UNICODEBIDI
#define DISPID_IHTMLSTYLE2_BOTTOM                                 STDPROPID_XOBJ_BOTTOM
#define DISPID_IHTMLSTYLE2_RIGHT                                  STDPROPID_XOBJ_RIGHT
#define DISPID_IHTMLSTYLE2_PIXELBOTTOM                            DISPID_STYLE+9
#define DISPID_IHTMLSTYLE2_PIXELRIGHT                             DISPID_STYLE+10
#define DISPID_IHTMLSTYLE2_POSBOTTOM                              DISPID_STYLE+11
#define DISPID_IHTMLSTYLE2_POSRIGHT                               DISPID_STYLE+12
#define DISPID_IHTMLSTYLE2_IMEMODE                                DISPID_A_IMEMODE
#define DISPID_IHTMLSTYLE2_RUBYALIGN                              DISPID_A_RUBYALIGN
#define DISPID_IHTMLSTYLE2_RUBYPOSITION                           DISPID_A_RUBYPOSITION
#define DISPID_IHTMLSTYLE2_RUBYOVERHANG                           DISPID_A_RUBYOVERHANG
#define DISPID_IHTMLSTYLE2_LAYOUTGRIDCHAR                         DISPID_A_LAYOUTGRIDCHAR
#define DISPID_IHTMLSTYLE2_LAYOUTGRIDLINE                         DISPID_A_LAYOUTGRIDLINE
#define DISPID_IHTMLSTYLE2_LAYOUTGRIDMODE                         DISPID_A_LAYOUTGRIDMODE
#define DISPID_IHTMLSTYLE2_LAYOUTGRIDTYPE                         DISPID_A_LAYOUTGRIDTYPE
#define DISPID_IHTMLSTYLE2_LAYOUTGRID                             DISPID_A_LAYOUTGRID
#define DISPID_IHTMLSTYLE2_WORDBREAK                              DISPID_A_WORDBREAK
#define DISPID_IHTMLSTYLE2_LINEBREAK                              DISPID_A_LINEBREAK
#define DISPID_IHTMLSTYLE2_TEXTJUSTIFY                            DISPID_A_TEXTJUSTIFY
#define DISPID_IHTMLSTYLE2_TEXTJUSTIFYTRIM                        DISPID_A_TEXTJUSTIFYTRIM
#define DISPID_IHTMLSTYLE2_TEXTKASHIDA                            DISPID_A_TEXTKASHIDA
#define DISPID_IHTMLSTYLE2_TEXTAUTOSPACE                          DISPID_A_TEXTAUTOSPACE
#define DISPID_IHTMLSTYLE2_OVERFLOWX                              DISPID_A_OVERFLOWX
#define DISPID_IHTMLSTYLE2_OVERFLOWY                              DISPID_A_OVERFLOWY
#define DISPID_IHTMLSTYLE2_ACCELERATOR                            DISPID_A_ACCELERATOR

//    DISPIDs for interface IHTMLStyle3

#define DISPID_IHTMLSTYLE3_LAYOUTFLOW                             DISPID_A_LAYOUTFLOW
#define DISPID_IHTMLSTYLE3_ZOOM                                   DISPID_A_ZOOM
#define DISPID_IHTMLSTYLE3_WORDWRAP                               DISPID_A_WORDWRAP
#define DISPID_IHTMLSTYLE3_TEXTUNDERLINEPOSITION                  DISPID_A_TEXTUNDERLINEPOSITION
#define DISPID_IHTMLSTYLE3_SCROLLBARBASECOLOR                     DISPID_A_SCROLLBARBASECOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBARFACECOLOR                     DISPID_A_SCROLLBARFACECOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBAR3DLIGHTCOLOR                  DISPID_A_SCROLLBAR3DLIGHTCOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBARSHADOWCOLOR                   DISPID_A_SCROLLBARSHADOWCOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBARHIGHLIGHTCOLOR                DISPID_A_SCROLLBARHIGHLIGHTCOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBARDARKSHADOWCOLOR               DISPID_A_SCROLLBARDARKSHADOWCOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBARARROWCOLOR                    DISPID_A_SCROLLBARARROWCOLOR
#define DISPID_IHTMLSTYLE3_SCROLLBARTRACKCOLOR                    DISPID_A_SCROLLBARTRACKCOLOR
#define DISPID_IHTMLSTYLE3_WRITINGMODE                            DISPID_A_WRITINGMODE
#define DISPID_IHTMLSTYLE3_TEXTALIGNLAST                          DISPID_A_TEXTALIGNLAST
#define DISPID_IHTMLSTYLE3_TEXTKASHIDASPACE                       DISPID_A_TEXTKASHIDASPACE

//    DISPIDs for interface IHTMLStyle4

#define DISPID_IHTMLSTYLE4_TEXTOVERFLOW                           DISPID_A_TEXTOVERFLOW
#define DISPID_IHTMLSTYLE4_MINHEIGHT                              DISPID_A_MINHEIGHT

//    DISPIDs for interface IHTMLStyle5

#define DISPID_IHTMLSTYLE5_MSINTERPOLATIONMODE                    DISPID_A_INTERPOLATION
#define DISPID_IHTMLSTYLE5_MAXHEIGHT                              DISPID_A_MAXHEIGHT
#define DISPID_IHTMLSTYLE5_MINWIDTH                               DISPID_A_MINWIDTH
#define DISPID_IHTMLSTYLE5_MAXWIDTH                               DISPID_A_MAXWIDTH

//    DISPIDs for interface IHTMLStyle6

#define DISPID_IHTMLSTYLE6_CONTENT                                DISPID_A_CONTENT
#define DISPID_IHTMLSTYLE6_CAPTIONSIDE                            DISPID_A_CAPTIONSIDE
#define DISPID_IHTMLSTYLE6_COUNTERINCREMENT                       DISPID_A_COUNTERINCREMENT
#define DISPID_IHTMLSTYLE6_COUNTERRESET                           DISPID_A_COUNTERRESET
#define DISPID_IHTMLSTYLE6_OUTLINE                                DISPID_A_OUTLINE
#define DISPID_IHTMLSTYLE6_OUTLINEWIDTH                           DISPID_A_OUTLINEWIDTH
#define DISPID_IHTMLSTYLE6_OUTLINESTYLE                           DISPID_A_OUTLINESTYLE
#define DISPID_IHTMLSTYLE6_OUTLINECOLOR                           DISPID_A_OUTLINECOLOR
#define DISPID_IHTMLSTYLE6_BOXSIZING                              DISPID_A_BOXSIZING
#define DISPID_IHTMLSTYLE6_BORDERSPACING                          DISPID_A_BORDERSPACING
#define DISPID_IHTMLSTYLE6_ORPHANS                                DISPID_A_ORPHANS
#define DISPID_IHTMLSTYLE6_WIDOWS                                 DISPID_A_WIDOWS
#define DISPID_IHTMLSTYLE6_PAGEBREAKINSIDE                        DISPID_A_PAGEBREAKINSIDE
#define DISPID_IHTMLSTYLE6_EMPTYCELLS                             DISPID_A_EMPTYCELLS
#define DISPID_IHTMLSTYLE6_MSBLOCKPROGRESSION                     DISPID_A_MS_BLOCKPROGRESSION
#define DISPID_IHTMLSTYLE6_QUOTES                                 DISPID_A_QUOTES

//    DISPIDs for interface IHTMLRuleStyle

#define DISPID_IHTMLRULESTYLE_FONTFAMILY                          DISPID_A_FONTFACE
#define DISPID_IHTMLRULESTYLE_FONTSTYLE                           DISPID_A_FONTSTYLE
#define DISPID_IHTMLRULESTYLE_FONTVARIANT                         DISPID_A_FONTVARIANT
#define DISPID_IHTMLRULESTYLE_FONTWEIGHT                          DISPID_A_FONTWEIGHT
#define DISPID_IHTMLRULESTYLE_FONTSIZE                            DISPID_A_FONTSIZE
#define DISPID_IHTMLRULESTYLE_FONT                                DISPID_A_FONT
#define DISPID_IHTMLRULESTYLE_COLOR                               DISPID_A_COLOR
#define DISPID_IHTMLRULESTYLE_BACKGROUND                          DISPID_A_BACKGROUND
#define DISPID_IHTMLRULESTYLE_BACKGROUNDCOLOR                     DISPID_BACKCOLOR
#define DISPID_IHTMLRULESTYLE_BACKGROUNDIMAGE                     DISPID_A_BACKGROUNDIMAGE
#define DISPID_IHTMLRULESTYLE_BACKGROUNDREPEAT                    DISPID_A_BACKGROUNDREPEAT
#define DISPID_IHTMLRULESTYLE_BACKGROUNDATTACHMENT                DISPID_A_BACKGROUNDATTACHMENT
#define DISPID_IHTMLRULESTYLE_BACKGROUNDPOSITION                  DISPID_A_BACKGROUNDPOSITION
#define DISPID_IHTMLRULESTYLE_BACKGROUNDPOSITIONX                 DISPID_A_BACKGROUNDPOSX
#define DISPID_IHTMLRULESTYLE_BACKGROUNDPOSITIONY                 DISPID_A_BACKGROUNDPOSY
#define DISPID_IHTMLRULESTYLE_WORDSPACING                         DISPID_A_WORDSPACING
#define DISPID_IHTMLRULESTYLE_LETTERSPACING                       DISPID_A_LETTERSPACING
#define DISPID_IHTMLRULESTYLE_TEXTDECORATION                      DISPID_A_TEXTDECORATION
#define DISPID_IHTMLRULESTYLE_TEXTDECORATIONNONE                  DISPID_A_TEXTDECORATIONNONE
#define DISPID_IHTMLRULESTYLE_TEXTDECORATIONUNDERLINE             DISPID_A_TEXTDECORATIONUNDERLINE
#define DISPID_IHTMLRULESTYLE_TEXTDECORATIONOVERLINE              DISPID_A_TEXTDECORATIONOVERLINE
#define DISPID_IHTMLRULESTYLE_TEXTDECORATIONLINETHROUGH           DISPID_A_TEXTDECORATIONLINETHROUGH
#define DISPID_IHTMLRULESTYLE_TEXTDECORATIONBLINK                 DISPID_A_TEXTDECORATIONBLINK
#define DISPID_IHTMLRULESTYLE_VERTICALALIGN                       DISPID_A_VERTICALALIGN
#define DISPID_IHTMLRULESTYLE_TEXTTRANSFORM                       DISPID_A_TEXTTRANSFORM
#define DISPID_IHTMLRULESTYLE_TEXTALIGN                           STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLRULESTYLE_TEXTINDENT                          DISPID_A_TEXTINDENT
#define DISPID_IHTMLRULESTYLE_LINEHEIGHT                          DISPID_A_LINEHEIGHT
#define DISPID_IHTMLRULESTYLE_MARGINTOP                           DISPID_A_MARGINTOP
#define DISPID_IHTMLRULESTYLE_MARGINRIGHT                         DISPID_A_MARGINRIGHT
#define DISPID_IHTMLRULESTYLE_MARGINBOTTOM                        DISPID_A_MARGINBOTTOM
#define DISPID_IHTMLRULESTYLE_MARGINLEFT                          DISPID_A_MARGINLEFT
#define DISPID_IHTMLRULESTYLE_MARGIN                              DISPID_A_MARGIN
#define DISPID_IHTMLRULESTYLE_PADDINGTOP                          DISPID_A_PADDINGTOP
#define DISPID_IHTMLRULESTYLE_PADDINGRIGHT                        DISPID_A_PADDINGRIGHT
#define DISPID_IHTMLRULESTYLE_PADDINGBOTTOM                       DISPID_A_PADDINGBOTTOM
#define DISPID_IHTMLRULESTYLE_PADDINGLEFT                         DISPID_A_PADDINGLEFT
#define DISPID_IHTMLRULESTYLE_PADDING                             DISPID_A_PADDING
#define DISPID_IHTMLRULESTYLE_BORDER                              DISPID_A_BORDER
#define DISPID_IHTMLRULESTYLE_BORDERTOP                           DISPID_A_BORDERTOP
#define DISPID_IHTMLRULESTYLE_BORDERRIGHT                         DISPID_A_BORDERRIGHT
#define DISPID_IHTMLRULESTYLE_BORDERBOTTOM                        DISPID_A_BORDERBOTTOM
#define DISPID_IHTMLRULESTYLE_BORDERLEFT                          DISPID_A_BORDERLEFT
#define DISPID_IHTMLRULESTYLE_BORDERCOLOR                         DISPID_A_BORDERCOLOR
#define DISPID_IHTMLRULESTYLE_BORDERTOPCOLOR                      DISPID_A_BORDERTOPCOLOR
#define DISPID_IHTMLRULESTYLE_BORDERRIGHTCOLOR                    DISPID_A_BORDERRIGHTCOLOR
#define DISPID_IHTMLRULESTYLE_BORDERBOTTOMCOLOR                   DISPID_A_BORDERBOTTOMCOLOR
#define DISPID_IHTMLRULESTYLE_BORDERLEFTCOLOR                     DISPID_A_BORDERLEFTCOLOR
#define DISPID_IHTMLRULESTYLE_BORDERWIDTH                         DISPID_A_BORDERWIDTH
#define DISPID_IHTMLRULESTYLE_BORDERTOPWIDTH                      DISPID_A_BORDERTOPWIDTH
#define DISPID_IHTMLRULESTYLE_BORDERRIGHTWIDTH                    DISPID_A_BORDERRIGHTWIDTH
#define DISPID_IHTMLRULESTYLE_BORDERBOTTOMWIDTH                   DISPID_A_BORDERBOTTOMWIDTH
#define DISPID_IHTMLRULESTYLE_BORDERLEFTWIDTH                     DISPID_A_BORDERLEFTWIDTH
#define DISPID_IHTMLRULESTYLE_BORDERSTYLE                         DISPID_A_BORDERSTYLE
#define DISPID_IHTMLRULESTYLE_BORDERTOPSTYLE                      DISPID_A_BORDERTOPSTYLE
#define DISPID_IHTMLRULESTYLE_BORDERRIGHTSTYLE                    DISPID_A_BORDERRIGHTSTYLE
#define DISPID_IHTMLRULESTYLE_BORDERBOTTOMSTYLE                   DISPID_A_BORDERBOTTOMSTYLE
#define DISPID_IHTMLRULESTYLE_BORDERLEFTSTYLE                     DISPID_A_BORDERLEFTSTYLE
#define DISPID_IHTMLRULESTYLE_WIDTH                               STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLRULESTYLE_HEIGHT                              STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLRULESTYLE_STYLEFLOAT                          DISPID_A_FLOAT
#define DISPID_IHTMLRULESTYLE_CLEAR                               DISPID_A_CLEAR
#define DISPID_IHTMLRULESTYLE_DISPLAY                             DISPID_A_DISPLAY
#define DISPID_IHTMLRULESTYLE_VISIBILITY                          DISPID_A_VISIBILITY
#define DISPID_IHTMLRULESTYLE_LISTSTYLETYPE                       DISPID_A_LISTSTYLETYPE
#define DISPID_IHTMLRULESTYLE_LISTSTYLEPOSITION                   DISPID_A_LISTSTYLEPOSITION
#define DISPID_IHTMLRULESTYLE_LISTSTYLEIMAGE                      DISPID_A_LISTSTYLEIMAGE
#define DISPID_IHTMLRULESTYLE_LISTSTYLE                           DISPID_A_LISTSTYLE
#define DISPID_IHTMLRULESTYLE_WHITESPACE                          DISPID_A_WHITESPACE
#define DISPID_IHTMLRULESTYLE_TOP                                 STDPROPID_XOBJ_TOP
#define DISPID_IHTMLRULESTYLE_LEFT                                STDPROPID_XOBJ_LEFT
#define DISPID_IHTMLRULESTYLE_POSITION                            DISPID_A_POSITION
#define DISPID_IHTMLRULESTYLE_ZINDEX                              DISPID_A_ZINDEX
#define DISPID_IHTMLRULESTYLE_OVERFLOW                            DISPID_A_OVERFLOW
#define DISPID_IHTMLRULESTYLE_PAGEBREAKBEFORE                     DISPID_A_PAGEBREAKBEFORE
#define DISPID_IHTMLRULESTYLE_PAGEBREAKAFTER                      DISPID_A_PAGEBREAKAFTER
#define DISPID_IHTMLRULESTYLE_CSSTEXT                             DISPID_A_STYLETEXT
#define DISPID_IHTMLRULESTYLE_CURSOR                              DISPID_A_CURSOR
#define DISPID_IHTMLRULESTYLE_CLIP                                DISPID_A_CLIP
#define DISPID_IHTMLRULESTYLE_FILTER                              DISPID_A_FILTER
#define DISPID_IHTMLRULESTYLE_SETATTRIBUTE                        DISPID_HTMLOBJECT+1
#define DISPID_IHTMLRULESTYLE_GETATTRIBUTE                        DISPID_HTMLOBJECT+2
#define DISPID_IHTMLRULESTYLE_REMOVEATTRIBUTE                     DISPID_HTMLOBJECT+3

//    DISPIDs for interface IHTMLRuleStyle2

#define DISPID_IHTMLRULESTYLE2_TABLELAYOUT                        DISPID_A_TABLELAYOUT
#define DISPID_IHTMLRULESTYLE2_BORDERCOLLAPSE                     DISPID_A_BORDERCOLLAPSE
#define DISPID_IHTMLRULESTYLE2_DIRECTION                          DISPID_A_DIRECTION
#define DISPID_IHTMLRULESTYLE2_BEHAVIOR                           DISPID_A_BEHAVIOR
#define DISPID_IHTMLRULESTYLE2_POSITION                           DISPID_A_POSITION
#define DISPID_IHTMLRULESTYLE2_UNICODEBIDI                        DISPID_A_UNICODEBIDI
#define DISPID_IHTMLRULESTYLE2_BOTTOM                             STDPROPID_XOBJ_BOTTOM
#define DISPID_IHTMLRULESTYLE2_RIGHT                              STDPROPID_XOBJ_RIGHT
#define DISPID_IHTMLRULESTYLE2_PIXELBOTTOM                        DISPID_STYLE+9
#define DISPID_IHTMLRULESTYLE2_PIXELRIGHT                         DISPID_STYLE+10
#define DISPID_IHTMLRULESTYLE2_POSBOTTOM                          DISPID_STYLE+11
#define DISPID_IHTMLRULESTYLE2_POSRIGHT                           DISPID_STYLE+12
#define DISPID_IHTMLRULESTYLE2_IMEMODE                            DISPID_A_IMEMODE
#define DISPID_IHTMLRULESTYLE2_RUBYALIGN                          DISPID_A_RUBYALIGN
#define DISPID_IHTMLRULESTYLE2_RUBYPOSITION                       DISPID_A_RUBYPOSITION
#define DISPID_IHTMLRULESTYLE2_RUBYOVERHANG                       DISPID_A_RUBYOVERHANG
#define DISPID_IHTMLRULESTYLE2_LAYOUTGRIDCHAR                     DISPID_A_LAYOUTGRIDCHAR
#define DISPID_IHTMLRULESTYLE2_LAYOUTGRIDLINE                     DISPID_A_LAYOUTGRIDLINE
#define DISPID_IHTMLRULESTYLE2_LAYOUTGRIDMODE                     DISPID_A_LAYOUTGRIDMODE
#define DISPID_IHTMLRULESTYLE2_LAYOUTGRIDTYPE                     DISPID_A_LAYOUTGRIDTYPE
#define DISPID_IHTMLRULESTYLE2_LAYOUTGRID                         DISPID_A_LAYOUTGRID
#define DISPID_IHTMLRULESTYLE2_TEXTAUTOSPACE                      DISPID_A_TEXTAUTOSPACE
#define DISPID_IHTMLRULESTYLE2_WORDBREAK                          DISPID_A_WORDBREAK
#define DISPID_IHTMLRULESTYLE2_LINEBREAK                          DISPID_A_LINEBREAK
#define DISPID_IHTMLRULESTYLE2_TEXTJUSTIFY                        DISPID_A_TEXTJUSTIFY
#define DISPID_IHTMLRULESTYLE2_TEXTJUSTIFYTRIM                    DISPID_A_TEXTJUSTIFYTRIM
#define DISPID_IHTMLRULESTYLE2_TEXTKASHIDA                        DISPID_A_TEXTKASHIDA
#define DISPID_IHTMLRULESTYLE2_OVERFLOWX                          DISPID_A_OVERFLOWX
#define DISPID_IHTMLRULESTYLE2_OVERFLOWY                          DISPID_A_OVERFLOWY
#define DISPID_IHTMLRULESTYLE2_ACCELERATOR                        DISPID_A_ACCELERATOR

//    DISPIDs for interface IHTMLRuleStyle3

#define DISPID_IHTMLRULESTYLE3_LAYOUTFLOW                         DISPID_A_LAYOUTFLOW
#define DISPID_IHTMLRULESTYLE3_ZOOM                               DISPID_A_ZOOM
#define DISPID_IHTMLRULESTYLE3_WORDWRAP                           DISPID_A_WORDWRAP
#define DISPID_IHTMLRULESTYLE3_TEXTUNDERLINEPOSITION              DISPID_A_TEXTUNDERLINEPOSITION
#define DISPID_IHTMLRULESTYLE3_SCROLLBARBASECOLOR                 DISPID_A_SCROLLBARBASECOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBARFACECOLOR                 DISPID_A_SCROLLBARFACECOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBAR3DLIGHTCOLOR              DISPID_A_SCROLLBAR3DLIGHTCOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBARSHADOWCOLOR               DISPID_A_SCROLLBARSHADOWCOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBARHIGHLIGHTCOLOR            DISPID_A_SCROLLBARHIGHLIGHTCOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBARDARKSHADOWCOLOR           DISPID_A_SCROLLBARDARKSHADOWCOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBARARROWCOLOR                DISPID_A_SCROLLBARARROWCOLOR
#define DISPID_IHTMLRULESTYLE3_SCROLLBARTRACKCOLOR                DISPID_A_SCROLLBARTRACKCOLOR
#define DISPID_IHTMLRULESTYLE3_WRITINGMODE                        DISPID_A_WRITINGMODE
#define DISPID_IHTMLRULESTYLE3_TEXTALIGNLAST                      DISPID_A_TEXTALIGNLAST
#define DISPID_IHTMLRULESTYLE3_TEXTKASHIDASPACE                   DISPID_A_TEXTKASHIDASPACE

//    DISPIDs for interface IHTMLRuleStyle4

#define DISPID_IHTMLRULESTYLE4_TEXTOVERFLOW                       DISPID_A_TEXTOVERFLOW
#define DISPID_IHTMLRULESTYLE4_MINHEIGHT                          DISPID_A_MINHEIGHT

//    DISPIDs for interface IHTMLRuleStyle5

#define DISPID_IHTMLRULESTYLE5_MSINTERPOLATIONMODE                DISPID_A_INTERPOLATION
#define DISPID_IHTMLRULESTYLE5_MAXHEIGHT                          DISPID_A_MAXHEIGHT
#define DISPID_IHTMLRULESTYLE5_MINWIDTH                           DISPID_A_MINWIDTH
#define DISPID_IHTMLRULESTYLE5_MAXWIDTH                           DISPID_A_MAXWIDTH

//    DISPIDs for interface IHTMLRuleStyle6

#define DISPID_IHTMLRULESTYLE6_CONTENT                            DISPID_A_CONTENT
#define DISPID_IHTMLRULESTYLE6_CAPTIONSIDE                        DISPID_A_CAPTIONSIDE
#define DISPID_IHTMLRULESTYLE6_COUNTERINCREMENT                   DISPID_A_COUNTERINCREMENT
#define DISPID_IHTMLRULESTYLE6_COUNTERRESET                       DISPID_A_COUNTERRESET
#define DISPID_IHTMLRULESTYLE6_OUTLINE                            DISPID_A_OUTLINE
#define DISPID_IHTMLRULESTYLE6_OUTLINEWIDTH                       DISPID_A_OUTLINEWIDTH
#define DISPID_IHTMLRULESTYLE6_OUTLINESTYLE                       DISPID_A_OUTLINESTYLE
#define DISPID_IHTMLRULESTYLE6_OUTLINECOLOR                       DISPID_A_OUTLINECOLOR
#define DISPID_IHTMLRULESTYLE6_BOXSIZING                          DISPID_A_BOXSIZING
#define DISPID_IHTMLRULESTYLE6_BORDERSPACING                      DISPID_A_BORDERSPACING
#define DISPID_IHTMLRULESTYLE6_ORPHANS                            DISPID_A_ORPHANS
#define DISPID_IHTMLRULESTYLE6_WIDOWS                             DISPID_A_WIDOWS
#define DISPID_IHTMLRULESTYLE6_PAGEBREAKINSIDE                    DISPID_A_PAGEBREAKINSIDE
#define DISPID_IHTMLRULESTYLE6_EMPTYCELLS                         DISPID_A_EMPTYCELLS
#define DISPID_IHTMLRULESTYLE6_MSBLOCKPROGRESSION                 DISPID_A_MS_BLOCKPROGRESSION
#define DISPID_IHTMLRULESTYLE6_QUOTES                             DISPID_A_QUOTES

//    DISPIDs for interface IHTMLRenderStyle

#define DISPID_IHTMLRENDERSTYLE_TEXTLINETHROUGHSTYLE              DISPID_A_TEXTLINETHROUGHSTYLE
#define DISPID_IHTMLRENDERSTYLE_TEXTUNDERLINESTYLE                DISPID_A_TEXTUNDERLINESTYLE
#define DISPID_IHTMLRENDERSTYLE_TEXTEFFECT                        DISPID_A_TEXTEFFECT
#define DISPID_IHTMLRENDERSTYLE_TEXTCOLOR                         DISPID_A_TEXTCOLOR
#define DISPID_IHTMLRENDERSTYLE_TEXTBACKGROUNDCOLOR               DISPID_A_TEXTBACKGROUNDCOLOR
#define DISPID_IHTMLRENDERSTYLE_TEXTDECORATIONCOLOR               DISPID_A_TEXTDECORATIONCOLOR
#define DISPID_IHTMLRENDERSTYLE_RENDERINGPRIORITY                 DISPID_A_RENDERINGPRIORITY
#define DISPID_IHTMLRENDERSTYLE_DEFAULTTEXTSELECTION              DISPID_A_DEFAULTTEXTSELECTION
#define DISPID_IHTMLRENDERSTYLE_TEXTDECORATION                    DISPID_A_STYLETEXTDECORATION

//    DISPIDs for interface IHTMLCurrentStyle

#define DISPID_IHTMLCURRENTSTYLE_POSITION                         DISPID_A_POSITION
#define DISPID_IHTMLCURRENTSTYLE_STYLEFLOAT                       DISPID_A_FLOAT
#define DISPID_IHTMLCURRENTSTYLE_COLOR                            DISPID_A_COLOR
#define DISPID_IHTMLCURRENTSTYLE_BACKGROUNDCOLOR                  DISPID_BACKCOLOR
#define DISPID_IHTMLCURRENTSTYLE_FONTFAMILY                       DISPID_A_FONTFACE
#define DISPID_IHTMLCURRENTSTYLE_FONTSTYLE                        DISPID_A_FONTSTYLE
#define DISPID_IHTMLCURRENTSTYLE_FONTVARIANT                      DISPID_A_FONTVARIANT
#define DISPID_IHTMLCURRENTSTYLE_FONTWEIGHT                       DISPID_A_FONTWEIGHT
#define DISPID_IHTMLCURRENTSTYLE_FONTSIZE                         DISPID_A_FONTSIZE
#define DISPID_IHTMLCURRENTSTYLE_BACKGROUNDIMAGE                  DISPID_A_BACKGROUNDIMAGE
#define DISPID_IHTMLCURRENTSTYLE_BACKGROUNDPOSITIONX              DISPID_A_BACKGROUNDPOSX
#define DISPID_IHTMLCURRENTSTYLE_BACKGROUNDPOSITIONY              DISPID_A_BACKGROUNDPOSY
#define DISPID_IHTMLCURRENTSTYLE_BACKGROUNDREPEAT                 DISPID_A_BACKGROUNDREPEAT
#define DISPID_IHTMLCURRENTSTYLE_BORDERLEFTCOLOR                  DISPID_A_BORDERLEFTCOLOR
#define DISPID_IHTMLCURRENTSTYLE_BORDERTOPCOLOR                   DISPID_A_BORDERTOPCOLOR
#define DISPID_IHTMLCURRENTSTYLE_BORDERRIGHTCOLOR                 DISPID_A_BORDERRIGHTCOLOR
#define DISPID_IHTMLCURRENTSTYLE_BORDERBOTTOMCOLOR                DISPID_A_BORDERBOTTOMCOLOR
#define DISPID_IHTMLCURRENTSTYLE_BORDERTOPSTYLE                   DISPID_A_BORDERTOPSTYLE
#define DISPID_IHTMLCURRENTSTYLE_BORDERRIGHTSTYLE                 DISPID_A_BORDERRIGHTSTYLE
#define DISPID_IHTMLCURRENTSTYLE_BORDERBOTTOMSTYLE                DISPID_A_BORDERBOTTOMSTYLE
#define DISPID_IHTMLCURRENTSTYLE_BORDERLEFTSTYLE                  DISPID_A_BORDERLEFTSTYLE
#define DISPID_IHTMLCURRENTSTYLE_BORDERTOPWIDTH                   DISPID_A_BORDERTOPWIDTH
#define DISPID_IHTMLCURRENTSTYLE_BORDERRIGHTWIDTH                 DISPID_A_BORDERRIGHTWIDTH
#define DISPID_IHTMLCURRENTSTYLE_BORDERBOTTOMWIDTH                DISPID_A_BORDERBOTTOMWIDTH
#define DISPID_IHTMLCURRENTSTYLE_BORDERLEFTWIDTH                  DISPID_A_BORDERLEFTWIDTH
#define DISPID_IHTMLCURRENTSTYLE_LEFT                             STDPROPID_XOBJ_LEFT
#define DISPID_IHTMLCURRENTSTYLE_TOP                              STDPROPID_XOBJ_TOP
#define DISPID_IHTMLCURRENTSTYLE_WIDTH                            STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLCURRENTSTYLE_HEIGHT                           STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLCURRENTSTYLE_PADDINGLEFT                      DISPID_A_PADDINGLEFT
#define DISPID_IHTMLCURRENTSTYLE_PADDINGTOP                       DISPID_A_PADDINGTOP
#define DISPID_IHTMLCURRENTSTYLE_PADDINGRIGHT                     DISPID_A_PADDINGRIGHT
#define DISPID_IHTMLCURRENTSTYLE_PADDINGBOTTOM                    DISPID_A_PADDINGBOTTOM
#define DISPID_IHTMLCURRENTSTYLE_TEXTALIGN                        STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLCURRENTSTYLE_TEXTDECORATION                   DISPID_A_TEXTDECORATION
#define DISPID_IHTMLCURRENTSTYLE_DISPLAY                          DISPID_A_DISPLAY
#define DISPID_IHTMLCURRENTSTYLE_VISIBILITY                       DISPID_A_VISIBILITY
#define DISPID_IHTMLCURRENTSTYLE_ZINDEX                           DISPID_A_ZINDEX
#define DISPID_IHTMLCURRENTSTYLE_LETTERSPACING                    DISPID_A_LETTERSPACING
#define DISPID_IHTMLCURRENTSTYLE_LINEHEIGHT                       DISPID_A_LINEHEIGHT
#define DISPID_IHTMLCURRENTSTYLE_TEXTINDENT                       DISPID_A_TEXTINDENT
#define DISPID_IHTMLCURRENTSTYLE_VERTICALALIGN                    DISPID_A_VERTICALALIGN
#define DISPID_IHTMLCURRENTSTYLE_BACKGROUNDATTACHMENT             DISPID_A_BACKGROUNDATTACHMENT
#define DISPID_IHTMLCURRENTSTYLE_MARGINTOP                        DISPID_A_MARGINTOP
#define DISPID_IHTMLCURRENTSTYLE_MARGINRIGHT                      DISPID_A_MARGINRIGHT
#define DISPID_IHTMLCURRENTSTYLE_MARGINBOTTOM                     DISPID_A_MARGINBOTTOM
#define DISPID_IHTMLCURRENTSTYLE_MARGINLEFT                       DISPID_A_MARGINLEFT
#define DISPID_IHTMLCURRENTSTYLE_CLEAR                            DISPID_A_CLEAR
#define DISPID_IHTMLCURRENTSTYLE_LISTSTYLETYPE                    DISPID_A_LISTSTYLETYPE
#define DISPID_IHTMLCURRENTSTYLE_LISTSTYLEPOSITION                DISPID_A_LISTSTYLEPOSITION
#define DISPID_IHTMLCURRENTSTYLE_LISTSTYLEIMAGE                   DISPID_A_LISTSTYLEIMAGE
#define DISPID_IHTMLCURRENTSTYLE_CLIPTOP                          DISPID_A_CLIPRECTTOP
#define DISPID_IHTMLCURRENTSTYLE_CLIPRIGHT                        DISPID_A_CLIPRECTRIGHT
#define DISPID_IHTMLCURRENTSTYLE_CLIPBOTTOM                       DISPID_A_CLIPRECTBOTTOM
#define DISPID_IHTMLCURRENTSTYLE_CLIPLEFT                         DISPID_A_CLIPRECTLEFT
#define DISPID_IHTMLCURRENTSTYLE_OVERFLOW                         DISPID_A_OVERFLOW
#define DISPID_IHTMLCURRENTSTYLE_PAGEBREAKBEFORE                  DISPID_A_PAGEBREAKBEFORE
#define DISPID_IHTMLCURRENTSTYLE_PAGEBREAKAFTER                   DISPID_A_PAGEBREAKAFTER
#define DISPID_IHTMLCURRENTSTYLE_CURSOR                           DISPID_A_CURSOR
#define DISPID_IHTMLCURRENTSTYLE_TABLELAYOUT                      DISPID_A_TABLELAYOUT
#define DISPID_IHTMLCURRENTSTYLE_BORDERCOLLAPSE                   DISPID_A_BORDERCOLLAPSE
#define DISPID_IHTMLCURRENTSTYLE_DIRECTION                        DISPID_A_DIRECTION
#define DISPID_IHTMLCURRENTSTYLE_BEHAVIOR                         DISPID_A_BEHAVIOR
#define DISPID_IHTMLCURRENTSTYLE_GETATTRIBUTE                     DISPID_HTMLOBJECT+2
#define DISPID_IHTMLCURRENTSTYLE_UNICODEBIDI                      DISPID_A_UNICODEBIDI
#define DISPID_IHTMLCURRENTSTYLE_RIGHT                            STDPROPID_XOBJ_RIGHT
#define DISPID_IHTMLCURRENTSTYLE_BOTTOM                           STDPROPID_XOBJ_BOTTOM
#define DISPID_IHTMLCURRENTSTYLE_IMEMODE                          DISPID_A_IMEMODE
#define DISPID_IHTMLCURRENTSTYLE_RUBYALIGN                        DISPID_A_RUBYALIGN
#define DISPID_IHTMLCURRENTSTYLE_RUBYPOSITION                     DISPID_A_RUBYPOSITION
#define DISPID_IHTMLCURRENTSTYLE_RUBYOVERHANG                     DISPID_A_RUBYOVERHANG
#define DISPID_IHTMLCURRENTSTYLE_TEXTAUTOSPACE                    DISPID_A_TEXTAUTOSPACE
#define DISPID_IHTMLCURRENTSTYLE_LINEBREAK                        DISPID_A_LINEBREAK
#define DISPID_IHTMLCURRENTSTYLE_WORDBREAK                        DISPID_A_WORDBREAK
#define DISPID_IHTMLCURRENTSTYLE_TEXTJUSTIFY                      DISPID_A_TEXTJUSTIFY
#define DISPID_IHTMLCURRENTSTYLE_TEXTJUSTIFYTRIM                  DISPID_A_TEXTJUSTIFYTRIM
#define DISPID_IHTMLCURRENTSTYLE_TEXTKASHIDA                      DISPID_A_TEXTKASHIDA
#define DISPID_IHTMLCURRENTSTYLE_BLOCKDIRECTION                   DISPID_A_DIR
#define DISPID_IHTMLCURRENTSTYLE_LAYOUTGRIDCHAR                   DISPID_A_LAYOUTGRIDCHAR
#define DISPID_IHTMLCURRENTSTYLE_LAYOUTGRIDLINE                   DISPID_A_LAYOUTGRIDLINE
#define DISPID_IHTMLCURRENTSTYLE_LAYOUTGRIDMODE                   DISPID_A_LAYOUTGRIDMODE
#define DISPID_IHTMLCURRENTSTYLE_LAYOUTGRIDTYPE                   DISPID_A_LAYOUTGRIDTYPE
#define DISPID_IHTMLCURRENTSTYLE_BORDERSTYLE                      DISPID_A_BORDERSTYLE
#define DISPID_IHTMLCURRENTSTYLE_BORDERCOLOR                      DISPID_A_BORDERCOLOR
#define DISPID_IHTMLCURRENTSTYLE_BORDERWIDTH                      DISPID_A_BORDERWIDTH
#define DISPID_IHTMLCURRENTSTYLE_PADDING                          DISPID_A_PADDING
#define DISPID_IHTMLCURRENTSTYLE_MARGIN                           DISPID_A_MARGIN
#define DISPID_IHTMLCURRENTSTYLE_ACCELERATOR                      DISPID_A_ACCELERATOR
#define DISPID_IHTMLCURRENTSTYLE_OVERFLOWX                        DISPID_A_OVERFLOWX
#define DISPID_IHTMLCURRENTSTYLE_OVERFLOWY                        DISPID_A_OVERFLOWY
#define DISPID_IHTMLCURRENTSTYLE_TEXTTRANSFORM                    DISPID_A_TEXTTRANSFORM

//    DISPIDs for interface IHTMLCurrentStyle2

#define DISPID_IHTMLCURRENTSTYLE2_LAYOUTFLOW                      DISPID_A_LAYOUTFLOW
#define DISPID_IHTMLCURRENTSTYLE2_WORDWRAP                        DISPID_A_WORDWRAP
#define DISPID_IHTMLCURRENTSTYLE2_TEXTUNDERLINEPOSITION           DISPID_A_TEXTUNDERLINEPOSITION
#define DISPID_IHTMLCURRENTSTYLE2_HASLAYOUT                       DISPID_A_HASLAYOUT
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARBASECOLOR              DISPID_A_SCROLLBARBASECOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARFACECOLOR              DISPID_A_SCROLLBARFACECOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBAR3DLIGHTCOLOR           DISPID_A_SCROLLBAR3DLIGHTCOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARSHADOWCOLOR            DISPID_A_SCROLLBARSHADOWCOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARHIGHLIGHTCOLOR         DISPID_A_SCROLLBARHIGHLIGHTCOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARDARKSHADOWCOLOR        DISPID_A_SCROLLBARDARKSHADOWCOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARARROWCOLOR             DISPID_A_SCROLLBARARROWCOLOR
#define DISPID_IHTMLCURRENTSTYLE2_SCROLLBARTRACKCOLOR             DISPID_A_SCROLLBARTRACKCOLOR
#define DISPID_IHTMLCURRENTSTYLE2_WRITINGMODE                     DISPID_A_WRITINGMODE
#define DISPID_IHTMLCURRENTSTYLE2_ZOOM                            DISPID_A_ZOOM
#define DISPID_IHTMLCURRENTSTYLE2_FILTER                          DISPID_A_FILTER
#define DISPID_IHTMLCURRENTSTYLE2_TEXTALIGNLAST                   DISPID_A_TEXTALIGNLAST
#define DISPID_IHTMLCURRENTSTYLE2_TEXTKASHIDASPACE                DISPID_A_TEXTKASHIDASPACE
#define DISPID_IHTMLCURRENTSTYLE2_ISBLOCK                         DISPID_A_ISBLOCK

//    DISPIDs for interface IHTMLCurrentStyle3

#define DISPID_IHTMLCURRENTSTYLE3_TEXTOVERFLOW                    DISPID_A_TEXTOVERFLOW
#define DISPID_IHTMLCURRENTSTYLE3_MINHEIGHT                       DISPID_A_MINHEIGHT
#define DISPID_IHTMLCURRENTSTYLE3_WORDSPACING                     DISPID_A_WORDSPACING
#define DISPID_IHTMLCURRENTSTYLE3_WHITESPACE                      DISPID_A_WHITESPACE

//    DISPIDs for interface IHTMLCurrentStyle4

#define DISPID_IHTMLCURRENTSTYLE4_MSINTERPOLATIONMODE             DISPID_A_INTERPOLATION
#define DISPID_IHTMLCURRENTSTYLE4_MAXHEIGHT                       DISPID_A_MAXHEIGHT
#define DISPID_IHTMLCURRENTSTYLE4_MINWIDTH                        DISPID_A_MINWIDTH
#define DISPID_IHTMLCURRENTSTYLE4_MAXWIDTH                        DISPID_A_MAXWIDTH

//    DISPIDs for interface IHTMLCurrentStyle5

#define DISPID_IHTMLCURRENTSTYLE5_CAPTIONSIDE                     DISPID_A_CAPTIONSIDE
#define DISPID_IHTMLCURRENTSTYLE5_OUTLINE                         DISPID_A_OUTLINE
#define DISPID_IHTMLCURRENTSTYLE5_OUTLINEWIDTH                    DISPID_A_OUTLINEWIDTH
#define DISPID_IHTMLCURRENTSTYLE5_OUTLINESTYLE                    DISPID_A_OUTLINESTYLE
#define DISPID_IHTMLCURRENTSTYLE5_OUTLINECOLOR                    DISPID_A_OUTLINECOLOR
#define DISPID_IHTMLCURRENTSTYLE5_BOXSIZING                       DISPID_A_BOXSIZING
#define DISPID_IHTMLCURRENTSTYLE5_BORDERSPACING                   DISPID_A_BORDERSPACING
#define DISPID_IHTMLCURRENTSTYLE5_ORPHANS                         DISPID_A_ORPHANS
#define DISPID_IHTMLCURRENTSTYLE5_WIDOWS                          DISPID_A_WIDOWS
#define DISPID_IHTMLCURRENTSTYLE5_PAGEBREAKINSIDE                 DISPID_A_PAGEBREAKINSIDE
#define DISPID_IHTMLCURRENTSTYLE5_EMPTYCELLS                      DISPID_A_EMPTYCELLS
#define DISPID_IHTMLCURRENTSTYLE5_MSBLOCKPROGRESSION              DISPID_A_MS_BLOCKPROGRESSION
#define DISPID_IHTMLCURRENTSTYLE5_QUOTES                          DISPID_A_QUOTES

//    DISPIDs for interface IHTMLRect

#define DISPID_IHTMLRECT_LEFT                                     DISPID_OMRECT+1
#define DISPID_IHTMLRECT_TOP                                      DISPID_OMRECT+2
#define DISPID_IHTMLRECT_RIGHT                                    DISPID_OMRECT+3
#define DISPID_IHTMLRECT_BOTTOM                                   DISPID_OMRECT+4

//    DISPIDs for interface IHTMLRectCollection

#define DISPID_IHTMLRECTCOLLECTION_LENGTH                         DISPID_COLLECTION
#define DISPID_IHTMLRECTCOLLECTION__NEWENUM                       DISPID_NEWENUM
#define DISPID_IHTMLRECTCOLLECTION_ITEM                           DISPID_VALUE

//    DISPIDs for interface IHTMLDOMNode

#define DISPID_IHTMLDOMNODE_NODETYPE                              DISPID_ELEMENT+46
#define DISPID_IHTMLDOMNODE_PARENTNODE                            DISPID_ELEMENT+47
#define DISPID_IHTMLDOMNODE_HASCHILDNODES                         DISPID_ELEMENT+48
#define DISPID_IHTMLDOMNODE_CHILDNODES                            DISPID_ELEMENT+49
#define DISPID_IHTMLDOMNODE_ATTRIBUTES                            DISPID_ELEMENT+50
#define DISPID_IHTMLDOMNODE_INSERTBEFORE                          DISPID_ELEMENT+51
#define DISPID_IHTMLDOMNODE_REMOVECHILD                           DISPID_ELEMENT+52
#define DISPID_IHTMLDOMNODE_REPLACECHILD                          DISPID_ELEMENT+53
#define DISPID_IHTMLDOMNODE_CLONENODE                             DISPID_ELEMENT+61
#define DISPID_IHTMLDOMNODE_REMOVENODE                            DISPID_ELEMENT+66
#define DISPID_IHTMLDOMNODE_SWAPNODE                              DISPID_ELEMENT+68
#define DISPID_IHTMLDOMNODE_REPLACENODE                           DISPID_ELEMENT+67
#define DISPID_IHTMLDOMNODE_APPENDCHILD                           DISPID_ELEMENT+73
#define DISPID_IHTMLDOMNODE_NODENAME                              DISPID_ELEMENT+74
#define DISPID_IHTMLDOMNODE_NODEVALUE                             DISPID_ELEMENT+75
#define DISPID_IHTMLDOMNODE_FIRSTCHILD                            DISPID_ELEMENT+76
#define DISPID_IHTMLDOMNODE_LASTCHILD                             DISPID_ELEMENT+77
#define DISPID_IHTMLDOMNODE_PREVIOUSSIBLING                       DISPID_ELEMENT+78
#define DISPID_IHTMLDOMNODE_NEXTSIBLING                           DISPID_ELEMENT+79

//    DISPIDs for interface IHTMLDOMNode2

#define DISPID_IHTMLDOMNODE2_OWNERDOCUMENT                        DISPID_ELEMENT+113

//    DISPIDs for interface IHTMLDOMAttribute

#define DISPID_IHTMLDOMATTRIBUTE_NODENAME                         DISPID_DOMATTRIBUTE
#define DISPID_IHTMLDOMATTRIBUTE_NODEVALUE                        DISPID_DOMATTRIBUTE+2
#define DISPID_IHTMLDOMATTRIBUTE_SPECIFIED                        DISPID_DOMATTRIBUTE+1

//    DISPIDs for interface IHTMLDOMAttribute2

#define DISPID_IHTMLDOMATTRIBUTE2_NAME                            DISPID_DOMATTRIBUTE+3
#define DISPID_IHTMLDOMATTRIBUTE2_VALUE                           DISPID_DOMATTRIBUTE+4
#define DISPID_IHTMLDOMATTRIBUTE2_EXPANDO                         DISPID_DOMATTRIBUTE+5
#define DISPID_IHTMLDOMATTRIBUTE2_NODETYPE                        DISPID_DOMATTRIBUTE+6
#define DISPID_IHTMLDOMATTRIBUTE2_PARENTNODE                      DISPID_DOMATTRIBUTE+7
#define DISPID_IHTMLDOMATTRIBUTE2_CHILDNODES                      DISPID_DOMATTRIBUTE+8
#define DISPID_IHTMLDOMATTRIBUTE2_FIRSTCHILD                      DISPID_DOMATTRIBUTE+9
#define DISPID_IHTMLDOMATTRIBUTE2_LASTCHILD                       DISPID_DOMATTRIBUTE+10
#define DISPID_IHTMLDOMATTRIBUTE2_PREVIOUSSIBLING                 DISPID_DOMATTRIBUTE+11
#define DISPID_IHTMLDOMATTRIBUTE2_NEXTSIBLING                     DISPID_DOMATTRIBUTE+12
#define DISPID_IHTMLDOMATTRIBUTE2_ATTRIBUTES                      DISPID_DOMATTRIBUTE+13
#define DISPID_IHTMLDOMATTRIBUTE2_OWNERDOCUMENT                   DISPID_DOMATTRIBUTE+14
#define DISPID_IHTMLDOMATTRIBUTE2_INSERTBEFORE                    DISPID_DOMATTRIBUTE+15
#define DISPID_IHTMLDOMATTRIBUTE2_REPLACECHILD                    DISPID_DOMATTRIBUTE+16
#define DISPID_IHTMLDOMATTRIBUTE2_REMOVECHILD                     DISPID_DOMATTRIBUTE+17
#define DISPID_IHTMLDOMATTRIBUTE2_APPENDCHILD                     DISPID_DOMATTRIBUTE+18
#define DISPID_IHTMLDOMATTRIBUTE2_HASCHILDNODES                   DISPID_DOMATTRIBUTE+19
#define DISPID_IHTMLDOMATTRIBUTE2_CLONENODE                       DISPID_DOMATTRIBUTE+20

//    DISPIDs for interface IHTMLDOMAttribute3

#define DISPID_IHTMLDOMATTRIBUTE3_IE8_NODEVALUE                   DISPID_IE8_ATTR+3
#define DISPID_IHTMLDOMATTRIBUTE3_IE8_VALUE                       DISPID_IE8_ATTR+4
#define DISPID_IHTMLDOMATTRIBUTE3_IE8_SPECIFIED                   DISPID_IE8_ATTR
#define DISPID_IHTMLDOMATTRIBUTE3_OWNERELEMENT                    DISPID_IE8_ATTR+1

//    DISPIDs for interface IHTMLDOMTextNode

#define DISPID_IHTMLDOMTEXTNODE_DATA                              DISPID_DOMTEXTNODE
#define DISPID_IHTMLDOMTEXTNODE_TOSTRING                          DISPID_DOMTEXTNODE+1
#define DISPID_IHTMLDOMTEXTNODE_LENGTH                            DISPID_DOMTEXTNODE+2
#define DISPID_IHTMLDOMTEXTNODE_SPLITTEXT                         DISPID_DOMTEXTNODE+3

//    DISPIDs for interface IHTMLDOMTextNode2

#define DISPID_IHTMLDOMTEXTNODE2_SUBSTRINGDATA                    DISPID_DOMTEXTNODE+4
#define DISPID_IHTMLDOMTEXTNODE2_APPENDDATA                       DISPID_DOMTEXTNODE+5
#define DISPID_IHTMLDOMTEXTNODE2_INSERTDATA                       DISPID_DOMTEXTNODE+6
#define DISPID_IHTMLDOMTEXTNODE2_DELETEDATA                       DISPID_DOMTEXTNODE+7
#define DISPID_IHTMLDOMTEXTNODE2_REPLACEDATA                      DISPID_DOMTEXTNODE+8

//    DISPIDs for interface IHTMLDOMImplementation

#define DISPID_IHTMLDOMIMPLEMENTATION_HASFEATURE                  DISPID_DOMIMPLEMENTATION

//    DISPIDs for interface IHTMLAttributeCollection

#define DISPID_IHTMLATTRIBUTECOLLECTION_LENGTH                    DISPID_COLLECTION
#define DISPID_IHTMLATTRIBUTECOLLECTION__NEWENUM                  DISPID_NEWENUM
#define DISPID_IHTMLATTRIBUTECOLLECTION_ITEM                      DISPID_VALUE

//    DISPIDs for interface IHTMLAttributeCollection2

#define DISPID_IHTMLATTRIBUTECOLLECTION2_GETNAMEDITEM             DISPID_COLLECTION+1
#define DISPID_IHTMLATTRIBUTECOLLECTION2_SETNAMEDITEM             DISPID_COLLECTION+2
#define DISPID_IHTMLATTRIBUTECOLLECTION2_REMOVENAMEDITEM          DISPID_COLLECTION+3

//    DISPIDs for interface IHTMLAttributeCollection3

#define DISPID_IHTMLATTRIBUTECOLLECTION3_IE8_GETNAMEDITEM         DISPID_IE8_NAMEDNODEMAP
#define DISPID_IHTMLATTRIBUTECOLLECTION3_IE8_SETNAMEDITEM         DISPID_IE8_NAMEDNODEMAP+1
#define DISPID_IHTMLATTRIBUTECOLLECTION3_IE8_REMOVENAMEDITEM      DISPID_IE8_NAMEDNODEMAP+2
#define DISPID_IHTMLATTRIBUTECOLLECTION3_IE8_ITEM                 DISPID_IE8_NAMEDNODEMAP+4
#define DISPID_IHTMLATTRIBUTECOLLECTION3_IE8_LENGTH               DISPID_IE8_NAMEDNODEMAP+3

//    DISPIDs for interface IHTMLDOMChildrenCollection

#define DISPID_IHTMLDOMCHILDRENCOLLECTION_LENGTH                  DISPID_COLLECTION
#define DISPID_IHTMLDOMCHILDRENCOLLECTION__NEWENUM                DISPID_NEWENUM
#define DISPID_IHTMLDOMCHILDRENCOLLECTION_ITEM                    DISPID_VALUE

//    DISPIDs for interface IHTMLElement

#define DISPID_IHTMLELEMENT_SETATTRIBUTE                          DISPID_HTMLOBJECT+1
#define DISPID_IHTMLELEMENT_GETATTRIBUTE                          DISPID_HTMLOBJECT+2
#define DISPID_IHTMLELEMENT_REMOVEATTRIBUTE                       DISPID_HTMLOBJECT+3
#define DISPID_IHTMLELEMENT_CLASSNAME                             DISPID_ELEMENT+1
#define DISPID_IHTMLELEMENT_ID                                    DISPID_ELEMENT+2
#define DISPID_IHTMLELEMENT_TAGNAME                               DISPID_ELEMENT+4
#define DISPID_IHTMLELEMENT_PARENTELEMENT                         STDPROPID_XOBJ_PARENT
#define DISPID_IHTMLELEMENT_STYLE                                 STDPROPID_XOBJ_STYLE
#define DISPID_IHTMLELEMENT_ONHELP                                DISPID_EVPROP_ONHELP
#define DISPID_IHTMLELEMENT_ONCLICK                               DISPID_EVPROP_ONCLICK
#define DISPID_IHTMLELEMENT_ONDBLCLICK                            DISPID_EVPROP_ONDBLCLICK
#define DISPID_IHTMLELEMENT_ONKEYDOWN                             DISPID_EVPROP_ONKEYDOWN
#define DISPID_IHTMLELEMENT_ONKEYUP                               DISPID_EVPROP_ONKEYUP
#define DISPID_IHTMLELEMENT_ONKEYPRESS                            DISPID_EVPROP_ONKEYPRESS
#define DISPID_IHTMLELEMENT_ONMOUSEOUT                            DISPID_EVPROP_ONMOUSEOUT
#define DISPID_IHTMLELEMENT_ONMOUSEOVER                           DISPID_EVPROP_ONMOUSEOVER
#define DISPID_IHTMLELEMENT_ONMOUSEMOVE                           DISPID_EVPROP_ONMOUSEMOVE
#define DISPID_IHTMLELEMENT_ONMOUSEDOWN                           DISPID_EVPROP_ONMOUSEDOWN
#define DISPID_IHTMLELEMENT_ONMOUSEUP                             DISPID_EVPROP_ONMOUSEUP
#define DISPID_IHTMLELEMENT_DOCUMENT                              DISPID_ELEMENT+18
#define DISPID_IHTMLELEMENT_TITLE                                 STDPROPID_XOBJ_CONTROLTIPTEXT
#define DISPID_IHTMLELEMENT_LANGUAGE                              DISPID_A_LANGUAGE
#define DISPID_IHTMLELEMENT_ONSELECTSTART                         DISPID_EVPROP_ONSELECTSTART
#define DISPID_IHTMLELEMENT_SCROLLINTOVIEW                        DISPID_ELEMENT+19
#define DISPID_IHTMLELEMENT_CONTAINS                              DISPID_ELEMENT+20
#define DISPID_IHTMLELEMENT_SOURCEINDEX                           DISPID_ELEMENT+24
#define DISPID_IHTMLELEMENT_RECORDNUMBER                          DISPID_ELEMENT+25
#define DISPID_IHTMLELEMENT_LANG                                  DISPID_A_LANG
#define DISPID_IHTMLELEMENT_OFFSETLEFT                            DISPID_ELEMENT+8
#define DISPID_IHTMLELEMENT_OFFSETTOP                             DISPID_ELEMENT+9
#define DISPID_IHTMLELEMENT_OFFSETWIDTH                           DISPID_ELEMENT+10
#define DISPID_IHTMLELEMENT_OFFSETHEIGHT                          DISPID_ELEMENT+11
#define DISPID_IHTMLELEMENT_OFFSETPARENT                          DISPID_ELEMENT+12
#define DISPID_IHTMLELEMENT_INNERHTML                             DISPID_ELEMENT+26
#define DISPID_IHTMLELEMENT_INNERTEXT                             DISPID_ELEMENT+27
#define DISPID_IHTMLELEMENT_OUTERHTML                             DISPID_ELEMENT+28
#define DISPID_IHTMLELEMENT_OUTERTEXT                             DISPID_ELEMENT+29
#define DISPID_IHTMLELEMENT_INSERTADJACENTHTML                    DISPID_ELEMENT+30
#define DISPID_IHTMLELEMENT_INSERTADJACENTTEXT                    DISPID_ELEMENT+31
#define DISPID_IHTMLELEMENT_PARENTTEXTEDIT                        DISPID_ELEMENT+32
#define DISPID_IHTMLELEMENT_ISTEXTEDIT                            DISPID_ELEMENT+34
#define DISPID_IHTMLELEMENT_CLICK                                 DISPID_ELEMENT+33
#define DISPID_IHTMLELEMENT_FILTERS                               DISPID_ELEMENT+35
#define DISPID_IHTMLELEMENT_ONDRAGSTART                           DISPID_EVPROP_ONDRAGSTART
#define DISPID_IHTMLELEMENT_TOSTRING                              DISPID_ELEMENT+36
#define DISPID_IHTMLELEMENT_ONBEFOREUPDATE                        DISPID_EVPROP_ONBEFOREUPDATE
#define DISPID_IHTMLELEMENT_ONAFTERUPDATE                         DISPID_EVPROP_ONAFTERUPDATE
#define DISPID_IHTMLELEMENT_ONERRORUPDATE                         DISPID_EVPROP_ONERRORUPDATE
#define DISPID_IHTMLELEMENT_ONROWEXIT                             DISPID_EVPROP_ONROWEXIT
#define DISPID_IHTMLELEMENT_ONROWENTER                            DISPID_EVPROP_ONROWENTER
#define DISPID_IHTMLELEMENT_ONDATASETCHANGED                      DISPID_EVPROP_ONDATASETCHANGED
#define DISPID_IHTMLELEMENT_ONDATAAVAILABLE                       DISPID_EVPROP_ONDATAAVAILABLE
#define DISPID_IHTMLELEMENT_ONDATASETCOMPLETE                     DISPID_EVPROP_ONDATASETCOMPLETE
#define DISPID_IHTMLELEMENT_ONFILTERCHANGE                        DISPID_EVPROP_ONFILTER
#define DISPID_IHTMLELEMENT_CHILDREN                              DISPID_ELEMENT+37
#define DISPID_IHTMLELEMENT_ALL                                   DISPID_ELEMENT+38

//    DISPIDs for interface IHTMLElement2

#define DISPID_IHTMLELEMENT2_SCOPENAME                            DISPID_ELEMENT+39
#define DISPID_IHTMLELEMENT2_SETCAPTURE                           DISPID_ELEMENT+40
#define DISPID_IHTMLELEMENT2_RELEASECAPTURE                       DISPID_ELEMENT+41
#define DISPID_IHTMLELEMENT2_ONLOSECAPTURE                        DISPID_EVPROP_ONLOSECAPTURE
#define DISPID_IHTMLELEMENT2_COMPONENTFROMPOINT                   DISPID_ELEMENT+42
#define DISPID_IHTMLELEMENT2_DOSCROLL                             DISPID_ELEMENT+43
#define DISPID_IHTMLELEMENT2_ONSCROLL                             DISPID_EVPROP_ONSCROLL
#define DISPID_IHTMLELEMENT2_ONDRAG                               DISPID_EVPROP_ONDRAG
#define DISPID_IHTMLELEMENT2_ONDRAGEND                            DISPID_EVPROP_ONDRAGEND
#define DISPID_IHTMLELEMENT2_ONDRAGENTER                          DISPID_EVPROP_ONDRAGENTER
#define DISPID_IHTMLELEMENT2_ONDRAGOVER                           DISPID_EVPROP_ONDRAGOVER
#define DISPID_IHTMLELEMENT2_ONDRAGLEAVE                          DISPID_EVPROP_ONDRAGLEAVE
#define DISPID_IHTMLELEMENT2_ONDROP                               DISPID_EVPROP_ONDROP
#define DISPID_IHTMLELEMENT2_ONBEFORECUT                          DISPID_EVPROP_ONBEFORECUT
#define DISPID_IHTMLELEMENT2_ONCUT                                DISPID_EVPROP_ONCUT
#define DISPID_IHTMLELEMENT2_ONBEFORECOPY                         DISPID_EVPROP_ONBEFORECOPY
#define DISPID_IHTMLELEMENT2_ONCOPY                               DISPID_EVPROP_ONCOPY
#define DISPID_IHTMLELEMENT2_ONBEFOREPASTE                        DISPID_EVPROP_ONBEFOREPASTE
#define DISPID_IHTMLELEMENT2_ONPASTE                              DISPID_EVPROP_ONPASTE
#define DISPID_IHTMLELEMENT2_CURRENTSTYLE                         DISPID_ELEMENT+7
#define DISPID_IHTMLELEMENT2_ONPROPERTYCHANGE                     DISPID_EVPROP_ONPROPERTYCHANGE
#define DISPID_IHTMLELEMENT2_GETCLIENTRECTS                       DISPID_ELEMENT+44
#define DISPID_IHTMLELEMENT2_GETBOUNDINGCLIENTRECT                DISPID_ELEMENT+45
#define DISPID_IHTMLELEMENT2_SETEXPRESSION                        DISPID_HTMLOBJECT+4
#define DISPID_IHTMLELEMENT2_GETEXPRESSION                        DISPID_HTMLOBJECT+5
#define DISPID_IHTMLELEMENT2_REMOVEEXPRESSION                     DISPID_HTMLOBJECT+6
#define DISPID_IHTMLELEMENT2_TABINDEX                             STDPROPID_XOBJ_TABINDEX
#define DISPID_IHTMLELEMENT2_FOCUS                                DISPID_SITE+0
#define DISPID_IHTMLELEMENT2_ACCESSKEY                            DISPID_SITE+5
#define DISPID_IHTMLELEMENT2_ONBLUR                               DISPID_EVPROP_ONBLUR
#define DISPID_IHTMLELEMENT2_ONFOCUS                              DISPID_EVPROP_ONFOCUS
#define DISPID_IHTMLELEMENT2_ONRESIZE                             DISPID_EVPROP_ONRESIZE
#define DISPID_IHTMLELEMENT2_BLUR                                 DISPID_SITE+2
#define DISPID_IHTMLELEMENT2_ADDFILTER                            DISPID_SITE+17
#define DISPID_IHTMLELEMENT2_REMOVEFILTER                         DISPID_SITE+18
#define DISPID_IHTMLELEMENT2_CLIENTHEIGHT                         DISPID_SITE+19
#define DISPID_IHTMLELEMENT2_CLIENTWIDTH                          DISPID_SITE+20
#define DISPID_IHTMLELEMENT2_CLIENTTOP                            DISPID_SITE+21
#define DISPID_IHTMLELEMENT2_CLIENTLEFT                           DISPID_SITE+22
#define DISPID_IHTMLELEMENT2_ATTACHEVENT                          DISPID_HTMLOBJECT+7
#define DISPID_IHTMLELEMENT2_DETACHEVENT                          DISPID_HTMLOBJECT+8
#define DISPID_IHTMLELEMENT2_READYSTATE                           DISPID_A_READYSTATE
#define DISPID_IHTMLELEMENT2_ONREADYSTATECHANGE                   DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLELEMENT2_ONROWSDELETE                         DISPID_EVPROP_ONROWSDELETE
#define DISPID_IHTMLELEMENT2_ONROWSINSERTED                       DISPID_EVPROP_ONROWSINSERTED
#define DISPID_IHTMLELEMENT2_ONCELLCHANGE                         DISPID_EVPROP_ONCELLCHANGE
#define DISPID_IHTMLELEMENT2_DIR                                  DISPID_A_DIR
#define DISPID_IHTMLELEMENT2_CREATECONTROLRANGE                   DISPID_ELEMENT+56
#define DISPID_IHTMLELEMENT2_SCROLLHEIGHT                         DISPID_ELEMENT+57
#define DISPID_IHTMLELEMENT2_SCROLLWIDTH                          DISPID_ELEMENT+58
#define DISPID_IHTMLELEMENT2_SCROLLTOP                            DISPID_ELEMENT+59
#define DISPID_IHTMLELEMENT2_SCROLLLEFT                           DISPID_ELEMENT+60
#define DISPID_IHTMLELEMENT2_CLEARATTRIBUTES                      DISPID_ELEMENT+62
#define DISPID_IHTMLELEMENT2_MERGEATTRIBUTES                      DISPID_ELEMENT+63
#define DISPID_IHTMLELEMENT2_ONCONTEXTMENU                        DISPID_EVPROP_ONCONTEXTMENU
#define DISPID_IHTMLELEMENT2_INSERTADJACENTELEMENT                DISPID_ELEMENT+69
#define DISPID_IHTMLELEMENT2_APPLYELEMENT                         DISPID_ELEMENT+65
#define DISPID_IHTMLELEMENT2_GETADJACENTTEXT                      DISPID_ELEMENT+70
#define DISPID_IHTMLELEMENT2_REPLACEADJACENTTEXT                  DISPID_ELEMENT+71
#define DISPID_IHTMLELEMENT2_CANHAVECHILDREN                      DISPID_ELEMENT+72
#define DISPID_IHTMLELEMENT2_ADDBEHAVIOR                          DISPID_ELEMENT+80
#define DISPID_IHTMLELEMENT2_REMOVEBEHAVIOR                       DISPID_ELEMENT+81
#define DISPID_IHTMLELEMENT2_RUNTIMESTYLE                         DISPID_ELEMENT+64
#define DISPID_IHTMLELEMENT2_BEHAVIORURNS                         DISPID_ELEMENT+82
#define DISPID_IHTMLELEMENT2_TAGURN                               DISPID_ELEMENT+83
#define DISPID_IHTMLELEMENT2_ONBEFOREEDITFOCUS                    DISPID_EVPROP_ONBEFOREEDITFOCUS
#define DISPID_IHTMLELEMENT2_READYSTATEVALUE                      DISPID_ELEMENT+84
#define DISPID_IHTMLELEMENT2_GETELEMENTSBYTAGNAME                 DISPID_ELEMENT+85

//    DISPIDs for interface IHTMLElement3

#define DISPID_IHTMLELEMENT3_MERGEATTRIBUTES                      DISPID_ELEMENT+96
#define DISPID_IHTMLELEMENT3_ISMULTILINE                          DISPID_ELEMENT+97
#define DISPID_IHTMLELEMENT3_CANHAVEHTML                          DISPID_ELEMENT+98
#define DISPID_IHTMLELEMENT3_ONLAYOUTCOMPLETE                     DISPID_EVPROP_ONLAYOUTCOMPLETE
#define DISPID_IHTMLELEMENT3_ONPAGE                               DISPID_EVPROP_ONPAGE
#define DISPID_IHTMLELEMENT3_INFLATEBLOCK                         DISPID_ELEMENT+100
#define DISPID_IHTMLELEMENT3_ONBEFOREDEACTIVATE                   DISPID_EVPROP_ONBEFOREDEACTIVATE
#define DISPID_IHTMLELEMENT3_SETACTIVE                            DISPID_ELEMENT+101
#define DISPID_IHTMLELEMENT3_CONTENTEDITABLE                      DISPID_A_EDITABLE
#define DISPID_IHTMLELEMENT3_ISCONTENTEDITABLE                    DISPID_ELEMENT+102
#define DISPID_IHTMLELEMENT3_HIDEFOCUS                            DISPID_A_HIDEFOCUS
#define DISPID_IHTMLELEMENT3_DISABLED                             STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLELEMENT3_ISDISABLED                           DISPID_ELEMENT+105
#define DISPID_IHTMLELEMENT3_ONMOVE                               DISPID_EVPROP_ONMOVE
#define DISPID_IHTMLELEMENT3_ONCONTROLSELECT                      DISPID_EVPROP_ONCONTROLSELECT
#define DISPID_IHTMLELEMENT3_FIREEVENT                            DISPID_ELEMENT+106
#define DISPID_IHTMLELEMENT3_ONRESIZESTART                        DISPID_EVPROP_ONRESIZESTART
#define DISPID_IHTMLELEMENT3_ONRESIZEEND                          DISPID_EVPROP_ONRESIZEEND
#define DISPID_IHTMLELEMENT3_ONMOVESTART                          DISPID_EVPROP_ONMOVESTART
#define DISPID_IHTMLELEMENT3_ONMOVEEND                            DISPID_EVPROP_ONMOVEEND
#define DISPID_IHTMLELEMENT3_ONMOUSEENTER                         DISPID_EVPROP_ONMOUSEENTER
#define DISPID_IHTMLELEMENT3_ONMOUSELEAVE                         DISPID_EVPROP_ONMOUSELEAVE
#define DISPID_IHTMLELEMENT3_ONACTIVATE                           DISPID_EVPROP_ONACTIVATE
#define DISPID_IHTMLELEMENT3_ONDEACTIVATE                         DISPID_EVPROP_ONDEACTIVATE
#define DISPID_IHTMLELEMENT3_DRAGDROP                             DISPID_ELEMENT+107
#define DISPID_IHTMLELEMENT3_GLYPHMODE                            DISPID_ELEMENT+108

//    DISPIDs for interface IHTMLElement4

#define DISPID_IHTMLELEMENT4_ONMOUSEWHEEL                         DISPID_EVPROP_ONMOUSEWHEEL
#define DISPID_IHTMLELEMENT4_NORMALIZE                            DISPID_ELEMENT+112
#define DISPID_IHTMLELEMENT4_GETATTRIBUTENODE                     DISPID_ELEMENT+109
#define DISPID_IHTMLELEMENT4_SETATTRIBUTENODE                     DISPID_ELEMENT+110
#define DISPID_IHTMLELEMENT4_REMOVEATTRIBUTENODE                  DISPID_ELEMENT+111
#define DISPID_IHTMLELEMENT4_ONBEFOREACTIVATE                     DISPID_EVPROP_ONBEFOREACTIVATE
#define DISPID_IHTMLELEMENT4_ONFOCUSIN                            DISPID_EVPROP_ONFOCUSIN
#define DISPID_IHTMLELEMENT4_ONFOCUSOUT                           DISPID_EVPROP_ONFOCUSOUT

//    DISPIDs for interface IElementSelector

#define DISPID_IELEMENTSELECTOR_QUERYSELECTOR                     DISPID_ELEMENT+114
#define DISPID_IELEMENTSELECTOR_QUERYSELECTORALL                  DISPID_ELEMENT+115

//    DISPIDs for interface IHTMLElementRender

#define DISPID_IHTMLELEMENTRENDER_DRAWTODC                        
#define DISPID_IHTMLELEMENTRENDER_SETDOCUMENTPRINTER              

//    DISPIDs for interface IHTMLUniqueName

#define DISPID_IHTMLUNIQUENAME_UNIQUENUMBER                       DISPID_ELEMENT+54
#define DISPID_IHTMLUNIQUENAME_UNIQUEID                           DISPID_ELEMENT+55

//    DISPIDs for interface IHTMLElement5

#define DISPID_IHTMLELEMENT5_IE8_GETATTRIBUTENODE                 DISPID_IE8_ELEMENT
#define DISPID_IHTMLELEMENT5_IE8_SETATTRIBUTENODE                 DISPID_IE8_ELEMENT+1
#define DISPID_IHTMLELEMENT5_IE8_REMOVEATTRIBUTENODE              DISPID_IE8_ELEMENT+2
#define DISPID_IHTMLELEMENT5_HASATTRIBUTE                         DISPID_IE8_ELEMENT+3
#define DISPID_IHTMLELEMENT5_ROLE                                 DISPID_IE8_ELEMENT+4
#define DISPID_IHTMLELEMENT5_ARIABUSY                             DISPID_IE8_ELEMENT+5
#define DISPID_IHTMLELEMENT5_ARIACHECKED                          DISPID_IE8_ELEMENT+6
#define DISPID_IHTMLELEMENT5_ARIADISABLED                         DISPID_IE8_ELEMENT+7
#define DISPID_IHTMLELEMENT5_ARIAEXPANDED                         DISPID_IE8_ELEMENT+8
#define DISPID_IHTMLELEMENT5_ARIAHASPOPUP                         DISPID_IE8_ELEMENT+9
#define DISPID_IHTMLELEMENT5_ARIAHIDDEN                           DISPID_IE8_ELEMENT+10
#define DISPID_IHTMLELEMENT5_ARIAINVALID                          DISPID_IE8_ELEMENT+11
#define DISPID_IHTMLELEMENT5_ARIAMULTISELECTABLE                  DISPID_IE8_ELEMENT+12
#define DISPID_IHTMLELEMENT5_ARIAPRESSED                          DISPID_IE8_ELEMENT+13
#define DISPID_IHTMLELEMENT5_ARIAREADONLY                         DISPID_IE8_ELEMENT+14
#define DISPID_IHTMLELEMENT5_ARIAREQUIRED                         DISPID_IE8_ELEMENT+15
#define DISPID_IHTMLELEMENT5_ARIASECRET                           DISPID_IE8_ELEMENT+16
#define DISPID_IHTMLELEMENT5_ARIASELECTED                         DISPID_IE8_ELEMENT+17
#define DISPID_IHTMLELEMENT5_IE8_GETATTRIBUTE                     DISPID_IE8_ELEMENT+18
#define DISPID_IHTMLELEMENT5_IE8_SETATTRIBUTE                     DISPID_IE8_ELEMENT+19
#define DISPID_IHTMLELEMENT5_IE8_REMOVEATTRIBUTE                  DISPID_IE8_ELEMENT+20
#define DISPID_IHTMLELEMENT5_IE8_ATTRIBUTES                       DISPID_IE8_ELEMENT+21
#define DISPID_IHTMLELEMENT5_ARIAVALUENOW                         DISPID_IE8_ELEMENT+22
#define DISPID_IHTMLELEMENT5_ARIAPOSINSET                         DISPID_IE8_ELEMENT+23
#define DISPID_IHTMLELEMENT5_ARIASETSIZE                          DISPID_IE8_ELEMENT+24
#define DISPID_IHTMLELEMENT5_ARIALEVEL                            DISPID_IE8_ELEMENT+25
#define DISPID_IHTMLELEMENT5_ARIAVALUEMIN                         DISPID_IE8_ELEMENT+26
#define DISPID_IHTMLELEMENT5_ARIAVALUEMAX                         DISPID_IE8_ELEMENT+27
#define DISPID_IHTMLELEMENT5_ARIACONTROLS                         DISPID_IE8_ELEMENT+28
#define DISPID_IHTMLELEMENT5_ARIADESCRIBEDBY                      DISPID_IE8_ELEMENT+29
#define DISPID_IHTMLELEMENT5_ARIAFLOWTO                           DISPID_IE8_ELEMENT+30
#define DISPID_IHTMLELEMENT5_ARIALABELLEDBY                       DISPID_IE8_ELEMENT+31
#define DISPID_IHTMLELEMENT5_ARIAACTIVEDESCENDANT                 DISPID_IE8_ELEMENT+32
#define DISPID_IHTMLELEMENT5_ARIAOWNS                             DISPID_IE8_ELEMENT+33
#define DISPID_IHTMLELEMENT5_HASATTRIBUTES                        DISPID_IE8_ELEMENT+34
#define DISPID_IHTMLELEMENT5_ARIALIVE                             DISPID_IE8_ELEMENT+35
#define DISPID_IHTMLELEMENT5_ARIARELEVANT                         DISPID_IE8_ELEMENT+36

//    DISPIDs for interface IHTMLDatabinding

#define DISPID_IHTMLDATABINDING_DATAFLD                           DISPID_ELEMENT+21
#define DISPID_IHTMLDATABINDING_DATASRC                           DISPID_ELEMENT+22
#define DISPID_IHTMLDATABINDING_DATAFORMATAS                      DISPID_ELEMENT+23

//    DISPIDs for event set HTMLElementEvents3

#define DISPID_HTMLELEMENTEVENTS3_ONONLINE                        DISPID_EVMETH_ONONLINE
#define DISPID_HTMLELEMENTEVENTS3_ONOFFLINE                       DISPID_EVMETH_ONOFFLINE

//    DISPIDs for event set HTMLElementEvents2

#define DISPID_HTMLELEMENTEVENTS2_ONHELP                          DISPID_EVMETH_ONHELP
#define DISPID_HTMLELEMENTEVENTS2_ONCLICK                         DISPID_EVMETH_ONCLICK
#define DISPID_HTMLELEMENTEVENTS2_ONDBLCLICK                      DISPID_EVMETH_ONDBLCLICK
#define DISPID_HTMLELEMENTEVENTS2_ONKEYPRESS                      DISPID_EVMETH_ONKEYPRESS
#define DISPID_HTMLELEMENTEVENTS2_ONKEYDOWN                       DISPID_EVMETH_ONKEYDOWN
#define DISPID_HTMLELEMENTEVENTS2_ONKEYUP                         DISPID_EVMETH_ONKEYUP
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEOUT                      DISPID_EVMETH_ONMOUSEOUT
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEOVER                     DISPID_EVMETH_ONMOUSEOVER
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEMOVE                     DISPID_EVMETH_ONMOUSEMOVE
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEDOWN                     DISPID_EVMETH_ONMOUSEDOWN
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEUP                       DISPID_EVMETH_ONMOUSEUP
#define DISPID_HTMLELEMENTEVENTS2_ONSELECTSTART                   DISPID_EVMETH_ONSELECTSTART
#define DISPID_HTMLELEMENTEVENTS2_ONFILTERCHANGE                  DISPID_EVMETH_ONFILTER
#define DISPID_HTMLELEMENTEVENTS2_ONDRAGSTART                     DISPID_EVMETH_ONDRAGSTART
#define DISPID_HTMLELEMENTEVENTS2_ONBEFOREUPDATE                  DISPID_EVMETH_ONBEFOREUPDATE
#define DISPID_HTMLELEMENTEVENTS2_ONAFTERUPDATE                   DISPID_EVMETH_ONAFTERUPDATE
#define DISPID_HTMLELEMENTEVENTS2_ONERRORUPDATE                   DISPID_EVMETH_ONERRORUPDATE
#define DISPID_HTMLELEMENTEVENTS2_ONROWEXIT                       DISPID_EVMETH_ONROWEXIT
#define DISPID_HTMLELEMENTEVENTS2_ONROWENTER                      DISPID_EVMETH_ONROWENTER
#define DISPID_HTMLELEMENTEVENTS2_ONDATASETCHANGED                DISPID_EVMETH_ONDATASETCHANGED
#define DISPID_HTMLELEMENTEVENTS2_ONDATAAVAILABLE                 DISPID_EVMETH_ONDATAAVAILABLE
#define DISPID_HTMLELEMENTEVENTS2_ONDATASETCOMPLETE               DISPID_EVMETH_ONDATASETCOMPLETE
#define DISPID_HTMLELEMENTEVENTS2_ONLOSECAPTURE                   DISPID_EVMETH_ONLOSECAPTURE
#define DISPID_HTMLELEMENTEVENTS2_ONPROPERTYCHANGE                DISPID_EVMETH_ONPROPERTYCHANGE
#define DISPID_HTMLELEMENTEVENTS2_ONSCROLL                        DISPID_EVMETH_ONSCROLL
#define DISPID_HTMLELEMENTEVENTS2_ONFOCUS                         DISPID_EVMETH_ONFOCUS
#define DISPID_HTMLELEMENTEVENTS2_ONBLUR                          DISPID_EVMETH_ONBLUR
#define DISPID_HTMLELEMENTEVENTS2_ONRESIZE                        DISPID_EVMETH_ONRESIZE
#define DISPID_HTMLELEMENTEVENTS2_ONDRAG                          DISPID_EVMETH_ONDRAG
#define DISPID_HTMLELEMENTEVENTS2_ONDRAGEND                       DISPID_EVMETH_ONDRAGEND
#define DISPID_HTMLELEMENTEVENTS2_ONDRAGENTER                     DISPID_EVMETH_ONDRAGENTER
#define DISPID_HTMLELEMENTEVENTS2_ONDRAGOVER                      DISPID_EVMETH_ONDRAGOVER
#define DISPID_HTMLELEMENTEVENTS2_ONDRAGLEAVE                     DISPID_EVMETH_ONDRAGLEAVE
#define DISPID_HTMLELEMENTEVENTS2_ONDROP                          DISPID_EVMETH_ONDROP
#define DISPID_HTMLELEMENTEVENTS2_ONBEFORECUT                     DISPID_EVMETH_ONBEFORECUT
#define DISPID_HTMLELEMENTEVENTS2_ONCUT                           DISPID_EVMETH_ONCUT
#define DISPID_HTMLELEMENTEVENTS2_ONBEFORECOPY                    DISPID_EVMETH_ONBEFORECOPY
#define DISPID_HTMLELEMENTEVENTS2_ONCOPY                          DISPID_EVMETH_ONCOPY
#define DISPID_HTMLELEMENTEVENTS2_ONBEFOREPASTE                   DISPID_EVMETH_ONBEFOREPASTE
#define DISPID_HTMLELEMENTEVENTS2_ONPASTE                         DISPID_EVMETH_ONPASTE
#define DISPID_HTMLELEMENTEVENTS2_ONCONTEXTMENU                   DISPID_EVMETH_ONCONTEXTMENU
#define DISPID_HTMLELEMENTEVENTS2_ONROWSDELETE                    DISPID_EVMETH_ONROWSDELETE
#define DISPID_HTMLELEMENTEVENTS2_ONROWSINSERTED                  DISPID_EVMETH_ONROWSINSERTED
#define DISPID_HTMLELEMENTEVENTS2_ONCELLCHANGE                    DISPID_EVMETH_ONCELLCHANGE
#define DISPID_HTMLELEMENTEVENTS2_ONREADYSTATECHANGE              DISPID_EVMETH_ONREADYSTATECHANGE
#define DISPID_HTMLELEMENTEVENTS2_ONLAYOUTCOMPLETE                DISPID_EVMETH_ONLAYOUTCOMPLETE
#define DISPID_HTMLELEMENTEVENTS2_ONPAGE                          DISPID_EVMETH_ONPAGE
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEENTER                    DISPID_EVMETH_ONMOUSEENTER
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSELEAVE                    DISPID_EVMETH_ONMOUSELEAVE
#define DISPID_HTMLELEMENTEVENTS2_ONACTIVATE                      DISPID_EVMETH_ONACTIVATE
#define DISPID_HTMLELEMENTEVENTS2_ONDEACTIVATE                    DISPID_EVMETH_ONDEACTIVATE
#define DISPID_HTMLELEMENTEVENTS2_ONBEFOREDEACTIVATE              DISPID_EVMETH_ONBEFOREDEACTIVATE
#define DISPID_HTMLELEMENTEVENTS2_ONBEFOREACTIVATE                DISPID_EVMETH_ONBEFOREACTIVATE
#define DISPID_HTMLELEMENTEVENTS2_ONFOCUSIN                       DISPID_EVMETH_ONFOCUSIN
#define DISPID_HTMLELEMENTEVENTS2_ONFOCUSOUT                      DISPID_EVMETH_ONFOCUSOUT
#define DISPID_HTMLELEMENTEVENTS2_ONMOVE                          DISPID_EVMETH_ONMOVE
#define DISPID_HTMLELEMENTEVENTS2_ONCONTROLSELECT                 DISPID_EVMETH_ONCONTROLSELECT
#define DISPID_HTMLELEMENTEVENTS2_ONMOVESTART                     DISPID_EVMETH_ONMOVESTART
#define DISPID_HTMLELEMENTEVENTS2_ONMOVEEND                       DISPID_EVMETH_ONMOVEEND
#define DISPID_HTMLELEMENTEVENTS2_ONRESIZESTART                   DISPID_EVMETH_ONRESIZESTART
#define DISPID_HTMLELEMENTEVENTS2_ONRESIZEEND                     DISPID_EVMETH_ONRESIZEEND
#define DISPID_HTMLELEMENTEVENTS2_ONMOUSEWHEEL                    DISPID_EVMETH_ONMOUSEWHEEL

//    DISPIDs for event set HTMLElementEvents

#define DISPID_HTMLELEMENTEVENTS_ONHELP                           DISPID_EVMETH_ONHELP
#define DISPID_HTMLELEMENTEVENTS_ONCLICK                          DISPID_EVMETH_ONCLICK
#define DISPID_HTMLELEMENTEVENTS_ONDBLCLICK                       DISPID_EVMETH_ONDBLCLICK
#define DISPID_HTMLELEMENTEVENTS_ONKEYPRESS                       DISPID_EVMETH_ONKEYPRESS
#define DISPID_HTMLELEMENTEVENTS_ONKEYDOWN                        DISPID_EVMETH_ONKEYDOWN
#define DISPID_HTMLELEMENTEVENTS_ONKEYUP                          DISPID_EVMETH_ONKEYUP
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEOUT                       DISPID_EVMETH_ONMOUSEOUT
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEOVER                      DISPID_EVMETH_ONMOUSEOVER
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEMOVE                      DISPID_EVMETH_ONMOUSEMOVE
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEDOWN                      DISPID_EVMETH_ONMOUSEDOWN
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEUP                        DISPID_EVMETH_ONMOUSEUP
#define DISPID_HTMLELEMENTEVENTS_ONSELECTSTART                    DISPID_EVMETH_ONSELECTSTART
#define DISPID_HTMLELEMENTEVENTS_ONFILTERCHANGE                   DISPID_EVMETH_ONFILTER
#define DISPID_HTMLELEMENTEVENTS_ONDRAGSTART                      DISPID_EVMETH_ONDRAGSTART
#define DISPID_HTMLELEMENTEVENTS_ONBEFOREUPDATE                   DISPID_EVMETH_ONBEFOREUPDATE
#define DISPID_HTMLELEMENTEVENTS_ONAFTERUPDATE                    DISPID_EVMETH_ONAFTERUPDATE
#define DISPID_HTMLELEMENTEVENTS_ONERRORUPDATE                    DISPID_EVMETH_ONERRORUPDATE
#define DISPID_HTMLELEMENTEVENTS_ONROWEXIT                        DISPID_EVMETH_ONROWEXIT
#define DISPID_HTMLELEMENTEVENTS_ONROWENTER                       DISPID_EVMETH_ONROWENTER
#define DISPID_HTMLELEMENTEVENTS_ONDATASETCHANGED                 DISPID_EVMETH_ONDATASETCHANGED
#define DISPID_HTMLELEMENTEVENTS_ONDATAAVAILABLE                  DISPID_EVMETH_ONDATAAVAILABLE
#define DISPID_HTMLELEMENTEVENTS_ONDATASETCOMPLETE                DISPID_EVMETH_ONDATASETCOMPLETE
#define DISPID_HTMLELEMENTEVENTS_ONLOSECAPTURE                    DISPID_EVMETH_ONLOSECAPTURE
#define DISPID_HTMLELEMENTEVENTS_ONPROPERTYCHANGE                 DISPID_EVMETH_ONPROPERTYCHANGE
#define DISPID_HTMLELEMENTEVENTS_ONSCROLL                         DISPID_EVMETH_ONSCROLL
#define DISPID_HTMLELEMENTEVENTS_ONFOCUS                          DISPID_EVMETH_ONFOCUS
#define DISPID_HTMLELEMENTEVENTS_ONBLUR                           DISPID_EVMETH_ONBLUR
#define DISPID_HTMLELEMENTEVENTS_ONRESIZE                         DISPID_EVMETH_ONRESIZE
#define DISPID_HTMLELEMENTEVENTS_ONDRAG                           DISPID_EVMETH_ONDRAG
#define DISPID_HTMLELEMENTEVENTS_ONDRAGEND                        DISPID_EVMETH_ONDRAGEND
#define DISPID_HTMLELEMENTEVENTS_ONDRAGENTER                      DISPID_EVMETH_ONDRAGENTER
#define DISPID_HTMLELEMENTEVENTS_ONDRAGOVER                       DISPID_EVMETH_ONDRAGOVER
#define DISPID_HTMLELEMENTEVENTS_ONDRAGLEAVE                      DISPID_EVMETH_ONDRAGLEAVE
#define DISPID_HTMLELEMENTEVENTS_ONDROP                           DISPID_EVMETH_ONDROP
#define DISPID_HTMLELEMENTEVENTS_ONBEFORECUT                      DISPID_EVMETH_ONBEFORECUT
#define DISPID_HTMLELEMENTEVENTS_ONCUT                            DISPID_EVMETH_ONCUT
#define DISPID_HTMLELEMENTEVENTS_ONBEFORECOPY                     DISPID_EVMETH_ONBEFORECOPY
#define DISPID_HTMLELEMENTEVENTS_ONCOPY                           DISPID_EVMETH_ONCOPY
#define DISPID_HTMLELEMENTEVENTS_ONBEFOREPASTE                    DISPID_EVMETH_ONBEFOREPASTE
#define DISPID_HTMLELEMENTEVENTS_ONPASTE                          DISPID_EVMETH_ONPASTE
#define DISPID_HTMLELEMENTEVENTS_ONCONTEXTMENU                    DISPID_EVMETH_ONCONTEXTMENU
#define DISPID_HTMLELEMENTEVENTS_ONROWSDELETE                     DISPID_EVMETH_ONROWSDELETE
#define DISPID_HTMLELEMENTEVENTS_ONROWSINSERTED                   DISPID_EVMETH_ONROWSINSERTED
#define DISPID_HTMLELEMENTEVENTS_ONCELLCHANGE                     DISPID_EVMETH_ONCELLCHANGE
#define DISPID_HTMLELEMENTEVENTS_ONREADYSTATECHANGE               DISPID_EVMETH_ONREADYSTATECHANGE
#define DISPID_HTMLELEMENTEVENTS_ONBEFOREEDITFOCUS                DISPID_EVMETH_ONBEFOREEDITFOCUS
#define DISPID_HTMLELEMENTEVENTS_ONLAYOUTCOMPLETE                 DISPID_EVMETH_ONLAYOUTCOMPLETE
#define DISPID_HTMLELEMENTEVENTS_ONPAGE                           DISPID_EVMETH_ONPAGE
#define DISPID_HTMLELEMENTEVENTS_ONBEFOREDEACTIVATE               DISPID_EVMETH_ONBEFOREDEACTIVATE
#define DISPID_HTMLELEMENTEVENTS_ONBEFOREACTIVATE                 DISPID_EVMETH_ONBEFOREACTIVATE
#define DISPID_HTMLELEMENTEVENTS_ONMOVE                           DISPID_EVMETH_ONMOVE
#define DISPID_HTMLELEMENTEVENTS_ONCONTROLSELECT                  DISPID_EVMETH_ONCONTROLSELECT
#define DISPID_HTMLELEMENTEVENTS_ONMOVESTART                      DISPID_EVMETH_ONMOVESTART
#define DISPID_HTMLELEMENTEVENTS_ONMOVEEND                        DISPID_EVMETH_ONMOVEEND
#define DISPID_HTMLELEMENTEVENTS_ONRESIZESTART                    DISPID_EVMETH_ONRESIZESTART
#define DISPID_HTMLELEMENTEVENTS_ONRESIZEEND                      DISPID_EVMETH_ONRESIZEEND
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEENTER                     DISPID_EVMETH_ONMOUSEENTER
#define DISPID_HTMLELEMENTEVENTS_ONMOUSELEAVE                     DISPID_EVMETH_ONMOUSELEAVE
#define DISPID_HTMLELEMENTEVENTS_ONMOUSEWHEEL                     DISPID_EVMETH_ONMOUSEWHEEL
#define DISPID_HTMLELEMENTEVENTS_ONACTIVATE                       DISPID_EVMETH_ONACTIVATE
#define DISPID_HTMLELEMENTEVENTS_ONDEACTIVATE                     DISPID_EVMETH_ONDEACTIVATE
#define DISPID_HTMLELEMENTEVENTS_ONFOCUSIN                        DISPID_EVMETH_ONFOCUSIN
#define DISPID_HTMLELEMENTEVENTS_ONFOCUSOUT                       DISPID_EVMETH_ONFOCUSOUT

//    DISPIDs for interface IHTMLElementDefaults

#define DISPID_IHTMLELEMENTDEFAULTS_STYLE                         DISPID_DEFAULTS+1
#define DISPID_IHTMLELEMENTDEFAULTS_TABSTOP                       DISPID_DEFAULTS+2
#define DISPID_IHTMLELEMENTDEFAULTS_VIEWINHERITSTYLE              DISPID_A_VIEWINHERITSTYLE
#define DISPID_IHTMLELEMENTDEFAULTS_VIEWMASTERTAB                 DISPID_DEFAULTS+6
#define DISPID_IHTMLELEMENTDEFAULTS_SCROLLSEGMENTX                DISPID_DEFAULTS+3
#define DISPID_IHTMLELEMENTDEFAULTS_SCROLLSEGMENTY                DISPID_DEFAULTS+4
#define DISPID_IHTMLELEMENTDEFAULTS_ISMULTILINE                   DISPID_DEFAULTS+8
#define DISPID_IHTMLELEMENTDEFAULTS_CONTENTEDITABLE               DISPID_A_EDITABLE
#define DISPID_IHTMLELEMENTDEFAULTS_CANHAVEHTML                   DISPID_DEFAULTS+9
#define DISPID_IHTMLELEMENTDEFAULTS_VIEWLINK                      DISPID_DEFAULTS+11
#define DISPID_IHTMLELEMENTDEFAULTS_FROZEN                        DISPID_A_FROZEN

//    DISPIDs for interface IHTCDefaultDispatch

#define DISPID_IHTCDEFAULTDISPATCH_ELEMENT                        DISPID_A_HTCDD_ELEMENT
#define DISPID_IHTCDEFAULTDISPATCH_CREATEEVENTOBJECT              DISPID_A_HTCDD_CREATEEVENTOBJECT
#define DISPID_IHTCDEFAULTDISPATCH_DEFAULTS                       DISPID_A_HTCDD_DEFAULTS
#define DISPID_IHTCDEFAULTDISPATCH_DOCUMENT                       DISPID_A_DOCFRAGMENT

//    DISPIDs for interface IHTCPropertyBehavior

#define DISPID_IHTCPROPERTYBEHAVIOR_FIRECHANGE                    DISPID_HTMLOBJECT+0
#define DISPID_IHTCPROPERTYBEHAVIOR_VALUE                         DISPID_A_HTCDISPATCHITEM_VALUE

//    DISPIDs for interface IHTCEventBehavior

#define DISPID_IHTCEVENTBEHAVIOR_FIRE                             DISPID_HTMLOBJECT+0

//    DISPIDs for interface IHTCAttachBehavior

#define DISPID_IHTCATTACHBEHAVIOR_FIREEVENT                       DISPID_VALUE
#define DISPID_IHTCATTACHBEHAVIOR_DETACHEVENT                     DISPID_HTMLOBJECT+0

//    DISPIDs for interface IHTCAttachBehavior2

#define DISPID_IHTCATTACHBEHAVIOR2_FIREEVENT                      DISPID_VALUE

//    DISPIDs for interface IHTCDescBehavior

#define DISPID_IHTCDESCBEHAVIOR_URN                               DISPID_HTMLOBJECT+0
#define DISPID_IHTCDESCBEHAVIOR_NAME                              DISPID_HTMLOBJECT+1

//    DISPIDs for interface IHTMLUrnCollection

#define DISPID_IHTMLURNCOLLECTION_LENGTH                          DISPID_URN_COLL+1
#define DISPID_IHTMLURNCOLLECTION_ITEM                            DISPID_VALUE

//    DISPIDs for interface IHTMLGenericElement

#define DISPID_IHTMLGENERICELEMENT_RECORDSET                      DISPID_GENERIC+1
#define DISPID_IHTMLGENERICELEMENT_NAMEDRECORDSET                 DISPID_GENERIC+2

//    DISPIDs for interface IHTMLStyleSheetRule

#define DISPID_IHTMLSTYLESHEETRULE_SELECTORTEXT                   DISPID_STYLERULE+1
#define DISPID_IHTMLSTYLESHEETRULE_STYLE                          STDPROPID_XOBJ_STYLE
#define DISPID_IHTMLSTYLESHEETRULE_READONLY                       DISPID_STYLERULE+2

//    DISPIDs for interface IHTMLStyleSheetRulesCollection

#define DISPID_IHTMLSTYLESHEETRULESCOLLECTION_LENGTH              DISPID_STYLERULES_COL+1
#define DISPID_IHTMLSTYLESHEETRULESCOLLECTION_ITEM                DISPID_VALUE

//    DISPIDs for interface IHTMLStyleSheetPage

#define DISPID_IHTMLSTYLESHEETPAGE_SELECTOR                       DISPID_STYLEPAGE+1
#define DISPID_IHTMLSTYLESHEETPAGE_PSEUDOCLASS                    DISPID_STYLEPAGE+2

//    DISPIDs for interface IHTMLStyleSheetPagesCollection

#define DISPID_IHTMLSTYLESHEETPAGESCOLLECTION_LENGTH              DISPID_STYLEPAGES_COL+1
#define DISPID_IHTMLSTYLESHEETPAGESCOLLECTION_ITEM                DISPID_VALUE

//    DISPIDs for interface IHTMLStyleSheet

#define DISPID_IHTMLSTYLESHEET_TITLE                              DISPID_STYLESHEET+1
#define DISPID_IHTMLSTYLESHEET_PARENTSTYLESHEET                   DISPID_STYLESHEET+2
#define DISPID_IHTMLSTYLESHEET_OWNINGELEMENT                      DISPID_STYLESHEET+3
#define DISPID_IHTMLSTYLESHEET_DISABLED                           STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLSTYLESHEET_READONLY                           DISPID_STYLESHEET+4
#define DISPID_IHTMLSTYLESHEET_IMPORTS                            DISPID_STYLESHEET+5
#define DISPID_IHTMLSTYLESHEET_HREF                               DISPID_STYLESHEET+6
#define DISPID_IHTMLSTYLESHEET_TYPE                               DISPID_STYLESHEET+7
#define DISPID_IHTMLSTYLESHEET_ID                                 DISPID_STYLESHEET+8
#define DISPID_IHTMLSTYLESHEET_ADDIMPORT                          DISPID_STYLESHEET+9
#define DISPID_IHTMLSTYLESHEET_ADDRULE                            DISPID_STYLESHEET+10
#define DISPID_IHTMLSTYLESHEET_REMOVEIMPORT                       DISPID_STYLESHEET+11
#define DISPID_IHTMLSTYLESHEET_REMOVERULE                         DISPID_STYLESHEET+12
#define DISPID_IHTMLSTYLESHEET_MEDIA                              DISPID_STYLESHEET+13
#define DISPID_IHTMLSTYLESHEET_CSSTEXT                            DISPID_STYLESHEET+14
#define DISPID_IHTMLSTYLESHEET_RULES                              DISPID_STYLESHEET+15

//    DISPIDs for interface IHTMLStyleSheet2

#define DISPID_IHTMLSTYLESHEET2_PAGES                             DISPID_STYLESHEET+16
#define DISPID_IHTMLSTYLESHEET2_ADDPAGERULE                       DISPID_STYLESHEET+17

//    DISPIDs for interface IHTMLStyleSheet3

#define DISPID_IHTMLSTYLESHEET3_IE8_HREF                          DISPID_IE8_STYLE
#define DISPID_IHTMLSTYLESHEET3_ISALTERNATE                       DISPID_IE8_STYLE+1
#define DISPID_IHTMLSTYLESHEET3_ISPREFALTERNATE                   DISPID_IE8_STYLE+2

//    DISPIDs for interface IHTMLStyleSheetsCollection

#define DISPID_IHTMLSTYLESHEETSCOLLECTION_LENGTH                  DISPID_STYLESHEETS_COL+1
#define DISPID_IHTMLSTYLESHEETSCOLLECTION__NEWENUM                DISPID_NEWENUM
#define DISPID_IHTMLSTYLESHEETSCOLLECTION_ITEM                    DISPID_VALUE

//    DISPIDs for interface IHTMLLinkElement

#define DISPID_IHTMLLINKELEMENT_HREF                              DISPID_HEDELEMS+5
#define DISPID_IHTMLLINKELEMENT_REL                               DISPID_HEDELEMS+6
#define DISPID_IHTMLLINKELEMENT_REV                               DISPID_HEDELEMS+7
#define DISPID_IHTMLLINKELEMENT_TYPE                              DISPID_HEDELEMS+8
#define DISPID_IHTMLLINKELEMENT_READYSTATE                        DISPID_A_READYSTATE
#define DISPID_IHTMLLINKELEMENT_ONREADYSTATECHANGE                DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLLINKELEMENT_ONLOAD                            DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLLINKELEMENT_ONERROR                           DISPID_EVPROP_ONERROR
#define DISPID_IHTMLLINKELEMENT_STYLESHEET                        DISPID_HEDELEMS+14
#define DISPID_IHTMLLINKELEMENT_DISABLED                          STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLLINKELEMENT_MEDIA                             DISPID_HEDELEMS+16

//    DISPIDs for interface IHTMLLinkElement2

#define DISPID_IHTMLLINKELEMENT2_TARGET                           DISPID_HEDELEMS+17

//    DISPIDs for interface IHTMLLinkElement3

#define DISPID_IHTMLLINKELEMENT3_CHARSET                          DISPID_HEDELEMS+18
#define DISPID_IHTMLLINKELEMENT3_HREFLANG                         DISPID_HEDELEMS+19

//    DISPIDs for interface IHTMLLinkElement4

#define DISPID_IHTMLLINKELEMENT4_IE8_HREF                         DISPID_IE8_LINK

//    DISPIDs for event set HTMLLinkElementEvents2

#define DISPID_HTMLLINKELEMENTEVENTS2_ONLOAD                      DISPID_EVMETH_ONLOAD
#define DISPID_HTMLLINKELEMENTEVENTS2_ONERROR                     DISPID_EVMETH_ONERROR

//    DISPIDs for event set HTMLLinkElementEvents

#define DISPID_HTMLLINKELEMENTEVENTS_ONLOAD                       DISPID_EVMETH_ONLOAD
#define DISPID_HTMLLINKELEMENTEVENTS_ONERROR                      DISPID_EVMETH_ONERROR

//    DISPIDs for interface IHTMLTxtRange

#define DISPID_IHTMLTXTRANGE_HTMLTEXT                             DISPID_RANGE+3
#define DISPID_IHTMLTXTRANGE_TEXT                                 DISPID_RANGE+4
#define DISPID_IHTMLTXTRANGE_PARENTELEMENT                        DISPID_RANGE+6
#define DISPID_IHTMLTXTRANGE_DUPLICATE                            DISPID_RANGE+8
#define DISPID_IHTMLTXTRANGE_INRANGE                              DISPID_RANGE+10
#define DISPID_IHTMLTXTRANGE_ISEQUAL                              DISPID_RANGE+11
#define DISPID_IHTMLTXTRANGE_SCROLLINTOVIEW                       DISPID_RANGE+12
#define DISPID_IHTMLTXTRANGE_COLLAPSE                             DISPID_RANGE+13
#define DISPID_IHTMLTXTRANGE_EXPAND                               DISPID_RANGE+14
#define DISPID_IHTMLTXTRANGE_MOVE                                 DISPID_RANGE+15
#define DISPID_IHTMLTXTRANGE_MOVESTART                            DISPID_RANGE+16
#define DISPID_IHTMLTXTRANGE_MOVEEND                              DISPID_RANGE+17
#define DISPID_IHTMLTXTRANGE_SELECT                               DISPID_RANGE+24
#define DISPID_IHTMLTXTRANGE_PASTEHTML                            DISPID_RANGE+26
#define DISPID_IHTMLTXTRANGE_MOVETOELEMENTTEXT                    DISPID_RANGE+1
#define DISPID_IHTMLTXTRANGE_SETENDPOINT                          DISPID_RANGE+25
#define DISPID_IHTMLTXTRANGE_COMPAREENDPOINTS                     DISPID_RANGE+18
#define DISPID_IHTMLTXTRANGE_FINDTEXT                             DISPID_RANGE+19
#define DISPID_IHTMLTXTRANGE_MOVETOPOINT                          DISPID_RANGE+20
#define DISPID_IHTMLTXTRANGE_GETBOOKMARK                          DISPID_RANGE+21
#define DISPID_IHTMLTXTRANGE_MOVETOBOOKMARK                       DISPID_RANGE+9
#define DISPID_IHTMLTXTRANGE_QUERYCOMMANDSUPPORTED                DISPID_RANGE+27
#define DISPID_IHTMLTXTRANGE_QUERYCOMMANDENABLED                  DISPID_RANGE+28
#define DISPID_IHTMLTXTRANGE_QUERYCOMMANDSTATE                    DISPID_RANGE+29
#define DISPID_IHTMLTXTRANGE_QUERYCOMMANDINDETERM                 DISPID_RANGE+30
#define DISPID_IHTMLTXTRANGE_QUERYCOMMANDTEXT                     DISPID_RANGE+31
#define DISPID_IHTMLTXTRANGE_QUERYCOMMANDVALUE                    DISPID_RANGE+32
#define DISPID_IHTMLTXTRANGE_EXECCOMMAND                          DISPID_RANGE+33
#define DISPID_IHTMLTXTRANGE_EXECCOMMANDSHOWHELP                  DISPID_RANGE+34

//    DISPIDs for interface IHTMLTextRangeMetrics

#define DISPID_IHTMLTEXTRANGEMETRICS_OFFSETTOP                    DISPID_RANGE+35
#define DISPID_IHTMLTEXTRANGEMETRICS_OFFSETLEFT                   DISPID_RANGE+36
#define DISPID_IHTMLTEXTRANGEMETRICS_BOUNDINGTOP                  DISPID_RANGE+37
#define DISPID_IHTMLTEXTRANGEMETRICS_BOUNDINGLEFT                 DISPID_RANGE+38
#define DISPID_IHTMLTEXTRANGEMETRICS_BOUNDINGWIDTH                DISPID_RANGE+39
#define DISPID_IHTMLTEXTRANGEMETRICS_BOUNDINGHEIGHT               DISPID_RANGE+40

//    DISPIDs for interface IHTMLTextRangeMetrics2

#define DISPID_IHTMLTEXTRANGEMETRICS2_GETCLIENTRECTS              DISPID_RANGE+41
#define DISPID_IHTMLTEXTRANGEMETRICS2_GETBOUNDINGCLIENTRECT       DISPID_RANGE+42

//    DISPIDs for interface IHTMLTxtRangeCollection

#define DISPID_IHTMLTXTRANGECOLLECTION_LENGTH                     DISPID_COLLECTION
#define DISPID_IHTMLTXTRANGECOLLECTION__NEWENUM                   DISPID_NEWENUM
#define DISPID_IHTMLTXTRANGECOLLECTION_ITEM                       DISPID_VALUE

//    DISPIDs for interface IHTMLFormElement

#define DISPID_IHTMLFORMELEMENT_ACTION                            DISPID_FORM+1
#define DISPID_IHTMLFORMELEMENT_DIR                               DISPID_A_DIR
#define DISPID_IHTMLFORMELEMENT_ENCODING                          DISPID_FORM+3
#define DISPID_IHTMLFORMELEMENT_METHOD                            DISPID_FORM+4
#define DISPID_IHTMLFORMELEMENT_ELEMENTS                          DISPID_FORM+5
#define DISPID_IHTMLFORMELEMENT_TARGET                            DISPID_FORM+6
#define DISPID_IHTMLFORMELEMENT_NAME                              STDPROPID_XOBJ_NAME
#define DISPID_IHTMLFORMELEMENT_ONSUBMIT                          DISPID_EVPROP_ONSUBMIT
#define DISPID_IHTMLFORMELEMENT_ONRESET                           DISPID_EVPROP_ONRESET
#define DISPID_IHTMLFORMELEMENT_SUBMIT                            DISPID_FORM+9
#define DISPID_IHTMLFORMELEMENT_RESET                             DISPID_FORM+10
#define DISPID_IHTMLFORMELEMENT_LENGTH                            DISPID_COLLECTION
#define DISPID_IHTMLFORMELEMENT__NEWENUM                          DISPID_NEWENUM
#define DISPID_IHTMLFORMELEMENT_ITEM                              DISPID_VALUE
#define DISPID_IHTMLFORMELEMENT_TAGS                              DISPID_COLLECTION+2

//    DISPIDs for interface IHTMLFormElement2

#define DISPID_IHTMLFORMELEMENT2_ACCEPTCHARSET                    DISPID_FORM+11
#define DISPID_IHTMLFORMELEMENT2_URNS                             DISPID_COLLECTION+5

//    DISPIDs for interface IHTMLFormElement3

#define DISPID_IHTMLFORMELEMENT3_NAMEDITEM                        DISPID_COLLECTION+6

//    DISPIDs for interface IHTMLSubmitData

#define DISPID_IHTMLSUBMITDATA_APPENDNAMEVALUEPAIR                DISPID_FORM+12
#define DISPID_IHTMLSUBMITDATA_APPENDNAMEFILEPAIR                 DISPID_FORM+13
#define DISPID_IHTMLSUBMITDATA_APPENDITEMSEPARATOR                DISPID_FORM+14

//    DISPIDs for interface IHTMLFormElement4

#define DISPID_IHTMLFORMELEMENT4_IE8_ACTION                       DISPID_IE8_FORM

//    DISPIDs for event set HTMLFormElementEvents2

#define DISPID_HTMLFORMELEMENTEVENTS2_ONSUBMIT                    DISPID_EVMETH_ONSUBMIT
#define DISPID_HTMLFORMELEMENTEVENTS2_ONRESET                     DISPID_EVMETH_ONRESET

//    DISPIDs for event set HTMLFormElementEvents

#define DISPID_HTMLFORMELEMENTEVENTS_ONSUBMIT                     DISPID_EVMETH_ONSUBMIT
#define DISPID_HTMLFORMELEMENTEVENTS_ONRESET                      DISPID_EVMETH_ONRESET

//    DISPIDs for interface IHTMLControlElement

#define DISPID_IHTMLCONTROLELEMENT_TABINDEX                       STDPROPID_XOBJ_TABINDEX
#define DISPID_IHTMLCONTROLELEMENT_FOCUS                          DISPID_SITE+0
#define DISPID_IHTMLCONTROLELEMENT_ACCESSKEY                      DISPID_SITE+5
#define DISPID_IHTMLCONTROLELEMENT_ONBLUR                         DISPID_EVPROP_ONBLUR
#define DISPID_IHTMLCONTROLELEMENT_ONFOCUS                        DISPID_EVPROP_ONFOCUS
#define DISPID_IHTMLCONTROLELEMENT_ONRESIZE                       DISPID_EVPROP_ONRESIZE
#define DISPID_IHTMLCONTROLELEMENT_BLUR                           DISPID_SITE+2
#define DISPID_IHTMLCONTROLELEMENT_ADDFILTER                      DISPID_SITE+17
#define DISPID_IHTMLCONTROLELEMENT_REMOVEFILTER                   DISPID_SITE+18
#define DISPID_IHTMLCONTROLELEMENT_CLIENTHEIGHT                   DISPID_SITE+19
#define DISPID_IHTMLCONTROLELEMENT_CLIENTWIDTH                    DISPID_SITE+20
#define DISPID_IHTMLCONTROLELEMENT_CLIENTTOP                      DISPID_SITE+21
#define DISPID_IHTMLCONTROLELEMENT_CLIENTLEFT                     DISPID_SITE+22

//    DISPIDs for interface IHTMLTextContainer

#define DISPID_IHTMLTEXTCONTAINER_CREATECONTROLRANGE              DISPID_TEXTSITE+1
#define DISPID_IHTMLTEXTCONTAINER_SCROLLHEIGHT                    DISPID_TEXTSITE+2
#define DISPID_IHTMLTEXTCONTAINER_SCROLLWIDTH                     DISPID_TEXTSITE+3
#define DISPID_IHTMLTEXTCONTAINER_SCROLLTOP                       DISPID_TEXTSITE+4
#define DISPID_IHTMLTEXTCONTAINER_SCROLLLEFT                      DISPID_TEXTSITE+5
#define DISPID_IHTMLTEXTCONTAINER_ONSCROLL                        DISPID_EVPROP_ONSCROLL

//    DISPIDs for event set HTMLTextContainerEvents2

#define DISPID_HTMLTEXTCONTAINEREVENTS2_ONCHANGE                  DISPID_EVMETH_ONCHANGE
#define DISPID_HTMLTEXTCONTAINEREVENTS2_ONSELECT                  DISPID_EVMETH_ONSELECT

//    DISPIDs for event set HTMLTextContainerEvents

#define DISPID_HTMLTEXTCONTAINEREVENTS_ONCHANGE                   DISPID_EVMETH_ONCHANGE
#define DISPID_HTMLTEXTCONTAINEREVENTS_ONSELECT                   DISPID_EVMETH_ONSELECT

//    DISPIDs for interface IHTMLControlRange

#define DISPID_IHTMLCONTROLRANGE_SELECT                           DISPID_RANGE+2
#define DISPID_IHTMLCONTROLRANGE_ADD                              DISPID_RANGE+3
#define DISPID_IHTMLCONTROLRANGE_REMOVE                           DISPID_RANGE+4
#define DISPID_IHTMLCONTROLRANGE_ITEM                             DISPID_VALUE
#define DISPID_IHTMLCONTROLRANGE_SCROLLINTOVIEW                   DISPID_RANGE+6
#define DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDSUPPORTED            DISPID_RANGE+7
#define DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDENABLED              DISPID_RANGE+8
#define DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDSTATE                DISPID_RANGE+9
#define DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDINDETERM             DISPID_RANGE+10
#define DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDTEXT                 DISPID_RANGE+11
#define DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDVALUE                DISPID_RANGE+12
#define DISPID_IHTMLCONTROLRANGE_EXECCOMMAND                      DISPID_RANGE+13
#define DISPID_IHTMLCONTROLRANGE_EXECCOMMANDSHOWHELP              DISPID_RANGE+14
#define DISPID_IHTMLCONTROLRANGE_COMMONPARENTELEMENT              DISPID_RANGE+15
#define DISPID_IHTMLCONTROLRANGE_LENGTH                           DISPID_RANGE+5

//    DISPIDs for interface IHTMLControlRange2

#define DISPID_IHTMLCONTROLRANGE2_ADDELEMENT                      DISPID_RANGE+16

//    DISPIDs for interface IHTMLImgElement

#define DISPID_IHTMLIMGELEMENT_ISMAP                              DISPID_IMG+2
#define DISPID_IHTMLIMGELEMENT_USEMAP                             DISPID_IMG+8
#define DISPID_IHTMLIMGELEMENT_MIMETYPE                           DISPID_IMG+10
#define DISPID_IHTMLIMGELEMENT_FILESIZE                           DISPID_IMG+11
#define DISPID_IHTMLIMGELEMENT_FILECREATEDDATE                    DISPID_IMG+12
#define DISPID_IHTMLIMGELEMENT_FILEMODIFIEDDATE                   DISPID_IMG+13
#define DISPID_IHTMLIMGELEMENT_FILEUPDATEDDATE                    DISPID_IMG+14
#define DISPID_IHTMLIMGELEMENT_PROTOCOL                           DISPID_IMG+15
#define DISPID_IHTMLIMGELEMENT_HREF                               DISPID_IMG+16
#define DISPID_IHTMLIMGELEMENT_NAMEPROP                           DISPID_IMG+17
#define DISPID_IHTMLIMGELEMENT_BORDER                             DISPID_IMGBASE+4
#define DISPID_IHTMLIMGELEMENT_VSPACE                             DISPID_IMGBASE+5
#define DISPID_IHTMLIMGELEMENT_HSPACE                             DISPID_IMGBASE+6
#define DISPID_IHTMLIMGELEMENT_ALT                                DISPID_IMGBASE+2
#define DISPID_IHTMLIMGELEMENT_SRC                                DISPID_IMGBASE+3
#define DISPID_IHTMLIMGELEMENT_LOWSRC                             DISPID_IMGBASE+7
#define DISPID_IHTMLIMGELEMENT_VRML                               DISPID_IMGBASE+8
#define DISPID_IHTMLIMGELEMENT_DYNSRC                             DISPID_IMGBASE+9
#define DISPID_IHTMLIMGELEMENT_READYSTATE                         DISPID_A_READYSTATE
#define DISPID_IHTMLIMGELEMENT_COMPLETE                           DISPID_IMGBASE+10
#define DISPID_IHTMLIMGELEMENT_LOOP                               DISPID_IMGBASE+11
#define DISPID_IHTMLIMGELEMENT_ALIGN                              STDPROPID_XOBJ_CONTROLALIGN
#define DISPID_IHTMLIMGELEMENT_ONLOAD                             DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLIMGELEMENT_ONERROR                            DISPID_EVPROP_ONERROR
#define DISPID_IHTMLIMGELEMENT_ONABORT                            DISPID_EVPROP_ONABORT
#define DISPID_IHTMLIMGELEMENT_NAME                               STDPROPID_XOBJ_NAME
#define DISPID_IHTMLIMGELEMENT_WIDTH                              STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLIMGELEMENT_HEIGHT                             STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLIMGELEMENT_START                              DISPID_IMGBASE+13

//    DISPIDs for interface IHTMLImgElement2

#define DISPID_IHTMLIMGELEMENT2_LONGDESC                          DISPID_IMG+19

//    DISPIDs for interface IHTMLImgElement3

#define DISPID_IHTMLIMGELEMENT3_IE8_LONGDESC                      DISPID_IE8_IMG+1
#define DISPID_IHTMLIMGELEMENT3_IE8_VRML                          DISPID_IE8_IMG+2
#define DISPID_IHTMLIMGELEMENT3_IE8_LOWSRC                        DISPID_IE8_IMG+3
#define DISPID_IHTMLIMGELEMENT3_IE8_DYNSRC                        DISPID_IE8_IMG+4

//    DISPIDs for interface IHTMLImageElementFactory

#define DISPID_IHTMLIMAGEELEMENTFACTORY_CREATE                    DISPID_VALUE

//    DISPIDs for event set HTMLImgEvents2

#define DISPID_HTMLIMGEVENTS2_ONLOAD                              DISPID_EVMETH_ONLOAD
#define DISPID_HTMLIMGEVENTS2_ONERROR                             DISPID_EVMETH_ONERROR
#define DISPID_HTMLIMGEVENTS2_ONABORT                             DISPID_EVMETH_ONABORT

//    DISPIDs for event set HTMLImgEvents

#define DISPID_HTMLIMGEVENTS_ONLOAD                               DISPID_EVMETH_ONLOAD
#define DISPID_HTMLIMGEVENTS_ONERROR                              DISPID_EVMETH_ONERROR
#define DISPID_HTMLIMGEVENTS_ONABORT                              DISPID_EVMETH_ONABORT

//    DISPIDs for interface IHTMLXMLHttpRequest

#define DISPID_IHTMLXMLHTTPREQUEST_READYSTATE                     DISPID_XMLHTTPREQUEST+2
#define DISPID_IHTMLXMLHTTPREQUEST_RESPONSEBODY                   DISPID_XMLHTTPREQUEST+3
#define DISPID_IHTMLXMLHTTPREQUEST_RESPONSETEXT                   DISPID_XMLHTTPREQUEST+4
#define DISPID_IHTMLXMLHTTPREQUEST_RESPONSEXML                    DISPID_XMLHTTPREQUEST+5
#define DISPID_IHTMLXMLHTTPREQUEST_STATUS                         DISPID_XMLHTTPREQUEST+6
#define DISPID_IHTMLXMLHTTPREQUEST_STATUSTEXT                     DISPID_XMLHTTPREQUEST+7
#define DISPID_IHTMLXMLHTTPREQUEST_ONREADYSTATECHANGE             DISPID_XMLHTTPREQUEST+8
#define DISPID_IHTMLXMLHTTPREQUEST_ABORT                          DISPID_XMLHTTPREQUEST+9
#define DISPID_IHTMLXMLHTTPREQUEST_OPEN                           DISPID_XMLHTTPREQUEST+10
#define DISPID_IHTMLXMLHTTPREQUEST_SEND                           DISPID_XMLHTTPREQUEST+11
#define DISPID_IHTMLXMLHTTPREQUEST_GETALLRESPONSEHEADERS          DISPID_XMLHTTPREQUEST+12
#define DISPID_IHTMLXMLHTTPREQUEST_GETRESPONSEHEADER              DISPID_XMLHTTPREQUEST+13
#define DISPID_IHTMLXMLHTTPREQUEST_SETREQUESTHEADER               DISPID_XMLHTTPREQUEST+14

//    DISPIDs for interface IHTMLXMLHttpRequest2

#define DISPID_IHTMLXMLHTTPREQUEST2_TIMEOUT                       DISPID_XMLHTTPREQUEST+15
#define DISPID_IHTMLXMLHTTPREQUEST2_ONTIMEOUT                     DISPID_XMLHTTPREQUEST+16

//    DISPIDs for interface IHTMLXMLHttpRequestFactory

#define DISPID_IHTMLXMLHTTPREQUESTFACTORY_CREATE                  DISPID_VALUE

//    DISPIDs for event set HTMLXMLHttpRequestEvents

#define DISPID_HTMLXMLHTTPREQUESTEVENTS_ONTIMEOUT                 DISPID_XMLHTTPREQUEST+16
#define DISPID_HTMLXMLHTTPREQUESTEVENTS_ONREADYSTATECHANGE        DISPID_XMLHTTPREQUEST+8

//    DISPIDs for interface IHTMLBodyElement

#define DISPID_IHTMLBODYELEMENT_BACKGROUND                        DISPID_A_BACKGROUNDIMAGE
#define DISPID_IHTMLBODYELEMENT_BGPROPERTIES                      DISPID_A_BACKGROUNDATTACHMENT
#define DISPID_IHTMLBODYELEMENT_LEFTMARGIN                        DISPID_A_MARGINLEFT
#define DISPID_IHTMLBODYELEMENT_TOPMARGIN                         DISPID_A_MARGINTOP
#define DISPID_IHTMLBODYELEMENT_RIGHTMARGIN                       DISPID_A_MARGINRIGHT
#define DISPID_IHTMLBODYELEMENT_BOTTOMMARGIN                      DISPID_A_MARGINBOTTOM
#define DISPID_IHTMLBODYELEMENT_NOWRAP                            DISPID_A_NOWRAP
#define DISPID_IHTMLBODYELEMENT_BGCOLOR                           DISPID_BACKCOLOR
#define DISPID_IHTMLBODYELEMENT_TEXT                              DISPID_A_COLOR
#define DISPID_IHTMLBODYELEMENT_LINK                              DISPID_BODY+10
#define DISPID_IHTMLBODYELEMENT_VLINK                             DISPID_BODY+12
#define DISPID_IHTMLBODYELEMENT_ALINK                             DISPID_BODY+11
#define DISPID_IHTMLBODYELEMENT_ONLOAD                            DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLBODYELEMENT_ONUNLOAD                          DISPID_EVPROP_ONUNLOAD
#define DISPID_IHTMLBODYELEMENT_SCROLL                            DISPID_A_SCROLL
#define DISPID_IHTMLBODYELEMENT_ONSELECT                          DISPID_EVPROP_ONSELECT
#define DISPID_IHTMLBODYELEMENT_ONBEFOREUNLOAD                    DISPID_EVPROP_ONBEFOREUNLOAD
#define DISPID_IHTMLBODYELEMENT_CREATETEXTRANGE                   DISPID_BODY+13

//    DISPIDs for interface IHTMLBodyElement2

#define DISPID_IHTMLBODYELEMENT2_ONBEFOREPRINT                    DISPID_EVPROP_ONBEFOREPRINT
#define DISPID_IHTMLBODYELEMENT2_ONAFTERPRINT                     DISPID_EVPROP_ONAFTERPRINT

//    DISPIDs for interface IHTMLBodyElement3

#define DISPID_IHTMLBODYELEMENT3_IE8_BACKGROUND                   DISPID_IE8_BODY
#define DISPID_IHTMLBODYELEMENT3_ONONLINE                         DISPID_EVPROP_ONONLINE
#define DISPID_IHTMLBODYELEMENT3_ONOFFLINE                        DISPID_EVPROP_ONOFFLINE
#define DISPID_IHTMLBODYELEMENT3_ONHASHCHANGE                     DISPID_EVPROP_ONHASHCHANGE

//    DISPIDs for interface IHTMLFontElement

#define DISPID_IHTMLFONTELEMENT_COLOR                             DISPID_A_COLOR
#define DISPID_IHTMLFONTELEMENT_FACE                              DISPID_A_FONTFACE
#define DISPID_IHTMLFONTELEMENT_SIZE                              DISPID_A_FONTSIZE

//    DISPIDs for interface IHTMLAnchorElement

#define DISPID_IHTMLANCHORELEMENT_HREF                            DISPID_VALUE
#define DISPID_IHTMLANCHORELEMENT_TARGET                          DISPID_ANCHOR+3
#define DISPID_IHTMLANCHORELEMENT_REL                             DISPID_ANCHOR+5
#define DISPID_IHTMLANCHORELEMENT_REV                             DISPID_ANCHOR+6
#define DISPID_IHTMLANCHORELEMENT_URN                             DISPID_ANCHOR+7
#define DISPID_IHTMLANCHORELEMENT_METHODS                         DISPID_ANCHOR+8
#define DISPID_IHTMLANCHORELEMENT_NAME                            STDPROPID_XOBJ_NAME
#define DISPID_IHTMLANCHORELEMENT_HOST                            DISPID_ANCHOR+12
#define DISPID_IHTMLANCHORELEMENT_HOSTNAME                        DISPID_ANCHOR+13
#define DISPID_IHTMLANCHORELEMENT_PATHNAME                        DISPID_ANCHOR+14
#define DISPID_IHTMLANCHORELEMENT_PORT                            DISPID_ANCHOR+15
#define DISPID_IHTMLANCHORELEMENT_PROTOCOL                        DISPID_ANCHOR+16
#define DISPID_IHTMLANCHORELEMENT_SEARCH                          DISPID_ANCHOR+17
#define DISPID_IHTMLANCHORELEMENT_HASH                            DISPID_ANCHOR+18
#define DISPID_IHTMLANCHORELEMENT_ONBLUR                          DISPID_EVPROP_ONBLUR
#define DISPID_IHTMLANCHORELEMENT_ONFOCUS                         DISPID_EVPROP_ONFOCUS
#define DISPID_IHTMLANCHORELEMENT_ACCESSKEY                       DISPID_SITE+5
#define DISPID_IHTMLANCHORELEMENT_PROTOCOLLONG                    DISPID_ANCHOR+31
#define DISPID_IHTMLANCHORELEMENT_MIMETYPE                        DISPID_ANCHOR+30
#define DISPID_IHTMLANCHORELEMENT_NAMEPROP                        DISPID_ANCHOR+32
#define DISPID_IHTMLANCHORELEMENT_TABINDEX                        STDPROPID_XOBJ_TABINDEX
#define DISPID_IHTMLANCHORELEMENT_FOCUS                           DISPID_SITE+0
#define DISPID_IHTMLANCHORELEMENT_BLUR                            DISPID_SITE+2

//    DISPIDs for interface IHTMLAnchorElement2

#define DISPID_IHTMLANCHORELEMENT2_CHARSET                        DISPID_ANCHOR+23
#define DISPID_IHTMLANCHORELEMENT2_COORDS                         DISPID_ANCHOR+24
#define DISPID_IHTMLANCHORELEMENT2_HREFLANG                       DISPID_ANCHOR+25
#define DISPID_IHTMLANCHORELEMENT2_SHAPE                          DISPID_ANCHOR+26
#define DISPID_IHTMLANCHORELEMENT2_TYPE                           DISPID_ANCHOR+27

//    DISPIDs for interface IHTMLAnchorElement3

#define DISPID_IHTMLANCHORELEMENT3_IE8_SHAPE                      DISPID_IE8_ANCHOR+1
#define DISPID_IHTMLANCHORELEMENT3_IE8_COORDS                     DISPID_IE8_ANCHOR+2
#define DISPID_IHTMLANCHORELEMENT3_IE8_HREF                       DISPID_IE8_ANCHOR+3

//    DISPIDs for interface IHTMLLabelElement

#define DISPID_IHTMLLABELELEMENT_HTMLFOR                          DISPID_LABEL
#define DISPID_IHTMLLABELELEMENT_ACCESSKEY                        DISPID_SITE+5

//    DISPIDs for interface IHTMLLabelElement2

#define DISPID_IHTMLLABELELEMENT2_FORM                            DISPID_LABEL+2

//    DISPIDs for interface IHTMLListElement2

#define DISPID_IHTMLLISTELEMENT2_COMPACT                          DISPID_DIR+1

//    DISPIDs for interface IHTMLUListElement

#define DISPID_IHTMLULISTELEMENT_COMPACT                          DISPID_DIR+1
#define DISPID_IHTMLULISTELEMENT_TYPE                             DISPID_A_LISTTYPE

//    DISPIDs for interface IHTMLOListElement

#define DISPID_IHTMLOLISTELEMENT_COMPACT                          DISPID_DIR+1
#define DISPID_IHTMLOLISTELEMENT_START                            DISPID_OL+3
#define DISPID_IHTMLOLISTELEMENT_TYPE                             DISPID_A_LISTTYPE

//    DISPIDs for interface IHTMLLIElement

#define DISPID_IHTMLLIELEMENT_TYPE                                DISPID_A_LISTTYPE
#define DISPID_IHTMLLIELEMENT_VALUE                               DISPID_LI+1

//    DISPIDs for interface IHTMLBlockElement

#define DISPID_IHTMLBLOCKELEMENT_CLEAR                            DISPID_A_CLEAR

//    DISPIDs for interface IHTMLBlockElement2

#define DISPID_IHTMLBLOCKELEMENT2_CITE                            DISPID_BLOCK+1
#define DISPID_IHTMLBLOCKELEMENT2_WIDTH                           DISPID_BLOCK+2

//    DISPIDs for interface IHTMLBlockElement3

#define DISPID_IHTMLBLOCKELEMENT3_IE8_CITE                        DISPID_IE8_BLOCK

//    DISPIDs for interface IHTMLDivElement

#define DISPID_IHTMLDIVELEMENT_ALIGN                              STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLDIVELEMENT_NOWRAP                             DISPID_A_NOWRAP

//    DISPIDs for interface IHTMLDDElement

#define DISPID_IHTMLDDELEMENT_NOWRAP                              DISPID_A_NOWRAP

//    DISPIDs for interface IHTMLDTElement

#define DISPID_IHTMLDTELEMENT_NOWRAP                              DISPID_A_NOWRAP

//    DISPIDs for interface IHTMLBRElement

#define DISPID_IHTMLBRELEMENT_CLEAR                               DISPID_A_CLEAR

//    DISPIDs for interface IHTMLDListElement

#define DISPID_IHTMLDLISTELEMENT_COMPACT                          DISPID_DIR+1

//    DISPIDs for interface IHTMLHRElement

#define DISPID_IHTMLHRELEMENT_ALIGN                               STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLHRELEMENT_COLOR                               DISPID_A_COLOR
#define DISPID_IHTMLHRELEMENT_NOSHADE                             DISPID_HR+1
#define DISPID_IHTMLHRELEMENT_WIDTH                               STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLHRELEMENT_SIZE                                STDPROPID_XOBJ_HEIGHT

//    DISPIDs for interface IHTMLParaElement

#define DISPID_IHTMLPARAELEMENT_ALIGN                             STDPROPID_XOBJ_BLOCKALIGN

//    DISPIDs for interface IHTMLElementCollection

#define DISPID_IHTMLELEMENTCOLLECTION_TOSTRING                    DISPID_COLLECTION+1
#define DISPID_IHTMLELEMENTCOLLECTION_LENGTH                      DISPID_COLLECTION
#define DISPID_IHTMLELEMENTCOLLECTION__NEWENUM                    DISPID_NEWENUM
#define DISPID_IHTMLELEMENTCOLLECTION_ITEM                        DISPID_VALUE
#define DISPID_IHTMLELEMENTCOLLECTION_TAGS                        DISPID_COLLECTION+2

//    DISPIDs for interface IHTMLElementCollection2

#define DISPID_IHTMLELEMENTCOLLECTION2_URNS                       DISPID_COLLECTION+5

//    DISPIDs for interface IHTMLElementCollection3

#define DISPID_IHTMLELEMENTCOLLECTION3_NAMEDITEM                  DISPID_COLLECTION+6

//    DISPIDs for interface IHTMLElementCollection4

#define DISPID_IHTMLELEMENTCOLLECTION4_IE8_LENGTH                 DISPID_IE8_COLLECTION
#define DISPID_IHTMLELEMENTCOLLECTION4_IE8_ITEM                   DISPID_IE8_COLLECTION+2
#define DISPID_IHTMLELEMENTCOLLECTION4_IE8_NAMEDITEM              DISPID_IE8_COLLECTION+3

//    DISPIDs for interface IHTMLHeaderElement

#define DISPID_IHTMLHEADERELEMENT_ALIGN                           STDPROPID_XOBJ_BLOCKALIGN

//    DISPIDs for interface IHTMLSelectElementEx

#define DISPID_IHTMLSELECTELEMENTEX_SHOWDROPDOWN                  
#define DISPID_IHTMLSELECTELEMENTEX_SETSELECTEXFLAGS              
#define DISPID_IHTMLSELECTELEMENTEX_GETSELECTEXFLAGS              
#define DISPID_IHTMLSELECTELEMENTEX_GETDROPDOWNOPEN               

//    DISPIDs for interface IHTMLSelectElement

#define DISPID_IHTMLSELECTELEMENT_SIZE                            DISPID_SELECT+2
#define DISPID_IHTMLSELECTELEMENT_MULTIPLE                        DISPID_SELECT+3
#define DISPID_IHTMLSELECTELEMENT_NAME                            STDPROPID_XOBJ_NAME
#define DISPID_IHTMLSELECTELEMENT_OPTIONS                         DISPID_SELECT+5
#define DISPID_IHTMLSELECTELEMENT_ONCHANGE                        DISPID_EVPROP_ONCHANGE
#define DISPID_IHTMLSELECTELEMENT_SELECTEDINDEX                   DISPID_SELECT+10
#define DISPID_IHTMLSELECTELEMENT_TYPE                            DISPID_SELECT+12
#define DISPID_IHTMLSELECTELEMENT_VALUE                           DISPID_SELECT+11
#define DISPID_IHTMLSELECTELEMENT_DISABLED                        STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLSELECTELEMENT_FORM                            DISPID_SITE+4
#define DISPID_IHTMLSELECTELEMENT_ADD                             DISPID_COLLECTION+3
#define DISPID_IHTMLSELECTELEMENT_REMOVE                          DISPID_COLLECTION+4
#define DISPID_IHTMLSELECTELEMENT_LENGTH                          DISPID_COLLECTION
#define DISPID_IHTMLSELECTELEMENT__NEWENUM                        DISPID_NEWENUM
#define DISPID_IHTMLSELECTELEMENT_ITEM                            DISPID_VALUE
#define DISPID_IHTMLSELECTELEMENT_TAGS                            DISPID_COLLECTION+2

//    DISPIDs for interface IHTMLSelectElement2

#define DISPID_IHTMLSELECTELEMENT2_URNS                           DISPID_COLLECTION+5

//    DISPIDs for interface IHTMLSelectElement4

#define DISPID_IHTMLSELECTELEMENT4_NAMEDITEM                      DISPID_COLLECTION+6

//    DISPIDs for interface IHTMLSelectElement5

#define DISPID_IHTMLSELECTELEMENT5_IE8_ADD                        DISPID_IE8_SELECT

//    DISPIDs for event set HTMLSelectElementEvents2

#define DISPID_HTMLSELECTELEMENTEVENTS2_ONCHANGE                  DISPID_EVMETH_ONCHANGE

//    DISPIDs for event set HTMLSelectElementEvents

#define DISPID_HTMLSELECTELEMENTEVENTS_ONCHANGE                   DISPID_EVMETH_ONCHANGE

//    DISPIDs for interface IHTMLSelectionObject

#define DISPID_IHTMLSELECTIONOBJECT_CREATERANGE                   DISPID_SELECTOBJ+1
#define DISPID_IHTMLSELECTIONOBJECT_EMPTY                         DISPID_SELECTOBJ+2
#define DISPID_IHTMLSELECTIONOBJECT_CLEAR                         DISPID_SELECTOBJ+3
#define DISPID_IHTMLSELECTIONOBJECT_TYPE                          DISPID_SELECTOBJ+4

//    DISPIDs for interface IHTMLSelectionObject2

#define DISPID_IHTMLSELECTIONOBJECT2_CREATERANGECOLLECTION        DISPID_SELECTOBJ+5
#define DISPID_IHTMLSELECTIONOBJECT2_TYPEDETAIL                   DISPID_SELECTOBJ+6

//    DISPIDs for interface IHTMLOptionElement

#define DISPID_IHTMLOPTIONELEMENT_SELECTED                        DISPID_OPTION+1
#define DISPID_IHTMLOPTIONELEMENT_VALUE                           DISPID_OPTION+2
#define DISPID_IHTMLOPTIONELEMENT_DEFAULTSELECTED                 DISPID_OPTION+3
#define DISPID_IHTMLOPTIONELEMENT_INDEX                           DISPID_OPTION+5
#define DISPID_IHTMLOPTIONELEMENT_TEXT                            DISPID_OPTION+4
#define DISPID_IHTMLOPTIONELEMENT_FORM                            DISPID_OPTION+6

//    DISPIDs for interface IHTMLOptionElement3

#define DISPID_IHTMLOPTIONELEMENT3_LABEL                          DISPID_OPTION+7

//    DISPIDs for interface IHTMLOptionElementFactory

#define DISPID_IHTMLOPTIONELEMENTFACTORY_CREATE                   DISPID_VALUE

//    DISPIDs for interface IHTMLInputElement

#define DISPID_IHTMLINPUTELEMENT_TYPE                             DISPID_INPUT
#define DISPID_IHTMLINPUTELEMENT_VALUE                            DISPID_A_VALUE
#define DISPID_IHTMLINPUTELEMENT_NAME                             STDPROPID_XOBJ_NAME
#define DISPID_IHTMLINPUTELEMENT_STATUS                           DISPID_INPUT+1
#define DISPID_IHTMLINPUTELEMENT_DISABLED                         STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLINPUTELEMENT_FORM                             DISPID_SITE+4
#define DISPID_IHTMLINPUTELEMENT_SIZE                             DISPID_INPUT+2
#define DISPID_IHTMLINPUTELEMENT_MAXLENGTH                        DISPID_INPUT+3
#define DISPID_IHTMLINPUTELEMENT_SELECT                           DISPID_INPUT+4
#define DISPID_IHTMLINPUTELEMENT_ONCHANGE                         DISPID_EVPROP_ONCHANGE
#define DISPID_IHTMLINPUTELEMENT_ONSELECT                         DISPID_EVPROP_ONSELECT
#define DISPID_IHTMLINPUTELEMENT_DEFAULTVALUE                     DISPID_DEFAULTVALUE
#define DISPID_IHTMLINPUTELEMENT_READONLY                         DISPID_INPUT+5
#define DISPID_IHTMLINPUTELEMENT_CREATETEXTRANGE                  DISPID_INPUT+6
#define DISPID_IHTMLINPUTELEMENT_INDETERMINATE                    DISPID_INPUT+7
#define DISPID_IHTMLINPUTELEMENT_DEFAULTCHECKED                   DISPID_INPUT+8
#define DISPID_IHTMLINPUTELEMENT_CHECKED                          DISPID_INPUT+9
#define DISPID_IHTMLINPUTELEMENT_BORDER                           DISPID_INPUT+12
#define DISPID_IHTMLINPUTELEMENT_VSPACE                           DISPID_INPUT+13
#define DISPID_IHTMLINPUTELEMENT_HSPACE                           DISPID_INPUT+14
#define DISPID_IHTMLINPUTELEMENT_ALT                              DISPID_INPUT+10
#define DISPID_IHTMLINPUTELEMENT_SRC                              DISPID_INPUT+11
#define DISPID_IHTMLINPUTELEMENT_LOWSRC                           DISPID_INPUT+15
#define DISPID_IHTMLINPUTELEMENT_VRML                             DISPID_INPUT+16
#define DISPID_IHTMLINPUTELEMENT_DYNSRC                           DISPID_INPUT+17
#define DISPID_IHTMLINPUTELEMENT_READYSTATE                       DISPID_A_READYSTATE
#define DISPID_IHTMLINPUTELEMENT_COMPLETE                         DISPID_INPUT+18
#define DISPID_IHTMLINPUTELEMENT_LOOP                             DISPID_INPUT+19
#define DISPID_IHTMLINPUTELEMENT_ALIGN                            STDPROPID_XOBJ_CONTROLALIGN
#define DISPID_IHTMLINPUTELEMENT_ONLOAD                           DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLINPUTELEMENT_ONERROR                          DISPID_EVPROP_ONERROR
#define DISPID_IHTMLINPUTELEMENT_ONABORT                          DISPID_EVPROP_ONABORT
#define DISPID_IHTMLINPUTELEMENT_WIDTH                            STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLINPUTELEMENT_HEIGHT                           STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLINPUTELEMENT_START                            DISPID_INPUT+20

//    DISPIDs for interface IHTMLInputElement2

#define DISPID_IHTMLINPUTELEMENT2_ACCEPT                          DISPID_INPUT+22
#define DISPID_IHTMLINPUTELEMENT2_USEMAP                          DISPID_INPUT+23

//    DISPIDs for interface IHTMLInputElement3

#define DISPID_IHTMLINPUTELEMENT3_IE8_SRC                         DISPID_IE8_INPUT
#define DISPID_IHTMLINPUTELEMENT3_IE8_LOWSRC                      DISPID_IE8_INPUT+1
#define DISPID_IHTMLINPUTELEMENT3_IE8_VRML                        DISPID_IE8_INPUT+2
#define DISPID_IHTMLINPUTELEMENT3_IE8_DYNSRC                      DISPID_IE8_INPUT+3

//    DISPIDs for interface IHTMLInputButtonElement

#define DISPID_IHTMLINPUTBUTTONELEMENT_TYPE                       DISPID_INPUT
#define DISPID_IHTMLINPUTBUTTONELEMENT_VALUE                      DISPID_A_VALUE
#define DISPID_IHTMLINPUTBUTTONELEMENT_NAME                       STDPROPID_XOBJ_NAME
#define DISPID_IHTMLINPUTBUTTONELEMENT_STATUS                     DISPID_INPUT+21
#define DISPID_IHTMLINPUTBUTTONELEMENT_DISABLED                   STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLINPUTBUTTONELEMENT_FORM                       DISPID_SITE+4
#define DISPID_IHTMLINPUTBUTTONELEMENT_CREATETEXTRANGE            DISPID_INPUT+6

//    DISPIDs for interface IHTMLInputHiddenElement

#define DISPID_IHTMLINPUTHIDDENELEMENT_TYPE                       DISPID_INPUT
#define DISPID_IHTMLINPUTHIDDENELEMENT_VALUE                      DISPID_A_VALUE
#define DISPID_IHTMLINPUTHIDDENELEMENT_NAME                       STDPROPID_XOBJ_NAME
#define DISPID_IHTMLINPUTHIDDENELEMENT_STATUS                     DISPID_INPUT+21
#define DISPID_IHTMLINPUTHIDDENELEMENT_DISABLED                   STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLINPUTHIDDENELEMENT_FORM                       DISPID_SITE+4
#define DISPID_IHTMLINPUTHIDDENELEMENT_CREATETEXTRANGE            DISPID_INPUT+6

//    DISPIDs for interface IHTMLInputTextElement

#define DISPID_IHTMLINPUTTEXTELEMENT_TYPE                         DISPID_INPUT
#define DISPID_IHTMLINPUTTEXTELEMENT_VALUE                        DISPID_A_VALUE
#define DISPID_IHTMLINPUTTEXTELEMENT_NAME                         STDPROPID_XOBJ_NAME
#define DISPID_IHTMLINPUTTEXTELEMENT_STATUS                       DISPID_INPUT+21
#define DISPID_IHTMLINPUTTEXTELEMENT_DISABLED                     STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLINPUTTEXTELEMENT_FORM                         DISPID_SITE+4
#define DISPID_IHTMLINPUTTEXTELEMENT_DEFAULTVALUE                 DISPID_DEFAULTVALUE
#define DISPID_IHTMLINPUTTEXTELEMENT_SIZE                         DISPID_INPUT+2
#define DISPID_IHTMLINPUTTEXTELEMENT_MAXLENGTH                    DISPID_INPUT+3
#define DISPID_IHTMLINPUTTEXTELEMENT_SELECT                       DISPID_INPUT+4
#define DISPID_IHTMLINPUTTEXTELEMENT_ONCHANGE                     DISPID_EVPROP_ONCHANGE
#define DISPID_IHTMLINPUTTEXTELEMENT_ONSELECT                     DISPID_EVPROP_ONSELECT
#define DISPID_IHTMLINPUTTEXTELEMENT_READONLY                     DISPID_INPUT+5
#define DISPID_IHTMLINPUTTEXTELEMENT_CREATETEXTRANGE              DISPID_INPUT+6

//    DISPIDs for interface IHTMLInputFileElement

#define DISPID_IHTMLINPUTFILEELEMENT_TYPE                         DISPID_INPUT
#define DISPID_IHTMLINPUTFILEELEMENT_NAME                         STDPROPID_XOBJ_NAME
#define DISPID_IHTMLINPUTFILEELEMENT_STATUS                       DISPID_INPUT+21
#define DISPID_IHTMLINPUTFILEELEMENT_DISABLED                     STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLINPUTFILEELEMENT_FORM                         DISPID_SITE+4
#define DISPID_IHTMLINPUTFILEELEMENT_SIZE                         DISPID_INPUT+2
#define DISPID_IHTMLINPUTFILEELEMENT_MAXLENGTH                    DISPID_INPUT+3
#define DISPID_IHTMLINPUTFILEELEMENT_SELECT                       DISPID_INPUT+4
#define DISPID_IHTMLINPUTFILEELEMENT_ONCHANGE                     DISPID_EVPROP_ONCHANGE
#define DISPID_IHTMLINPUTFILEELEMENT_ONSELECT                     DISPID_EVPROP_ONSELECT
#define DISPID_IHTMLINPUTFILEELEMENT_VALUE                        DISPID_A_VALUE

//    DISPIDs for interface IHTMLOptionButtonElement

#define DISPID_IHTMLOPTIONBUTTONELEMENT_VALUE                     DISPID_A_VALUE
#define DISPID_IHTMLOPTIONBUTTONELEMENT_TYPE                      DISPID_INPUT
#define DISPID_IHTMLOPTIONBUTTONELEMENT_NAME                      STDPROPID_XOBJ_NAME
#define DISPID_IHTMLOPTIONBUTTONELEMENT_CHECKED                   DISPID_INPUT+9
#define DISPID_IHTMLOPTIONBUTTONELEMENT_DEFAULTCHECKED            DISPID_INPUT+8
#define DISPID_IHTMLOPTIONBUTTONELEMENT_ONCHANGE                  DISPID_EVPROP_ONCHANGE
#define DISPID_IHTMLOPTIONBUTTONELEMENT_DISABLED                  STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLOPTIONBUTTONELEMENT_STATUS                    DISPID_INPUT+1
#define DISPID_IHTMLOPTIONBUTTONELEMENT_INDETERMINATE             DISPID_INPUT+7
#define DISPID_IHTMLOPTIONBUTTONELEMENT_FORM                      DISPID_SITE+4

//    DISPIDs for interface IHTMLInputImage

#define DISPID_IHTMLINPUTIMAGE_TYPE                               DISPID_INPUT
#define DISPID_IHTMLINPUTIMAGE_DISABLED                           STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLINPUTIMAGE_BORDER                             DISPID_INPUT+12
#define DISPID_IHTMLINPUTIMAGE_VSPACE                             DISPID_INPUT+13
#define DISPID_IHTMLINPUTIMAGE_HSPACE                             DISPID_INPUT+14
#define DISPID_IHTMLINPUTIMAGE_ALT                                DISPID_INPUT+10
#define DISPID_IHTMLINPUTIMAGE_SRC                                DISPID_INPUT+11
#define DISPID_IHTMLINPUTIMAGE_LOWSRC                             DISPID_INPUT+15
#define DISPID_IHTMLINPUTIMAGE_VRML                               DISPID_INPUT+16
#define DISPID_IHTMLINPUTIMAGE_DYNSRC                             DISPID_INPUT+17
#define DISPID_IHTMLINPUTIMAGE_READYSTATE                         DISPID_A_READYSTATE
#define DISPID_IHTMLINPUTIMAGE_COMPLETE                           DISPID_INPUT+18
#define DISPID_IHTMLINPUTIMAGE_LOOP                               DISPID_INPUT+19
#define DISPID_IHTMLINPUTIMAGE_ALIGN                              STDPROPID_XOBJ_CONTROLALIGN
#define DISPID_IHTMLINPUTIMAGE_ONLOAD                             DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLINPUTIMAGE_ONERROR                            DISPID_EVPROP_ONERROR
#define DISPID_IHTMLINPUTIMAGE_ONABORT                            DISPID_EVPROP_ONABORT
#define DISPID_IHTMLINPUTIMAGE_NAME                               STDPROPID_XOBJ_NAME
#define DISPID_IHTMLINPUTIMAGE_WIDTH                              STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLINPUTIMAGE_HEIGHT                             STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLINPUTIMAGE_START                              DISPID_INPUT+20

//    DISPIDs for event set HTMLInputTextElementEvents2

#define DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONCHANGE               DISPID_EVMETH_ONCHANGE
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONSELECT               DISPID_EVMETH_ONSELECT
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONLOAD                 DISPID_EVMETH_ONLOAD
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONERROR                DISPID_EVMETH_ONERROR
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONABORT                DISPID_EVMETH_ONABORT

//    DISPIDs for event set HTMLInputImageEvents2

#define DISPID_HTMLINPUTIMAGEEVENTS2_ONLOAD                       DISPID_EVMETH_ONLOAD
#define DISPID_HTMLINPUTIMAGEEVENTS2_ONERROR                      DISPID_EVMETH_ONERROR
#define DISPID_HTMLINPUTIMAGEEVENTS2_ONABORT                      DISPID_EVMETH_ONABORT

//    DISPIDs for event set HTMLInputTextElementEvents

#define DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONCHANGE                DISPID_EVMETH_ONCHANGE
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONSELECT                DISPID_EVMETH_ONSELECT
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONLOAD                  DISPID_EVMETH_ONLOAD
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONERROR                 DISPID_EVMETH_ONERROR
#define DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONABORT                 DISPID_EVMETH_ONABORT

//    DISPIDs for event set HTMLInputImageEvents

#define DISPID_HTMLINPUTIMAGEEVENTS_ONLOAD                        DISPID_EVMETH_ONLOAD
#define DISPID_HTMLINPUTIMAGEEVENTS_ONERROR                       DISPID_EVMETH_ONERROR
#define DISPID_HTMLINPUTIMAGEEVENTS_ONABORT                       DISPID_EVMETH_ONABORT

//    DISPIDs for interface IHTMLTextAreaElement

#define DISPID_IHTMLTEXTAREAELEMENT_TYPE                          DISPID_INPUT
#define DISPID_IHTMLTEXTAREAELEMENT_VALUE                         DISPID_A_VALUE
#define DISPID_IHTMLTEXTAREAELEMENT_NAME                          STDPROPID_XOBJ_NAME
#define DISPID_IHTMLTEXTAREAELEMENT_STATUS                        DISPID_INPUT+1
#define DISPID_IHTMLTEXTAREAELEMENT_DISABLED                      STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLTEXTAREAELEMENT_FORM                          DISPID_SITE+4
#define DISPID_IHTMLTEXTAREAELEMENT_DEFAULTVALUE                  DISPID_DEFAULTVALUE
#define DISPID_IHTMLTEXTAREAELEMENT_SELECT                        DISPID_RICHTEXT+5
#define DISPID_IHTMLTEXTAREAELEMENT_ONCHANGE                      DISPID_EVPROP_ONCHANGE
#define DISPID_IHTMLTEXTAREAELEMENT_ONSELECT                      DISPID_EVPROP_ONSELECT
#define DISPID_IHTMLTEXTAREAELEMENT_READONLY                      DISPID_RICHTEXT+4
#define DISPID_IHTMLTEXTAREAELEMENT_ROWS                          DISPID_RICHTEXT+1
#define DISPID_IHTMLTEXTAREAELEMENT_COLS                          DISPID_RICHTEXT+2
#define DISPID_IHTMLTEXTAREAELEMENT_WRAP                          DISPID_RICHTEXT+3
#define DISPID_IHTMLTEXTAREAELEMENT_CREATETEXTRANGE               DISPID_RICHTEXT+6

//    DISPIDs for interface IHTMLButtonElement

#define DISPID_IHTMLBUTTONELEMENT_TYPE                            DISPID_INPUT
#define DISPID_IHTMLBUTTONELEMENT_VALUE                           DISPID_A_VALUE
#define DISPID_IHTMLBUTTONELEMENT_NAME                            STDPROPID_XOBJ_NAME
#define DISPID_IHTMLBUTTONELEMENT_STATUS                          DISPID_BUTTON+1
#define DISPID_IHTMLBUTTONELEMENT_DISABLED                        STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLBUTTONELEMENT_FORM                            DISPID_SITE+4
#define DISPID_IHTMLBUTTONELEMENT_CREATETEXTRANGE                 DISPID_BUTTON+2

//    DISPIDs for interface IHTMLMarqueeElement

#define DISPID_IHTMLMARQUEEELEMENT_BGCOLOR                        DISPID_BACKCOLOR
#define DISPID_IHTMLMARQUEEELEMENT_SCROLLDELAY                    DISPID_MARQUEE
#define DISPID_IHTMLMARQUEEELEMENT_DIRECTION                      DISPID_MARQUEE+1
#define DISPID_IHTMLMARQUEEELEMENT_BEHAVIOR                       DISPID_MARQUEE+2
#define DISPID_IHTMLMARQUEEELEMENT_SCROLLAMOUNT                   DISPID_MARQUEE+3
#define DISPID_IHTMLMARQUEEELEMENT_LOOP                           DISPID_MARQUEE+4
#define DISPID_IHTMLMARQUEEELEMENT_VSPACE                         DISPID_MARQUEE+5
#define DISPID_IHTMLMARQUEEELEMENT_HSPACE                         DISPID_MARQUEE+6
#define DISPID_IHTMLMARQUEEELEMENT_ONFINISH                       DISPID_EVPROP_ONFINISH
#define DISPID_IHTMLMARQUEEELEMENT_ONSTART                        DISPID_EVPROP_ONSTART
#define DISPID_IHTMLMARQUEEELEMENT_ONBOUNCE                       DISPID_EVPROP_ONBOUNCE
#define DISPID_IHTMLMARQUEEELEMENT_WIDTH                          STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLMARQUEEELEMENT_HEIGHT                         STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLMARQUEEELEMENT_TRUESPEED                      DISPID_MARQUEE+7
#define DISPID_IHTMLMARQUEEELEMENT_START                          DISPID_MARQUEE+10
#define DISPID_IHTMLMARQUEEELEMENT_STOP                           DISPID_MARQUEE+11

//    DISPIDs for event set HTMLMarqueeElementEvents2

#define DISPID_HTMLMARQUEEELEMENTEVENTS2_ONBOUNCE                 DISPID_EVMETH_ONBOUNCE
#define DISPID_HTMLMARQUEEELEMENTEVENTS2_ONFINISH                 DISPID_EVMETH_ONFINISH
#define DISPID_HTMLMARQUEEELEMENTEVENTS2_ONSTART                  DISPID_EVMETH_ONSTART

//    DISPIDs for event set HTMLMarqueeElementEvents

#define DISPID_HTMLMARQUEEELEMENTEVENTS_ONBOUNCE                  DISPID_EVMETH_ONBOUNCE
#define DISPID_HTMLMARQUEEELEMENTEVENTS_ONFINISH                  DISPID_EVMETH_ONFINISH
#define DISPID_HTMLMARQUEEELEMENTEVENTS_ONSTART                   DISPID_EVMETH_ONSTART

//    DISPIDs for interface IHTMLHtmlElement

#define DISPID_IHTMLHTMLELEMENT_VERSION                           DISPID_HEDELEMS+1

//    DISPIDs for interface IHTMLHeadElement

#define DISPID_IHTMLHEADELEMENT_PROFILE                           DISPID_HEDELEMS+1

//    DISPIDs for interface IHTMLHeadElement2

#define DISPID_IHTMLHEADELEMENT2_IE8_PROFILE                      DISPID_IE8_HEAD

//    DISPIDs for interface IHTMLTitleElement

#define DISPID_IHTMLTITLEELEMENT_TEXT                             DISPID_A_VALUE

//    DISPIDs for interface IHTMLMetaElement

#define DISPID_IHTMLMETAELEMENT_HTTPEQUIV                         DISPID_HEDELEMS+1
#define DISPID_IHTMLMETAELEMENT_CONTENT                           DISPID_HEDELEMS+2
#define DISPID_IHTMLMETAELEMENT_NAME                              STDPROPID_XOBJ_NAME
#define DISPID_IHTMLMETAELEMENT_URL                               DISPID_HEDELEMS+3
#define DISPID_IHTMLMETAELEMENT_CHARSET                           DISPID_HEDELEMS+13

//    DISPIDs for interface IHTMLMetaElement2

#define DISPID_IHTMLMETAELEMENT2_SCHEME                           DISPID_HEDELEMS+20

//    DISPIDs for interface IHTMLMetaElement3

#define DISPID_IHTMLMETAELEMENT3_IE8_URL                          DISPID_IE8_META

//    DISPIDs for interface IHTMLBaseElement

#define DISPID_IHTMLBASEELEMENT_HREF                              DISPID_HEDELEMS+3
#define DISPID_IHTMLBASEELEMENT_TARGET                            DISPID_HEDELEMS+4

//    DISPIDs for interface IHTMLBaseElement2

#define DISPID_IHTMLBASEELEMENT2_IE8_HREF                         DISPID_IE8_BASE

//    DISPIDs for interface IHTMLIsIndexElement

#define DISPID_IHTMLISINDEXELEMENT_PROMPT                         DISPID_HEDELEMS+10
#define DISPID_IHTMLISINDEXELEMENT_ACTION                         DISPID_HEDELEMS+11

//    DISPIDs for interface IHTMLIsIndexElement2

#define DISPID_IHTMLISINDEXELEMENT2_FORM                          DISPID_HEDELEMS+12

//    DISPIDs for interface IHTMLNextIdElement

#define DISPID_IHTMLNEXTIDELEMENT_N                               DISPID_HEDELEMS+12

//    DISPIDs for interface IHTMLBaseFontElement

#define DISPID_IHTMLBASEFONTELEMENT_COLOR                         DISPID_A_COLOR
#define DISPID_IHTMLBASEFONTELEMENT_FACE                          DISPID_A_FONTFACE
#define DISPID_IHTMLBASEFONTELEMENT_SIZE                          DISPID_A_BASEFONT

//    DISPIDs for interface IOmHistory

#define DISPID_IOMHISTORY_LENGTH                                  DISPID_HISTORY
#define DISPID_IOMHISTORY_BACK                                    DISPID_HISTORY+1
#define DISPID_IOMHISTORY_FORWARD                                 DISPID_HISTORY+2
#define DISPID_IOMHISTORY_GO                                      DISPID_HISTORY+3

//    DISPIDs for interface IHTMLMimeTypesCollection

#define DISPID_IHTMLMIMETYPESCOLLECTION_LENGTH                    1

//    DISPIDs for interface IHTMLPluginsCollection

#define DISPID_IHTMLPLUGINSCOLLECTION_LENGTH                      1
#define DISPID_IHTMLPLUGINSCOLLECTION_REFRESH                     2

//    DISPIDs for interface IHTMLOpsProfile

#define DISPID_IHTMLOPSPROFILE_ADDREQUEST                         1
#define DISPID_IHTMLOPSPROFILE_CLEARREQUEST                       2
#define DISPID_IHTMLOPSPROFILE_DOREQUEST                          3
#define DISPID_IHTMLOPSPROFILE_GETATTRIBUTE                       4
#define DISPID_IHTMLOPSPROFILE_SETATTRIBUTE                       5
#define DISPID_IHTMLOPSPROFILE_COMMITCHANGES                      6
#define DISPID_IHTMLOPSPROFILE_ADDREADREQUEST                     7
#define DISPID_IHTMLOPSPROFILE_DOREADREQUEST                      8
#define DISPID_IHTMLOPSPROFILE_DOWRITEREQUEST                     9

//    DISPIDs for interface IOmNavigator

#define DISPID_IOMNAVIGATOR_APPCODENAME                           DISPID_NAVIGATOR
#define DISPID_IOMNAVIGATOR_APPNAME                               DISPID_NAVIGATOR+1
#define DISPID_IOMNAVIGATOR_APPVERSION                            DISPID_NAVIGATOR+2
#define DISPID_IOMNAVIGATOR_USERAGENT                             DISPID_NAVIGATOR+3
#define DISPID_IOMNAVIGATOR_JAVAENABLED                           DISPID_NAVIGATOR+4
#define DISPID_IOMNAVIGATOR_TAINTENABLED                          DISPID_NAVIGATOR+5
#define DISPID_IOMNAVIGATOR_MIMETYPES                             DISPID_NAVIGATOR+6
#define DISPID_IOMNAVIGATOR_PLUGINS                               DISPID_NAVIGATOR+7
#define DISPID_IOMNAVIGATOR_COOKIEENABLED                         DISPID_NAVIGATOR+8
#define DISPID_IOMNAVIGATOR_OPSPROFILE                            DISPID_NAVIGATOR+9
#define DISPID_IOMNAVIGATOR_TOSTRING                              DISPID_NAVIGATOR+10
#define DISPID_IOMNAVIGATOR_CPUCLASS                              DISPID_NAVIGATOR+11
#define DISPID_IOMNAVIGATOR_SYSTEMLANGUAGE                        DISPID_NAVIGATOR+12
#define DISPID_IOMNAVIGATOR_BROWSERLANGUAGE                       DISPID_NAVIGATOR+13
#define DISPID_IOMNAVIGATOR_USERLANGUAGE                          DISPID_NAVIGATOR+14
#define DISPID_IOMNAVIGATOR_PLATFORM                              DISPID_NAVIGATOR+15
#define DISPID_IOMNAVIGATOR_APPMINORVERSION                       DISPID_NAVIGATOR+16
#define DISPID_IOMNAVIGATOR_CONNECTIONSPEED                       DISPID_NAVIGATOR+17
#define DISPID_IOMNAVIGATOR_ONLINE                                DISPID_NAVIGATOR+18
#define DISPID_IOMNAVIGATOR_USERPROFILE                           DISPID_NAVIGATOR+19

//    DISPIDs for interface IHTMLLocation

#define DISPID_IHTMLLOCATION_HREF                                 DISPID_VALUE
#define DISPID_IHTMLLOCATION_PROTOCOL                             DISPID_LOCATION
#define DISPID_IHTMLLOCATION_HOST                                 DISPID_LOCATION+1
#define DISPID_IHTMLLOCATION_HOSTNAME                             DISPID_LOCATION+2
#define DISPID_IHTMLLOCATION_PORT                                 DISPID_LOCATION+3
#define DISPID_IHTMLLOCATION_PATHNAME                             DISPID_LOCATION+4
#define DISPID_IHTMLLOCATION_SEARCH                               DISPID_LOCATION+5
#define DISPID_IHTMLLOCATION_HASH                                 DISPID_LOCATION+6
#define DISPID_IHTMLLOCATION_RELOAD                               DISPID_LOCATION+7
#define DISPID_IHTMLLOCATION_REPLACE                              DISPID_LOCATION+8
#define DISPID_IHTMLLOCATION_ASSIGN                               DISPID_LOCATION+9
#define DISPID_IHTMLLOCATION_TOSTRING                             DISPID_LOCATION+10

//    DISPIDs for interface IHTMLBookmarkCollection

#define DISPID_IHTMLBOOKMARKCOLLECTION_LENGTH                     DISPID_OPTIONS_COL+1
#define DISPID_IHTMLBOOKMARKCOLLECTION__NEWENUM                   DISPID_NEWENUM
#define DISPID_IHTMLBOOKMARKCOLLECTION_ITEM                       DISPID_VALUE

//    DISPIDs for interface IHTMLDataTransfer

#define DISPID_IHTMLDATATRANSFER_SETDATA                          DISPID_DATATRANSFER+1
#define DISPID_IHTMLDATATRANSFER_GETDATA                          DISPID_DATATRANSFER+2
#define DISPID_IHTMLDATATRANSFER_CLEARDATA                        DISPID_DATATRANSFER+3
#define DISPID_IHTMLDATATRANSFER_DROPEFFECT                       DISPID_DATATRANSFER+4
#define DISPID_IHTMLDATATRANSFER_EFFECTALLOWED                    DISPID_DATATRANSFER+5

//    DISPIDs for interface IHTMLEventObj

#define DISPID_IHTMLEVENTOBJ_SRCELEMENT                           DISPID_EVENTOBJ+1
#define DISPID_IHTMLEVENTOBJ_ALTKEY                               DISPID_EVENTOBJ+2
#define DISPID_IHTMLEVENTOBJ_CTRLKEY                              DISPID_EVENTOBJ+3
#define DISPID_IHTMLEVENTOBJ_SHIFTKEY                             DISPID_EVENTOBJ+4
#define DISPID_IHTMLEVENTOBJ_RETURNVALUE                          DISPID_EVENTOBJ+7
#define DISPID_IHTMLEVENTOBJ_CANCELBUBBLE                         DISPID_EVENTOBJ+8
#define DISPID_IHTMLEVENTOBJ_FROMELEMENT                          DISPID_EVENTOBJ+9
#define DISPID_IHTMLEVENTOBJ_TOELEMENT                            DISPID_EVENTOBJ+10
#define DISPID_IHTMLEVENTOBJ_KEYCODE                              DISPID_EVENTOBJ+11
#define DISPID_IHTMLEVENTOBJ_BUTTON                               DISPID_EVENTOBJ+12
#define DISPID_IHTMLEVENTOBJ_TYPE                                 DISPID_EVENTOBJ+13
#define DISPID_IHTMLEVENTOBJ_QUALIFIER                            DISPID_EVENTOBJ+14
#define DISPID_IHTMLEVENTOBJ_REASON                               DISPID_EVENTOBJ+15
#define DISPID_IHTMLEVENTOBJ_X                                    DISPID_EVENTOBJ+5
#define DISPID_IHTMLEVENTOBJ_Y                                    DISPID_EVENTOBJ+6
#define DISPID_IHTMLEVENTOBJ_CLIENTX                              DISPID_EVENTOBJ+20
#define DISPID_IHTMLEVENTOBJ_CLIENTY                              DISPID_EVENTOBJ+21
#define DISPID_IHTMLEVENTOBJ_OFFSETX                              DISPID_EVENTOBJ+22
#define DISPID_IHTMLEVENTOBJ_OFFSETY                              DISPID_EVENTOBJ+23
#define DISPID_IHTMLEVENTOBJ_SCREENX                              DISPID_EVENTOBJ+24
#define DISPID_IHTMLEVENTOBJ_SCREENY                              DISPID_EVENTOBJ+25
#define DISPID_IHTMLEVENTOBJ_SRCFILTER                            DISPID_EVENTOBJ+26

//    DISPIDs for interface IHTMLEventObj2

#define DISPID_IHTMLEVENTOBJ2_SETATTRIBUTE                        DISPID_HTMLOBJECT+1
#define DISPID_IHTMLEVENTOBJ2_GETATTRIBUTE                        DISPID_HTMLOBJECT+2
#define DISPID_IHTMLEVENTOBJ2_REMOVEATTRIBUTE                     DISPID_HTMLOBJECT+3
#define DISPID_IHTMLEVENTOBJ2_PROPERTYNAME                        DISPID_EVENTOBJ+27
#define DISPID_IHTMLEVENTOBJ2_BOOKMARKS                           DISPID_EVENTOBJ+31
#define DISPID_IHTMLEVENTOBJ2_RECORDSET                           DISPID_EVENTOBJ+32
#define DISPID_IHTMLEVENTOBJ2_DATAFLD                             DISPID_EVENTOBJ+33
#define DISPID_IHTMLEVENTOBJ2_BOUNDELEMENTS                       DISPID_EVENTOBJ+34
#define DISPID_IHTMLEVENTOBJ2_REPEAT                              DISPID_EVENTOBJ+35
#define DISPID_IHTMLEVENTOBJ2_SRCURN                              DISPID_EVENTOBJ+36
#define DISPID_IHTMLEVENTOBJ2_SRCELEMENT                          DISPID_EVENTOBJ+1
#define DISPID_IHTMLEVENTOBJ2_ALTKEY                              DISPID_EVENTOBJ+2
#define DISPID_IHTMLEVENTOBJ2_CTRLKEY                             DISPID_EVENTOBJ+3
#define DISPID_IHTMLEVENTOBJ2_SHIFTKEY                            DISPID_EVENTOBJ+4
#define DISPID_IHTMLEVENTOBJ2_FROMELEMENT                         DISPID_EVENTOBJ+9
#define DISPID_IHTMLEVENTOBJ2_TOELEMENT                           DISPID_EVENTOBJ+10
#define DISPID_IHTMLEVENTOBJ2_BUTTON                              DISPID_EVENTOBJ+12
#define DISPID_IHTMLEVENTOBJ2_TYPE                                DISPID_EVENTOBJ+13
#define DISPID_IHTMLEVENTOBJ2_QUALIFIER                           DISPID_EVENTOBJ+14
#define DISPID_IHTMLEVENTOBJ2_REASON                              DISPID_EVENTOBJ+15
#define DISPID_IHTMLEVENTOBJ2_X                                   DISPID_EVENTOBJ+5
#define DISPID_IHTMLEVENTOBJ2_Y                                   DISPID_EVENTOBJ+6
#define DISPID_IHTMLEVENTOBJ2_CLIENTX                             DISPID_EVENTOBJ+20
#define DISPID_IHTMLEVENTOBJ2_CLIENTY                             DISPID_EVENTOBJ+21
#define DISPID_IHTMLEVENTOBJ2_OFFSETX                             DISPID_EVENTOBJ+22
#define DISPID_IHTMLEVENTOBJ2_OFFSETY                             DISPID_EVENTOBJ+23
#define DISPID_IHTMLEVENTOBJ2_SCREENX                             DISPID_EVENTOBJ+24
#define DISPID_IHTMLEVENTOBJ2_SCREENY                             DISPID_EVENTOBJ+25
#define DISPID_IHTMLEVENTOBJ2_SRCFILTER                           DISPID_EVENTOBJ+26
#define DISPID_IHTMLEVENTOBJ2_DATATRANSFER                        DISPID_EVENTOBJ+37

//    DISPIDs for interface IHTMLEventObj3

#define DISPID_IHTMLEVENTOBJ3_CONTENTOVERFLOW                     DISPID_EVENTOBJ+38
#define DISPID_IHTMLEVENTOBJ3_SHIFTLEFT                           DISPID_EVENTOBJ+39
#define DISPID_IHTMLEVENTOBJ3_ALTLEFT                             DISPID_EVENTOBJ+40
#define DISPID_IHTMLEVENTOBJ3_CTRLLEFT                            DISPID_EVENTOBJ+41
#define DISPID_IHTMLEVENTOBJ3_IMECOMPOSITIONCHANGE                DISPID_EVENTOBJ+42
#define DISPID_IHTMLEVENTOBJ3_IMENOTIFYCOMMAND                    DISPID_EVENTOBJ+43
#define DISPID_IHTMLEVENTOBJ3_IMENOTIFYDATA                       DISPID_EVENTOBJ+44
#define DISPID_IHTMLEVENTOBJ3_IMEREQUEST                          DISPID_EVENTOBJ+46
#define DISPID_IHTMLEVENTOBJ3_IMEREQUESTDATA                      DISPID_EVENTOBJ+47
#define DISPID_IHTMLEVENTOBJ3_KEYBOARDLAYOUT                      DISPID_EVENTOBJ+45
#define DISPID_IHTMLEVENTOBJ3_BEHAVIORCOOKIE                      DISPID_EVENTOBJ+48
#define DISPID_IHTMLEVENTOBJ3_BEHAVIORPART                        DISPID_EVENTOBJ+49
#define DISPID_IHTMLEVENTOBJ3_NEXTPAGE                            DISPID_EVENTOBJ+50

//    DISPIDs for interface IHTMLEventObj4

#define DISPID_IHTMLEVENTOBJ4_WHEELDELTA                          DISPID_EVENTOBJ+51

//    DISPIDs for interface IHTMLEventObj5

#define DISPID_IHTMLEVENTOBJ5_URL                                 DISPID_EVENTOBJ+52
#define DISPID_IHTMLEVENTOBJ5_DATA                                DISPID_EVENTOBJ+54
#define DISPID_IHTMLEVENTOBJ5_SOURCE                              DISPID_EVENTOBJ+55
#define DISPID_IHTMLEVENTOBJ5_ORIGIN                              DISPID_EVENTOBJ+53
#define DISPID_IHTMLEVENTOBJ5_ISSESSION                           DISPID_EVENTOBJ+56

//    DISPIDs for interface IHTMLFramesCollection2

#define DISPID_IHTMLFRAMESCOLLECTION2_ITEM                        0
#define DISPID_IHTMLFRAMESCOLLECTION2_LENGTH                      1001

//    DISPIDs for interface IHTMLScreen

#define DISPID_IHTMLSCREEN_COLORDEPTH                             DISPID_SCREEN+1
#define DISPID_IHTMLSCREEN_BUFFERDEPTH                            DISPID_SCREEN+2
#define DISPID_IHTMLSCREEN_WIDTH                                  DISPID_SCREEN+3
#define DISPID_IHTMLSCREEN_HEIGHT                                 DISPID_SCREEN+4
#define DISPID_IHTMLSCREEN_UPDATEINTERVAL                         DISPID_SCREEN+5
#define DISPID_IHTMLSCREEN_AVAILHEIGHT                            DISPID_SCREEN+6
#define DISPID_IHTMLSCREEN_AVAILWIDTH                             DISPID_SCREEN+7
#define DISPID_IHTMLSCREEN_FONTSMOOTHINGENABLED                   DISPID_SCREEN+8

//    DISPIDs for interface IHTMLScreen2

#define DISPID_IHTMLSCREEN2_LOGICALXDPI                           DISPID_SCREEN+9
#define DISPID_IHTMLSCREEN2_LOGICALYDPI                           DISPID_SCREEN+10
#define DISPID_IHTMLSCREEN2_DEVICEXDPI                            DISPID_SCREEN+11
#define DISPID_IHTMLSCREEN2_DEVICEYDPI                            DISPID_SCREEN+12

//    DISPIDs for interface IHTMLScreen3

#define DISPID_IHTMLSCREEN3_SYSTEMXDPI                            DISPID_SCREEN+13
#define DISPID_IHTMLSCREEN3_SYSTEMYDPI                            DISPID_SCREEN+14

//    DISPIDs for interface IHTMLWindow2

#define DISPID_IHTMLWINDOW2_FRAMES                                1100
#define DISPID_IHTMLWINDOW2_DEFAULTSTATUS                         1101
#define DISPID_IHTMLWINDOW2_STATUS                                1102
#define DISPID_IHTMLWINDOW2_SETTIMEOUT                            1172
#define DISPID_IHTMLWINDOW2_CLEARTIMEOUT                          1104
#define DISPID_IHTMLWINDOW2_ALERT                                 1105
#define DISPID_IHTMLWINDOW2_CONFIRM                               1110
#define DISPID_IHTMLWINDOW2_PROMPT                                1111
#define DISPID_IHTMLWINDOW2_IMAGE                                 1125
#define DISPID_IHTMLWINDOW2_LOCATION                              14
#define DISPID_IHTMLWINDOW2_HISTORY                               2
#define DISPID_IHTMLWINDOW2_CLOSE                                 3
#define DISPID_IHTMLWINDOW2_OPENER                                4
#define DISPID_IHTMLWINDOW2_NAVIGATOR                             5
#define DISPID_IHTMLWINDOW2_NAME                                  11
#define DISPID_IHTMLWINDOW2_PARENT                                12
#define DISPID_IHTMLWINDOW2_OPEN                                  13
#define DISPID_IHTMLWINDOW2_SELF                                  20
#define DISPID_IHTMLWINDOW2_TOP                                   21
#define DISPID_IHTMLWINDOW2_WINDOW                                22
#define DISPID_IHTMLWINDOW2_NAVIGATE                              25
#define DISPID_IHTMLWINDOW2_ONFOCUS                               DISPID_EVPROP_ONFOCUS
#define DISPID_IHTMLWINDOW2_ONBLUR                                DISPID_EVPROP_ONBLUR
#define DISPID_IHTMLWINDOW2_ONLOAD                                DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLWINDOW2_ONBEFOREUNLOAD                        DISPID_EVPROP_ONBEFOREUNLOAD
#define DISPID_IHTMLWINDOW2_ONUNLOAD                              DISPID_EVPROP_ONUNLOAD
#define DISPID_IHTMLWINDOW2_ONHELP                                DISPID_EVPROP_ONHELP
#define DISPID_IHTMLWINDOW2_ONERROR                               DISPID_EVPROP_ONERROR
#define DISPID_IHTMLWINDOW2_ONRESIZE                              DISPID_EVPROP_ONRESIZE
#define DISPID_IHTMLWINDOW2_ONSCROLL                              DISPID_EVPROP_ONSCROLL
#define DISPID_IHTMLWINDOW2_DOCUMENT                              1151
#define DISPID_IHTMLWINDOW2_EVENT                                 1152
#define DISPID_IHTMLWINDOW2__NEWENUM                              1153
#define DISPID_IHTMLWINDOW2_SHOWMODALDIALOG                       1154
#define DISPID_IHTMLWINDOW2_SHOWHELP                              1155
#define DISPID_IHTMLWINDOW2_SCREEN                                1156
#define DISPID_IHTMLWINDOW2_OPTION                                1157
#define DISPID_IHTMLWINDOW2_FOCUS                                 1158
#define DISPID_IHTMLWINDOW2_CLOSED                                23
#define DISPID_IHTMLWINDOW2_BLUR                                  1159
#define DISPID_IHTMLWINDOW2_SCROLL                                1160
#define DISPID_IHTMLWINDOW2_CLIENTINFORMATION                     1161
#define DISPID_IHTMLWINDOW2_SETINTERVAL                           1173
#define DISPID_IHTMLWINDOW2_CLEARINTERVAL                         1163
#define DISPID_IHTMLWINDOW2_OFFSCREENBUFFERING                    1164
#define DISPID_IHTMLWINDOW2_EXECSCRIPT                            1165
#define DISPID_IHTMLWINDOW2_TOSTRING                              1166
#define DISPID_IHTMLWINDOW2_SCROLLBY                              1167
#define DISPID_IHTMLWINDOW2_SCROLLTO                              1168
#define DISPID_IHTMLWINDOW2_MOVETO                                6
#define DISPID_IHTMLWINDOW2_MOVEBY                                7
#define DISPID_IHTMLWINDOW2_RESIZETO                              9
#define DISPID_IHTMLWINDOW2_RESIZEBY                              8
#define DISPID_IHTMLWINDOW2_EXTERNAL                              1169

//    DISPIDs for interface IHTMLWindow3

#define DISPID_IHTMLWINDOW3_SCREENLEFT                            1170
#define DISPID_IHTMLWINDOW3_SCREENTOP                             1171
#define DISPID_IHTMLWINDOW3_ATTACHEVENT                           DISPID_HTMLOBJECT+7
#define DISPID_IHTMLWINDOW3_DETACHEVENT                           DISPID_HTMLOBJECT+8
#define DISPID_IHTMLWINDOW3_SETTIMEOUT                            1103
#define DISPID_IHTMLWINDOW3_SETINTERVAL                           1162
#define DISPID_IHTMLWINDOW3_PRINT                                 1174
#define DISPID_IHTMLWINDOW3_ONBEFOREPRINT                         DISPID_EVPROP_ONBEFOREPRINT
#define DISPID_IHTMLWINDOW3_ONAFTERPRINT                          DISPID_EVPROP_ONAFTERPRINT
#define DISPID_IHTMLWINDOW3_CLIPBOARDDATA                         1175
#define DISPID_IHTMLWINDOW3_SHOWMODELESSDIALOG                    1176

//    DISPIDs for interface IHTMLWindow4

#define DISPID_IHTMLWINDOW4_CREATEPOPUP                           1180
#define DISPID_IHTMLWINDOW4_FRAMEELEMENT                          1181

//    DISPIDs for interface IHTMLWindow5

#define DISPID_IHTMLWINDOW5_XMLHTTPREQUEST                        1190

//    DISPIDs for interface IHTMLWindow6

#define DISPID_IHTMLWINDOW6_XDOMAINREQUEST                        1191
#define DISPID_IHTMLWINDOW6_SESSIONSTORAGE                        1192
#define DISPID_IHTMLWINDOW6_LOCALSTORAGE                          1193
#define DISPID_IHTMLWINDOW6_ONHASHCHANGE                          DISPID_EVPROP_ONHASHCHANGE
#define DISPID_IHTMLWINDOW6_MAXCONNECTIONSPERSERVER               1194
#define DISPID_IHTMLWINDOW6_POSTMESSAGE                           1196
#define DISPID_IHTMLWINDOW6_TOSTATICHTML                          1197
#define DISPID_IHTMLWINDOW6_ONMESSAGE                             DISPID_EVPROP_ONMESSAGE
#define DISPID_IHTMLWINDOW6_MSWRITEPROFILERMARK                   1198

//    DISPIDs for event set HTMLWindowEvents3

#define DISPID_HTMLWINDOWEVENTS3_ONHASHCHANGE                     DISPID_EVMETH_ONHASHCHANGE
#define DISPID_HTMLWINDOWEVENTS3_ONMESSAGE                        DISPID_EVMETH_ONMESSAGE

//    DISPIDs for event set HTMLWindowEvents2

#define DISPID_HTMLWINDOWEVENTS2_ONLOAD                           DISPID_EVMETH_ONLOAD
#define DISPID_HTMLWINDOWEVENTS2_ONUNLOAD                         DISPID_EVMETH_ONUNLOAD
#define DISPID_HTMLWINDOWEVENTS2_ONHELP                           DISPID_EVMETH_ONHELP
#define DISPID_HTMLWINDOWEVENTS2_ONFOCUS                          DISPID_EVMETH_ONFOCUS
#define DISPID_HTMLWINDOWEVENTS2_ONBLUR                           DISPID_EVMETH_ONBLUR
#define DISPID_HTMLWINDOWEVENTS2_ONERROR                          DISPID_EVMETH_ONERROR
#define DISPID_HTMLWINDOWEVENTS2_ONRESIZE                         DISPID_EVMETH_ONRESIZE
#define DISPID_HTMLWINDOWEVENTS2_ONSCROLL                         DISPID_EVMETH_ONSCROLL
#define DISPID_HTMLWINDOWEVENTS2_ONBEFOREUNLOAD                   DISPID_EVMETH_ONBEFOREUNLOAD
#define DISPID_HTMLWINDOWEVENTS2_ONBEFOREPRINT                    DISPID_EVMETH_ONBEFOREPRINT
#define DISPID_HTMLWINDOWEVENTS2_ONAFTERPRINT                     DISPID_EVMETH_ONAFTERPRINT

//    DISPIDs for event set HTMLWindowEvents

#define DISPID_HTMLWINDOWEVENTS_ONLOAD                            DISPID_EVMETH_ONLOAD
#define DISPID_HTMLWINDOWEVENTS_ONUNLOAD                          DISPID_EVMETH_ONUNLOAD
#define DISPID_HTMLWINDOWEVENTS_ONHELP                            DISPID_EVMETH_ONHELP
#define DISPID_HTMLWINDOWEVENTS_ONFOCUS                           DISPID_EVMETH_ONFOCUS
#define DISPID_HTMLWINDOWEVENTS_ONBLUR                            DISPID_EVMETH_ONBLUR
#define DISPID_HTMLWINDOWEVENTS_ONERROR                           DISPID_EVMETH_ONERROR
#define DISPID_HTMLWINDOWEVENTS_ONRESIZE                          DISPID_EVMETH_ONRESIZE
#define DISPID_HTMLWINDOWEVENTS_ONSCROLL                          DISPID_EVMETH_ONSCROLL
#define DISPID_HTMLWINDOWEVENTS_ONBEFOREUNLOAD                    DISPID_EVMETH_ONBEFOREUNLOAD
#define DISPID_HTMLWINDOWEVENTS_ONBEFOREPRINT                     DISPID_EVMETH_ONBEFOREPRINT
#define DISPID_HTMLWINDOWEVENTS_ONAFTERPRINT                      DISPID_EVMETH_ONAFTERPRINT

//    DISPIDs for interface IHTMLDocumentCompatibleInfo

#define DISPID_IHTMLDOCUMENTCOMPATIBLEINFO_USERAGENT              DISPID_DOCUMENTCOMPATIBLEINFO+1
#define DISPID_IHTMLDOCUMENTCOMPATIBLEINFO_VERSION                DISPID_DOCUMENTCOMPATIBLEINFO+2

//    DISPIDs for interface IHTMLDocumentCompatibleInfoCollection

#define DISPID_IHTMLDOCUMENTCOMPATIBLEINFOCOLLECTION_LENGTH       DISPID_DOCUMENTCOMPATIBLEINFO_COLLECTION+1
#define DISPID_IHTMLDOCUMENTCOMPATIBLEINFOCOLLECTION_ITEM         DISPID_VALUE

//    DISPIDs for interface IHTMLDocument

#define DISPID_IHTMLDOCUMENT_SCRIPT                               DISPID_OMDOCUMENT+1

//    DISPIDs for interface IHTMLDocument2

#define DISPID_IHTMLDOCUMENT2_ALL                                 DISPID_OMDOCUMENT+3
#define DISPID_IHTMLDOCUMENT2_BODY                                DISPID_OMDOCUMENT+4
#define DISPID_IHTMLDOCUMENT2_ACTIVEELEMENT                       DISPID_OMDOCUMENT+5
#define DISPID_IHTMLDOCUMENT2_IMAGES                              DISPID_OMDOCUMENT+11
#define DISPID_IHTMLDOCUMENT2_APPLETS                             DISPID_OMDOCUMENT+8
#define DISPID_IHTMLDOCUMENT2_LINKS                               DISPID_OMDOCUMENT+9
#define DISPID_IHTMLDOCUMENT2_FORMS                               DISPID_OMDOCUMENT+10
#define DISPID_IHTMLDOCUMENT2_ANCHORS                             DISPID_OMDOCUMENT+7
#define DISPID_IHTMLDOCUMENT2_TITLE                               DISPID_OMDOCUMENT+12
#define DISPID_IHTMLDOCUMENT2_SCRIPTS                             DISPID_OMDOCUMENT+13
#define DISPID_IHTMLDOCUMENT2_DESIGNMODE                          DISPID_OMDOCUMENT+14
#define DISPID_IHTMLDOCUMENT2_SELECTION                           DISPID_OMDOCUMENT+17
#define DISPID_IHTMLDOCUMENT2_READYSTATE                          DISPID_OMDOCUMENT+18
#define DISPID_IHTMLDOCUMENT2_FRAMES                              DISPID_OMDOCUMENT+19
#define DISPID_IHTMLDOCUMENT2_EMBEDS                              DISPID_OMDOCUMENT+15
#define DISPID_IHTMLDOCUMENT2_PLUGINS                             DISPID_OMDOCUMENT+21
#define DISPID_IHTMLDOCUMENT2_ALINKCOLOR                          DISPID_OMDOCUMENT+22
#define DISPID_IHTMLDOCUMENT2_BGCOLOR                             DISPID_BACKCOLOR
#define DISPID_IHTMLDOCUMENT2_FGCOLOR                             DISPID_A_COLOR
#define DISPID_IHTMLDOCUMENT2_LINKCOLOR                           DISPID_OMDOCUMENT+24
#define DISPID_IHTMLDOCUMENT2_VLINKCOLOR                          DISPID_OMDOCUMENT+23
#define DISPID_IHTMLDOCUMENT2_REFERRER                            DISPID_OMDOCUMENT+27
#define DISPID_IHTMLDOCUMENT2_LOCATION                            DISPID_OMDOCUMENT+26
#define DISPID_IHTMLDOCUMENT2_LASTMODIFIED                        DISPID_OMDOCUMENT+28
#define DISPID_IHTMLDOCUMENT2_URL                                 DISPID_OMDOCUMENT+25
#define DISPID_IHTMLDOCUMENT2_DOMAIN                              DISPID_OMDOCUMENT+29
#define DISPID_IHTMLDOCUMENT2_COOKIE                              DISPID_OMDOCUMENT+30
#define DISPID_IHTMLDOCUMENT2_EXPANDO                             DISPID_OMDOCUMENT+31
#define DISPID_IHTMLDOCUMENT2_CHARSET                             DISPID_OMDOCUMENT+32
#define DISPID_IHTMLDOCUMENT2_DEFAULTCHARSET                      DISPID_OMDOCUMENT+33
#define DISPID_IHTMLDOCUMENT2_MIMETYPE                            DISPID_OMDOCUMENT+41
#define DISPID_IHTMLDOCUMENT2_FILESIZE                            DISPID_OMDOCUMENT+42
#define DISPID_IHTMLDOCUMENT2_FILECREATEDDATE                     DISPID_OMDOCUMENT+43
#define DISPID_IHTMLDOCUMENT2_FILEMODIFIEDDATE                    DISPID_OMDOCUMENT+44
#define DISPID_IHTMLDOCUMENT2_FILEUPDATEDDATE                     DISPID_OMDOCUMENT+45
#define DISPID_IHTMLDOCUMENT2_SECURITY                            DISPID_OMDOCUMENT+46
#define DISPID_IHTMLDOCUMENT2_PROTOCOL                            DISPID_OMDOCUMENT+47
#define DISPID_IHTMLDOCUMENT2_NAMEPROP                            DISPID_OMDOCUMENT+48
#define DISPID_IHTMLDOCUMENT2_WRITE                               DISPID_OMDOCUMENT+54
#define DISPID_IHTMLDOCUMENT2_WRITELN                             DISPID_OMDOCUMENT+55
#define DISPID_IHTMLDOCUMENT2_OPEN                                DISPID_OMDOCUMENT+56
#define DISPID_IHTMLDOCUMENT2_CLOSE                               DISPID_OMDOCUMENT+57
#define DISPID_IHTMLDOCUMENT2_CLEAR                               DISPID_OMDOCUMENT+58
#define DISPID_IHTMLDOCUMENT2_QUERYCOMMANDSUPPORTED               DISPID_OMDOCUMENT+59
#define DISPID_IHTMLDOCUMENT2_QUERYCOMMANDENABLED                 DISPID_OMDOCUMENT+60
#define DISPID_IHTMLDOCUMENT2_QUERYCOMMANDSTATE                   DISPID_OMDOCUMENT+61
#define DISPID_IHTMLDOCUMENT2_QUERYCOMMANDINDETERM                DISPID_OMDOCUMENT+62
#define DISPID_IHTMLDOCUMENT2_QUERYCOMMANDTEXT                    DISPID_OMDOCUMENT+63
#define DISPID_IHTMLDOCUMENT2_QUERYCOMMANDVALUE                   DISPID_OMDOCUMENT+64
#define DISPID_IHTMLDOCUMENT2_EXECCOMMAND                         DISPID_OMDOCUMENT+65
#define DISPID_IHTMLDOCUMENT2_EXECCOMMANDSHOWHELP                 DISPID_OMDOCUMENT+66
#define DISPID_IHTMLDOCUMENT2_CREATEELEMENT                       DISPID_OMDOCUMENT+67
#define DISPID_IHTMLDOCUMENT2_ONHELP                              DISPID_EVPROP_ONHELP
#define DISPID_IHTMLDOCUMENT2_ONCLICK                             DISPID_EVPROP_ONCLICK
#define DISPID_IHTMLDOCUMENT2_ONDBLCLICK                          DISPID_EVPROP_ONDBLCLICK
#define DISPID_IHTMLDOCUMENT2_ONKEYUP                             DISPID_EVPROP_ONKEYUP
#define DISPID_IHTMLDOCUMENT2_ONKEYDOWN                           DISPID_EVPROP_ONKEYDOWN
#define DISPID_IHTMLDOCUMENT2_ONKEYPRESS                          DISPID_EVPROP_ONKEYPRESS
#define DISPID_IHTMLDOCUMENT2_ONMOUSEUP                           DISPID_EVPROP_ONMOUSEUP
#define DISPID_IHTMLDOCUMENT2_ONMOUSEDOWN                         DISPID_EVPROP_ONMOUSEDOWN
#define DISPID_IHTMLDOCUMENT2_ONMOUSEMOVE                         DISPID_EVPROP_ONMOUSEMOVE
#define DISPID_IHTMLDOCUMENT2_ONMOUSEOUT                          DISPID_EVPROP_ONMOUSEOUT
#define DISPID_IHTMLDOCUMENT2_ONMOUSEOVER                         DISPID_EVPROP_ONMOUSEOVER
#define DISPID_IHTMLDOCUMENT2_ONREADYSTATECHANGE                  DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLDOCUMENT2_ONAFTERUPDATE                       DISPID_EVPROP_ONAFTERUPDATE
#define DISPID_IHTMLDOCUMENT2_ONROWEXIT                           DISPID_EVPROP_ONROWEXIT
#define DISPID_IHTMLDOCUMENT2_ONROWENTER                          DISPID_EVPROP_ONROWENTER
#define DISPID_IHTMLDOCUMENT2_ONDRAGSTART                         DISPID_EVPROP_ONDRAGSTART
#define DISPID_IHTMLDOCUMENT2_ONSELECTSTART                       DISPID_EVPROP_ONSELECTSTART
#define DISPID_IHTMLDOCUMENT2_ELEMENTFROMPOINT                    DISPID_OMDOCUMENT+68
#define DISPID_IHTMLDOCUMENT2_PARENTWINDOW                        DISPID_OMDOCUMENT+34
#define DISPID_IHTMLDOCUMENT2_STYLESHEETS                         DISPID_OMDOCUMENT+69
#define DISPID_IHTMLDOCUMENT2_ONBEFOREUPDATE                      DISPID_EVPROP_ONBEFOREUPDATE
#define DISPID_IHTMLDOCUMENT2_ONERRORUPDATE                       DISPID_EVPROP_ONERRORUPDATE
#define DISPID_IHTMLDOCUMENT2_TOSTRING                            DISPID_OMDOCUMENT+70
#define DISPID_IHTMLDOCUMENT2_CREATESTYLESHEET                    DISPID_OMDOCUMENT+71

//    DISPIDs for interface IHTMLDocument3

#define DISPID_IHTMLDOCUMENT3_RELEASECAPTURE                      DISPID_OMDOCUMENT+72
#define DISPID_IHTMLDOCUMENT3_RECALC                              DISPID_OMDOCUMENT+73
#define DISPID_IHTMLDOCUMENT3_CREATETEXTNODE                      DISPID_OMDOCUMENT+74
#define DISPID_IHTMLDOCUMENT3_DOCUMENTELEMENT                     DISPID_OMDOCUMENT+75
#define DISPID_IHTMLDOCUMENT3_UNIQUEID                            DISPID_OMDOCUMENT+77
#define DISPID_IHTMLDOCUMENT3_ATTACHEVENT                         DISPID_HTMLOBJECT+7
#define DISPID_IHTMLDOCUMENT3_DETACHEVENT                         DISPID_HTMLOBJECT+8
#define DISPID_IHTMLDOCUMENT3_ONROWSDELETE                        DISPID_EVPROP_ONROWSDELETE
#define DISPID_IHTMLDOCUMENT3_ONROWSINSERTED                      DISPID_EVPROP_ONROWSINSERTED
#define DISPID_IHTMLDOCUMENT3_ONCELLCHANGE                        DISPID_EVPROP_ONCELLCHANGE
#define DISPID_IHTMLDOCUMENT3_ONDATASETCHANGED                    DISPID_EVPROP_ONDATASETCHANGED
#define DISPID_IHTMLDOCUMENT3_ONDATAAVAILABLE                     DISPID_EVPROP_ONDATAAVAILABLE
#define DISPID_IHTMLDOCUMENT3_ONDATASETCOMPLETE                   DISPID_EVPROP_ONDATASETCOMPLETE
#define DISPID_IHTMLDOCUMENT3_ONPROPERTYCHANGE                    DISPID_EVPROP_ONPROPERTYCHANGE
#define DISPID_IHTMLDOCUMENT3_DIR                                 DISPID_A_DIR
#define DISPID_IHTMLDOCUMENT3_ONCONTEXTMENU                       DISPID_EVPROP_ONCONTEXTMENU
#define DISPID_IHTMLDOCUMENT3_ONSTOP                              DISPID_EVPROP_ONSTOP
#define DISPID_IHTMLDOCUMENT3_CREATEDOCUMENTFRAGMENT              DISPID_OMDOCUMENT+76
#define DISPID_IHTMLDOCUMENT3_PARENTDOCUMENT                      DISPID_OMDOCUMENT+78
#define DISPID_IHTMLDOCUMENT3_ENABLEDOWNLOAD                      DISPID_OMDOCUMENT+79
#define DISPID_IHTMLDOCUMENT3_BASEURL                             DISPID_OMDOCUMENT+80
#define DISPID_IHTMLDOCUMENT3_CHILDNODES                          DISPID_ELEMENT+49
#define DISPID_IHTMLDOCUMENT3_INHERITSTYLESHEETS                  DISPID_OMDOCUMENT+82
#define DISPID_IHTMLDOCUMENT3_ONBEFOREEDITFOCUS                   DISPID_EVPROP_ONBEFOREEDITFOCUS
#define DISPID_IHTMLDOCUMENT3_GETELEMENTSBYNAME                   DISPID_OMDOCUMENT+86
#define DISPID_IHTMLDOCUMENT3_GETELEMENTBYID                      DISPID_OMDOCUMENT+88
#define DISPID_IHTMLDOCUMENT3_GETELEMENTSBYTAGNAME                DISPID_OMDOCUMENT+87

//    DISPIDs for interface IHTMLDocument4

#define DISPID_IHTMLDOCUMENT4_FOCUS                               DISPID_OMDOCUMENT+89
#define DISPID_IHTMLDOCUMENT4_HASFOCUS                            DISPID_OMDOCUMENT+90
#define DISPID_IHTMLDOCUMENT4_ONSELECTIONCHANGE                   DISPID_EVPROP_ONSELECTIONCHANGE
#define DISPID_IHTMLDOCUMENT4_NAMESPACES                          DISPID_OMDOCUMENT+91
#define DISPID_IHTMLDOCUMENT4_CREATEDOCUMENTFROMURL               DISPID_OMDOCUMENT+92
#define DISPID_IHTMLDOCUMENT4_MEDIA                               DISPID_OMDOCUMENT+93
#define DISPID_IHTMLDOCUMENT4_CREATEEVENTOBJECT                   DISPID_OMDOCUMENT+94
#define DISPID_IHTMLDOCUMENT4_FIREEVENT                           DISPID_OMDOCUMENT+95
#define DISPID_IHTMLDOCUMENT4_CREATERENDERSTYLE                   DISPID_OMDOCUMENT+96
#define DISPID_IHTMLDOCUMENT4_ONCONTROLSELECT                     DISPID_EVPROP_ONCONTROLSELECT
#define DISPID_IHTMLDOCUMENT4_URLUNENCODED                        DISPID_OMDOCUMENT+97

//    DISPIDs for interface IHTMLDocument5

#define DISPID_IHTMLDOCUMENT5_ONMOUSEWHEEL                        DISPID_EVPROP_ONMOUSEWHEEL
#define DISPID_IHTMLDOCUMENT5_DOCTYPE                             DISPID_OMDOCUMENT+98
#define DISPID_IHTMLDOCUMENT5_IMPLEMENTATION                      DISPID_OMDOCUMENT+99
#define DISPID_IHTMLDOCUMENT5_CREATEATTRIBUTE                     DISPID_OMDOCUMENT+100
#define DISPID_IHTMLDOCUMENT5_CREATECOMMENT                       DISPID_OMDOCUMENT+101
#define DISPID_IHTMLDOCUMENT5_ONFOCUSIN                           DISPID_EVPROP_ONFOCUSIN
#define DISPID_IHTMLDOCUMENT5_ONFOCUSOUT                          DISPID_EVPROP_ONFOCUSOUT
#define DISPID_IHTMLDOCUMENT5_ONACTIVATE                          DISPID_EVPROP_ONACTIVATE
#define DISPID_IHTMLDOCUMENT5_ONDEACTIVATE                        DISPID_EVPROP_ONDEACTIVATE
#define DISPID_IHTMLDOCUMENT5_ONBEFOREACTIVATE                    DISPID_EVPROP_ONBEFOREACTIVATE
#define DISPID_IHTMLDOCUMENT5_ONBEFOREDEACTIVATE                  DISPID_EVPROP_ONBEFOREDEACTIVATE
#define DISPID_IHTMLDOCUMENT5_COMPATMODE                          DISPID_OMDOCUMENT+102

//    DISPIDs for interface IHTMLDocument6

#define DISPID_IHTMLDOCUMENT6_COMPATIBLE                          DISPID_OMDOCUMENT+103
#define DISPID_IHTMLDOCUMENT6_DOCUMENTMODE                        DISPID_OMDOCUMENT+104
#define DISPID_IHTMLDOCUMENT6_ONSTORAGE                           DISPID_EVPROP_ONSTORAGE
#define DISPID_IHTMLDOCUMENT6_ONSTORAGECOMMIT                     DISPID_EVPROP_ONSTORAGECOMMIT
#define DISPID_IHTMLDOCUMENT6_IE8_GETELEMENTBYID                  DISPID_OMDOCUMENT+107
#define DISPID_IHTMLDOCUMENT6_UPDATESETTINGS                      DISPID_OMDOCUMENT+109

//    DISPIDs for interface IDocumentSelector

#define DISPID_IDOCUMENTSELECTOR_QUERYSELECTOR                    DISPID_OMDOCUMENT+105
#define DISPID_IDOCUMENTSELECTOR_QUERYSELECTORALL                 DISPID_OMDOCUMENT+106

//    DISPIDs for event set HTMLDocumentEvents3

#define DISPID_HTMLDOCUMENTEVENTS3_ONSTORAGE                      DISPID_EVMETH_ONSTORAGE
#define DISPID_HTMLDOCUMENTEVENTS3_ONSTORAGECOMMIT                DISPID_EVMETH_ONSTORAGECOMMIT

//    DISPIDs for event set HTMLDocumentEvents2

#define DISPID_HTMLDOCUMENTEVENTS2_ONHELP                         DISPID_EVMETH_ONHELP
#define DISPID_HTMLDOCUMENTEVENTS2_ONCLICK                        DISPID_EVMETH_ONCLICK
#define DISPID_HTMLDOCUMENTEVENTS2_ONDBLCLICK                     DISPID_EVMETH_ONDBLCLICK
#define DISPID_HTMLDOCUMENTEVENTS2_ONKEYDOWN                      DISPID_EVMETH_ONKEYDOWN
#define DISPID_HTMLDOCUMENTEVENTS2_ONKEYUP                        DISPID_EVMETH_ONKEYUP
#define DISPID_HTMLDOCUMENTEVENTS2_ONKEYPRESS                     DISPID_EVMETH_ONKEYPRESS
#define DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEDOWN                    DISPID_EVMETH_ONMOUSEDOWN
#define DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEMOVE                    DISPID_EVMETH_ONMOUSEMOVE
#define DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEUP                      DISPID_EVMETH_ONMOUSEUP
#define DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEOUT                     DISPID_EVMETH_ONMOUSEOUT
#define DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEOVER                    DISPID_EVMETH_ONMOUSEOVER
#define DISPID_HTMLDOCUMENTEVENTS2_ONREADYSTATECHANGE             DISPID_EVMETH_ONREADYSTATECHANGE
#define DISPID_HTMLDOCUMENTEVENTS2_ONBEFOREUPDATE                 DISPID_EVMETH_ONBEFOREUPDATE
#define DISPID_HTMLDOCUMENTEVENTS2_ONAFTERUPDATE                  DISPID_EVMETH_ONAFTERUPDATE
#define DISPID_HTMLDOCUMENTEVENTS2_ONROWEXIT                      DISPID_EVMETH_ONROWEXIT
#define DISPID_HTMLDOCUMENTEVENTS2_ONROWENTER                     DISPID_EVMETH_ONROWENTER
#define DISPID_HTMLDOCUMENTEVENTS2_ONDRAGSTART                    DISPID_EVMETH_ONDRAGSTART
#define DISPID_HTMLDOCUMENTEVENTS2_ONSELECTSTART                  DISPID_EVMETH_ONSELECTSTART
#define DISPID_HTMLDOCUMENTEVENTS2_ONERRORUPDATE                  DISPID_EVMETH_ONERRORUPDATE
#define DISPID_HTMLDOCUMENTEVENTS2_ONCONTEXTMENU                  DISPID_EVMETH_ONCONTEXTMENU
#define DISPID_HTMLDOCUMENTEVENTS2_ONSTOP                         DISPID_EVMETH_ONSTOP
#define DISPID_HTMLDOCUMENTEVENTS2_ONROWSDELETE                   DISPID_EVMETH_ONROWSDELETE
#define DISPID_HTMLDOCUMENTEVENTS2_ONROWSINSERTED                 DISPID_EVMETH_ONROWSINSERTED
#define DISPID_HTMLDOCUMENTEVENTS2_ONCELLCHANGE                   DISPID_EVMETH_ONCELLCHANGE
#define DISPID_HTMLDOCUMENTEVENTS2_ONPROPERTYCHANGE               DISPID_EVMETH_ONPROPERTYCHANGE
#define DISPID_HTMLDOCUMENTEVENTS2_ONDATASETCHANGED               DISPID_EVMETH_ONDATASETCHANGED
#define DISPID_HTMLDOCUMENTEVENTS2_ONDATAAVAILABLE                DISPID_EVMETH_ONDATAAVAILABLE
#define DISPID_HTMLDOCUMENTEVENTS2_ONDATASETCOMPLETE              DISPID_EVMETH_ONDATASETCOMPLETE
#define DISPID_HTMLDOCUMENTEVENTS2_ONBEFOREEDITFOCUS              DISPID_EVMETH_ONBEFOREEDITFOCUS
#define DISPID_HTMLDOCUMENTEVENTS2_ONSELECTIONCHANGE              DISPID_EVMETH_ONSELECTIONCHANGE
#define DISPID_HTMLDOCUMENTEVENTS2_ONCONTROLSELECT                DISPID_EVMETH_ONCONTROLSELECT
#define DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEWHEEL                   DISPID_EVMETH_ONMOUSEWHEEL
#define DISPID_HTMLDOCUMENTEVENTS2_ONFOCUSIN                      DISPID_EVMETH_ONFOCUSIN
#define DISPID_HTMLDOCUMENTEVENTS2_ONFOCUSOUT                     DISPID_EVMETH_ONFOCUSOUT
#define DISPID_HTMLDOCUMENTEVENTS2_ONACTIVATE                     DISPID_EVMETH_ONACTIVATE
#define DISPID_HTMLDOCUMENTEVENTS2_ONDEACTIVATE                   DISPID_EVMETH_ONDEACTIVATE
#define DISPID_HTMLDOCUMENTEVENTS2_ONBEFOREACTIVATE               DISPID_EVMETH_ONBEFOREACTIVATE
#define DISPID_HTMLDOCUMENTEVENTS2_ONBEFOREDEACTIVATE             DISPID_EVMETH_ONBEFOREDEACTIVATE

//    DISPIDs for event set HTMLDocumentEvents

#define DISPID_HTMLDOCUMENTEVENTS_ONHELP                          DISPID_EVMETH_ONHELP
#define DISPID_HTMLDOCUMENTEVENTS_ONCLICK                         DISPID_EVMETH_ONCLICK
#define DISPID_HTMLDOCUMENTEVENTS_ONDBLCLICK                      DISPID_EVMETH_ONDBLCLICK
#define DISPID_HTMLDOCUMENTEVENTS_ONKEYDOWN                       DISPID_EVMETH_ONKEYDOWN
#define DISPID_HTMLDOCUMENTEVENTS_ONKEYUP                         DISPID_EVMETH_ONKEYUP
#define DISPID_HTMLDOCUMENTEVENTS_ONKEYPRESS                      DISPID_EVMETH_ONKEYPRESS
#define DISPID_HTMLDOCUMENTEVENTS_ONMOUSEDOWN                     DISPID_EVMETH_ONMOUSEDOWN
#define DISPID_HTMLDOCUMENTEVENTS_ONMOUSEMOVE                     DISPID_EVMETH_ONMOUSEMOVE
#define DISPID_HTMLDOCUMENTEVENTS_ONMOUSEUP                       DISPID_EVMETH_ONMOUSEUP
#define DISPID_HTMLDOCUMENTEVENTS_ONMOUSEOUT                      DISPID_EVMETH_ONMOUSEOUT
#define DISPID_HTMLDOCUMENTEVENTS_ONMOUSEOVER                     DISPID_EVMETH_ONMOUSEOVER
#define DISPID_HTMLDOCUMENTEVENTS_ONREADYSTATECHANGE              DISPID_EVMETH_ONREADYSTATECHANGE
#define DISPID_HTMLDOCUMENTEVENTS_ONBEFOREUPDATE                  DISPID_EVMETH_ONBEFOREUPDATE
#define DISPID_HTMLDOCUMENTEVENTS_ONAFTERUPDATE                   DISPID_EVMETH_ONAFTERUPDATE
#define DISPID_HTMLDOCUMENTEVENTS_ONROWEXIT                       DISPID_EVMETH_ONROWEXIT
#define DISPID_HTMLDOCUMENTEVENTS_ONROWENTER                      DISPID_EVMETH_ONROWENTER
#define DISPID_HTMLDOCUMENTEVENTS_ONDRAGSTART                     DISPID_EVMETH_ONDRAGSTART
#define DISPID_HTMLDOCUMENTEVENTS_ONSELECTSTART                   DISPID_EVMETH_ONSELECTSTART
#define DISPID_HTMLDOCUMENTEVENTS_ONERRORUPDATE                   DISPID_EVMETH_ONERRORUPDATE
#define DISPID_HTMLDOCUMENTEVENTS_ONCONTEXTMENU                   DISPID_EVMETH_ONCONTEXTMENU
#define DISPID_HTMLDOCUMENTEVENTS_ONSTOP                          DISPID_EVMETH_ONSTOP
#define DISPID_HTMLDOCUMENTEVENTS_ONROWSDELETE                    DISPID_EVMETH_ONROWSDELETE
#define DISPID_HTMLDOCUMENTEVENTS_ONROWSINSERTED                  DISPID_EVMETH_ONROWSINSERTED
#define DISPID_HTMLDOCUMENTEVENTS_ONCELLCHANGE                    DISPID_EVMETH_ONCELLCHANGE
#define DISPID_HTMLDOCUMENTEVENTS_ONPROPERTYCHANGE                DISPID_EVMETH_ONPROPERTYCHANGE
#define DISPID_HTMLDOCUMENTEVENTS_ONDATASETCHANGED                DISPID_EVMETH_ONDATASETCHANGED
#define DISPID_HTMLDOCUMENTEVENTS_ONDATAAVAILABLE                 DISPID_EVMETH_ONDATAAVAILABLE
#define DISPID_HTMLDOCUMENTEVENTS_ONDATASETCOMPLETE               DISPID_EVMETH_ONDATASETCOMPLETE
#define DISPID_HTMLDOCUMENTEVENTS_ONBEFOREEDITFOCUS               DISPID_EVMETH_ONBEFOREEDITFOCUS
#define DISPID_HTMLDOCUMENTEVENTS_ONSELECTIONCHANGE               DISPID_EVMETH_ONSELECTIONCHANGE
#define DISPID_HTMLDOCUMENTEVENTS_ONCONTROLSELECT                 DISPID_EVMETH_ONCONTROLSELECT
#define DISPID_HTMLDOCUMENTEVENTS_ONMOUSEWHEEL                    DISPID_EVMETH_ONMOUSEWHEEL
#define DISPID_HTMLDOCUMENTEVENTS_ONFOCUSIN                       DISPID_EVMETH_ONFOCUSIN
#define DISPID_HTMLDOCUMENTEVENTS_ONFOCUSOUT                      DISPID_EVMETH_ONFOCUSOUT
#define DISPID_HTMLDOCUMENTEVENTS_ONACTIVATE                      DISPID_EVMETH_ONACTIVATE
#define DISPID_HTMLDOCUMENTEVENTS_ONDEACTIVATE                    DISPID_EVMETH_ONDEACTIVATE
#define DISPID_HTMLDOCUMENTEVENTS_ONBEFOREACTIVATE                DISPID_EVMETH_ONBEFOREACTIVATE
#define DISPID_HTMLDOCUMENTEVENTS_ONBEFOREDEACTIVATE              DISPID_EVMETH_ONBEFOREDEACTIVATE

//    DISPIDs for interface IWebBridge

#define DISPID_IWEBBRIDGE_URL                                     1
#define DISPID_IWEBBRIDGE_SCROLLBAR                               2
#define DISPID_IWEBBRIDGE_EMBED                                   3
#define DISPID_IWEBBRIDGE_EVENT                                   DISPID_IHTMLWINDOW2_EVENT
#define DISPID_IWEBBRIDGE_READYSTATE                              DISPID_READYSTATE
#define DISPID_IWEBBRIDGE_ABOUTBOX                                DISPID_ABOUTBOX

//    DISPIDs for interface IWBScriptControl

#define DISPID_IWBSCRIPTCONTROL_RAISEEVENT                        1
#define DISPID_IWBSCRIPTCONTROL_BUBBLEEVENT                       2
#define DISPID_IWBSCRIPTCONTROL_SETCONTEXTMENU                    3
#define DISPID_IWBSCRIPTCONTROL_SELECTABLECONTENT                 4
#define DISPID_IWBSCRIPTCONTROL_FROZEN                            5
#define DISPID_IWBSCRIPTCONTROL_SCROLLBAR                         7
#define DISPID_IWBSCRIPTCONTROL_VERSION                           8
#define DISPID_IWBSCRIPTCONTROL_VISIBILITY                        9
#define DISPID_IWBSCRIPTCONTROL_ONVISIBILITYCHANGE                10

//    DISPIDs for event set DWebBridgeEvents

#define DISPID_DWEBBRIDGEEVENTS_ONSCRIPTLETEVENT                  1
#define DISPID_DWEBBRIDGEEVENTS_ONREADYSTATECHANGE                DISPID_HTMLDOCUMENTEVENTS_ONREADYSTATECHANGE
#define DISPID_DWEBBRIDGEEVENTS_ONCLICK                           DISPID_HTMLDOCUMENTEVENTS_ONCLICK
#define DISPID_DWEBBRIDGEEVENTS_ONDBLCLICK                        DISPID_HTMLDOCUMENTEVENTS_ONDBLCLICK
#define DISPID_DWEBBRIDGEEVENTS_ONKEYDOWN                         DISPID_HTMLDOCUMENTEVENTS_ONKEYDOWN
#define DISPID_DWEBBRIDGEEVENTS_ONKEYUP                           DISPID_HTMLDOCUMENTEVENTS_ONKEYUP
#define DISPID_DWEBBRIDGEEVENTS_ONKEYPRESS                        DISPID_HTMLDOCUMENTEVENTS_ONKEYPRESS
#define DISPID_DWEBBRIDGEEVENTS_ONMOUSEDOWN                       DISPID_HTMLDOCUMENTEVENTS_ONMOUSEDOWN
#define DISPID_DWEBBRIDGEEVENTS_ONMOUSEMOVE                       DISPID_HTMLDOCUMENTEVENTS_ONMOUSEMOVE
#define DISPID_DWEBBRIDGEEVENTS_ONMOUSEUP                         DISPID_HTMLDOCUMENTEVENTS_ONMOUSEUP

//    DISPIDs for interface IHTMLEmbedElement

#define DISPID_IHTMLEMBEDELEMENT_HIDDEN                           DISPID_OBJECT+10
#define DISPID_IHTMLEMBEDELEMENT_PALETTE                          DISPID_OBJECT+4
#define DISPID_IHTMLEMBEDELEMENT_PLUGINSPAGE                      DISPID_OBJECT+5
#define DISPID_IHTMLEMBEDELEMENT_SRC                              DISPID_OBJECT+6
#define DISPID_IHTMLEMBEDELEMENT_UNITS                            DISPID_OBJECT+8
#define DISPID_IHTMLEMBEDELEMENT_NAME                             STDPROPID_XOBJ_NAME
#define DISPID_IHTMLEMBEDELEMENT_WIDTH                            STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLEMBEDELEMENT_HEIGHT                           STDPROPID_XOBJ_HEIGHT

//    DISPIDs for interface IHTMLEmbedElement2

#define DISPID_IHTMLEMBEDELEMENT2_IE8_SRC                         DISPID_IE8_EMBED
#define DISPID_IHTMLEMBEDELEMENT2_IE8_PLUGINSPAGE                 DISPID_IE8_EMBED+1

//    DISPIDs for interface IHTMLAreasCollection

#define DISPID_IHTMLAREASCOLLECTION_LENGTH                        DISPID_COLLECTION
#define DISPID_IHTMLAREASCOLLECTION__NEWENUM                      DISPID_NEWENUM
#define DISPID_IHTMLAREASCOLLECTION_ITEM                          DISPID_VALUE
#define DISPID_IHTMLAREASCOLLECTION_TAGS                          DISPID_COLLECTION+2
#define DISPID_IHTMLAREASCOLLECTION_ADD                           DISPID_COLLECTION+3
#define DISPID_IHTMLAREASCOLLECTION_REMOVE                        DISPID_COLLECTION+4

//    DISPIDs for interface IHTMLAreasCollection2

#define DISPID_IHTMLAREASCOLLECTION2_URNS                         DISPID_COLLECTION+5

//    DISPIDs for interface IHTMLAreasCollection3

#define DISPID_IHTMLAREASCOLLECTION3_NAMEDITEM                    DISPID_COLLECTION+6

//    DISPIDs for interface IHTMLAreasCollection4

#define DISPID_IHTMLAREASCOLLECTION4_IE8_LENGTH                   DISPID_IE8_COLLECTION
#define DISPID_IHTMLAREASCOLLECTION4_IE8_ITEM                     DISPID_IE8_COLLECTION+2
#define DISPID_IHTMLAREASCOLLECTION4_IE8_NAMEDITEM                DISPID_IE8_COLLECTION+3

//    DISPIDs for interface IHTMLMapElement

#define DISPID_IHTMLMAPELEMENT_AREAS                              DISPID_MAP+2
#define DISPID_IHTMLMAPELEMENT_NAME                               STDPROPID_XOBJ_NAME

//    DISPIDs for interface IHTMLAreaElement

#define DISPID_IHTMLAREAELEMENT_SHAPE                             DISPID_AREA+1
#define DISPID_IHTMLAREAELEMENT_COORDS                            DISPID_AREA+2
#define DISPID_IHTMLAREAELEMENT_HREF                              DISPID_VALUE
#define DISPID_IHTMLAREAELEMENT_TARGET                            DISPID_AREA+4
#define DISPID_IHTMLAREAELEMENT_ALT                               DISPID_AREA+5
#define DISPID_IHTMLAREAELEMENT_NOHREF                            DISPID_AREA+6
#define DISPID_IHTMLAREAELEMENT_HOST                              DISPID_AREA+7
#define DISPID_IHTMLAREAELEMENT_HOSTNAME                          DISPID_AREA+8
#define DISPID_IHTMLAREAELEMENT_PATHNAME                          DISPID_AREA+9
#define DISPID_IHTMLAREAELEMENT_PORT                              DISPID_AREA+10
#define DISPID_IHTMLAREAELEMENT_PROTOCOL                          DISPID_AREA+11
#define DISPID_IHTMLAREAELEMENT_SEARCH                            DISPID_AREA+12
#define DISPID_IHTMLAREAELEMENT_HASH                              DISPID_AREA+13
#define DISPID_IHTMLAREAELEMENT_ONBLUR                            DISPID_EVPROP_ONBLUR
#define DISPID_IHTMLAREAELEMENT_ONFOCUS                           DISPID_EVPROP_ONFOCUS
#define DISPID_IHTMLAREAELEMENT_TABINDEX                          STDPROPID_XOBJ_TABINDEX
#define DISPID_IHTMLAREAELEMENT_FOCUS                             DISPID_SITE+0
#define DISPID_IHTMLAREAELEMENT_BLUR                              DISPID_SITE+2

//    DISPIDs for interface IHTMLAreaElement2

#define DISPID_IHTMLAREAELEMENT2_IE8_SHAPE                        DISPID_IE8_AREA+1
#define DISPID_IHTMLAREAELEMENT2_IE8_COORDS                       DISPID_IE8_AREA+2
#define DISPID_IHTMLAREAELEMENT2_IE8_HREF                         DISPID_IE8_AREA+3

//    DISPIDs for interface IHTMLTableCaption

#define DISPID_IHTMLTABLECAPTION_ALIGN                            STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLTABLECAPTION_VALIGN                           DISPID_A_TABLEVALIGN

//    DISPIDs for interface IHTMLCommentElement

#define DISPID_IHTMLCOMMENTELEMENT_TEXT                           DISPID_COMMENTPDL+1
#define DISPID_IHTMLCOMMENTELEMENT_ATOMIC                         DISPID_COMMENTPDL+2

//    DISPIDs for interface IHTMLCommentElement2

#define DISPID_IHTMLCOMMENTELEMENT2_DATA                          DISPID_COMMENTPDL+3
#define DISPID_IHTMLCOMMENTELEMENT2_LENGTH                        DISPID_COMMENTPDL+4
#define DISPID_IHTMLCOMMENTELEMENT2_SUBSTRINGDATA                 DISPID_COMMENTPDL+5
#define DISPID_IHTMLCOMMENTELEMENT2_APPENDDATA                    DISPID_COMMENTPDL+6
#define DISPID_IHTMLCOMMENTELEMENT2_INSERTDATA                    DISPID_COMMENTPDL+7
#define DISPID_IHTMLCOMMENTELEMENT2_DELETEDATA                    DISPID_COMMENTPDL+8
#define DISPID_IHTMLCOMMENTELEMENT2_REPLACEDATA                   DISPID_COMMENTPDL+9

//    DISPIDs for interface IHTMLPhraseElement2

#define DISPID_IHTMLPHRASEELEMENT2_CITE                           DISPID_PHRASE+1
#define DISPID_IHTMLPHRASEELEMENT2_DATETIME                       DISPID_PHRASE+2

//    DISPIDs for interface IHTMLPhraseElement3

#define DISPID_IHTMLPHRASEELEMENT3_IE8_CITE                       DISPID_IE8_MOD

//    DISPIDs for interface IHTMLTable

#define DISPID_IHTMLTABLE_COLS                                    DISPID_TABLE+1
#define DISPID_IHTMLTABLE_BORDER                                  DISPID_TABLE+2
#define DISPID_IHTMLTABLE_FRAME                                   DISPID_TABLE+4
#define DISPID_IHTMLTABLE_RULES                                   DISPID_TABLE+3
#define DISPID_IHTMLTABLE_CELLSPACING                             DISPID_TABLE+5
#define DISPID_IHTMLTABLE_CELLPADDING                             DISPID_TABLE+6
#define DISPID_IHTMLTABLE_BACKGROUND                              DISPID_A_BACKGROUNDIMAGE
#define DISPID_IHTMLTABLE_BGCOLOR                                 DISPID_BACKCOLOR
#define DISPID_IHTMLTABLE_BORDERCOLOR                             DISPID_A_TABLEBORDERCOLOR
#define DISPID_IHTMLTABLE_BORDERCOLORLIGHT                        DISPID_A_TABLEBORDERCOLORLIGHT
#define DISPID_IHTMLTABLE_BORDERCOLORDARK                         DISPID_A_TABLEBORDERCOLORDARK
#define DISPID_IHTMLTABLE_ALIGN                                   STDPROPID_XOBJ_CONTROLALIGN
#define DISPID_IHTMLTABLE_REFRESH                                 DISPID_TABLE+15
#define DISPID_IHTMLTABLE_ROWS                                    DISPID_TABLE+16
#define DISPID_IHTMLTABLE_WIDTH                                   STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLTABLE_HEIGHT                                  STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLTABLE_DATAPAGESIZE                            DISPID_TABLE+17
#define DISPID_IHTMLTABLE_NEXTPAGE                                DISPID_TABLE+18
#define DISPID_IHTMLTABLE_PREVIOUSPAGE                            DISPID_TABLE+19
#define DISPID_IHTMLTABLE_THEAD                                   DISPID_TABLE+20
#define DISPID_IHTMLTABLE_TFOOT                                   DISPID_TABLE+21
#define DISPID_IHTMLTABLE_TBODIES                                 DISPID_TABLE+24
#define DISPID_IHTMLTABLE_CAPTION                                 DISPID_TABLE+25
#define DISPID_IHTMLTABLE_CREATETHEAD                             DISPID_TABLE+26
#define DISPID_IHTMLTABLE_DELETETHEAD                             DISPID_TABLE+27
#define DISPID_IHTMLTABLE_CREATETFOOT                             DISPID_TABLE+28
#define DISPID_IHTMLTABLE_DELETETFOOT                             DISPID_TABLE+29
#define DISPID_IHTMLTABLE_CREATECAPTION                           DISPID_TABLE+30
#define DISPID_IHTMLTABLE_DELETECAPTION                           DISPID_TABLE+31
#define DISPID_IHTMLTABLE_INSERTROW                               DISPID_TABLE+32
#define DISPID_IHTMLTABLE_DELETEROW                               DISPID_TABLE+33
#define DISPID_IHTMLTABLE_READYSTATE                              DISPID_A_READYSTATE
#define DISPID_IHTMLTABLE_ONREADYSTATECHANGE                      DISPID_EVPROP_ONREADYSTATECHANGE

//    DISPIDs for interface IHTMLTable2

#define DISPID_IHTMLTABLE2_FIRSTPAGE                              DISPID_TABLE+35
#define DISPID_IHTMLTABLE2_LASTPAGE                               DISPID_TABLE+36
#define DISPID_IHTMLTABLE2_CELLS                                  DISPID_TABLE+37
#define DISPID_IHTMLTABLE2_MOVEROW                                DISPID_TABLE+38

//    DISPIDs for interface IHTMLTable3

#define DISPID_IHTMLTABLE3_SUMMARY                                DISPID_TABLE+39

//    DISPIDs for interface IHTMLTableCol

#define DISPID_IHTMLTABLECOL_SPAN                                 DISPID_TABLECOL+1
#define DISPID_IHTMLTABLECOL_WIDTH                                STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLTABLECOL_ALIGN                                STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLTABLECOL_VALIGN                               DISPID_A_TABLEVALIGN

//    DISPIDs for interface IHTMLTableCol2

#define DISPID_IHTMLTABLECOL2_CH                                  DISPID_TABLECOL+2
#define DISPID_IHTMLTABLECOL2_CHOFF                               DISPID_TABLECOL+3

//    DISPIDs for interface IHTMLTableSection

#define DISPID_IHTMLTABLESECTION_ALIGN                            STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLTABLESECTION_VALIGN                           DISPID_A_TABLEVALIGN
#define DISPID_IHTMLTABLESECTION_BGCOLOR                          DISPID_BACKCOLOR
#define DISPID_IHTMLTABLESECTION_ROWS                             DISPID_TABLESECTION
#define DISPID_IHTMLTABLESECTION_INSERTROW                        DISPID_TABLESECTION+1
#define DISPID_IHTMLTABLESECTION_DELETEROW                        DISPID_TABLESECTION+2

//    DISPIDs for interface IHTMLTableSection2

#define DISPID_IHTMLTABLESECTION2_MOVEROW                         DISPID_TABLESECTION+3

//    DISPIDs for interface IHTMLTableSection3

#define DISPID_IHTMLTABLESECTION3_CH                              DISPID_TABLESECTION+4
#define DISPID_IHTMLTABLESECTION3_CHOFF                           DISPID_TABLESECTION+5

//    DISPIDs for interface IHTMLTableRow

#define DISPID_IHTMLTABLEROW_ALIGN                                STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLTABLEROW_VALIGN                               DISPID_A_TABLEVALIGN
#define DISPID_IHTMLTABLEROW_BGCOLOR                              DISPID_BACKCOLOR
#define DISPID_IHTMLTABLEROW_BORDERCOLOR                          DISPID_A_TABLEBORDERCOLOR
#define DISPID_IHTMLTABLEROW_BORDERCOLORLIGHT                     DISPID_A_TABLEBORDERCOLORLIGHT
#define DISPID_IHTMLTABLEROW_BORDERCOLORDARK                      DISPID_A_TABLEBORDERCOLORDARK
#define DISPID_IHTMLTABLEROW_ROWINDEX                             DISPID_TABLEROW
#define DISPID_IHTMLTABLEROW_SECTIONROWINDEX                      DISPID_TABLEROW+1
#define DISPID_IHTMLTABLEROW_CELLS                                DISPID_TABLEROW+2
#define DISPID_IHTMLTABLEROW_INSERTCELL                           DISPID_TABLEROW+3
#define DISPID_IHTMLTABLEROW_DELETECELL                           DISPID_TABLEROW+4

//    DISPIDs for interface IHTMLTableRow2

#define DISPID_IHTMLTABLEROW2_HEIGHT                              STDPROPID_XOBJ_HEIGHT

//    DISPIDs for interface IHTMLTableRow3

#define DISPID_IHTMLTABLEROW3_CH                                  DISPID_TABLEROW+9
#define DISPID_IHTMLTABLEROW3_CHOFF                               DISPID_TABLEROW+10

//    DISPIDs for interface IHTMLTableRowMetrics

#define DISPID_IHTMLTABLEROWMETRICS_CLIENTHEIGHT                  DISPID_SITE+19
#define DISPID_IHTMLTABLEROWMETRICS_CLIENTWIDTH                   DISPID_SITE+20
#define DISPID_IHTMLTABLEROWMETRICS_CLIENTTOP                     DISPID_SITE+21
#define DISPID_IHTMLTABLEROWMETRICS_CLIENTLEFT                    DISPID_SITE+22

//    DISPIDs for interface IHTMLTableCell

#define DISPID_IHTMLTABLECELL_ROWSPAN                             DISPID_TABLECELL+1
#define DISPID_IHTMLTABLECELL_COLSPAN                             DISPID_TABLECELL+2
#define DISPID_IHTMLTABLECELL_ALIGN                               STDPROPID_XOBJ_BLOCKALIGN
#define DISPID_IHTMLTABLECELL_VALIGN                              DISPID_A_TABLEVALIGN
#define DISPID_IHTMLTABLECELL_BGCOLOR                             DISPID_BACKCOLOR
#define DISPID_IHTMLTABLECELL_NOWRAP                              DISPID_A_NOWRAP
#define DISPID_IHTMLTABLECELL_BACKGROUND                          DISPID_A_BACKGROUNDIMAGE
#define DISPID_IHTMLTABLECELL_BORDERCOLOR                         DISPID_A_TABLEBORDERCOLOR
#define DISPID_IHTMLTABLECELL_BORDERCOLORLIGHT                    DISPID_A_TABLEBORDERCOLORLIGHT
#define DISPID_IHTMLTABLECELL_BORDERCOLORDARK                     DISPID_A_TABLEBORDERCOLORDARK
#define DISPID_IHTMLTABLECELL_WIDTH                               STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLTABLECELL_HEIGHT                              STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLTABLECELL_CELLINDEX                           DISPID_TABLECELL+3

//    DISPIDs for interface IHTMLTableCell2

#define DISPID_IHTMLTABLECELL2_ABBR                               DISPID_TABLECELL+4
#define DISPID_IHTMLTABLECELL2_AXIS                               DISPID_TABLECELL+5
#define DISPID_IHTMLTABLECELL2_CH                                 DISPID_TABLECELL+6
#define DISPID_IHTMLTABLECELL2_CHOFF                              DISPID_TABLECELL+7
#define DISPID_IHTMLTABLECELL2_HEADERS                            DISPID_TABLECELL+8
#define DISPID_IHTMLTABLECELL2_SCOPE                              DISPID_TABLECELL+9

//    DISPIDs for interface IHTMLScriptElement

#define DISPID_IHTMLSCRIPTELEMENT_SRC                             DISPID_SCRIPT+1
#define DISPID_IHTMLSCRIPTELEMENT_HTMLFOR                         DISPID_SCRIPT+4
#define DISPID_IHTMLSCRIPTELEMENT_EVENT                           DISPID_SCRIPT+5
#define DISPID_IHTMLSCRIPTELEMENT_TEXT                            DISPID_SCRIPT+6
#define DISPID_IHTMLSCRIPTELEMENT_DEFER                           DISPID_SCRIPT+7
#define DISPID_IHTMLSCRIPTELEMENT_READYSTATE                      DISPID_A_READYSTATE
#define DISPID_IHTMLSCRIPTELEMENT_ONERROR                         DISPID_EVPROP_ONERROR
#define DISPID_IHTMLSCRIPTELEMENT_TYPE                            DISPID_SCRIPT+9

//    DISPIDs for interface IHTMLScriptElement2

#define DISPID_IHTMLSCRIPTELEMENT2_CHARSET                        DISPID_SCRIPT+10

//    DISPIDs for interface IHTMLScriptElement3

#define DISPID_IHTMLSCRIPTELEMENT3_IE8_SRC                        DISPID_IE8_SCRIPT

//    DISPIDs for event set HTMLScriptEvents2

#define DISPID_HTMLSCRIPTEVENTS2_ONERROR                          DISPID_EVMETH_ONERROR

//    DISPIDs for event set HTMLScriptEvents

#define DISPID_HTMLSCRIPTEVENTS_ONERROR                           DISPID_EVMETH_ONERROR

//    DISPIDs for interface IHTMLObjectElement

#define DISPID_IHTMLOBJECTELEMENT_OBJECT                          DISPID_OBJECT+1
#define DISPID_IHTMLOBJECTELEMENT_CLASSID                         DISPID_OBJECT+2
#define DISPID_IHTMLOBJECTELEMENT_DATA                            DISPID_OBJECT+3
#define DISPID_IHTMLOBJECTELEMENT_RECORDSET                       DISPID_OBJECT+5
#define DISPID_IHTMLOBJECTELEMENT_ALIGN                           STDPROPID_XOBJ_CONTROLALIGN
#define DISPID_IHTMLOBJECTELEMENT_NAME                            STDPROPID_XOBJ_NAME
#define DISPID_IHTMLOBJECTELEMENT_CODEBASE                        DISPID_OBJECT+6
#define DISPID_IHTMLOBJECTELEMENT_CODETYPE                        DISPID_OBJECT+7
#define DISPID_IHTMLOBJECTELEMENT_CODE                            DISPID_OBJECT+8
#define DISPID_IHTMLOBJECTELEMENT_BASEHREF                        STDPROPID_XOBJ_BASEHREF
#define DISPID_IHTMLOBJECTELEMENT_TYPE                            DISPID_OBJECT+9
#define DISPID_IHTMLOBJECTELEMENT_FORM                            DISPID_SITE+4
#define DISPID_IHTMLOBJECTELEMENT_WIDTH                           STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLOBJECTELEMENT_HEIGHT                          STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLOBJECTELEMENT_READYSTATE                      DISPID_OBJECT+10
#define DISPID_IHTMLOBJECTELEMENT_ONREADYSTATECHANGE              DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLOBJECTELEMENT_ONERROR                         DISPID_EVPROP_ONERROR
#define DISPID_IHTMLOBJECTELEMENT_ALTHTML                         DISPID_OBJECT+11
#define DISPID_IHTMLOBJECTELEMENT_VSPACE                          DISPID_OBJECT+12
#define DISPID_IHTMLOBJECTELEMENT_HSPACE                          DISPID_OBJECT+13

//    DISPIDs for interface IHTMLObjectElement2

#define DISPID_IHTMLOBJECTELEMENT2_NAMEDRECORDSET                 DISPID_OBJECT+14
#define DISPID_IHTMLOBJECTELEMENT2_CLASSID                        DISPID_OBJECT+2
#define DISPID_IHTMLOBJECTELEMENT2_DATA                           DISPID_OBJECT+3

//    DISPIDs for interface IHTMLObjectElement3

#define DISPID_IHTMLOBJECTELEMENT3_ARCHIVE                        DISPID_OBJECT+15
#define DISPID_IHTMLOBJECTELEMENT3_ALT                            DISPID_OBJECT+16
#define DISPID_IHTMLOBJECTELEMENT3_DECLARE                        DISPID_OBJECT+17
#define DISPID_IHTMLOBJECTELEMENT3_STANDBY                        DISPID_OBJECT+18
#define DISPID_IHTMLOBJECTELEMENT3_BORDER                         DISPID_OBJECT+19
#define DISPID_IHTMLOBJECTELEMENT3_USEMAP                         DISPID_OBJECT+20

//    DISPIDs for interface IHTMLObjectElement4

#define DISPID_IHTMLOBJECTELEMENT4_CONTENTDOCUMENT                DISPID_IE8_OBJECT
#define DISPID_IHTMLOBJECTELEMENT4_IE8_CODEBASE                   DISPID_IE8_OBJECT+1
#define DISPID_IHTMLOBJECTELEMENT4_IE8_DATA                       DISPID_IE8_OBJECT+2

//    DISPIDs for interface IHTMLParamElement

#define DISPID_IHTMLPARAMELEMENT_NAME                             DISPID_PARAM+1
#define DISPID_IHTMLPARAMELEMENT_VALUE                            DISPID_PARAM+2
#define DISPID_IHTMLPARAMELEMENT_TYPE                             DISPID_PARAM+3
#define DISPID_IHTMLPARAMELEMENT_VALUETYPE                        DISPID_PARAM+4

//    DISPIDs for interface IHTMLParamElement2

#define DISPID_IHTMLPARAMELEMENT2_NAME                            DISPID_PARAM+1
#define DISPID_IHTMLPARAMELEMENT2_TYPE                            DISPID_PARAM+3
#define DISPID_IHTMLPARAMELEMENT2_VALUE                           DISPID_PARAM+2
#define DISPID_IHTMLPARAMELEMENT2_IE8_VALUETYPE                   DISPID_IE8_PARAM

//    DISPIDs for event set HTMLObjectElementEvents2

#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONBEFOREUPDATE            DISPID_EVMETH_ONBEFOREUPDATE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONAFTERUPDATE             DISPID_EVMETH_ONAFTERUPDATE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONERRORUPDATE             DISPID_EVMETH_ONERRORUPDATE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONROWEXIT                 DISPID_EVMETH_ONROWEXIT
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONROWENTER                DISPID_EVMETH_ONROWENTER
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONDATASETCHANGED          DISPID_EVMETH_ONDATASETCHANGED
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONDATAAVAILABLE           DISPID_EVMETH_ONDATAAVAILABLE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONDATASETCOMPLETE         DISPID_EVMETH_ONDATASETCOMPLETE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONERROR                   DISPID_XOBJ_BASE+19
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONROWSDELETE              DISPID_EVMETH_ONROWSDELETE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONROWSINSERTED            DISPID_EVMETH_ONROWSINSERTED
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONCELLCHANGE              DISPID_EVMETH_ONCELLCHANGE
#define DISPID_HTMLOBJECTELEMENTEVENTS2_ONREADYSTATECHANGE        DISPID_XOBJ_BASE+20

//    DISPIDs for event set HTMLObjectElementEvents

#define DISPID_HTMLOBJECTELEMENTEVENTS_ONBEFOREUPDATE             DISPID_EVMETH_ONBEFOREUPDATE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONAFTERUPDATE              DISPID_EVMETH_ONAFTERUPDATE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONERRORUPDATE              DISPID_EVMETH_ONERRORUPDATE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONROWEXIT                  DISPID_EVMETH_ONROWEXIT
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONROWENTER                 DISPID_EVMETH_ONROWENTER
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONDATASETCHANGED           DISPID_EVMETH_ONDATASETCHANGED
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONDATAAVAILABLE            DISPID_EVMETH_ONDATAAVAILABLE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONDATASETCOMPLETE          DISPID_EVMETH_ONDATASETCOMPLETE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONERROR                    DISPID_XOBJ_BASE+19
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONROWSDELETE               DISPID_EVMETH_ONROWSDELETE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONROWSINSERTED             DISPID_EVMETH_ONROWSINSERTED
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONCELLCHANGE               DISPID_EVMETH_ONCELLCHANGE
#define DISPID_HTMLOBJECTELEMENTEVENTS_ONREADYSTATECHANGE         DISPID_XOBJ_BASE+20

//    DISPIDs for interface IHTMLFrameBase

#define DISPID_IHTMLFRAMEBASE_SRC                                 DISPID_FRAMESITE+0
#define DISPID_IHTMLFRAMEBASE_NAME                                STDPROPID_XOBJ_NAME
#define DISPID_IHTMLFRAMEBASE_BORDER                              DISPID_FRAMESITE+2
#define DISPID_IHTMLFRAMEBASE_FRAMEBORDER                         DISPID_FRAMESITE+3
#define DISPID_IHTMLFRAMEBASE_FRAMESPACING                        DISPID_FRAMESITE+4
#define DISPID_IHTMLFRAMEBASE_MARGINWIDTH                         DISPID_FRAMESITE+5
#define DISPID_IHTMLFRAMEBASE_MARGINHEIGHT                        DISPID_FRAMESITE+6
#define DISPID_IHTMLFRAMEBASE_NORESIZE                            DISPID_FRAMESITE+7
#define DISPID_IHTMLFRAMEBASE_SCROLLING                           DISPID_FRAMESITE+8

//    DISPIDs for interface IHTMLFrameBase2

#define DISPID_IHTMLFRAMEBASE2_CONTENTWINDOW                      DISPID_FRAMESITE+9
#define DISPID_IHTMLFRAMEBASE2_ONLOAD                             DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLFRAMEBASE2_ONREADYSTATECHANGE                 DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLFRAMEBASE2_READYSTATE                         DISPID_A_READYSTATE
#define DISPID_IHTMLFRAMEBASE2_ALLOWTRANSPARENCY                  DISPID_A_ALLOWTRANSPARENCY

//    DISPIDs for interface IHTMLFrameBase3

#define DISPID_IHTMLFRAMEBASE3_LONGDESC                           DISPID_FRAMESITE+10

//    DISPIDs for event set HTMLFrameSiteEvents2

#define DISPID_HTMLFRAMESITEEVENTS2_ONLOAD                        DISPID_EVMETH_ONLOAD

//    DISPIDs for event set HTMLFrameSiteEvents

#define DISPID_HTMLFRAMESITEEVENTS_ONLOAD                         DISPID_EVMETH_ONLOAD

//    DISPIDs for interface IHTMLFrameElement

#define DISPID_IHTMLFRAMEELEMENT_BORDERCOLOR                      DISPID_FRAME+1

//    DISPIDs for interface IHTMLFrameElement2

#define DISPID_IHTMLFRAMEELEMENT2_HEIGHT                          STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLFRAMEELEMENT2_WIDTH                           STDPROPID_XOBJ_WIDTH

//    DISPIDs for interface IHTMLFrameElement3

#define DISPID_IHTMLFRAMEELEMENT3_CONTENTDOCUMENT                 DISPID_IE8_FRAME
#define DISPID_IHTMLFRAMEELEMENT3_IE8_SRC                         DISPID_IE8_FRAME+1
#define DISPID_IHTMLFRAMEELEMENT3_IE8_LONGDESC                    DISPID_IE8_FRAME+2
#define DISPID_IHTMLFRAMEELEMENT3_IE8_FRAMEBORDER                 DISPID_IE8_FRAME+3

//    DISPIDs for interface IHTMLIFrameElement

#define DISPID_IHTMLIFRAMEELEMENT_VSPACE                          DISPID_IFRAME+1
#define DISPID_IHTMLIFRAMEELEMENT_HSPACE                          DISPID_IFRAME+2
#define DISPID_IHTMLIFRAMEELEMENT_ALIGN                           STDPROPID_XOBJ_CONTROLALIGN

//    DISPIDs for interface IHTMLIFrameElement2

#define DISPID_IHTMLIFRAMEELEMENT2_HEIGHT                         STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLIFRAMEELEMENT2_WIDTH                          STDPROPID_XOBJ_WIDTH

//    DISPIDs for interface IHTMLIFrameElement3

#define DISPID_IHTMLIFRAMEELEMENT3_CONTENTDOCUMENT                DISPID_IE8_IFRAME
#define DISPID_IHTMLIFRAMEELEMENT3_IE8_SRC                        DISPID_IE8_IFRAME+1
#define DISPID_IHTMLIFRAMEELEMENT3_IE8_LONGDESC                   DISPID_IE8_IFRAME+2
#define DISPID_IHTMLIFRAMEELEMENT3_IE8_FRAMEBORDER                DISPID_IE8_IFRAME+3

//    DISPIDs for interface IHTMLDivPosition

#define DISPID_IHTMLDIVPOSITION_ALIGN                             STDPROPID_XOBJ_CONTROLALIGN

//    DISPIDs for interface IHTMLFieldSetElement

#define DISPID_IHTMLFIELDSETELEMENT_ALIGN                         STDPROPID_XOBJ_CONTROLALIGN

//    DISPIDs for interface IHTMLFieldSetElement2

#define DISPID_IHTMLFIELDSETELEMENT2_FORM                         DISPID_SITE+4

//    DISPIDs for interface IHTMLLegendElement

#define DISPID_IHTMLLEGENDELEMENT_ALIGN                           STDPROPID_XOBJ_CONTROLALIGN

//    DISPIDs for interface IHTMLLegendElement2

#define DISPID_IHTMLLEGENDELEMENT2_FORM                           DISPID_SITE+4

//    DISPIDs for interface IHTMLSpanFlow

#define DISPID_IHTMLSPANFLOW_ALIGN                                STDPROPID_XOBJ_CONTROLALIGN

//    DISPIDs for interface IHTMLFrameSetElement

#define DISPID_IHTMLFRAMESETELEMENT_ROWS                          DISPID_FRAMESET
#define DISPID_IHTMLFRAMESETELEMENT_COLS                          DISPID_FRAMESET+1
#define DISPID_IHTMLFRAMESETELEMENT_BORDER                        DISPID_FRAMESET+2
#define DISPID_IHTMLFRAMESETELEMENT_BORDERCOLOR                   DISPID_FRAMESET+3
#define DISPID_IHTMLFRAMESETELEMENT_FRAMEBORDER                   DISPID_FRAMESET+4
#define DISPID_IHTMLFRAMESETELEMENT_FRAMESPACING                  DISPID_FRAMESET+5
#define DISPID_IHTMLFRAMESETELEMENT_NAME                          STDPROPID_XOBJ_NAME
#define DISPID_IHTMLFRAMESETELEMENT_ONLOAD                        DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLFRAMESETELEMENT_ONUNLOAD                      DISPID_EVPROP_ONUNLOAD
#define DISPID_IHTMLFRAMESETELEMENT_ONBEFOREUNLOAD                DISPID_EVPROP_ONBEFOREUNLOAD

//    DISPIDs for interface IHTMLFrameSetElement2

#define DISPID_IHTMLFRAMESETELEMENT2_ONBEFOREPRINT                DISPID_EVPROP_ONBEFOREPRINT
#define DISPID_IHTMLFRAMESETELEMENT2_ONAFTERPRINT                 DISPID_EVPROP_ONAFTERPRINT

//    DISPIDs for interface IHTMLBGsound

#define DISPID_IHTMLBGSOUND_SRC                                   DISPID_BGSOUND+1
#define DISPID_IHTMLBGSOUND_LOOP                                  DISPID_BGSOUND+2
#define DISPID_IHTMLBGSOUND_VOLUME                                DISPID_BGSOUND+3
#define DISPID_IHTMLBGSOUND_BALANCE                               DISPID_BGSOUND+4

//    DISPIDs for interface IHTMLFontNamesCollection

#define DISPID_IHTMLFONTNAMESCOLLECTION_LENGTH                    DISPID_OPTIONS_COL+1
#define DISPID_IHTMLFONTNAMESCOLLECTION__NEWENUM                  DISPID_NEWENUM
#define DISPID_IHTMLFONTNAMESCOLLECTION_ITEM                      DISPID_VALUE

//    DISPIDs for interface IHTMLFontSizesCollection

#define DISPID_IHTMLFONTSIZESCOLLECTION_LENGTH                    DISPID_OPTIONS_COL+2
#define DISPID_IHTMLFONTSIZESCOLLECTION__NEWENUM                  DISPID_NEWENUM
#define DISPID_IHTMLFONTSIZESCOLLECTION_FORFONT                   DISPID_OPTIONS_COL+3
#define DISPID_IHTMLFONTSIZESCOLLECTION_ITEM                      DISPID_VALUE

//    DISPIDs for interface IHTMLOptionsHolder

#define DISPID_IHTMLOPTIONSHOLDER_DOCUMENT                        DISPID_OPTIONS_COL+3
#define DISPID_IHTMLOPTIONSHOLDER_FONTS                           DISPID_OPTIONS_COL+4
#define DISPID_IHTMLOPTIONSHOLDER_EXECARG                         DISPID_OPTIONS_COL+5
#define DISPID_IHTMLOPTIONSHOLDER_ERRORLINE                       DISPID_OPTIONS_COL+6
#define DISPID_IHTMLOPTIONSHOLDER_ERRORCHARACTER                  DISPID_OPTIONS_COL+7
#define DISPID_IHTMLOPTIONSHOLDER_ERRORCODE                       DISPID_OPTIONS_COL+8
#define DISPID_IHTMLOPTIONSHOLDER_ERRORMESSAGE                    DISPID_OPTIONS_COL+9
#define DISPID_IHTMLOPTIONSHOLDER_ERRORDEBUG                      DISPID_OPTIONS_COL+10
#define DISPID_IHTMLOPTIONSHOLDER_UNSECUREDWINDOWOFDOCUMENT       DISPID_OPTIONS_COL+11
#define DISPID_IHTMLOPTIONSHOLDER_FINDTEXT                        DISPID_OPTIONS_COL+12
#define DISPID_IHTMLOPTIONSHOLDER_ANYTHINGAFTERFRAMESET           DISPID_OPTIONS_COL+13
#define DISPID_IHTMLOPTIONSHOLDER_SIZES                           DISPID_OPTIONS_COL+14
#define DISPID_IHTMLOPTIONSHOLDER_OPENFILEDLG                     DISPID_OPTIONS_COL+15
#define DISPID_IHTMLOPTIONSHOLDER_SAVEFILEDLG                     DISPID_OPTIONS_COL+16
#define DISPID_IHTMLOPTIONSHOLDER_CHOOSECOLORDLG                  DISPID_OPTIONS_COL+17
#define DISPID_IHTMLOPTIONSHOLDER_SHOWSECURITYINFO                DISPID_OPTIONS_COL+18
#define DISPID_IHTMLOPTIONSHOLDER_ISAPARTMENTMODEL                DISPID_OPTIONS_COL+19
#define DISPID_IHTMLOPTIONSHOLDER_GETCHARSET                      DISPID_OPTIONS_COL+20
#define DISPID_IHTMLOPTIONSHOLDER_SECURECONNECTIONINFO            DISPID_OPTIONS_COL+21

//    DISPIDs for interface IHTMLStyleElement

#define DISPID_IHTMLSTYLEELEMENT_TYPE                             DISPID_STYLEELEMENT+2
#define DISPID_IHTMLSTYLEELEMENT_READYSTATE                       DISPID_A_READYSTATE
#define DISPID_IHTMLSTYLEELEMENT_ONREADYSTATECHANGE               DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLSTYLEELEMENT_ONLOAD                           DISPID_EVPROP_ONLOAD
#define DISPID_IHTMLSTYLEELEMENT_ONERROR                          DISPID_EVPROP_ONERROR
#define DISPID_IHTMLSTYLEELEMENT_STYLESHEET                       DISPID_STYLEELEMENT+4
#define DISPID_IHTMLSTYLEELEMENT_DISABLED                         STDPROPID_XOBJ_DISABLED
#define DISPID_IHTMLSTYLEELEMENT_MEDIA                            DISPID_STYLEELEMENT+6

//    DISPIDs for event set HTMLStyleElementEvents2

#define DISPID_HTMLSTYLEELEMENTEVENTS2_ONLOAD                     DISPID_EVMETH_ONLOAD
#define DISPID_HTMLSTYLEELEMENTEVENTS2_ONERROR                    DISPID_EVMETH_ONERROR

//    DISPIDs for event set HTMLStyleElementEvents

#define DISPID_HTMLSTYLEELEMENTEVENTS_ONLOAD                      DISPID_EVMETH_ONLOAD
#define DISPID_HTMLSTYLEELEMENTEVENTS_ONERROR                     DISPID_EVMETH_ONERROR

//    DISPIDs for interface IHTMLStyleFontFace

#define DISPID_IHTMLSTYLEFONTFACE_FONTSRC                         DISPID_A_FONTFACESRC

//    DISPIDs for interface IHTMLXDomainRequest

#define DISPID_IHTMLXDOMAINREQUEST_RESPONSETEXT                   DISPID_XDOMAINREQUEST+3
#define DISPID_IHTMLXDOMAINREQUEST_TIMEOUT                        DISPID_XDOMAINREQUEST+4
#define DISPID_IHTMLXDOMAINREQUEST_CONTENTTYPE                    DISPID_XDOMAINREQUEST+5
#define DISPID_IHTMLXDOMAINREQUEST_ONPROGRESS                     DISPID_XDOMAINREQUEST+6
#define DISPID_IHTMLXDOMAINREQUEST_ONERROR                        DISPID_XDOMAINREQUEST+7
#define DISPID_IHTMLXDOMAINREQUEST_ONTIMEOUT                      DISPID_XDOMAINREQUEST+8
#define DISPID_IHTMLXDOMAINREQUEST_ONLOAD                         DISPID_XDOMAINREQUEST+9
#define DISPID_IHTMLXDOMAINREQUEST_ABORT                          DISPID_XDOMAINREQUEST+10
#define DISPID_IHTMLXDOMAINREQUEST_OPEN                           DISPID_XDOMAINREQUEST+11
#define DISPID_IHTMLXDOMAINREQUEST_SEND                           DISPID_XDOMAINREQUEST+12

//    DISPIDs for interface IHTMLXDomainRequestFactory

#define DISPID_IHTMLXDOMAINREQUESTFACTORY_CREATE                  DISPID_VALUE

//    DISPIDs for interface IHTMLStorage

#define DISPID_IHTMLSTORAGE_LENGTH                                DISPID_DOMSTORAGE+1
#define DISPID_IHTMLSTORAGE_REMAININGSPACE                        DISPID_DOMSTORAGE+2
#define DISPID_IHTMLSTORAGE_KEY                                   DISPID_DOMSTORAGE+6
#define DISPID_IHTMLSTORAGE_GETITEM                               DISPID_DOMSTORAGE+3
#define DISPID_IHTMLSTORAGE_SETITEM                               DISPID_DOMSTORAGE+4
#define DISPID_IHTMLSTORAGE_REMOVEITEM                            DISPID_DOMSTORAGE+5
#define DISPID_IHTMLSTORAGE_CLEAR                                 DISPID_DOMSTORAGE+7

//    DISPIDs for interface ICSSFilterSite

#define DISPID_ICSSFILTERSITE_GETELEMENT                          
#define DISPID_ICSSFILTERSITE_FIREONFILTERCHANGEEVENT             

//    DISPIDs for interface ICSSFilter

#define DISPID_ICSSFILTER_SETSITE                                 
#define DISPID_ICSSFILTER_ONAMBIENTPROPERTYCHANGE                 

//    DISPIDs for interface ISecureUrlHost

#define DISPID_ISECUREURLHOST_VALIDATESECUREURL                   

//    DISPIDs for interface IMarkupServices

#define DISPID_IMARKUPSERVICES_CREATEMARKUPPOINTER                
#define DISPID_IMARKUPSERVICES_CREATEMARKUPCONTAINER              
#define DISPID_IMARKUPSERVICES_CREATEELEMENT                      
#define DISPID_IMARKUPSERVICES_CLONEELEMENT                       
#define DISPID_IMARKUPSERVICES_INSERTELEMENT                      
#define DISPID_IMARKUPSERVICES_REMOVEELEMENT                      
#define DISPID_IMARKUPSERVICES_REMOVE                             
#define DISPID_IMARKUPSERVICES_COPY                               
#define DISPID_IMARKUPSERVICES_MOVE                               
#define DISPID_IMARKUPSERVICES_INSERTTEXT                         
#define DISPID_IMARKUPSERVICES_PARSESTRING                        
#define DISPID_IMARKUPSERVICES_PARSEGLOBAL                        
#define DISPID_IMARKUPSERVICES_ISSCOPEDELEMENT                    
#define DISPID_IMARKUPSERVICES_GETELEMENTTAGID                    
#define DISPID_IMARKUPSERVICES_GETTAGIDFORNAME                    
#define DISPID_IMARKUPSERVICES_GETNAMEFORTAGID                    
#define DISPID_IMARKUPSERVICES_MOVEPOINTERSTORANGE                
#define DISPID_IMARKUPSERVICES_MOVERANGETOPOINTERS                
#define DISPID_IMARKUPSERVICES_BEGINUNDOUNIT                      
#define DISPID_IMARKUPSERVICES_ENDUNDOUNIT                        

//    DISPIDs for interface IMarkupServices2

#define DISPID_IMARKUPSERVICES2_PARSEGLOBALEX                     
#define DISPID_IMARKUPSERVICES2_VALIDATEELEMENTS                  
#define DISPID_IMARKUPSERVICES2_SAVESEGMENTSTOCLIPBOARD           

//    DISPIDs for interface IMarkupContainer

#define DISPID_IMARKUPCONTAINER_OWNINGDOC                         

//    DISPIDs for interface IMarkupContainer2

#define DISPID_IMARKUPCONTAINER2_CREATECHANGELOG                  
#define DISPID_IMARKUPCONTAINER2_REGISTERFORDIRTYRANGE            
#define DISPID_IMARKUPCONTAINER2_UNREGISTERFORDIRTYRANGE          
#define DISPID_IMARKUPCONTAINER2_GETANDCLEARDIRTYRANGE            
#define DISPID_IMARKUPCONTAINER2_GETVERSIONNUMBER                 
#define DISPID_IMARKUPCONTAINER2_GETMASTERELEMENT                 

//    DISPIDs for interface IHTMLChangePlayback

#define DISPID_IHTMLCHANGEPLAYBACK_EXECCHANGE                     

//    DISPIDs for interface IMarkupPointer

#define DISPID_IMARKUPPOINTER_OWNINGDOC                           
#define DISPID_IMARKUPPOINTER_GRAVITY                             
#define DISPID_IMARKUPPOINTER_SETGRAVITY                          
#define DISPID_IMARKUPPOINTER_CLING                               
#define DISPID_IMARKUPPOINTER_SETCLING                            
#define DISPID_IMARKUPPOINTER_UNPOSITION                          
#define DISPID_IMARKUPPOINTER_ISPOSITIONED                        
#define DISPID_IMARKUPPOINTER_GETCONTAINER                        
#define DISPID_IMARKUPPOINTER_MOVEADJACENTTOELEMENT               
#define DISPID_IMARKUPPOINTER_MOVETOPOINTER                       
#define DISPID_IMARKUPPOINTER_MOVETOCONTAINER                     
#define DISPID_IMARKUPPOINTER_LEFT                                
#define DISPID_IMARKUPPOINTER_RIGHT                               
#define DISPID_IMARKUPPOINTER_CURRENTSCOPE                        
#define DISPID_IMARKUPPOINTER_ISLEFTOF                            
#define DISPID_IMARKUPPOINTER_ISLEFTOFOREQUALTO                   
#define DISPID_IMARKUPPOINTER_ISRIGHTOF                           
#define DISPID_IMARKUPPOINTER_ISRIGHTOFOREQUALTO                  
#define DISPID_IMARKUPPOINTER_ISEQUALTO                           
#define DISPID_IMARKUPPOINTER_MOVEUNIT                            
#define DISPID_IMARKUPPOINTER_FINDTEXT                            

//    DISPIDs for interface IMarkupPointer2

#define DISPID_IMARKUPPOINTER2_ISATWORDBREAK                      
#define DISPID_IMARKUPPOINTER2_GETMARKUPPOSITION                  
#define DISPID_IMARKUPPOINTER2_MOVETOMARKUPPOSITION               
#define DISPID_IMARKUPPOINTER2_MOVEUNITBOUNDED                    
#define DISPID_IMARKUPPOINTER2_ISINSIDEURL                        
#define DISPID_IMARKUPPOINTER2_MOVETOCONTENT                      

//    DISPIDs for interface IMarkupTextFrags

#define DISPID_IMARKUPTEXTFRAGS_GETTEXTFRAGCOUNT                  
#define DISPID_IMARKUPTEXTFRAGS_GETTEXTFRAG                       
#define DISPID_IMARKUPTEXTFRAGS_REMOVETEXTFRAG                    
#define DISPID_IMARKUPTEXTFRAGS_INSERTTEXTFRAG                    
#define DISPID_IMARKUPTEXTFRAGS_FINDTEXTFRAGFROMMARKUPPOINTER     

//    DISPIDs for interface IHTMLChangeLog

#define DISPID_IHTMLCHANGELOG_GETNEXTCHANGE                       

//    DISPIDs for interface IHTMLChangeSink

#define DISPID_IHTMLCHANGESINK_NOTIFY                             

//    DISPIDs for interface IXMLGenericParse

#define DISPID_IXMLGENERICPARSE_SETGENERICPARSE                   

//    DISPIDs for interface IHTMLEditHost

#define DISPID_IHTMLEDITHOST_SNAPRECT                             

//    DISPIDs for interface IHTMLEditHost2

#define DISPID_IHTMLEDITHOST2_PREDRAG                             

//    DISPIDs for interface ISegment

#define DISPID_ISEGMENT_GETPOINTERS                               

//    DISPIDs for interface ISegmentListIterator

#define DISPID_ISEGMENTLISTITERATOR_CURRENT                       
#define DISPID_ISEGMENTLISTITERATOR_FIRST                         
#define DISPID_ISEGMENTLISTITERATOR_ISDONE                        
#define DISPID_ISEGMENTLISTITERATOR_ADVANCE                       

//    DISPIDs for interface ISegmentList

#define DISPID_ISEGMENTLIST_CREATEITERATOR                        
#define DISPID_ISEGMENTLIST_GETTYPE                               
#define DISPID_ISEGMENTLIST_ISEMPTY                               

//    DISPIDs for interface ISequenceNumber

#define DISPID_ISEQUENCENUMBER_GETSEQUENCENUMBER                  

//    DISPIDs for interface IIMEServices

#define DISPID_IIMESERVICES_GETACTIVEIMM                          

//    DISPIDs for interface IHTMLCaret

#define DISPID_IHTMLCARET_MOVECARETTOPOINTER                      
#define DISPID_IHTMLCARET_MOVECARETTOPOINTEREX                    
#define DISPID_IHTMLCARET_MOVEMARKUPPOINTERTOCARET                
#define DISPID_IHTMLCARET_MOVEDISPLAYPOINTERTOCARET               
#define DISPID_IHTMLCARET_ISVISIBLE                               
#define DISPID_IHTMLCARET_SHOW                                    
#define DISPID_IHTMLCARET_HIDE                                    
#define DISPID_IHTMLCARET_INSERTTEXT                              
#define DISPID_IHTMLCARET_SCROLLINTOVIEW                          
#define DISPID_IHTMLCARET_GETLOCATION                             
#define DISPID_IHTMLCARET_GETCARETDIRECTION                       
#define DISPID_IHTMLCARET_SETCARETDIRECTION                       

//    DISPIDs for interface IHighlightRenderingServices

#define DISPID_IHIGHLIGHTRENDERINGSERVICES_ADDSEGMENT             
#define DISPID_IHIGHLIGHTRENDERINGSERVICES_MOVESEGMENTTOPOINTERS  
#define DISPID_IHIGHLIGHTRENDERINGSERVICES_REMOVESEGMENT          

//    DISPIDs for interface ISelectionServicesListener

#define DISPID_ISELECTIONSERVICESLISTENER_BEGINSELECTIONUNDO      
#define DISPID_ISELECTIONSERVICESLISTENER_ENDSELECTIONUNDO        
#define DISPID_ISELECTIONSERVICESLISTENER_ONSELECTEDELEMENTEXIT   
#define DISPID_ISELECTIONSERVICESLISTENER_ONCHANGETYPE            
#define DISPID_ISELECTIONSERVICESLISTENER_GETTYPEDETAIL           

//    DISPIDs for interface ISelectionServices

#define DISPID_ISELECTIONSERVICES_SETSELECTIONTYPE                
#define DISPID_ISELECTIONSERVICES_GETMARKUPCONTAINER              
#define DISPID_ISELECTIONSERVICES_ADDSEGMENT                      
#define DISPID_ISELECTIONSERVICES_ADDELEMENTSEGMENT               
#define DISPID_ISELECTIONSERVICES_REMOVESEGMENT                   
#define DISPID_ISELECTIONSERVICES_GETSELECTIONSERVICESLISTENER    

//    DISPIDs for interface IElementSegment

#define DISPID_IELEMENTSEGMENT_GETELEMENT                         
#define DISPID_IELEMENTSEGMENT_SETPRIMARY                         
#define DISPID_IELEMENTSEGMENT_ISPRIMARY                          

//    DISPIDs for interface IHTMLEditDesigner

#define DISPID_IHTMLEDITDESIGNER_PREHANDLEEVENT                   
#define DISPID_IHTMLEDITDESIGNER_POSTHANDLEEVENT                  
#define DISPID_IHTMLEDITDESIGNER_TRANSLATEACCELERATOR             
#define DISPID_IHTMLEDITDESIGNER_POSTEDITOREVENTNOTIFY            

//    DISPIDs for interface IHTMLEditServices

#define DISPID_IHTMLEDITSERVICES_ADDDESIGNER                      
#define DISPID_IHTMLEDITSERVICES_REMOVEDESIGNER                   
#define DISPID_IHTMLEDITSERVICES_GETSELECTIONSERVICES             
#define DISPID_IHTMLEDITSERVICES_MOVETOSELECTIONANCHOR            
#define DISPID_IHTMLEDITSERVICES_MOVETOSELECTIONEND               
#define DISPID_IHTMLEDITSERVICES_SELECTRANGE                      

//    DISPIDs for interface IHTMLEditServices2

#define DISPID_IHTMLEDITSERVICES2_MOVETOSELECTIONANCHOREX         
#define DISPID_IHTMLEDITSERVICES2_MOVETOSELECTIONENDEX            
#define DISPID_IHTMLEDITSERVICES2_FREEZEVIRTUALCARETPOS           
#define DISPID_IHTMLEDITSERVICES2_UNFREEZEVIRTUALCARETPOS         

//    DISPIDs for interface ILineInfo

#define DISPID_ILINEINFO_X                                        DISPID_ILINEINFO+1
#define DISPID_ILINEINFO_BASELINE                                 DISPID_ILINEINFO+2
#define DISPID_ILINEINFO_TEXTDESCENT                              DISPID_ILINEINFO+3
#define DISPID_ILINEINFO_TEXTHEIGHT                               DISPID_ILINEINFO+4
#define DISPID_ILINEINFO_LINEDIRECTION                            DISPID_ILINEINFO+5

//    DISPIDs for interface IHTMLComputedStyle

#define DISPID_IHTMLCOMPUTEDSTYLE_BOLD                            DISPID_IHTMLCOMPUTEDSTYLE+1
#define DISPID_IHTMLCOMPUTEDSTYLE_ITALIC                          DISPID_IHTMLCOMPUTEDSTYLE+2
#define DISPID_IHTMLCOMPUTEDSTYLE_UNDERLINE                       DISPID_IHTMLCOMPUTEDSTYLE+3
#define DISPID_IHTMLCOMPUTEDSTYLE_OVERLINE                        DISPID_IHTMLCOMPUTEDSTYLE+4
#define DISPID_IHTMLCOMPUTEDSTYLE_STRIKEOUT                       DISPID_IHTMLCOMPUTEDSTYLE+5
#define DISPID_IHTMLCOMPUTEDSTYLE_SUBSCRIPT                       DISPID_IHTMLCOMPUTEDSTYLE+6
#define DISPID_IHTMLCOMPUTEDSTYLE_SUPERSCRIPT                     DISPID_IHTMLCOMPUTEDSTYLE+7
#define DISPID_IHTMLCOMPUTEDSTYLE_EXPLICITFACE                    DISPID_IHTMLCOMPUTEDSTYLE+8
#define DISPID_IHTMLCOMPUTEDSTYLE_FONTWEIGHT                      DISPID_IHTMLCOMPUTEDSTYLE+9
#define DISPID_IHTMLCOMPUTEDSTYLE_FONTSIZE                        DISPID_IHTMLCOMPUTEDSTYLE+10
#define DISPID_IHTMLCOMPUTEDSTYLE_FONTNAME                        DISPID_IHTMLCOMPUTEDSTYLE+11
#define DISPID_IHTMLCOMPUTEDSTYLE_HASBGCOLOR                      DISPID_IHTMLCOMPUTEDSTYLE+12
#define DISPID_IHTMLCOMPUTEDSTYLE_TEXTCOLOR                       DISPID_IHTMLCOMPUTEDSTYLE+13
#define DISPID_IHTMLCOMPUTEDSTYLE_BACKGROUNDCOLOR                 DISPID_IHTMLCOMPUTEDSTYLE+14
#define DISPID_IHTMLCOMPUTEDSTYLE_PREFORMATTED                    DISPID_IHTMLCOMPUTEDSTYLE+15
#define DISPID_IHTMLCOMPUTEDSTYLE_DIRECTION                       DISPID_IHTMLCOMPUTEDSTYLE+16
#define DISPID_IHTMLCOMPUTEDSTYLE_BLOCKDIRECTION                  DISPID_IHTMLCOMPUTEDSTYLE+17
#define DISPID_IHTMLCOMPUTEDSTYLE_OL                              DISPID_IHTMLCOMPUTEDSTYLE+18
#define DISPID_IHTMLCOMPUTEDSTYLE_ISEQUAL                         

//    DISPIDs for interface IDisplayPointer

#define DISPID_IDISPLAYPOINTER_MOVETOPOINT                        
#define DISPID_IDISPLAYPOINTER_MOVEUNIT                           
#define DISPID_IDISPLAYPOINTER_POSITIONMARKUPPOINTER              
#define DISPID_IDISPLAYPOINTER_MOVETOPOINTER                      
#define DISPID_IDISPLAYPOINTER_SETPOINTERGRAVITY                  
#define DISPID_IDISPLAYPOINTER_GETPOINTERGRAVITY                  
#define DISPID_IDISPLAYPOINTER_SETDISPLAYGRAVITY                  
#define DISPID_IDISPLAYPOINTER_GETDISPLAYGRAVITY                  
#define DISPID_IDISPLAYPOINTER_ISPOSITIONED                       
#define DISPID_IDISPLAYPOINTER_UNPOSITION                         
#define DISPID_IDISPLAYPOINTER_ISEQUALTO                          
#define DISPID_IDISPLAYPOINTER_ISLEFTOF                           
#define DISPID_IDISPLAYPOINTER_ISRIGHTOF                          
#define DISPID_IDISPLAYPOINTER_ISATBOL                            
#define DISPID_IDISPLAYPOINTER_MOVETOMARKUPPOINTER                
#define DISPID_IDISPLAYPOINTER_SCROLLINTOVIEW                     
#define DISPID_IDISPLAYPOINTER_GETLINEINFO                        
#define DISPID_IDISPLAYPOINTER_GETFLOWELEMENT                     
#define DISPID_IDISPLAYPOINTER_QUERYBREAKS                        

//    DISPIDs for interface IDisplayServices

#define DISPID_IDISPLAYSERVICES_CREATEDISPLAYPOINTER              
#define DISPID_IDISPLAYSERVICES_TRANSFORMRECT                     
#define DISPID_IDISPLAYSERVICES_TRANSFORMPOINT                    
#define DISPID_IDISPLAYSERVICES_GETCARET                          
#define DISPID_IDISPLAYSERVICES_GETCOMPUTEDSTYLE                  
#define DISPID_IDISPLAYSERVICES_SCROLLRECTINTOVIEW                
#define DISPID_IDISPLAYSERVICES_HASFLOWLAYOUT                     

//    DISPIDs for interface IHtmlDlgSafeHelper

#define DISPID_IHTMLDLGSAFEHELPER_CHOOSECOLORDLG                  1
#define DISPID_IHTMLDLGSAFEHELPER_GETCHARSET                      2
#define DISPID_IHTMLDLGSAFEHELPER_FONTS                           3
#define DISPID_IHTMLDLGSAFEHELPER_BLOCKFORMATS                    4

//    DISPIDs for interface IBlockFormats

#define DISPID_IBLOCKFORMATS__NEWENUM                             DISPID_NEWENUM
#define DISPID_IBLOCKFORMATS_COUNT                                1
#define DISPID_IBLOCKFORMATS_ITEM                                 DISPID_VALUE

//    DISPIDs for interface IFontNames

#define DISPID_IFONTNAMES__NEWENUM                                DISPID_NEWENUM
#define DISPID_IFONTNAMES_COUNT                                   1
#define DISPID_IFONTNAMES_ITEM                                    DISPID_VALUE

//    DISPIDs for interface IHTMLNamespace

#define DISPID_IHTMLNAMESPACE_NAME                                DISPID_NAMESPACE+0
#define DISPID_IHTMLNAMESPACE_URN                                 DISPID_NAMESPACE+1
#define DISPID_IHTMLNAMESPACE_TAGNAMES                            DISPID_NAMESPACE+2
#define DISPID_IHTMLNAMESPACE_READYSTATE                          DISPID_A_READYSTATE
#define DISPID_IHTMLNAMESPACE_ONREADYSTATECHANGE                  DISPID_EVPROP_ONREADYSTATECHANGE
#define DISPID_IHTMLNAMESPACE_DOIMPORT                            DISPID_NAMESPACE+3
#define DISPID_IHTMLNAMESPACE_ATTACHEVENT                         DISPID_HTMLOBJECT+7
#define DISPID_IHTMLNAMESPACE_DETACHEVENT                         DISPID_HTMLOBJECT+8

//    DISPIDs for interface IHTMLNamespaceCollection

#define DISPID_IHTMLNAMESPACECOLLECTION_LENGTH                    DISPID_NAMESPACE_COLLECTION+0
#define DISPID_IHTMLNAMESPACECOLLECTION_ITEM                      DISPID_VALUE
#define DISPID_IHTMLNAMESPACECOLLECTION_ADD                       DISPID_NAMESPACE_COLLECTION+1

//    DISPIDs for event set HTMLNamespaceEvents

#define DISPID_HTMLNAMESPACEEVENTS_ONREADYSTATECHANGE             DISPID_EVMETH_ONREADYSTATECHANGE

//    DISPIDs for interface IHTMLPainter

#define DISPID_IHTMLPAINTER_DRAW                                  
#define DISPID_IHTMLPAINTER_ONRESIZE                              
#define DISPID_IHTMLPAINTER_GETPAINTERINFO                        
#define DISPID_IHTMLPAINTER_HITTESTPOINT                          

//    DISPIDs for interface IHTMLPainterEventInfo

#define DISPID_IHTMLPAINTEREVENTINFO_GETEVENTINFOFLAGS            
#define DISPID_IHTMLPAINTEREVENTINFO_GETEVENTTARGET               
#define DISPID_IHTMLPAINTEREVENTINFO_SETCURSOR                    
#define DISPID_IHTMLPAINTEREVENTINFO_STRINGFROMPARTID             

//    DISPIDs for interface IHTMLPainterOverlay

#define DISPID_IHTMLPAINTEROVERLAY_ONMOVE                         

//    DISPIDs for interface IHTMLPaintSite

#define DISPID_IHTMLPAINTSITE_INVALIDATEPAINTERINFO               
#define DISPID_IHTMLPAINTSITE_INVALIDATERECT                      
#define DISPID_IHTMLPAINTSITE_INVALIDATEREGION                    
#define DISPID_IHTMLPAINTSITE_GETDRAWINFO                         
#define DISPID_IHTMLPAINTSITE_TRANSFORMGLOBALTOLOCAL              
#define DISPID_IHTMLPAINTSITE_TRANSFORMLOCALTOGLOBAL              
#define DISPID_IHTMLPAINTSITE_GETHITTESTCOOKIE                    

//    DISPIDs for interface IHTMLIPrintCollection

#define DISPID_IHTMLIPRINTCOLLECTION_LENGTH                       DISPID_OPTIONS_COL+1
#define DISPID_IHTMLIPRINTCOLLECTION__NEWENUM                     DISPID_NEWENUM
#define DISPID_IHTMLIPRINTCOLLECTION_ITEM                         DISPID_VALUE

//    DISPIDs for interface IEnumPrivacyRecords

#define DISPID_IENUMPRIVACYRECORDS_RESET                          
#define DISPID_IENUMPRIVACYRECORDS_GETSIZE                        
#define DISPID_IENUMPRIVACYRECORDS_GETPRIVACYIMPACTED             
#define DISPID_IENUMPRIVACYRECORDS_NEXT                           

//    DISPIDs for interface IWPCBlockedUrls

#define DISPID_IWPCBLOCKEDURLS_GETCOUNT                           
#define DISPID_IWPCBLOCKEDURLS_GETURL                             

//    DISPIDs for interface IHTMLDOMConstructorCollection

#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_ATTR                 DISPID_WINDOW+8001+DomConstructorAttr
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_BEHAVIORURNSCOLLECTION DISPID_WINDOW+8001+DomConstructorBehaviorUrnsCollection
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_BOOKMARKCOLLECTION   DISPID_WINDOW+8001+DomConstructorBookmarkCollection
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_COMPATIBLEINFO       DISPID_WINDOW+8001+DomConstructorCompatibleInfo
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_COMPATIBLEINFOCOLLECTION DISPID_WINDOW+8001+DomConstructorCompatibleInfoCollection
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_CONTROLRANGECOLLECTION DISPID_WINDOW+8001+DomConstructorControlRangeCollection
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_CSSCURRENTSTYLEDECLARATION DISPID_WINDOW+8001+DomConstructorCSSCurrentStyleDeclaration
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_CSSRULELIST          DISPID_WINDOW+8001+DomConstructorCSSRuleList
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_CSSRULESTYLEDECLARATION DISPID_WINDOW+8001+DomConstructorCSSRuleStyleDeclaration
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_CSSSTYLEDECLARATION  DISPID_WINDOW+8001+DomConstructorCSSStyleDeclaration
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_CSSSTYLERULE         DISPID_WINDOW+8001+DomConstructorCSSStyleRule
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_CSSSTYLESHEET        DISPID_WINDOW+8001+DomConstructorCSSStyleSheet
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_DATATRANSFER         DISPID_WINDOW+8001+DomConstructorDataTransfer
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_DOMIMPLEMENTATION    DISPID_WINDOW+8001+DomConstructorDOMImplementation
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_ELEMENT              DISPID_WINDOW+8001+DomConstructorElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_EVENT                DISPID_WINDOW+8001+DomConstructorEvent
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HISTORY              DISPID_WINDOW+8001+DomConstructorHistory
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTCELEMENTBEHAVIORDEFAULTS DISPID_WINDOW+8001+DomConstructorHTCElementBehaviorDefaults
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLANCHORELEMENT    DISPID_WINDOW+8001+DomConstructorHTMLAnchorElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLAREAELEMENT      DISPID_WINDOW+8001+DomConstructorHTMLAreaElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLAREASCOLLECTION  DISPID_WINDOW+8001+DomConstructorHTMLAreasCollection
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLBASEELEMENT      DISPID_WINDOW+8001+DomConstructorHTMLBaseElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLBASEFONTELEMENT  DISPID_WINDOW+8001+DomConstructorHTMLBaseFontElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLBGSOUNDELEMENT   DISPID_WINDOW+8001+DomConstructorHTMLBGSoundElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLBLOCKELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLBlockElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLBODYELEMENT      DISPID_WINDOW+8001+DomConstructorHTMLBodyElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLBRELEMENT        DISPID_WINDOW+8001+DomConstructorHTMLBRElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLBUTTONELEMENT    DISPID_WINDOW+8001+DomConstructorHTMLButtonElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLCOLLECTION       DISPID_WINDOW+8001+DomConstructorHTMLCollection
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLCOMMENTELEMENT   DISPID_WINDOW+8001+DomConstructorHTMLCommentElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLDDELEMENT        DISPID_WINDOW+8001+DomConstructorHTMLDDElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLDIVELEMENT       DISPID_WINDOW+8001+DomConstructorHTMLDivElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLDOCUMENT         DISPID_WINDOW+8001+DomConstructorHTMLDocument
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLDLISTELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLDListElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLDTELEMENT        DISPID_WINDOW+8001+DomConstructorHTMLDTElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLEMBEDELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLEmbedElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLFIELDSETELEMENT  DISPID_WINDOW+8001+DomConstructorHTMLFieldSetElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLFONTELEMENT      DISPID_WINDOW+8001+DomConstructorHTMLFontElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLFORMELEMENT      DISPID_WINDOW+8001+DomConstructorHTMLFormElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLFRAMEELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLFrameElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLFRAMESETELEMENT  DISPID_WINDOW+8001+DomConstructorHTMLFrameSetElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLGENERICELEMENT   DISPID_WINDOW+8001+DomConstructorHTMLGenericElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLHEADELEMENT      DISPID_WINDOW+8001+DomConstructorHTMLHeadElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLHEADINGELEMENT   DISPID_WINDOW+8001+DomConstructorHTMLHeadingElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLHRELEMENT        DISPID_WINDOW+8001+DomConstructorHTMLHRElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLHTMLELEMENT      DISPID_WINDOW+8001+DomConstructorHTMLHtmlElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLIFRAMEELEMENT    DISPID_WINDOW+8001+DomConstructorHTMLIFrameElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLIMAGEELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLImageElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLINPUTELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLInputElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLISINDEXELEMENT   DISPID_WINDOW+8001+DomConstructorHTMLIsIndexElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLLABELELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLLabelElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLLEGENDELEMENT    DISPID_WINDOW+8001+DomConstructorHTMLLegendElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLLIELEMENT        DISPID_WINDOW+8001+DomConstructorHTMLLIElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLLINKELEMENT      DISPID_WINDOW+8001+DomConstructorHTMLLinkElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLMAPELEMENT       DISPID_WINDOW+8001+DomConstructorHTMLMapElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLMARQUEEELEMENT   DISPID_WINDOW+8001+DomConstructorHTMLMarqueeElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLMETAELEMENT      DISPID_WINDOW+8001+DomConstructorHTMLMetaElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLMODELESSDIALOG   DISPID_WINDOW+8001+DomConstructorHTMLModelessDialog
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLNAMESPACEINFO    DISPID_WINDOW+8001+DomConstructorHTMLNamespaceInfo
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLNAMESPACEINFOCOLLECTION DISPID_WINDOW+8001+DomConstructorHTMLNamespaceInfoCollection
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLNEXTIDELEMENT    DISPID_WINDOW+8001+DomConstructorHTMLNextIdElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLNOSHOWELEMENT    DISPID_WINDOW+8001+DomConstructorHTMLNoShowElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLOBJECTELEMENT    DISPID_WINDOW+8001+DomConstructorHTMLObjectElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLOLISTELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLOListElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLOPTIONELEMENT    DISPID_WINDOW+8001+DomConstructorHTMLOptionElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLPARAGRAPHELEMENT DISPID_WINDOW+8001+DomConstructorHTMLParagraphElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLPARAMELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLParamElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLPHRASEELEMENT    DISPID_WINDOW+8001+DomConstructorHTMLPhraseElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLPLUGINSCOLLECTION DISPID_WINDOW+8001+DomConstructorHTMLPluginsCollection
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLPOPUP            DISPID_WINDOW+8001+DomConstructorHTMLPopup
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLSCRIPTELEMENT    DISPID_WINDOW+8001+DomConstructorHTMLScriptElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLSELECTELEMENT    DISPID_WINDOW+8001+DomConstructorHTMLSelectElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLSPANELEMENT      DISPID_WINDOW+8001+DomConstructorHTMLSpanElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLSTYLEELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLStyleElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLTABLECAPTIONELEMENT DISPID_WINDOW+8001+DomConstructorHTMLTableCaptionElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLTABLECELLELEMENT DISPID_WINDOW+8001+DomConstructorHTMLTableCellElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLTABLECOLELEMENT  DISPID_WINDOW+8001+DomConstructorHTMLTableColElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLTABLEELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLTableElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLTABLEROWELEMENT  DISPID_WINDOW+8001+DomConstructorHTMLTableRowElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLTABLESECTIONELEMENT DISPID_WINDOW+8001+DomConstructorHTMLTableSectionElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLTEXTAREAELEMENT  DISPID_WINDOW+8001+DomConstructorHTMLTextAreaElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLTEXTELEMENT      DISPID_WINDOW+8001+DomConstructorHTMLTextElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLTITLEELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLTitleElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLULISTELEMENT     DISPID_WINDOW+8001+DomConstructorHTMLUListElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_HTMLUNKNOWNELEMENT   DISPID_WINDOW+8001+DomConstructorHTMLUnknownElement
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_IMAGE                DISPID_WINDOW+8001+DomConstructorImage
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_LOCATION             DISPID_WINDOW+8001+DomConstructorLocation
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_NAMEDNODEMAP         DISPID_WINDOW+8001+DomConstructorNamedNodeMap
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_NAVIGATOR            DISPID_WINDOW+8001+DomConstructorNavigator
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_NODELIST             DISPID_WINDOW+8001+DomConstructorNodeList
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_OPTION               DISPID_WINDOW+8001+DomConstructorOption
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_SCREEN               DISPID_WINDOW+8001+DomConstructorScreen
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_SELECTION            DISPID_WINDOW+8001+DomConstructorSelection
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_STATICNODELIST       DISPID_WINDOW+8001+DomConstructorStaticNodeList
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_STORAGE              DISPID_WINDOW+8001+DomConstructorStorage
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_STYLESHEETLIST       DISPID_WINDOW+8001+DomConstructorStyleSheetList
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_STYLESHEETPAGE       DISPID_WINDOW+8001+DomConstructorStyleSheetPage
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_STYLESHEETPAGELIST   DISPID_WINDOW+8001+DomConstructorStyleSheetPageList
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_TEXT                 DISPID_WINDOW+8001+DomConstructorText
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_TEXTRANGE            DISPID_WINDOW+8001+DomConstructorTextRange
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_TEXTRANGECOLLECTION  DISPID_WINDOW+8001+DomConstructorTextRangeCollection
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_TEXTRECTANGLE        DISPID_WINDOW+8001+DomConstructorTextRectangle
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_TEXTRECTANGLELIST    DISPID_WINDOW+8001+DomConstructorTextRectangleList
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_WINDOW               DISPID_WINDOW+8001+DomConstructorWindow
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_XDOMAINREQUEST       DISPID_WINDOW+8001+DomConstructorXDomainRequest
#define DISPID_IHTMLDOMCONSTRUCTORCOLLECTION_XMLHTTPREQUEST       DISPID_WINDOW+8001+DomConstructorXMLHttpRequest

//    DISPIDs for interface IHTMLDialog

#define DISPID_IHTMLDIALOG_DIALOGTOP                              STDPROPID_XOBJ_TOP
#define DISPID_IHTMLDIALOG_DIALOGLEFT                             STDPROPID_XOBJ_LEFT
#define DISPID_IHTMLDIALOG_DIALOGWIDTH                            STDPROPID_XOBJ_WIDTH
#define DISPID_IHTMLDIALOG_DIALOGHEIGHT                           STDPROPID_XOBJ_HEIGHT
#define DISPID_IHTMLDIALOG_DIALOGARGUMENTS                        DISPID_HTMLDLG+0
#define DISPID_IHTMLDIALOG_MENUARGUMENTS                          DISPID_HTMLDLG+13
#define DISPID_IHTMLDIALOG_RETURNVALUE                            DISPID_HTMLDLG+1
#define DISPID_IHTMLDIALOG_CLOSE                                  DISPID_HTMLDLG+11
#define DISPID_IHTMLDIALOG_TOSTRING                               DISPID_HTMLDLG+12

//    DISPIDs for interface IHTMLDialog2

#define DISPID_IHTMLDIALOG2_STATUS                                DISPID_HTMLDLG+14
#define DISPID_IHTMLDIALOG2_RESIZABLE                             DISPID_HTMLDLG+15

//    DISPIDs for interface IHTMLDialog3

#define DISPID_IHTMLDIALOG3_UNADORNED                             DISPID_HTMLDLG+16
#define DISPID_IHTMLDIALOG3_DIALOGHIDE                            DISPID_HTMLDLG+7

//    DISPIDs for interface IHTMLModelessInit

#define DISPID_IHTMLMODELESSINIT_PARAMETERS                       DISPID_HTMLDLG+0
#define DISPID_IHTMLMODELESSINIT_OPTIONSTRING                     DISPID_HTMLDLG+1
#define DISPID_IHTMLMODELESSINIT_MONIKER                          DISPID_HTMLDLG+6
#define DISPID_IHTMLMODELESSINIT_DOCUMENT                         DISPID_HTMLDLG+7

//    DISPIDs for interface IHTMLPopup

#define DISPID_IHTMLPOPUP_SHOW                                    DISPID_HTMLPOPUP+1
#define DISPID_IHTMLPOPUP_HIDE                                    DISPID_HTMLPOPUP+2
#define DISPID_IHTMLPOPUP_DOCUMENT                                DISPID_HTMLPOPUP+3
#define DISPID_IHTMLPOPUP_ISOPEN                                  DISPID_HTMLPOPUP+4

//    DISPIDs for interface IHTMLAppBehavior

#define DISPID_IHTMLAPPBEHAVIOR_APPLICATIONNAME                   DISPID_HTMLAPP+0
#define DISPID_IHTMLAPPBEHAVIOR_VERSION                           DISPID_HTMLAPP+1
#define DISPID_IHTMLAPPBEHAVIOR_ICON                              DISPID_HTMLAPP+2
#define DISPID_IHTMLAPPBEHAVIOR_SINGLEINSTANCE                    DISPID_HTMLAPP+3
#define DISPID_IHTMLAPPBEHAVIOR_MINIMIZEBUTTON                    DISPID_HTMLAPP+5
#define DISPID_IHTMLAPPBEHAVIOR_MAXIMIZEBUTTON                    DISPID_HTMLAPP+6
#define DISPID_IHTMLAPPBEHAVIOR_BORDER                            DISPID_HTMLAPP+7
#define DISPID_IHTMLAPPBEHAVIOR_BORDERSTYLE                       DISPID_HTMLAPP+8
#define DISPID_IHTMLAPPBEHAVIOR_SYSMENU                           DISPID_HTMLAPP+9
#define DISPID_IHTMLAPPBEHAVIOR_CAPTION                           DISPID_HTMLAPP+10
#define DISPID_IHTMLAPPBEHAVIOR_WINDOWSTATE                       DISPID_HTMLAPP+11
#define DISPID_IHTMLAPPBEHAVIOR_SHOWINTASKBAR                     DISPID_HTMLAPP+12
#define DISPID_IHTMLAPPBEHAVIOR_COMMANDLINE                       DISPID_HTMLAPP+13

//    DISPIDs for interface IHTMLAppBehavior2

#define DISPID_IHTMLAPPBEHAVIOR2_CONTEXTMENU                      DISPID_HTMLAPP+14
#define DISPID_IHTMLAPPBEHAVIOR2_INNERBORDER                      DISPID_HTMLAPP+15
#define DISPID_IHTMLAPPBEHAVIOR2_SCROLL                           DISPID_HTMLAPP+16
#define DISPID_IHTMLAPPBEHAVIOR2_SCROLLFLAT                       DISPID_HTMLAPP+17
#define DISPID_IHTMLAPPBEHAVIOR2_SELECTION                        DISPID_HTMLAPP+18

//    DISPIDs for interface IHTMLAppBehavior3

#define DISPID_IHTMLAPPBEHAVIOR3_NAVIGABLE                        DISPID_HTMLAPP+19

//    DISPIDs for interface IHTMLPrivateWindow

#define DISPID_IHTMLPRIVATEWINDOW_SUPERNAVIGATE                   
#define DISPID_IHTMLPRIVATEWINDOW_GETPENDINGURL                   
#define DISPID_IHTMLPRIVATEWINDOW_SETPICSTARGET                   
#define DISPID_IHTMLPRIVATEWINDOW_PICSCOMPLETE                    
#define DISPID_IHTMLPRIVATEWINDOW_FINDWINDOWBYNAME                
#define DISPID_IHTMLPRIVATEWINDOW_GETADDRESSBARURL                

//    DISPIDs for interface IHTMLPrivateWindow2

#define DISPID_IHTMLPRIVATEWINDOW2_NAVIGATEEX                     
#define DISPID_IHTMLPRIVATEWINDOW2_GETINNERWINDOWUNKNOWN          

//    DISPIDs for interface IHTMLPrivateWindow3

#define DISPID_IHTMLPRIVATEWINDOW3_OPENEX                         
#define DISPID_IHTMLPRIVATEWINDOW3_NAVIGATEEX2                    
#define DISPID_IHTMLPRIVATEWINDOW3_GETDOCUMENTTRUSTED             

//    DISPIDs for interface IHTMLPrivateWindow4

#define DISPID_IHTMLPRIVATEWINDOW4_SUPERNAVIGATE2                 
#define DISPID_IHTMLPRIVATEWINDOW4_SUPERNAVIGATE3                 
#define DISPID_IHTMLPRIVATEWINDOW4_GETSCRIPTPROFILER              
#define DISPID_IHTMLPRIVATEWINDOW4_SUPERNAVIGATE2WITHBINDFLAGS    
#define DISPID_IHTMLPRIVATEWINDOW4_ARECLIENTSWAITINGFORUNLOAD     

//    DISPIDs for interface ISubDivisionProvider

#define DISPID_ISUBDIVISIONPROVIDER_GETSUBDIVISIONCOUNT           
#define DISPID_ISUBDIVISIONPROVIDER_GETSUBDIVISIONTABS            
#define DISPID_ISUBDIVISIONPROVIDER_SUBDIVISIONFROMPT             

//    DISPIDs for interface IElementBehaviorUI

#define DISPID_IELEMENTBEHAVIORUI_ONRECEIVEFOCUS                  
#define DISPID_IELEMENTBEHAVIORUI_GETSUBDIVISIONPROVIDER          
#define DISPID_IELEMENTBEHAVIORUI_CANTAKEFOCUS                    

//    DISPIDs for interface IElementAdorner

#define DISPID_IELEMENTADORNER_DRAW                               
#define DISPID_IELEMENTADORNER_HITTESTPOINT                       
#define DISPID_IELEMENTADORNER_GETSIZE                            
#define DISPID_IELEMENTADORNER_GETPOSITION                        
#define DISPID_IELEMENTADORNER_ONPOSITIONSET                      

//    DISPIDs for interface IHTMLEditor

#define DISPID_IHTMLEDITOR_PREHANDLEEVENT                         
#define DISPID_IHTMLEDITOR_POSTHANDLEEVENT                        
#define DISPID_IHTMLEDITOR_TRANSLATEACCELERATOR                   
#define DISPID_IHTMLEDITOR_INITIALIZE                             
#define DISPID_IHTMLEDITOR_NOTIFY                                 
#define DISPID_IHTMLEDITOR_GETCOMMANDTARGET                       
#define DISPID_IHTMLEDITOR_GETELEMENTTOTABFROM                    
#define DISPID_IHTMLEDITOR_ISEDITCONTEXTUIACTIVE                  
#define DISPID_IHTMLEDITOR_TERMINATEIMECOMPOSITION                
#define DISPID_IHTMLEDITOR_ENABLEMODELESS                         

//    DISPIDs for interface IHTMLEditingServices

#define DISPID_IHTMLEDITINGSERVICES_DELETE                        
#define DISPID_IHTMLEDITINGSERVICES_PASTE                         
#define DISPID_IHTMLEDITINGSERVICES_PASTEFROMCLIPBOARD            
#define DISPID_IHTMLEDITINGSERVICES_LAUNDERSPACES                 
#define DISPID_IHTMLEDITINGSERVICES_INSERTSANITIZEDTEXT           
#define DISPID_IHTMLEDITINGSERVICES_URLAUTODETECTCURRENTWORD      
#define DISPID_IHTMLEDITINGSERVICES_URLAUTODETECTRANGE            
#define DISPID_IHTMLEDITINGSERVICES_SHOULDUPDATEANCHORTEXT        
#define DISPID_IHTMLEDITINGSERVICES_ADJUSTPOINTERFORINSERT        
#define DISPID_IHTMLEDITINGSERVICES_FINDSITESELECTABLEELEMENT     
#define DISPID_IHTMLEDITINGSERVICES_ISELEMENTSITESELECTABLE       
#define DISPID_IHTMLEDITINGSERVICES_ISELEMENTUIACTIVATABLE        
#define DISPID_IHTMLEDITINGSERVICES_ISELEMENTATOMIC               
#define DISPID_IHTMLEDITINGSERVICES_POSITIONPOINTERSINMASTER      

//    DISPIDs for interface ISelectionObject2

#define DISPID_ISELECTIONOBJECT2_SELECT                           
#define DISPID_ISELECTIONOBJECT2_ISPOINTERINSELECTION             
#define DISPID_ISELECTIONOBJECT2_EMPTYSELECTION                   
#define DISPID_ISELECTIONOBJECT2_DESTROYSELECTION                 
#define DISPID_ISELECTIONOBJECT2_DESTROYALLSELECTION              

//    DISPIDs for interface ISelectionServicesListener2

#define DISPID_ISELECTIONSERVICESLISTENER2_ONBECOMEPASSIVE        
#define DISPID_ISELECTIONSERVICESLISTENER2_ONREMOVELISTENER       

//    DISPIDs for interface ISelectionServices2

#define DISPID_ISELECTIONSERVICES2_ADDSELECTIONSERVICESLISTENER   
#define DISPID_ISELECTIONSERVICES2_REMOVESELECTIONSERVICESLISTENER 

//    DISPIDs for interface IEditDebugServices

#define DISPID_IEDITDEBUGSERVICES_GETCP                           
#define DISPID_IEDITDEBUGSERVICES_SETDEBUGNAME                    
#define DISPID_IEDITDEBUGSERVICES_SETDISPLAYPOINTERDEBUGNAME      
#define DISPID_IEDITDEBUGSERVICES_DUMPTREE                        
#define DISPID_IEDITDEBUGSERVICES_LINESINELEMENT                  
#define DISPID_IEDITDEBUGSERVICES_FONTSONLINE                     
#define DISPID_IEDITDEBUGSERVICES_GETPIXEL                        
#define DISPID_IEDITDEBUGSERVICES_ISUSINGBCKGRNRECALC             
#define DISPID_IEDITDEBUGSERVICES_ISENCODINGAUTOSELECT            
#define DISPID_IEDITDEBUGSERVICES_ENABLEENCODINGAUTOSELECT        
#define DISPID_IEDITDEBUGSERVICES_ISUSINGTABLEINCRECALC           

//    DISPIDs for interface ILayoutDumper

#define DISPID_ILAYOUTDUMPER_DUMPLAYOUT                           

//    DISPIDs for interface IDisplayTreeDumper

#define DISPID_IDISPLAYTREEDUMPER_DUMPDISPLAYTREE                 

//    DISPIDs for interface IPrivacyServices

#define DISPID_IPRIVACYSERVICES_ADDPRIVACYINFOTOLIST              

//    DISPIDs for interface IHTMLFilterPainter

#define DISPID_IHTMLFILTERPAINTER_INVALIDATERECTUNFILTERED        
#define DISPID_IHTMLFILTERPAINTER_INVALIDATERGNUNFILTERED         
#define DISPID_IHTMLFILTERPAINTER_CHANGEELEMENTVISIBILITY         

//    DISPIDs for interface IHTMLFilterPainter2

#define DISPID_IHTMLFILTERPAINTER2_ISDPIAWARE                     

//    DISPIDs for interface IHTMLFilterPaintSite

#define DISPID_IHTMLFILTERPAINTSITE_DRAWUNFILTERED                
#define DISPID_IHTMLFILTERPAINTSITE_HITTESTPOINTUNFILTERED        
#define DISPID_IHTMLFILTERPAINTSITE_INVALIDATERECTFILTERED        
#define DISPID_IHTMLFILTERPAINTSITE_INVALIDATERGNFILTERED         
#define DISPID_IHTMLFILTERPAINTSITE_CHANGEFILTERVISIBILITY        
#define DISPID_IHTMLFILTERPAINTSITE_ENSUREVIEWFORFILTERSITE       
#define DISPID_IHTMLFILTERPAINTSITE_GETDIRECTDRAW                 
#define DISPID_IHTMLFILTERPAINTSITE_GETFILTERFLAGS                

//    DISPIDs for interface IElementNamespacePrivate

#define DISPID_IELEMENTNAMESPACEPRIVATE_ADDTAGPRIVATE             

//    DISPIDs for interface IMarkupServicesPriv

#define DISPID_IMARKUPSERVICESPRIV_PARSEGLOBALWITHCONTENTTYPE     

//    DISPIDs for interface IHighlightRenderingServicesPriv

#define DISPID_IHIGHLIGHTRENDERINGSERVICESPRIV_REMOVESEGMENTEX    
#define DISPID_IHIGHLIGHTRENDERINGSERVICESPRIV_ADDSEGMENTEX       

//    DISPIDs for interface IDocHostUIHandlerPriv

#define DISPID_IDOCHOSTUIHANDLERPRIV_ONDOCSWITCH                  
#define DISPID_IDOCHOSTUIHANDLERPRIV_ONHASHCHANGE                 

//    DISPIDs for interface IHTMLStyleSheetRulePriv

#define DISPID_IHTMLSTYLESHEETRULEPRIV_GETSPECIFICITY             

//    DISPIDs for interface IElementBehaviorFactory

#define DISPID_IELEMENTBEHAVIORFACTORY_FINDBEHAVIOR               

//    DISPIDs for interface IElementNamespace

#define DISPID_IELEMENTNAMESPACE_ADDTAG                           

//    DISPIDs for interface IElementNamespaceTable

#define DISPID_IELEMENTNAMESPACETABLE_ADDNAMESPACE                

//    DISPIDs for interface IElementNamespaceFactory

#define DISPID_IELEMENTNAMESPACEFACTORY_CREATE                    

//    DISPIDs for interface IElementNamespaceFactory2

#define DISPID_IELEMENTNAMESPACEFACTORY2_CREATEWITHIMPLEMENTATION 

//    DISPIDs for interface IElementNamespaceFactoryCallback

#define DISPID_IELEMENTNAMESPACEFACTORYCALLBACK_RESOLVE           

//    DISPIDs for interface IElementBehavior

#define DISPID_IELEMENTBEHAVIOR_INIT                              
#define DISPID_IELEMENTBEHAVIOR_NOTIFY                            
#define DISPID_IELEMENTBEHAVIOR_DETACH                            

//    DISPIDs for interface IElementBehaviorSite

#define DISPID_IELEMENTBEHAVIORSITE_GETELEMENT                    
#define DISPID_IELEMENTBEHAVIORSITE_REGISTERNOTIFICATION          

//    DISPIDs for interface IElementBehaviorSiteOM

#define DISPID_IELEMENTBEHAVIORSITEOM_REGISTEREVENT               
#define DISPID_IELEMENTBEHAVIORSITEOM_GETEVENTCOOKIE              
#define DISPID_IELEMENTBEHAVIORSITEOM_FIREEVENT                   
#define DISPID_IELEMENTBEHAVIORSITEOM_CREATEEVENTOBJECT           
#define DISPID_IELEMENTBEHAVIORSITEOM_REGISTERNAME                
#define DISPID_IELEMENTBEHAVIORSITEOM_REGISTERURN                 

//    DISPIDs for interface IElementBehaviorSiteOM2

#define DISPID_IELEMENTBEHAVIORSITEOM2_GETDEFAULTS                

//    DISPIDs for interface IElementBehaviorRender

#define DISPID_IELEMENTBEHAVIORRENDER_DRAW                        
#define DISPID_IELEMENTBEHAVIORRENDER_GETRENDERINFO               
#define DISPID_IELEMENTBEHAVIORRENDER_HITTESTPOINT                

//    DISPIDs for interface IElementBehaviorSiteRender

#define DISPID_IELEMENTBEHAVIORSITERENDER_INVALIDATE              
#define DISPID_IELEMENTBEHAVIORSITERENDER_INVALIDATERENDERINFO    
#define DISPID_IELEMENTBEHAVIORSITERENDER_INVALIDATESTYLE         

//    DISPIDs for interface IElementBehaviorCategory

#define DISPID_IELEMENTBEHAVIORCATEGORY_GETCATEGORY               

//    DISPIDs for interface IElementBehaviorSiteCategory

#define DISPID_IELEMENTBEHAVIORSITECATEGORY_GETRELATEDBEHAVIORS   

//    DISPIDs for interface IElementBehaviorSubmit

#define DISPID_IELEMENTBEHAVIORSUBMIT_GETSUBMITINFO               
#define DISPID_IELEMENTBEHAVIORSUBMIT_RESET                       

//    DISPIDs for interface IElementBehaviorFocus

#define DISPID_IELEMENTBEHAVIORFOCUS_GETFOCUSRECT                 

//    DISPIDs for interface IElementBehaviorLayout

#define DISPID_IELEMENTBEHAVIORLAYOUT_GETSIZE                     
#define DISPID_IELEMENTBEHAVIORLAYOUT_GETLAYOUTINFO               
#define DISPID_IELEMENTBEHAVIORLAYOUT_GETPOSITION                 
#define DISPID_IELEMENTBEHAVIORLAYOUT_MAPSIZE                     

//    DISPIDs for interface IElementBehaviorLayout2

#define DISPID_IELEMENTBEHAVIORLAYOUT2_GETTEXTDESCENT             

//    DISPIDs for interface IElementBehaviorSiteLayout

#define DISPID_IELEMENTBEHAVIORSITELAYOUT_INVALIDATELAYOUTINFO    
#define DISPID_IELEMENTBEHAVIORSITELAYOUT_INVALIDATESIZE          
#define DISPID_IELEMENTBEHAVIORSITELAYOUT_GETMEDIARESOLUTION      

//    DISPIDs for interface IElementBehaviorSiteLayout2

#define DISPID_IELEMENTBEHAVIORSITELAYOUT2_GETFONTINFO            

//    DISPIDs for interface IHostBehaviorInit

#define DISPID_IHOSTBEHAVIORINIT_POPULATENAMESPACETABLE
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\msiehost.h ===
//+---------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
//  ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
//  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
//  PARTICULAR PURPOSE.
//
//  File:       msiehost.h
//
//  Contents:   Definitions for Web Browser OC host (not automatable)
//
//=--------------------------------------------------------------------------=

// Definitions for IOleCommandTarget IDs


#ifndef _MSIEHOST_H
#define _MSIEHOST_H

EXTERN_C const GUID CGID_InternetExplorer;

// CGID_InternetExplorer CMDID definitions
#define IECMDID_CLEAR_AUTOCOMPLETE_FOR_FORMS        0
#define IECMDID_SETID_AUTOCOMPLETE_FOR_FORMS        1

#define IECMDID_BEFORENAVIGATE_GETSHELLBROWSE     2
#define IECMDID_BEFORENAVIGATE_DOEXTERNALBROWSE   3
#define IECMDID_BEFORENAVIGATE_GETIDLIST          4

//  Takes a VARIANT of type VT_BOOL for pvarargIn
//  to set it.
#define IECMDID_SET_INVOKE_DEFAULT_BROWSER_ON_NEW_WINDOW    5

//  Sets a VARIANT of type VT_BOOL for pvarargOut
#define IECMDID_GET_INVOKE_DEFAULT_BROWSER_ON_NEW_WINDOW    6

// Values for first parameter of IEID_CLEAR_AUTOCOMPLETE_FOR_FORMS
#define IECMDID_ARG_CLEAR_FORMS_ALL                 0
#define IECMDID_ARG_CLEAR_FORMS_ALL_BUT_PASSWORDS   1
#define IECMDID_ARG_CLEAR_FORMS_PASSWORDS_ONLY      2

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\msinkaut15_i.c ===
/* this ALWAYS GENERATED file contains the IIDs and CLSIDs */

/* link this file in with the server and any clients */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for msinkaut15.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


#ifdef __cplusplus
extern "C"{
#endif 


#include <rpc.h>
#include <rpcndr.h>

#ifdef _MIDL_USE_GUIDDEF_

#ifndef INITGUID
#define INITGUID
#include <guiddef.h>
#undef INITGUID
#else
#include <guiddef.h>
#endif

#define MIDL_DEFINE_GUID(type,name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) \
        DEFINE_GUID(name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)

#else // !_MIDL_USE_GUIDDEF_

#ifndef __IID_DEFINED__
#define __IID_DEFINED__

typedef struct _IID
{
    unsigned long x;
    unsigned short s1;
    unsigned short s2;
    unsigned char  c[8];
} IID;

#endif // __IID_DEFINED__

#ifndef CLSID_DEFINED
#define CLSID_DEFINED
typedef IID CLSID;
#endif // CLSID_DEFINED

#define MIDL_DEFINE_GUID(type,name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) \
        const type name = {l,w1,w2,{b1,b2,b3,b4,b5,b6,b7,b8}}

#endif !_MIDL_USE_GUIDDEF_

MIDL_DEFINE_GUID(IID, LIBID_MSINKDIVLib,0x56D04F5D,0x964F,0x4dbf,0x8D,0x23,0xB9,0x79,0x89,0xE5,0x34,0x18);


MIDL_DEFINE_GUID(IID, IID_IInkDivider,0x5DE00405,0xF9A4,0x4651,0xB0,0xC5,0xC3,0x17,0xDE,0xFD,0x58,0xB9);


MIDL_DEFINE_GUID(IID, IID_IInkDivisionResult,0x2DBEC0A7,0x74C7,0x4B38,0x81,0xEB,0xAA,0x8E,0xF0,0xC2,0x49,0x00);


MIDL_DEFINE_GUID(IID, IID_IInkDivisionUnit,0x85AEE342,0x48B0,0x4244,0x9D,0xD5,0x1E,0xD4,0x35,0x41,0x0F,0xAB);


MIDL_DEFINE_GUID(IID, IID_IInkDivisionUnits,0x1BB5DDC2,0x31CC,0x4135,0xAB,0x82,0x2C,0x66,0xC9,0xF0,0x0C,0x41);


MIDL_DEFINE_GUID(CLSID, CLSID_InkDivider,0x8854F6A0,0x4683,0x4AE7,0x91,0x91,0x75,0x2F,0xE6,0x46,0x12,0xC3);

#undef MIDL_DEFINE_GUID

#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\msimcntl.h ===
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 5.03.0279 */
/* at Thu Dec 14 06:28:44 2000
 */
/* Compiler settings for P:\INSTMSG\src\msimcli\msimcntl\msimcntl.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32 (32b run), ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __msimcntl_h__
#define __msimcntl_h__

/* Forward Declarations */ 

#ifndef ___IUseIMBase_FWD_DEFINED__
#define ___IUseIMBase_FWD_DEFINED__
typedef interface _IUseIMBase _IUseIMBase;
#endif 	/* ___IUseIMBase_FWD_DEFINED__ */


#ifndef __IMSIMContactView_FWD_DEFINED__
#define __IMSIMContactView_FWD_DEFINED__
typedef interface IMSIMContactView IMSIMContactView;
#endif 	/* __IMSIMContactView_FWD_DEFINED__ */


#ifndef __DMSIMContactViewEvents_FWD_DEFINED__
#define __DMSIMContactViewEvents_FWD_DEFINED__
typedef interface DMSIMContactViewEvents DMSIMContactViewEvents;
#endif 	/* __DMSIMContactViewEvents_FWD_DEFINED__ */


#ifndef __IMSIMMessageView_FWD_DEFINED__
#define __IMSIMMessageView_FWD_DEFINED__
typedef interface IMSIMMessageView IMSIMMessageView;
#endif 	/* __IMSIMMessageView_FWD_DEFINED__ */


#ifndef __DMSIMMessageViewEvents_FWD_DEFINED__
#define __DMSIMMessageViewEvents_FWD_DEFINED__
typedef interface DMSIMMessageViewEvents DMSIMMessageViewEvents;
#endif 	/* __DMSIMMessageViewEvents_FWD_DEFINED__ */


#ifndef __MSIMContactView_FWD_DEFINED__
#define __MSIMContactView_FWD_DEFINED__

#ifdef __cplusplus
typedef class MSIMContactView MSIMContactView;
#else
typedef struct MSIMContactView MSIMContactView;
#endif /* __cplusplus */

#endif 	/* __MSIMContactView_FWD_DEFINED__ */


#ifndef __MSIMMessageView_FWD_DEFINED__
#define __MSIMMessageView_FWD_DEFINED__

#ifdef __cplusplus
typedef class MSIMMessageView MSIMMessageView;
#else
typedef struct MSIMMessageView MSIMMessageView;
#endif /* __cplusplus */

#endif 	/* __MSIMMessageView_FWD_DEFINED__ */


#ifndef __IIMSafeContact_FWD_DEFINED__
#define __IIMSafeContact_FWD_DEFINED__
typedef interface IIMSafeContact IIMSafeContact;
#endif 	/* __IIMSafeContact_FWD_DEFINED__ */


#ifndef __IMSIMContactList_FWD_DEFINED__
#define __IMSIMContactList_FWD_DEFINED__
typedef interface IMSIMContactList IMSIMContactList;
#endif 	/* __IMSIMContactList_FWD_DEFINED__ */


#ifndef __DIMContactListEvents_FWD_DEFINED__
#define __DIMContactListEvents_FWD_DEFINED__
typedef interface DIMContactListEvents DIMContactListEvents;
#endif 	/* __DIMContactListEvents_FWD_DEFINED__ */


#ifndef __MSIMContactList_FWD_DEFINED__
#define __MSIMContactList_FWD_DEFINED__

#ifdef __cplusplus
typedef class MSIMContactList MSIMContactList;
#else
typedef struct MSIMContactList MSIMContactList;
#endif /* __cplusplus */

#endif 	/* __MSIMContactList_FWD_DEFINED__ */


#ifndef __IMSafeContact_FWD_DEFINED__
#define __IMSafeContact_FWD_DEFINED__

#ifdef __cplusplus
typedef class IMSafeContact IMSafeContact;
#else
typedef struct IMSafeContact IMSafeContact;
#endif /* __cplusplus */

#endif 	/* __IMSafeContact_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "SIMPDATA.h"

#ifdef __cplusplus
extern "C"{
#endif 

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_msimcntl_0000 */
/* [local] */ 

#define DMSIMCONTACTVIEWEVENTS_OnReady              0xD0
#define DMSIMCONTACTVIEWEVENTS_OnLogon              0xD1
#define DMSIMCONTACTVIEWEVENTS_OnLogoff             0xD2
#define DMSIMCONTACTVIEWEVENTS_OnLaunchMessageUI    0xD3
#define DMSIMCONTACTVIEWEVENTS_OnMenuRequest        0xD6
#define DMSIMCONTACTVIEWEVENTS_OnMenuSelect         0xD7
#define DMSIMCONTACTVIEWEVENTS_OnAddResult          0xD8
#define DMSIMCONTACTVIEWEVENTS_OnRemoveResult       0xD9
#define DMSIMCONTACTVIEWEVENTS_OnSelect             0xDA
#define DMSIMCONTACTVIEWEVENTS_OnShutdown           0xDB
#define DMSIMCONTACTVIEWEVENTS_OnEMailContact       0xDC
#define DMSIMCONTACTVIEWEVENTS_OnAddContactUI       0xDD
#define DMSIMCONTACTVIEWEVENTS_OnLocalStateChange   0xDE
#define DMSIMCONTACTVIEWEVENTS_OnExtentsChange      0xDF
#define DMSIMMESSAGEVIEWEVENTS_OnReady              0xD0
#define DMSIMMESSAGEVIEWEVENTS_OnLogon              0xD1
#define DMSIMMESSAGEVIEWEVENTS_OnLogoff             0xD2
#define DMSIMMESSAGEVIEWEVENTS_OnLaunchMessageUI    0xD3
#define DMSIMMESSAGEVIEWEVENTS_OnNewMessage         0xD6
#define DMSIMMESSAGEVIEWEVENTS_OnAddResult          0xD7
#define DMSIMMESSAGEVIEWEVENTS_OnRemoveResult       0xD8
#define DMSIMMESSAGEVIEWEVENTS_OnNewSession         0xD9
#define DMSIMMESSAGEVIEWEVENTS_OnSessionEnd         0xDA
#define DMSIMMESSAGEVIEWEVENTS_OnShutdown           0xDB
#define DMSIMMESSAGEVIEWEVENTS_OnLocalStateChange   0xDC
#define DMSIMCONTACTLISTEVENTS_OnReady              0xD0
#define DMSIMCONTACTLISTEVENTS_OnLogon              0xD1
#define DMSIMCONTACTLISTEVENTS_OnLogoff             0xD2
#define DMSIMCONTACTLISTEVENTS_OnAddResult          0xD3
#define DMSIMCONTACTLISTEVENTS_OnRemoveResult       0xD4
#define DMSIMCONTACTLISTEVENTS_OnShutdown           0xD5
#define DMSIMCONTACTLISTEVENTS_OnChangeContact      0xD6
#define DMSIMCONTACTLISTEVENTS_OnLocalStateChange   0xD7


extern RPC_IF_HANDLE __MIDL_itf_msimcntl_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msimcntl_0000_v0_0_s_ifspec;


#ifndef __MSIMCNTLLib_LIBRARY_DEFINED__
#define __MSIMCNTLLib_LIBRARY_DEFINED__

/* library MSIMCNTLLib */
/* [helpstring][version][uuid] */ 

typedef /* [public] */ 
enum __MIDL___MIDL_itf_msimcntl_0000_0001
    {	MSIM_PROVIDER_FIRST	= 0,
	MSIM_PROVIDER_ANY	= 0,
	MSIM_PROVIDER_EXCHANGE_HOST	= 1,
	MSIM_PROVIDER_LAST	= 1,
	MSIM_PROVIDER_NONE	= 0xffff
    }	MSIM_PROVIDER;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_msimcntl_0000_0002
    {	MSIM_MSG_UI_SESSION	= 0,
	MSIM_MSG_UI_NETMEETING	= 1
    }	MSIM_MSG_UI;


EXTERN_C const IID LIBID_MSIMCNTLLib;

#ifndef ___IUseIMBase_INTERFACE_DEFINED__
#define ___IUseIMBase_INTERFACE_DEFINED__

/* interface _IUseIMBase */
/* [object][hidden][helpstring][uuid][dual] */ 


EXTERN_C const IID IID__IUseIMBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9D921DA0-DFE1-45AE-9EB6-E50A2770A57E")
    _IUseIMBase : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetService( 
            /* [in] */ IDispatch __RPC_FAR *pService,
            /* [defaultvalue][in] */ IDispatch __RPC_FAR *pApp = 0) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Service( 
            /* [retval][out] */ short __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Service( 
            /* [in] */ short newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HasService( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AutoLogon( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AutoLogon( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LoggedOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Logon( 
            /* [defaultvalue][full][in] */ BSTR bstrAddress = L"",
            /* [defaultvalue][full][in] */ BSTR bstrName = L"",
            /* [defaultvalue][full][in] */ BSTR bstrPassword = L"",
            /* [defaultvalue][full][in] */ BSTR bstrDomain = L"") = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Logoff( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetLocalState( 
            /* [out] */ VARIANT __RPC_FAR *pvarState,
            /* [optional][out] */ VARIANT __RPC_FAR *pvarDescription,
            /* [optional][out] */ VARIANT __RPC_FAR *pvarData) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetLocalState( 
            /* [in] */ long lState,
            /* [optional][in] */ VARIANT varDescription,
            /* [optional][in] */ VARIANT varData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _IUseIMBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            _IUseIMBase __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            _IUseIMBase __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            _IUseIMBase __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            _IUseIMBase __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            _IUseIMBase __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            _IUseIMBase __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            _IUseIMBase __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetService )( 
            _IUseIMBase __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *pService,
            /* [defaultvalue][in] */ IDispatch __RPC_FAR *pApp);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Service )( 
            _IUseIMBase __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Service )( 
            _IUseIMBase __RPC_FAR * This,
            /* [in] */ short newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasService )( 
            _IUseIMBase __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AutoLogon )( 
            _IUseIMBase __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AutoLogon )( 
            _IUseIMBase __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LoggedOn )( 
            _IUseIMBase __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Logon )( 
            _IUseIMBase __RPC_FAR * This,
            /* [defaultvalue][full][in] */ BSTR bstrAddress,
            /* [defaultvalue][full][in] */ BSTR bstrName,
            /* [defaultvalue][full][in] */ BSTR bstrPassword,
            /* [defaultvalue][full][in] */ BSTR bstrDomain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Logoff )( 
            _IUseIMBase __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLocalState )( 
            _IUseIMBase __RPC_FAR * This,
            /* [out] */ VARIANT __RPC_FAR *pvarState,
            /* [optional][out] */ VARIANT __RPC_FAR *pvarDescription,
            /* [optional][out] */ VARIANT __RPC_FAR *pvarData);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLocalState )( 
            _IUseIMBase __RPC_FAR * This,
            /* [in] */ long lState,
            /* [optional][in] */ VARIANT varDescription,
            /* [optional][in] */ VARIANT varData);
        
        END_INTERFACE
    } _IUseIMBaseVtbl;

    interface _IUseIMBase
    {
        CONST_VTBL struct _IUseIMBaseVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IUseIMBase_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define _IUseIMBase_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define _IUseIMBase_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define _IUseIMBase_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define _IUseIMBase_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define _IUseIMBase_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define _IUseIMBase_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define _IUseIMBase_SetService(This,pService,pApp)	\
    (This)->lpVtbl -> SetService(This,pService,pApp)

#define _IUseIMBase_get_Service(This,pVal)	\
    (This)->lpVtbl -> get_Service(This,pVal)

#define _IUseIMBase_put_Service(This,newVal)	\
    (This)->lpVtbl -> put_Service(This,newVal)

#define _IUseIMBase_get_HasService(This,pVal)	\
    (This)->lpVtbl -> get_HasService(This,pVal)

#define _IUseIMBase_get_AutoLogon(This,pVal)	\
    (This)->lpVtbl -> get_AutoLogon(This,pVal)

#define _IUseIMBase_put_AutoLogon(This,newVal)	\
    (This)->lpVtbl -> put_AutoLogon(This,newVal)

#define _IUseIMBase_get_LoggedOn(This,pVal)	\
    (This)->lpVtbl -> get_LoggedOn(This,pVal)

#define _IUseIMBase_Logon(This,bstrAddress,bstrName,bstrPassword,bstrDomain)	\
    (This)->lpVtbl -> Logon(This,bstrAddress,bstrName,bstrPassword,bstrDomain)

#define _IUseIMBase_Logoff(This)	\
    (This)->lpVtbl -> Logoff(This)

#define _IUseIMBase_GetLocalState(This,pvarState,pvarDescription,pvarData)	\
    (This)->lpVtbl -> GetLocalState(This,pvarState,pvarDescription,pvarData)

#define _IUseIMBase_SetLocalState(This,lState,varDescription,varData)	\
    (This)->lpVtbl -> SetLocalState(This,lState,varDescription,varData)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE _IUseIMBase_SetService_Proxy( 
    _IUseIMBase __RPC_FAR * This,
    /* [in] */ IDispatch __RPC_FAR *pService,
    /* [defaultvalue][in] */ IDispatch __RPC_FAR *pApp);


void __RPC_STUB _IUseIMBase_SetService_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE _IUseIMBase_get_Service_Proxy( 
    _IUseIMBase __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *pVal);


void __RPC_STUB _IUseIMBase_get_Service_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE _IUseIMBase_put_Service_Proxy( 
    _IUseIMBase __RPC_FAR * This,
    /* [in] */ short newVal);


void __RPC_STUB _IUseIMBase_put_Service_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE _IUseIMBase_get_HasService_Proxy( 
    _IUseIMBase __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB _IUseIMBase_get_HasService_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE _IUseIMBase_get_AutoLogon_Proxy( 
    _IUseIMBase __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB _IUseIMBase_get_AutoLogon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE _IUseIMBase_put_AutoLogon_Proxy( 
    _IUseIMBase __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB _IUseIMBase_put_AutoLogon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE _IUseIMBase_get_LoggedOn_Proxy( 
    _IUseIMBase __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB _IUseIMBase_get_LoggedOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE _IUseIMBase_Logon_Proxy( 
    _IUseIMBase __RPC_FAR * This,
    /* [defaultvalue][full][in] */ BSTR bstrAddress,
    /* [defaultvalue][full][in] */ BSTR bstrName,
    /* [defaultvalue][full][in] */ BSTR bstrPassword,
    /* [defaultvalue][full][in] */ BSTR bstrDomain);


void __RPC_STUB _IUseIMBase_Logon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE _IUseIMBase_Logoff_Proxy( 
    _IUseIMBase __RPC_FAR * This);


void __RPC_STUB _IUseIMBase_Logoff_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE _IUseIMBase_GetLocalState_Proxy( 
    _IUseIMBase __RPC_FAR * This,
    /* [out] */ VARIANT __RPC_FAR *pvarState,
    /* [optional][out] */ VARIANT __RPC_FAR *pvarDescription,
    /* [optional][out] */ VARIANT __RPC_FAR *pvarData);


void __RPC_STUB _IUseIMBase_GetLocalState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE _IUseIMBase_SetLocalState_Proxy( 
    _IUseIMBase __RPC_FAR * This,
    /* [in] */ long lState,
    /* [optional][in] */ VARIANT varDescription,
    /* [optional][in] */ VARIANT varData);


void __RPC_STUB _IUseIMBase_SetLocalState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* ___IUseIMBase_INTERFACE_DEFINED__ */


#ifndef __IMSIMContactView_INTERFACE_DEFINED__
#define __IMSIMContactView_INTERFACE_DEFINED__

/* interface IMSIMContactView */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMSIMContactView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("415ADE21-A15F-4C06-8F5D-DD5E0A9EA230")
    IMSIMContactView : public _IUseIMBase
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ VARIANT vUser) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT vUser) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_List( 
            /* [retval][out] */ VARIANT __RPC_FAR *pvarList) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_List( 
            /* [in] */ VARIANT varList) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddMenuItem( 
            /* [in] */ BSTR bstrItem,
            /* [defaultvalue][in] */ long lPosition,
            /* [retval][out] */ long __RPC_FAR *plCommand) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedMenuOptions( 
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSelected( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EMailSelected( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InviteSelected( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE BlockSelected( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE UnblockSelected( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExtentWidth( 
            /* [retval][out] */ long __RPC_FAR *pX) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExtentHeight( 
            /* [retval][out] */ long __RPC_FAR *pY) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HotTracking( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HotTracking( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AllowCollapse( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AllowCollapse( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShowSelectAlways( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShowSelectAlways( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OnlineRootLabel( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrLabel) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_OnlineRootLabel( 
            /* [in] */ BSTR bstrLabel) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OfflineRootLabel( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrLabel) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_OfflineRootLabel( 
            /* [in] */ BSTR bstrLabel) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Window( 
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShowLogonButton( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShowLogonButton( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OnlineCollapsed( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_OnlineCollapsed( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OfflineCollapsed( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_OfflineCollapsed( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Group( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Group( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FilterOffline( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FilterOffline( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShowIcons( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShowIcons( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AcceptMessages( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AcceptMessages( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMSIMContactViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMSIMContactView __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMSIMContactView __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMSIMContactView __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetService )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *pService,
            /* [defaultvalue][in] */ IDispatch __RPC_FAR *pApp);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Service )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Service )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ short newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasService )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AutoLogon )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AutoLogon )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LoggedOn )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Logon )( 
            IMSIMContactView __RPC_FAR * This,
            /* [defaultvalue][full][in] */ BSTR bstrAddress,
            /* [defaultvalue][full][in] */ BSTR bstrName,
            /* [defaultvalue][full][in] */ BSTR bstrPassword,
            /* [defaultvalue][full][in] */ BSTR bstrDomain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Logoff )( 
            IMSIMContactView __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLocalState )( 
            IMSIMContactView __RPC_FAR * This,
            /* [out] */ VARIANT __RPC_FAR *pvarState,
            /* [optional][out] */ VARIANT __RPC_FAR *pvarDescription,
            /* [optional][out] */ VARIANT __RPC_FAR *pvarData);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLocalState )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ long lState,
            /* [optional][in] */ VARIANT varDescription,
            /* [optional][in] */ VARIANT varData);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT vUser);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT vUser);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_List )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarList);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_List )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT varList);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddMenuItem )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ BSTR bstrItem,
            /* [defaultvalue][in] */ long lPosition,
            /* [retval][out] */ long __RPC_FAR *plCommand);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SelectedMenuOptions )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IMSelected )( 
            IMSIMContactView __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EMailSelected )( 
            IMSIMContactView __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InviteSelected )( 
            IMSIMContactView __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BlockSelected )( 
            IMSIMContactView __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UnblockSelected )( 
            IMSIMContactView __RPC_FAR * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtentWidth )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pX);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtentHeight )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pY);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HotTracking )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HotTracking )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AllowCollapse )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AllowCollapse )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ShowSelectAlways )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ShowSelectAlways )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OnlineRootLabel )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrLabel);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_OnlineRootLabel )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ BSTR bstrLabel);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OfflineRootLabel )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrLabel);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_OfflineRootLabel )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ BSTR bstrLabel);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Window )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ShowLogonButton )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ShowLogonButton )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OnlineCollapsed )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_OnlineCollapsed )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OfflineCollapsed )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_OfflineCollapsed )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Group )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Group )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FilterOffline )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FilterOffline )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ShowIcons )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ShowIcons )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AcceptMessages )( 
            IMSIMContactView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AcceptMessages )( 
            IMSIMContactView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IMSIMContactViewVtbl;

    interface IMSIMContactView
    {
        CONST_VTBL struct IMSIMContactViewVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMSIMContactView_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMSIMContactView_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMSIMContactView_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMSIMContactView_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMSIMContactView_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMSIMContactView_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMSIMContactView_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMSIMContactView_SetService(This,pService,pApp)	\
    (This)->lpVtbl -> SetService(This,pService,pApp)

#define IMSIMContactView_get_Service(This,pVal)	\
    (This)->lpVtbl -> get_Service(This,pVal)

#define IMSIMContactView_put_Service(This,newVal)	\
    (This)->lpVtbl -> put_Service(This,newVal)

#define IMSIMContactView_get_HasService(This,pVal)	\
    (This)->lpVtbl -> get_HasService(This,pVal)

#define IMSIMContactView_get_AutoLogon(This,pVal)	\
    (This)->lpVtbl -> get_AutoLogon(This,pVal)

#define IMSIMContactView_put_AutoLogon(This,newVal)	\
    (This)->lpVtbl -> put_AutoLogon(This,newVal)

#define IMSIMContactView_get_LoggedOn(This,pVal)	\
    (This)->lpVtbl -> get_LoggedOn(This,pVal)

#define IMSIMContactView_Logon(This,bstrAddress,bstrName,bstrPassword,bstrDomain)	\
    (This)->lpVtbl -> Logon(This,bstrAddress,bstrName,bstrPassword,bstrDomain)

#define IMSIMContactView_Logoff(This)	\
    (This)->lpVtbl -> Logoff(This)

#define IMSIMContactView_GetLocalState(This,pvarState,pvarDescription,pvarData)	\
    (This)->lpVtbl -> GetLocalState(This,pvarState,pvarDescription,pvarData)

#define IMSIMContactView_SetLocalState(This,lState,varDescription,varData)	\
    (This)->lpVtbl -> SetLocalState(This,lState,varDescription,varData)


#define IMSIMContactView_Add(This,vUser)	\
    (This)->lpVtbl -> Add(This,vUser)

#define IMSIMContactView_Remove(This,vUser)	\
    (This)->lpVtbl -> Remove(This,vUser)

#define IMSIMContactView_get_List(This,pvarList)	\
    (This)->lpVtbl -> get_List(This,pvarList)

#define IMSIMContactView_put_List(This,varList)	\
    (This)->lpVtbl -> put_List(This,varList)

#define IMSIMContactView_AddMenuItem(This,bstrItem,lPosition,plCommand)	\
    (This)->lpVtbl -> AddMenuItem(This,bstrItem,lPosition,plCommand)

#define IMSIMContactView_get_SelectedMenuOptions(This,pVal)	\
    (This)->lpVtbl -> get_SelectedMenuOptions(This,pVal)

#define IMSIMContactView_IMSelected(This)	\
    (This)->lpVtbl -> IMSelected(This)

#define IMSIMContactView_EMailSelected(This)	\
    (This)->lpVtbl -> EMailSelected(This)

#define IMSIMContactView_InviteSelected(This)	\
    (This)->lpVtbl -> InviteSelected(This)

#define IMSIMContactView_BlockSelected(This)	\
    (This)->lpVtbl -> BlockSelected(This)

#define IMSIMContactView_UnblockSelected(This)	\
    (This)->lpVtbl -> UnblockSelected(This)

#define IMSIMContactView_get_ExtentWidth(This,pX)	\
    (This)->lpVtbl -> get_ExtentWidth(This,pX)

#define IMSIMContactView_get_ExtentHeight(This,pY)	\
    (This)->lpVtbl -> get_ExtentHeight(This,pY)

#define IMSIMContactView_get_HotTracking(This,pVal)	\
    (This)->lpVtbl -> get_HotTracking(This,pVal)

#define IMSIMContactView_put_HotTracking(This,newVal)	\
    (This)->lpVtbl -> put_HotTracking(This,newVal)

#define IMSIMContactView_get_AllowCollapse(This,pVal)	\
    (This)->lpVtbl -> get_AllowCollapse(This,pVal)

#define IMSIMContactView_put_AllowCollapse(This,newVal)	\
    (This)->lpVtbl -> put_AllowCollapse(This,newVal)

#define IMSIMContactView_get_ShowSelectAlways(This,pVal)	\
    (This)->lpVtbl -> get_ShowSelectAlways(This,pVal)

#define IMSIMContactView_put_ShowSelectAlways(This,newVal)	\
    (This)->lpVtbl -> put_ShowSelectAlways(This,newVal)

#define IMSIMContactView_get_OnlineRootLabel(This,pbstrLabel)	\
    (This)->lpVtbl -> get_OnlineRootLabel(This,pbstrLabel)

#define IMSIMContactView_put_OnlineRootLabel(This,bstrLabel)	\
    (This)->lpVtbl -> put_OnlineRootLabel(This,bstrLabel)

#define IMSIMContactView_get_OfflineRootLabel(This,pbstrLabel)	\
    (This)->lpVtbl -> get_OfflineRootLabel(This,pbstrLabel)

#define IMSIMContactView_put_OfflineRootLabel(This,bstrLabel)	\
    (This)->lpVtbl -> put_OfflineRootLabel(This,bstrLabel)

#define IMSIMContactView_get_Window(This,pVal)	\
    (This)->lpVtbl -> get_Window(This,pVal)

#define IMSIMContactView_get_ShowLogonButton(This,pVal)	\
    (This)->lpVtbl -> get_ShowLogonButton(This,pVal)

#define IMSIMContactView_put_ShowLogonButton(This,newVal)	\
    (This)->lpVtbl -> put_ShowLogonButton(This,newVal)

#define IMSIMContactView_get_OnlineCollapsed(This,pVal)	\
    (This)->lpVtbl -> get_OnlineCollapsed(This,pVal)

#define IMSIMContactView_put_OnlineCollapsed(This,newVal)	\
    (This)->lpVtbl -> put_OnlineCollapsed(This,newVal)

#define IMSIMContactView_get_OfflineCollapsed(This,pVal)	\
    (This)->lpVtbl -> get_OfflineCollapsed(This,pVal)

#define IMSIMContactView_put_OfflineCollapsed(This,newVal)	\
    (This)->lpVtbl -> put_OfflineCollapsed(This,newVal)

#define IMSIMContactView_get_Group(This,pVal)	\
    (This)->lpVtbl -> get_Group(This,pVal)

#define IMSIMContactView_put_Group(This,newVal)	\
    (This)->lpVtbl -> put_Group(This,newVal)

#define IMSIMContactView_get_FilterOffline(This,pVal)	\
    (This)->lpVtbl -> get_FilterOffline(This,pVal)

#define IMSIMContactView_put_FilterOffline(This,newVal)	\
    (This)->lpVtbl -> put_FilterOffline(This,newVal)

#define IMSIMContactView_get_ShowIcons(This,pVal)	\
    (This)->lpVtbl -> get_ShowIcons(This,pVal)

#define IMSIMContactView_put_ShowIcons(This,newVal)	\
    (This)->lpVtbl -> put_ShowIcons(This,newVal)

#define IMSIMContactView_get_AcceptMessages(This,pVal)	\
    (This)->lpVtbl -> get_AcceptMessages(This,pVal)

#define IMSIMContactView_put_AcceptMessages(This,newVal)	\
    (This)->lpVtbl -> put_AcceptMessages(This,newVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_Add_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT vUser);


void __RPC_STUB IMSIMContactView_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_Remove_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT vUser);


void __RPC_STUB IMSIMContactView_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_List_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarList);


void __RPC_STUB IMSIMContactView_get_List_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_List_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT varList);


void __RPC_STUB IMSIMContactView_put_List_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_AddMenuItem_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ BSTR bstrItem,
    /* [defaultvalue][in] */ long lPosition,
    /* [retval][out] */ long __RPC_FAR *plCommand);


void __RPC_STUB IMSIMContactView_AddMenuItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_SelectedMenuOptions_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactView_get_SelectedMenuOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_IMSelected_Proxy( 
    IMSIMContactView __RPC_FAR * This);


void __RPC_STUB IMSIMContactView_IMSelected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_EMailSelected_Proxy( 
    IMSIMContactView __RPC_FAR * This);


void __RPC_STUB IMSIMContactView_EMailSelected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_InviteSelected_Proxy( 
    IMSIMContactView __RPC_FAR * This);


void __RPC_STUB IMSIMContactView_InviteSelected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_BlockSelected_Proxy( 
    IMSIMContactView __RPC_FAR * This);


void __RPC_STUB IMSIMContactView_BlockSelected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_UnblockSelected_Proxy( 
    IMSIMContactView __RPC_FAR * This);


void __RPC_STUB IMSIMContactView_UnblockSelected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_ExtentWidth_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pX);


void __RPC_STUB IMSIMContactView_get_ExtentWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_ExtentHeight_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pY);


void __RPC_STUB IMSIMContactView_get_ExtentHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_HotTracking_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactView_get_HotTracking_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_HotTracking_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMContactView_put_HotTracking_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_AllowCollapse_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactView_get_AllowCollapse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_AllowCollapse_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMContactView_put_AllowCollapse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_ShowSelectAlways_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactView_get_ShowSelectAlways_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_ShowSelectAlways_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMContactView_put_ShowSelectAlways_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_OnlineRootLabel_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrLabel);


void __RPC_STUB IMSIMContactView_get_OnlineRootLabel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_OnlineRootLabel_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ BSTR bstrLabel);


void __RPC_STUB IMSIMContactView_put_OnlineRootLabel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_OfflineRootLabel_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrLabel);


void __RPC_STUB IMSIMContactView_get_OfflineRootLabel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_OfflineRootLabel_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ BSTR bstrLabel);


void __RPC_STUB IMSIMContactView_put_OfflineRootLabel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_Window_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactView_get_Window_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_ShowLogonButton_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactView_get_ShowLogonButton_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_ShowLogonButton_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMContactView_put_ShowLogonButton_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_OnlineCollapsed_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactView_get_OnlineCollapsed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_OnlineCollapsed_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMContactView_put_OnlineCollapsed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_OfflineCollapsed_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactView_get_OfflineCollapsed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_OfflineCollapsed_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMContactView_put_OfflineCollapsed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_Group_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactView_get_Group_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_Group_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMContactView_put_Group_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_FilterOffline_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactView_get_FilterOffline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_FilterOffline_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMContactView_put_FilterOffline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_ShowIcons_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactView_get_ShowIcons_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_ShowIcons_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMContactView_put_ShowIcons_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_get_AcceptMessages_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactView_get_AcceptMessages_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactView_put_AcceptMessages_Proxy( 
    IMSIMContactView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMContactView_put_AcceptMessages_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMSIMContactView_INTERFACE_DEFINED__ */


#ifndef __DMSIMContactViewEvents_DISPINTERFACE_DEFINED__
#define __DMSIMContactViewEvents_DISPINTERFACE_DEFINED__

/* dispinterface DMSIMContactViewEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID_DMSIMContactViewEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("5D39E512-1068-4F85-8173-357CA1892EE2")
    DMSIMContactViewEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DMSIMContactViewEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            DMSIMContactViewEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            DMSIMContactViewEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            DMSIMContactViewEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            DMSIMContactViewEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            DMSIMContactViewEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            DMSIMContactViewEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            DMSIMContactViewEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } DMSIMContactViewEventsVtbl;

    interface DMSIMContactViewEvents
    {
        CONST_VTBL struct DMSIMContactViewEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DMSIMContactViewEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DMSIMContactViewEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DMSIMContactViewEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DMSIMContactViewEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DMSIMContactViewEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DMSIMContactViewEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DMSIMContactViewEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DMSIMContactViewEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IMSIMMessageView_INTERFACE_DEFINED__
#define __IMSIMMessageView_INTERFACE_DEFINED__

/* interface IMSIMMessageView */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMSIMMessageView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("053A4F4E-B931-4602-8C73-ABD3040558F2")
    IMSIMMessageView : public _IUseIMBase
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Window( 
            /* [retval][out] */ long __RPC_FAR *phwnd) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_Appearance( 
            /* [in] */ short appearance) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Appearance( 
            /* [retval][out] */ short __RPC_FAR *pappearance) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShowParticipants( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShowParticipants( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShowMembers( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShowMembers( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShowAvailable( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShowAvailable( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AvailableList( 
            /* [retval][out] */ VARIANT __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AvailableList( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShowMessageHistory( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShowMessageHistory( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShowEdit( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShowEdit( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HideStatus( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HideStatus( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MessageHistory( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_StatusText( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_StatusText( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MessageText( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_MessageText( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Invite( 
            /* [in] */ VARIANT varContact) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EndSession( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddToAvailable( 
            /* [in] */ VARIANT varContact) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveFromAvailable( 
            /* [in] */ VARIANT varContact) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InviteNetMeeting( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE NetMeetingInvite( 
            /* [in] */ IDispatch __RPC_FAR *pIMSession,
            /* [in] */ IDispatch __RPC_FAR *pContact,
            /* [in] */ long lInviteCookie) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceURL( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceURL( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_InSession( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMSIMMessageViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMSIMMessageView __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMSIMMessageView __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetService )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *pService,
            /* [defaultvalue][in] */ IDispatch __RPC_FAR *pApp);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Service )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Service )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ short newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasService )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AutoLogon )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AutoLogon )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LoggedOn )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Logon )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [defaultvalue][full][in] */ BSTR bstrAddress,
            /* [defaultvalue][full][in] */ BSTR bstrName,
            /* [defaultvalue][full][in] */ BSTR bstrPassword,
            /* [defaultvalue][full][in] */ BSTR bstrDomain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Logoff )( 
            IMSIMMessageView __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLocalState )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [out] */ VARIANT __RPC_FAR *pvarState,
            /* [optional][out] */ VARIANT __RPC_FAR *pvarDescription,
            /* [optional][out] */ VARIANT __RPC_FAR *pvarData);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLocalState )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ long lState,
            /* [optional][in] */ VARIANT varDescription,
            /* [optional][in] */ VARIANT varData);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Window )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Appearance )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ short appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Appearance )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pappearance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ShowParticipants )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ShowParticipants )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ShowMembers )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ShowMembers )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ShowAvailable )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ShowAvailable )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AvailableList )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AvailableList )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ShowMessageHistory )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ShowMessageHistory )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ShowEdit )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ShowEdit )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HideStatus )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HideStatus )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MessageHistory )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_StatusText )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_StatusText )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MessageText )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_MessageText )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invite )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ VARIANT varContact);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EndSession )( 
            IMSIMMessageView __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddToAvailable )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ VARIANT varContact);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveFromAvailable )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ VARIANT varContact);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InviteNetMeeting )( 
            IMSIMMessageView __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *NetMeetingInvite )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *pIMSession,
            /* [in] */ IDispatch __RPC_FAR *pContact,
            /* [in] */ long lInviteCookie);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SourceURL )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SourceURL )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_InSession )( 
            IMSIMMessageView __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        END_INTERFACE
    } IMSIMMessageViewVtbl;

    interface IMSIMMessageView
    {
        CONST_VTBL struct IMSIMMessageViewVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMSIMMessageView_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMSIMMessageView_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMSIMMessageView_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMSIMMessageView_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMSIMMessageView_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMSIMMessageView_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMSIMMessageView_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMSIMMessageView_SetService(This,pService,pApp)	\
    (This)->lpVtbl -> SetService(This,pService,pApp)

#define IMSIMMessageView_get_Service(This,pVal)	\
    (This)->lpVtbl -> get_Service(This,pVal)

#define IMSIMMessageView_put_Service(This,newVal)	\
    (This)->lpVtbl -> put_Service(This,newVal)

#define IMSIMMessageView_get_HasService(This,pVal)	\
    (This)->lpVtbl -> get_HasService(This,pVal)

#define IMSIMMessageView_get_AutoLogon(This,pVal)	\
    (This)->lpVtbl -> get_AutoLogon(This,pVal)

#define IMSIMMessageView_put_AutoLogon(This,newVal)	\
    (This)->lpVtbl -> put_AutoLogon(This,newVal)

#define IMSIMMessageView_get_LoggedOn(This,pVal)	\
    (This)->lpVtbl -> get_LoggedOn(This,pVal)

#define IMSIMMessageView_Logon(This,bstrAddress,bstrName,bstrPassword,bstrDomain)	\
    (This)->lpVtbl -> Logon(This,bstrAddress,bstrName,bstrPassword,bstrDomain)

#define IMSIMMessageView_Logoff(This)	\
    (This)->lpVtbl -> Logoff(This)

#define IMSIMMessageView_GetLocalState(This,pvarState,pvarDescription,pvarData)	\
    (This)->lpVtbl -> GetLocalState(This,pvarState,pvarDescription,pvarData)

#define IMSIMMessageView_SetLocalState(This,lState,varDescription,varData)	\
    (This)->lpVtbl -> SetLocalState(This,lState,varDescription,varData)


#define IMSIMMessageView_get_Window(This,phwnd)	\
    (This)->lpVtbl -> get_Window(This,phwnd)

#define IMSIMMessageView_put_Appearance(This,appearance)	\
    (This)->lpVtbl -> put_Appearance(This,appearance)

#define IMSIMMessageView_get_Appearance(This,pappearance)	\
    (This)->lpVtbl -> get_Appearance(This,pappearance)

#define IMSIMMessageView_get_ShowParticipants(This,pVal)	\
    (This)->lpVtbl -> get_ShowParticipants(This,pVal)

#define IMSIMMessageView_put_ShowParticipants(This,newVal)	\
    (This)->lpVtbl -> put_ShowParticipants(This,newVal)

#define IMSIMMessageView_get_ShowMembers(This,pVal)	\
    (This)->lpVtbl -> get_ShowMembers(This,pVal)

#define IMSIMMessageView_put_ShowMembers(This,newVal)	\
    (This)->lpVtbl -> put_ShowMembers(This,newVal)

#define IMSIMMessageView_get_ShowAvailable(This,pVal)	\
    (This)->lpVtbl -> get_ShowAvailable(This,pVal)

#define IMSIMMessageView_put_ShowAvailable(This,newVal)	\
    (This)->lpVtbl -> put_ShowAvailable(This,newVal)

#define IMSIMMessageView_get_AvailableList(This,pVal)	\
    (This)->lpVtbl -> get_AvailableList(This,pVal)

#define IMSIMMessageView_put_AvailableList(This,newVal)	\
    (This)->lpVtbl -> put_AvailableList(This,newVal)

#define IMSIMMessageView_get_ShowMessageHistory(This,pVal)	\
    (This)->lpVtbl -> get_ShowMessageHistory(This,pVal)

#define IMSIMMessageView_put_ShowMessageHistory(This,newVal)	\
    (This)->lpVtbl -> put_ShowMessageHistory(This,newVal)

#define IMSIMMessageView_get_ShowEdit(This,pVal)	\
    (This)->lpVtbl -> get_ShowEdit(This,pVal)

#define IMSIMMessageView_put_ShowEdit(This,newVal)	\
    (This)->lpVtbl -> put_ShowEdit(This,newVal)

#define IMSIMMessageView_get_HideStatus(This,pVal)	\
    (This)->lpVtbl -> get_HideStatus(This,pVal)

#define IMSIMMessageView_put_HideStatus(This,newVal)	\
    (This)->lpVtbl -> put_HideStatus(This,newVal)

#define IMSIMMessageView_get_MessageHistory(This,pVal)	\
    (This)->lpVtbl -> get_MessageHistory(This,pVal)

#define IMSIMMessageView_get_StatusText(This,pVal)	\
    (This)->lpVtbl -> get_StatusText(This,pVal)

#define IMSIMMessageView_put_StatusText(This,newVal)	\
    (This)->lpVtbl -> put_StatusText(This,newVal)

#define IMSIMMessageView_get_MessageText(This,pVal)	\
    (This)->lpVtbl -> get_MessageText(This,pVal)

#define IMSIMMessageView_put_MessageText(This,newVal)	\
    (This)->lpVtbl -> put_MessageText(This,newVal)

#define IMSIMMessageView_Invite(This,varContact)	\
    (This)->lpVtbl -> Invite(This,varContact)

#define IMSIMMessageView_EndSession(This)	\
    (This)->lpVtbl -> EndSession(This)

#define IMSIMMessageView_AddToAvailable(This,varContact)	\
    (This)->lpVtbl -> AddToAvailable(This,varContact)

#define IMSIMMessageView_RemoveFromAvailable(This,varContact)	\
    (This)->lpVtbl -> RemoveFromAvailable(This,varContact)

#define IMSIMMessageView_InviteNetMeeting(This)	\
    (This)->lpVtbl -> InviteNetMeeting(This)

#define IMSIMMessageView_NetMeetingInvite(This,pIMSession,pContact,lInviteCookie)	\
    (This)->lpVtbl -> NetMeetingInvite(This,pIMSession,pContact,lInviteCookie)

#define IMSIMMessageView_get_SourceURL(This,pVal)	\
    (This)->lpVtbl -> get_SourceURL(This,pVal)

#define IMSIMMessageView_put_SourceURL(This,newVal)	\
    (This)->lpVtbl -> put_SourceURL(This,newVal)

#define IMSIMMessageView_get_InSession(This,pVal)	\
    (This)->lpVtbl -> get_InSession(This,pVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_Window_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *phwnd);


void __RPC_STUB IMSIMMessageView_get_Window_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_put_Appearance_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ short appearance);


void __RPC_STUB IMSIMMessageView_put_Appearance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_Appearance_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *pappearance);


void __RPC_STUB IMSIMMessageView_get_Appearance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_ShowParticipants_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMMessageView_get_ShowParticipants_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_put_ShowParticipants_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMMessageView_put_ShowParticipants_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_ShowMembers_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMMessageView_get_ShowMembers_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_put_ShowMembers_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMMessageView_put_ShowMembers_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_ShowAvailable_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMMessageView_get_ShowAvailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_put_ShowAvailable_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMMessageView_put_ShowAvailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_AvailableList_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pVal);


void __RPC_STUB IMSIMMessageView_get_AvailableList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_put_AvailableList_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ VARIANT newVal);


void __RPC_STUB IMSIMMessageView_put_AvailableList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_ShowMessageHistory_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMMessageView_get_ShowMessageHistory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_put_ShowMessageHistory_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMMessageView_put_ShowMessageHistory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_ShowEdit_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMMessageView_get_ShowEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_put_ShowEdit_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMMessageView_put_ShowEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_HideStatus_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMMessageView_get_HideStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_put_HideStatus_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMSIMMessageView_put_HideStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_MessageHistory_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB IMSIMMessageView_get_MessageHistory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_StatusText_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB IMSIMMessageView_get_StatusText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_put_StatusText_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMSIMMessageView_put_StatusText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_MessageText_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB IMSIMMessageView_get_MessageText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_put_MessageText_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMSIMMessageView_put_MessageText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_Invite_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ VARIANT varContact);


void __RPC_STUB IMSIMMessageView_Invite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_EndSession_Proxy( 
    IMSIMMessageView __RPC_FAR * This);


void __RPC_STUB IMSIMMessageView_EndSession_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_AddToAvailable_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ VARIANT varContact);


void __RPC_STUB IMSIMMessageView_AddToAvailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_RemoveFromAvailable_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ VARIANT varContact);


void __RPC_STUB IMSIMMessageView_RemoveFromAvailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_InviteNetMeeting_Proxy( 
    IMSIMMessageView __RPC_FAR * This);


void __RPC_STUB IMSIMMessageView_InviteNetMeeting_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_NetMeetingInvite_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ IDispatch __RPC_FAR *pIMSession,
    /* [in] */ IDispatch __RPC_FAR *pContact,
    /* [in] */ long lInviteCookie);


void __RPC_STUB IMSIMMessageView_NetMeetingInvite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_SourceURL_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB IMSIMMessageView_get_SourceURL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_put_SourceURL_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMSIMMessageView_put_SourceURL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMMessageView_get_InSession_Proxy( 
    IMSIMMessageView __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);


void __RPC_STUB IMSIMMessageView_get_InSession_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMSIMMessageView_INTERFACE_DEFINED__ */


#ifndef __DMSIMMessageViewEvents_DISPINTERFACE_DEFINED__
#define __DMSIMMessageViewEvents_DISPINTERFACE_DEFINED__

/* dispinterface DMSIMMessageViewEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID_DMSIMMessageViewEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("EFFE4FAB-E75C-46EC-AB15-582CD469EB08")
    DMSIMMessageViewEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DMSIMMessageViewEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            DMSIMMessageViewEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            DMSIMMessageViewEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            DMSIMMessageViewEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            DMSIMMessageViewEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            DMSIMMessageViewEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            DMSIMMessageViewEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            DMSIMMessageViewEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } DMSIMMessageViewEventsVtbl;

    interface DMSIMMessageViewEvents
    {
        CONST_VTBL struct DMSIMMessageViewEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DMSIMMessageViewEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DMSIMMessageViewEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DMSIMMessageViewEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DMSIMMessageViewEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DMSIMMessageViewEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DMSIMMessageViewEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DMSIMMessageViewEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DMSIMMessageViewEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_MSIMContactView;

#ifdef __cplusplus

class DECLSPEC_UUID("B06EDBC7-287D-405C-A899-9C7F8358EF26")
MSIMContactView;
#endif

EXTERN_C const CLSID CLSID_MSIMMessageView;

#ifdef __cplusplus

class DECLSPEC_UUID("528B6917-4DED-43F1-B56C-35A1519129CA")
MSIMMessageView;
#endif

#ifndef __IIMSafeContact_INTERFACE_DEFINED__
#define __IIMSafeContact_INTERFACE_DEFINED__

/* interface IIMSafeContact */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IIMSafeContact;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C7B1AD00-4099-4E41-A566-4C49DD3FA19E")
    IIMSafeContact : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LogonName( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrLogonName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FriendlyName( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrFriendlyName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EmailAddress( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrEmailAddress) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_State( 
            /* [retval][out] */ long __RPC_FAR *plState) = 0;
        
        virtual /* [restricted][helpstring][id] */ HRESULT STDMETHODCALLTYPE _SetBaseContact( 
            IDispatch __RPC_FAR *pUnk) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LaunchInstantMessage( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LaunchEmail( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LaunchNetMeeting( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIMSafeContactVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IIMSafeContact __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IIMSafeContact __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IIMSafeContact __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IIMSafeContact __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IIMSafeContact __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IIMSafeContact __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IIMSafeContact __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LogonName )( 
            IIMSafeContact __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrLogonName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FriendlyName )( 
            IIMSafeContact __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrFriendlyName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_EmailAddress )( 
            IIMSafeContact __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrEmailAddress);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_State )( 
            IIMSafeContact __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plState);
        
        /* [restricted][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *_SetBaseContact )( 
            IIMSafeContact __RPC_FAR * This,
            IDispatch __RPC_FAR *pUnk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *LaunchInstantMessage )( 
            IIMSafeContact __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *LaunchEmail )( 
            IIMSafeContact __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *LaunchNetMeeting )( 
            IIMSafeContact __RPC_FAR * This);
        
        END_INTERFACE
    } IIMSafeContactVtbl;

    interface IIMSafeContact
    {
        CONST_VTBL struct IIMSafeContactVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIMSafeContact_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IIMSafeContact_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IIMSafeContact_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IIMSafeContact_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IIMSafeContact_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IIMSafeContact_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IIMSafeContact_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IIMSafeContact_get_LogonName(This,pbstrLogonName)	\
    (This)->lpVtbl -> get_LogonName(This,pbstrLogonName)

#define IIMSafeContact_get_FriendlyName(This,pbstrFriendlyName)	\
    (This)->lpVtbl -> get_FriendlyName(This,pbstrFriendlyName)

#define IIMSafeContact_get_EmailAddress(This,pbstrEmailAddress)	\
    (This)->lpVtbl -> get_EmailAddress(This,pbstrEmailAddress)

#define IIMSafeContact_get_State(This,plState)	\
    (This)->lpVtbl -> get_State(This,plState)

#define IIMSafeContact__SetBaseContact(This,pUnk)	\
    (This)->lpVtbl -> _SetBaseContact(This,pUnk)

#define IIMSafeContact_LaunchInstantMessage(This)	\
    (This)->lpVtbl -> LaunchInstantMessage(This)

#define IIMSafeContact_LaunchEmail(This)	\
    (This)->lpVtbl -> LaunchEmail(This)

#define IIMSafeContact_LaunchNetMeeting(This)	\
    (This)->lpVtbl -> LaunchNetMeeting(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IIMSafeContact_get_LogonName_Proxy( 
    IIMSafeContact __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrLogonName);


void __RPC_STUB IIMSafeContact_get_LogonName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IIMSafeContact_get_FriendlyName_Proxy( 
    IIMSafeContact __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrFriendlyName);


void __RPC_STUB IIMSafeContact_get_FriendlyName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IIMSafeContact_get_EmailAddress_Proxy( 
    IIMSafeContact __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrEmailAddress);


void __RPC_STUB IIMSafeContact_get_EmailAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IIMSafeContact_get_State_Proxy( 
    IIMSafeContact __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plState);


void __RPC_STUB IIMSafeContact_get_State_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][helpstring][id] */ HRESULT STDMETHODCALLTYPE IIMSafeContact__SetBaseContact_Proxy( 
    IIMSafeContact __RPC_FAR * This,
    IDispatch __RPC_FAR *pUnk);


void __RPC_STUB IIMSafeContact__SetBaseContact_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IIMSafeContact_LaunchInstantMessage_Proxy( 
    IIMSafeContact __RPC_FAR * This);


void __RPC_STUB IIMSafeContact_LaunchInstantMessage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IIMSafeContact_LaunchEmail_Proxy( 
    IIMSafeContact __RPC_FAR * This);


void __RPC_STUB IIMSafeContact_LaunchEmail_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IIMSafeContact_LaunchNetMeeting_Proxy( 
    IIMSafeContact __RPC_FAR * This);


void __RPC_STUB IIMSafeContact_LaunchNetMeeting_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IIMSafeContact_INTERFACE_DEFINED__ */


#ifndef __IMSIMContactList_INTERFACE_DEFINED__
#define __IMSIMContactList_INTERFACE_DEFINED__

/* interface IMSIMContactList */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMSIMContactList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("31AE52BA-BCED-4D92-9582-8C4560D6C258")
    IMSIMContactList : public _IUseIMBase
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_List( 
            /* [retval][out] */ VARIANT __RPC_FAR *pvarList) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_List( 
            /* [in] */ VARIANT varList) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ VARIANT vUser) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT vUser) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedMenuOptions( 
            /* [in] */ long lRow,
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InstantMessage( 
            /* [in] */ long lRow) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EMail( 
            /* [in] */ long lRow) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Invite( 
            /* [in] */ long lRow) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Block( 
            /* [in] */ long lRow) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Unblock( 
            /* [in] */ long lRow) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *pnCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Var,
            /* [retval][out] */ VARIANT __RPC_FAR *pSafeContact) = 0;
        
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_LocalState( 
            /* [retval][out] */ long __RPC_FAR *pnState) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_LocalState( 
            /* [in] */ long nState) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_LocalLogonName( 
            /* [retval][out] */ BSTR __RPC_FAR *pval) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMSIMContactListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMSIMContactList __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMSIMContactList __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMSIMContactList __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetService )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *pService,
            /* [defaultvalue][in] */ IDispatch __RPC_FAR *pApp);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Service )( 
            IMSIMContactList __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Service )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ short newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasService )( 
            IMSIMContactList __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AutoLogon )( 
            IMSIMContactList __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AutoLogon )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LoggedOn )( 
            IMSIMContactList __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Logon )( 
            IMSIMContactList __RPC_FAR * This,
            /* [defaultvalue][full][in] */ BSTR bstrAddress,
            /* [defaultvalue][full][in] */ BSTR bstrName,
            /* [defaultvalue][full][in] */ BSTR bstrPassword,
            /* [defaultvalue][full][in] */ BSTR bstrDomain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Logoff )( 
            IMSIMContactList __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLocalState )( 
            IMSIMContactList __RPC_FAR * This,
            /* [out] */ VARIANT __RPC_FAR *pvarState,
            /* [optional][out] */ VARIANT __RPC_FAR *pvarDescription,
            /* [optional][out] */ VARIANT __RPC_FAR *pvarData);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLocalState )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ long lState,
            /* [optional][in] */ VARIANT varDescription,
            /* [optional][in] */ VARIANT varData);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_List )( 
            IMSIMContactList __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarList);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_List )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ VARIANT varList);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ VARIANT vUser);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ VARIANT vUser);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SelectedMenuOptions )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ long lRow,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InstantMessage )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ long lRow);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EMail )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ long lRow);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invite )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ long lRow);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Block )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ long lRow);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unblock )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ long lRow);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IMSIMContactList __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pnCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ VARIANT Var,
            /* [retval][out] */ VARIANT __RPC_FAR *pSafeContact);
        
        /* [restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IMSIMContactList __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LocalState )( 
            IMSIMContactList __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pnState);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_LocalState )( 
            IMSIMContactList __RPC_FAR * This,
            /* [in] */ long nState);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LocalLogonName )( 
            IMSIMContactList __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pval);
        
        END_INTERFACE
    } IMSIMContactListVtbl;

    interface IMSIMContactList
    {
        CONST_VTBL struct IMSIMContactListVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMSIMContactList_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMSIMContactList_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMSIMContactList_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMSIMContactList_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMSIMContactList_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMSIMContactList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMSIMContactList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMSIMContactList_SetService(This,pService,pApp)	\
    (This)->lpVtbl -> SetService(This,pService,pApp)

#define IMSIMContactList_get_Service(This,pVal)	\
    (This)->lpVtbl -> get_Service(This,pVal)

#define IMSIMContactList_put_Service(This,newVal)	\
    (This)->lpVtbl -> put_Service(This,newVal)

#define IMSIMContactList_get_HasService(This,pVal)	\
    (This)->lpVtbl -> get_HasService(This,pVal)

#define IMSIMContactList_get_AutoLogon(This,pVal)	\
    (This)->lpVtbl -> get_AutoLogon(This,pVal)

#define IMSIMContactList_put_AutoLogon(This,newVal)	\
    (This)->lpVtbl -> put_AutoLogon(This,newVal)

#define IMSIMContactList_get_LoggedOn(This,pVal)	\
    (This)->lpVtbl -> get_LoggedOn(This,pVal)

#define IMSIMContactList_Logon(This,bstrAddress,bstrName,bstrPassword,bstrDomain)	\
    (This)->lpVtbl -> Logon(This,bstrAddress,bstrName,bstrPassword,bstrDomain)

#define IMSIMContactList_Logoff(This)	\
    (This)->lpVtbl -> Logoff(This)

#define IMSIMContactList_GetLocalState(This,pvarState,pvarDescription,pvarData)	\
    (This)->lpVtbl -> GetLocalState(This,pvarState,pvarDescription,pvarData)

#define IMSIMContactList_SetLocalState(This,lState,varDescription,varData)	\
    (This)->lpVtbl -> SetLocalState(This,lState,varDescription,varData)


#define IMSIMContactList_get_List(This,pvarList)	\
    (This)->lpVtbl -> get_List(This,pvarList)

#define IMSIMContactList_put_List(This,varList)	\
    (This)->lpVtbl -> put_List(This,varList)

#define IMSIMContactList_Add(This,vUser)	\
    (This)->lpVtbl -> Add(This,vUser)

#define IMSIMContactList_Remove(This,vUser)	\
    (This)->lpVtbl -> Remove(This,vUser)

#define IMSIMContactList_get_SelectedMenuOptions(This,lRow,pVal)	\
    (This)->lpVtbl -> get_SelectedMenuOptions(This,lRow,pVal)

#define IMSIMContactList_InstantMessage(This,lRow)	\
    (This)->lpVtbl -> InstantMessage(This,lRow)

#define IMSIMContactList_EMail(This,lRow)	\
    (This)->lpVtbl -> EMail(This,lRow)

#define IMSIMContactList_Invite(This,lRow)	\
    (This)->lpVtbl -> Invite(This,lRow)

#define IMSIMContactList_Block(This,lRow)	\
    (This)->lpVtbl -> Block(This,lRow)

#define IMSIMContactList_Unblock(This,lRow)	\
    (This)->lpVtbl -> Unblock(This,lRow)

#define IMSIMContactList_get_Count(This,pnCount)	\
    (This)->lpVtbl -> get_Count(This,pnCount)

#define IMSIMContactList_get_Item(This,Var,pSafeContact)	\
    (This)->lpVtbl -> get_Item(This,Var,pSafeContact)

#define IMSIMContactList_get__NewEnum(This,ppunkEnum)	\
    (This)->lpVtbl -> get__NewEnum(This,ppunkEnum)

#define IMSIMContactList_get_LocalState(This,pnState)	\
    (This)->lpVtbl -> get_LocalState(This,pnState)

#define IMSIMContactList_put_LocalState(This,nState)	\
    (This)->lpVtbl -> put_LocalState(This,nState)

#define IMSIMContactList_get_LocalLogonName(This,pval)	\
    (This)->lpVtbl -> get_LocalLogonName(This,pval)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_get_List_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarList);


void __RPC_STUB IMSIMContactList_get_List_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_put_List_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [in] */ VARIANT varList);


void __RPC_STUB IMSIMContactList_put_List_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_Add_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [in] */ VARIANT vUser);


void __RPC_STUB IMSIMContactList_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_Remove_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [in] */ VARIANT vUser);


void __RPC_STUB IMSIMContactList_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_get_SelectedMenuOptions_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [in] */ long lRow,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB IMSIMContactList_get_SelectedMenuOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_InstantMessage_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [in] */ long lRow);


void __RPC_STUB IMSIMContactList_InstantMessage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_EMail_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [in] */ long lRow);


void __RPC_STUB IMSIMContactList_EMail_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_Invite_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [in] */ long lRow);


void __RPC_STUB IMSIMContactList_Invite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_Block_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [in] */ long lRow);


void __RPC_STUB IMSIMContactList_Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_Unblock_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [in] */ long lRow);


void __RPC_STUB IMSIMContactList_Unblock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_get_Count_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pnCount);


void __RPC_STUB IMSIMContactList_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_get_Item_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [in] */ VARIANT Var,
    /* [retval][out] */ VARIANT __RPC_FAR *pSafeContact);


void __RPC_STUB IMSIMContactList_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_get__NewEnum_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IMSIMContactList_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_get_LocalState_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pnState);


void __RPC_STUB IMSIMContactList_get_LocalState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_put_LocalState_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [in] */ long nState);


void __RPC_STUB IMSIMContactList_put_LocalState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IMSIMContactList_get_LocalLogonName_Proxy( 
    IMSIMContactList __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pval);


void __RPC_STUB IMSIMContactList_get_LocalLogonName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMSIMContactList_INTERFACE_DEFINED__ */


#ifndef __DIMContactListEvents_DISPINTERFACE_DEFINED__
#define __DIMContactListEvents_DISPINTERFACE_DEFINED__

/* dispinterface DIMContactListEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID_DIMContactListEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("8D99BC3C-1F60-4f2e-9D8B-5881604A2E51")
    DIMContactListEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DIMContactListEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            DIMContactListEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            DIMContactListEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            DIMContactListEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            DIMContactListEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            DIMContactListEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            DIMContactListEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            DIMContactListEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } DIMContactListEventsVtbl;

    interface DIMContactListEvents
    {
        CONST_VTBL struct DIMContactListEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DIMContactListEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DIMContactListEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DIMContactListEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DIMContactListEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DIMContactListEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DIMContactListEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DIMContactListEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DIMContactListEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_MSIMContactList;

#ifdef __cplusplus

class DECLSPEC_UUID("0711F6B0-B4FA-4DDB-893E-CC197A8F9DC7")
MSIMContactList;
#endif

EXTERN_C const CLSID CLSID_IMSafeContact;

#ifdef __cplusplus

class DECLSPEC_UUID("EFF88E1B-4A46-4B09-9D2A-8191C42A1661")
IMSafeContact;
#endif
#endif /* __MSIMCNTLLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\msoav.h ===
#pragma once

#ifndef _MSOAV_H
#define _MSOAV_H

typedef struct _msoavinfo
{
int cbsize;			//size of this struct
struct {
	ULONG fPath:1;			//when true use pwzFullPath else use lpstg
	ULONG fReadOnlyRequest:1;	//user requests file to be opened read/only
	ULONG fInstalled:1;	//the file at pwzFullPath is an installed file
	ULONG fHttpDownload:1;	//the file at pwzFullPath is a temp file downloaded from http/ftp
	};
HWND hwnd;			//parent window of the Office9 app
union {
	WCHAR *pwzFullPath;	//full path to the file about to be opened
	LPSTORAGE lpstg;	//OLE Storage of the doc about to be opened
	}u;
WCHAR *pwzHostName;	 // Host Office 9 apps name
WCHAR *pwzOrigURL;	 		// URL of the origin of this downloaded file.
}MSOAVINFO;

 // {56FFCC30-D398-11d0-B2AE-00A0C908FA49}
DEFINE_GUID(IID_IOfficeAntiVirus,
0x56ffcc30, 0xd398, 0x11d0, 0xb2, 0xae, 0x0, 0xa0, 0xc9, 0x8, 0xfa, 0x49);

 // {56FFCC31-D398-11d0-B2AE-00A0C908FA49}
DEFINE_GUID(CATID_MSOfficeAntiVirus,
0x56ffcc30, 0xd398, 0x11d0, 0xb2, 0xae, 0x0, 0xa0, 0xc9, 0x8, 0xfa, 0x49);



#undef  INTERFACE
#define INTERFACE  IOfficeAntiVirus
DECLARE_INTERFACE_(IOfficeAntiVirus, IUnknown)
{
    BEGIN_INTERFACE

    // *** IUnknown methods ***

    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;

    STDMETHOD_(ULONG, AddRef)(THIS) PURE;

    STDMETHOD_(ULONG, Release)(THIS) PURE;

    // *** IOfficeAntiVirus methods ***

	STDMETHOD_(HRESULT, Scan)(THIS_ MSOAVINFO *pmsoavinfo ) PURE;
};

#ifndef AVVENDOR
MSOAPI_(BOOL) MsoFAnyAntiVirus(HMSOINST hmsoinst);
MSOAPI_(BOOL) MsoFDoAntiVirusScan(HMSOINST hmsoinst, MSOAVINFO *msoavinfo);
MSOAPI_(void) MsoFreeMsoavStuff(HMSOINST hmsoinst);
MSOAPI_(BOOL) MsoFDoSecurityLevelDlg(HMSOINST hmsoinst,DWORD msorid, int *pSecurityLevel, 
	BOOL *pfTrustInstalled, HWND hwndParent, BOOL fShowVirusCheckers,
	WCHAR *wzHelpFile, DWORD dwHelpId);

//output of the Enable/disable macro (edm) dialog
#define msoedmEnable	1
#define	msoedmDisable	2
#define	msoedmDontOpen	3

MSOAPI_(int) MsoMsoedmDialog(HMSOINST hmsoinst, BOOL fAppIsActive, BOOL fHasVBMacros, 
	BOOL fHasXLMMacros, void *pvDigSigStore, void *pvMacro, int nAppID, HWND hwnd, 
	const WCHAR *pwtzPath, int iClient, int iSecurityLevel, int *pmsodsv, 
	WCHAR *wzHelpFile, DWORD dwHelpId, HANDLE hFileDLL, BOOL fUserControl);


//Security level
#define	msoslUndefined	0
#define msoslNone   1
#define	msoslMedium	2
#define msoslHigh	3

MSOAPI_(int) MsoMsoslGetSL(HMSOINST hmsoinst);
MSOAPI_(int) MsoMsoslSetSL(DWORD msorid, HMSOINST hmsoinst);

//output of the digital signature verification (dsv)
#define	msodsvNoMacros	0
#define msodsvUnsigned	1
// msodsvPassedTrusted is very unfortunately named because it has nothing to do with
// trust - it just means that the doc is signed and the signature matched. Too late 
// to change the name now so I'm adding a msodsvPassedTrustedCert to mean the doc was
// signed and cert was trusted.
#define	msodsvPassedTrusted	2
#define	msodsvFailed		3
#define	msodsvLowSecurityLevel 4
#define msodsvPassedTrustedCert 5

#endif //!AVVENDOR


#endif // _MSOAV_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\Mshtmlc.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mshtml.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mshtml_h__
#define __mshtml_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IHTMLFiltersCollection_FWD_DEFINED__
#define __IHTMLFiltersCollection_FWD_DEFINED__
typedef interface IHTMLFiltersCollection IHTMLFiltersCollection;
#endif 	/* __IHTMLFiltersCollection_FWD_DEFINED__ */


#ifndef __IIE70DispatchEx_FWD_DEFINED__
#define __IIE70DispatchEx_FWD_DEFINED__
typedef interface IIE70DispatchEx IIE70DispatchEx;
#endif 	/* __IIE70DispatchEx_FWD_DEFINED__ */


#ifndef __IIE80DispatchEx_FWD_DEFINED__
#define __IIE80DispatchEx_FWD_DEFINED__
typedef interface IIE80DispatchEx IIE80DispatchEx;
#endif 	/* __IIE80DispatchEx_FWD_DEFINED__ */


#ifndef __IHTMLEventObj_FWD_DEFINED__
#define __IHTMLEventObj_FWD_DEFINED__
typedef interface IHTMLEventObj IHTMLEventObj;
#endif 	/* __IHTMLEventObj_FWD_DEFINED__ */


#ifndef __IElementBehaviorSite_FWD_DEFINED__
#define __IElementBehaviorSite_FWD_DEFINED__
typedef interface IElementBehaviorSite IElementBehaviorSite;
#endif 	/* __IElementBehaviorSite_FWD_DEFINED__ */


#ifndef __IElementBehavior_FWD_DEFINED__
#define __IElementBehavior_FWD_DEFINED__
typedef interface IElementBehavior IElementBehavior;
#endif 	/* __IElementBehavior_FWD_DEFINED__ */


#ifndef __IElementBehaviorFactory_FWD_DEFINED__
#define __IElementBehaviorFactory_FWD_DEFINED__
typedef interface IElementBehaviorFactory IElementBehaviorFactory;
#endif 	/* __IElementBehaviorFactory_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteOM_FWD_DEFINED__
#define __IElementBehaviorSiteOM_FWD_DEFINED__
typedef interface IElementBehaviorSiteOM IElementBehaviorSiteOM;
#endif 	/* __IElementBehaviorSiteOM_FWD_DEFINED__ */


#ifndef __IElementBehaviorRender_FWD_DEFINED__
#define __IElementBehaviorRender_FWD_DEFINED__
typedef interface IElementBehaviorRender IElementBehaviorRender;
#endif 	/* __IElementBehaviorRender_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteRender_FWD_DEFINED__
#define __IElementBehaviorSiteRender_FWD_DEFINED__
typedef interface IElementBehaviorSiteRender IElementBehaviorSiteRender;
#endif 	/* __IElementBehaviorSiteRender_FWD_DEFINED__ */


#ifndef __IHTMLDOMConstructor_FWD_DEFINED__
#define __IHTMLDOMConstructor_FWD_DEFINED__
typedef interface IHTMLDOMConstructor IHTMLDOMConstructor;
#endif 	/* __IHTMLDOMConstructor_FWD_DEFINED__ */


#ifndef __IHTMLStyle_FWD_DEFINED__
#define __IHTMLStyle_FWD_DEFINED__
typedef interface IHTMLStyle IHTMLStyle;
#endif 	/* __IHTMLStyle_FWD_DEFINED__ */


#ifndef __IHTMLStyle2_FWD_DEFINED__
#define __IHTMLStyle2_FWD_DEFINED__
typedef interface IHTMLStyle2 IHTMLStyle2;
#endif 	/* __IHTMLStyle2_FWD_DEFINED__ */


#ifndef __IHTMLStyle3_FWD_DEFINED__
#define __IHTMLStyle3_FWD_DEFINED__
typedef interface IHTMLStyle3 IHTMLStyle3;
#endif 	/* __IHTMLStyle3_FWD_DEFINED__ */


#ifndef __IHTMLStyle4_FWD_DEFINED__
#define __IHTMLStyle4_FWD_DEFINED__
typedef interface IHTMLStyle4 IHTMLStyle4;
#endif 	/* __IHTMLStyle4_FWD_DEFINED__ */


#ifndef __IHTMLStyle5_FWD_DEFINED__
#define __IHTMLStyle5_FWD_DEFINED__
typedef interface IHTMLStyle5 IHTMLStyle5;
#endif 	/* __IHTMLStyle5_FWD_DEFINED__ */


#ifndef __IHTMLStyle6_FWD_DEFINED__
#define __IHTMLStyle6_FWD_DEFINED__
typedef interface IHTMLStyle6 IHTMLStyle6;
#endif 	/* __IHTMLStyle6_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle_FWD_DEFINED__
#define __IHTMLRuleStyle_FWD_DEFINED__
typedef interface IHTMLRuleStyle IHTMLRuleStyle;
#endif 	/* __IHTMLRuleStyle_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle2_FWD_DEFINED__
#define __IHTMLRuleStyle2_FWD_DEFINED__
typedef interface IHTMLRuleStyle2 IHTMLRuleStyle2;
#endif 	/* __IHTMLRuleStyle2_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle3_FWD_DEFINED__
#define __IHTMLRuleStyle3_FWD_DEFINED__
typedef interface IHTMLRuleStyle3 IHTMLRuleStyle3;
#endif 	/* __IHTMLRuleStyle3_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle4_FWD_DEFINED__
#define __IHTMLRuleStyle4_FWD_DEFINED__
typedef interface IHTMLRuleStyle4 IHTMLRuleStyle4;
#endif 	/* __IHTMLRuleStyle4_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle5_FWD_DEFINED__
#define __IHTMLRuleStyle5_FWD_DEFINED__
typedef interface IHTMLRuleStyle5 IHTMLRuleStyle5;
#endif 	/* __IHTMLRuleStyle5_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle6_FWD_DEFINED__
#define __IHTMLRuleStyle6_FWD_DEFINED__
typedef interface IHTMLRuleStyle6 IHTMLRuleStyle6;
#endif 	/* __IHTMLRuleStyle6_FWD_DEFINED__ */


#ifndef __DispHTMLStyle_FWD_DEFINED__
#define __DispHTMLStyle_FWD_DEFINED__
typedef interface DispHTMLStyle DispHTMLStyle;
#endif 	/* __DispHTMLStyle_FWD_DEFINED__ */


#ifndef __HTMLStyle_FWD_DEFINED__
#define __HTMLStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyle HTMLStyle;
#else
typedef struct HTMLStyle HTMLStyle;
#endif /* __cplusplus */

#endif 	/* __HTMLStyle_FWD_DEFINED__ */


#ifndef __DispHTMLRuleStyle_FWD_DEFINED__
#define __DispHTMLRuleStyle_FWD_DEFINED__
typedef interface DispHTMLRuleStyle DispHTMLRuleStyle;
#endif 	/* __DispHTMLRuleStyle_FWD_DEFINED__ */


#ifndef __HTMLRuleStyle_FWD_DEFINED__
#define __HTMLRuleStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLRuleStyle HTMLRuleStyle;
#else
typedef struct HTMLRuleStyle HTMLRuleStyle;
#endif /* __cplusplus */

#endif 	/* __HTMLRuleStyle_FWD_DEFINED__ */


#ifndef __IHTMLRenderStyle_FWD_DEFINED__
#define __IHTMLRenderStyle_FWD_DEFINED__
typedef interface IHTMLRenderStyle IHTMLRenderStyle;
#endif 	/* __IHTMLRenderStyle_FWD_DEFINED__ */


#ifndef __DispHTMLRenderStyle_FWD_DEFINED__
#define __DispHTMLRenderStyle_FWD_DEFINED__
typedef interface DispHTMLRenderStyle DispHTMLRenderStyle;
#endif 	/* __DispHTMLRenderStyle_FWD_DEFINED__ */


#ifndef __HTMLRenderStyle_FWD_DEFINED__
#define __HTMLRenderStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLRenderStyle HTMLRenderStyle;
#else
typedef struct HTMLRenderStyle HTMLRenderStyle;
#endif /* __cplusplus */

#endif 	/* __HTMLRenderStyle_FWD_DEFINED__ */


#ifndef __IHTMLCurrentStyle_FWD_DEFINED__
#define __IHTMLCurrentStyle_FWD_DEFINED__
typedef interface IHTMLCurrentStyle IHTMLCurrentStyle;
#endif 	/* __IHTMLCurrentStyle_FWD_DEFINED__ */


#ifndef __IHTMLCurrentStyle2_FWD_DEFINED__
#define __IHTMLCurrentStyle2_FWD_DEFINED__
typedef interface IHTMLCurrentStyle2 IHTMLCurrentStyle2;
#endif 	/* __IHTMLCurrentStyle2_FWD_DEFINED__ */


#ifndef __IHTMLCurrentStyle3_FWD_DEFINED__
#define __IHTMLCurrentStyle3_FWD_DEFINED__
typedef interface IHTMLCurrentStyle3 IHTMLCurrentStyle3;
#endif 	/* __IHTMLCurrentStyle3_FWD_DEFINED__ */


#ifndef __IHTMLCurrentStyle4_FWD_DEFINED__
#define __IHTMLCurrentStyle4_FWD_DEFINED__
typedef interface IHTMLCurrentStyle4 IHTMLCurrentStyle4;
#endif 	/* __IHTMLCurrentStyle4_FWD_DEFINED__ */


#ifndef __IHTMLCurrentStyle5_FWD_DEFINED__
#define __IHTMLCurrentStyle5_FWD_DEFINED__
typedef interface IHTMLCurrentStyle5 IHTMLCurrentStyle5;
#endif 	/* __IHTMLCurrentStyle5_FWD_DEFINED__ */


#ifndef __DispHTMLCurrentStyle_FWD_DEFINED__
#define __DispHTMLCurrentStyle_FWD_DEFINED__
typedef interface DispHTMLCurrentStyle DispHTMLCurrentStyle;
#endif 	/* __DispHTMLCurrentStyle_FWD_DEFINED__ */


#ifndef __HTMLCurrentStyle_FWD_DEFINED__
#define __HTMLCurrentStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLCurrentStyle HTMLCurrentStyle;
#else
typedef struct HTMLCurrentStyle HTMLCurrentStyle;
#endif /* __cplusplus */

#endif 	/* __HTMLCurrentStyle_FWD_DEFINED__ */


#ifndef __IHTMLElement_FWD_DEFINED__
#define __IHTMLElement_FWD_DEFINED__
typedef interface IHTMLElement IHTMLElement;
#endif 	/* __IHTMLElement_FWD_DEFINED__ */


#ifndef __IHTMLRect_FWD_DEFINED__
#define __IHTMLRect_FWD_DEFINED__
typedef interface IHTMLRect IHTMLRect;
#endif 	/* __IHTMLRect_FWD_DEFINED__ */


#ifndef __IHTMLRectCollection_FWD_DEFINED__
#define __IHTMLRectCollection_FWD_DEFINED__
typedef interface IHTMLRectCollection IHTMLRectCollection;
#endif 	/* __IHTMLRectCollection_FWD_DEFINED__ */


#ifndef __IHTMLElementCollection_FWD_DEFINED__
#define __IHTMLElementCollection_FWD_DEFINED__
typedef interface IHTMLElementCollection IHTMLElementCollection;
#endif 	/* __IHTMLElementCollection_FWD_DEFINED__ */


#ifndef __IHTMLElement2_FWD_DEFINED__
#define __IHTMLElement2_FWD_DEFINED__
typedef interface IHTMLElement2 IHTMLElement2;
#endif 	/* __IHTMLElement2_FWD_DEFINED__ */


#ifndef __IHTMLAttributeCollection3_FWD_DEFINED__
#define __IHTMLAttributeCollection3_FWD_DEFINED__
typedef interface IHTMLAttributeCollection3 IHTMLAttributeCollection3;
#endif 	/* __IHTMLAttributeCollection3_FWD_DEFINED__ */


#ifndef __IHTMLDOMNode_FWD_DEFINED__
#define __IHTMLDOMNode_FWD_DEFINED__
typedef interface IHTMLDOMNode IHTMLDOMNode;
#endif 	/* __IHTMLDOMNode_FWD_DEFINED__ */


#ifndef __IHTMLDOMNode2_FWD_DEFINED__
#define __IHTMLDOMNode2_FWD_DEFINED__
typedef interface IHTMLDOMNode2 IHTMLDOMNode2;
#endif 	/* __IHTMLDOMNode2_FWD_DEFINED__ */


#ifndef __IHTMLDOMAttribute_FWD_DEFINED__
#define __IHTMLDOMAttribute_FWD_DEFINED__
typedef interface IHTMLDOMAttribute IHTMLDOMAttribute;
#endif 	/* __IHTMLDOMAttribute_FWD_DEFINED__ */


#ifndef __IHTMLDOMAttribute2_FWD_DEFINED__
#define __IHTMLDOMAttribute2_FWD_DEFINED__
typedef interface IHTMLDOMAttribute2 IHTMLDOMAttribute2;
#endif 	/* __IHTMLDOMAttribute2_FWD_DEFINED__ */


#ifndef __IHTMLDOMAttribute3_FWD_DEFINED__
#define __IHTMLDOMAttribute3_FWD_DEFINED__
typedef interface IHTMLDOMAttribute3 IHTMLDOMAttribute3;
#endif 	/* __IHTMLDOMAttribute3_FWD_DEFINED__ */


#ifndef __IHTMLDOMTextNode_FWD_DEFINED__
#define __IHTMLDOMTextNode_FWD_DEFINED__
typedef interface IHTMLDOMTextNode IHTMLDOMTextNode;
#endif 	/* __IHTMLDOMTextNode_FWD_DEFINED__ */


#ifndef __IHTMLDOMTextNode2_FWD_DEFINED__
#define __IHTMLDOMTextNode2_FWD_DEFINED__
typedef interface IHTMLDOMTextNode2 IHTMLDOMTextNode2;
#endif 	/* __IHTMLDOMTextNode2_FWD_DEFINED__ */


#ifndef __IHTMLDOMImplementation_FWD_DEFINED__
#define __IHTMLDOMImplementation_FWD_DEFINED__
typedef interface IHTMLDOMImplementation IHTMLDOMImplementation;
#endif 	/* __IHTMLDOMImplementation_FWD_DEFINED__ */


#ifndef __DispHTMLDOMAttribute_FWD_DEFINED__
#define __DispHTMLDOMAttribute_FWD_DEFINED__
typedef interface DispHTMLDOMAttribute DispHTMLDOMAttribute;
#endif 	/* __DispHTMLDOMAttribute_FWD_DEFINED__ */


#ifndef __HTMLDOMAttribute_FWD_DEFINED__
#define __HTMLDOMAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDOMAttribute HTMLDOMAttribute;
#else
typedef struct HTMLDOMAttribute HTMLDOMAttribute;
#endif /* __cplusplus */

#endif 	/* __HTMLDOMAttribute_FWD_DEFINED__ */


#ifndef __DispHTMLDOMTextNode_FWD_DEFINED__
#define __DispHTMLDOMTextNode_FWD_DEFINED__
typedef interface DispHTMLDOMTextNode DispHTMLDOMTextNode;
#endif 	/* __DispHTMLDOMTextNode_FWD_DEFINED__ */


#ifndef __HTMLDOMTextNode_FWD_DEFINED__
#define __HTMLDOMTextNode_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDOMTextNode HTMLDOMTextNode;
#else
typedef struct HTMLDOMTextNode HTMLDOMTextNode;
#endif /* __cplusplus */

#endif 	/* __HTMLDOMTextNode_FWD_DEFINED__ */


#ifndef __DispHTMLDOMImplementation_FWD_DEFINED__
#define __DispHTMLDOMImplementation_FWD_DEFINED__
typedef interface DispHTMLDOMImplementation DispHTMLDOMImplementation;
#endif 	/* __DispHTMLDOMImplementation_FWD_DEFINED__ */


#ifndef __HTMLDOMImplementation_FWD_DEFINED__
#define __HTMLDOMImplementation_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDOMImplementation HTMLDOMImplementation;
#else
typedef struct HTMLDOMImplementation HTMLDOMImplementation;
#endif /* __cplusplus */

#endif 	/* __HTMLDOMImplementation_FWD_DEFINED__ */


#ifndef __IHTMLAttributeCollection_FWD_DEFINED__
#define __IHTMLAttributeCollection_FWD_DEFINED__
typedef interface IHTMLAttributeCollection IHTMLAttributeCollection;
#endif 	/* __IHTMLAttributeCollection_FWD_DEFINED__ */


#ifndef __IHTMLAttributeCollection2_FWD_DEFINED__
#define __IHTMLAttributeCollection2_FWD_DEFINED__
typedef interface IHTMLAttributeCollection2 IHTMLAttributeCollection2;
#endif 	/* __IHTMLAttributeCollection2_FWD_DEFINED__ */


#ifndef __IHTMLDOMChildrenCollection_FWD_DEFINED__
#define __IHTMLDOMChildrenCollection_FWD_DEFINED__
typedef interface IHTMLDOMChildrenCollection IHTMLDOMChildrenCollection;
#endif 	/* __IHTMLDOMChildrenCollection_FWD_DEFINED__ */


#ifndef __DispHTMLAttributeCollection_FWD_DEFINED__
#define __DispHTMLAttributeCollection_FWD_DEFINED__
typedef interface DispHTMLAttributeCollection DispHTMLAttributeCollection;
#endif 	/* __DispHTMLAttributeCollection_FWD_DEFINED__ */


#ifndef __HTMLAttributeCollection_FWD_DEFINED__
#define __HTMLAttributeCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAttributeCollection HTMLAttributeCollection;
#else
typedef struct HTMLAttributeCollection HTMLAttributeCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLAttributeCollection_FWD_DEFINED__ */


#ifndef __DispStaticNodeList_FWD_DEFINED__
#define __DispStaticNodeList_FWD_DEFINED__
typedef interface DispStaticNodeList DispStaticNodeList;
#endif 	/* __DispStaticNodeList_FWD_DEFINED__ */


#ifndef __StaticNodeList_FWD_DEFINED__
#define __StaticNodeList_FWD_DEFINED__

#ifdef __cplusplus
typedef class StaticNodeList StaticNodeList;
#else
typedef struct StaticNodeList StaticNodeList;
#endif /* __cplusplus */

#endif 	/* __StaticNodeList_FWD_DEFINED__ */


#ifndef __DispDOMChildrenCollection_FWD_DEFINED__
#define __DispDOMChildrenCollection_FWD_DEFINED__
typedef interface DispDOMChildrenCollection DispDOMChildrenCollection;
#endif 	/* __DispDOMChildrenCollection_FWD_DEFINED__ */


#ifndef __DOMChildrenCollection_FWD_DEFINED__
#define __DOMChildrenCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class DOMChildrenCollection DOMChildrenCollection;
#else
typedef struct DOMChildrenCollection DOMChildrenCollection;
#endif /* __cplusplus */

#endif 	/* __DOMChildrenCollection_FWD_DEFINED__ */


#ifndef __HTMLElementEvents3_FWD_DEFINED__
#define __HTMLElementEvents3_FWD_DEFINED__
typedef interface HTMLElementEvents3 HTMLElementEvents3;
#endif 	/* __HTMLElementEvents3_FWD_DEFINED__ */


#ifndef __HTMLElementEvents2_FWD_DEFINED__
#define __HTMLElementEvents2_FWD_DEFINED__
typedef interface HTMLElementEvents2 HTMLElementEvents2;
#endif 	/* __HTMLElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLElementEvents_FWD_DEFINED__
#define __HTMLElementEvents_FWD_DEFINED__
typedef interface HTMLElementEvents HTMLElementEvents;
#endif 	/* __HTMLElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLFiltersCollection_FWD_DEFINED__
#define __IHTMLFiltersCollection_FWD_DEFINED__
typedef interface IHTMLFiltersCollection IHTMLFiltersCollection;
#endif 	/* __IHTMLFiltersCollection_FWD_DEFINED__ */


#ifndef __IHTMLElement3_FWD_DEFINED__
#define __IHTMLElement3_FWD_DEFINED__
typedef interface IHTMLElement3 IHTMLElement3;
#endif 	/* __IHTMLElement3_FWD_DEFINED__ */


#ifndef __IHTMLElement4_FWD_DEFINED__
#define __IHTMLElement4_FWD_DEFINED__
typedef interface IHTMLElement4 IHTMLElement4;
#endif 	/* __IHTMLElement4_FWD_DEFINED__ */


#ifndef __IElementSelector_FWD_DEFINED__
#define __IElementSelector_FWD_DEFINED__
typedef interface IElementSelector IElementSelector;
#endif 	/* __IElementSelector_FWD_DEFINED__ */


#ifndef __IHTMLElementRender_FWD_DEFINED__
#define __IHTMLElementRender_FWD_DEFINED__
typedef interface IHTMLElementRender IHTMLElementRender;
#endif 	/* __IHTMLElementRender_FWD_DEFINED__ */


#ifndef __IHTMLUniqueName_FWD_DEFINED__
#define __IHTMLUniqueName_FWD_DEFINED__
typedef interface IHTMLUniqueName IHTMLUniqueName;
#endif 	/* __IHTMLUniqueName_FWD_DEFINED__ */


#ifndef __IHTMLElement5_FWD_DEFINED__
#define __IHTMLElement5_FWD_DEFINED__
typedef interface IHTMLElement5 IHTMLElement5;
#endif 	/* __IHTMLElement5_FWD_DEFINED__ */


#ifndef __IHTMLDatabinding_FWD_DEFINED__
#define __IHTMLDatabinding_FWD_DEFINED__
typedef interface IHTMLDatabinding IHTMLDatabinding;
#endif 	/* __IHTMLDatabinding_FWD_DEFINED__ */


#ifndef __IHTMLDocument_FWD_DEFINED__
#define __IHTMLDocument_FWD_DEFINED__
typedef interface IHTMLDocument IHTMLDocument;
#endif 	/* __IHTMLDocument_FWD_DEFINED__ */


#ifndef __IHTMLElementDefaults_FWD_DEFINED__
#define __IHTMLElementDefaults_FWD_DEFINED__
typedef interface IHTMLElementDefaults IHTMLElementDefaults;
#endif 	/* __IHTMLElementDefaults_FWD_DEFINED__ */


#ifndef __DispHTMLDefaults_FWD_DEFINED__
#define __DispHTMLDefaults_FWD_DEFINED__
typedef interface DispHTMLDefaults DispHTMLDefaults;
#endif 	/* __DispHTMLDefaults_FWD_DEFINED__ */


#ifndef __HTMLDefaults_FWD_DEFINED__
#define __HTMLDefaults_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDefaults HTMLDefaults;
#else
typedef struct HTMLDefaults HTMLDefaults;
#endif /* __cplusplus */

#endif 	/* __HTMLDefaults_FWD_DEFINED__ */


#ifndef __IHTCDefaultDispatch_FWD_DEFINED__
#define __IHTCDefaultDispatch_FWD_DEFINED__
typedef interface IHTCDefaultDispatch IHTCDefaultDispatch;
#endif 	/* __IHTCDefaultDispatch_FWD_DEFINED__ */


#ifndef __IHTCPropertyBehavior_FWD_DEFINED__
#define __IHTCPropertyBehavior_FWD_DEFINED__
typedef interface IHTCPropertyBehavior IHTCPropertyBehavior;
#endif 	/* __IHTCPropertyBehavior_FWD_DEFINED__ */


#ifndef __IHTCMethodBehavior_FWD_DEFINED__
#define __IHTCMethodBehavior_FWD_DEFINED__
typedef interface IHTCMethodBehavior IHTCMethodBehavior;
#endif 	/* __IHTCMethodBehavior_FWD_DEFINED__ */


#ifndef __IHTCEventBehavior_FWD_DEFINED__
#define __IHTCEventBehavior_FWD_DEFINED__
typedef interface IHTCEventBehavior IHTCEventBehavior;
#endif 	/* __IHTCEventBehavior_FWD_DEFINED__ */


#ifndef __IHTCAttachBehavior_FWD_DEFINED__
#define __IHTCAttachBehavior_FWD_DEFINED__
typedef interface IHTCAttachBehavior IHTCAttachBehavior;
#endif 	/* __IHTCAttachBehavior_FWD_DEFINED__ */


#ifndef __IHTCAttachBehavior2_FWD_DEFINED__
#define __IHTCAttachBehavior2_FWD_DEFINED__
typedef interface IHTCAttachBehavior2 IHTCAttachBehavior2;
#endif 	/* __IHTCAttachBehavior2_FWD_DEFINED__ */


#ifndef __IHTCDescBehavior_FWD_DEFINED__
#define __IHTCDescBehavior_FWD_DEFINED__
typedef interface IHTCDescBehavior IHTCDescBehavior;
#endif 	/* __IHTCDescBehavior_FWD_DEFINED__ */


#ifndef __DispHTCDefaultDispatch_FWD_DEFINED__
#define __DispHTCDefaultDispatch_FWD_DEFINED__
typedef interface DispHTCDefaultDispatch DispHTCDefaultDispatch;
#endif 	/* __DispHTCDefaultDispatch_FWD_DEFINED__ */


#ifndef __HTCDefaultDispatch_FWD_DEFINED__
#define __HTCDefaultDispatch_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCDefaultDispatch HTCDefaultDispatch;
#else
typedef struct HTCDefaultDispatch HTCDefaultDispatch;
#endif /* __cplusplus */

#endif 	/* __HTCDefaultDispatch_FWD_DEFINED__ */


#ifndef __DispHTCPropertyBehavior_FWD_DEFINED__
#define __DispHTCPropertyBehavior_FWD_DEFINED__
typedef interface DispHTCPropertyBehavior DispHTCPropertyBehavior;
#endif 	/* __DispHTCPropertyBehavior_FWD_DEFINED__ */


#ifndef __HTCPropertyBehavior_FWD_DEFINED__
#define __HTCPropertyBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCPropertyBehavior HTCPropertyBehavior;
#else
typedef struct HTCPropertyBehavior HTCPropertyBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCPropertyBehavior_FWD_DEFINED__ */


#ifndef __DispHTCMethodBehavior_FWD_DEFINED__
#define __DispHTCMethodBehavior_FWD_DEFINED__
typedef interface DispHTCMethodBehavior DispHTCMethodBehavior;
#endif 	/* __DispHTCMethodBehavior_FWD_DEFINED__ */


#ifndef __HTCMethodBehavior_FWD_DEFINED__
#define __HTCMethodBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCMethodBehavior HTCMethodBehavior;
#else
typedef struct HTCMethodBehavior HTCMethodBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCMethodBehavior_FWD_DEFINED__ */


#ifndef __DispHTCEventBehavior_FWD_DEFINED__
#define __DispHTCEventBehavior_FWD_DEFINED__
typedef interface DispHTCEventBehavior DispHTCEventBehavior;
#endif 	/* __DispHTCEventBehavior_FWD_DEFINED__ */


#ifndef __HTCEventBehavior_FWD_DEFINED__
#define __HTCEventBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCEventBehavior HTCEventBehavior;
#else
typedef struct HTCEventBehavior HTCEventBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCEventBehavior_FWD_DEFINED__ */


#ifndef __DispHTCAttachBehavior_FWD_DEFINED__
#define __DispHTCAttachBehavior_FWD_DEFINED__
typedef interface DispHTCAttachBehavior DispHTCAttachBehavior;
#endif 	/* __DispHTCAttachBehavior_FWD_DEFINED__ */


#ifndef __HTCAttachBehavior_FWD_DEFINED__
#define __HTCAttachBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCAttachBehavior HTCAttachBehavior;
#else
typedef struct HTCAttachBehavior HTCAttachBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCAttachBehavior_FWD_DEFINED__ */


#ifndef __DispHTCDescBehavior_FWD_DEFINED__
#define __DispHTCDescBehavior_FWD_DEFINED__
typedef interface DispHTCDescBehavior DispHTCDescBehavior;
#endif 	/* __DispHTCDescBehavior_FWD_DEFINED__ */


#ifndef __HTCDescBehavior_FWD_DEFINED__
#define __HTCDescBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCDescBehavior HTCDescBehavior;
#else
typedef struct HTCDescBehavior HTCDescBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCDescBehavior_FWD_DEFINED__ */


#ifndef __IHTMLUrnCollection_FWD_DEFINED__
#define __IHTMLUrnCollection_FWD_DEFINED__
typedef interface IHTMLUrnCollection IHTMLUrnCollection;
#endif 	/* __IHTMLUrnCollection_FWD_DEFINED__ */


#ifndef __DispHTMLUrnCollection_FWD_DEFINED__
#define __DispHTMLUrnCollection_FWD_DEFINED__
typedef interface DispHTMLUrnCollection DispHTMLUrnCollection;
#endif 	/* __DispHTMLUrnCollection_FWD_DEFINED__ */


#ifndef __HTMLUrnCollection_FWD_DEFINED__
#define __HTMLUrnCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLUrnCollection HTMLUrnCollection;
#else
typedef struct HTMLUrnCollection HTMLUrnCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLUrnCollection_FWD_DEFINED__ */


#ifndef __IHTMLGenericElement_FWD_DEFINED__
#define __IHTMLGenericElement_FWD_DEFINED__
typedef interface IHTMLGenericElement IHTMLGenericElement;
#endif 	/* __IHTMLGenericElement_FWD_DEFINED__ */


#ifndef __DispHTMLGenericElement_FWD_DEFINED__
#define __DispHTMLGenericElement_FWD_DEFINED__
typedef interface DispHTMLGenericElement DispHTMLGenericElement;
#endif 	/* __DispHTMLGenericElement_FWD_DEFINED__ */


#ifndef __HTMLGenericElement_FWD_DEFINED__
#define __HTMLGenericElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLGenericElement HTMLGenericElement;
#else
typedef struct HTMLGenericElement HTMLGenericElement;
#endif /* __cplusplus */

#endif 	/* __HTMLGenericElement_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetRule_FWD_DEFINED__
#define __IHTMLStyleSheetRule_FWD_DEFINED__
typedef interface IHTMLStyleSheetRule IHTMLStyleSheetRule;
#endif 	/* __IHTMLStyleSheetRule_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetRulesCollection_FWD_DEFINED__
#define __IHTMLStyleSheetRulesCollection_FWD_DEFINED__
typedef interface IHTMLStyleSheetRulesCollection IHTMLStyleSheetRulesCollection;
#endif 	/* __IHTMLStyleSheetRulesCollection_FWD_DEFINED__ */


#ifndef __DispHTMLStyleSheetRule_FWD_DEFINED__
#define __DispHTMLStyleSheetRule_FWD_DEFINED__
typedef interface DispHTMLStyleSheetRule DispHTMLStyleSheetRule;
#endif 	/* __DispHTMLStyleSheetRule_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetRule_FWD_DEFINED__
#define __HTMLStyleSheetRule_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetRule HTMLStyleSheetRule;
#else
typedef struct HTMLStyleSheetRule HTMLStyleSheetRule;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetRule_FWD_DEFINED__ */


#ifndef __DispHTMLStyleSheetRulesCollection_FWD_DEFINED__
#define __DispHTMLStyleSheetRulesCollection_FWD_DEFINED__
typedef interface DispHTMLStyleSheetRulesCollection DispHTMLStyleSheetRulesCollection;
#endif 	/* __DispHTMLStyleSheetRulesCollection_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetRulesCollection_FWD_DEFINED__
#define __HTMLStyleSheetRulesCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetRulesCollection HTMLStyleSheetRulesCollection;
#else
typedef struct HTMLStyleSheetRulesCollection HTMLStyleSheetRulesCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetRulesCollection_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetPage_FWD_DEFINED__
#define __IHTMLStyleSheetPage_FWD_DEFINED__
typedef interface IHTMLStyleSheetPage IHTMLStyleSheetPage;
#endif 	/* __IHTMLStyleSheetPage_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetPagesCollection_FWD_DEFINED__
#define __IHTMLStyleSheetPagesCollection_FWD_DEFINED__
typedef interface IHTMLStyleSheetPagesCollection IHTMLStyleSheetPagesCollection;
#endif 	/* __IHTMLStyleSheetPagesCollection_FWD_DEFINED__ */


#ifndef __DispHTMLStyleSheetPage_FWD_DEFINED__
#define __DispHTMLStyleSheetPage_FWD_DEFINED__
typedef interface DispHTMLStyleSheetPage DispHTMLStyleSheetPage;
#endif 	/* __DispHTMLStyleSheetPage_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetPage_FWD_DEFINED__
#define __HTMLStyleSheetPage_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetPage HTMLStyleSheetPage;
#else
typedef struct HTMLStyleSheetPage HTMLStyleSheetPage;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetPage_FWD_DEFINED__ */


#ifndef __DispHTMLStyleSheetPagesCollection_FWD_DEFINED__
#define __DispHTMLStyleSheetPagesCollection_FWD_DEFINED__
typedef interface DispHTMLStyleSheetPagesCollection DispHTMLStyleSheetPagesCollection;
#endif 	/* __DispHTMLStyleSheetPagesCollection_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetPagesCollection_FWD_DEFINED__
#define __HTMLStyleSheetPagesCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetPagesCollection HTMLStyleSheetPagesCollection;
#else
typedef struct HTMLStyleSheetPagesCollection HTMLStyleSheetPagesCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetPagesCollection_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetsCollection_FWD_DEFINED__
#define __IHTMLStyleSheetsCollection_FWD_DEFINED__
typedef interface IHTMLStyleSheetsCollection IHTMLStyleSheetsCollection;
#endif 	/* __IHTMLStyleSheetsCollection_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheet_FWD_DEFINED__
#define __IHTMLStyleSheet_FWD_DEFINED__
typedef interface IHTMLStyleSheet IHTMLStyleSheet;
#endif 	/* __IHTMLStyleSheet_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheet2_FWD_DEFINED__
#define __IHTMLStyleSheet2_FWD_DEFINED__
typedef interface IHTMLStyleSheet2 IHTMLStyleSheet2;
#endif 	/* __IHTMLStyleSheet2_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheet3_FWD_DEFINED__
#define __IHTMLStyleSheet3_FWD_DEFINED__
typedef interface IHTMLStyleSheet3 IHTMLStyleSheet3;
#endif 	/* __IHTMLStyleSheet3_FWD_DEFINED__ */


#ifndef __DispHTMLStyleSheet_FWD_DEFINED__
#define __DispHTMLStyleSheet_FWD_DEFINED__
typedef interface DispHTMLStyleSheet DispHTMLStyleSheet;
#endif 	/* __DispHTMLStyleSheet_FWD_DEFINED__ */


#ifndef __HTMLStyleSheet_FWD_DEFINED__
#define __HTMLStyleSheet_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheet HTMLStyleSheet;
#else
typedef struct HTMLStyleSheet HTMLStyleSheet;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheet_FWD_DEFINED__ */


#ifndef __DispHTMLStyleSheetsCollection_FWD_DEFINED__
#define __DispHTMLStyleSheetsCollection_FWD_DEFINED__
typedef interface DispHTMLStyleSheetsCollection DispHTMLStyleSheetsCollection;
#endif 	/* __DispHTMLStyleSheetsCollection_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetsCollection_FWD_DEFINED__
#define __HTMLStyleSheetsCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetsCollection HTMLStyleSheetsCollection;
#else
typedef struct HTMLStyleSheetsCollection HTMLStyleSheetsCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetsCollection_FWD_DEFINED__ */


#ifndef __HTMLLinkElementEvents2_FWD_DEFINED__
#define __HTMLLinkElementEvents2_FWD_DEFINED__
typedef interface HTMLLinkElementEvents2 HTMLLinkElementEvents2;
#endif 	/* __HTMLLinkElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLLinkElementEvents_FWD_DEFINED__
#define __HTMLLinkElementEvents_FWD_DEFINED__
typedef interface HTMLLinkElementEvents HTMLLinkElementEvents;
#endif 	/* __HTMLLinkElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLLinkElement_FWD_DEFINED__
#define __IHTMLLinkElement_FWD_DEFINED__
typedef interface IHTMLLinkElement IHTMLLinkElement;
#endif 	/* __IHTMLLinkElement_FWD_DEFINED__ */


#ifndef __IHTMLLinkElement2_FWD_DEFINED__
#define __IHTMLLinkElement2_FWD_DEFINED__
typedef interface IHTMLLinkElement2 IHTMLLinkElement2;
#endif 	/* __IHTMLLinkElement2_FWD_DEFINED__ */


#ifndef __IHTMLLinkElement3_FWD_DEFINED__
#define __IHTMLLinkElement3_FWD_DEFINED__
typedef interface IHTMLLinkElement3 IHTMLLinkElement3;
#endif 	/* __IHTMLLinkElement3_FWD_DEFINED__ */


#ifndef __IHTMLLinkElement4_FWD_DEFINED__
#define __IHTMLLinkElement4_FWD_DEFINED__
typedef interface IHTMLLinkElement4 IHTMLLinkElement4;
#endif 	/* __IHTMLLinkElement4_FWD_DEFINED__ */


#ifndef __DispHTMLLinkElement_FWD_DEFINED__
#define __DispHTMLLinkElement_FWD_DEFINED__
typedef interface DispHTMLLinkElement DispHTMLLinkElement;
#endif 	/* __DispHTMLLinkElement_FWD_DEFINED__ */


#ifndef __HTMLLinkElement_FWD_DEFINED__
#define __HTMLLinkElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLinkElement HTMLLinkElement;
#else
typedef struct HTMLLinkElement HTMLLinkElement;
#endif /* __cplusplus */

#endif 	/* __HTMLLinkElement_FWD_DEFINED__ */


#ifndef __IHTMLTxtRange_FWD_DEFINED__
#define __IHTMLTxtRange_FWD_DEFINED__
typedef interface IHTMLTxtRange IHTMLTxtRange;
#endif 	/* __IHTMLTxtRange_FWD_DEFINED__ */


#ifndef __IHTMLTextRangeMetrics_FWD_DEFINED__
#define __IHTMLTextRangeMetrics_FWD_DEFINED__
typedef interface IHTMLTextRangeMetrics IHTMLTextRangeMetrics;
#endif 	/* __IHTMLTextRangeMetrics_FWD_DEFINED__ */


#ifndef __IHTMLTextRangeMetrics2_FWD_DEFINED__
#define __IHTMLTextRangeMetrics2_FWD_DEFINED__
typedef interface IHTMLTextRangeMetrics2 IHTMLTextRangeMetrics2;
#endif 	/* __IHTMLTextRangeMetrics2_FWD_DEFINED__ */


#ifndef __IHTMLTxtRangeCollection_FWD_DEFINED__
#define __IHTMLTxtRangeCollection_FWD_DEFINED__
typedef interface IHTMLTxtRangeCollection IHTMLTxtRangeCollection;
#endif 	/* __IHTMLTxtRangeCollection_FWD_DEFINED__ */


#ifndef __HTMLFormElementEvents2_FWD_DEFINED__
#define __HTMLFormElementEvents2_FWD_DEFINED__
typedef interface HTMLFormElementEvents2 HTMLFormElementEvents2;
#endif 	/* __HTMLFormElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLFormElementEvents_FWD_DEFINED__
#define __HTMLFormElementEvents_FWD_DEFINED__
typedef interface HTMLFormElementEvents HTMLFormElementEvents;
#endif 	/* __HTMLFormElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLFormElement_FWD_DEFINED__
#define __IHTMLFormElement_FWD_DEFINED__
typedef interface IHTMLFormElement IHTMLFormElement;
#endif 	/* __IHTMLFormElement_FWD_DEFINED__ */


#ifndef __IHTMLFormElement2_FWD_DEFINED__
#define __IHTMLFormElement2_FWD_DEFINED__
typedef interface IHTMLFormElement2 IHTMLFormElement2;
#endif 	/* __IHTMLFormElement2_FWD_DEFINED__ */


#ifndef __IHTMLFormElement3_FWD_DEFINED__
#define __IHTMLFormElement3_FWD_DEFINED__
typedef interface IHTMLFormElement3 IHTMLFormElement3;
#endif 	/* __IHTMLFormElement3_FWD_DEFINED__ */


#ifndef __IHTMLSubmitData_FWD_DEFINED__
#define __IHTMLSubmitData_FWD_DEFINED__
typedef interface IHTMLSubmitData IHTMLSubmitData;
#endif 	/* __IHTMLSubmitData_FWD_DEFINED__ */


#ifndef __IHTMLFormElement4_FWD_DEFINED__
#define __IHTMLFormElement4_FWD_DEFINED__
typedef interface IHTMLFormElement4 IHTMLFormElement4;
#endif 	/* __IHTMLFormElement4_FWD_DEFINED__ */


#ifndef __DispHTMLFormElement_FWD_DEFINED__
#define __DispHTMLFormElement_FWD_DEFINED__
typedef interface DispHTMLFormElement DispHTMLFormElement;
#endif 	/* __DispHTMLFormElement_FWD_DEFINED__ */


#ifndef __HTMLFormElement_FWD_DEFINED__
#define __HTMLFormElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFormElement HTMLFormElement;
#else
typedef struct HTMLFormElement HTMLFormElement;
#endif /* __cplusplus */

#endif 	/* __HTMLFormElement_FWD_DEFINED__ */


#ifndef __HTMLControlElementEvents2_FWD_DEFINED__
#define __HTMLControlElementEvents2_FWD_DEFINED__
typedef interface HTMLControlElementEvents2 HTMLControlElementEvents2;
#endif 	/* __HTMLControlElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLControlElementEvents_FWD_DEFINED__
#define __HTMLControlElementEvents_FWD_DEFINED__
typedef interface HTMLControlElementEvents HTMLControlElementEvents;
#endif 	/* __HTMLControlElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLControlElement_FWD_DEFINED__
#define __IHTMLControlElement_FWD_DEFINED__
typedef interface IHTMLControlElement IHTMLControlElement;
#endif 	/* __IHTMLControlElement_FWD_DEFINED__ */


#ifndef __IHTMLTextElement_FWD_DEFINED__
#define __IHTMLTextElement_FWD_DEFINED__
typedef interface IHTMLTextElement IHTMLTextElement;
#endif 	/* __IHTMLTextElement_FWD_DEFINED__ */


#ifndef __DispHTMLTextElement_FWD_DEFINED__
#define __DispHTMLTextElement_FWD_DEFINED__
typedef interface DispHTMLTextElement DispHTMLTextElement;
#endif 	/* __DispHTMLTextElement_FWD_DEFINED__ */


#ifndef __HTMLTextElement_FWD_DEFINED__
#define __HTMLTextElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTextElement HTMLTextElement;
#else
typedef struct HTMLTextElement HTMLTextElement;
#endif /* __cplusplus */

#endif 	/* __HTMLTextElement_FWD_DEFINED__ */


#ifndef __HTMLTextContainerEvents2_FWD_DEFINED__
#define __HTMLTextContainerEvents2_FWD_DEFINED__
typedef interface HTMLTextContainerEvents2 HTMLTextContainerEvents2;
#endif 	/* __HTMLTextContainerEvents2_FWD_DEFINED__ */


#ifndef __HTMLTextContainerEvents_FWD_DEFINED__
#define __HTMLTextContainerEvents_FWD_DEFINED__
typedef interface HTMLTextContainerEvents HTMLTextContainerEvents;
#endif 	/* __HTMLTextContainerEvents_FWD_DEFINED__ */


#ifndef __IHTMLTextContainer_FWD_DEFINED__
#define __IHTMLTextContainer_FWD_DEFINED__
typedef interface IHTMLTextContainer IHTMLTextContainer;
#endif 	/* __IHTMLTextContainer_FWD_DEFINED__ */


#ifndef __IHTMLControlRange_FWD_DEFINED__
#define __IHTMLControlRange_FWD_DEFINED__
typedef interface IHTMLControlRange IHTMLControlRange;
#endif 	/* __IHTMLControlRange_FWD_DEFINED__ */


#ifndef __IHTMLControlRange2_FWD_DEFINED__
#define __IHTMLControlRange2_FWD_DEFINED__
typedef interface IHTMLControlRange2 IHTMLControlRange2;
#endif 	/* __IHTMLControlRange2_FWD_DEFINED__ */


#ifndef __HTMLImgEvents2_FWD_DEFINED__
#define __HTMLImgEvents2_FWD_DEFINED__
typedef interface HTMLImgEvents2 HTMLImgEvents2;
#endif 	/* __HTMLImgEvents2_FWD_DEFINED__ */


#ifndef __HTMLImgEvents_FWD_DEFINED__
#define __HTMLImgEvents_FWD_DEFINED__
typedef interface HTMLImgEvents HTMLImgEvents;
#endif 	/* __HTMLImgEvents_FWD_DEFINED__ */


#ifndef __IHTMLImgElement_FWD_DEFINED__
#define __IHTMLImgElement_FWD_DEFINED__
typedef interface IHTMLImgElement IHTMLImgElement;
#endif 	/* __IHTMLImgElement_FWD_DEFINED__ */


#ifndef __IHTMLImgElement2_FWD_DEFINED__
#define __IHTMLImgElement2_FWD_DEFINED__
typedef interface IHTMLImgElement2 IHTMLImgElement2;
#endif 	/* __IHTMLImgElement2_FWD_DEFINED__ */


#ifndef __IHTMLImgElement3_FWD_DEFINED__
#define __IHTMLImgElement3_FWD_DEFINED__
typedef interface IHTMLImgElement3 IHTMLImgElement3;
#endif 	/* __IHTMLImgElement3_FWD_DEFINED__ */


#ifndef __IHTMLImageElementFactory_FWD_DEFINED__
#define __IHTMLImageElementFactory_FWD_DEFINED__
typedef interface IHTMLImageElementFactory IHTMLImageElementFactory;
#endif 	/* __IHTMLImageElementFactory_FWD_DEFINED__ */


#ifndef __DispHTMLImg_FWD_DEFINED__
#define __DispHTMLImg_FWD_DEFINED__
typedef interface DispHTMLImg DispHTMLImg;
#endif 	/* __DispHTMLImg_FWD_DEFINED__ */


#ifndef __HTMLImg_FWD_DEFINED__
#define __HTMLImg_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLImg HTMLImg;
#else
typedef struct HTMLImg HTMLImg;
#endif /* __cplusplus */

#endif 	/* __HTMLImg_FWD_DEFINED__ */


#ifndef __HTMLImageElementFactory_FWD_DEFINED__
#define __HTMLImageElementFactory_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLImageElementFactory HTMLImageElementFactory;
#else
typedef struct HTMLImageElementFactory HTMLImageElementFactory;
#endif /* __cplusplus */

#endif 	/* __HTMLImageElementFactory_FWD_DEFINED__ */


#ifndef __HTMLXMLHttpRequestEvents_FWD_DEFINED__
#define __HTMLXMLHttpRequestEvents_FWD_DEFINED__
typedef interface HTMLXMLHttpRequestEvents HTMLXMLHttpRequestEvents;
#endif 	/* __HTMLXMLHttpRequestEvents_FWD_DEFINED__ */


#ifndef __IHTMLXMLHttpRequest_FWD_DEFINED__
#define __IHTMLXMLHttpRequest_FWD_DEFINED__
typedef interface IHTMLXMLHttpRequest IHTMLXMLHttpRequest;
#endif 	/* __IHTMLXMLHttpRequest_FWD_DEFINED__ */


#ifndef __IHTMLXMLHttpRequest2_FWD_DEFINED__
#define __IHTMLXMLHttpRequest2_FWD_DEFINED__
typedef interface IHTMLXMLHttpRequest2 IHTMLXMLHttpRequest2;
#endif 	/* __IHTMLXMLHttpRequest2_FWD_DEFINED__ */


#ifndef __IHTMLXMLHttpRequestFactory_FWD_DEFINED__
#define __IHTMLXMLHttpRequestFactory_FWD_DEFINED__
typedef interface IHTMLXMLHttpRequestFactory IHTMLXMLHttpRequestFactory;
#endif 	/* __IHTMLXMLHttpRequestFactory_FWD_DEFINED__ */


#ifndef __DispHTMLXMLHttpRequest_FWD_DEFINED__
#define __DispHTMLXMLHttpRequest_FWD_DEFINED__
typedef interface DispHTMLXMLHttpRequest DispHTMLXMLHttpRequest;
#endif 	/* __DispHTMLXMLHttpRequest_FWD_DEFINED__ */


#ifndef __HTMLXMLHttpRequest_FWD_DEFINED__
#define __HTMLXMLHttpRequest_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLXMLHttpRequest HTMLXMLHttpRequest;
#else
typedef struct HTMLXMLHttpRequest HTMLXMLHttpRequest;
#endif /* __cplusplus */

#endif 	/* __HTMLXMLHttpRequest_FWD_DEFINED__ */


#ifndef __HTMLXMLHttpRequestFactory_FWD_DEFINED__
#define __HTMLXMLHttpRequestFactory_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLXMLHttpRequestFactory HTMLXMLHttpRequestFactory;
#else
typedef struct HTMLXMLHttpRequestFactory HTMLXMLHttpRequestFactory;
#endif /* __cplusplus */

#endif 	/* __HTMLXMLHttpRequestFactory_FWD_DEFINED__ */


#ifndef __IHTMLBodyElement_FWD_DEFINED__
#define __IHTMLBodyElement_FWD_DEFINED__
typedef interface IHTMLBodyElement IHTMLBodyElement;
#endif 	/* __IHTMLBodyElement_FWD_DEFINED__ */


#ifndef __IHTMLBodyElement2_FWD_DEFINED__
#define __IHTMLBodyElement2_FWD_DEFINED__
typedef interface IHTMLBodyElement2 IHTMLBodyElement2;
#endif 	/* __IHTMLBodyElement2_FWD_DEFINED__ */


#ifndef __IHTMLBodyElement3_FWD_DEFINED__
#define __IHTMLBodyElement3_FWD_DEFINED__
typedef interface IHTMLBodyElement3 IHTMLBodyElement3;
#endif 	/* __IHTMLBodyElement3_FWD_DEFINED__ */


#ifndef __DispHTMLBody_FWD_DEFINED__
#define __DispHTMLBody_FWD_DEFINED__
typedef interface DispHTMLBody DispHTMLBody;
#endif 	/* __DispHTMLBody_FWD_DEFINED__ */


#ifndef __HTMLBody_FWD_DEFINED__
#define __HTMLBody_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBody HTMLBody;
#else
typedef struct HTMLBody HTMLBody;
#endif /* __cplusplus */

#endif 	/* __HTMLBody_FWD_DEFINED__ */


#ifndef __IHTMLFontElement_FWD_DEFINED__
#define __IHTMLFontElement_FWD_DEFINED__
typedef interface IHTMLFontElement IHTMLFontElement;
#endif 	/* __IHTMLFontElement_FWD_DEFINED__ */


#ifndef __DispHTMLFontElement_FWD_DEFINED__
#define __DispHTMLFontElement_FWD_DEFINED__
typedef interface DispHTMLFontElement DispHTMLFontElement;
#endif 	/* __DispHTMLFontElement_FWD_DEFINED__ */


#ifndef __HTMLFontElement_FWD_DEFINED__
#define __HTMLFontElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFontElement HTMLFontElement;
#else
typedef struct HTMLFontElement HTMLFontElement;
#endif /* __cplusplus */

#endif 	/* __HTMLFontElement_FWD_DEFINED__ */


#ifndef __HTMLAnchorEvents2_FWD_DEFINED__
#define __HTMLAnchorEvents2_FWD_DEFINED__
typedef interface HTMLAnchorEvents2 HTMLAnchorEvents2;
#endif 	/* __HTMLAnchorEvents2_FWD_DEFINED__ */


#ifndef __HTMLAnchorEvents_FWD_DEFINED__
#define __HTMLAnchorEvents_FWD_DEFINED__
typedef interface HTMLAnchorEvents HTMLAnchorEvents;
#endif 	/* __HTMLAnchorEvents_FWD_DEFINED__ */


#ifndef __IHTMLAnchorElement_FWD_DEFINED__
#define __IHTMLAnchorElement_FWD_DEFINED__
typedef interface IHTMLAnchorElement IHTMLAnchorElement;
#endif 	/* __IHTMLAnchorElement_FWD_DEFINED__ */


#ifndef __IHTMLAnchorElement2_FWD_DEFINED__
#define __IHTMLAnchorElement2_FWD_DEFINED__
typedef interface IHTMLAnchorElement2 IHTMLAnchorElement2;
#endif 	/* __IHTMLAnchorElement2_FWD_DEFINED__ */


#ifndef __IHTMLAnchorElement3_FWD_DEFINED__
#define __IHTMLAnchorElement3_FWD_DEFINED__
typedef interface IHTMLAnchorElement3 IHTMLAnchorElement3;
#endif 	/* __IHTMLAnchorElement3_FWD_DEFINED__ */


#ifndef __DispHTMLAnchorElement_FWD_DEFINED__
#define __DispHTMLAnchorElement_FWD_DEFINED__
typedef interface DispHTMLAnchorElement DispHTMLAnchorElement;
#endif 	/* __DispHTMLAnchorElement_FWD_DEFINED__ */


#ifndef __HTMLAnchorElement_FWD_DEFINED__
#define __HTMLAnchorElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAnchorElement HTMLAnchorElement;
#else
typedef struct HTMLAnchorElement HTMLAnchorElement;
#endif /* __cplusplus */

#endif 	/* __HTMLAnchorElement_FWD_DEFINED__ */


#ifndef __HTMLLabelEvents2_FWD_DEFINED__
#define __HTMLLabelEvents2_FWD_DEFINED__
typedef interface HTMLLabelEvents2 HTMLLabelEvents2;
#endif 	/* __HTMLLabelEvents2_FWD_DEFINED__ */


#ifndef __HTMLLabelEvents_FWD_DEFINED__
#define __HTMLLabelEvents_FWD_DEFINED__
typedef interface HTMLLabelEvents HTMLLabelEvents;
#endif 	/* __HTMLLabelEvents_FWD_DEFINED__ */


#ifndef __IHTMLLabelElement_FWD_DEFINED__
#define __IHTMLLabelElement_FWD_DEFINED__
typedef interface IHTMLLabelElement IHTMLLabelElement;
#endif 	/* __IHTMLLabelElement_FWD_DEFINED__ */


#ifndef __IHTMLLabelElement2_FWD_DEFINED__
#define __IHTMLLabelElement2_FWD_DEFINED__
typedef interface IHTMLLabelElement2 IHTMLLabelElement2;
#endif 	/* __IHTMLLabelElement2_FWD_DEFINED__ */


#ifndef __DispHTMLLabelElement_FWD_DEFINED__
#define __DispHTMLLabelElement_FWD_DEFINED__
typedef interface DispHTMLLabelElement DispHTMLLabelElement;
#endif 	/* __DispHTMLLabelElement_FWD_DEFINED__ */


#ifndef __HTMLLabelElement_FWD_DEFINED__
#define __HTMLLabelElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLabelElement HTMLLabelElement;
#else
typedef struct HTMLLabelElement HTMLLabelElement;
#endif /* __cplusplus */

#endif 	/* __HTMLLabelElement_FWD_DEFINED__ */


#ifndef __IHTMLListElement_FWD_DEFINED__
#define __IHTMLListElement_FWD_DEFINED__
typedef interface IHTMLListElement IHTMLListElement;
#endif 	/* __IHTMLListElement_FWD_DEFINED__ */


#ifndef __IHTMLListElement2_FWD_DEFINED__
#define __IHTMLListElement2_FWD_DEFINED__
typedef interface IHTMLListElement2 IHTMLListElement2;
#endif 	/* __IHTMLListElement2_FWD_DEFINED__ */


#ifndef __DispHTMLListElement_FWD_DEFINED__
#define __DispHTMLListElement_FWD_DEFINED__
typedef interface DispHTMLListElement DispHTMLListElement;
#endif 	/* __DispHTMLListElement_FWD_DEFINED__ */


#ifndef __HTMLListElement_FWD_DEFINED__
#define __HTMLListElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLListElement HTMLListElement;
#else
typedef struct HTMLListElement HTMLListElement;
#endif /* __cplusplus */

#endif 	/* __HTMLListElement_FWD_DEFINED__ */


#ifndef __IHTMLUListElement_FWD_DEFINED__
#define __IHTMLUListElement_FWD_DEFINED__
typedef interface IHTMLUListElement IHTMLUListElement;
#endif 	/* __IHTMLUListElement_FWD_DEFINED__ */


#ifndef __DispHTMLUListElement_FWD_DEFINED__
#define __DispHTMLUListElement_FWD_DEFINED__
typedef interface DispHTMLUListElement DispHTMLUListElement;
#endif 	/* __DispHTMLUListElement_FWD_DEFINED__ */


#ifndef __HTMLUListElement_FWD_DEFINED__
#define __HTMLUListElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLUListElement HTMLUListElement;
#else
typedef struct HTMLUListElement HTMLUListElement;
#endif /* __cplusplus */

#endif 	/* __HTMLUListElement_FWD_DEFINED__ */


#ifndef __IHTMLOListElement_FWD_DEFINED__
#define __IHTMLOListElement_FWD_DEFINED__
typedef interface IHTMLOListElement IHTMLOListElement;
#endif 	/* __IHTMLOListElement_FWD_DEFINED__ */


#ifndef __DispHTMLOListElement_FWD_DEFINED__
#define __DispHTMLOListElement_FWD_DEFINED__
typedef interface DispHTMLOListElement DispHTMLOListElement;
#endif 	/* __DispHTMLOListElement_FWD_DEFINED__ */


#ifndef __HTMLOListElement_FWD_DEFINED__
#define __HTMLOListElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLOListElement HTMLOListElement;
#else
typedef struct HTMLOListElement HTMLOListElement;
#endif /* __cplusplus */

#endif 	/* __HTMLOListElement_FWD_DEFINED__ */


#ifndef __IHTMLLIElement_FWD_DEFINED__
#define __IHTMLLIElement_FWD_DEFINED__
typedef interface IHTMLLIElement IHTMLLIElement;
#endif 	/* __IHTMLLIElement_FWD_DEFINED__ */


#ifndef __DispHTMLLIElement_FWD_DEFINED__
#define __DispHTMLLIElement_FWD_DEFINED__
typedef interface DispHTMLLIElement DispHTMLLIElement;
#endif 	/* __DispHTMLLIElement_FWD_DEFINED__ */


#ifndef __HTMLLIElement_FWD_DEFINED__
#define __HTMLLIElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLIElement HTMLLIElement;
#else
typedef struct HTMLLIElement HTMLLIElement;
#endif /* __cplusplus */

#endif 	/* __HTMLLIElement_FWD_DEFINED__ */


#ifndef __IHTMLBlockElement_FWD_DEFINED__
#define __IHTMLBlockElement_FWD_DEFINED__
typedef interface IHTMLBlockElement IHTMLBlockElement;
#endif 	/* __IHTMLBlockElement_FWD_DEFINED__ */


#ifndef __IHTMLBlockElement2_FWD_DEFINED__
#define __IHTMLBlockElement2_FWD_DEFINED__
typedef interface IHTMLBlockElement2 IHTMLBlockElement2;
#endif 	/* __IHTMLBlockElement2_FWD_DEFINED__ */


#ifndef __IHTMLBlockElement3_FWD_DEFINED__
#define __IHTMLBlockElement3_FWD_DEFINED__
typedef interface IHTMLBlockElement3 IHTMLBlockElement3;
#endif 	/* __IHTMLBlockElement3_FWD_DEFINED__ */


#ifndef __DispHTMLBlockElement_FWD_DEFINED__
#define __DispHTMLBlockElement_FWD_DEFINED__
typedef interface DispHTMLBlockElement DispHTMLBlockElement;
#endif 	/* __DispHTMLBlockElement_FWD_DEFINED__ */


#ifndef __HTMLBlockElement_FWD_DEFINED__
#define __HTMLBlockElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBlockElement HTMLBlockElement;
#else
typedef struct HTMLBlockElement HTMLBlockElement;
#endif /* __cplusplus */

#endif 	/* __HTMLBlockElement_FWD_DEFINED__ */


#ifndef __IHTMLDivElement_FWD_DEFINED__
#define __IHTMLDivElement_FWD_DEFINED__
typedef interface IHTMLDivElement IHTMLDivElement;
#endif 	/* __IHTMLDivElement_FWD_DEFINED__ */


#ifndef __DispHTMLDivElement_FWD_DEFINED__
#define __DispHTMLDivElement_FWD_DEFINED__
typedef interface DispHTMLDivElement DispHTMLDivElement;
#endif 	/* __DispHTMLDivElement_FWD_DEFINED__ */


#ifndef __HTMLDivElement_FWD_DEFINED__
#define __HTMLDivElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDivElement HTMLDivElement;
#else
typedef struct HTMLDivElement HTMLDivElement;
#endif /* __cplusplus */

#endif 	/* __HTMLDivElement_FWD_DEFINED__ */


#ifndef __IHTMLDDElement_FWD_DEFINED__
#define __IHTMLDDElement_FWD_DEFINED__
typedef interface IHTMLDDElement IHTMLDDElement;
#endif 	/* __IHTMLDDElement_FWD_DEFINED__ */


#ifndef __DispHTMLDDElement_FWD_DEFINED__
#define __DispHTMLDDElement_FWD_DEFINED__
typedef interface DispHTMLDDElement DispHTMLDDElement;
#endif 	/* __DispHTMLDDElement_FWD_DEFINED__ */


#ifndef __HTMLDDElement_FWD_DEFINED__
#define __HTMLDDElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDDElement HTMLDDElement;
#else
typedef struct HTMLDDElement HTMLDDElement;
#endif /* __cplusplus */

#endif 	/* __HTMLDDElement_FWD_DEFINED__ */


#ifndef __IHTMLDTElement_FWD_DEFINED__
#define __IHTMLDTElement_FWD_DEFINED__
typedef interface IHTMLDTElement IHTMLDTElement;
#endif 	/* __IHTMLDTElement_FWD_DEFINED__ */


#ifndef __DispHTMLDTElement_FWD_DEFINED__
#define __DispHTMLDTElement_FWD_DEFINED__
typedef interface DispHTMLDTElement DispHTMLDTElement;
#endif 	/* __DispHTMLDTElement_FWD_DEFINED__ */


#ifndef __HTMLDTElement_FWD_DEFINED__
#define __HTMLDTElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDTElement HTMLDTElement;
#else
typedef struct HTMLDTElement HTMLDTElement;
#endif /* __cplusplus */

#endif 	/* __HTMLDTElement_FWD_DEFINED__ */


#ifndef __IHTMLBRElement_FWD_DEFINED__
#define __IHTMLBRElement_FWD_DEFINED__
typedef interface IHTMLBRElement IHTMLBRElement;
#endif 	/* __IHTMLBRElement_FWD_DEFINED__ */


#ifndef __DispHTMLBRElement_FWD_DEFINED__
#define __DispHTMLBRElement_FWD_DEFINED__
typedef interface DispHTMLBRElement DispHTMLBRElement;
#endif 	/* __DispHTMLBRElement_FWD_DEFINED__ */


#ifndef __HTMLBRElement_FWD_DEFINED__
#define __HTMLBRElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBRElement HTMLBRElement;
#else
typedef struct HTMLBRElement HTMLBRElement;
#endif /* __cplusplus */

#endif 	/* __HTMLBRElement_FWD_DEFINED__ */


#ifndef __IHTMLDListElement_FWD_DEFINED__
#define __IHTMLDListElement_FWD_DEFINED__
typedef interface IHTMLDListElement IHTMLDListElement;
#endif 	/* __IHTMLDListElement_FWD_DEFINED__ */


#ifndef __DispHTMLDListElement_FWD_DEFINED__
#define __DispHTMLDListElement_FWD_DEFINED__
typedef interface DispHTMLDListElement DispHTMLDListElement;
#endif 	/* __DispHTMLDListElement_FWD_DEFINED__ */


#ifndef __HTMLDListElement_FWD_DEFINED__
#define __HTMLDListElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDListElement HTMLDListElement;
#else
typedef struct HTMLDListElement HTMLDListElement;
#endif /* __cplusplus */

#endif 	/* __HTMLDListElement_FWD_DEFINED__ */


#ifndef __IHTMLHRElement_FWD_DEFINED__
#define __IHTMLHRElement_FWD_DEFINED__
typedef interface IHTMLHRElement IHTMLHRElement;
#endif 	/* __IHTMLHRElement_FWD_DEFINED__ */


#ifndef __DispHTMLHRElement_FWD_DEFINED__
#define __DispHTMLHRElement_FWD_DEFINED__
typedef interface DispHTMLHRElement DispHTMLHRElement;
#endif 	/* __DispHTMLHRElement_FWD_DEFINED__ */


#ifndef __HTMLHRElement_FWD_DEFINED__
#define __HTMLHRElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHRElement HTMLHRElement;
#else
typedef struct HTMLHRElement HTMLHRElement;
#endif /* __cplusplus */

#endif 	/* __HTMLHRElement_FWD_DEFINED__ */


#ifndef __IHTMLParaElement_FWD_DEFINED__
#define __IHTMLParaElement_FWD_DEFINED__
typedef interface IHTMLParaElement IHTMLParaElement;
#endif 	/* __IHTMLParaElement_FWD_DEFINED__ */


#ifndef __DispHTMLParaElement_FWD_DEFINED__
#define __DispHTMLParaElement_FWD_DEFINED__
typedef interface DispHTMLParaElement DispHTMLParaElement;
#endif 	/* __DispHTMLParaElement_FWD_DEFINED__ */


#ifndef __HTMLParaElement_FWD_DEFINED__
#define __HTMLParaElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLParaElement HTMLParaElement;
#else
typedef struct HTMLParaElement HTMLParaElement;
#endif /* __cplusplus */

#endif 	/* __HTMLParaElement_FWD_DEFINED__ */


#ifndef __IHTMLElementCollection2_FWD_DEFINED__
#define __IHTMLElementCollection2_FWD_DEFINED__
typedef interface IHTMLElementCollection2 IHTMLElementCollection2;
#endif 	/* __IHTMLElementCollection2_FWD_DEFINED__ */


#ifndef __IHTMLElementCollection3_FWD_DEFINED__
#define __IHTMLElementCollection3_FWD_DEFINED__
typedef interface IHTMLElementCollection3 IHTMLElementCollection3;
#endif 	/* __IHTMLElementCollection3_FWD_DEFINED__ */


#ifndef __IHTMLElementCollection4_FWD_DEFINED__
#define __IHTMLElementCollection4_FWD_DEFINED__
typedef interface IHTMLElementCollection4 IHTMLElementCollection4;
#endif 	/* __IHTMLElementCollection4_FWD_DEFINED__ */


#ifndef __DispHTMLElementCollection_FWD_DEFINED__
#define __DispHTMLElementCollection_FWD_DEFINED__
typedef interface DispHTMLElementCollection DispHTMLElementCollection;
#endif 	/* __DispHTMLElementCollection_FWD_DEFINED__ */


#ifndef __HTMLElementCollection_FWD_DEFINED__
#define __HTMLElementCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLElementCollection HTMLElementCollection;
#else
typedef struct HTMLElementCollection HTMLElementCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLElementCollection_FWD_DEFINED__ */


#ifndef __IHTMLHeaderElement_FWD_DEFINED__
#define __IHTMLHeaderElement_FWD_DEFINED__
typedef interface IHTMLHeaderElement IHTMLHeaderElement;
#endif 	/* __IHTMLHeaderElement_FWD_DEFINED__ */


#ifndef __DispHTMLHeaderElement_FWD_DEFINED__
#define __DispHTMLHeaderElement_FWD_DEFINED__
typedef interface DispHTMLHeaderElement DispHTMLHeaderElement;
#endif 	/* __DispHTMLHeaderElement_FWD_DEFINED__ */


#ifndef __HTMLHeaderElement_FWD_DEFINED__
#define __HTMLHeaderElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHeaderElement HTMLHeaderElement;
#else
typedef struct HTMLHeaderElement HTMLHeaderElement;
#endif /* __cplusplus */

#endif 	/* __HTMLHeaderElement_FWD_DEFINED__ */


#ifndef __HTMLSelectElementEvents2_FWD_DEFINED__
#define __HTMLSelectElementEvents2_FWD_DEFINED__
typedef interface HTMLSelectElementEvents2 HTMLSelectElementEvents2;
#endif 	/* __HTMLSelectElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLSelectElementEvents_FWD_DEFINED__
#define __HTMLSelectElementEvents_FWD_DEFINED__
typedef interface HTMLSelectElementEvents HTMLSelectElementEvents;
#endif 	/* __HTMLSelectElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLOptionElement_FWD_DEFINED__
#define __IHTMLOptionElement_FWD_DEFINED__
typedef interface IHTMLOptionElement IHTMLOptionElement;
#endif 	/* __IHTMLOptionElement_FWD_DEFINED__ */


#ifndef __IHTMLSelectElementEx_FWD_DEFINED__
#define __IHTMLSelectElementEx_FWD_DEFINED__
typedef interface IHTMLSelectElementEx IHTMLSelectElementEx;
#endif 	/* __IHTMLSelectElementEx_FWD_DEFINED__ */


#ifndef __IHTMLSelectElement_FWD_DEFINED__
#define __IHTMLSelectElement_FWD_DEFINED__
typedef interface IHTMLSelectElement IHTMLSelectElement;
#endif 	/* __IHTMLSelectElement_FWD_DEFINED__ */


#ifndef __IHTMLSelectElement2_FWD_DEFINED__
#define __IHTMLSelectElement2_FWD_DEFINED__
typedef interface IHTMLSelectElement2 IHTMLSelectElement2;
#endif 	/* __IHTMLSelectElement2_FWD_DEFINED__ */


#ifndef __IHTMLSelectElement4_FWD_DEFINED__
#define __IHTMLSelectElement4_FWD_DEFINED__
typedef interface IHTMLSelectElement4 IHTMLSelectElement4;
#endif 	/* __IHTMLSelectElement4_FWD_DEFINED__ */


#ifndef __IHTMLSelectElement5_FWD_DEFINED__
#define __IHTMLSelectElement5_FWD_DEFINED__
typedef interface IHTMLSelectElement5 IHTMLSelectElement5;
#endif 	/* __IHTMLSelectElement5_FWD_DEFINED__ */


#ifndef __DispHTMLSelectElement_FWD_DEFINED__
#define __DispHTMLSelectElement_FWD_DEFINED__
typedef interface DispHTMLSelectElement DispHTMLSelectElement;
#endif 	/* __DispHTMLSelectElement_FWD_DEFINED__ */


#ifndef __HTMLSelectElement_FWD_DEFINED__
#define __HTMLSelectElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLSelectElement HTMLSelectElement;
#else
typedef struct HTMLSelectElement HTMLSelectElement;
#endif /* __cplusplus */

#endif 	/* __HTMLSelectElement_FWD_DEFINED__ */


#ifndef __DispHTMLWndSelectElement_FWD_DEFINED__
#define __DispHTMLWndSelectElement_FWD_DEFINED__
typedef interface DispHTMLWndSelectElement DispHTMLWndSelectElement;
#endif 	/* __DispHTMLWndSelectElement_FWD_DEFINED__ */


#ifndef __HTMLWndSelectElement_FWD_DEFINED__
#define __HTMLWndSelectElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLWndSelectElement HTMLWndSelectElement;
#else
typedef struct HTMLWndSelectElement HTMLWndSelectElement;
#endif /* __cplusplus */

#endif 	/* __HTMLWndSelectElement_FWD_DEFINED__ */


#ifndef __IHTMLSelectionObject_FWD_DEFINED__
#define __IHTMLSelectionObject_FWD_DEFINED__
typedef interface IHTMLSelectionObject IHTMLSelectionObject;
#endif 	/* __IHTMLSelectionObject_FWD_DEFINED__ */


#ifndef __IHTMLSelectionObject2_FWD_DEFINED__
#define __IHTMLSelectionObject2_FWD_DEFINED__
typedef interface IHTMLSelectionObject2 IHTMLSelectionObject2;
#endif 	/* __IHTMLSelectionObject2_FWD_DEFINED__ */


#ifndef __IHTMLOptionElement3_FWD_DEFINED__
#define __IHTMLOptionElement3_FWD_DEFINED__
typedef interface IHTMLOptionElement3 IHTMLOptionElement3;
#endif 	/* __IHTMLOptionElement3_FWD_DEFINED__ */


#ifndef __IHTMLOptionElementFactory_FWD_DEFINED__
#define __IHTMLOptionElementFactory_FWD_DEFINED__
typedef interface IHTMLOptionElementFactory IHTMLOptionElementFactory;
#endif 	/* __IHTMLOptionElementFactory_FWD_DEFINED__ */


#ifndef __DispHTMLOptionElement_FWD_DEFINED__
#define __DispHTMLOptionElement_FWD_DEFINED__
typedef interface DispHTMLOptionElement DispHTMLOptionElement;
#endif 	/* __DispHTMLOptionElement_FWD_DEFINED__ */


#ifndef __HTMLOptionElement_FWD_DEFINED__
#define __HTMLOptionElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLOptionElement HTMLOptionElement;
#else
typedef struct HTMLOptionElement HTMLOptionElement;
#endif /* __cplusplus */

#endif 	/* __HTMLOptionElement_FWD_DEFINED__ */


#ifndef __HTMLOptionElementFactory_FWD_DEFINED__
#define __HTMLOptionElementFactory_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLOptionElementFactory HTMLOptionElementFactory;
#else
typedef struct HTMLOptionElementFactory HTMLOptionElementFactory;
#endif /* __cplusplus */

#endif 	/* __HTMLOptionElementFactory_FWD_DEFINED__ */


#ifndef __DispHTMLWndOptionElement_FWD_DEFINED__
#define __DispHTMLWndOptionElement_FWD_DEFINED__
typedef interface DispHTMLWndOptionElement DispHTMLWndOptionElement;
#endif 	/* __DispHTMLWndOptionElement_FWD_DEFINED__ */


#ifndef __HTMLWndOptionElement_FWD_DEFINED__
#define __HTMLWndOptionElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLWndOptionElement HTMLWndOptionElement;
#else
typedef struct HTMLWndOptionElement HTMLWndOptionElement;
#endif /* __cplusplus */

#endif 	/* __HTMLWndOptionElement_FWD_DEFINED__ */


#ifndef __HTMLButtonElementEvents2_FWD_DEFINED__
#define __HTMLButtonElementEvents2_FWD_DEFINED__
typedef interface HTMLButtonElementEvents2 HTMLButtonElementEvents2;
#endif 	/* __HTMLButtonElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLButtonElementEvents_FWD_DEFINED__
#define __HTMLButtonElementEvents_FWD_DEFINED__
typedef interface HTMLButtonElementEvents HTMLButtonElementEvents;
#endif 	/* __HTMLButtonElementEvents_FWD_DEFINED__ */


#ifndef __HTMLInputTextElementEvents2_FWD_DEFINED__
#define __HTMLInputTextElementEvents2_FWD_DEFINED__
typedef interface HTMLInputTextElementEvents2 HTMLInputTextElementEvents2;
#endif 	/* __HTMLInputTextElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLOptionButtonElementEvents2_FWD_DEFINED__
#define __HTMLOptionButtonElementEvents2_FWD_DEFINED__
typedef interface HTMLOptionButtonElementEvents2 HTMLOptionButtonElementEvents2;
#endif 	/* __HTMLOptionButtonElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLInputFileElementEvents2_FWD_DEFINED__
#define __HTMLInputFileElementEvents2_FWD_DEFINED__
typedef interface HTMLInputFileElementEvents2 HTMLInputFileElementEvents2;
#endif 	/* __HTMLInputFileElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLInputImageEvents2_FWD_DEFINED__
#define __HTMLInputImageEvents2_FWD_DEFINED__
typedef interface HTMLInputImageEvents2 HTMLInputImageEvents2;
#endif 	/* __HTMLInputImageEvents2_FWD_DEFINED__ */


#ifndef __HTMLInputTextElementEvents_FWD_DEFINED__
#define __HTMLInputTextElementEvents_FWD_DEFINED__
typedef interface HTMLInputTextElementEvents HTMLInputTextElementEvents;
#endif 	/* __HTMLInputTextElementEvents_FWD_DEFINED__ */


#ifndef __HTMLOptionButtonElementEvents_FWD_DEFINED__
#define __HTMLOptionButtonElementEvents_FWD_DEFINED__
typedef interface HTMLOptionButtonElementEvents HTMLOptionButtonElementEvents;
#endif 	/* __HTMLOptionButtonElementEvents_FWD_DEFINED__ */


#ifndef __HTMLInputFileElementEvents_FWD_DEFINED__
#define __HTMLInputFileElementEvents_FWD_DEFINED__
typedef interface HTMLInputFileElementEvents HTMLInputFileElementEvents;
#endif 	/* __HTMLInputFileElementEvents_FWD_DEFINED__ */


#ifndef __HTMLInputImageEvents_FWD_DEFINED__
#define __HTMLInputImageEvents_FWD_DEFINED__
typedef interface HTMLInputImageEvents HTMLInputImageEvents;
#endif 	/* __HTMLInputImageEvents_FWD_DEFINED__ */


#ifndef __IHTMLInputElement_FWD_DEFINED__
#define __IHTMLInputElement_FWD_DEFINED__
typedef interface IHTMLInputElement IHTMLInputElement;
#endif 	/* __IHTMLInputElement_FWD_DEFINED__ */


#ifndef __IHTMLInputElement2_FWD_DEFINED__
#define __IHTMLInputElement2_FWD_DEFINED__
typedef interface IHTMLInputElement2 IHTMLInputElement2;
#endif 	/* __IHTMLInputElement2_FWD_DEFINED__ */


#ifndef __IHTMLInputElement3_FWD_DEFINED__
#define __IHTMLInputElement3_FWD_DEFINED__
typedef interface IHTMLInputElement3 IHTMLInputElement3;
#endif 	/* __IHTMLInputElement3_FWD_DEFINED__ */


#ifndef __IHTMLInputButtonElement_FWD_DEFINED__
#define __IHTMLInputButtonElement_FWD_DEFINED__
typedef interface IHTMLInputButtonElement IHTMLInputButtonElement;
#endif 	/* __IHTMLInputButtonElement_FWD_DEFINED__ */


#ifndef __IHTMLInputHiddenElement_FWD_DEFINED__
#define __IHTMLInputHiddenElement_FWD_DEFINED__
typedef interface IHTMLInputHiddenElement IHTMLInputHiddenElement;
#endif 	/* __IHTMLInputHiddenElement_FWD_DEFINED__ */


#ifndef __IHTMLInputTextElement_FWD_DEFINED__
#define __IHTMLInputTextElement_FWD_DEFINED__
typedef interface IHTMLInputTextElement IHTMLInputTextElement;
#endif 	/* __IHTMLInputTextElement_FWD_DEFINED__ */


#ifndef __IHTMLInputFileElement_FWD_DEFINED__
#define __IHTMLInputFileElement_FWD_DEFINED__
typedef interface IHTMLInputFileElement IHTMLInputFileElement;
#endif 	/* __IHTMLInputFileElement_FWD_DEFINED__ */


#ifndef __IHTMLOptionButtonElement_FWD_DEFINED__
#define __IHTMLOptionButtonElement_FWD_DEFINED__
typedef interface IHTMLOptionButtonElement IHTMLOptionButtonElement;
#endif 	/* __IHTMLOptionButtonElement_FWD_DEFINED__ */


#ifndef __IHTMLInputImage_FWD_DEFINED__
#define __IHTMLInputImage_FWD_DEFINED__
typedef interface IHTMLInputImage IHTMLInputImage;
#endif 	/* __IHTMLInputImage_FWD_DEFINED__ */


#ifndef __DispHTMLInputElement_FWD_DEFINED__
#define __DispHTMLInputElement_FWD_DEFINED__
typedef interface DispHTMLInputElement DispHTMLInputElement;
#endif 	/* __DispHTMLInputElement_FWD_DEFINED__ */


#ifndef __HTMLInputElement_FWD_DEFINED__
#define __HTMLInputElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputElement HTMLInputElement;
#else
typedef struct HTMLInputElement HTMLInputElement;
#endif /* __cplusplus */

#endif 	/* __HTMLInputElement_FWD_DEFINED__ */


#ifndef __IHTMLTextAreaElement_FWD_DEFINED__
#define __IHTMLTextAreaElement_FWD_DEFINED__
typedef interface IHTMLTextAreaElement IHTMLTextAreaElement;
#endif 	/* __IHTMLTextAreaElement_FWD_DEFINED__ */


#ifndef __DispHTMLTextAreaElement_FWD_DEFINED__
#define __DispHTMLTextAreaElement_FWD_DEFINED__
typedef interface DispHTMLTextAreaElement DispHTMLTextAreaElement;
#endif 	/* __DispHTMLTextAreaElement_FWD_DEFINED__ */


#ifndef __HTMLTextAreaElement_FWD_DEFINED__
#define __HTMLTextAreaElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTextAreaElement HTMLTextAreaElement;
#else
typedef struct HTMLTextAreaElement HTMLTextAreaElement;
#endif /* __cplusplus */

#endif 	/* __HTMLTextAreaElement_FWD_DEFINED__ */


#ifndef __DispHTMLRichtextElement_FWD_DEFINED__
#define __DispHTMLRichtextElement_FWD_DEFINED__
typedef interface DispHTMLRichtextElement DispHTMLRichtextElement;
#endif 	/* __DispHTMLRichtextElement_FWD_DEFINED__ */


#ifndef __HTMLRichtextElement_FWD_DEFINED__
#define __HTMLRichtextElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLRichtextElement HTMLRichtextElement;
#else
typedef struct HTMLRichtextElement HTMLRichtextElement;
#endif /* __cplusplus */

#endif 	/* __HTMLRichtextElement_FWD_DEFINED__ */


#ifndef __IHTMLButtonElement_FWD_DEFINED__
#define __IHTMLButtonElement_FWD_DEFINED__
typedef interface IHTMLButtonElement IHTMLButtonElement;
#endif 	/* __IHTMLButtonElement_FWD_DEFINED__ */


#ifndef __DispHTMLButtonElement_FWD_DEFINED__
#define __DispHTMLButtonElement_FWD_DEFINED__
typedef interface DispHTMLButtonElement DispHTMLButtonElement;
#endif 	/* __DispHTMLButtonElement_FWD_DEFINED__ */


#ifndef __HTMLButtonElement_FWD_DEFINED__
#define __HTMLButtonElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLButtonElement HTMLButtonElement;
#else
typedef struct HTMLButtonElement HTMLButtonElement;
#endif /* __cplusplus */

#endif 	/* __HTMLButtonElement_FWD_DEFINED__ */


#ifndef __HTMLMarqueeElementEvents2_FWD_DEFINED__
#define __HTMLMarqueeElementEvents2_FWD_DEFINED__
typedef interface HTMLMarqueeElementEvents2 HTMLMarqueeElementEvents2;
#endif 	/* __HTMLMarqueeElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLMarqueeElementEvents_FWD_DEFINED__
#define __HTMLMarqueeElementEvents_FWD_DEFINED__
typedef interface HTMLMarqueeElementEvents HTMLMarqueeElementEvents;
#endif 	/* __HTMLMarqueeElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLMarqueeElement_FWD_DEFINED__
#define __IHTMLMarqueeElement_FWD_DEFINED__
typedef interface IHTMLMarqueeElement IHTMLMarqueeElement;
#endif 	/* __IHTMLMarqueeElement_FWD_DEFINED__ */


#ifndef __DispHTMLMarqueeElement_FWD_DEFINED__
#define __DispHTMLMarqueeElement_FWD_DEFINED__
typedef interface DispHTMLMarqueeElement DispHTMLMarqueeElement;
#endif 	/* __DispHTMLMarqueeElement_FWD_DEFINED__ */


#ifndef __HTMLMarqueeElement_FWD_DEFINED__
#define __HTMLMarqueeElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLMarqueeElement HTMLMarqueeElement;
#else
typedef struct HTMLMarqueeElement HTMLMarqueeElement;
#endif /* __cplusplus */

#endif 	/* __HTMLMarqueeElement_FWD_DEFINED__ */


#ifndef __IHTMLHtmlElement_FWD_DEFINED__
#define __IHTMLHtmlElement_FWD_DEFINED__
typedef interface IHTMLHtmlElement IHTMLHtmlElement;
#endif 	/* __IHTMLHtmlElement_FWD_DEFINED__ */


#ifndef __IHTMLHeadElement_FWD_DEFINED__
#define __IHTMLHeadElement_FWD_DEFINED__
typedef interface IHTMLHeadElement IHTMLHeadElement;
#endif 	/* __IHTMLHeadElement_FWD_DEFINED__ */


#ifndef __IHTMLHeadElement2_FWD_DEFINED__
#define __IHTMLHeadElement2_FWD_DEFINED__
typedef interface IHTMLHeadElement2 IHTMLHeadElement2;
#endif 	/* __IHTMLHeadElement2_FWD_DEFINED__ */


#ifndef __IHTMLTitleElement_FWD_DEFINED__
#define __IHTMLTitleElement_FWD_DEFINED__
typedef interface IHTMLTitleElement IHTMLTitleElement;
#endif 	/* __IHTMLTitleElement_FWD_DEFINED__ */


#ifndef __IHTMLMetaElement_FWD_DEFINED__
#define __IHTMLMetaElement_FWD_DEFINED__
typedef interface IHTMLMetaElement IHTMLMetaElement;
#endif 	/* __IHTMLMetaElement_FWD_DEFINED__ */


#ifndef __IHTMLMetaElement2_FWD_DEFINED__
#define __IHTMLMetaElement2_FWD_DEFINED__
typedef interface IHTMLMetaElement2 IHTMLMetaElement2;
#endif 	/* __IHTMLMetaElement2_FWD_DEFINED__ */


#ifndef __IHTMLMetaElement3_FWD_DEFINED__
#define __IHTMLMetaElement3_FWD_DEFINED__
typedef interface IHTMLMetaElement3 IHTMLMetaElement3;
#endif 	/* __IHTMLMetaElement3_FWD_DEFINED__ */


#ifndef __IHTMLBaseElement_FWD_DEFINED__
#define __IHTMLBaseElement_FWD_DEFINED__
typedef interface IHTMLBaseElement IHTMLBaseElement;
#endif 	/* __IHTMLBaseElement_FWD_DEFINED__ */


#ifndef __IHTMLBaseElement2_FWD_DEFINED__
#define __IHTMLBaseElement2_FWD_DEFINED__
typedef interface IHTMLBaseElement2 IHTMLBaseElement2;
#endif 	/* __IHTMLBaseElement2_FWD_DEFINED__ */


#ifndef __IHTMLIsIndexElement_FWD_DEFINED__
#define __IHTMLIsIndexElement_FWD_DEFINED__
typedef interface IHTMLIsIndexElement IHTMLIsIndexElement;
#endif 	/* __IHTMLIsIndexElement_FWD_DEFINED__ */


#ifndef __IHTMLIsIndexElement2_FWD_DEFINED__
#define __IHTMLIsIndexElement2_FWD_DEFINED__
typedef interface IHTMLIsIndexElement2 IHTMLIsIndexElement2;
#endif 	/* __IHTMLIsIndexElement2_FWD_DEFINED__ */


#ifndef __IHTMLNextIdElement_FWD_DEFINED__
#define __IHTMLNextIdElement_FWD_DEFINED__
typedef interface IHTMLNextIdElement IHTMLNextIdElement;
#endif 	/* __IHTMLNextIdElement_FWD_DEFINED__ */


#ifndef __DispHTMLHtmlElement_FWD_DEFINED__
#define __DispHTMLHtmlElement_FWD_DEFINED__
typedef interface DispHTMLHtmlElement DispHTMLHtmlElement;
#endif 	/* __DispHTMLHtmlElement_FWD_DEFINED__ */


#ifndef __HTMLHtmlElement_FWD_DEFINED__
#define __HTMLHtmlElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHtmlElement HTMLHtmlElement;
#else
typedef struct HTMLHtmlElement HTMLHtmlElement;
#endif /* __cplusplus */

#endif 	/* __HTMLHtmlElement_FWD_DEFINED__ */


#ifndef __DispHTMLHeadElement_FWD_DEFINED__
#define __DispHTMLHeadElement_FWD_DEFINED__
typedef interface DispHTMLHeadElement DispHTMLHeadElement;
#endif 	/* __DispHTMLHeadElement_FWD_DEFINED__ */


#ifndef __HTMLHeadElement_FWD_DEFINED__
#define __HTMLHeadElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHeadElement HTMLHeadElement;
#else
typedef struct HTMLHeadElement HTMLHeadElement;
#endif /* __cplusplus */

#endif 	/* __HTMLHeadElement_FWD_DEFINED__ */


#ifndef __DispHTMLTitleElement_FWD_DEFINED__
#define __DispHTMLTitleElement_FWD_DEFINED__
typedef interface DispHTMLTitleElement DispHTMLTitleElement;
#endif 	/* __DispHTMLTitleElement_FWD_DEFINED__ */


#ifndef __HTMLTitleElement_FWD_DEFINED__
#define __HTMLTitleElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTitleElement HTMLTitleElement;
#else
typedef struct HTMLTitleElement HTMLTitleElement;
#endif /* __cplusplus */

#endif 	/* __HTMLTitleElement_FWD_DEFINED__ */


#ifndef __DispHTMLMetaElement_FWD_DEFINED__
#define __DispHTMLMetaElement_FWD_DEFINED__
typedef interface DispHTMLMetaElement DispHTMLMetaElement;
#endif 	/* __DispHTMLMetaElement_FWD_DEFINED__ */


#ifndef __HTMLMetaElement_FWD_DEFINED__
#define __HTMLMetaElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLMetaElement HTMLMetaElement;
#else
typedef struct HTMLMetaElement HTMLMetaElement;
#endif /* __cplusplus */

#endif 	/* __HTMLMetaElement_FWD_DEFINED__ */


#ifndef __DispHTMLBaseElement_FWD_DEFINED__
#define __DispHTMLBaseElement_FWD_DEFINED__
typedef interface DispHTMLBaseElement DispHTMLBaseElement;
#endif 	/* __DispHTMLBaseElement_FWD_DEFINED__ */


#ifndef __HTMLBaseElement_FWD_DEFINED__
#define __HTMLBaseElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBaseElement HTMLBaseElement;
#else
typedef struct HTMLBaseElement HTMLBaseElement;
#endif /* __cplusplus */

#endif 	/* __HTMLBaseElement_FWD_DEFINED__ */


#ifndef __DispHTMLIsIndexElement_FWD_DEFINED__
#define __DispHTMLIsIndexElement_FWD_DEFINED__
typedef interface DispHTMLIsIndexElement DispHTMLIsIndexElement;
#endif 	/* __DispHTMLIsIndexElement_FWD_DEFINED__ */


#ifndef __HTMLIsIndexElement_FWD_DEFINED__
#define __HTMLIsIndexElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLIsIndexElement HTMLIsIndexElement;
#else
typedef struct HTMLIsIndexElement HTMLIsIndexElement;
#endif /* __cplusplus */

#endif 	/* __HTMLIsIndexElement_FWD_DEFINED__ */


#ifndef __DispHTMLNextIdElement_FWD_DEFINED__
#define __DispHTMLNextIdElement_FWD_DEFINED__
typedef interface DispHTMLNextIdElement DispHTMLNextIdElement;
#endif 	/* __DispHTMLNextIdElement_FWD_DEFINED__ */


#ifndef __HTMLNextIdElement_FWD_DEFINED__
#define __HTMLNextIdElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNextIdElement HTMLNextIdElement;
#else
typedef struct HTMLNextIdElement HTMLNextIdElement;
#endif /* __cplusplus */

#endif 	/* __HTMLNextIdElement_FWD_DEFINED__ */


#ifndef __IHTMLBaseFontElement_FWD_DEFINED__
#define __IHTMLBaseFontElement_FWD_DEFINED__
typedef interface IHTMLBaseFontElement IHTMLBaseFontElement;
#endif 	/* __IHTMLBaseFontElement_FWD_DEFINED__ */


#ifndef __DispHTMLBaseFontElement_FWD_DEFINED__
#define __DispHTMLBaseFontElement_FWD_DEFINED__
typedef interface DispHTMLBaseFontElement DispHTMLBaseFontElement;
#endif 	/* __DispHTMLBaseFontElement_FWD_DEFINED__ */


#ifndef __HTMLBaseFontElement_FWD_DEFINED__
#define __HTMLBaseFontElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBaseFontElement HTMLBaseFontElement;
#else
typedef struct HTMLBaseFontElement HTMLBaseFontElement;
#endif /* __cplusplus */

#endif 	/* __HTMLBaseFontElement_FWD_DEFINED__ */


#ifndef __IHTMLUnknownElement_FWD_DEFINED__
#define __IHTMLUnknownElement_FWD_DEFINED__
typedef interface IHTMLUnknownElement IHTMLUnknownElement;
#endif 	/* __IHTMLUnknownElement_FWD_DEFINED__ */


#ifndef __DispHTMLUnknownElement_FWD_DEFINED__
#define __DispHTMLUnknownElement_FWD_DEFINED__
typedef interface DispHTMLUnknownElement DispHTMLUnknownElement;
#endif 	/* __DispHTMLUnknownElement_FWD_DEFINED__ */


#ifndef __HTMLUnknownElement_FWD_DEFINED__
#define __HTMLUnknownElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLUnknownElement HTMLUnknownElement;
#else
typedef struct HTMLUnknownElement HTMLUnknownElement;
#endif /* __cplusplus */

#endif 	/* __HTMLUnknownElement_FWD_DEFINED__ */


#ifndef __IOmHistory_FWD_DEFINED__
#define __IOmHistory_FWD_DEFINED__
typedef interface IOmHistory IOmHistory;
#endif 	/* __IOmHistory_FWD_DEFINED__ */


#ifndef __IHTMLMimeTypesCollection_FWD_DEFINED__
#define __IHTMLMimeTypesCollection_FWD_DEFINED__
typedef interface IHTMLMimeTypesCollection IHTMLMimeTypesCollection;
#endif 	/* __IHTMLMimeTypesCollection_FWD_DEFINED__ */


#ifndef __IHTMLPluginsCollection_FWD_DEFINED__
#define __IHTMLPluginsCollection_FWD_DEFINED__
typedef interface IHTMLPluginsCollection IHTMLPluginsCollection;
#endif 	/* __IHTMLPluginsCollection_FWD_DEFINED__ */


#ifndef __IHTMLOpsProfile_FWD_DEFINED__
#define __IHTMLOpsProfile_FWD_DEFINED__
typedef interface IHTMLOpsProfile IHTMLOpsProfile;
#endif 	/* __IHTMLOpsProfile_FWD_DEFINED__ */


#ifndef __IOmNavigator_FWD_DEFINED__
#define __IOmNavigator_FWD_DEFINED__
typedef interface IOmNavigator IOmNavigator;
#endif 	/* __IOmNavigator_FWD_DEFINED__ */


#ifndef __IHTMLLocation_FWD_DEFINED__
#define __IHTMLLocation_FWD_DEFINED__
typedef interface IHTMLLocation IHTMLLocation;
#endif 	/* __IHTMLLocation_FWD_DEFINED__ */


#ifndef __DispHTMLHistory_FWD_DEFINED__
#define __DispHTMLHistory_FWD_DEFINED__
typedef interface DispHTMLHistory DispHTMLHistory;
#endif 	/* __DispHTMLHistory_FWD_DEFINED__ */


#ifndef __HTMLHistory_FWD_DEFINED__
#define __HTMLHistory_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHistory HTMLHistory;
#else
typedef struct HTMLHistory HTMLHistory;
#endif /* __cplusplus */

#endif 	/* __HTMLHistory_FWD_DEFINED__ */


#ifndef __CMimeTypes_FWD_DEFINED__
#define __CMimeTypes_FWD_DEFINED__

#ifdef __cplusplus
typedef class CMimeTypes CMimeTypes;
#else
typedef struct CMimeTypes CMimeTypes;
#endif /* __cplusplus */

#endif 	/* __CMimeTypes_FWD_DEFINED__ */


#ifndef __DispCPlugins_FWD_DEFINED__
#define __DispCPlugins_FWD_DEFINED__
typedef interface DispCPlugins DispCPlugins;
#endif 	/* __DispCPlugins_FWD_DEFINED__ */


#ifndef __CPlugins_FWD_DEFINED__
#define __CPlugins_FWD_DEFINED__

#ifdef __cplusplus
typedef class CPlugins CPlugins;
#else
typedef struct CPlugins CPlugins;
#endif /* __cplusplus */

#endif 	/* __CPlugins_FWD_DEFINED__ */


#ifndef __COpsProfile_FWD_DEFINED__
#define __COpsProfile_FWD_DEFINED__

#ifdef __cplusplus
typedef class COpsProfile COpsProfile;
#else
typedef struct COpsProfile COpsProfile;
#endif /* __cplusplus */

#endif 	/* __COpsProfile_FWD_DEFINED__ */


#ifndef __DispHTMLNavigator_FWD_DEFINED__
#define __DispHTMLNavigator_FWD_DEFINED__
typedef interface DispHTMLNavigator DispHTMLNavigator;
#endif 	/* __DispHTMLNavigator_FWD_DEFINED__ */


#ifndef __HTMLNavigator_FWD_DEFINED__
#define __HTMLNavigator_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNavigator HTMLNavigator;
#else
typedef struct HTMLNavigator HTMLNavigator;
#endif /* __cplusplus */

#endif 	/* __HTMLNavigator_FWD_DEFINED__ */


#ifndef __DispHTMLLocation_FWD_DEFINED__
#define __DispHTMLLocation_FWD_DEFINED__
typedef interface DispHTMLLocation DispHTMLLocation;
#endif 	/* __DispHTMLLocation_FWD_DEFINED__ */


#ifndef __HTMLLocation_FWD_DEFINED__
#define __HTMLLocation_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLocation HTMLLocation;
#else
typedef struct HTMLLocation HTMLLocation;
#endif /* __cplusplus */

#endif 	/* __HTMLLocation_FWD_DEFINED__ */


#ifndef __IHTMLBookmarkCollection_FWD_DEFINED__
#define __IHTMLBookmarkCollection_FWD_DEFINED__
typedef interface IHTMLBookmarkCollection IHTMLBookmarkCollection;
#endif 	/* __IHTMLBookmarkCollection_FWD_DEFINED__ */


#ifndef __IHTMLDataTransfer_FWD_DEFINED__
#define __IHTMLDataTransfer_FWD_DEFINED__
typedef interface IHTMLDataTransfer IHTMLDataTransfer;
#endif 	/* __IHTMLDataTransfer_FWD_DEFINED__ */


#ifndef __IHTMLEventObj2_FWD_DEFINED__
#define __IHTMLEventObj2_FWD_DEFINED__
typedef interface IHTMLEventObj2 IHTMLEventObj2;
#endif 	/* __IHTMLEventObj2_FWD_DEFINED__ */


#ifndef __IHTMLEventObj3_FWD_DEFINED__
#define __IHTMLEventObj3_FWD_DEFINED__
typedef interface IHTMLEventObj3 IHTMLEventObj3;
#endif 	/* __IHTMLEventObj3_FWD_DEFINED__ */


#ifndef __IHTMLEventObj4_FWD_DEFINED__
#define __IHTMLEventObj4_FWD_DEFINED__
typedef interface IHTMLEventObj4 IHTMLEventObj4;
#endif 	/* __IHTMLEventObj4_FWD_DEFINED__ */


#ifndef __IHTMLEventObj5_FWD_DEFINED__
#define __IHTMLEventObj5_FWD_DEFINED__
typedef interface IHTMLEventObj5 IHTMLEventObj5;
#endif 	/* __IHTMLEventObj5_FWD_DEFINED__ */


#ifndef __DispCEventObj_FWD_DEFINED__
#define __DispCEventObj_FWD_DEFINED__
typedef interface DispCEventObj DispCEventObj;
#endif 	/* __DispCEventObj_FWD_DEFINED__ */


#ifndef __CEventObj_FWD_DEFINED__
#define __CEventObj_FWD_DEFINED__

#ifdef __cplusplus
typedef class CEventObj CEventObj;
#else
typedef struct CEventObj CEventObj;
#endif /* __cplusplus */

#endif 	/* __CEventObj_FWD_DEFINED__ */


#ifndef __HTMLWindowEvents3_FWD_DEFINED__
#define __HTMLWindowEvents3_FWD_DEFINED__
typedef interface HTMLWindowEvents3 HTMLWindowEvents3;
#endif 	/* __HTMLWindowEvents3_FWD_DEFINED__ */


#ifndef __HTMLWindowEvents2_FWD_DEFINED__
#define __HTMLWindowEvents2_FWD_DEFINED__
typedef interface HTMLWindowEvents2 HTMLWindowEvents2;
#endif 	/* __HTMLWindowEvents2_FWD_DEFINED__ */


#ifndef __HTMLWindowEvents_FWD_DEFINED__
#define __HTMLWindowEvents_FWD_DEFINED__
typedef interface HTMLWindowEvents HTMLWindowEvents;
#endif 	/* __HTMLWindowEvents_FWD_DEFINED__ */


#ifndef __IHTMLDocument2_FWD_DEFINED__
#define __IHTMLDocument2_FWD_DEFINED__
typedef interface IHTMLDocument2 IHTMLDocument2;
#endif 	/* __IHTMLDocument2_FWD_DEFINED__ */


#ifndef __IHTMLFramesCollection2_FWD_DEFINED__
#define __IHTMLFramesCollection2_FWD_DEFINED__
typedef interface IHTMLFramesCollection2 IHTMLFramesCollection2;
#endif 	/* __IHTMLFramesCollection2_FWD_DEFINED__ */


#ifndef __IHTMLWindow2_FWD_DEFINED__
#define __IHTMLWindow2_FWD_DEFINED__
typedef interface IHTMLWindow2 IHTMLWindow2;
#endif 	/* __IHTMLWindow2_FWD_DEFINED__ */


#ifndef __IHTMLWindow3_FWD_DEFINED__
#define __IHTMLWindow3_FWD_DEFINED__
typedef interface IHTMLWindow3 IHTMLWindow3;
#endif 	/* __IHTMLWindow3_FWD_DEFINED__ */


#ifndef __IHTMLFrameBase_FWD_DEFINED__
#define __IHTMLFrameBase_FWD_DEFINED__
typedef interface IHTMLFrameBase IHTMLFrameBase;
#endif 	/* __IHTMLFrameBase_FWD_DEFINED__ */


#ifndef __IHTMLStorage_FWD_DEFINED__
#define __IHTMLStorage_FWD_DEFINED__
typedef interface IHTMLStorage IHTMLStorage;
#endif 	/* __IHTMLStorage_FWD_DEFINED__ */


#ifndef __IHTMLScreen_FWD_DEFINED__
#define __IHTMLScreen_FWD_DEFINED__
typedef interface IHTMLScreen IHTMLScreen;
#endif 	/* __IHTMLScreen_FWD_DEFINED__ */


#ifndef __IHTMLScreen2_FWD_DEFINED__
#define __IHTMLScreen2_FWD_DEFINED__
typedef interface IHTMLScreen2 IHTMLScreen2;
#endif 	/* __IHTMLScreen2_FWD_DEFINED__ */


#ifndef __IHTMLScreen3_FWD_DEFINED__
#define __IHTMLScreen3_FWD_DEFINED__
typedef interface IHTMLScreen3 IHTMLScreen3;
#endif 	/* __IHTMLScreen3_FWD_DEFINED__ */


#ifndef __IHTMLWindow4_FWD_DEFINED__
#define __IHTMLWindow4_FWD_DEFINED__
typedef interface IHTMLWindow4 IHTMLWindow4;
#endif 	/* __IHTMLWindow4_FWD_DEFINED__ */


#ifndef __IHTMLWindow5_FWD_DEFINED__
#define __IHTMLWindow5_FWD_DEFINED__
typedef interface IHTMLWindow5 IHTMLWindow5;
#endif 	/* __IHTMLWindow5_FWD_DEFINED__ */


#ifndef __IHTMLWindow6_FWD_DEFINED__
#define __IHTMLWindow6_FWD_DEFINED__
typedef interface IHTMLWindow6 IHTMLWindow6;
#endif 	/* __IHTMLWindow6_FWD_DEFINED__ */


#ifndef __FramesCollection_FWD_DEFINED__
#define __FramesCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class FramesCollection FramesCollection;
#else
typedef struct FramesCollection FramesCollection;
#endif /* __cplusplus */

#endif 	/* __FramesCollection_FWD_DEFINED__ */


#ifndef __DispHTMLScreen_FWD_DEFINED__
#define __DispHTMLScreen_FWD_DEFINED__
typedef interface DispHTMLScreen DispHTMLScreen;
#endif 	/* __DispHTMLScreen_FWD_DEFINED__ */


#ifndef __HTMLScreen_FWD_DEFINED__
#define __HTMLScreen_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLScreen HTMLScreen;
#else
typedef struct HTMLScreen HTMLScreen;
#endif /* __cplusplus */

#endif 	/* __HTMLScreen_FWD_DEFINED__ */


#ifndef __DispHTMLWindow2_FWD_DEFINED__
#define __DispHTMLWindow2_FWD_DEFINED__
typedef interface DispHTMLWindow2 DispHTMLWindow2;
#endif 	/* __DispHTMLWindow2_FWD_DEFINED__ */


#ifndef __HTMLWindow2_FWD_DEFINED__
#define __HTMLWindow2_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLWindow2 HTMLWindow2;
#else
typedef struct HTMLWindow2 HTMLWindow2;
#endif /* __cplusplus */

#endif 	/* __HTMLWindow2_FWD_DEFINED__ */


#ifndef __DispHTMLWindowProxy_FWD_DEFINED__
#define __DispHTMLWindowProxy_FWD_DEFINED__
typedef interface DispHTMLWindowProxy DispHTMLWindowProxy;
#endif 	/* __DispHTMLWindowProxy_FWD_DEFINED__ */


#ifndef __HTMLWindowProxy_FWD_DEFINED__
#define __HTMLWindowProxy_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLWindowProxy HTMLWindowProxy;
#else
typedef struct HTMLWindowProxy HTMLWindowProxy;
#endif /* __cplusplus */

#endif 	/* __HTMLWindowProxy_FWD_DEFINED__ */


#ifndef __IHTMLDocumentCompatibleInfo_FWD_DEFINED__
#define __IHTMLDocumentCompatibleInfo_FWD_DEFINED__
typedef interface IHTMLDocumentCompatibleInfo IHTMLDocumentCompatibleInfo;
#endif 	/* __IHTMLDocumentCompatibleInfo_FWD_DEFINED__ */


#ifndef __IHTMLDocumentCompatibleInfoCollection_FWD_DEFINED__
#define __IHTMLDocumentCompatibleInfoCollection_FWD_DEFINED__
typedef interface IHTMLDocumentCompatibleInfoCollection IHTMLDocumentCompatibleInfoCollection;
#endif 	/* __IHTMLDocumentCompatibleInfoCollection_FWD_DEFINED__ */


#ifndef __DispHTMLDocumentCompatibleInfo_FWD_DEFINED__
#define __DispHTMLDocumentCompatibleInfo_FWD_DEFINED__
typedef interface DispHTMLDocumentCompatibleInfo DispHTMLDocumentCompatibleInfo;
#endif 	/* __DispHTMLDocumentCompatibleInfo_FWD_DEFINED__ */


#ifndef __HTMLDocumentCompatibleInfo_FWD_DEFINED__
#define __HTMLDocumentCompatibleInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDocumentCompatibleInfo HTMLDocumentCompatibleInfo;
#else
typedef struct HTMLDocumentCompatibleInfo HTMLDocumentCompatibleInfo;
#endif /* __cplusplus */

#endif 	/* __HTMLDocumentCompatibleInfo_FWD_DEFINED__ */


#ifndef __DispHTMLDocumentCompatibleInfoCollection_FWD_DEFINED__
#define __DispHTMLDocumentCompatibleInfoCollection_FWD_DEFINED__
typedef interface DispHTMLDocumentCompatibleInfoCollection DispHTMLDocumentCompatibleInfoCollection;
#endif 	/* __DispHTMLDocumentCompatibleInfoCollection_FWD_DEFINED__ */


#ifndef __HTMLDocumentCompatibleInfoCollection_FWD_DEFINED__
#define __HTMLDocumentCompatibleInfoCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDocumentCompatibleInfoCollection HTMLDocumentCompatibleInfoCollection;
#else
typedef struct HTMLDocumentCompatibleInfoCollection HTMLDocumentCompatibleInfoCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLDocumentCompatibleInfoCollection_FWD_DEFINED__ */


#ifndef __HTMLDocumentEvents3_FWD_DEFINED__
#define __HTMLDocumentEvents3_FWD_DEFINED__
typedef interface HTMLDocumentEvents3 HTMLDocumentEvents3;
#endif 	/* __HTMLDocumentEvents3_FWD_DEFINED__ */


#ifndef __HTMLDocumentEvents2_FWD_DEFINED__
#define __HTMLDocumentEvents2_FWD_DEFINED__
typedef interface HTMLDocumentEvents2 HTMLDocumentEvents2;
#endif 	/* __HTMLDocumentEvents2_FWD_DEFINED__ */


#ifndef __HTMLDocumentEvents_FWD_DEFINED__
#define __HTMLDocumentEvents_FWD_DEFINED__
typedef interface HTMLDocumentEvents HTMLDocumentEvents;
#endif 	/* __HTMLDocumentEvents_FWD_DEFINED__ */


#ifndef __IHTMLDocument3_FWD_DEFINED__
#define __IHTMLDocument3_FWD_DEFINED__
typedef interface IHTMLDocument3 IHTMLDocument3;
#endif 	/* __IHTMLDocument3_FWD_DEFINED__ */


#ifndef __IHTMLDocument4_FWD_DEFINED__
#define __IHTMLDocument4_FWD_DEFINED__
typedef interface IHTMLDocument4 IHTMLDocument4;
#endif 	/* __IHTMLDocument4_FWD_DEFINED__ */


#ifndef __IHTMLDocument5_FWD_DEFINED__
#define __IHTMLDocument5_FWD_DEFINED__
typedef interface IHTMLDocument5 IHTMLDocument5;
#endif 	/* __IHTMLDocument5_FWD_DEFINED__ */


#ifndef __IHTMLDocument6_FWD_DEFINED__
#define __IHTMLDocument6_FWD_DEFINED__
typedef interface IHTMLDocument6 IHTMLDocument6;
#endif 	/* __IHTMLDocument6_FWD_DEFINED__ */


#ifndef __IDocumentSelector_FWD_DEFINED__
#define __IDocumentSelector_FWD_DEFINED__
typedef interface IDocumentSelector IDocumentSelector;
#endif 	/* __IDocumentSelector_FWD_DEFINED__ */


#ifndef __DispHTMLDocument_FWD_DEFINED__
#define __DispHTMLDocument_FWD_DEFINED__
typedef interface DispHTMLDocument DispHTMLDocument;
#endif 	/* __DispHTMLDocument_FWD_DEFINED__ */


#ifndef __HTMLDocument_FWD_DEFINED__
#define __HTMLDocument_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDocument HTMLDocument;
#else
typedef struct HTMLDocument HTMLDocument;
#endif /* __cplusplus */

#endif 	/* __HTMLDocument_FWD_DEFINED__ */


#ifndef __DWebBridgeEvents_FWD_DEFINED__
#define __DWebBridgeEvents_FWD_DEFINED__
typedef interface DWebBridgeEvents DWebBridgeEvents;
#endif 	/* __DWebBridgeEvents_FWD_DEFINED__ */


#ifndef __IWebBridge_FWD_DEFINED__
#define __IWebBridge_FWD_DEFINED__
typedef interface IWebBridge IWebBridge;
#endif 	/* __IWebBridge_FWD_DEFINED__ */


#ifndef __IWBScriptControl_FWD_DEFINED__
#define __IWBScriptControl_FWD_DEFINED__
typedef interface IWBScriptControl IWBScriptControl;
#endif 	/* __IWBScriptControl_FWD_DEFINED__ */


#ifndef __Scriptlet_FWD_DEFINED__
#define __Scriptlet_FWD_DEFINED__

#ifdef __cplusplus
typedef class Scriptlet Scriptlet;
#else
typedef struct Scriptlet Scriptlet;
#endif /* __cplusplus */

#endif 	/* __Scriptlet_FWD_DEFINED__ */


#ifndef __IHTMLEmbedElement_FWD_DEFINED__
#define __IHTMLEmbedElement_FWD_DEFINED__
typedef interface IHTMLEmbedElement IHTMLEmbedElement;
#endif 	/* __IHTMLEmbedElement_FWD_DEFINED__ */


#ifndef __IHTMLEmbedElement2_FWD_DEFINED__
#define __IHTMLEmbedElement2_FWD_DEFINED__
typedef interface IHTMLEmbedElement2 IHTMLEmbedElement2;
#endif 	/* __IHTMLEmbedElement2_FWD_DEFINED__ */


#ifndef __DispHTMLEmbed_FWD_DEFINED__
#define __DispHTMLEmbed_FWD_DEFINED__
typedef interface DispHTMLEmbed DispHTMLEmbed;
#endif 	/* __DispHTMLEmbed_FWD_DEFINED__ */


#ifndef __HTMLEmbed_FWD_DEFINED__
#define __HTMLEmbed_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLEmbed HTMLEmbed;
#else
typedef struct HTMLEmbed HTMLEmbed;
#endif /* __cplusplus */

#endif 	/* __HTMLEmbed_FWD_DEFINED__ */


#ifndef __HTMLMapEvents2_FWD_DEFINED__
#define __HTMLMapEvents2_FWD_DEFINED__
typedef interface HTMLMapEvents2 HTMLMapEvents2;
#endif 	/* __HTMLMapEvents2_FWD_DEFINED__ */


#ifndef __HTMLMapEvents_FWD_DEFINED__
#define __HTMLMapEvents_FWD_DEFINED__
typedef interface HTMLMapEvents HTMLMapEvents;
#endif 	/* __HTMLMapEvents_FWD_DEFINED__ */


#ifndef __IHTMLAreasCollection_FWD_DEFINED__
#define __IHTMLAreasCollection_FWD_DEFINED__
typedef interface IHTMLAreasCollection IHTMLAreasCollection;
#endif 	/* __IHTMLAreasCollection_FWD_DEFINED__ */


#ifndef __IHTMLAreasCollection2_FWD_DEFINED__
#define __IHTMLAreasCollection2_FWD_DEFINED__
typedef interface IHTMLAreasCollection2 IHTMLAreasCollection2;
#endif 	/* __IHTMLAreasCollection2_FWD_DEFINED__ */


#ifndef __IHTMLAreasCollection3_FWD_DEFINED__
#define __IHTMLAreasCollection3_FWD_DEFINED__
typedef interface IHTMLAreasCollection3 IHTMLAreasCollection3;
#endif 	/* __IHTMLAreasCollection3_FWD_DEFINED__ */


#ifndef __IHTMLAreasCollection4_FWD_DEFINED__
#define __IHTMLAreasCollection4_FWD_DEFINED__
typedef interface IHTMLAreasCollection4 IHTMLAreasCollection4;
#endif 	/* __IHTMLAreasCollection4_FWD_DEFINED__ */


#ifndef __IHTMLMapElement_FWD_DEFINED__
#define __IHTMLMapElement_FWD_DEFINED__
typedef interface IHTMLMapElement IHTMLMapElement;
#endif 	/* __IHTMLMapElement_FWD_DEFINED__ */


#ifndef __DispHTMLAreasCollection_FWD_DEFINED__
#define __DispHTMLAreasCollection_FWD_DEFINED__
typedef interface DispHTMLAreasCollection DispHTMLAreasCollection;
#endif 	/* __DispHTMLAreasCollection_FWD_DEFINED__ */


#ifndef __HTMLAreasCollection_FWD_DEFINED__
#define __HTMLAreasCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAreasCollection HTMLAreasCollection;
#else
typedef struct HTMLAreasCollection HTMLAreasCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLAreasCollection_FWD_DEFINED__ */


#ifndef __DispHTMLMapElement_FWD_DEFINED__
#define __DispHTMLMapElement_FWD_DEFINED__
typedef interface DispHTMLMapElement DispHTMLMapElement;
#endif 	/* __DispHTMLMapElement_FWD_DEFINED__ */


#ifndef __HTMLMapElement_FWD_DEFINED__
#define __HTMLMapElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLMapElement HTMLMapElement;
#else
typedef struct HTMLMapElement HTMLMapElement;
#endif /* __cplusplus */

#endif 	/* __HTMLMapElement_FWD_DEFINED__ */


#ifndef __HTMLAreaEvents2_FWD_DEFINED__
#define __HTMLAreaEvents2_FWD_DEFINED__
typedef interface HTMLAreaEvents2 HTMLAreaEvents2;
#endif 	/* __HTMLAreaEvents2_FWD_DEFINED__ */


#ifndef __HTMLAreaEvents_FWD_DEFINED__
#define __HTMLAreaEvents_FWD_DEFINED__
typedef interface HTMLAreaEvents HTMLAreaEvents;
#endif 	/* __HTMLAreaEvents_FWD_DEFINED__ */


#ifndef __IHTMLAreaElement_FWD_DEFINED__
#define __IHTMLAreaElement_FWD_DEFINED__
typedef interface IHTMLAreaElement IHTMLAreaElement;
#endif 	/* __IHTMLAreaElement_FWD_DEFINED__ */


#ifndef __IHTMLAreaElement2_FWD_DEFINED__
#define __IHTMLAreaElement2_FWD_DEFINED__
typedef interface IHTMLAreaElement2 IHTMLAreaElement2;
#endif 	/* __IHTMLAreaElement2_FWD_DEFINED__ */


#ifndef __DispHTMLAreaElement_FWD_DEFINED__
#define __DispHTMLAreaElement_FWD_DEFINED__
typedef interface DispHTMLAreaElement DispHTMLAreaElement;
#endif 	/* __DispHTMLAreaElement_FWD_DEFINED__ */


#ifndef __HTMLAreaElement_FWD_DEFINED__
#define __HTMLAreaElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAreaElement HTMLAreaElement;
#else
typedef struct HTMLAreaElement HTMLAreaElement;
#endif /* __cplusplus */

#endif 	/* __HTMLAreaElement_FWD_DEFINED__ */


#ifndef __IHTMLTableCaption_FWD_DEFINED__
#define __IHTMLTableCaption_FWD_DEFINED__
typedef interface IHTMLTableCaption IHTMLTableCaption;
#endif 	/* __IHTMLTableCaption_FWD_DEFINED__ */


#ifndef __DispHTMLTableCaption_FWD_DEFINED__
#define __DispHTMLTableCaption_FWD_DEFINED__
typedef interface DispHTMLTableCaption DispHTMLTableCaption;
#endif 	/* __DispHTMLTableCaption_FWD_DEFINED__ */


#ifndef __HTMLTableCaption_FWD_DEFINED__
#define __HTMLTableCaption_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableCaption HTMLTableCaption;
#else
typedef struct HTMLTableCaption HTMLTableCaption;
#endif /* __cplusplus */

#endif 	/* __HTMLTableCaption_FWD_DEFINED__ */


#ifndef __IHTMLCommentElement_FWD_DEFINED__
#define __IHTMLCommentElement_FWD_DEFINED__
typedef interface IHTMLCommentElement IHTMLCommentElement;
#endif 	/* __IHTMLCommentElement_FWD_DEFINED__ */


#ifndef __IHTMLCommentElement2_FWD_DEFINED__
#define __IHTMLCommentElement2_FWD_DEFINED__
typedef interface IHTMLCommentElement2 IHTMLCommentElement2;
#endif 	/* __IHTMLCommentElement2_FWD_DEFINED__ */


#ifndef __DispHTMLCommentElement_FWD_DEFINED__
#define __DispHTMLCommentElement_FWD_DEFINED__
typedef interface DispHTMLCommentElement DispHTMLCommentElement;
#endif 	/* __DispHTMLCommentElement_FWD_DEFINED__ */


#ifndef __HTMLCommentElement_FWD_DEFINED__
#define __HTMLCommentElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLCommentElement HTMLCommentElement;
#else
typedef struct HTMLCommentElement HTMLCommentElement;
#endif /* __cplusplus */

#endif 	/* __HTMLCommentElement_FWD_DEFINED__ */


#ifndef __IHTMLPhraseElement_FWD_DEFINED__
#define __IHTMLPhraseElement_FWD_DEFINED__
typedef interface IHTMLPhraseElement IHTMLPhraseElement;
#endif 	/* __IHTMLPhraseElement_FWD_DEFINED__ */


#ifndef __IHTMLPhraseElement2_FWD_DEFINED__
#define __IHTMLPhraseElement2_FWD_DEFINED__
typedef interface IHTMLPhraseElement2 IHTMLPhraseElement2;
#endif 	/* __IHTMLPhraseElement2_FWD_DEFINED__ */


#ifndef __IHTMLPhraseElement3_FWD_DEFINED__
#define __IHTMLPhraseElement3_FWD_DEFINED__
typedef interface IHTMLPhraseElement3 IHTMLPhraseElement3;
#endif 	/* __IHTMLPhraseElement3_FWD_DEFINED__ */


#ifndef __IHTMLSpanElement_FWD_DEFINED__
#define __IHTMLSpanElement_FWD_DEFINED__
typedef interface IHTMLSpanElement IHTMLSpanElement;
#endif 	/* __IHTMLSpanElement_FWD_DEFINED__ */


#ifndef __DispHTMLPhraseElement_FWD_DEFINED__
#define __DispHTMLPhraseElement_FWD_DEFINED__
typedef interface DispHTMLPhraseElement DispHTMLPhraseElement;
#endif 	/* __DispHTMLPhraseElement_FWD_DEFINED__ */


#ifndef __HTMLPhraseElement_FWD_DEFINED__
#define __HTMLPhraseElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLPhraseElement HTMLPhraseElement;
#else
typedef struct HTMLPhraseElement HTMLPhraseElement;
#endif /* __cplusplus */

#endif 	/* __HTMLPhraseElement_FWD_DEFINED__ */


#ifndef __DispHTMLSpanElement_FWD_DEFINED__
#define __DispHTMLSpanElement_FWD_DEFINED__
typedef interface DispHTMLSpanElement DispHTMLSpanElement;
#endif 	/* __DispHTMLSpanElement_FWD_DEFINED__ */


#ifndef __HTMLSpanElement_FWD_DEFINED__
#define __HTMLSpanElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLSpanElement HTMLSpanElement;
#else
typedef struct HTMLSpanElement HTMLSpanElement;
#endif /* __cplusplus */

#endif 	/* __HTMLSpanElement_FWD_DEFINED__ */


#ifndef __HTMLTableEvents2_FWD_DEFINED__
#define __HTMLTableEvents2_FWD_DEFINED__
typedef interface HTMLTableEvents2 HTMLTableEvents2;
#endif 	/* __HTMLTableEvents2_FWD_DEFINED__ */


#ifndef __HTMLTableEvents_FWD_DEFINED__
#define __HTMLTableEvents_FWD_DEFINED__
typedef interface HTMLTableEvents HTMLTableEvents;
#endif 	/* __HTMLTableEvents_FWD_DEFINED__ */


#ifndef __IHTMLTableSection_FWD_DEFINED__
#define __IHTMLTableSection_FWD_DEFINED__
typedef interface IHTMLTableSection IHTMLTableSection;
#endif 	/* __IHTMLTableSection_FWD_DEFINED__ */


#ifndef __IHTMLTable_FWD_DEFINED__
#define __IHTMLTable_FWD_DEFINED__
typedef interface IHTMLTable IHTMLTable;
#endif 	/* __IHTMLTable_FWD_DEFINED__ */


#ifndef __IHTMLTable2_FWD_DEFINED__
#define __IHTMLTable2_FWD_DEFINED__
typedef interface IHTMLTable2 IHTMLTable2;
#endif 	/* __IHTMLTable2_FWD_DEFINED__ */


#ifndef __IHTMLTable3_FWD_DEFINED__
#define __IHTMLTable3_FWD_DEFINED__
typedef interface IHTMLTable3 IHTMLTable3;
#endif 	/* __IHTMLTable3_FWD_DEFINED__ */


#ifndef __IHTMLTableCol_FWD_DEFINED__
#define __IHTMLTableCol_FWD_DEFINED__
typedef interface IHTMLTableCol IHTMLTableCol;
#endif 	/* __IHTMLTableCol_FWD_DEFINED__ */


#ifndef __IHTMLTableCol2_FWD_DEFINED__
#define __IHTMLTableCol2_FWD_DEFINED__
typedef interface IHTMLTableCol2 IHTMLTableCol2;
#endif 	/* __IHTMLTableCol2_FWD_DEFINED__ */


#ifndef __IHTMLTableSection2_FWD_DEFINED__
#define __IHTMLTableSection2_FWD_DEFINED__
typedef interface IHTMLTableSection2 IHTMLTableSection2;
#endif 	/* __IHTMLTableSection2_FWD_DEFINED__ */


#ifndef __IHTMLTableSection3_FWD_DEFINED__
#define __IHTMLTableSection3_FWD_DEFINED__
typedef interface IHTMLTableSection3 IHTMLTableSection3;
#endif 	/* __IHTMLTableSection3_FWD_DEFINED__ */


#ifndef __IHTMLTableRow_FWD_DEFINED__
#define __IHTMLTableRow_FWD_DEFINED__
typedef interface IHTMLTableRow IHTMLTableRow;
#endif 	/* __IHTMLTableRow_FWD_DEFINED__ */


#ifndef __IHTMLTableRow2_FWD_DEFINED__
#define __IHTMLTableRow2_FWD_DEFINED__
typedef interface IHTMLTableRow2 IHTMLTableRow2;
#endif 	/* __IHTMLTableRow2_FWD_DEFINED__ */


#ifndef __IHTMLTableRow3_FWD_DEFINED__
#define __IHTMLTableRow3_FWD_DEFINED__
typedef interface IHTMLTableRow3 IHTMLTableRow3;
#endif 	/* __IHTMLTableRow3_FWD_DEFINED__ */


#ifndef __IHTMLTableRowMetrics_FWD_DEFINED__
#define __IHTMLTableRowMetrics_FWD_DEFINED__
typedef interface IHTMLTableRowMetrics IHTMLTableRowMetrics;
#endif 	/* __IHTMLTableRowMetrics_FWD_DEFINED__ */


#ifndef __IHTMLTableCell_FWD_DEFINED__
#define __IHTMLTableCell_FWD_DEFINED__
typedef interface IHTMLTableCell IHTMLTableCell;
#endif 	/* __IHTMLTableCell_FWD_DEFINED__ */


#ifndef __IHTMLTableCell2_FWD_DEFINED__
#define __IHTMLTableCell2_FWD_DEFINED__
typedef interface IHTMLTableCell2 IHTMLTableCell2;
#endif 	/* __IHTMLTableCell2_FWD_DEFINED__ */


#ifndef __DispHTMLTable_FWD_DEFINED__
#define __DispHTMLTable_FWD_DEFINED__
typedef interface DispHTMLTable DispHTMLTable;
#endif 	/* __DispHTMLTable_FWD_DEFINED__ */


#ifndef __HTMLTable_FWD_DEFINED__
#define __HTMLTable_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTable HTMLTable;
#else
typedef struct HTMLTable HTMLTable;
#endif /* __cplusplus */

#endif 	/* __HTMLTable_FWD_DEFINED__ */


#ifndef __DispHTMLTableCol_FWD_DEFINED__
#define __DispHTMLTableCol_FWD_DEFINED__
typedef interface DispHTMLTableCol DispHTMLTableCol;
#endif 	/* __DispHTMLTableCol_FWD_DEFINED__ */


#ifndef __HTMLTableCol_FWD_DEFINED__
#define __HTMLTableCol_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableCol HTMLTableCol;
#else
typedef struct HTMLTableCol HTMLTableCol;
#endif /* __cplusplus */

#endif 	/* __HTMLTableCol_FWD_DEFINED__ */


#ifndef __DispHTMLTableSection_FWD_DEFINED__
#define __DispHTMLTableSection_FWD_DEFINED__
typedef interface DispHTMLTableSection DispHTMLTableSection;
#endif 	/* __DispHTMLTableSection_FWD_DEFINED__ */


#ifndef __HTMLTableSection_FWD_DEFINED__
#define __HTMLTableSection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableSection HTMLTableSection;
#else
typedef struct HTMLTableSection HTMLTableSection;
#endif /* __cplusplus */

#endif 	/* __HTMLTableSection_FWD_DEFINED__ */


#ifndef __DispHTMLTableRow_FWD_DEFINED__
#define __DispHTMLTableRow_FWD_DEFINED__
typedef interface DispHTMLTableRow DispHTMLTableRow;
#endif 	/* __DispHTMLTableRow_FWD_DEFINED__ */


#ifndef __HTMLTableRow_FWD_DEFINED__
#define __HTMLTableRow_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableRow HTMLTableRow;
#else
typedef struct HTMLTableRow HTMLTableRow;
#endif /* __cplusplus */

#endif 	/* __HTMLTableRow_FWD_DEFINED__ */


#ifndef __DispHTMLTableCell_FWD_DEFINED__
#define __DispHTMLTableCell_FWD_DEFINED__
typedef interface DispHTMLTableCell DispHTMLTableCell;
#endif 	/* __DispHTMLTableCell_FWD_DEFINED__ */


#ifndef __HTMLTableCell_FWD_DEFINED__
#define __HTMLTableCell_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableCell HTMLTableCell;
#else
typedef struct HTMLTableCell HTMLTableCell;
#endif /* __cplusplus */

#endif 	/* __HTMLTableCell_FWD_DEFINED__ */


#ifndef __HTMLScriptEvents2_FWD_DEFINED__
#define __HTMLScriptEvents2_FWD_DEFINED__
typedef interface HTMLScriptEvents2 HTMLScriptEvents2;
#endif 	/* __HTMLScriptEvents2_FWD_DEFINED__ */


#ifndef __HTMLScriptEvents_FWD_DEFINED__
#define __HTMLScriptEvents_FWD_DEFINED__
typedef interface HTMLScriptEvents HTMLScriptEvents;
#endif 	/* __HTMLScriptEvents_FWD_DEFINED__ */


#ifndef __IHTMLScriptElement_FWD_DEFINED__
#define __IHTMLScriptElement_FWD_DEFINED__
typedef interface IHTMLScriptElement IHTMLScriptElement;
#endif 	/* __IHTMLScriptElement_FWD_DEFINED__ */


#ifndef __IHTMLScriptElement2_FWD_DEFINED__
#define __IHTMLScriptElement2_FWD_DEFINED__
typedef interface IHTMLScriptElement2 IHTMLScriptElement2;
#endif 	/* __IHTMLScriptElement2_FWD_DEFINED__ */


#ifndef __IHTMLScriptElement3_FWD_DEFINED__
#define __IHTMLScriptElement3_FWD_DEFINED__
typedef interface IHTMLScriptElement3 IHTMLScriptElement3;
#endif 	/* __IHTMLScriptElement3_FWD_DEFINED__ */


#ifndef __DispHTMLScriptElement_FWD_DEFINED__
#define __DispHTMLScriptElement_FWD_DEFINED__
typedef interface DispHTMLScriptElement DispHTMLScriptElement;
#endif 	/* __DispHTMLScriptElement_FWD_DEFINED__ */


#ifndef __HTMLScriptElement_FWD_DEFINED__
#define __HTMLScriptElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLScriptElement HTMLScriptElement;
#else
typedef struct HTMLScriptElement HTMLScriptElement;
#endif /* __cplusplus */

#endif 	/* __HTMLScriptElement_FWD_DEFINED__ */


#ifndef __IHTMLNoShowElement_FWD_DEFINED__
#define __IHTMLNoShowElement_FWD_DEFINED__
typedef interface IHTMLNoShowElement IHTMLNoShowElement;
#endif 	/* __IHTMLNoShowElement_FWD_DEFINED__ */


#ifndef __DispHTMLNoShowElement_FWD_DEFINED__
#define __DispHTMLNoShowElement_FWD_DEFINED__
typedef interface DispHTMLNoShowElement DispHTMLNoShowElement;
#endif 	/* __DispHTMLNoShowElement_FWD_DEFINED__ */


#ifndef __HTMLNoShowElement_FWD_DEFINED__
#define __HTMLNoShowElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNoShowElement HTMLNoShowElement;
#else
typedef struct HTMLNoShowElement HTMLNoShowElement;
#endif /* __cplusplus */

#endif 	/* __HTMLNoShowElement_FWD_DEFINED__ */


#ifndef __HTMLObjectElementEvents2_FWD_DEFINED__
#define __HTMLObjectElementEvents2_FWD_DEFINED__
typedef interface HTMLObjectElementEvents2 HTMLObjectElementEvents2;
#endif 	/* __HTMLObjectElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLObjectElementEvents_FWD_DEFINED__
#define __HTMLObjectElementEvents_FWD_DEFINED__
typedef interface HTMLObjectElementEvents HTMLObjectElementEvents;
#endif 	/* __HTMLObjectElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLObjectElement_FWD_DEFINED__
#define __IHTMLObjectElement_FWD_DEFINED__
typedef interface IHTMLObjectElement IHTMLObjectElement;
#endif 	/* __IHTMLObjectElement_FWD_DEFINED__ */


#ifndef __IHTMLObjectElement2_FWD_DEFINED__
#define __IHTMLObjectElement2_FWD_DEFINED__
typedef interface IHTMLObjectElement2 IHTMLObjectElement2;
#endif 	/* __IHTMLObjectElement2_FWD_DEFINED__ */


#ifndef __IHTMLObjectElement3_FWD_DEFINED__
#define __IHTMLObjectElement3_FWD_DEFINED__
typedef interface IHTMLObjectElement3 IHTMLObjectElement3;
#endif 	/* __IHTMLObjectElement3_FWD_DEFINED__ */


#ifndef __IHTMLObjectElement4_FWD_DEFINED__
#define __IHTMLObjectElement4_FWD_DEFINED__
typedef interface IHTMLObjectElement4 IHTMLObjectElement4;
#endif 	/* __IHTMLObjectElement4_FWD_DEFINED__ */


#ifndef __IHTMLParamElement_FWD_DEFINED__
#define __IHTMLParamElement_FWD_DEFINED__
typedef interface IHTMLParamElement IHTMLParamElement;
#endif 	/* __IHTMLParamElement_FWD_DEFINED__ */


#ifndef __IHTMLParamElement2_FWD_DEFINED__
#define __IHTMLParamElement2_FWD_DEFINED__
typedef interface IHTMLParamElement2 IHTMLParamElement2;
#endif 	/* __IHTMLParamElement2_FWD_DEFINED__ */


#ifndef __DispHTMLObjectElement_FWD_DEFINED__
#define __DispHTMLObjectElement_FWD_DEFINED__
typedef interface DispHTMLObjectElement DispHTMLObjectElement;
#endif 	/* __DispHTMLObjectElement_FWD_DEFINED__ */


#ifndef __HTMLObjectElement_FWD_DEFINED__
#define __HTMLObjectElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLObjectElement HTMLObjectElement;
#else
typedef struct HTMLObjectElement HTMLObjectElement;
#endif /* __cplusplus */

#endif 	/* __HTMLObjectElement_FWD_DEFINED__ */


#ifndef __DispHTMLParamElement_FWD_DEFINED__
#define __DispHTMLParamElement_FWD_DEFINED__
typedef interface DispHTMLParamElement DispHTMLParamElement;
#endif 	/* __DispHTMLParamElement_FWD_DEFINED__ */


#ifndef __HTMLParamElement_FWD_DEFINED__
#define __HTMLParamElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLParamElement HTMLParamElement;
#else
typedef struct HTMLParamElement HTMLParamElement;
#endif /* __cplusplus */

#endif 	/* __HTMLParamElement_FWD_DEFINED__ */


#ifndef __HTMLFrameSiteEvents2_FWD_DEFINED__
#define __HTMLFrameSiteEvents2_FWD_DEFINED__
typedef interface HTMLFrameSiteEvents2 HTMLFrameSiteEvents2;
#endif 	/* __HTMLFrameSiteEvents2_FWD_DEFINED__ */


#ifndef __HTMLFrameSiteEvents_FWD_DEFINED__
#define __HTMLFrameSiteEvents_FWD_DEFINED__
typedef interface HTMLFrameSiteEvents HTMLFrameSiteEvents;
#endif 	/* __HTMLFrameSiteEvents_FWD_DEFINED__ */


#ifndef __IHTMLFrameBase2_FWD_DEFINED__
#define __IHTMLFrameBase2_FWD_DEFINED__
typedef interface IHTMLFrameBase2 IHTMLFrameBase2;
#endif 	/* __IHTMLFrameBase2_FWD_DEFINED__ */


#ifndef __IHTMLFrameBase3_FWD_DEFINED__
#define __IHTMLFrameBase3_FWD_DEFINED__
typedef interface IHTMLFrameBase3 IHTMLFrameBase3;
#endif 	/* __IHTMLFrameBase3_FWD_DEFINED__ */


#ifndef __DispHTMLFrameBase_FWD_DEFINED__
#define __DispHTMLFrameBase_FWD_DEFINED__
typedef interface DispHTMLFrameBase DispHTMLFrameBase;
#endif 	/* __DispHTMLFrameBase_FWD_DEFINED__ */


#ifndef __HTMLFrameBase_FWD_DEFINED__
#define __HTMLFrameBase_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFrameBase HTMLFrameBase;
#else
typedef struct HTMLFrameBase HTMLFrameBase;
#endif /* __cplusplus */

#endif 	/* __HTMLFrameBase_FWD_DEFINED__ */


#ifndef __IHTMLFrameElement_FWD_DEFINED__
#define __IHTMLFrameElement_FWD_DEFINED__
typedef interface IHTMLFrameElement IHTMLFrameElement;
#endif 	/* __IHTMLFrameElement_FWD_DEFINED__ */


#ifndef __IHTMLFrameElement2_FWD_DEFINED__
#define __IHTMLFrameElement2_FWD_DEFINED__
typedef interface IHTMLFrameElement2 IHTMLFrameElement2;
#endif 	/* __IHTMLFrameElement2_FWD_DEFINED__ */


#ifndef __IHTMLFrameElement3_FWD_DEFINED__
#define __IHTMLFrameElement3_FWD_DEFINED__
typedef interface IHTMLFrameElement3 IHTMLFrameElement3;
#endif 	/* __IHTMLFrameElement3_FWD_DEFINED__ */


#ifndef __DispHTMLFrameElement_FWD_DEFINED__
#define __DispHTMLFrameElement_FWD_DEFINED__
typedef interface DispHTMLFrameElement DispHTMLFrameElement;
#endif 	/* __DispHTMLFrameElement_FWD_DEFINED__ */


#ifndef __HTMLFrameElement_FWD_DEFINED__
#define __HTMLFrameElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFrameElement HTMLFrameElement;
#else
typedef struct HTMLFrameElement HTMLFrameElement;
#endif /* __cplusplus */

#endif 	/* __HTMLFrameElement_FWD_DEFINED__ */


#ifndef __IHTMLIFrameElement_FWD_DEFINED__
#define __IHTMLIFrameElement_FWD_DEFINED__
typedef interface IHTMLIFrameElement IHTMLIFrameElement;
#endif 	/* __IHTMLIFrameElement_FWD_DEFINED__ */


#ifndef __IHTMLIFrameElement2_FWD_DEFINED__
#define __IHTMLIFrameElement2_FWD_DEFINED__
typedef interface IHTMLIFrameElement2 IHTMLIFrameElement2;
#endif 	/* __IHTMLIFrameElement2_FWD_DEFINED__ */


#ifndef __IHTMLIFrameElement3_FWD_DEFINED__
#define __IHTMLIFrameElement3_FWD_DEFINED__
typedef interface IHTMLIFrameElement3 IHTMLIFrameElement3;
#endif 	/* __IHTMLIFrameElement3_FWD_DEFINED__ */


#ifndef __DispHTMLIFrame_FWD_DEFINED__
#define __DispHTMLIFrame_FWD_DEFINED__
typedef interface DispHTMLIFrame DispHTMLIFrame;
#endif 	/* __DispHTMLIFrame_FWD_DEFINED__ */


#ifndef __HTMLIFrame_FWD_DEFINED__
#define __HTMLIFrame_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLIFrame HTMLIFrame;
#else
typedef struct HTMLIFrame HTMLIFrame;
#endif /* __cplusplus */

#endif 	/* __HTMLIFrame_FWD_DEFINED__ */


#ifndef __IHTMLDivPosition_FWD_DEFINED__
#define __IHTMLDivPosition_FWD_DEFINED__
typedef interface IHTMLDivPosition IHTMLDivPosition;
#endif 	/* __IHTMLDivPosition_FWD_DEFINED__ */


#ifndef __IHTMLFieldSetElement_FWD_DEFINED__
#define __IHTMLFieldSetElement_FWD_DEFINED__
typedef interface IHTMLFieldSetElement IHTMLFieldSetElement;
#endif 	/* __IHTMLFieldSetElement_FWD_DEFINED__ */


#ifndef __IHTMLFieldSetElement2_FWD_DEFINED__
#define __IHTMLFieldSetElement2_FWD_DEFINED__
typedef interface IHTMLFieldSetElement2 IHTMLFieldSetElement2;
#endif 	/* __IHTMLFieldSetElement2_FWD_DEFINED__ */


#ifndef __IHTMLLegendElement_FWD_DEFINED__
#define __IHTMLLegendElement_FWD_DEFINED__
typedef interface IHTMLLegendElement IHTMLLegendElement;
#endif 	/* __IHTMLLegendElement_FWD_DEFINED__ */


#ifndef __IHTMLLegendElement2_FWD_DEFINED__
#define __IHTMLLegendElement2_FWD_DEFINED__
typedef interface IHTMLLegendElement2 IHTMLLegendElement2;
#endif 	/* __IHTMLLegendElement2_FWD_DEFINED__ */


#ifndef __DispHTMLDivPosition_FWD_DEFINED__
#define __DispHTMLDivPosition_FWD_DEFINED__
typedef interface DispHTMLDivPosition DispHTMLDivPosition;
#endif 	/* __DispHTMLDivPosition_FWD_DEFINED__ */


#ifndef __HTMLDivPosition_FWD_DEFINED__
#define __HTMLDivPosition_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDivPosition HTMLDivPosition;
#else
typedef struct HTMLDivPosition HTMLDivPosition;
#endif /* __cplusplus */

#endif 	/* __HTMLDivPosition_FWD_DEFINED__ */


#ifndef __DispHTMLFieldSetElement_FWD_DEFINED__
#define __DispHTMLFieldSetElement_FWD_DEFINED__
typedef interface DispHTMLFieldSetElement DispHTMLFieldSetElement;
#endif 	/* __DispHTMLFieldSetElement_FWD_DEFINED__ */


#ifndef __HTMLFieldSetElement_FWD_DEFINED__
#define __HTMLFieldSetElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFieldSetElement HTMLFieldSetElement;
#else
typedef struct HTMLFieldSetElement HTMLFieldSetElement;
#endif /* __cplusplus */

#endif 	/* __HTMLFieldSetElement_FWD_DEFINED__ */


#ifndef __DispHTMLLegendElement_FWD_DEFINED__
#define __DispHTMLLegendElement_FWD_DEFINED__
typedef interface DispHTMLLegendElement DispHTMLLegendElement;
#endif 	/* __DispHTMLLegendElement_FWD_DEFINED__ */


#ifndef __HTMLLegendElement_FWD_DEFINED__
#define __HTMLLegendElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLegendElement HTMLLegendElement;
#else
typedef struct HTMLLegendElement HTMLLegendElement;
#endif /* __cplusplus */

#endif 	/* __HTMLLegendElement_FWD_DEFINED__ */


#ifndef __IHTMLSpanFlow_FWD_DEFINED__
#define __IHTMLSpanFlow_FWD_DEFINED__
typedef interface IHTMLSpanFlow IHTMLSpanFlow;
#endif 	/* __IHTMLSpanFlow_FWD_DEFINED__ */


#ifndef __DispHTMLSpanFlow_FWD_DEFINED__
#define __DispHTMLSpanFlow_FWD_DEFINED__
typedef interface DispHTMLSpanFlow DispHTMLSpanFlow;
#endif 	/* __DispHTMLSpanFlow_FWD_DEFINED__ */


#ifndef __HTMLSpanFlow_FWD_DEFINED__
#define __HTMLSpanFlow_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLSpanFlow HTMLSpanFlow;
#else
typedef struct HTMLSpanFlow HTMLSpanFlow;
#endif /* __cplusplus */

#endif 	/* __HTMLSpanFlow_FWD_DEFINED__ */


#ifndef __IHTMLFrameSetElement_FWD_DEFINED__
#define __IHTMLFrameSetElement_FWD_DEFINED__
typedef interface IHTMLFrameSetElement IHTMLFrameSetElement;
#endif 	/* __IHTMLFrameSetElement_FWD_DEFINED__ */


#ifndef __IHTMLFrameSetElement2_FWD_DEFINED__
#define __IHTMLFrameSetElement2_FWD_DEFINED__
typedef interface IHTMLFrameSetElement2 IHTMLFrameSetElement2;
#endif 	/* __IHTMLFrameSetElement2_FWD_DEFINED__ */


#ifndef __DispHTMLFrameSetSite_FWD_DEFINED__
#define __DispHTMLFrameSetSite_FWD_DEFINED__
typedef interface DispHTMLFrameSetSite DispHTMLFrameSetSite;
#endif 	/* __DispHTMLFrameSetSite_FWD_DEFINED__ */


#ifndef __HTMLFrameSetSite_FWD_DEFINED__
#define __HTMLFrameSetSite_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFrameSetSite HTMLFrameSetSite;
#else
typedef struct HTMLFrameSetSite HTMLFrameSetSite;
#endif /* __cplusplus */

#endif 	/* __HTMLFrameSetSite_FWD_DEFINED__ */


#ifndef __IHTMLBGsound_FWD_DEFINED__
#define __IHTMLBGsound_FWD_DEFINED__
typedef interface IHTMLBGsound IHTMLBGsound;
#endif 	/* __IHTMLBGsound_FWD_DEFINED__ */


#ifndef __DispHTMLBGsound_FWD_DEFINED__
#define __DispHTMLBGsound_FWD_DEFINED__
typedef interface DispHTMLBGsound DispHTMLBGsound;
#endif 	/* __DispHTMLBGsound_FWD_DEFINED__ */


#ifndef __HTMLBGsound_FWD_DEFINED__
#define __HTMLBGsound_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBGsound HTMLBGsound;
#else
typedef struct HTMLBGsound HTMLBGsound;
#endif /* __cplusplus */

#endif 	/* __HTMLBGsound_FWD_DEFINED__ */


#ifndef __IHTMLFontNamesCollection_FWD_DEFINED__
#define __IHTMLFontNamesCollection_FWD_DEFINED__
typedef interface IHTMLFontNamesCollection IHTMLFontNamesCollection;
#endif 	/* __IHTMLFontNamesCollection_FWD_DEFINED__ */


#ifndef __IHTMLFontSizesCollection_FWD_DEFINED__
#define __IHTMLFontSizesCollection_FWD_DEFINED__
typedef interface IHTMLFontSizesCollection IHTMLFontSizesCollection;
#endif 	/* __IHTMLFontSizesCollection_FWD_DEFINED__ */


#ifndef __IHTMLOptionsHolder_FWD_DEFINED__
#define __IHTMLOptionsHolder_FWD_DEFINED__
typedef interface IHTMLOptionsHolder IHTMLOptionsHolder;
#endif 	/* __IHTMLOptionsHolder_FWD_DEFINED__ */


#ifndef __HTMLStyleElementEvents2_FWD_DEFINED__
#define __HTMLStyleElementEvents2_FWD_DEFINED__
typedef interface HTMLStyleElementEvents2 HTMLStyleElementEvents2;
#endif 	/* __HTMLStyleElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLStyleElementEvents_FWD_DEFINED__
#define __HTMLStyleElementEvents_FWD_DEFINED__
typedef interface HTMLStyleElementEvents HTMLStyleElementEvents;
#endif 	/* __HTMLStyleElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLStyleElement_FWD_DEFINED__
#define __IHTMLStyleElement_FWD_DEFINED__
typedef interface IHTMLStyleElement IHTMLStyleElement;
#endif 	/* __IHTMLStyleElement_FWD_DEFINED__ */


#ifndef __DispHTMLStyleElement_FWD_DEFINED__
#define __DispHTMLStyleElement_FWD_DEFINED__
typedef interface DispHTMLStyleElement DispHTMLStyleElement;
#endif 	/* __DispHTMLStyleElement_FWD_DEFINED__ */


#ifndef __HTMLStyleElement_FWD_DEFINED__
#define __HTMLStyleElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleElement HTMLStyleElement;
#else
typedef struct HTMLStyleElement HTMLStyleElement;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleElement_FWD_DEFINED__ */


#ifndef __IHTMLStyleFontFace_FWD_DEFINED__
#define __IHTMLStyleFontFace_FWD_DEFINED__
typedef interface IHTMLStyleFontFace IHTMLStyleFontFace;
#endif 	/* __IHTMLStyleFontFace_FWD_DEFINED__ */


#ifndef __HTMLStyleFontFace_FWD_DEFINED__
#define __HTMLStyleFontFace_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleFontFace HTMLStyleFontFace;
#else
typedef struct HTMLStyleFontFace HTMLStyleFontFace;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleFontFace_FWD_DEFINED__ */


#ifndef __IHTMLXDomainRequest_FWD_DEFINED__
#define __IHTMLXDomainRequest_FWD_DEFINED__
typedef interface IHTMLXDomainRequest IHTMLXDomainRequest;
#endif 	/* __IHTMLXDomainRequest_FWD_DEFINED__ */


#ifndef __IHTMLXDomainRequestFactory_FWD_DEFINED__
#define __IHTMLXDomainRequestFactory_FWD_DEFINED__
typedef interface IHTMLXDomainRequestFactory IHTMLXDomainRequestFactory;
#endif 	/* __IHTMLXDomainRequestFactory_FWD_DEFINED__ */


#ifndef __DispXDomainRequest_FWD_DEFINED__
#define __DispXDomainRequest_FWD_DEFINED__
typedef interface DispXDomainRequest DispXDomainRequest;
#endif 	/* __DispXDomainRequest_FWD_DEFINED__ */


#ifndef __XDomainRequest_FWD_DEFINED__
#define __XDomainRequest_FWD_DEFINED__

#ifdef __cplusplus
typedef class XDomainRequest XDomainRequest;
#else
typedef struct XDomainRequest XDomainRequest;
#endif /* __cplusplus */

#endif 	/* __XDomainRequest_FWD_DEFINED__ */


#ifndef __XDomainRequestFactory_FWD_DEFINED__
#define __XDomainRequestFactory_FWD_DEFINED__

#ifdef __cplusplus
typedef class XDomainRequestFactory XDomainRequestFactory;
#else
typedef struct XDomainRequestFactory XDomainRequestFactory;
#endif /* __cplusplus */

#endif 	/* __XDomainRequestFactory_FWD_DEFINED__ */


#ifndef __DispHTMLStorage_FWD_DEFINED__
#define __DispHTMLStorage_FWD_DEFINED__
typedef interface DispHTMLStorage DispHTMLStorage;
#endif 	/* __DispHTMLStorage_FWD_DEFINED__ */


#ifndef __HTMLStorage_FWD_DEFINED__
#define __HTMLStorage_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStorage HTMLStorage;
#else
typedef struct HTMLStorage HTMLStorage;
#endif /* __cplusplus */

#endif 	/* __HTMLStorage_FWD_DEFINED__ */


#ifndef __ICSSFilterSite_FWD_DEFINED__
#define __ICSSFilterSite_FWD_DEFINED__
typedef interface ICSSFilterSite ICSSFilterSite;
#endif 	/* __ICSSFilterSite_FWD_DEFINED__ */


#ifndef __IMarkupPointer_FWD_DEFINED__
#define __IMarkupPointer_FWD_DEFINED__
typedef interface IMarkupPointer IMarkupPointer;
#endif 	/* __IMarkupPointer_FWD_DEFINED__ */


#ifndef __IMarkupContainer_FWD_DEFINED__
#define __IMarkupContainer_FWD_DEFINED__
typedef interface IMarkupContainer IMarkupContainer;
#endif 	/* __IMarkupContainer_FWD_DEFINED__ */


#ifndef __IMarkupContainer2_FWD_DEFINED__
#define __IMarkupContainer2_FWD_DEFINED__
typedef interface IMarkupContainer2 IMarkupContainer2;
#endif 	/* __IMarkupContainer2_FWD_DEFINED__ */


#ifndef __IHTMLChangeLog_FWD_DEFINED__
#define __IHTMLChangeLog_FWD_DEFINED__
typedef interface IHTMLChangeLog IHTMLChangeLog;
#endif 	/* __IHTMLChangeLog_FWD_DEFINED__ */


#ifndef __IHTMLChangeSink_FWD_DEFINED__
#define __IHTMLChangeSink_FWD_DEFINED__
typedef interface IHTMLChangeSink IHTMLChangeSink;
#endif 	/* __IHTMLChangeSink_FWD_DEFINED__ */


#ifndef __IActiveIMMApp_FWD_DEFINED__
#define __IActiveIMMApp_FWD_DEFINED__
typedef interface IActiveIMMApp IActiveIMMApp;
#endif 	/* __IActiveIMMApp_FWD_DEFINED__ */


#ifndef __ISegmentList_FWD_DEFINED__
#define __ISegmentList_FWD_DEFINED__
typedef interface ISegmentList ISegmentList;
#endif 	/* __ISegmentList_FWD_DEFINED__ */


#ifndef __ISegmentListIterator_FWD_DEFINED__
#define __ISegmentListIterator_FWD_DEFINED__
typedef interface ISegmentListIterator ISegmentListIterator;
#endif 	/* __ISegmentListIterator_FWD_DEFINED__ */


#ifndef __IHTMLCaret_FWD_DEFINED__
#define __IHTMLCaret_FWD_DEFINED__
typedef interface IHTMLCaret IHTMLCaret;
#endif 	/* __IHTMLCaret_FWD_DEFINED__ */


#ifndef __ISegment_FWD_DEFINED__
#define __ISegment_FWD_DEFINED__
typedef interface ISegment ISegment;
#endif 	/* __ISegment_FWD_DEFINED__ */


#ifndef __IElementSegment_FWD_DEFINED__
#define __IElementSegment_FWD_DEFINED__
typedef interface IElementSegment IElementSegment;
#endif 	/* __IElementSegment_FWD_DEFINED__ */


#ifndef __IHighlightSegment_FWD_DEFINED__
#define __IHighlightSegment_FWD_DEFINED__
typedef interface IHighlightSegment IHighlightSegment;
#endif 	/* __IHighlightSegment_FWD_DEFINED__ */


#ifndef __IHighlightRenderingServices_FWD_DEFINED__
#define __IHighlightRenderingServices_FWD_DEFINED__
typedef interface IHighlightRenderingServices IHighlightRenderingServices;
#endif 	/* __IHighlightRenderingServices_FWD_DEFINED__ */


#ifndef __ILineInfo_FWD_DEFINED__
#define __ILineInfo_FWD_DEFINED__
typedef interface ILineInfo ILineInfo;
#endif 	/* __ILineInfo_FWD_DEFINED__ */


#ifndef __IDisplayPointer_FWD_DEFINED__
#define __IDisplayPointer_FWD_DEFINED__
typedef interface IDisplayPointer IDisplayPointer;
#endif 	/* __IDisplayPointer_FWD_DEFINED__ */


#ifndef __IDisplayServices_FWD_DEFINED__
#define __IDisplayServices_FWD_DEFINED__
typedef interface IDisplayServices IDisplayServices;
#endif 	/* __IDisplayServices_FWD_DEFINED__ */


#ifndef __IHtmlDlgSafeHelper_FWD_DEFINED__
#define __IHtmlDlgSafeHelper_FWD_DEFINED__
typedef interface IHtmlDlgSafeHelper IHtmlDlgSafeHelper;
#endif 	/* __IHtmlDlgSafeHelper_FWD_DEFINED__ */


#ifndef __IBlockFormats_FWD_DEFINED__
#define __IBlockFormats_FWD_DEFINED__
typedef interface IBlockFormats IBlockFormats;
#endif 	/* __IBlockFormats_FWD_DEFINED__ */


#ifndef __IFontNames_FWD_DEFINED__
#define __IFontNames_FWD_DEFINED__
typedef interface IFontNames IFontNames;
#endif 	/* __IFontNames_FWD_DEFINED__ */


#ifndef __ICSSFilter_FWD_DEFINED__
#define __ICSSFilter_FWD_DEFINED__
typedef interface ICSSFilter ICSSFilter;
#endif 	/* __ICSSFilter_FWD_DEFINED__ */


#ifndef __ISecureUrlHost_FWD_DEFINED__
#define __ISecureUrlHost_FWD_DEFINED__
typedef interface ISecureUrlHost ISecureUrlHost;
#endif 	/* __ISecureUrlHost_FWD_DEFINED__ */


#ifndef __IMarkupServices_FWD_DEFINED__
#define __IMarkupServices_FWD_DEFINED__
typedef interface IMarkupServices IMarkupServices;
#endif 	/* __IMarkupServices_FWD_DEFINED__ */


#ifndef __IMarkupServices2_FWD_DEFINED__
#define __IMarkupServices2_FWD_DEFINED__
typedef interface IMarkupServices2 IMarkupServices2;
#endif 	/* __IMarkupServices2_FWD_DEFINED__ */


#ifndef __IHTMLChangePlayback_FWD_DEFINED__
#define __IHTMLChangePlayback_FWD_DEFINED__
typedef interface IHTMLChangePlayback IHTMLChangePlayback;
#endif 	/* __IHTMLChangePlayback_FWD_DEFINED__ */


#ifndef __IMarkupPointer2_FWD_DEFINED__
#define __IMarkupPointer2_FWD_DEFINED__
typedef interface IMarkupPointer2 IMarkupPointer2;
#endif 	/* __IMarkupPointer2_FWD_DEFINED__ */


#ifndef __IMarkupTextFrags_FWD_DEFINED__
#define __IMarkupTextFrags_FWD_DEFINED__
typedef interface IMarkupTextFrags IMarkupTextFrags;
#endif 	/* __IMarkupTextFrags_FWD_DEFINED__ */


#ifndef __IXMLGenericParse_FWD_DEFINED__
#define __IXMLGenericParse_FWD_DEFINED__
typedef interface IXMLGenericParse IXMLGenericParse;
#endif 	/* __IXMLGenericParse_FWD_DEFINED__ */


#ifndef __IHTMLEditHost_FWD_DEFINED__
#define __IHTMLEditHost_FWD_DEFINED__
typedef interface IHTMLEditHost IHTMLEditHost;
#endif 	/* __IHTMLEditHost_FWD_DEFINED__ */


#ifndef __IHTMLEditHost2_FWD_DEFINED__
#define __IHTMLEditHost2_FWD_DEFINED__
typedef interface IHTMLEditHost2 IHTMLEditHost2;
#endif 	/* __IHTMLEditHost2_FWD_DEFINED__ */


#ifndef __ISequenceNumber_FWD_DEFINED__
#define __ISequenceNumber_FWD_DEFINED__
typedef interface ISequenceNumber ISequenceNumber;
#endif 	/* __ISequenceNumber_FWD_DEFINED__ */


#ifndef __IIMEServices_FWD_DEFINED__
#define __IIMEServices_FWD_DEFINED__
typedef interface IIMEServices IIMEServices;
#endif 	/* __IIMEServices_FWD_DEFINED__ */


#ifndef __ISelectionServicesListener_FWD_DEFINED__
#define __ISelectionServicesListener_FWD_DEFINED__
typedef interface ISelectionServicesListener ISelectionServicesListener;
#endif 	/* __ISelectionServicesListener_FWD_DEFINED__ */


#ifndef __ISelectionServices_FWD_DEFINED__
#define __ISelectionServices_FWD_DEFINED__
typedef interface ISelectionServices ISelectionServices;
#endif 	/* __ISelectionServices_FWD_DEFINED__ */


#ifndef __IHTMLEditDesigner_FWD_DEFINED__
#define __IHTMLEditDesigner_FWD_DEFINED__
typedef interface IHTMLEditDesigner IHTMLEditDesigner;
#endif 	/* __IHTMLEditDesigner_FWD_DEFINED__ */


#ifndef __IHTMLEditServices_FWD_DEFINED__
#define __IHTMLEditServices_FWD_DEFINED__
typedef interface IHTMLEditServices IHTMLEditServices;
#endif 	/* __IHTMLEditServices_FWD_DEFINED__ */


#ifndef __IHTMLEditServices2_FWD_DEFINED__
#define __IHTMLEditServices2_FWD_DEFINED__
typedef interface IHTMLEditServices2 IHTMLEditServices2;
#endif 	/* __IHTMLEditServices2_FWD_DEFINED__ */


#ifndef __IHTMLComputedStyle_FWD_DEFINED__
#define __IHTMLComputedStyle_FWD_DEFINED__
typedef interface IHTMLComputedStyle IHTMLComputedStyle;
#endif 	/* __IHTMLComputedStyle_FWD_DEFINED__ */


#ifndef __HtmlDlgSafeHelper_FWD_DEFINED__
#define __HtmlDlgSafeHelper_FWD_DEFINED__

#ifdef __cplusplus
typedef class HtmlDlgSafeHelper HtmlDlgSafeHelper;
#else
typedef struct HtmlDlgSafeHelper HtmlDlgSafeHelper;
#endif /* __cplusplus */

#endif 	/* __HtmlDlgSafeHelper_FWD_DEFINED__ */


#ifndef __BlockFormats_FWD_DEFINED__
#define __BlockFormats_FWD_DEFINED__

#ifdef __cplusplus
typedef class BlockFormats BlockFormats;
#else
typedef struct BlockFormats BlockFormats;
#endif /* __cplusplus */

#endif 	/* __BlockFormats_FWD_DEFINED__ */


#ifndef __FontNames_FWD_DEFINED__
#define __FontNames_FWD_DEFINED__

#ifdef __cplusplus
typedef class FontNames FontNames;
#else
typedef struct FontNames FontNames;
#endif /* __cplusplus */

#endif 	/* __FontNames_FWD_DEFINED__ */


#ifndef __HTMLNamespaceEvents_FWD_DEFINED__
#define __HTMLNamespaceEvents_FWD_DEFINED__
typedef interface HTMLNamespaceEvents HTMLNamespaceEvents;
#endif 	/* __HTMLNamespaceEvents_FWD_DEFINED__ */


#ifndef __IHTMLNamespace_FWD_DEFINED__
#define __IHTMLNamespace_FWD_DEFINED__
typedef interface IHTMLNamespace IHTMLNamespace;
#endif 	/* __IHTMLNamespace_FWD_DEFINED__ */


#ifndef __IHTMLNamespaceCollection_FWD_DEFINED__
#define __IHTMLNamespaceCollection_FWD_DEFINED__
typedef interface IHTMLNamespaceCollection IHTMLNamespaceCollection;
#endif 	/* __IHTMLNamespaceCollection_FWD_DEFINED__ */


#ifndef __DispHTMLNamespace_FWD_DEFINED__
#define __DispHTMLNamespace_FWD_DEFINED__
typedef interface DispHTMLNamespace DispHTMLNamespace;
#endif 	/* __DispHTMLNamespace_FWD_DEFINED__ */


#ifndef __HTMLNamespace_FWD_DEFINED__
#define __HTMLNamespace_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNamespace HTMLNamespace;
#else
typedef struct HTMLNamespace HTMLNamespace;
#endif /* __cplusplus */

#endif 	/* __HTMLNamespace_FWD_DEFINED__ */


#ifndef __DispHTMLNamespaceCollection_FWD_DEFINED__
#define __DispHTMLNamespaceCollection_FWD_DEFINED__
typedef interface DispHTMLNamespaceCollection DispHTMLNamespaceCollection;
#endif 	/* __DispHTMLNamespaceCollection_FWD_DEFINED__ */


#ifndef __HTMLNamespaceCollection_FWD_DEFINED__
#define __HTMLNamespaceCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNamespaceCollection HTMLNamespaceCollection;
#else
typedef struct HTMLNamespaceCollection HTMLNamespaceCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLNamespaceCollection_FWD_DEFINED__ */


#ifndef __IHTMLPainter_FWD_DEFINED__
#define __IHTMLPainter_FWD_DEFINED__
typedef interface IHTMLPainter IHTMLPainter;
#endif 	/* __IHTMLPainter_FWD_DEFINED__ */


#ifndef __IHTMLPaintSite_FWD_DEFINED__
#define __IHTMLPaintSite_FWD_DEFINED__
typedef interface IHTMLPaintSite IHTMLPaintSite;
#endif 	/* __IHTMLPaintSite_FWD_DEFINED__ */


#ifndef __IHTMLPainterEventInfo_FWD_DEFINED__
#define __IHTMLPainterEventInfo_FWD_DEFINED__
typedef interface IHTMLPainterEventInfo IHTMLPainterEventInfo;
#endif 	/* __IHTMLPainterEventInfo_FWD_DEFINED__ */


#ifndef __IHTMLPainterOverlay_FWD_DEFINED__
#define __IHTMLPainterOverlay_FWD_DEFINED__
typedef interface IHTMLPainterOverlay IHTMLPainterOverlay;
#endif 	/* __IHTMLPainterOverlay_FWD_DEFINED__ */


#ifndef __IHTMLIPrintCollection_FWD_DEFINED__
#define __IHTMLIPrintCollection_FWD_DEFINED__
typedef interface IHTMLIPrintCollection IHTMLIPrintCollection;
#endif 	/* __IHTMLIPrintCollection_FWD_DEFINED__ */


#ifndef __IEnumPrivacyRecords_FWD_DEFINED__
#define __IEnumPrivacyRecords_FWD_DEFINED__
typedef interface IEnumPrivacyRecords IEnumPrivacyRecords;
#endif 	/* __IEnumPrivacyRecords_FWD_DEFINED__ */


#ifndef __IWPCBlockedUrls_FWD_DEFINED__
#define __IWPCBlockedUrls_FWD_DEFINED__
typedef interface IWPCBlockedUrls IWPCBlockedUrls;
#endif 	/* __IWPCBlockedUrls_FWD_DEFINED__ */


#ifndef __IHTMLDOMConstructorCollection_FWD_DEFINED__
#define __IHTMLDOMConstructorCollection_FWD_DEFINED__
typedef interface IHTMLDOMConstructorCollection IHTMLDOMConstructorCollection;
#endif 	/* __IHTMLDOMConstructorCollection_FWD_DEFINED__ */


#ifndef __IHTMLDialog_FWD_DEFINED__
#define __IHTMLDialog_FWD_DEFINED__
typedef interface IHTMLDialog IHTMLDialog;
#endif 	/* __IHTMLDialog_FWD_DEFINED__ */


#ifndef __IHTMLDialog2_FWD_DEFINED__
#define __IHTMLDialog2_FWD_DEFINED__
typedef interface IHTMLDialog2 IHTMLDialog2;
#endif 	/* __IHTMLDialog2_FWD_DEFINED__ */


#ifndef __IHTMLDialog3_FWD_DEFINED__
#define __IHTMLDialog3_FWD_DEFINED__
typedef interface IHTMLDialog3 IHTMLDialog3;
#endif 	/* __IHTMLDialog3_FWD_DEFINED__ */


#ifndef __IHTMLModelessInit_FWD_DEFINED__
#define __IHTMLModelessInit_FWD_DEFINED__
typedef interface IHTMLModelessInit IHTMLModelessInit;
#endif 	/* __IHTMLModelessInit_FWD_DEFINED__ */


#ifndef __ThreadDialogProcParam_FWD_DEFINED__
#define __ThreadDialogProcParam_FWD_DEFINED__

#ifdef __cplusplus
typedef class ThreadDialogProcParam ThreadDialogProcParam;
#else
typedef struct ThreadDialogProcParam ThreadDialogProcParam;
#endif /* __cplusplus */

#endif 	/* __ThreadDialogProcParam_FWD_DEFINED__ */


#ifndef __HTMLDialog_FWD_DEFINED__
#define __HTMLDialog_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDialog HTMLDialog;
#else
typedef struct HTMLDialog HTMLDialog;
#endif /* __cplusplus */

#endif 	/* __HTMLDialog_FWD_DEFINED__ */


#ifndef __IHTMLPopup_FWD_DEFINED__
#define __IHTMLPopup_FWD_DEFINED__
typedef interface IHTMLPopup IHTMLPopup;
#endif 	/* __IHTMLPopup_FWD_DEFINED__ */


#ifndef __DispHTMLPopup_FWD_DEFINED__
#define __DispHTMLPopup_FWD_DEFINED__
typedef interface DispHTMLPopup DispHTMLPopup;
#endif 	/* __DispHTMLPopup_FWD_DEFINED__ */


#ifndef __HTMLPopup_FWD_DEFINED__
#define __HTMLPopup_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLPopup HTMLPopup;
#else
typedef struct HTMLPopup HTMLPopup;
#endif /* __cplusplus */

#endif 	/* __HTMLPopup_FWD_DEFINED__ */


#ifndef __IHTMLAppBehavior_FWD_DEFINED__
#define __IHTMLAppBehavior_FWD_DEFINED__
typedef interface IHTMLAppBehavior IHTMLAppBehavior;
#endif 	/* __IHTMLAppBehavior_FWD_DEFINED__ */


#ifndef __IHTMLAppBehavior2_FWD_DEFINED__
#define __IHTMLAppBehavior2_FWD_DEFINED__
typedef interface IHTMLAppBehavior2 IHTMLAppBehavior2;
#endif 	/* __IHTMLAppBehavior2_FWD_DEFINED__ */


#ifndef __IHTMLAppBehavior3_FWD_DEFINED__
#define __IHTMLAppBehavior3_FWD_DEFINED__
typedef interface IHTMLAppBehavior3 IHTMLAppBehavior3;
#endif 	/* __IHTMLAppBehavior3_FWD_DEFINED__ */


#ifndef __DispHTMLAppBehavior_FWD_DEFINED__
#define __DispHTMLAppBehavior_FWD_DEFINED__
typedef interface DispHTMLAppBehavior DispHTMLAppBehavior;
#endif 	/* __DispHTMLAppBehavior_FWD_DEFINED__ */


#ifndef __HTMLAppBehavior_FWD_DEFINED__
#define __HTMLAppBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAppBehavior HTMLAppBehavior;
#else
typedef struct HTMLAppBehavior HTMLAppBehavior;
#endif /* __cplusplus */

#endif 	/* __HTMLAppBehavior_FWD_DEFINED__ */


#ifndef __OldHTMLDocument_FWD_DEFINED__
#define __OldHTMLDocument_FWD_DEFINED__

#ifdef __cplusplus
typedef class OldHTMLDocument OldHTMLDocument;
#else
typedef struct OldHTMLDocument OldHTMLDocument;
#endif /* __cplusplus */

#endif 	/* __OldHTMLDocument_FWD_DEFINED__ */


#ifndef __OldHTMLFormElement_FWD_DEFINED__
#define __OldHTMLFormElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class OldHTMLFormElement OldHTMLFormElement;
#else
typedef struct OldHTMLFormElement OldHTMLFormElement;
#endif /* __cplusplus */

#endif 	/* __OldHTMLFormElement_FWD_DEFINED__ */


#ifndef __DispIHTMLInputButtonElement_FWD_DEFINED__
#define __DispIHTMLInputButtonElement_FWD_DEFINED__
typedef interface DispIHTMLInputButtonElement DispIHTMLInputButtonElement;
#endif 	/* __DispIHTMLInputButtonElement_FWD_DEFINED__ */


#ifndef __HTMLInputButtonElement_FWD_DEFINED__
#define __HTMLInputButtonElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputButtonElement HTMLInputButtonElement;
#else
typedef struct HTMLInputButtonElement HTMLInputButtonElement;
#endif /* __cplusplus */

#endif 	/* __HTMLInputButtonElement_FWD_DEFINED__ */


#ifndef __DispIHTMLInputTextElement_FWD_DEFINED__
#define __DispIHTMLInputTextElement_FWD_DEFINED__
typedef interface DispIHTMLInputTextElement DispIHTMLInputTextElement;
#endif 	/* __DispIHTMLInputTextElement_FWD_DEFINED__ */


#ifndef __HTMLInputTextElement_FWD_DEFINED__
#define __HTMLInputTextElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputTextElement HTMLInputTextElement;
#else
typedef struct HTMLInputTextElement HTMLInputTextElement;
#endif /* __cplusplus */

#endif 	/* __HTMLInputTextElement_FWD_DEFINED__ */


#ifndef __DispIHTMLInputFileElement_FWD_DEFINED__
#define __DispIHTMLInputFileElement_FWD_DEFINED__
typedef interface DispIHTMLInputFileElement DispIHTMLInputFileElement;
#endif 	/* __DispIHTMLInputFileElement_FWD_DEFINED__ */


#ifndef __HTMLInputFileElement_FWD_DEFINED__
#define __HTMLInputFileElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputFileElement HTMLInputFileElement;
#else
typedef struct HTMLInputFileElement HTMLInputFileElement;
#endif /* __cplusplus */

#endif 	/* __HTMLInputFileElement_FWD_DEFINED__ */


#ifndef __DispIHTMLOptionButtonElement_FWD_DEFINED__
#define __DispIHTMLOptionButtonElement_FWD_DEFINED__
typedef interface DispIHTMLOptionButtonElement DispIHTMLOptionButtonElement;
#endif 	/* __DispIHTMLOptionButtonElement_FWD_DEFINED__ */


#ifndef __HTMLOptionButtonElement_FWD_DEFINED__
#define __HTMLOptionButtonElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLOptionButtonElement HTMLOptionButtonElement;
#else
typedef struct HTMLOptionButtonElement HTMLOptionButtonElement;
#endif /* __cplusplus */

#endif 	/* __HTMLOptionButtonElement_FWD_DEFINED__ */


#ifndef __DispIHTMLInputImage_FWD_DEFINED__
#define __DispIHTMLInputImage_FWD_DEFINED__
typedef interface DispIHTMLInputImage DispIHTMLInputImage;
#endif 	/* __DispIHTMLInputImage_FWD_DEFINED__ */


#ifndef __HTMLInputImage_FWD_DEFINED__
#define __HTMLInputImage_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputImage HTMLInputImage;
#else
typedef struct HTMLInputImage HTMLInputImage;
#endif /* __cplusplus */

#endif 	/* __HTMLInputImage_FWD_DEFINED__ */


#ifndef __IElementNamespace_FWD_DEFINED__
#define __IElementNamespace_FWD_DEFINED__
typedef interface IElementNamespace IElementNamespace;
#endif 	/* __IElementNamespace_FWD_DEFINED__ */


#ifndef __IElementNamespaceTable_FWD_DEFINED__
#define __IElementNamespaceTable_FWD_DEFINED__
typedef interface IElementNamespaceTable IElementNamespaceTable;
#endif 	/* __IElementNamespaceTable_FWD_DEFINED__ */


#ifndef __IElementNamespaceFactory_FWD_DEFINED__
#define __IElementNamespaceFactory_FWD_DEFINED__
typedef interface IElementNamespaceFactory IElementNamespaceFactory;
#endif 	/* __IElementNamespaceFactory_FWD_DEFINED__ */


#ifndef __IElementNamespaceFactory2_FWD_DEFINED__
#define __IElementNamespaceFactory2_FWD_DEFINED__
typedef interface IElementNamespaceFactory2 IElementNamespaceFactory2;
#endif 	/* __IElementNamespaceFactory2_FWD_DEFINED__ */


#ifndef __IElementNamespaceFactoryCallback_FWD_DEFINED__
#define __IElementNamespaceFactoryCallback_FWD_DEFINED__
typedef interface IElementNamespaceFactoryCallback IElementNamespaceFactoryCallback;
#endif 	/* __IElementNamespaceFactoryCallback_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteOM2_FWD_DEFINED__
#define __IElementBehaviorSiteOM2_FWD_DEFINED__
typedef interface IElementBehaviorSiteOM2 IElementBehaviorSiteOM2;
#endif 	/* __IElementBehaviorSiteOM2_FWD_DEFINED__ */


#ifndef __IElementBehaviorCategory_FWD_DEFINED__
#define __IElementBehaviorCategory_FWD_DEFINED__
typedef interface IElementBehaviorCategory IElementBehaviorCategory;
#endif 	/* __IElementBehaviorCategory_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteCategory_FWD_DEFINED__
#define __IElementBehaviorSiteCategory_FWD_DEFINED__
typedef interface IElementBehaviorSiteCategory IElementBehaviorSiteCategory;
#endif 	/* __IElementBehaviorSiteCategory_FWD_DEFINED__ */


#ifndef __IElementBehaviorSubmit_FWD_DEFINED__
#define __IElementBehaviorSubmit_FWD_DEFINED__
typedef interface IElementBehaviorSubmit IElementBehaviorSubmit;
#endif 	/* __IElementBehaviorSubmit_FWD_DEFINED__ */


#ifndef __IElementBehaviorFocus_FWD_DEFINED__
#define __IElementBehaviorFocus_FWD_DEFINED__
typedef interface IElementBehaviorFocus IElementBehaviorFocus;
#endif 	/* __IElementBehaviorFocus_FWD_DEFINED__ */


#ifndef __IElementBehaviorLayout_FWD_DEFINED__
#define __IElementBehaviorLayout_FWD_DEFINED__
typedef interface IElementBehaviorLayout IElementBehaviorLayout;
#endif 	/* __IElementBehaviorLayout_FWD_DEFINED__ */


#ifndef __IElementBehaviorLayout2_FWD_DEFINED__
#define __IElementBehaviorLayout2_FWD_DEFINED__
typedef interface IElementBehaviorLayout2 IElementBehaviorLayout2;
#endif 	/* __IElementBehaviorLayout2_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteLayout_FWD_DEFINED__
#define __IElementBehaviorSiteLayout_FWD_DEFINED__
typedef interface IElementBehaviorSiteLayout IElementBehaviorSiteLayout;
#endif 	/* __IElementBehaviorSiteLayout_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteLayout2_FWD_DEFINED__
#define __IElementBehaviorSiteLayout2_FWD_DEFINED__
typedef interface IElementBehaviorSiteLayout2 IElementBehaviorSiteLayout2;
#endif 	/* __IElementBehaviorSiteLayout2_FWD_DEFINED__ */


#ifndef __IHostBehaviorInit_FWD_DEFINED__
#define __IHostBehaviorInit_FWD_DEFINED__
typedef interface IHostBehaviorInit IHostBehaviorInit;
#endif 	/* __IHostBehaviorInit_FWD_DEFINED__ */


/* header files for imported files */
#include "ocidl.h"
#include "dimm.h"
#include "shtypes.h"
#include "dispex.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mshtml_0000_0000 */
/* [local] */ 


#include <olectl.h>
EXTERN_C const GUID CMDSETID_Forms3;
EXTERN_C const GUID CLSID_MHTMLDocument;
EXTERN_C const GUID CLSID_HTADocument;
EXTERN_C const GUID CLSID_HTMLApplication;
EXTERN_C const GUID CLSID_HTMLPluginDocument;
DEFINE_GUID(SID_SEditCommandTarget,0x3050f4b5,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);
DEFINE_GUID(CGID_EditStateCommands,0x3050f4b6,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);
DEFINE_GUID(SID_SHTMLEditHost,0x3050f6a0,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);
DEFINE_GUID(SID_SHTMLEditServices,0x3050f7f9,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);
#define SID_SHTMLWindow IID_IHTMLWindow2
#define SID_SElementBehaviorFactory IID_IElementBehaviorFactory
// This information will be the LOWORD of the privacy flags stored in the privacy record
#define COOKIEACTION_NONE           0x00000000
#define COOKIEACTION_ACCEPT         0x00000001
#define COOKIEACTION_REJECT         0x00000002
#define COOKIEACTION_DOWNGRADE      0x00000004
#define COOKIEACTION_LEASH          0x00000008
#define COOKIEACTION_SUPPRESS       0x00000010
#define COOKIEACTION_READ           0x00000020
// Privacy info related to the url
// This information will be the HIWORD of the privacy flags stored in the privacy record
#define PRIVACY_URLISTOPLEVEL          0x00010000                   // Is this a top level url?
#define PRIVACY_URLHASCOMPACTPOLICY    0x00020000                   // Did the url have a compact policy used for privacy evaluations
#define PRIVACY_URLHASPOSTDATA         0x00080000                   // Is this a POST request?
#define PRIVACY_URLHASPOLICYREFLINK    0x00100000                   // Did the url have a privacy ref url in a link tag
#define PRIVACY_URLHASPOLICYREFHEADER  0x00200000                   // Did the url have a privacy ref url in a header tag
#define PRIVACY_URLHASP3PHEADER        0x00400000                   // Did the url have a privacy ref url in a header tag


extern RPC_IF_HANDLE __MIDL_itf_mshtml_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mshtml_0000_0000_v0_0_s_ifspec;

#ifndef __IHTMLFiltersCollection_INTERFACE_DEFINED__
#define __IHTMLFiltersCollection_INTERFACE_DEFINED__

/* interface IHTMLFiltersCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFiltersCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f3ee-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFiltersCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ __RPC__in VARIANT *pvarIndex,
            /* [out][retval] */ __RPC__out VARIANT *pvarResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLFiltersCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLFiltersCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLFiltersCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLFiltersCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLFiltersCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLFiltersCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLFiltersCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLFiltersCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLFiltersCollection * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__newEnum )( 
            __RPC__in IHTMLFiltersCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            __RPC__in IHTMLFiltersCollection * This,
            /* [in] */ __RPC__in VARIANT *pvarIndex,
            /* [out][retval] */ __RPC__out VARIANT *pvarResult);
        
        END_INTERFACE
    } IHTMLFiltersCollectionVtbl;

    interface IHTMLFiltersCollection
    {
        CONST_VTBL struct IHTMLFiltersCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLFiltersCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLFiltersCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLFiltersCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLFiltersCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLFiltersCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLFiltersCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLFiltersCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLFiltersCollection_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#define IHTMLFiltersCollection_get__newEnum(This,p)	\
    ( (This)->lpVtbl -> get__newEnum(This,p) ) 

#define IHTMLFiltersCollection_item(This,pvarIndex,pvarResult)	\
    ( (This)->lpVtbl -> item(This,pvarIndex,pvarResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLFiltersCollection_INTERFACE_DEFINED__ */


#ifndef __IIE70DispatchEx_INTERFACE_DEFINED__
#define __IIE70DispatchEx_INTERFACE_DEFINED__

/* interface IIE70DispatchEx */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IIE70DispatchEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3051046b-98b5-11cf-bb82-00aa00bdce0b")
    IIE70DispatchEx : public IDispatchEx
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IIE70DispatchExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IIE70DispatchEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IIE70DispatchEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IIE70DispatchEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IIE70DispatchEx * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IIE70DispatchEx * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IIE70DispatchEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIE70DispatchEx * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *GetDispID )( 
            __RPC__in IIE70DispatchEx * This,
            /* [in] */ __RPC__in BSTR bstrName,
            /* [in] */ DWORD grfdex,
            /* [out] */ __RPC__out DISPID *pid);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *InvokeEx )( 
            IIE70DispatchEx * This,
            /* [annotation][in] */ 
            __in  DISPID id,
            /* [annotation][in] */ 
            __in  LCID lcid,
            /* [annotation][in] */ 
            __in  WORD wFlags,
            /* [annotation][in] */ 
            __in  DISPPARAMS *pdp,
            /* [annotation][out] */ 
            __out_opt  VARIANT *pvarRes,
            /* [annotation][out] */ 
            __out_opt  EXCEPINFO *pei,
            /* [annotation][unique][in] */ 
            __in_opt  IServiceProvider *pspCaller);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteMemberByName )( 
            __RPC__in IIE70DispatchEx * This,
            /* [in] */ __RPC__in BSTR bstrName,
            /* [in] */ DWORD grfdex);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteMemberByDispID )( 
            __RPC__in IIE70DispatchEx * This,
            /* [in] */ DISPID id);
        
        HRESULT ( STDMETHODCALLTYPE *GetMemberProperties )( 
            __RPC__in IIE70DispatchEx * This,
            /* [in] */ DISPID id,
            /* [in] */ DWORD grfdexFetch,
            /* [out] */ __RPC__out DWORD *pgrfdex);
        
        HRESULT ( STDMETHODCALLTYPE *GetMemberName )( 
            __RPC__in IIE70DispatchEx * This,
            /* [in] */ DISPID id,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        HRESULT ( STDMETHODCALLTYPE *GetNextDispID )( 
            __RPC__in IIE70DispatchEx * This,
            /* [in] */ DWORD grfdex,
            /* [in] */ DISPID id,
            /* [out] */ __RPC__out DISPID *pid);
        
        HRESULT ( STDMETHODCALLTYPE *GetNameSpaceParent )( 
            __RPC__in IIE70DispatchEx * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppunk);
        
        END_INTERFACE
    } IIE70DispatchExVtbl;

    interface IIE70DispatchEx
    {
        CONST_VTBL struct IIE70DispatchExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIE70DispatchEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIE70DispatchEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIE70DispatchEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIE70DispatchEx_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIE70DispatchEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIE70DispatchEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIE70DispatchEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIE70DispatchEx_GetDispID(This,bstrName,grfdex,pid)	\
    ( (This)->lpVtbl -> GetDispID(This,bstrName,grfdex,pid) ) 

#define IIE70DispatchEx_InvokeEx(This,id,lcid,wFlags,pdp,pvarRes,pei,pspCaller)	\
    ( (This)->lpVtbl -> InvokeEx(This,id,lcid,wFlags,pdp,pvarRes,pei,pspCaller) ) 

#define IIE70DispatchEx_DeleteMemberByName(This,bstrName,grfdex)	\
    ( (This)->lpVtbl -> DeleteMemberByName(This,bstrName,grfdex) ) 

#define IIE70DispatchEx_DeleteMemberByDispID(This,id)	\
    ( (This)->lpVtbl -> DeleteMemberByDispID(This,id) ) 

#define IIE70DispatchEx_GetMemberProperties(This,id,grfdexFetch,pgrfdex)	\
    ( (This)->lpVtbl -> GetMemberProperties(This,id,grfdexFetch,pgrfdex) ) 

#define IIE70DispatchEx_GetMemberName(This,id,pbstrName)	\
    ( (This)->lpVtbl -> GetMemberName(This,id,pbstrName) ) 

#define IIE70DispatchEx_GetNextDispID(This,grfdex,id,pid)	\
    ( (This)->lpVtbl -> GetNextDispID(This,grfdex,id,pid) ) 

#define IIE70DispatchEx_GetNameSpaceParent(This,ppunk)	\
    ( (This)->lpVtbl -> GetNameSpaceParent(This,ppunk) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIE70DispatchEx_INTERFACE_DEFINED__ */


#ifndef __IIE80DispatchEx_INTERFACE_DEFINED__
#define __IIE80DispatchEx_INTERFACE_DEFINED__

/* interface IIE80DispatchEx */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IIE80DispatchEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3051046c-98b5-11cf-bb82-00aa00bdce0b")
    IIE80DispatchEx : public IDispatchEx
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IIE80DispatchExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IIE80DispatchEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IIE80DispatchEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IIE80DispatchEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IIE80DispatchEx * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IIE80DispatchEx * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IIE80DispatchEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIE80DispatchEx * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *GetDispID )( 
            __RPC__in IIE80DispatchEx * This,
            /* [in] */ __RPC__in BSTR bstrName,
            /* [in] */ DWORD grfdex,
            /* [out] */ __RPC__out DISPID *pid);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *InvokeEx )( 
            IIE80DispatchEx * This,
            /* [annotation][in] */ 
            __in  DISPID id,
            /* [annotation][in] */ 
            __in  LCID lcid,
            /* [annotation][in] */ 
            __in  WORD wFlags,
            /* [annotation][in] */ 
            __in  DISPPARAMS *pdp,
            /* [annotation][out] */ 
            __out_opt  VARIANT *pvarRes,
            /* [annotation][out] */ 
            __out_opt  EXCEPINFO *pei,
            /* [annotation][unique][in] */ 
            __in_opt  IServiceProvider *pspCaller);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteMemberByName )( 
            __RPC__in IIE80DispatchEx * This,
            /* [in] */ __RPC__in BSTR bstrName,
            /* [in] */ DWORD grfdex);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteMemberByDispID )( 
            __RPC__in IIE80DispatchEx * This,
            /* [in] */ DISPID id);
        
        HRESULT ( STDMETHODCALLTYPE *GetMemberProperties )( 
            __RPC__in IIE80DispatchEx * This,
            /* [in] */ DISPID id,
            /* [in] */ DWORD grfdexFetch,
            /* [out] */ __RPC__out DWORD *pgrfdex);
        
        HRESULT ( STDMETHODCALLTYPE *GetMemberName )( 
            __RPC__in IIE80DispatchEx * This,
            /* [in] */ DISPID id,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        HRESULT ( STDMETHODCALLTYPE *GetNextDispID )( 
            __RPC__in IIE80DispatchEx * This,
            /* [in] */ DWORD grfdex,
            /* [in] */ DISPID id,
            /* [out] */ __RPC__out DISPID *pid);
        
        HRESULT ( STDMETHODCALLTYPE *GetNameSpaceParent )( 
            __RPC__in IIE80DispatchEx * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppunk);
        
        END_INTERFACE
    } IIE80DispatchExVtbl;

    interface IIE80DispatchEx
    {
        CONST_VTBL struct IIE80DispatchExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIE80DispatchEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIE80DispatchEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIE80DispatchEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIE80DispatchEx_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIE80DispatchEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIE80DispatchEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIE80DispatchEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIE80DispatchEx_GetDispID(This,bstrName,grfdex,pid)	\
    ( (This)->lpVtbl -> GetDispID(This,bstrName,grfdex,pid) ) 

#define IIE80DispatchEx_InvokeEx(This,id,lcid,wFlags,pdp,pvarRes,pei,pspCaller)	\
    ( (This)->lpVtbl -> InvokeEx(This,id,lcid,wFlags,pdp,pvarRes,pei,pspCaller) ) 

#define IIE80DispatchEx_DeleteMemberByName(This,bstrName,grfdex)	\
    ( (This)->lpVtbl -> DeleteMemberByName(This,bstrName,grfdex) ) 

#define IIE80DispatchEx_DeleteMemberByDispID(This,id)	\
    ( (This)->lpVtbl -> DeleteMemberByDispID(This,id) ) 

#define IIE80DispatchEx_GetMemberProperties(This,id,grfdexFetch,pgrfdex)	\
    ( (This)->lpVtbl -> GetMemberProperties(This,id,grfdexFetch,pgrfdex) ) 

#define IIE80DispatchEx_GetMemberName(This,id,pbstrName)	\
    ( (This)->lpVtbl -> GetMemberName(This,id,pbstrName) ) 

#define IIE80DispatchEx_GetNextDispID(This,grfdex,id,pid)	\
    ( (This)->lpVtbl -> GetNextDispID(This,grfdex,id,pid) ) 

#define IIE80DispatchEx_GetNameSpaceParent(This,ppunk)	\
    ( (This)->lpVtbl -> GetNameSpaceParent(This,ppunk) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIE80DispatchEx_INTERFACE_DEFINED__ */



#ifndef __MSHTML_LIBRARY_DEFINED__
#define __MSHTML_LIBRARY_DEFINED__

/* library MSHTML */
/* [uuid][version][helpstring][lcid] */ 












typedef 
enum _htmlDesignMode
    {	htmlDesignModeInherit	= -2,
	htmlDesignModeOn	= -1,
	htmlDesignModeOff	= 0,
	htmlDesignMode_Max	= 2147483647L
    } 	htmlDesignMode;

typedef 
enum _htmlZOrder
    {	htmlZOrderFront	= 0,
	htmlZOrderBack	= 1,
	htmlZOrder_Max	= 2147483647L
    } 	htmlZOrder;

typedef 
enum _htmlClear
    {	htmlClearNotSet	= 0,
	htmlClearAll	= 1,
	htmlClearLeft	= 2,
	htmlClearRight	= 3,
	htmlClearBoth	= 4,
	htmlClearNone	= 5,
	htmlClear_Max	= 2147483647L
    } 	htmlClear;

typedef 
enum _htmlControlAlign
    {	htmlControlAlignNotSet	= 0,
	htmlControlAlignLeft	= 1,
	htmlControlAlignCenter	= 2,
	htmlControlAlignRight	= 3,
	htmlControlAlignTextTop	= 4,
	htmlControlAlignAbsMiddle	= 5,
	htmlControlAlignBaseline	= 6,
	htmlControlAlignAbsBottom	= 7,
	htmlControlAlignBottom	= 8,
	htmlControlAlignMiddle	= 9,
	htmlControlAlignTop	= 10,
	htmlControlAlign_Max	= 2147483647L
    } 	htmlControlAlign;

typedef 
enum _htmlBlockAlign
    {	htmlBlockAlignNotSet	= 0,
	htmlBlockAlignLeft	= 1,
	htmlBlockAlignCenter	= 2,
	htmlBlockAlignRight	= 3,
	htmlBlockAlignJustify	= 4,
	htmlBlockAlign_Max	= 2147483647L
    } 	htmlBlockAlign;

typedef 
enum _htmlReadyState
    {	htmlReadyStateuninitialized	= 0,
	htmlReadyStateloading	= 1,
	htmlReadyStateloaded	= 2,
	htmlReadyStateinteractive	= 3,
	htmlReadyStatecomplete	= 4,
	htmlReadyState_Max	= 2147483647L
    } 	htmlReadyState;

typedef 
enum _htmlLoop
    {	htmlLoopLoopInfinite	= -1,
	htmlLoop_Max	= 2147483647L
    } 	htmlLoop;

typedef 
enum _mediaType
    {	mediaTypeNotSet	= 0,
	mediaTypeAll	= 511,
	mediaTypeAural	= 1,
	mediaTypeBraille	= 2,
	mediaTypeEmbossed	= 4,
	mediaTypeHandheld	= 8,
	mediaTypePrint	= 16,
	mediaTypeProjection	= 32,
	mediaTypeScreen	= 64,
	mediaTypeTty	= 128,
	mediaTypeTv	= 256,
	mediaType_Max	= 2147483647L
    } 	mediaType;

typedef 
enum _DomConstructor
    {	DomConstructorObject	= 0,
	DomConstructorAttr	= 1,
	DomConstructorBehaviorUrnsCollection	= 2,
	DomConstructorBookmarkCollection	= 3,
	DomConstructorCompatibleInfo	= 4,
	DomConstructorCompatibleInfoCollection	= 5,
	DomConstructorControlRangeCollection	= 6,
	DomConstructorCSSCurrentStyleDeclaration	= 7,
	DomConstructorCSSRuleList	= 8,
	DomConstructorCSSRuleStyleDeclaration	= 9,
	DomConstructorCSSStyleDeclaration	= 10,
	DomConstructorCSSStyleRule	= 11,
	DomConstructorCSSStyleSheet	= 12,
	DomConstructorDataTransfer	= 13,
	DomConstructorDOMImplementation	= 14,
	DomConstructorElement	= 15,
	DomConstructorEvent	= 16,
	DomConstructorHistory	= 17,
	DomConstructorHTCElementBehaviorDefaults	= 18,
	DomConstructorHTMLAnchorElement	= 19,
	DomConstructorHTMLAreaElement	= 20,
	DomConstructorHTMLAreasCollection	= 21,
	DomConstructorHTMLBaseElement	= 22,
	DomConstructorHTMLBaseFontElement	= 23,
	DomConstructorHTMLBGSoundElement	= 24,
	DomConstructorHTMLBlockElement	= 25,
	DomConstructorHTMLBodyElement	= 26,
	DomConstructorHTMLBRElement	= 27,
	DomConstructorHTMLButtonElement	= 28,
	DomConstructorHTMLCollection	= 29,
	DomConstructorHTMLCommentElement	= 30,
	DomConstructorHTMLDDElement	= 31,
	DomConstructorHTMLDivElement	= 32,
	DomConstructorHTMLDocument	= 33,
	DomConstructorHTMLDListElement	= 34,
	DomConstructorHTMLDTElement	= 35,
	DomConstructorHTMLEmbedElement	= 36,
	DomConstructorHTMLFieldSetElement	= 37,
	DomConstructorHTMLFontElement	= 38,
	DomConstructorHTMLFormElement	= 39,
	DomConstructorHTMLFrameElement	= 40,
	DomConstructorHTMLFrameSetElement	= 41,
	DomConstructorHTMLGenericElement	= 42,
	DomConstructorHTMLHeadElement	= 43,
	DomConstructorHTMLHeadingElement	= 44,
	DomConstructorHTMLHRElement	= 45,
	DomConstructorHTMLHtmlElement	= 46,
	DomConstructorHTMLIFrameElement	= 47,
	DomConstructorHTMLImageElement	= 48,
	DomConstructorHTMLInputElement	= 49,
	DomConstructorHTMLIsIndexElement	= 50,
	DomConstructorHTMLLabelElement	= 51,
	DomConstructorHTMLLegendElement	= 52,
	DomConstructorHTMLLIElement	= 53,
	DomConstructorHTMLLinkElement	= 54,
	DomConstructorHTMLMapElement	= 55,
	DomConstructorHTMLMarqueeElement	= 56,
	DomConstructorHTMLMetaElement	= 57,
	DomConstructorHTMLModelessDialog	= 58,
	DomConstructorHTMLNamespaceInfo	= 59,
	DomConstructorHTMLNamespaceInfoCollection	= 60,
	DomConstructorHTMLNextIdElement	= 61,
	DomConstructorHTMLNoShowElement	= 62,
	DomConstructorHTMLObjectElement	= 63,
	DomConstructorHTMLOListElement	= 64,
	DomConstructorHTMLOptionElement	= 65,
	DomConstructorHTMLParagraphElement	= 66,
	DomConstructorHTMLParamElement	= 67,
	DomConstructorHTMLPhraseElement	= 68,
	DomConstructorHTMLPluginsCollection	= 69,
	DomConstructorHTMLPopup	= 70,
	DomConstructorHTMLScriptElement	= 71,
	DomConstructorHTMLSelectElement	= 72,
	DomConstructorHTMLSpanElement	= 73,
	DomConstructorHTMLStyleElement	= 74,
	DomConstructorHTMLTableCaptionElement	= 75,
	DomConstructorHTMLTableCellElement	= 76,
	DomConstructorHTMLTableColElement	= 77,
	DomConstructorHTMLTableElement	= 78,
	DomConstructorHTMLTableRowElement	= 79,
	DomConstructorHTMLTableSectionElement	= 80,
	DomConstructorHTMLTextAreaElement	= 81,
	DomConstructorHTMLTextElement	= 82,
	DomConstructorHTMLTitleElement	= 83,
	DomConstructorHTMLUListElement	= 84,
	DomConstructorHTMLUnknownElement	= 85,
	DomConstructorImage	= 86,
	DomConstructorLocation	= 87,
	DomConstructorNamedNodeMap	= 88,
	DomConstructorNavigator	= 89,
	DomConstructorNodeList	= 90,
	DomConstructorOption	= 91,
	DomConstructorScreen	= 92,
	DomConstructorSelection	= 93,
	DomConstructorStaticNodeList	= 94,
	DomConstructorStorage	= 95,
	DomConstructorStyleSheetList	= 96,
	DomConstructorStyleSheetPage	= 97,
	DomConstructorStyleSheetPageList	= 98,
	DomConstructorText	= 99,
	DomConstructorTextRange	= 100,
	DomConstructorTextRangeCollection	= 101,
	DomConstructorTextRectangle	= 102,
	DomConstructorTextRectangleList	= 103,
	DomConstructorWindow	= 104,
	DomConstructorXDomainRequest	= 105,
	DomConstructorXMLHttpRequest	= 106,
	DomConstructorMax	= 107,
	DomConstructor_Max	= 2147483647L
    } 	DomConstructor;

typedef 
enum _styleTextTransform
    {	styleTextTransformNotSet	= 0,
	styleTextTransformCapitalize	= 1,
	styleTextTransformLowercase	= 2,
	styleTextTransformUppercase	= 3,
	styleTextTransformNone	= 4,
	styleTextTransform_Max	= 2147483647L
    } 	styleTextTransform;

typedef 
enum _styleDataRepeat
    {	styleDataRepeatNone	= 0,
	styleDataRepeatInner	= 1,
	styleDataRepeat_Max	= 2147483647L
    } 	styleDataRepeat;

typedef 
enum _styleOverflow
    {	styleOverflowNotSet	= 0,
	styleOverflowAuto	= 1,
	styleOverflowHidden	= 2,
	styleOverflowVisible	= 3,
	styleOverflowScroll	= 4,
	styleOverflow_Max	= 2147483647L
    } 	styleOverflow;

typedef 
enum _styleTableLayout
    {	styleTableLayoutNotSet	= 0,
	styleTableLayoutAuto	= 1,
	styleTableLayoutFixed	= 2,
	styleTableLayout_Max	= 2147483647L
    } 	styleTableLayout;

typedef 
enum _styleBorderCollapse
    {	styleBorderCollapseNotSet	= 0,
	styleBorderCollapseSeparate	= 1,
	styleBorderCollapseCollapse	= 2,
	styleBorderCollapse_Max	= 2147483647L
    } 	styleBorderCollapse;

typedef 
enum _styleCaptionSide
    {	styleCaptionSideNotSet	= 0,
	styleCaptionSideTop	= 1,
	styleCaptionSideBottom	= 2,
	styleCaptionSideLeft	= 3,
	styleCaptionSideRight	= 4,
	styleCaptionSide_Max	= 2147483647L
    } 	styleCaptionSide;

typedef 
enum _styleEmptyCells
    {	styleEmptyCellsNotSet	= 0,
	styleEmptyCellsShow	= 1,
	styleEmptyCellsHide	= 2,
	styleEmptyCells_Max	= 2147483647L
    } 	styleEmptyCells;

typedef 
enum _styleFontStyle
    {	styleFontStyleNotSet	= 0,
	styleFontStyleItalic	= 1,
	styleFontStyleOblique	= 2,
	styleFontStyleNormal	= 3,
	styleFontStyle_Max	= 2147483647L
    } 	styleFontStyle;

typedef 
enum _styleFontVariant
    {	styleFontVariantNotSet	= 0,
	styleFontVariantSmallCaps	= 1,
	styleFontVariantNormal	= 2,
	styleFontVariant_Max	= 2147483647L
    } 	styleFontVariant;

typedef 
enum _styleBackgroundRepeat
    {	styleBackgroundRepeatRepeat	= 0,
	styleBackgroundRepeatRepeatX	= 1,
	styleBackgroundRepeatRepeatY	= 2,
	styleBackgroundRepeatNoRepeat	= 3,
	styleBackgroundRepeatNotSet	= 4,
	styleBackgroundRepeat_Max	= 2147483647L
    } 	styleBackgroundRepeat;

typedef 
enum _styleBackgroundAttachment
    {	styleBackgroundAttachmentFixed	= 0,
	styleBackgroundAttachmentScroll	= 1,
	styleBackgroundAttachmentNotSet	= 2,
	styleBackgroundAttachment_Max	= 2147483647L
    } 	styleBackgroundAttachment;

typedef 
enum _styleVerticalAlign
    {	styleVerticalAlignAuto	= 0,
	styleVerticalAlignBaseline	= 1,
	styleVerticalAlignSub	= 2,
	styleVerticalAlignSuper	= 3,
	styleVerticalAlignTop	= 4,
	styleVerticalAlignTextTop	= 5,
	styleVerticalAlignMiddle	= 6,
	styleVerticalAlignBottom	= 7,
	styleVerticalAlignTextBottom	= 8,
	styleVerticalAlignInherit	= 9,
	styleVerticalAlignNotSet	= 10,
	styleVerticalAlign_Max	= 2147483647L
    } 	styleVerticalAlign;

typedef 
enum _styleFontWeight
    {	styleFontWeightNotSet	= 0,
	styleFontWeight100	= 1,
	styleFontWeight200	= 2,
	styleFontWeight300	= 3,
	styleFontWeight400	= 4,
	styleFontWeight500	= 5,
	styleFontWeight600	= 6,
	styleFontWeight700	= 7,
	styleFontWeight800	= 8,
	styleFontWeight900	= 9,
	styleFontWeightNormal	= 10,
	styleFontWeightBold	= 11,
	styleFontWeightBolder	= 12,
	styleFontWeightLighter	= 13,
	styleFontWeight_Max	= 2147483647L
    } 	styleFontWeight;

typedef 
enum _styleBackgroundPositionX
    {	styleBackgroundPositionXNotSet	= 0,
	styleBackgroundPositionXLeft	= 1,
	styleBackgroundPositionXCenter	= 2,
	styleBackgroundPositionXRight	= 3,
	styleBackgroundPositionX_Max	= 2147483647L
    } 	styleBackgroundPositionX;

typedef 
enum _styleBackgroundPositionY
    {	styleBackgroundPositionYNotSet	= 0,
	styleBackgroundPositionYTop	= 1,
	styleBackgroundPositionYCenter	= 2,
	styleBackgroundPositionYBottom	= 3,
	styleBackgroundPositionY_Max	= 2147483647L
    } 	styleBackgroundPositionY;

typedef 
enum _styleFontSize
    {	styleFontSizeXXSmall	= 0,
	styleFontSizeXSmall	= 1,
	styleFontSizeSmall	= 2,
	styleFontSizeMedium	= 3,
	styleFontSizeLarge	= 4,
	styleFontSizeXLarge	= 5,
	styleFontSizeXXLarge	= 6,
	styleFontSizeSmaller	= 7,
	styleFontSizeLarger	= 8,
	styleFontSize_Max	= 2147483647L
    } 	styleFontSize;

typedef 
enum _styleZIndex
    {	styleZIndexAuto	= -2147483647,
	styleZIndex_Max	= 2147483647L
    } 	styleZIndex;

typedef 
enum _styleWidowsOrphans
    {	styleWidowsOrphansNotSet	= -2147483647,
	styleWidowsOrphans_Max	= 2147483647L
    } 	styleWidowsOrphans;

typedef 
enum _styleAuto
    {	styleAutoAuto	= 0,
	styleAuto_Max	= 2147483647L
    } 	styleAuto;

typedef 
enum _styleNone
    {	styleNoneNone	= 0,
	styleNone_Max	= 2147483647L
    } 	styleNone;

typedef 
enum _styleNormal
    {	styleNormalNormal	= 0,
	styleNormal_Max	= 2147483647L
    } 	styleNormal;

typedef 
enum _styleBorderWidth
    {	styleBorderWidthThin	= 0,
	styleBorderWidthMedium	= 1,
	styleBorderWidthThick	= 2,
	styleBorderWidth_Max	= 2147483647L
    } 	styleBorderWidth;

typedef 
enum _stylePosition
    {	stylePositionNotSet	= 0,
	stylePositionstatic	= 1,
	stylePositionrelative	= 2,
	stylePositionabsolute	= 3,
	stylePositionfixed	= 4,
	stylePosition_Max	= 2147483647L
    } 	stylePosition;

typedef 
enum _styleBorderStyle
    {	styleBorderStyleNotSet	= 0,
	styleBorderStyleDotted	= 1,
	styleBorderStyleDashed	= 2,
	styleBorderStyleSolid	= 3,
	styleBorderStyleDouble	= 4,
	styleBorderStyleGroove	= 5,
	styleBorderStyleRidge	= 6,
	styleBorderStyleInset	= 7,
	styleBorderStyleOutset	= 8,
	styleBorderStyleWindowInset	= 9,
	styleBorderStyleNone	= 10,
	styleBorderStyleHidden	= 11,
	styleBorderStyle_Max	= 2147483647L
    } 	styleBorderStyle;

typedef 
enum _styleStyleFloat
    {	styleStyleFloatNotSet	= 0,
	styleStyleFloatLeft	= 1,
	styleStyleFloatRight	= 2,
	styleStyleFloatNone	= 3,
	styleStyleFloat_Max	= 2147483647L
    } 	styleStyleFloat;

typedef 
enum _styleDisplay
    {	styleDisplayNotSet	= 0,
	styleDisplayBlock	= 1,
	styleDisplayInline	= 2,
	styleDisplayListItem	= 3,
	styleDisplayNone	= 4,
	styleDisplayTableHeaderGroup	= 5,
	styleDisplayTableFooterGroup	= 6,
	styleDisplayInlineBlock	= 7,
	styleDisplayTable	= 8,
	styleDisplayInlineTable	= 9,
	styleDisplayTableRow	= 10,
	styleDisplayTableRowGroup	= 11,
	styleDisplayTableColumn	= 12,
	styleDisplayTableColumnGroup	= 13,
	styleDisplayTableCell	= 14,
	styleDisplayTableCaption	= 15,
	styleDisplayRunIn	= 16,
	styleDisplayRuby	= 17,
	styleDisplayRubyBase	= 18,
	styleDisplayRubyText	= 19,
	styleDisplayRubyBaseContainer	= 20,
	styleDisplayRubyTextContainer	= 21,
	styleDisplay_Max	= 2147483647L
    } 	styleDisplay;

typedef 
enum _styleVisibility
    {	styleVisibilityNotSet	= 0,
	styleVisibilityInherit	= 1,
	styleVisibilityVisible	= 2,
	styleVisibilityHidden	= 3,
	styleVisibilityCollapse	= 4,
	styleVisibility_Max	= 2147483647L
    } 	styleVisibility;

typedef 
enum _styleListStyleType
    {	styleListStyleTypeNotSet	= 0,
	styleListStyleTypeDisc	= 1,
	styleListStyleTypeCircle	= 2,
	styleListStyleTypeSquare	= 3,
	styleListStyleTypeDecimal	= 4,
	styleListStyleTypeLowerRoman	= 5,
	styleListStyleTypeUpperRoman	= 6,
	styleListStyleTypeLowerAlpha	= 7,
	styleListStyleTypeUpperAlpha	= 8,
	styleListStyleTypeNone	= 9,
	styleListStyleTypeDecimalLeadingZero	= 10,
	styleListStyleTypeGeorgian	= 11,
	styleListStyleTypeArmenian	= 12,
	styleListStyleTypeUpperLatin	= 13,
	styleListStyleTypeLowerLatin	= 14,
	styleListStyleTypeUpperGreek	= 15,
	styleListStyleTypeLowerGreek	= 16,
	styleListStyleType_Max	= 2147483647L
    } 	styleListStyleType;

typedef 
enum _styleListStylePosition
    {	styleListStylePositionNotSet	= 0,
	styleListStylePositionInside	= 1,
	styleListStylePositionOutSide	= 2,
	styleListStylePosition_Max	= 2147483647L
    } 	styleListStylePosition;

typedef 
enum _styleWhiteSpace
    {	styleWhiteSpaceNotSet	= 0,
	styleWhiteSpaceNormal	= 1,
	styleWhiteSpacePre	= 2,
	styleWhiteSpaceNowrap	= 3,
	styleWhiteSpacePreline	= 4,
	styleWhiteSpacePrewrap	= 5,
	styleWhiteSpace_Max	= 2147483647L
    } 	styleWhiteSpace;

typedef 
enum _stylePageBreak
    {	stylePageBreakNotSet	= 0,
	stylePageBreakAuto	= 1,
	stylePageBreakAlways	= 2,
	stylePageBreakLeft	= 3,
	stylePageBreakRight	= 4,
	stylePageBreakAvoid	= 5,
	stylePageBreak_Max	= 2147483647L
    } 	stylePageBreak;

typedef 
enum _stylePageBreakInside
    {	stylePageBreakInsideNotSet	= 0,
	stylePageBreakInsideAuto	= 1,
	stylePageBreakInsideAvoid	= 2,
	stylePageBreakInside_Max	= 2147483647L
    } 	stylePageBreakInside;

typedef 
enum _styleCursor
    {	styleCursorAuto	= 0,
	styleCursorCrosshair	= 1,
	styleCursorDefault	= 2,
	styleCursorHand	= 3,
	styleCursorMove	= 4,
	styleCursorE_resize	= 5,
	styleCursorNe_resize	= 6,
	styleCursorNw_resize	= 7,
	styleCursorN_resize	= 8,
	styleCursorSe_resize	= 9,
	styleCursorSw_resize	= 10,
	styleCursorS_resize	= 11,
	styleCursorW_resize	= 12,
	styleCursorText	= 13,
	styleCursorWait	= 14,
	styleCursorHelp	= 15,
	styleCursorPointer	= 16,
	styleCursorProgress	= 17,
	styleCursorNot_allowed	= 18,
	styleCursorNo_drop	= 19,
	styleCursorVertical_text	= 20,
	styleCursorall_scroll	= 21,
	styleCursorcol_resize	= 22,
	styleCursorrow_resize	= 23,
	styleCursorcustom	= 24,
	styleCursorNotSet	= 25,
	styleCursor_Max	= 2147483647L
    } 	styleCursor;

typedef 
enum _styleDir
    {	styleDirNotSet	= 0,
	styleDirLeftToRight	= 1,
	styleDirRightToLeft	= 2,
	styleDirInherit	= 3,
	styleDir_Max	= 2147483647L
    } 	styleDir;

typedef 
enum _styleBidi
    {	styleBidiNotSet	= 0,
	styleBidiNormal	= 1,
	styleBidiEmbed	= 2,
	styleBidiOverride	= 3,
	styleBidiInherit	= 4,
	styleBidi_Max	= 2147483647L
    } 	styleBidi;

typedef 
enum _styleImeMode
    {	styleImeModeAuto	= 0,
	styleImeModeActive	= 1,
	styleImeModeInactive	= 2,
	styleImeModeDisabled	= 3,
	styleImeModeNotSet	= 4,
	styleImeMode_Max	= 2147483647L
    } 	styleImeMode;

typedef 
enum _styleRubyAlign
    {	styleRubyAlignNotSet	= 0,
	styleRubyAlignAuto	= 1,
	styleRubyAlignLeft	= 2,
	styleRubyAlignCenter	= 3,
	styleRubyAlignRight	= 4,
	styleRubyAlignDistributeLetter	= 5,
	styleRubyAlignDistributeSpace	= 6,
	styleRubyAlignLineEdge	= 7,
	styleRubyAlign_Max	= 2147483647L
    } 	styleRubyAlign;

typedef 
enum _styleRubyPosition
    {	styleRubyPositionNotSet	= 0,
	styleRubyPositionAbove	= 1,
	styleRubyPositionInline	= 2,
	styleRubyPosition_Max	= 2147483647L
    } 	styleRubyPosition;

typedef 
enum _styleRubyOverhang
    {	styleRubyOverhangNotSet	= 0,
	styleRubyOverhangAuto	= 1,
	styleRubyOverhangWhitespace	= 2,
	styleRubyOverhangNone	= 3,
	styleRubyOverhang_Max	= 2147483647L
    } 	styleRubyOverhang;

typedef 
enum _styleLayoutGridChar
    {	styleLayoutGridCharNotSet	= 0,
	styleLayoutGridCharAuto	= 1,
	styleLayoutGridCharNone	= 2,
	styleLayoutGridChar_Max	= 2147483647L
    } 	styleLayoutGridChar;

typedef 
enum _styleLayoutGridLine
    {	styleLayoutGridLineNotSet	= 0,
	styleLayoutGridLineAuto	= 1,
	styleLayoutGridLineNone	= 2,
	styleLayoutGridLine_Max	= 2147483647L
    } 	styleLayoutGridLine;

typedef 
enum _styleLayoutGridMode
    {	styleLayoutGridModeNotSet	= 0,
	styleLayoutGridModeChar	= 1,
	styleLayoutGridModeLine	= 2,
	styleLayoutGridModeBoth	= 3,
	styleLayoutGridModeNone	= 4,
	styleLayoutGridMode_Max	= 2147483647L
    } 	styleLayoutGridMode;

typedef 
enum _styleLayoutGridType
    {	styleLayoutGridTypeNotSet	= 0,
	styleLayoutGridTypeLoose	= 1,
	styleLayoutGridTypeStrict	= 2,
	styleLayoutGridTypeFixed	= 3,
	styleLayoutGridType_Max	= 2147483647L
    } 	styleLayoutGridType;

typedef 
enum _styleLineBreak
    {	styleLineBreakNotSet	= 0,
	styleLineBreakNormal	= 1,
	styleLineBreakStrict	= 2,
	styleLineBreak_Max	= 2147483647L
    } 	styleLineBreak;

typedef 
enum _styleWordBreak
    {	styleWordBreakNotSet	= 0,
	styleWordBreakNormal	= 1,
	styleWordBreakBreakAll	= 2,
	styleWordBreakKeepAll	= 3,
	styleWordBreak_Max	= 2147483647L
    } 	styleWordBreak;

typedef 
enum _styleWordWrap
    {	styleWordWrapNotSet	= 0,
	styleWordWrapOff	= 1,
	styleWordWrapOn	= 2,
	styleWordWrap_Max	= 2147483647L
    } 	styleWordWrap;

typedef 
enum _styleTextJustify
    {	styleTextJustifyNotSet	= 0,
	styleTextJustifyInterWord	= 1,
	styleTextJustifyNewspaper	= 2,
	styleTextJustifyDistribute	= 3,
	styleTextJustifyDistributeAllLines	= 4,
	styleTextJustifyInterIdeograph	= 5,
	styleTextJustifyInterCluster	= 6,
	styleTextJustifyKashida	= 7,
	styleTextJustifyAuto	= 8,
	styleTextJustify_Max	= 2147483647L
    } 	styleTextJustify;

typedef 
enum _styleTextAlignLast
    {	styleTextAlignLastNotSet	= 0,
	styleTextAlignLastLeft	= 1,
	styleTextAlignLastCenter	= 2,
	styleTextAlignLastRight	= 3,
	styleTextAlignLastJustify	= 4,
	styleTextAlignLastAuto	= 5,
	styleTextAlignLast_Max	= 2147483647L
    } 	styleTextAlignLast;

typedef 
enum _styleTextJustifyTrim
    {	styleTextJustifyTrimNotSet	= 0,
	styleTextJustifyTrimNone	= 1,
	styleTextJustifyTrimPunctuation	= 2,
	styleTextJustifyTrimPunctAndKana	= 3,
	styleTextJustifyTrim_Max	= 2147483647L
    } 	styleTextJustifyTrim;

typedef 
enum _styleAccelerator
    {	styleAcceleratorFalse	= 0,
	styleAcceleratorTrue	= 1,
	styleAccelerator_Max	= 2147483647L
    } 	styleAccelerator;

typedef 
enum _styleLayoutFlow
    {	styleLayoutFlowHorizontal	= 0,
	styleLayoutFlowVerticalIdeographic	= 1,
	styleLayoutFlowNotSet	= 2,
	styleLayoutFlow_Max	= 2147483647L
    } 	styleLayoutFlow;

typedef 
enum _styleBlockProgression
    {	styleBlockProgressionTb	= 0,
	styleBlockProgressionRl	= 1,
	styleBlockProgressionBt	= 2,
	styleBlockProgressionLr	= 3,
	styleBlockProgressionNotSet	= 4,
	styleBlockProgression_Max	= 2147483647L
    } 	styleBlockProgression;

typedef 
enum _styleWritingMode
    {	styleWritingModeLrtb	= 0,
	styleWritingModeTbrl	= 1,
	styleWritingModeRltb	= 2,
	styleWritingModeBtrl	= 3,
	styleWritingModeNotSet	= 4,
	styleWritingModeTblr	= 5,
	styleWritingModeBtlr	= 6,
	styleWritingModeLrbt	= 7,
	styleWritingModeRlbt	= 8,
	styleWritingMode_Max	= 2147483647L
    } 	styleWritingMode;

typedef 
enum _styleBool
    {	styleBoolFalse	= 0,
	styleBoolTrue	= 1,
	styleBool_Max	= 2147483647L
    } 	styleBool;

typedef 
enum _styleTextUnderlinePosition
    {	styleTextUnderlinePositionBelow	= 0,
	styleTextUnderlinePositionAbove	= 1,
	styleTextUnderlinePositionAuto	= 2,
	styleTextUnderlinePositionNotSet	= 3,
	styleTextUnderlinePosition_Max	= 2147483647L
    } 	styleTextUnderlinePosition;

typedef 
enum _styleTextOverflow
    {	styleTextOverflowClip	= 0,
	styleTextOverflowEllipsis	= 1,
	styleTextOverflowNotSet	= 2,
	styleTextOverflow_Max	= 2147483647L
    } 	styleTextOverflow;

typedef 
enum _styleInterpolation
    {	styleInterpolationNotSet	= 0,
	styleInterpolationNN	= 1,
	styleInterpolationBCH	= 2,
	styleInterpolation_Max	= 2147483647L
    } 	styleInterpolation;

typedef 
enum _styleBoxSizing
    {	styleBoxSizingNotSet	= 0,
	styleBoxSizingContentBox	= 1,
	styleBoxSizingBorderBox	= 2,
	styleBoxSizing_Max	= 2147483647L
    } 	styleBoxSizing;

EXTERN_C const GUID CLSID_CStyle;
EXTERN_C const GUID CLSID_CRuleStyle;
typedef 
enum _styleTextLineThroughStyle
    {	styleTextLineThroughStyleUndefined	= 0,
	styleTextLineThroughStyleSingle	= 1,
	styleTextLineThroughStyleDouble	= 2,
	styleTextLineThroughStyle_Max	= 2147483647L
    } 	styleTextLineThroughStyle;

typedef 
enum _styleTextUnderlineStyle
    {	styleTextUnderlineStyleUndefined	= 0,
	styleTextUnderlineStyleSingle	= 1,
	styleTextUnderlineStyleDouble	= 2,
	styleTextUnderlineStyleWords	= 3,
	styleTextUnderlineStyleDotted	= 4,
	styleTextUnderlineStyleThick	= 5,
	styleTextUnderlineStyleDash	= 6,
	styleTextUnderlineStyleDotDash	= 7,
	styleTextUnderlineStyleDotDotDash	= 8,
	styleTextUnderlineStyleWave	= 9,
	styleTextUnderlineStyleSingleAccounting	= 10,
	styleTextUnderlineStyleDoubleAccounting	= 11,
	styleTextUnderlineStyleThickDash	= 12,
	styleTextUnderlineStyle_Max	= 2147483647L
    } 	styleTextUnderlineStyle;

typedef 
enum _styleTextEffect
    {	styleTextEffectNone	= 0,
	styleTextEffectEmboss	= 1,
	styleTextEffectEngrave	= 2,
	styleTextEffectOutline	= 3,
	styleTextEffect_Max	= 2147483647L
    } 	styleTextEffect;

typedef 
enum _styleDefaultTextSelection
    {	styleDefaultTextSelectionFalse	= 0,
	styleDefaultTextSelectionTrue	= 1,
	styleDefaultTextSelection_Max	= 2147483647L
    } 	styleDefaultTextSelection;

typedef 
enum _styleTextDecoration
    {	styleTextDecorationNone	= 0,
	styleTextDecorationUnderline	= 1,
	styleTextDecorationOverline	= 2,
	styleTextDecorationLineThrough	= 3,
	styleTextDecorationBlink	= 4,
	styleTextDecoration_Max	= 2147483647L
    } 	styleTextDecoration;

EXTERN_C const GUID CLSID_CRenderStyle;
typedef 
enum _textDecoration
    {	textDecorationNone	= 0,
	textDecorationUnderline	= 1,
	textDecorationOverline	= 2,
	textDecorationLineThrough	= 3,
	textDecorationBlink	= 4,
	textDecoration_Max	= 2147483647L
    } 	textDecoration;

EXTERN_C const GUID CLSID_CCurrentStyle;




EXTERN_C const GUID CLSID_CAttribute;
EXTERN_C const GUID CLSID_CDOMTextNode;
EXTERN_C const GUID CLSID_CDOMImplementation;
EXTERN_C const GUID CLSID_CAttrCollectionator;
EXTERN_C const GUID CLSID_CStaticNodeList;
EXTERN_C const GUID CLSID_CDOMChildrenCollection;
typedef 
enum _htmlListType
    {	htmlListTypeNotSet	= 0,
	htmlListTypeLargeAlpha	= 1,
	htmlListTypeSmallAlpha	= 2,
	htmlListTypeLargeRoman	= 3,
	htmlListTypeSmallRoman	= 4,
	htmlListTypeNumbers	= 5,
	htmlListTypeDisc	= 6,
	htmlListTypeCircle	= 7,
	htmlListTypeSquare	= 8,
	htmlListType_Max	= 2147483647L
    } 	htmlListType;

typedef 
enum _htmlMethod
    {	htmlMethodNotSet	= 0,
	htmlMethodGet	= 1,
	htmlMethodPost	= 2,
	htmlMethod_Max	= 2147483647L
    } 	htmlMethod;

typedef 
enum _htmlWrap
    {	htmlWrapOff	= 1,
	htmlWrapSoft	= 2,
	htmlWrapHard	= 3,
	htmlWrap_Max	= 2147483647L
    } 	htmlWrap;

typedef 
enum _htmlDir
    {	htmlDirNotSet	= 0,
	htmlDirLeftToRight	= 1,
	htmlDirRightToLeft	= 2,
	htmlDir_Max	= 2147483647L
    } 	htmlDir;

typedef 
enum _htmlEditable
    {	htmlEditableInherit	= 0,
	htmlEditableTrue	= 1,
	htmlEditableFalse	= 2,
	htmlEditable_Max	= 2147483647L
    } 	htmlEditable;

typedef 
enum _htmlInput
    {	htmlInputNotSet	= 0,
	htmlInputButton	= 1,
	htmlInputCheckbox	= 2,
	htmlInputFile	= 3,
	htmlInputHidden	= 4,
	htmlInputImage	= 5,
	htmlInputPassword	= 6,
	htmlInputRadio	= 7,
	htmlInputReset	= 8,
	htmlInputSelectOne	= 9,
	htmlInputSelectMultiple	= 10,
	htmlInputSubmit	= 11,
	htmlInputText	= 12,
	htmlInputTextarea	= 13,
	htmlInputRichtext	= 14,
	htmlInput_Max	= 2147483647L
    } 	htmlInput;

typedef 
enum _htmlEncoding
    {	htmlEncodingURL	= 0,
	htmlEncodingMultipart	= 1,
	htmlEncodingText	= 2,
	htmlEncoding_Max	= 2147483647L
    } 	htmlEncoding;

typedef 
enum _htmlAdjacency
    {	htmlAdjacencyBeforeBegin	= 1,
	htmlAdjacencyAfterBegin	= 2,
	htmlAdjacencyBeforeEnd	= 3,
	htmlAdjacencyAfterEnd	= 4,
	htmlAdjacency_Max	= 2147483647L
    } 	htmlAdjacency;

typedef 
enum _htmlTabIndex
    {	htmlTabIndexNotSet	= -32768,
	htmlTabIndex_Max	= 2147483647L
    } 	htmlTabIndex;

typedef 
enum _htmlComponent
    {	htmlComponentClient	= 0,
	htmlComponentSbLeft	= 1,
	htmlComponentSbPageLeft	= 2,
	htmlComponentSbHThumb	= 3,
	htmlComponentSbPageRight	= 4,
	htmlComponentSbRight	= 5,
	htmlComponentSbUp	= 6,
	htmlComponentSbPageUp	= 7,
	htmlComponentSbVThumb	= 8,
	htmlComponentSbPageDown	= 9,
	htmlComponentSbDown	= 10,
	htmlComponentSbLeft2	= 11,
	htmlComponentSbPageLeft2	= 12,
	htmlComponentSbRight2	= 13,
	htmlComponentSbPageRight2	= 14,
	htmlComponentSbUp2	= 15,
	htmlComponentSbPageUp2	= 16,
	htmlComponentSbDown2	= 17,
	htmlComponentSbPageDown2	= 18,
	htmlComponentSbTop	= 19,
	htmlComponentSbBottom	= 20,
	htmlComponentOutside	= 21,
	htmlComponentGHTopLeft	= 22,
	htmlComponentGHLeft	= 23,
	htmlComponentGHTop	= 24,
	htmlComponentGHBottomLeft	= 25,
	htmlComponentGHTopRight	= 26,
	htmlComponentGHBottom	= 27,
	htmlComponentGHRight	= 28,
	htmlComponentGHBottomRight	= 29,
	htmlComponent_Max	= 2147483647L
    } 	htmlComponent;

typedef 
enum _htmlApplyLocation
    {	htmlApplyLocationInside	= 0,
	htmlApplyLocationOutside	= 1,
	htmlApplyLocation_Max	= 2147483647L
    } 	htmlApplyLocation;

typedef 
enum _htmlGlyphMode
    {	htmlGlyphModeNone	= 0,
	htmlGlyphModeBegin	= 1,
	htmlGlyphModeEnd	= 2,
	htmlGlyphModeBoth	= 3,
	htmlGlyphMode_Max	= 2147483647L
    } 	htmlGlyphMode;





EXTERN_C const GUID CLSID_CDefaults;

EXTERN_C const GUID CLSID_CHtmlComponentDD;
EXTERN_C const GUID CLSID_CHtmlComponentProperty;
EXTERN_C const GUID CLSID_CHtmlComponentMethod;
EXTERN_C const GUID CLSID_CHtmlComponentEvent;
EXTERN_C const GUID CLSID_CHtmlComponentAttach;
EXTERN_C const GUID CLSID_CHtmlComponentDesc;
EXTERN_C const GUID CLSID_CPeerUrnCollection;
EXTERN_C const GUID CLSID_CGenericElement;
EXTERN_C const GUID CLSID_CStyleSheetRule;
EXTERN_C const GUID CLSID_CStyleSheetRuleArray;
EXTERN_C const GUID CLSID_CStyleSheetPage;
EXTERN_C const GUID CLSID_CStyleSheetPageArray;

EXTERN_C const GUID CLSID_CStyleSheet;
EXTERN_C const GUID CLSID_CStyleSheetArray;
EXTERN_C const GUID CLSID_CLinkElement;
typedef 
enum _htmlUnit
    {	htmlUnitCharacter	= 1,
	htmlUnitWord	= 2,
	htmlUnitSentence	= 3,
	htmlUnitTextEdit	= 6,
	htmlUnit_Max	= 2147483647L
    } 	htmlUnit;

typedef 
enum _htmlEndPoints
    {	htmlEndPointsStartToStart	= 1,
	htmlEndPointsStartToEnd	= 2,
	htmlEndPointsEndToStart	= 3,
	htmlEndPointsEndToEnd	= 4,
	htmlEndPoints_Max	= 2147483647L
    } 	htmlEndPoints;

typedef 
enum _htmlDirection
    {	htmlDirectionForward	= 99999,
	htmlDirectionBackward	= -99999,
	htmlDirection_Max	= 2147483647L
    } 	htmlDirection;

EXTERN_C const GUID CLSID_CFormElement;
typedef 
enum _htmlStart
    {	htmlStartfileopen	= 0,
	htmlStartmouseover	= 1,
	htmlStart_Max	= 2147483647L
    } 	htmlStart;

EXTERN_C const GUID CLSID_CTextElement;
EXTERN_C const GUID CLSID_CImgElement;
EXTERN_C const GUID CLSID_CImageElementFactory;
EXTERN_C const GUID CLSID_CXMLHttpRequest;
EXTERN_C const GUID CLSID_CXMLHttpRequestFactory;
typedef 
enum _bodyScroll
    {	bodyScrollyes	= 1,
	bodyScrollno	= 2,
	bodyScrollauto	= 4,
	bodyScrolldefault	= 3,
	bodyScroll_Max	= 2147483647L
    } 	bodyScroll;

EXTERN_C const GUID CLSID_CBodyElement;
EXTERN_C const GUID CLSID_CFontElement;
EXTERN_C const GUID CLSID_CAnchorElement;
EXTERN_C const GUID CLSID_CLabelElement;
EXTERN_C const GUID CLSID_CListElement;
EXTERN_C const GUID CLSID_CUListElement;
EXTERN_C const GUID CLSID_COListElement;
EXTERN_C const GUID CLSID_CLIElement;
EXTERN_C const GUID CLSID_CBlockElement;
EXTERN_C const GUID CLSID_CDivElement;
EXTERN_C const GUID CLSID_CDDElement;
EXTERN_C const GUID CLSID_CDTElement;
EXTERN_C const GUID CLSID_CBRElement;
EXTERN_C const GUID CLSID_CDListElement;
EXTERN_C const GUID CLSID_CHRElement;
EXTERN_C const GUID CLSID_CParaElement;
EXTERN_C const GUID CLSID_CElementCollection;
EXTERN_C const GUID CLSID_CHeaderElement;
typedef 
enum _htmlSelectType
    {	htmlSelectTypeSelectOne	= 1,
	htmlSelectTypeSelectMultiple	= 2,
	htmlSelectType_Max	= 2147483647L
    } 	htmlSelectType;

typedef 
enum _htmlSelectExFlag
    {	htmlSelectExFlagNone	= 0,
	htmlSelectExFlagHideSelectionInDesign	= 0x1,
	htmlSelectExFlag_Max	= 2147483647L
    } 	htmlSelectExFlag;


EXTERN_C const GUID CLSID_CSelectElement;
EXTERN_C const GUID CLSID_CWndSelectElement;
typedef 
enum _htmlSelection
    {	htmlSelectionNone	= 0,
	htmlSelectionText	= 1,
	htmlSelectionControl	= 2,
	htmlSelectionTable	= 3,
	htmlSelection_Max	= 2147483647L
    } 	htmlSelection;

EXTERN_C const GUID CLSID_COptionElement;
EXTERN_C const GUID CLSID_COptionElementFactory;
EXTERN_C const GUID CLSID_CWndOptionElement;
EXTERN_C const GUID CLSID_CInput;
EXTERN_C const GUID CLSID_CTextArea;
EXTERN_C const GUID CLSID_CRichtext;
EXTERN_C const GUID CLSID_CButton;
typedef 
enum _htmlMarqueeBehavior
    {	htmlMarqueeBehaviorscroll	= 1,
	htmlMarqueeBehaviorslide	= 2,
	htmlMarqueeBehavioralternate	= 3,
	htmlMarqueeBehavior_Max	= 2147483647L
    } 	htmlMarqueeBehavior;

typedef 
enum _htmlMarqueeDirection
    {	htmlMarqueeDirectionleft	= 1,
	htmlMarqueeDirectionright	= 3,
	htmlMarqueeDirectionup	= 5,
	htmlMarqueeDirectiondown	= 7,
	htmlMarqueeDirection_Max	= 2147483647L
    } 	htmlMarqueeDirection;

EXTERN_C const GUID CLSID_CMarquee;
EXTERN_C const GUID CLSID_CHtmlElement;
EXTERN_C const GUID CLSID_CHeadElement;
EXTERN_C const GUID CLSID_CTitleElement;
EXTERN_C const GUID CLSID_CMetaElement;
EXTERN_C const GUID CLSID_CBaseElement;
EXTERN_C const GUID CLSID_CIsIndexElement;
EXTERN_C const GUID CLSID_CNextIdElement;
EXTERN_C const GUID CLSID_CBaseFontElement;
EXTERN_C const GUID CLSID_CUnknownElement;
EXTERN_C const GUID CLSID_COmHistory;
EXTERN_C const GUID CLSID_CMimeTypes;
EXTERN_C const GUID CLSID_CPlugins;
EXTERN_C const GUID CLSID_COpsProfile;
EXTERN_C const GUID CLSID_COmNavigator;
EXTERN_C const GUID CLSID_COmLocation;
typedef 
enum _htmlPersistState
    {	htmlPersistStateNormal	= 0,
	htmlPersistStateFavorite	= 1,
	htmlPersistStateHistory	= 2,
	htmlPersistStateSnapshot	= 3,
	htmlPersistStateUserData	= 4,
	htmlPersistState_Max	= 2147483647L
    } 	htmlPersistState;

typedef 
enum _htmlDropEffect
    {	htmlDropEffectCopy	= 0,
	htmlDropEffectLink	= 1,
	htmlDropEffectMove	= 2,
	htmlDropEffectNone	= 3,
	htmlDropEffect_Max	= 2147483647L
    } 	htmlDropEffect;

typedef 
enum _htmlEffectAllowed
    {	htmlEffectAllowedCopy	= 0,
	htmlEffectAllowedLink	= 1,
	htmlEffectAllowedMove	= 2,
	htmlEffectAllowedCopyLink	= 3,
	htmlEffectAllowedCopyMove	= 4,
	htmlEffectAllowedLinkMove	= 5,
	htmlEffectAllowedAll	= 6,
	htmlEffectAllowedNone	= 7,
	htmlEffectAllowedUninitialized	= 8,
	htmlEffectAllowed_Max	= 2147483647L
    } 	htmlEffectAllowed;

EXTERN_C const GUID CLSID_CEventObj;







EXTERN_C const GUID CLSID_CFramesCollection;
EXTERN_C const GUID CLSID_CScreen;
EXTERN_C const GUID CLSID_CWindow;
EXTERN_C const GUID CLSID_COmWindowProxy;
EXTERN_C const GUID CLSID_CDocumentVersion;
EXTERN_C const GUID CLSID_CDocumentVersionCollection;
typedef 
enum _htmlCompatMode
    {	htmlCompatModeBackCompat	= 0,
	htmlCompatModeCSS1Compat	= 1,
	htmlCompatMode_Max	= 2147483647L
    } 	htmlCompatMode;

EXTERN_C const GUID CLSID_CDocument;
EXTERN_C const GUID CLSID_CScriptlet;
typedef 
enum _BoolValue
    {	True	= 1,
	False	= 0,
	BoolValue_Max	= 2147483647L
    } 	BoolValue;

EXTERN_C const GUID CLSID_CPluginSite;
EXTERN_C const GUID CLSID_CAreasCollection;
EXTERN_C const GUID CLSID_CMapElement;
EXTERN_C const GUID CLSID_CAreaElement;
typedef 
enum _htmlCaptionAlign
    {	htmlCaptionAlignNotSet	= 0,
	htmlCaptionAlignLeft	= 1,
	htmlCaptionAlignCenter	= 2,
	htmlCaptionAlignRight	= 3,
	htmlCaptionAlignJustify	= 4,
	htmlCaptionAlignTop	= 5,
	htmlCaptionAlignBottom	= 6,
	htmlCaptionAlign_Max	= 2147483647L
    } 	htmlCaptionAlign;

typedef 
enum _htmlCaptionVAlign
    {	htmlCaptionVAlignNotSet	= 0,
	htmlCaptionVAlignTop	= 1,
	htmlCaptionVAlignBottom	= 2,
	htmlCaptionVAlign_Max	= 2147483647L
    } 	htmlCaptionVAlign;

EXTERN_C const GUID CLSID_CTableCaption;
EXTERN_C const GUID CLSID_CCommentElement;
EXTERN_C const GUID CLSID_CPhraseElement;
EXTERN_C const GUID CLSID_CSpanElement;
typedef 
enum _htmlFrame
    {	htmlFrameNotSet	= 0,
	htmlFramevoid	= 1,
	htmlFrameabove	= 2,
	htmlFramebelow	= 3,
	htmlFramehsides	= 4,
	htmlFramelhs	= 5,
	htmlFramerhs	= 6,
	htmlFramevsides	= 7,
	htmlFramebox	= 8,
	htmlFrameborder	= 9,
	htmlFrame_Max	= 2147483647L
    } 	htmlFrame;

typedef 
enum _htmlRules
    {	htmlRulesNotSet	= 0,
	htmlRulesnone	= 1,
	htmlRulesgroups	= 2,
	htmlRulesrows	= 3,
	htmlRulescols	= 4,
	htmlRulesall	= 5,
	htmlRules_Max	= 2147483647L
    } 	htmlRules;

typedef 
enum _htmlCellAlign
    {	htmlCellAlignNotSet	= 0,
	htmlCellAlignLeft	= 1,
	htmlCellAlignCenter	= 2,
	htmlCellAlignRight	= 3,
	htmlCellAlignMiddle	= htmlCellAlignCenter,
	htmlCellAlign_Max	= 2147483647L
    } 	htmlCellAlign;

typedef 
enum _htmlCellVAlign
    {	htmlCellVAlignNotSet	= 0,
	htmlCellVAlignTop	= 1,
	htmlCellVAlignMiddle	= 2,
	htmlCellVAlignBottom	= 3,
	htmlCellVAlignBaseline	= 4,
	htmlCellVAlignCenter	= htmlCellVAlignMiddle,
	htmlCellVAlign_Max	= 2147483647L
    } 	htmlCellVAlign;


EXTERN_C const GUID CLSID_CTable;
EXTERN_C const GUID CLSID_CTableCol;
EXTERN_C const GUID CLSID_CTableSection;
EXTERN_C const GUID CLSID_CTableRow;
EXTERN_C const GUID CLSID_CTableCell;
EXTERN_C const GUID CLSID_CScriptElement;
EXTERN_C const GUID CLSID_CNoShowElement;
EXTERN_C const GUID CLSID_CObjectElement;
EXTERN_C const GUID CLSID_CParamElement;
typedef 
enum _frameScrolling
    {	frameScrollingyes	= 1,
	frameScrollingno	= 2,
	frameScrollingauto	= 4,
	frameScrolling_Max	= 2147483647L
    } 	frameScrolling;

EXTERN_C const GUID CLSID_CFrameSite;
EXTERN_C const GUID CLSID_CFrameElement;
EXTERN_C const GUID CLSID_CIFrameElement;
EXTERN_C const GUID CLSID_C1DElement;
EXTERN_C const GUID CLSID_CFieldSetElement;
EXTERN_C const GUID CLSID_CLegendElement;
EXTERN_C const GUID CLSID_CSpanSite;
EXTERN_C const GUID CLSID_CFrameSetSite;
EXTERN_C const GUID CLSID_CBGsound;
EXTERN_C const GUID CLSID_CStyleElement;
EXTERN_C const GUID CLSID_CFontFace;
EXTERN_C const GUID CLSID_CXDomainRequest;
EXTERN_C const GUID CLSID_CXDomainRequestFactory;
EXTERN_C const GUID CLSID_CStorage;
typedef 
enum _ELEMENT_CORNER
    {	ELEMENT_CORNER_NONE	= 0,
	ELEMENT_CORNER_TOP	= 1,
	ELEMENT_CORNER_LEFT	= 2,
	ELEMENT_CORNER_BOTTOM	= 3,
	ELEMENT_CORNER_RIGHT	= 4,
	ELEMENT_CORNER_TOPLEFT	= 5,
	ELEMENT_CORNER_TOPRIGHT	= 6,
	ELEMENT_CORNER_BOTTOMLEFT	= 7,
	ELEMENT_CORNER_BOTTOMRIGHT	= 8,
	ELEMENT_CORNER_Max	= 2147483647L
    } 	ELEMENT_CORNER;

typedef 
enum _SECUREURLHOSTVALIDATE_FLAGS
    {	SUHV_PROMPTBEFORENO	= 0x1,
	SUHV_SILENTYES	= 0x2,
	SUHV_UNSECURESOURCE	= 0x4,
	SECUREURLHOSTVALIDATE_FLAGS_Max	= 2147483647L
    } 	SECUREURLHOSTVALIDATE_FLAGS;

typedef 
enum _POINTER_GRAVITY
    {	POINTER_GRAVITY_Left	= 0,
	POINTER_GRAVITY_Right	= 1,
	POINTER_GRAVITY_Max	= 2147483647L
    } 	POINTER_GRAVITY;

typedef 
enum _ELEMENT_ADJACENCY
    {	ELEM_ADJ_BeforeBegin	= 0,
	ELEM_ADJ_AfterBegin	= 1,
	ELEM_ADJ_BeforeEnd	= 2,
	ELEM_ADJ_AfterEnd	= 3,
	ELEMENT_ADJACENCY_Max	= 2147483647L
    } 	ELEMENT_ADJACENCY;

typedef 
enum _MARKUP_CONTEXT_TYPE
    {	CONTEXT_TYPE_None	= 0,
	CONTEXT_TYPE_Text	= 1,
	CONTEXT_TYPE_EnterScope	= 2,
	CONTEXT_TYPE_ExitScope	= 3,
	CONTEXT_TYPE_NoScope	= 4,
	MARKUP_CONTEXT_TYPE_Max	= 2147483647L
    } 	MARKUP_CONTEXT_TYPE;

typedef 
enum _FINDTEXT_FLAGS
    {	FINDTEXT_BACKWARDS	= 0x1,
	FINDTEXT_WHOLEWORD	= 0x2,
	FINDTEXT_MATCHCASE	= 0x4,
	FINDTEXT_RAW	= 0x20000,
	FINDTEXT_MATCHDIAC	= 0x20000000,
	FINDTEXT_MATCHKASHIDA	= 0x40000000,
	FINDTEXT_MATCHALEFHAMZA	= 0x80000000,
	FINDTEXT_FLAGS_Max	= 2147483647L
    } 	FINDTEXT_FLAGS;

typedef 
enum _MOVEUNIT_ACTION
    {	MOVEUNIT_PREVCHAR	= 0,
	MOVEUNIT_NEXTCHAR	= 1,
	MOVEUNIT_PREVCLUSTERBEGIN	= 2,
	MOVEUNIT_NEXTCLUSTERBEGIN	= 3,
	MOVEUNIT_PREVCLUSTEREND	= 4,
	MOVEUNIT_NEXTCLUSTEREND	= 5,
	MOVEUNIT_PREVWORDBEGIN	= 6,
	MOVEUNIT_NEXTWORDBEGIN	= 7,
	MOVEUNIT_PREVWORDEND	= 8,
	MOVEUNIT_NEXTWORDEND	= 9,
	MOVEUNIT_PREVPROOFWORD	= 10,
	MOVEUNIT_NEXTPROOFWORD	= 11,
	MOVEUNIT_NEXTURLBEGIN	= 12,
	MOVEUNIT_PREVURLBEGIN	= 13,
	MOVEUNIT_NEXTURLEND	= 14,
	MOVEUNIT_PREVURLEND	= 15,
	MOVEUNIT_PREVSENTENCE	= 16,
	MOVEUNIT_NEXTSENTENCE	= 17,
	MOVEUNIT_PREVBLOCK	= 18,
	MOVEUNIT_NEXTBLOCK	= 19,
	MOVEUNIT_ACTION_Max	= 2147483647L
    } 	MOVEUNIT_ACTION;

typedef 
enum _PARSE_FLAGS
    {	PARSE_ABSOLUTIFYIE40URLS	= 0x1,
	PARSE_FLAGS_Max	= 2147483647L
    } 	PARSE_FLAGS;

typedef 
enum _ELEMENT_TAG_ID
    {	TAGID_NULL	= 0,
	TAGID_UNKNOWN	= 1,
	TAGID_A	= 2,
	TAGID_ACRONYM	= 3,
	TAGID_ADDRESS	= 4,
	TAGID_APPLET	= 5,
	TAGID_AREA	= 6,
	TAGID_B	= 7,
	TAGID_BASE	= 8,
	TAGID_BASEFONT	= 9,
	TAGID_BDO	= 10,
	TAGID_BGSOUND	= 11,
	TAGID_BIG	= 12,
	TAGID_BLINK	= 13,
	TAGID_BLOCKQUOTE	= 14,
	TAGID_BODY	= 15,
	TAGID_BR	= 16,
	TAGID_BUTTON	= 17,
	TAGID_CAPTION	= 18,
	TAGID_CENTER	= 19,
	TAGID_CITE	= 20,
	TAGID_CODE	= 21,
	TAGID_COL	= 22,
	TAGID_COLGROUP	= 23,
	TAGID_COMMENT	= 24,
	TAGID_COMMENT_RAW	= 25,
	TAGID_DD	= 26,
	TAGID_DEL	= 27,
	TAGID_DFN	= 28,
	TAGID_DIR	= 29,
	TAGID_DIV	= 30,
	TAGID_DL	= 31,
	TAGID_DT	= 32,
	TAGID_EM	= 33,
	TAGID_EMBED	= 34,
	TAGID_FIELDSET	= 35,
	TAGID_FONT	= 36,
	TAGID_FORM	= 37,
	TAGID_FRAME	= 38,
	TAGID_FRAMESET	= 39,
	TAGID_GENERIC	= 40,
	TAGID_H1	= 41,
	TAGID_H2	= 42,
	TAGID_H3	= 43,
	TAGID_H4	= 44,
	TAGID_H5	= 45,
	TAGID_H6	= 46,
	TAGID_HEAD	= 47,
	TAGID_HR	= 48,
	TAGID_HTML	= 49,
	TAGID_I	= 50,
	TAGID_IFRAME	= 51,
	TAGID_IMG	= 52,
	TAGID_INPUT	= 53,
	TAGID_INS	= 54,
	TAGID_KBD	= 55,
	TAGID_LABEL	= 56,
	TAGID_LEGEND	= 57,
	TAGID_LI	= 58,
	TAGID_LINK	= 59,
	TAGID_LISTING	= 60,
	TAGID_MAP	= 61,
	TAGID_MARQUEE	= 62,
	TAGID_MENU	= 63,
	TAGID_META	= 64,
	TAGID_NEXTID	= 65,
	TAGID_NOBR	= 66,
	TAGID_NOEMBED	= 67,
	TAGID_NOFRAMES	= 68,
	TAGID_NOSCRIPT	= 69,
	TAGID_OBJECT	= 70,
	TAGID_OL	= 71,
	TAGID_OPTION	= 72,
	TAGID_P	= 73,
	TAGID_PARAM	= 74,
	TAGID_PLAINTEXT	= 75,
	TAGID_PRE	= 76,
	TAGID_Q	= 77,
	TAGID_RP	= 78,
	TAGID_RT	= 79,
	TAGID_RUBY	= 80,
	TAGID_S	= 81,
	TAGID_SAMP	= 82,
	TAGID_SCRIPT	= 83,
	TAGID_SELECT	= 84,
	TAGID_SMALL	= 85,
	TAGID_SPAN	= 86,
	TAGID_STRIKE	= 87,
	TAGID_STRONG	= 88,
	TAGID_STYLE	= 89,
	TAGID_SUB	= 90,
	TAGID_SUP	= 91,
	TAGID_TABLE	= 92,
	TAGID_TBODY	= 93,
	TAGID_TC	= 94,
	TAGID_TD	= 95,
	TAGID_TEXTAREA	= 96,
	TAGID_TFOOT	= 97,
	TAGID_TH	= 98,
	TAGID_THEAD	= 99,
	TAGID_TITLE	= 100,
	TAGID_TR	= 101,
	TAGID_TT	= 102,
	TAGID_U	= 103,
	TAGID_UL	= 104,
	TAGID_VAR	= 105,
	TAGID_WBR	= 106,
	TAGID_XMP	= 107,
	TAGID_ROOT	= 108,
	TAGID_OPTGROUP	= 109,
	TAGID_ABBR	= 110,
	TAGID_COUNT	= 111,
	TAGID_LAST_PREDEFINED	= 10000,
	ELEMENT_TAG_ID_Max	= 2147483647L
    } 	ELEMENT_TAG_ID;

typedef 
enum _SELECTION_TYPE
    {	SELECTION_TYPE_None	= 0,
	SELECTION_TYPE_Caret	= 1,
	SELECTION_TYPE_Text	= 2,
	SELECTION_TYPE_Control	= 3,
	SELECTION_TYPE_Max	= 2147483647L
    } 	SELECTION_TYPE;

typedef 
enum _SAVE_SEGMENTS_FLAGS
    {	SAVE_SEGMENTS_NoIE4SelectionCompat	= 0x1,
	SAVE_SEGMENTS_FLAGS_Max	= 2147483647L
    } 	SAVE_SEGMENTS_FLAGS;

typedef 
enum _CARET_DIRECTION
    {	CARET_DIRECTION_INDETERMINATE	= 0,
	CARET_DIRECTION_SAME	= 1,
	CARET_DIRECTION_BACKWARD	= 2,
	CARET_DIRECTION_FORWARD	= 3,
	CARET_DIRECTION_Max	= 2147483647L
    } 	CARET_DIRECTION;

typedef 
enum _LINE_DIRECTION
    {	LINE_DIRECTION_RightToLeft	= 1,
	LINE_DIRECTION_LeftToRight	= 2,
	LINE_DIRECTION_Max	= 2147483647L
    } 	LINE_DIRECTION;

typedef 
enum _HT_OPTIONS
    {	HT_OPT_AllowAfterEOL	= 0x1,
	HT_OPTIONS_Max	= 2147483647L
    } 	HT_OPTIONS;

typedef 
enum _HT_RESULTS
    {	HT_RESULTS_Glyph	= 0x1,
	HT_RESULTS_Max	= 2147483647L
    } 	HT_RESULTS;

typedef 
enum _DISPLAY_MOVEUNIT
    {	DISPLAY_MOVEUNIT_PreviousLine	= 1,
	DISPLAY_MOVEUNIT_NextLine	= 2,
	DISPLAY_MOVEUNIT_CurrentLineStart	= 3,
	DISPLAY_MOVEUNIT_CurrentLineEnd	= 4,
	DISPLAY_MOVEUNIT_TopOfWindow	= 5,
	DISPLAY_MOVEUNIT_BottomOfWindow	= 6,
	DISPLAY_MOVEUNIT_Max	= 2147483647L
    } 	DISPLAY_MOVEUNIT;

typedef 
enum _DISPLAY_GRAVITY
    {	DISPLAY_GRAVITY_PreviousLine	= 1,
	DISPLAY_GRAVITY_NextLine	= 2,
	DISPLAY_GRAVITY_Max	= 2147483647L
    } 	DISPLAY_GRAVITY;

typedef 
enum _DISPLAY_BREAK
    {	DISPLAY_BREAK_None	= 0,
	DISPLAY_BREAK_Block	= 0x1,
	DISPLAY_BREAK_Break	= 0x2,
	DISPLAY_BREAK_Max	= 2147483647L
    } 	DISPLAY_BREAK;

typedef 
enum _COORD_SYSTEM
    {	COORD_SYSTEM_GLOBAL	= 0,
	COORD_SYSTEM_PARENT	= 1,
	COORD_SYSTEM_CONTAINER	= 2,
	COORD_SYSTEM_CONTENT	= 3,
	COORD_SYSTEM_FRAME	= 4,
	COORD_SYSTEM_Max	= 2147483647L
    } 	COORD_SYSTEM;























EXTERN_C const GUID CLSID_HtmlDlgSafeHelper;
EXTERN_C const GUID CLSID_BlockFormats;
EXTERN_C const GUID CLSID_FontNames;
EXTERN_C const GUID CLSID_CHTMLNamespace;
EXTERN_C const GUID CLSID_CHTMLNamespaceCollection;
typedef 
enum _HTML_PAINTER
    {	HTMLPAINTER_OPAQUE	= 0x1,
	HTMLPAINTER_TRANSPARENT	= 0x2,
	HTMLPAINTER_ALPHA	= 0x4,
	HTMLPAINTER_COMPLEX	= 0x8,
	HTMLPAINTER_OVERLAY	= 0x10,
	HTMLPAINTER_HITTEST	= 0x20,
	HTMLPAINTER_SURFACE	= 0x100,
	HTMLPAINTER_3DSURFACE	= 0x200,
	HTMLPAINTER_NOBAND	= 0x400,
	HTMLPAINTER_NODC	= 0x1000,
	HTMLPAINTER_NOPHYSICALCLIP	= 0x2000,
	HTMLPAINTER_NOSAVEDC	= 0x4000,
	HTMLPAINTER_SUPPORTS_XFORM	= 0x8000,
	HTMLPAINTER_EXPAND	= 0x10000,
	HTMLPAINTER_NOSCROLLBITS	= 0x20000,
	HTML_PAINTER_Max	= 2147483647L
    } 	HTML_PAINTER;

typedef 
enum _HTML_PAINT_ZORDER
    {	HTMLPAINT_ZORDER_NONE	= 0,
	HTMLPAINT_ZORDER_REPLACE_ALL	= 1,
	HTMLPAINT_ZORDER_REPLACE_CONTENT	= 2,
	HTMLPAINT_ZORDER_REPLACE_BACKGROUND	= 3,
	HTMLPAINT_ZORDER_BELOW_CONTENT	= 4,
	HTMLPAINT_ZORDER_BELOW_FLOW	= 5,
	HTMLPAINT_ZORDER_ABOVE_FLOW	= 6,
	HTMLPAINT_ZORDER_ABOVE_CONTENT	= 7,
	HTMLPAINT_ZORDER_WINDOW_TOP	= 8,
	HTML_PAINT_ZORDER_Max	= 2147483647L
    } 	HTML_PAINT_ZORDER;

typedef 
enum _HTML_PAINT_DRAW_FLAGS
    {	HTMLPAINT_DRAW_UPDATEREGION	= 0x1,
	HTMLPAINT_DRAW_USE_XFORM	= 0x2,
	HTML_PAINT_DRAW_FLAGS_Max	= 2147483647L
    } 	HTML_PAINT_DRAW_FLAGS;

typedef 
enum _HTML_PAINT_EVENT_FLAGS
    {	HTMLPAINT_EVENT_TARGET	= 0x1,
	HTMLPAINT_EVENT_SETCURSOR	= 0x2,
	HTML_PAINT_EVENT_FLAGS_Max	= 2147483647L
    } 	HTML_PAINT_EVENT_FLAGS;

typedef 
enum _HTML_PAINT_DRAW_INFO_FLAGS
    {	HTMLPAINT_DRAWINFO_VIEWPORT	= 0x1,
	HTMLPAINT_DRAWINFO_UPDATEREGION	= 0x2,
	HTMLPAINT_DRAWINFO_XFORM	= 0x4,
	HTML_PAINT_DRAW_INFO_FLAGS_Max	= 2147483647L
    } 	HTML_PAINT_DRAW_INFO_FLAGS;

typedef struct _HTML_PAINTER_INFO
    {
    LONG lFlags;
    LONG lZOrder;
    IID iidDrawObject;
    RECT rcExpand;
    } 	HTML_PAINTER_INFO;

typedef struct _HTML_PAINT_XFORM
    {
    FLOAT eM11;
    FLOAT eM12;
    FLOAT eM21;
    FLOAT eM22;
    FLOAT eDx;
    FLOAT eDy;
    } 	HTML_PAINT_XFORM;

typedef struct _HTML_PAINT_DRAW_INFO
    {
    RECT rcViewport;
    HRGN hrgnUpdate;
    HTML_PAINT_XFORM xform;
    } 	HTML_PAINT_DRAW_INFO;



typedef 
enum _HTMLDlgFlag
    {	HTMLDlgFlagNo	= 0,
	HTMLDlgFlagOff	= 0,
	HTMLDlgFlag0	= 0,
	HTMLDlgFlagYes	= 1,
	HTMLDlgFlagOn	= 1,
	HTMLDlgFlag1	= 1,
	HTMLDlgFlagNotSet	= -1,
	HTMLDlgFlag_Max	= 2147483647L
    } 	HTMLDlgFlag;

typedef 
enum _HTMLDlgBorder
    {	HTMLDlgBorderThin	= 0,
	HTMLDlgBorderThick	= 0x40000L,
	HTMLDlgBorder_Max	= 2147483647L
    } 	HTMLDlgBorder;

typedef 
enum _HTMLDlgEdge
    {	HTMLDlgEdgeSunken	= 0,
	HTMLDlgEdgeRaised	= 16,
	HTMLDlgEdge_Max	= 2147483647L
    } 	HTMLDlgEdge;

typedef 
enum _HTMLDlgCenter
    {	HTMLDlgCenterNo	= 0,
	HTMLDlgCenterOff	= 0,
	HTMLDlgCenter0	= 0,
	HTMLDlgCenterYes	= 1,
	HTMLDlgCenterOn	= 1,
	HTMLDlgCenter1	= 1,
	HTMLDlgCenterParent	= 1,
	HTMLDlgCenterDesktop	= 2,
	HTMLDlgCenter_Max	= 2147483647L
    } 	HTMLDlgCenter;

EXTERN_C const GUID CLSID_CThreadDialogProcParam;
EXTERN_C const GUID CLSID_CHTMLDlg;
EXTERN_C const GUID CLSID_CHTMLPopup;
typedef 
enum _HTMLAppFlag
    {	HTMLAppFlagNo	= 0,
	HTMLAppFlagOff	= 0,
	HTMLAppFlag0	= 0,
	HTMLAppFlagYes	= 1,
	HTMLAppFlagOn	= 1,
	HTMLAppFlag1	= 1,
	HTMLAppFlag_Max	= 2147483647L
    } 	HTMLAppFlag;

typedef 
enum _HTMLMinimizeFlag
    {	HTMLMinimizeFlagNo	= 0,
	HTMLMinimizeFlagYes	= 0x20000L,
	HTMLMinimizeFlag_Max	= 2147483647L
    } 	HTMLMinimizeFlag;

typedef 
enum _HTMLMaximizeFlag
    {	HTMLMaximizeFlagNo	= 0,
	HTMLMaximizeFlagYes	= 0x10000L,
	HTMLMaximizeFlag_Max	= 2147483647L
    } 	HTMLMaximizeFlag;

typedef 
enum _HTMLCaptionFlag
    {	HTMLCaptionFlagNo	= 0,
	HTMLCaptionFlagYes	= 0xc00000L,
	HTMLCaptionFlag_Max	= 2147483647L
    } 	HTMLCaptionFlag;

typedef 
enum _HTMLSysMenuFlag
    {	HTMLSysMenuFlagNo	= 0,
	HTMLSysMenuFlagYes	= 0x80000L,
	HTMLSysMenuFlag_Max	= 2147483647L
    } 	HTMLSysMenuFlag;

typedef 
enum _HTMLBorder
    {	HTMLBorderNone	= 0,
	HTMLBorderThick	= 0x40000L,
	HTMLBorderDialog	= 0x400000L,
	HTMLBorderThin	= 0x800000L,
	HTMLBorder_Max	= 2147483647L
    } 	HTMLBorder;

typedef 
enum _HTMLBorderStyle
    {	HTMLBorderStyleNormal	= 0,
	HTMLBorderStyleRaised	= 0x100L,
	HTMLBorderStyleSunken	= 0x200L,
	HTMLBorderStylecombined	= 0x300L,
	HTMLBorderStyleStatic	= 0x20000L,
	HTMLBorderStyle_Max	= 2147483647L
    } 	HTMLBorderStyle;

typedef 
enum _HTMLWindowState
    {	HTMLWindowStateNormal	= 1,
	HTMLWindowStateMaximize	= 3,
	HTMLWindowStateMinimize	= 6,
	HTMLWindowState_Max	= 2147483647L
    } 	HTMLWindowState;

EXTERN_C const GUID CLSID_CAppBehavior;
typedef 
enum _BEHAVIOR_EVENT
    {	BEHAVIOREVENT_FIRST	= 0,
	BEHAVIOREVENT_CONTENTREADY	= 0,
	BEHAVIOREVENT_DOCUMENTREADY	= 1,
	BEHAVIOREVENT_APPLYSTYLE	= 2,
	BEHAVIOREVENT_DOCUMENTCONTEXTCHANGE	= 3,
	BEHAVIOREVENT_CONTENTSAVE	= 4,
	BEHAVIOREVENT_LAST	= 4,
	BEHAVIOR_EVENT_Max	= 2147483647L
    } 	BEHAVIOR_EVENT;

typedef 
enum _BEHAVIOR_EVENT_FLAGS
    {	BEHAVIOREVENTFLAGS_BUBBLE	= 1,
	BEHAVIOREVENTFLAGS_STANDARDADDITIVE	= 2,
	BEHAVIOR_EVENT_FLAGS_Max	= 2147483647L
    } 	BEHAVIOR_EVENT_FLAGS;

typedef 
enum _BEHAVIOR_RENDER_INFO
    {	BEHAVIORRENDERINFO_BEFOREBACKGROUND	= 0x1,
	BEHAVIORRENDERINFO_AFTERBACKGROUND	= 0x2,
	BEHAVIORRENDERINFO_BEFORECONTENT	= 0x4,
	BEHAVIORRENDERINFO_AFTERCONTENT	= 0x8,
	BEHAVIORRENDERINFO_AFTERFOREGROUND	= 0x20,
	BEHAVIORRENDERINFO_ABOVECONTENT	= 0x28,
	BEHAVIORRENDERINFO_ALLLAYERS	= 0xff,
	BEHAVIORRENDERINFO_DISABLEBACKGROUND	= 0x100,
	BEHAVIORRENDERINFO_DISABLENEGATIVEZ	= 0x200,
	BEHAVIORRENDERINFO_DISABLECONTENT	= 0x400,
	BEHAVIORRENDERINFO_DISABLEPOSITIVEZ	= 0x800,
	BEHAVIORRENDERINFO_DISABLEALLLAYERS	= 0xf00,
	BEHAVIORRENDERINFO_HITTESTING	= 0x1000,
	BEHAVIORRENDERINFO_SURFACE	= 0x100000,
	BEHAVIORRENDERINFO_3DSURFACE	= 0x200000,
	BEHAVIOR_RENDER_INFO_Max	= 2147483647L
    } 	BEHAVIOR_RENDER_INFO;

typedef 
enum _BEHAVIOR_RELATION
    {	BEHAVIOR_FIRSTRELATION	= 0,
	BEHAVIOR_SAMEELEMENT	= 0,
	BEHAVIOR_PARENT	= 1,
	BEHAVIOR_CHILD	= 2,
	BEHAVIOR_SIBLING	= 3,
	BEHAVIOR_LASTRELATION	= 3,
	BEHAVIOR_RELATION_Max	= 2147483647L
    } 	BEHAVIOR_RELATION;

typedef 
enum _BEHAVIOR_LAYOUT_INFO
    {	BEHAVIORLAYOUTINFO_FULLDELEGATION	= 0x1,
	BEHAVIORLAYOUTINFO_MODIFYNATURAL	= 0x2,
	BEHAVIORLAYOUTINFO_MAPSIZE	= 0x4,
	BEHAVIOR_LAYOUT_INFO_Max	= 2147483647L
    } 	BEHAVIOR_LAYOUT_INFO;

typedef 
enum _BEHAVIOR_LAYOUT_MODE
    {	BEHAVIORLAYOUTMODE_NATURAL	= 0x1,
	BEHAVIORLAYOUTMODE_MINWIDTH	= 0x2,
	BEHAVIORLAYOUTMODE_MAXWIDTH	= 0x4,
	BEHAVIORLAYOUTMODE_MEDIA_RESOLUTION	= 0x4000,
	BEHAVIORLAYOUTMODE_FINAL_PERCENT	= 0x8000,
	BEHAVIOR_LAYOUT_MODE_Max	= 2147483647L
    } 	BEHAVIOR_LAYOUT_MODE;

typedef 
enum _ELEMENTDESCRIPTOR_FLAGS
    {	ELEMENTDESCRIPTORFLAGS_LITERAL	= 1,
	ELEMENTDESCRIPTORFLAGS_NESTED_LITERAL	= 2,
	ELEMENTDESCRIPTOR_FLAGS_Max	= 2147483647L
    } 	ELEMENTDESCRIPTOR_FLAGS;

typedef 
enum _ELEMENTNAMESPACE_FLAGS
    {	ELEMENTNAMESPACEFLAGS_ALLOWANYTAG	= 0x1,
	ELEMENTNAMESPACEFLAGS_QUERYFORUNKNOWNTAGS	= 0x2,
	ELEMENTNAMESPACE_FLAGS_Max	= 2147483647L
    } 	ELEMENTNAMESPACE_FLAGS;





EXTERN_C const IID LIBID_MSHTML;

#ifndef __IHTMLEventObj_INTERFACE_DEFINED__
#define __IHTMLEventObj_INTERFACE_DEFINED__

/* interface IHTMLEventObj */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLEventObj;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f32d-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEventObj : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_srcElement( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_altKey( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ctrlKey( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_shiftKey( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_returnValue( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_returnValue( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_cancelBubble( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cancelBubble( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fromElement( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_toElement( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_keyCode( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_keyCode( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_button( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_qualifier( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_reason( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_x( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_y( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_clientX( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_clientY( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetX( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetY( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_screenX( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_screenY( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_srcFilter( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLEventObjVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLEventObj * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLEventObj * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLEventObj * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLEventObj * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLEventObj * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLEventObj * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLEventObj * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_srcElement )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_altKey )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ctrlKey )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_shiftKey )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_returnValue )( 
            __RPC__in IHTMLEventObj * This,
            /* [in] */ VARIANT v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_returnValue )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_cancelBubble )( 
            __RPC__in IHTMLEventObj * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cancelBubble )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fromElement )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_toElement )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_keyCode )( 
            __RPC__in IHTMLEventObj * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_keyCode )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_button )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_type )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_qualifier )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_reason )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_x )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_y )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clientX )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clientY )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetX )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetY )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_screenX )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_screenY )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_srcFilter )( 
            __RPC__in IHTMLEventObj * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        END_INTERFACE
    } IHTMLEventObjVtbl;

    interface IHTMLEventObj
    {
        CONST_VTBL struct IHTMLEventObjVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLEventObj_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLEventObj_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLEventObj_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLEventObj_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLEventObj_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLEventObj_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLEventObj_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLEventObj_get_srcElement(This,p)	\
    ( (This)->lpVtbl -> get_srcElement(This,p) ) 

#define IHTMLEventObj_get_altKey(This,p)	\
    ( (This)->lpVtbl -> get_altKey(This,p) ) 

#define IHTMLEventObj_get_ctrlKey(This,p)	\
    ( (This)->lpVtbl -> get_ctrlKey(This,p) ) 

#define IHTMLEventObj_get_shiftKey(This,p)	\
    ( (This)->lpVtbl -> get_shiftKey(This,p) ) 

#define IHTMLEventObj_put_returnValue(This,v)	\
    ( (This)->lpVtbl -> put_returnValue(This,v) ) 

#define IHTMLEventObj_get_returnValue(This,p)	\
    ( (This)->lpVtbl -> get_returnValue(This,p) ) 

#define IHTMLEventObj_put_cancelBubble(This,v)	\
    ( (This)->lpVtbl -> put_cancelBubble(This,v) ) 

#define IHTMLEventObj_get_cancelBubble(This,p)	\
    ( (This)->lpVtbl -> get_cancelBubble(This,p) ) 

#define IHTMLEventObj_get_fromElement(This,p)	\
    ( (This)->lpVtbl -> get_fromElement(This,p) ) 

#define IHTMLEventObj_get_toElement(This,p)	\
    ( (This)->lpVtbl -> get_toElement(This,p) ) 

#define IHTMLEventObj_put_keyCode(This,v)	\
    ( (This)->lpVtbl -> put_keyCode(This,v) ) 

#define IHTMLEventObj_get_keyCode(This,p)	\
    ( (This)->lpVtbl -> get_keyCode(This,p) ) 

#define IHTMLEventObj_get_button(This,p)	\
    ( (This)->lpVtbl -> get_button(This,p) ) 

#define IHTMLEventObj_get_type(This,p)	\
    ( (This)->lpVtbl -> get_type(This,p) ) 

#define IHTMLEventObj_get_qualifier(This,p)	\
    ( (This)->lpVtbl -> get_qualifier(This,p) ) 

#define IHTMLEventObj_get_reason(This,p)	\
    ( (This)->lpVtbl -> get_reason(This,p) ) 

#define IHTMLEventObj_get_x(This,p)	\
    ( (This)->lpVtbl -> get_x(This,p) ) 

#define IHTMLEventObj_get_y(This,p)	\
    ( (This)->lpVtbl -> get_y(This,p) ) 

#define IHTMLEventObj_get_clientX(This,p)	\
    ( (This)->lpVtbl -> get_clientX(This,p) ) 

#define IHTMLEventObj_get_clientY(This,p)	\
    ( (This)->lpVtbl -> get_clientY(This,p) ) 

#define IHTMLEventObj_get_offsetX(This,p)	\
    ( (This)->lpVtbl -> get_offsetX(This,p) ) 

#define IHTMLEventObj_get_offsetY(This,p)	\
    ( (This)->lpVtbl -> get_offsetY(This,p) ) 

#define IHTMLEventObj_get_screenX(This,p)	\
    ( (This)->lpVtbl -> get_screenX(This,p) ) 

#define IHTMLEventObj_get_screenY(This,p)	\
    ( (This)->lpVtbl -> get_screenY(This,p) ) 

#define IHTMLEventObj_get_srcFilter(This,p)	\
    ( (This)->lpVtbl -> get_srcFilter(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLEventObj_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSite_INTERFACE_DEFINED__
#define __IElementBehaviorSite_INTERFACE_DEFINED__

/* interface IElementBehaviorSite */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSite;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f427-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **ppElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterNotification( 
            /* [in] */ LONG lEvent) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorSiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IElementBehaviorSite * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IElementBehaviorSite * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IElementBehaviorSite * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetElement )( 
            __RPC__in IElementBehaviorSite * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **ppElement);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterNotification )( 
            __RPC__in IElementBehaviorSite * This,
            /* [in] */ LONG lEvent);
        
        END_INTERFACE
    } IElementBehaviorSiteVtbl;

    interface IElementBehaviorSite
    {
        CONST_VTBL struct IElementBehaviorSiteVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorSite_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IElementBehaviorSite_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IElementBehaviorSite_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IElementBehaviorSite_GetElement(This,ppElement)	\
    ( (This)->lpVtbl -> GetElement(This,ppElement) ) 

#define IElementBehaviorSite_RegisterNotification(This,lEvent)	\
    ( (This)->lpVtbl -> RegisterNotification(This,lEvent) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IElementBehaviorSite_INTERFACE_DEFINED__ */


#ifndef __IElementBehavior_INTERFACE_DEFINED__
#define __IElementBehavior_INTERFACE_DEFINED__

/* interface IElementBehavior */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f425-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehavior : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Init( 
            /* [in] */ __RPC__in_opt IElementBehaviorSite *pBehaviorSite) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Notify( 
            /* [in] */ LONG lEvent,
            /* [out][in] */ __RPC__inout VARIANT *pVar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Detach( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IElementBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IElementBehavior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IElementBehavior * This);
        
        HRESULT ( STDMETHODCALLTYPE *Init )( 
            __RPC__in IElementBehavior * This,
            /* [in] */ __RPC__in_opt IElementBehaviorSite *pBehaviorSite);
        
        HRESULT ( STDMETHODCALLTYPE *Notify )( 
            __RPC__in IElementBehavior * This,
            /* [in] */ LONG lEvent,
            /* [out][in] */ __RPC__inout VARIANT *pVar);
        
        HRESULT ( STDMETHODCALLTYPE *Detach )( 
            __RPC__in IElementBehavior * This);
        
        END_INTERFACE
    } IElementBehaviorVtbl;

    interface IElementBehavior
    {
        CONST_VTBL struct IElementBehaviorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehavior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IElementBehavior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IElementBehavior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IElementBehavior_Init(This,pBehaviorSite)	\
    ( (This)->lpVtbl -> Init(This,pBehaviorSite) ) 

#define IElementBehavior_Notify(This,lEvent,pVar)	\
    ( (This)->lpVtbl -> Notify(This,lEvent,pVar) ) 

#define IElementBehavior_Detach(This)	\
    ( (This)->lpVtbl -> Detach(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IElementBehavior_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorFactory_INTERFACE_DEFINED__
#define __IElementBehaviorFactory_INTERFACE_DEFINED__

/* interface IElementBehaviorFactory */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f429-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE FindBehavior( 
            /* [in] */ __RPC__in BSTR bstrBehavior,
            /* [in] */ __RPC__in BSTR bstrBehaviorUrl,
            /* [in] */ __RPC__in_opt IElementBehaviorSite *pSite,
            /* [out][retval] */ __RPC__deref_out_opt IElementBehavior **ppBehavior) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IElementBehaviorFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IElementBehaviorFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IElementBehaviorFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *FindBehavior )( 
            __RPC__in IElementBehaviorFactory * This,
            /* [in] */ __RPC__in BSTR bstrBehavior,
            /* [in] */ __RPC__in BSTR bstrBehaviorUrl,
            /* [in] */ __RPC__in_opt IElementBehaviorSite *pSite,
            /* [out][retval] */ __RPC__deref_out_opt IElementBehavior **ppBehavior);
        
        END_INTERFACE
    } IElementBehaviorFactoryVtbl;

    interface IElementBehaviorFactory
    {
        CONST_VTBL struct IElementBehaviorFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IElementBehaviorFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IElementBehaviorFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IElementBehaviorFactory_FindBehavior(This,bstrBehavior,bstrBehaviorUrl,pSite,ppBehavior)	\
    ( (This)->lpVtbl -> FindBehavior(This,bstrBehavior,bstrBehaviorUrl,pSite,ppBehavior) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IElementBehaviorFactory_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteOM_INTERFACE_DEFINED__
#define __IElementBehaviorSiteOM_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteOM */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteOM;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f489-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteOM : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RegisterEvent( 
            /* [in] */ __RPC__in LPOLESTR pchEvent,
            /* [in] */ LONG lFlags,
            /* [out][retval] */ __RPC__out LONG *plCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEventCookie( 
            /* [in] */ __RPC__in LPOLESTR pchEvent,
            /* [out][retval] */ __RPC__out LONG *plCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FireEvent( 
            /* [in] */ LONG lCookie,
            /* [in] */ __RPC__in_opt IHTMLEventObj *pEventObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateEventObject( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLEventObj **ppEventObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterName( 
            /* [in] */ __RPC__in LPOLESTR pchName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterUrn( 
            /* [in] */ __RPC__in LPOLESTR pchUrn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorSiteOMVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IElementBehaviorSiteOM * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IElementBehaviorSiteOM * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IElementBehaviorSiteOM * This);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterEvent )( 
            __RPC__in IElementBehaviorSiteOM * This,
            /* [in] */ __RPC__in LPOLESTR pchEvent,
            /* [in] */ LONG lFlags,
            /* [out][retval] */ __RPC__out LONG *plCookie);
        
        HRESULT ( STDMETHODCALLTYPE *GetEventCookie )( 
            __RPC__in IElementBehaviorSiteOM * This,
            /* [in] */ __RPC__in LPOLESTR pchEvent,
            /* [out][retval] */ __RPC__out LONG *plCookie);
        
        HRESULT ( STDMETHODCALLTYPE *FireEvent )( 
            __RPC__in IElementBehaviorSiteOM * This,
            /* [in] */ LONG lCookie,
            /* [in] */ __RPC__in_opt IHTMLEventObj *pEventObject);
        
        HRESULT ( STDMETHODCALLTYPE *CreateEventObject )( 
            __RPC__in IElementBehaviorSiteOM * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLEventObj **ppEventObject);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterName )( 
            __RPC__in IElementBehaviorSiteOM * This,
            /* [in] */ __RPC__in LPOLESTR pchName);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterUrn )( 
            __RPC__in IElementBehaviorSiteOM * This,
            /* [in] */ __RPC__in LPOLESTR pchUrn);
        
        END_INTERFACE
    } IElementBehaviorSiteOMVtbl;

    interface IElementBehaviorSiteOM
    {
        CONST_VTBL struct IElementBehaviorSiteOMVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorSiteOM_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IElementBehaviorSiteOM_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IElementBehaviorSiteOM_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IElementBehaviorSiteOM_RegisterEvent(This,pchEvent,lFlags,plCookie)	\
    ( (This)->lpVtbl -> RegisterEvent(This,pchEvent,lFlags,plCookie) ) 

#define IElementBehaviorSiteOM_GetEventCookie(This,pchEvent,plCookie)	\
    ( (This)->lpVtbl -> GetEventCookie(This,pchEvent,plCookie) ) 

#define IElementBehaviorSiteOM_FireEvent(This,lCookie,pEventObject)	\
    ( (This)->lpVtbl -> FireEvent(This,lCookie,pEventObject) ) 

#define IElementBehaviorSiteOM_CreateEventObject(This,ppEventObject)	\
    ( (This)->lpVtbl -> CreateEventObject(This,ppEventObject) ) 

#define IElementBehaviorSiteOM_RegisterName(This,pchName)	\
    ( (This)->lpVtbl -> RegisterName(This,pchName) ) 

#define IElementBehaviorSiteOM_RegisterUrn(This,pchUrn)	\
    ( (This)->lpVtbl -> RegisterUrn(This,pchUrn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IElementBehaviorSiteOM_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorRender_INTERFACE_DEFINED__
#define __IElementBehaviorRender_INTERFACE_DEFINED__

/* interface IElementBehaviorRender */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorRender;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4aa-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorRender : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Draw( 
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ LONG lLayer,
            /* [in] */ __RPC__in RECT *pRect,
            /* [in] */ __RPC__in_opt IUnknown *pReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRenderInfo( 
            /* [out][retval] */ __RPC__out LONG *plRenderInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HitTestPoint( 
            /* [in] */ __RPC__in POINT *pPoint,
            /* [in] */ __RPC__in_opt IUnknown *pReserved,
            /* [out][retval] */ __RPC__out BOOL *pbHit) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorRenderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IElementBehaviorRender * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IElementBehaviorRender * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IElementBehaviorRender * This);
        
        HRESULT ( STDMETHODCALLTYPE *Draw )( 
            __RPC__in IElementBehaviorRender * This,
            /* [in] */ __RPC__in HDC hdc,
            /* [in] */ LONG lLayer,
            /* [in] */ __RPC__in RECT *pRect,
            /* [in] */ __RPC__in_opt IUnknown *pReserved);
        
        HRESULT ( STDMETHODCALLTYPE *GetRenderInfo )( 
            __RPC__in IElementBehaviorRender * This,
            /* [out][retval] */ __RPC__out LONG *plRenderInfo);
        
        HRESULT ( STDMETHODCALLTYPE *HitTestPoint )( 
            __RPC__in IElementBehaviorRender * This,
            /* [in] */ __RPC__in POINT *pPoint,
            /* [in] */ __RPC__in_opt IUnknown *pReserved,
            /* [out][retval] */ __RPC__out BOOL *pbHit);
        
        END_INTERFACE
    } IElementBehaviorRenderVtbl;

    interface IElementBehaviorRender
    {
        CONST_VTBL struct IElementBehaviorRenderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorRender_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IElementBehaviorRender_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IElementBehaviorRender_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IElementBehaviorRender_Draw(This,hdc,lLayer,pRect,pReserved)	\
    ( (This)->lpVtbl -> Draw(This,hdc,lLayer,pRect,pReserved) ) 

#define IElementBehaviorRender_GetRenderInfo(This,plRenderInfo)	\
    ( (This)->lpVtbl -> GetRenderInfo(This,plRenderInfo) ) 

#define IElementBehaviorRender_HitTestPoint(This,pPoint,pReserved,pbHit)	\
    ( (This)->lpVtbl -> HitTestPoint(This,pPoint,pReserved,pbHit) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IElementBehaviorRender_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteRender_INTERFACE_DEFINED__
#define __IElementBehaviorSiteRender_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteRender */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteRender;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a7-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteRender : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invalidate( 
            /* [in] */ __RPC__in RECT *pRect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateRenderInfo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateStyle( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorSiteRenderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IElementBehaviorSiteRender * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IElementBehaviorSiteRender * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IElementBehaviorSiteRender * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invalidate )( 
            __RPC__in IElementBehaviorSiteRender * This,
            /* [in] */ __RPC__in RECT *pRect);
        
        HRESULT ( STDMETHODCALLTYPE *InvalidateRenderInfo )( 
            __RPC__in IElementBehaviorSiteRender * This);
        
        HRESULT ( STDMETHODCALLTYPE *InvalidateStyle )( 
            __RPC__in IElementBehaviorSiteRender * This);
        
        END_INTERFACE
    } IElementBehaviorSiteRenderVtbl;

    interface IElementBehaviorSiteRender
    {
        CONST_VTBL struct IElementBehaviorSiteRenderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorSiteRender_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IElementBehaviorSiteRender_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IElementBehaviorSiteRender_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IElementBehaviorSiteRender_Invalidate(This,pRect)	\
    ( (This)->lpVtbl -> Invalidate(This,pRect) ) 

#define IElementBehaviorSiteRender_InvalidateRenderInfo(This)	\
    ( (This)->lpVtbl -> InvalidateRenderInfo(This) ) 

#define IElementBehaviorSiteRender_InvalidateStyle(This)	\
    ( (This)->lpVtbl -> InvalidateStyle(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IElementBehaviorSiteRender_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMConstructor_INTERFACE_DEFINED__
#define __IHTMLDOMConstructor_INTERFACE_DEFINED__

/* interface IHTMLDOMConstructor */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMConstructor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3051049b-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMConstructor : public IDispatch
    {
    public:
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_constructor( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LookupGetter( 
            /* [in] */ __RPC__in BSTR propname,
            /* [out][retval] */ __RPC__out VARIANT *ppDispHandler) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LookupSetter( 
            /* [in] */ __RPC__in BSTR propname,
            /* [out][retval] */ __RPC__out VARIANT *ppDispHandler) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DefineGetter( 
            /* [in] */ __RPC__in BSTR propname,
            /* [in] */ __RPC__in VARIANT *pdispHandler) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DefineSetter( 
            /* [in] */ __RPC__in BSTR propname,
            /* [in] */ __RPC__in VARIANT *pdispHandler) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMConstructorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLDOMConstructor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLDOMConstructor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLDOMConstructor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLDOMConstructor * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLDOMConstructor * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLDOMConstructor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMConstructor * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_constructor )( 
            __RPC__in IHTMLDOMConstructor * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        HRESULT ( STDMETHODCALLTYPE *LookupGetter )( 
            __RPC__in IHTMLDOMConstructor * This,
            /* [in] */ __RPC__in BSTR propname,
            /* [out][retval] */ __RPC__out VARIANT *ppDispHandler);
        
        HRESULT ( STDMETHODCALLTYPE *LookupSetter )( 
            __RPC__in IHTMLDOMConstructor * This,
            /* [in] */ __RPC__in BSTR propname,
            /* [out][retval] */ __RPC__out VARIANT *ppDispHandler);
        
        HRESULT ( STDMETHODCALLTYPE *DefineGetter )( 
            __RPC__in IHTMLDOMConstructor * This,
            /* [in] */ __RPC__in BSTR propname,
            /* [in] */ __RPC__in VARIANT *pdispHandler);
        
        HRESULT ( STDMETHODCALLTYPE *DefineSetter )( 
            __RPC__in IHTMLDOMConstructor * This,
            /* [in] */ __RPC__in BSTR propname,
            /* [in] */ __RPC__in VARIANT *pdispHandler);
        
        END_INTERFACE
    } IHTMLDOMConstructorVtbl;

    interface IHTMLDOMConstructor
    {
        CONST_VTBL struct IHTMLDOMConstructorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMConstructor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLDOMConstructor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLDOMConstructor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLDOMConstructor_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLDOMConstructor_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLDOMConstructor_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLDOMConstructor_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLDOMConstructor_get_constructor(This,p)	\
    ( (This)->lpVtbl -> get_constructor(This,p) ) 

#define IHTMLDOMConstructor_LookupGetter(This,propname,ppDispHandler)	\
    ( (This)->lpVtbl -> LookupGetter(This,propname,ppDispHandler) ) 

#define IHTMLDOMConstructor_LookupSetter(This,propname,ppDispHandler)	\
    ( (This)->lpVtbl -> LookupSetter(This,propname,ppDispHandler) ) 

#define IHTMLDOMConstructor_DefineGetter(This,propname,pdispHandler)	\
    ( (This)->lpVtbl -> DefineGetter(This,propname,pdispHandler) ) 

#define IHTMLDOMConstructor_DefineSetter(This,propname,pdispHandler)	\
    ( (This)->lpVtbl -> DefineSetter(This,propname,pdispHandler) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLDOMConstructor_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle_INTERFACE_DEFINED__
#define __IHTMLStyle_INTERFACE_DEFINED__

/* interface IHTMLStyle */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f25e-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontFamily( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontFamily( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontVariant( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontVariant( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontWeight( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontWeight( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontSize( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontSize( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_font( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_font( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_color( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_color( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_background( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_background( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundImage( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundImage( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundRepeat( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundRepeat( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundAttachment( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundAttachment( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPosition( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPosition( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPositionX( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionX( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPositionY( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionY( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordSpacing( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_letterSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_letterSpacing( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecoration( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecoration( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationNone( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationNone( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationUnderline( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationUnderline( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationOverline( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationOverline( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationLineThrough( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationLineThrough( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationBlink( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationBlink( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_verticalAlign( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_verticalAlign( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textTransform( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textTransform( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAlign( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlign( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textIndent( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textIndent( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lineHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineHeight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginTop( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginRight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginRight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginBottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginBottom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginLeft( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_margin( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_margin( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingTop( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingRight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingRight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingBottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingBottom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingLeft( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_padding( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_padding( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTop( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTop( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRight( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRight( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottom( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottom( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeft( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeft( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColor( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderWidth( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderWidth( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_styleFloat( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_styleFloat( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_clear( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clear( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_display( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_display( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_visibility( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_visibility( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyleType( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleType( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStylePosition( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStylePosition( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyleImage( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleImage( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_whiteSpace( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_whiteSpace( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_top( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_left( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_left( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_zIndex( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zIndex( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflow( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflow( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakBefore( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakBefore( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakAfter( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakAfter( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cssText( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cssText( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelTop( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelTop( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelLeft( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelLeft( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelWidth( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelWidth( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelHeight( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelHeight( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posTop( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posTop( 
            /* [out][retval] */ __RPC__out float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posLeft( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posLeft( 
            /* [out][retval] */ __RPC__out float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posWidth( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posWidth( 
            /* [out][retval] */ __RPC__out float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posHeight( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posHeight( 
            /* [out][retval] */ __RPC__out float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cursor( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cursor( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_clip( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clip( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_filter( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_filter( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags = 1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT *AttributeValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *String) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyle * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontFamily )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontFamily )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontVariant )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontVariant )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontWeight )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontWeight )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontSize )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontSize )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_font )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_font )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_background )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_background )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundColor )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundColor )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundImage )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundImage )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundRepeat )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundRepeat )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundAttachment )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundAttachment )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundPosition )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPosition )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundPositionX )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPositionX )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundPositionY )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPositionY )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_wordSpacing )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordSpacing )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_letterSpacing )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_letterSpacing )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecoration )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecoration )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationNone )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationNone )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationUnderline )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationUnderline )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationOverline )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationOverline )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationLineThrough )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationLineThrough )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationBlink )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationBlink )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_verticalAlign )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_verticalAlign )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textTransform )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textTransform )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textAlign )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAlign )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textIndent )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textIndent )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_lineHeight )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lineHeight )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginTop )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginTop )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginRight )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginRight )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginBottom )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginBottom )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginLeft )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginLeft )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_margin )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_margin )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingTop )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingTop )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingRight )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingRight )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingBottom )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingBottom )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingLeft )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingLeft )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_padding )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_padding )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_border )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_border )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTop )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTop )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRight )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRight )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottom )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottom )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeft )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeft )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderColor )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderColor )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTopColor )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopColor )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRightColor )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightColor )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottomColor )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomColor )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeftColor )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftColor )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTopWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRightWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottomWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeftWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTopStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRightStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottomStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeftStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_width )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_width )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_height )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_height )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_styleFloat )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_styleFloat )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_clear )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clear )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_display )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_display )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_visibility )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_visibility )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStyleType )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyleType )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStylePosition )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStylePosition )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStyleImage )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyleImage )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyle )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_whiteSpace )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_whiteSpace )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_top )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_top )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_left )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_left )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_position )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_zIndex )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_zIndex )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_overflow )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflow )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pageBreakBefore )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakBefore )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pageBreakAfter )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakAfter )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_cssText )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cssText )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelTop )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelTop )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelLeft )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelLeft )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelHeight )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelHeight )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posTop )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posTop )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posLeft )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posLeft )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posWidth )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posHeight )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posHeight )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__out float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_cursor )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cursor )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_clip )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clip )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_filter )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_filter )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setAttribute )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getAttribute )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT *AttributeValue);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeAttribute )( 
            __RPC__in IHTMLStyle * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *toString )( 
            __RPC__in IHTMLStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *String);
        
        END_INTERFACE
    } IHTMLStyleVtbl;

    interface IHTMLStyle
    {
        CONST_VTBL struct IHTMLStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyle_put_fontFamily(This,v)	\
    ( (This)->lpVtbl -> put_fontFamily(This,v) ) 

#define IHTMLStyle_get_fontFamily(This,p)	\
    ( (This)->lpVtbl -> get_fontFamily(This,p) ) 

#define IHTMLStyle_put_fontStyle(This,v)	\
    ( (This)->lpVtbl -> put_fontStyle(This,v) ) 

#define IHTMLStyle_get_fontStyle(This,p)	\
    ( (This)->lpVtbl -> get_fontStyle(This,p) ) 

#define IHTMLStyle_put_fontVariant(This,v)	\
    ( (This)->lpVtbl -> put_fontVariant(This,v) ) 

#define IHTMLStyle_get_fontVariant(This,p)	\
    ( (This)->lpVtbl -> get_fontVariant(This,p) ) 

#define IHTMLStyle_put_fontWeight(This,v)	\
    ( (This)->lpVtbl -> put_fontWeight(This,v) ) 

#define IHTMLStyle_get_fontWeight(This,p)	\
    ( (This)->lpVtbl -> get_fontWeight(This,p) ) 

#define IHTMLStyle_put_fontSize(This,v)	\
    ( (This)->lpVtbl -> put_fontSize(This,v) ) 

#define IHTMLStyle_get_fontSize(This,p)	\
    ( (This)->lpVtbl -> get_fontSize(This,p) ) 

#define IHTMLStyle_put_font(This,v)	\
    ( (This)->lpVtbl -> put_font(This,v) ) 

#define IHTMLStyle_get_font(This,p)	\
    ( (This)->lpVtbl -> get_font(This,p) ) 

#define IHTMLStyle_put_color(This,v)	\
    ( (This)->lpVtbl -> put_color(This,v) ) 

#define IHTMLStyle_get_color(This,p)	\
    ( (This)->lpVtbl -> get_color(This,p) ) 

#define IHTMLStyle_put_background(This,v)	\
    ( (This)->lpVtbl -> put_background(This,v) ) 

#define IHTMLStyle_get_background(This,p)	\
    ( (This)->lpVtbl -> get_background(This,p) ) 

#define IHTMLStyle_put_backgroundColor(This,v)	\
    ( (This)->lpVtbl -> put_backgroundColor(This,v) ) 

#define IHTMLStyle_get_backgroundColor(This,p)	\
    ( (This)->lpVtbl -> get_backgroundColor(This,p) ) 

#define IHTMLStyle_put_backgroundImage(This,v)	\
    ( (This)->lpVtbl -> put_backgroundImage(This,v) ) 

#define IHTMLStyle_get_backgroundImage(This,p)	\
    ( (This)->lpVtbl -> get_backgroundImage(This,p) ) 

#define IHTMLStyle_put_backgroundRepeat(This,v)	\
    ( (This)->lpVtbl -> put_backgroundRepeat(This,v) ) 

#define IHTMLStyle_get_backgroundRepeat(This,p)	\
    ( (This)->lpVtbl -> get_backgroundRepeat(This,p) ) 

#define IHTMLStyle_put_backgroundAttachment(This,v)	\
    ( (This)->lpVtbl -> put_backgroundAttachment(This,v) ) 

#define IHTMLStyle_get_backgroundAttachment(This,p)	\
    ( (This)->lpVtbl -> get_backgroundAttachment(This,p) ) 

#define IHTMLStyle_put_backgroundPosition(This,v)	\
    ( (This)->lpVtbl -> put_backgroundPosition(This,v) ) 

#define IHTMLStyle_get_backgroundPosition(This,p)	\
    ( (This)->lpVtbl -> get_backgroundPosition(This,p) ) 

#define IHTMLStyle_put_backgroundPositionX(This,v)	\
    ( (This)->lpVtbl -> put_backgroundPositionX(This,v) ) 

#define IHTMLStyle_get_backgroundPositionX(This,p)	\
    ( (This)->lpVtbl -> get_backgroundPositionX(This,p) ) 

#define IHTMLStyle_put_backgroundPositionY(This,v)	\
    ( (This)->lpVtbl -> put_backgroundPositionY(This,v) ) 

#define IHTMLStyle_get_backgroundPositionY(This,p)	\
    ( (This)->lpVtbl -> get_backgroundPositionY(This,p) ) 

#define IHTMLStyle_put_wordSpacing(This,v)	\
    ( (This)->lpVtbl -> put_wordSpacing(This,v) ) 

#define IHTMLStyle_get_wordSpacing(This,p)	\
    ( (This)->lpVtbl -> get_wordSpacing(This,p) ) 

#define IHTMLStyle_put_letterSpacing(This,v)	\
    ( (This)->lpVtbl -> put_letterSpacing(This,v) ) 

#define IHTMLStyle_get_letterSpacing(This,p)	\
    ( (This)->lpVtbl -> get_letterSpacing(This,p) ) 

#define IHTMLStyle_put_textDecoration(This,v)	\
    ( (This)->lpVtbl -> put_textDecoration(This,v) ) 

#define IHTMLStyle_get_textDecoration(This,p)	\
    ( (This)->lpVtbl -> get_textDecoration(This,p) ) 

#define IHTMLStyle_put_textDecorationNone(This,v)	\
    ( (This)->lpVtbl -> put_textDecorationNone(This,v) ) 

#define IHTMLStyle_get_textDecorationNone(This,p)	\
    ( (This)->lpVtbl -> get_textDecorationNone(This,p) ) 

#define IHTMLStyle_put_textDecorationUnderline(This,v)	\
    ( (This)->lpVtbl -> put_textDecorationUnderline(This,v) ) 

#define IHTMLStyle_get_textDecorationUnderline(This,p)	\
    ( (This)->lpVtbl -> get_textDecorationUnderline(This,p) ) 

#define IHTMLStyle_put_textDecorationOverline(This,v)	\
    ( (This)->lpVtbl -> put_textDecorationOverline(This,v) ) 

#define IHTMLStyle_get_textDecorationOverline(This,p)	\
    ( (This)->lpVtbl -> get_textDecorationOverline(This,p) ) 

#define IHTMLStyle_put_textDecorationLineThrough(This,v)	\
    ( (This)->lpVtbl -> put_textDecorationLineThrough(This,v) ) 

#define IHTMLStyle_get_textDecorationLineThrough(This,p)	\
    ( (This)->lpVtbl -> get_textDecorationLineThrough(This,p) ) 

#define IHTMLStyle_put_textDecorationBlink(This,v)	\
    ( (This)->lpVtbl -> put_textDecorationBlink(This,v) ) 

#define IHTMLStyle_get_textDecorationBlink(This,p)	\
    ( (This)->lpVtbl -> get_textDecorationBlink(This,p) ) 

#define IHTMLStyle_put_verticalAlign(This,v)	\
    ( (This)->lpVtbl -> put_verticalAlign(This,v) ) 

#define IHTMLStyle_get_verticalAlign(This,p)	\
    ( (This)->lpVtbl -> get_verticalAlign(This,p) ) 

#define IHTMLStyle_put_textTransform(This,v)	\
    ( (This)->lpVtbl -> put_textTransform(This,v) ) 

#define IHTMLStyle_get_textTransform(This,p)	\
    ( (This)->lpVtbl -> get_textTransform(This,p) ) 

#define IHTMLStyle_put_textAlign(This,v)	\
    ( (This)->lpVtbl -> put_textAlign(This,v) ) 

#define IHTMLStyle_get_textAlign(This,p)	\
    ( (This)->lpVtbl -> get_textAlign(This,p) ) 

#define IHTMLStyle_put_textIndent(This,v)	\
    ( (This)->lpVtbl -> put_textIndent(This,v) ) 

#define IHTMLStyle_get_textIndent(This,p)	\
    ( (This)->lpVtbl -> get_textIndent(This,p) ) 

#define IHTMLStyle_put_lineHeight(This,v)	\
    ( (This)->lpVtbl -> put_lineHeight(This,v) ) 

#define IHTMLStyle_get_lineHeight(This,p)	\
    ( (This)->lpVtbl -> get_lineHeight(This,p) ) 

#define IHTMLStyle_put_marginTop(This,v)	\
    ( (This)->lpVtbl -> put_marginTop(This,v) ) 

#define IHTMLStyle_get_marginTop(This,p)	\
    ( (This)->lpVtbl -> get_marginTop(This,p) ) 

#define IHTMLStyle_put_marginRight(This,v)	\
    ( (This)->lpVtbl -> put_marginRight(This,v) ) 

#define IHTMLStyle_get_marginRight(This,p)	\
    ( (This)->lpVtbl -> get_marginRight(This,p) ) 

#define IHTMLStyle_put_marginBottom(This,v)	\
    ( (This)->lpVtbl -> put_marginBottom(This,v) ) 

#define IHTMLStyle_get_marginBottom(This,p)	\
    ( (This)->lpVtbl -> get_marginBottom(This,p) ) 

#define IHTMLStyle_put_marginLeft(This,v)	\
    ( (This)->lpVtbl -> put_marginLeft(This,v) ) 

#define IHTMLStyle_get_marginLeft(This,p)	\
    ( (This)->lpVtbl -> get_marginLeft(This,p) ) 

#define IHTMLStyle_put_margin(This,v)	\
    ( (This)->lpVtbl -> put_margin(This,v) ) 

#define IHTMLStyle_get_margin(This,p)	\
    ( (This)->lpVtbl -> get_margin(This,p) ) 

#define IHTMLStyle_put_paddingTop(This,v)	\
    ( (This)->lpVtbl -> put_paddingTop(This,v) ) 

#define IHTMLStyle_get_paddingTop(This,p)	\
    ( (This)->lpVtbl -> get_paddingTop(This,p) ) 

#define IHTMLStyle_put_paddingRight(This,v)	\
    ( (This)->lpVtbl -> put_paddingRight(This,v) ) 

#define IHTMLStyle_get_paddingRight(This,p)	\
    ( (This)->lpVtbl -> get_paddingRight(This,p) ) 

#define IHTMLStyle_put_paddingBottom(This,v)	\
    ( (This)->lpVtbl -> put_paddingBottom(This,v) ) 

#define IHTMLStyle_get_paddingBottom(This,p)	\
    ( (This)->lpVtbl -> get_paddingBottom(This,p) ) 

#define IHTMLStyle_put_paddingLeft(This,v)	\
    ( (This)->lpVtbl -> put_paddingLeft(This,v) ) 

#define IHTMLStyle_get_paddingLeft(This,p)	\
    ( (This)->lpVtbl -> get_paddingLeft(This,p) ) 

#define IHTMLStyle_put_padding(This,v)	\
    ( (This)->lpVtbl -> put_padding(This,v) ) 

#define IHTMLStyle_get_padding(This,p)	\
    ( (This)->lpVtbl -> get_padding(This,p) ) 

#define IHTMLStyle_put_border(This,v)	\
    ( (This)->lpVtbl -> put_border(This,v) ) 

#define IHTMLStyle_get_border(This,p)	\
    ( (This)->lpVtbl -> get_border(This,p) ) 

#define IHTMLStyle_put_borderTop(This,v)	\
    ( (This)->lpVtbl -> put_borderTop(This,v) ) 

#define IHTMLStyle_get_borderTop(This,p)	\
    ( (This)->lpVtbl -> get_borderTop(This,p) ) 

#define IHTMLStyle_put_borderRight(This,v)	\
    ( (This)->lpVtbl -> put_borderRight(This,v) ) 

#define IHTMLStyle_get_borderRight(This,p)	\
    ( (This)->lpVtbl -> get_borderRight(This,p) ) 

#define IHTMLStyle_put_borderBottom(This,v)	\
    ( (This)->lpVtbl -> put_borderBottom(This,v) ) 

#define IHTMLStyle_get_borderBottom(This,p)	\
    ( (This)->lpVtbl -> get_borderBottom(This,p) ) 

#define IHTMLStyle_put_borderLeft(This,v)	\
    ( (This)->lpVtbl -> put_borderLeft(This,v) ) 

#define IHTMLStyle_get_borderLeft(This,p)	\
    ( (This)->lpVtbl -> get_borderLeft(This,p) ) 

#define IHTMLStyle_put_borderColor(This,v)	\
    ( (This)->lpVtbl -> put_borderColor(This,v) ) 

#define IHTMLStyle_get_borderColor(This,p)	\
    ( (This)->lpVtbl -> get_borderColor(This,p) ) 

#define IHTMLStyle_put_borderTopColor(This,v)	\
    ( (This)->lpVtbl -> put_borderTopColor(This,v) ) 

#define IHTMLStyle_get_borderTopColor(This,p)	\
    ( (This)->lpVtbl -> get_borderTopColor(This,p) ) 

#define IHTMLStyle_put_borderRightColor(This,v)	\
    ( (This)->lpVtbl -> put_borderRightColor(This,v) ) 

#define IHTMLStyle_get_borderRightColor(This,p)	\
    ( (This)->lpVtbl -> get_borderRightColor(This,p) ) 

#define IHTMLStyle_put_borderBottomColor(This,v)	\
    ( (This)->lpVtbl -> put_borderBottomColor(This,v) ) 

#define IHTMLStyle_get_borderBottomColor(This,p)	\
    ( (This)->lpVtbl -> get_borderBottomColor(This,p) ) 

#define IHTMLStyle_put_borderLeftColor(This,v)	\
    ( (This)->lpVtbl -> put_borderLeftColor(This,v) ) 

#define IHTMLStyle_get_borderLeftColor(This,p)	\
    ( (This)->lpVtbl -> get_borderLeftColor(This,p) ) 

#define IHTMLStyle_put_borderWidth(This,v)	\
    ( (This)->lpVtbl -> put_borderWidth(This,v) ) 

#define IHTMLStyle_get_borderWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderWidth(This,p) ) 

#define IHTMLStyle_put_borderTopWidth(This,v)	\
    ( (This)->lpVtbl -> put_borderTopWidth(This,v) ) 

#define IHTMLStyle_get_borderTopWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderTopWidth(This,p) ) 

#define IHTMLStyle_put_borderRightWidth(This,v)	\
    ( (This)->lpVtbl -> put_borderRightWidth(This,v) ) 

#define IHTMLStyle_get_borderRightWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderRightWidth(This,p) ) 

#define IHTMLStyle_put_borderBottomWidth(This,v)	\
    ( (This)->lpVtbl -> put_borderBottomWidth(This,v) ) 

#define IHTMLStyle_get_borderBottomWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderBottomWidth(This,p) ) 

#define IHTMLStyle_put_borderLeftWidth(This,v)	\
    ( (This)->lpVtbl -> put_borderLeftWidth(This,v) ) 

#define IHTMLStyle_get_borderLeftWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderLeftWidth(This,p) ) 

#define IHTMLStyle_put_borderStyle(This,v)	\
    ( (This)->lpVtbl -> put_borderStyle(This,v) ) 

#define IHTMLStyle_get_borderStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderStyle(This,p) ) 

#define IHTMLStyle_put_borderTopStyle(This,v)	\
    ( (This)->lpVtbl -> put_borderTopStyle(This,v) ) 

#define IHTMLStyle_get_borderTopStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderTopStyle(This,p) ) 

#define IHTMLStyle_put_borderRightStyle(This,v)	\
    ( (This)->lpVtbl -> put_borderRightStyle(This,v) ) 

#define IHTMLStyle_get_borderRightStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderRightStyle(This,p) ) 

#define IHTMLStyle_put_borderBottomStyle(This,v)	\
    ( (This)->lpVtbl -> put_borderBottomStyle(This,v) ) 

#define IHTMLStyle_get_borderBottomStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderBottomStyle(This,p) ) 

#define IHTMLStyle_put_borderLeftStyle(This,v)	\
    ( (This)->lpVtbl -> put_borderLeftStyle(This,v) ) 

#define IHTMLStyle_get_borderLeftStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderLeftStyle(This,p) ) 

#define IHTMLStyle_put_width(This,v)	\
    ( (This)->lpVtbl -> put_width(This,v) ) 

#define IHTMLStyle_get_width(This,p)	\
    ( (This)->lpVtbl -> get_width(This,p) ) 

#define IHTMLStyle_put_height(This,v)	\
    ( (This)->lpVtbl -> put_height(This,v) ) 

#define IHTMLStyle_get_height(This,p)	\
    ( (This)->lpVtbl -> get_height(This,p) ) 

#define IHTMLStyle_put_styleFloat(This,v)	\
    ( (This)->lpVtbl -> put_styleFloat(This,v) ) 

#define IHTMLStyle_get_styleFloat(This,p)	\
    ( (This)->lpVtbl -> get_styleFloat(This,p) ) 

#define IHTMLStyle_put_clear(This,v)	\
    ( (This)->lpVtbl -> put_clear(This,v) ) 

#define IHTMLStyle_get_clear(This,p)	\
    ( (This)->lpVtbl -> get_clear(This,p) ) 

#define IHTMLStyle_put_display(This,v)	\
    ( (This)->lpVtbl -> put_display(This,v) ) 

#define IHTMLStyle_get_display(This,p)	\
    ( (This)->lpVtbl -> get_display(This,p) ) 

#define IHTMLStyle_put_visibility(This,v)	\
    ( (This)->lpVtbl -> put_visibility(This,v) ) 

#define IHTMLStyle_get_visibility(This,p)	\
    ( (This)->lpVtbl -> get_visibility(This,p) ) 

#define IHTMLStyle_put_listStyleType(This,v)	\
    ( (This)->lpVtbl -> put_listStyleType(This,v) ) 

#define IHTMLStyle_get_listStyleType(This,p)	\
    ( (This)->lpVtbl -> get_listStyleType(This,p) ) 

#define IHTMLStyle_put_listStylePosition(This,v)	\
    ( (This)->lpVtbl -> put_listStylePosition(This,v) ) 

#define IHTMLStyle_get_listStylePosition(This,p)	\
    ( (This)->lpVtbl -> get_listStylePosition(This,p) ) 

#define IHTMLStyle_put_listStyleImage(This,v)	\
    ( (This)->lpVtbl -> put_listStyleImage(This,v) ) 

#define IHTMLStyle_get_listStyleImage(This,p)	\
    ( (This)->lpVtbl -> get_listStyleImage(This,p) ) 

#define IHTMLStyle_put_listStyle(This,v)	\
    ( (This)->lpVtbl -> put_listStyle(This,v) ) 

#define IHTMLStyle_get_listStyle(This,p)	\
    ( (This)->lpVtbl -> get_listStyle(This,p) ) 

#define IHTMLStyle_put_whiteSpace(This,v)	\
    ( (This)->lpVtbl -> put_whiteSpace(This,v) ) 

#define IHTMLStyle_get_whiteSpace(This,p)	\
    ( (This)->lpVtbl -> get_whiteSpace(This,p) ) 

#define IHTMLStyle_put_top(This,v)	\
    ( (This)->lpVtbl -> put_top(This,v) ) 

#define IHTMLStyle_get_top(This,p)	\
    ( (This)->lpVtbl -> get_top(This,p) ) 

#define IHTMLStyle_put_left(This,v)	\
    ( (This)->lpVtbl -> put_left(This,v) ) 

#define IHTMLStyle_get_left(This,p)	\
    ( (This)->lpVtbl -> get_left(This,p) ) 

#define IHTMLStyle_get_position(This,p)	\
    ( (This)->lpVtbl -> get_position(This,p) ) 

#define IHTMLStyle_put_zIndex(This,v)	\
    ( (This)->lpVtbl -> put_zIndex(This,v) ) 

#define IHTMLStyle_get_zIndex(This,p)	\
    ( (This)->lpVtbl -> get_zIndex(This,p) ) 

#define IHTMLStyle_put_overflow(This,v)	\
    ( (This)->lpVtbl -> put_overflow(This,v) ) 

#define IHTMLStyle_get_overflow(This,p)	\
    ( (This)->lpVtbl -> get_overflow(This,p) ) 

#define IHTMLStyle_put_pageBreakBefore(This,v)	\
    ( (This)->lpVtbl -> put_pageBreakBefore(This,v) ) 

#define IHTMLStyle_get_pageBreakBefore(This,p)	\
    ( (This)->lpVtbl -> get_pageBreakBefore(This,p) ) 

#define IHTMLStyle_put_pageBreakAfter(This,v)	\
    ( (This)->lpVtbl -> put_pageBreakAfter(This,v) ) 

#define IHTMLStyle_get_pageBreakAfter(This,p)	\
    ( (This)->lpVtbl -> get_pageBreakAfter(This,p) ) 

#define IHTMLStyle_put_cssText(This,v)	\
    ( (This)->lpVtbl -> put_cssText(This,v) ) 

#define IHTMLStyle_get_cssText(This,p)	\
    ( (This)->lpVtbl -> get_cssText(This,p) ) 

#define IHTMLStyle_put_pixelTop(This,v)	\
    ( (This)->lpVtbl -> put_pixelTop(This,v) ) 

#define IHTMLStyle_get_pixelTop(This,p)	\
    ( (This)->lpVtbl -> get_pixelTop(This,p) ) 

#define IHTMLStyle_put_pixelLeft(This,v)	\
    ( (This)->lpVtbl -> put_pixelLeft(This,v) ) 

#define IHTMLStyle_get_pixelLeft(This,p)	\
    ( (This)->lpVtbl -> get_pixelLeft(This,p) ) 

#define IHTMLStyle_put_pixelWidth(This,v)	\
    ( (This)->lpVtbl -> put_pixelWidth(This,v) ) 

#define IHTMLStyle_get_pixelWidth(This,p)	\
    ( (This)->lpVtbl -> get_pixelWidth(This,p) ) 

#define IHTMLStyle_put_pixelHeight(This,v)	\
    ( (This)->lpVtbl -> put_pixelHeight(This,v) ) 

#define IHTMLStyle_get_pixelHeight(This,p)	\
    ( (This)->lpVtbl -> get_pixelHeight(This,p) ) 

#define IHTMLStyle_put_posTop(This,v)	\
    ( (This)->lpVtbl -> put_posTop(This,v) ) 

#define IHTMLStyle_get_posTop(This,p)	\
    ( (This)->lpVtbl -> get_posTop(This,p) ) 

#define IHTMLStyle_put_posLeft(This,v)	\
    ( (This)->lpVtbl -> put_posLeft(This,v) ) 

#define IHTMLStyle_get_posLeft(This,p)	\
    ( (This)->lpVtbl -> get_posLeft(This,p) ) 

#define IHTMLStyle_put_posWidth(This,v)	\
    ( (This)->lpVtbl -> put_posWidth(This,v) ) 

#define IHTMLStyle_get_posWidth(This,p)	\
    ( (This)->lpVtbl -> get_posWidth(This,p) ) 

#define IHTMLStyle_put_posHeight(This,v)	\
    ( (This)->lpVtbl -> put_posHeight(This,v) ) 

#define IHTMLStyle_get_posHeight(This,p)	\
    ( (This)->lpVtbl -> get_posHeight(This,p) ) 

#define IHTMLStyle_put_cursor(This,v)	\
    ( (This)->lpVtbl -> put_cursor(This,v) ) 

#define IHTMLStyle_get_cursor(This,p)	\
    ( (This)->lpVtbl -> get_cursor(This,p) ) 

#define IHTMLStyle_put_clip(This,v)	\
    ( (This)->lpVtbl -> put_clip(This,v) ) 

#define IHTMLStyle_get_clip(This,p)	\
    ( (This)->lpVtbl -> get_clip(This,p) ) 

#define IHTMLStyle_put_filter(This,v)	\
    ( (This)->lpVtbl -> put_filter(This,v) ) 

#define IHTMLStyle_get_filter(This,p)	\
    ( (This)->lpVtbl -> get_filter(This,p) ) 

#define IHTMLStyle_setAttribute(This,strAttributeName,AttributeValue,lFlags)	\
    ( (This)->lpVtbl -> setAttribute(This,strAttributeName,AttributeValue,lFlags) ) 

#define IHTMLStyle_getAttribute(This,strAttributeName,lFlags,AttributeValue)	\
    ( (This)->lpVtbl -> getAttribute(This,strAttributeName,lFlags,AttributeValue) ) 

#define IHTMLStyle_removeAttribute(This,strAttributeName,lFlags,pfSuccess)	\
    ( (This)->lpVtbl -> removeAttribute(This,strAttributeName,lFlags,pfSuccess) ) 

#define IHTMLStyle_toString(This,String)	\
    ( (This)->lpVtbl -> toString(This,String) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_styleFloat_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_styleFloat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_clear_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_clear_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_display_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_display_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_visibility_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_visibility_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_listStyleType_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_listStyleType_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_listStylePosition_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_listStylePosition_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_listStyleImage_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_listStyleImage_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_listStyle_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_listStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_listStyle_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_listStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_whiteSpace_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_whiteSpace_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_top_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_top_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__out VARIANT *p);


void __RPC_STUB IHTMLStyle_get_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_left_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_left_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__out VARIANT *p);


void __RPC_STUB IHTMLStyle_get_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_position_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_zIndex_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_zIndex_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__out VARIANT *p);


void __RPC_STUB IHTMLStyle_get_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_overflow_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_overflow_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pageBreakBefore_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pageBreakBefore_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pageBreakAfter_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pageBreakAfter_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_cssText_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_cssText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_cssText_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_cssText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pixelTop_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle_put_pixelTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pixelTop_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__out long *p);


void __RPC_STUB IHTMLStyle_get_pixelTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pixelLeft_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle_put_pixelLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pixelLeft_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__out long *p);


void __RPC_STUB IHTMLStyle_get_pixelLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pixelWidth_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle_put_pixelWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pixelWidth_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__out long *p);


void __RPC_STUB IHTMLStyle_get_pixelWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pixelHeight_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle_put_pixelHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pixelHeight_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__out long *p);


void __RPC_STUB IHTMLStyle_get_pixelHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_posTop_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle_put_posTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_posTop_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__out float *p);


void __RPC_STUB IHTMLStyle_get_posTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_posLeft_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle_put_posLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_posLeft_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__out float *p);


void __RPC_STUB IHTMLStyle_get_posLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_posWidth_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle_put_posWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_posWidth_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__out float *p);


void __RPC_STUB IHTMLStyle_get_posWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_posHeight_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle_put_posHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_posHeight_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__out float *p);


void __RPC_STUB IHTMLStyle_get_posHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_cursor_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_cursor_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_clip_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_clip_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_filter_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLStyle_put_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_filter_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLStyle_get_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_setAttribute_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR strAttributeName,
    /* [in] */ VARIANT AttributeValue,
    /* [in][defaultvalue] */ LONG lFlags);


void __RPC_STUB IHTMLStyle_setAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_getAttribute_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ __RPC__out VARIANT *AttributeValue);


void __RPC_STUB IHTMLStyle_getAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_removeAttribute_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [in] */ __RPC__in BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess);


void __RPC_STUB IHTMLStyle_removeAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_toString_Proxy( 
    __RPC__in IHTMLStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *String);


void __RPC_STUB IHTMLStyle_toString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLStyle_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle2_INTERFACE_DEFINED__
#define __IHTMLStyle2_INTERFACE_DEFINED__

/* interface IHTMLStyle2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a2-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_tableLayout( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_tableLayout( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderCollapse( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderCollapse( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_direction( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_direction( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_behavior( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_behavior( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setExpression( 
            /* [in] */ __RPC__in BSTR propname,
            /* [in] */ __RPC__in BSTR expression,
            /* [in][defaultvalue] */ __RPC__in BSTR language = L"") = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getExpression( 
            /* [in] */ __RPC__in BSTR propname,
            /* [out][retval] */ __RPC__out VARIANT *expression) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeExpression( 
            /* [in] */ __RPC__in BSTR propname,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_position( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_unicodeBidi( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_unicodeBidi( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_bottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_bottom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_right( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_right( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelBottom( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelBottom( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelRight( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelRight( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posBottom( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posBottom( 
            /* [out][retval] */ __RPC__out float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posRight( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posRight( 
            /* [out][retval] */ __RPC__out float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_imeMode( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeMode( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyAlign( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyAlign( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyPosition( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyPosition( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyOverhang( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyOverhang( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridChar( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridChar( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridLine( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridLine( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridMode( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridMode( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridType( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridType( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGrid( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGrid( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordBreak( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordBreak( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lineBreak( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineBreak( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textJustify( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustify( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textJustifyTrim( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustifyTrim( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textKashida( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashida( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAutospace( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAutospace( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflowX( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowX( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflowY( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowY( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_accelerator( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_accelerator( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyle2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyle2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyle2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyle2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_tableLayout )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_tableLayout )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderCollapse )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderCollapse )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_direction )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_direction )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_behavior )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_behavior )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setExpression )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR propname,
            /* [in] */ __RPC__in BSTR expression,
            /* [in][defaultvalue] */ __RPC__in BSTR language);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getExpression )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR propname,
            /* [out][retval] */ __RPC__out VARIANT *expression);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeExpression )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR propname,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_position )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_position )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_unicodeBidi )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_unicodeBidi )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_bottom )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_bottom )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_right )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_right )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelBottom )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelBottom )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelRight )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelRight )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posBottom )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posBottom )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__out float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posRight )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posRight )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__out float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_imeMode )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_imeMode )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rubyAlign )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyAlign )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rubyPosition )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyPosition )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rubyOverhang )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyOverhang )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridChar )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridChar )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridLine )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridLine )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridMode )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridMode )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridType )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridType )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGrid )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGrid )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_wordBreak )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordBreak )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_lineBreak )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lineBreak )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textJustify )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textJustify )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textJustifyTrim )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textJustifyTrim )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textKashida )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textKashida )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textAutospace )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAutospace )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_overflowX )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflowX )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_overflowY )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflowY )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_accelerator )( 
            __RPC__in IHTMLStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_accelerator )( 
            __RPC__in IHTMLStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLStyle2Vtbl;

    interface IHTMLStyle2
    {
        CONST_VTBL struct IHTMLStyle2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyle2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyle2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyle2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyle2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyle2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyle2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyle2_put_tableLayout(This,v)	\
    ( (This)->lpVtbl -> put_tableLayout(This,v) ) 

#define IHTMLStyle2_get_tableLayout(This,p)	\
    ( (This)->lpVtbl -> get_tableLayout(This,p) ) 

#define IHTMLStyle2_put_borderCollapse(This,v)	\
    ( (This)->lpVtbl -> put_borderCollapse(This,v) ) 

#define IHTMLStyle2_get_borderCollapse(This,p)	\
    ( (This)->lpVtbl -> get_borderCollapse(This,p) ) 

#define IHTMLStyle2_put_direction(This,v)	\
    ( (This)->lpVtbl -> put_direction(This,v) ) 

#define IHTMLStyle2_get_direction(This,p)	\
    ( (This)->lpVtbl -> get_direction(This,p) ) 

#define IHTMLStyle2_put_behavior(This,v)	\
    ( (This)->lpVtbl -> put_behavior(This,v) ) 

#define IHTMLStyle2_get_behavior(This,p)	\
    ( (This)->lpVtbl -> get_behavior(This,p) ) 

#define IHTMLStyle2_setExpression(This,propname,expression,language)	\
    ( (This)->lpVtbl -> setExpression(This,propname,expression,language) ) 

#define IHTMLStyle2_getExpression(This,propname,expression)	\
    ( (This)->lpVtbl -> getExpression(This,propname,expression) ) 

#define IHTMLStyle2_removeExpression(This,propname,pfSuccess)	\
    ( (This)->lpVtbl -> removeExpression(This,propname,pfSuccess) ) 

#define IHTMLStyle2_put_position(This,v)	\
    ( (This)->lpVtbl -> put_position(This,v) ) 

#define IHTMLStyle2_get_position(This,p)	\
    ( (This)->lpVtbl -> get_position(This,p) ) 

#define IHTMLStyle2_put_unicodeBidi(This,v)	\
    ( (This)->lpVtbl -> put_unicodeBidi(This,v) ) 

#define IHTMLStyle2_get_unicodeBidi(This,p)	\
    ( (This)->lpVtbl -> get_unicodeBidi(This,p) ) 

#define IHTMLStyle2_put_bottom(This,v)	\
    ( (This)->lpVtbl -> put_bottom(This,v) ) 

#define IHTMLStyle2_get_bottom(This,p)	\
    ( (This)->lpVtbl -> get_bottom(This,p) ) 

#define IHTMLStyle2_put_right(This,v)	\
    ( (This)->lpVtbl -> put_right(This,v) ) 

#define IHTMLStyle2_get_right(This,p)	\
    ( (This)->lpVtbl -> get_right(This,p) ) 

#define IHTMLStyle2_put_pixelBottom(This,v)	\
    ( (This)->lpVtbl -> put_pixelBottom(This,v) ) 

#define IHTMLStyle2_get_pixelBottom(This,p)	\
    ( (This)->lpVtbl -> get_pixelBottom(This,p) ) 

#define IHTMLStyle2_put_pixelRight(This,v)	\
    ( (This)->lpVtbl -> put_pixelRight(This,v) ) 

#define IHTMLStyle2_get_pixelRight(This,p)	\
    ( (This)->lpVtbl -> get_pixelRight(This,p) ) 

#define IHTMLStyle2_put_posBottom(This,v)	\
    ( (This)->lpVtbl -> put_posBottom(This,v) ) 

#define IHTMLStyle2_get_posBottom(This,p)	\
    ( (This)->lpVtbl -> get_posBottom(This,p) ) 

#define IHTMLStyle2_put_posRight(This,v)	\
    ( (This)->lpVtbl -> put_posRight(This,v) ) 

#define IHTMLStyle2_get_posRight(This,p)	\
    ( (This)->lpVtbl -> get_posRight(This,p) ) 

#define IHTMLStyle2_put_imeMode(This,v)	\
    ( (This)->lpVtbl -> put_imeMode(This,v) ) 

#define IHTMLStyle2_get_imeMode(This,p)	\
    ( (This)->lpVtbl -> get_imeMode(This,p) ) 

#define IHTMLStyle2_put_rubyAlign(This,v)	\
    ( (This)->lpVtbl -> put_rubyAlign(This,v) ) 

#define IHTMLStyle2_get_rubyAlign(This,p)	\
    ( (This)->lpVtbl -> get_rubyAlign(This,p) ) 

#define IHTMLStyle2_put_rubyPosition(This,v)	\
    ( (This)->lpVtbl -> put_rubyPosition(This,v) ) 

#define IHTMLStyle2_get_rubyPosition(This,p)	\
    ( (This)->lpVtbl -> get_rubyPosition(This,p) ) 

#define IHTMLStyle2_put_rubyOverhang(This,v)	\
    ( (This)->lpVtbl -> put_rubyOverhang(This,v) ) 

#define IHTMLStyle2_get_rubyOverhang(This,p)	\
    ( (This)->lpVtbl -> get_rubyOverhang(This,p) ) 

#define IHTMLStyle2_put_layoutGridChar(This,v)	\
    ( (This)->lpVtbl -> put_layoutGridChar(This,v) ) 

#define IHTMLStyle2_get_layoutGridChar(This,p)	\
    ( (This)->lpVtbl -> get_layoutGridChar(This,p) ) 

#define IHTMLStyle2_put_layoutGridLine(This,v)	\
    ( (This)->lpVtbl -> put_layoutGridLine(This,v) ) 

#define IHTMLStyle2_get_layoutGridLine(This,p)	\
    ( (This)->lpVtbl -> get_layoutGridLine(This,p) ) 

#define IHTMLStyle2_put_layoutGridMode(This,v)	\
    ( (This)->lpVtbl -> put_layoutGridMode(This,v) ) 

#define IHTMLStyle2_get_layoutGridMode(This,p)	\
    ( (This)->lpVtbl -> get_layoutGridMode(This,p) ) 

#define IHTMLStyle2_put_layoutGridType(This,v)	\
    ( (This)->lpVtbl -> put_layoutGridType(This,v) ) 

#define IHTMLStyle2_get_layoutGridType(This,p)	\
    ( (This)->lpVtbl -> get_layoutGridType(This,p) ) 

#define IHTMLStyle2_put_layoutGrid(This,v)	\
    ( (This)->lpVtbl -> put_layoutGrid(This,v) ) 

#define IHTMLStyle2_get_layoutGrid(This,p)	\
    ( (This)->lpVtbl -> get_layoutGrid(This,p) ) 

#define IHTMLStyle2_put_wordBreak(This,v)	\
    ( (This)->lpVtbl -> put_wordBreak(This,v) ) 

#define IHTMLStyle2_get_wordBreak(This,p)	\
    ( (This)->lpVtbl -> get_wordBreak(This,p) ) 

#define IHTMLStyle2_put_lineBreak(This,v)	\
    ( (This)->lpVtbl -> put_lineBreak(This,v) ) 

#define IHTMLStyle2_get_lineBreak(This,p)	\
    ( (This)->lpVtbl -> get_lineBreak(This,p) ) 

#define IHTMLStyle2_put_textJustify(This,v)	\
    ( (This)->lpVtbl -> put_textJustify(This,v) ) 

#define IHTMLStyle2_get_textJustify(This,p)	\
    ( (This)->lpVtbl -> get_textJustify(This,p) ) 

#define IHTMLStyle2_put_textJustifyTrim(This,v)	\
    ( (This)->lpVtbl -> put_textJustifyTrim(This,v) ) 

#define IHTMLStyle2_get_textJustifyTrim(This,p)	\
    ( (This)->lpVtbl -> get_textJustifyTrim(This,p) ) 

#define IHTMLStyle2_put_textKashida(This,v)	\
    ( (This)->lpVtbl -> put_textKashida(This,v) ) 

#define IHTMLStyle2_get_textKashida(This,p)	\
    ( (This)->lpVtbl -> get_textKashida(This,p) ) 

#define IHTMLStyle2_put_textAutospace(This,v)	\
    ( (This)->lpVtbl -> put_textAutospace(This,v) ) 

#define IHTMLStyle2_get_textAutospace(This,p)	\
    ( (This)->lpVtbl -> get_textAutospace(This,p) ) 

#define IHTMLStyle2_put_overflowX(This,v)	\
    ( (This)->lpVtbl -> put_overflowX(This,v) ) 

#define IHTMLStyle2_get_overflowX(This,p)	\
    ( (This)->lpVtbl -> get_overflowX(This,p) ) 

#define IHTMLStyle2_put_overflowY(This,v)	\
    ( (This)->lpVtbl -> put_overflowY(This,v) ) 

#define IHTMLStyle2_get_overflowY(This,p)	\
    ( (This)->lpVtbl -> get_overflowY(This,p) ) 

#define IHTMLStyle2_put_accelerator(This,v)	\
    ( (This)->lpVtbl -> put_accelerator(This,v) ) 

#define IHTMLStyle2_get_accelerator(This,p)	\
    ( (This)->lpVtbl -> get_accelerator(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyle2_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle3_INTERFACE_DEFINED__
#define __IHTMLStyle3_INTERFACE_DEFINED__

/* interface IHTMLStyle3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f656-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutFlow( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutFlow( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_zoom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zoom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordWrap( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordWrap( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textUnderlinePosition( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textUnderlinePosition( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarBaseColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarBaseColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarFaceColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarFaceColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbar3dLightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbar3dLightColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarShadowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarShadowColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarHighlightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarHighlightColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarDarkShadowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarDarkShadowColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarArrowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarArrowColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarTrackColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarTrackColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_writingMode( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_writingMode( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAlignLast( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlignLast( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textKashidaSpace( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashidaSpace( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyle3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyle3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyle3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyle3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutFlow )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutFlow )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_zoom )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_zoom )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_wordWrap )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordWrap )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textUnderlinePosition )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textUnderlinePosition )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarBaseColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarBaseColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarFaceColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarFaceColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbar3dLightColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbar3dLightColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarShadowColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarShadowColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarHighlightColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarHighlightColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarDarkShadowColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarDarkShadowColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarArrowColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarArrowColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarTrackColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarTrackColor )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_writingMode )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_writingMode )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textAlignLast )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAlignLast )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textKashidaSpace )( 
            __RPC__in IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textKashidaSpace )( 
            __RPC__in IHTMLStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        END_INTERFACE
    } IHTMLStyle3Vtbl;

    interface IHTMLStyle3
    {
        CONST_VTBL struct IHTMLStyle3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyle3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyle3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyle3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyle3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyle3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyle3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyle3_put_layoutFlow(This,v)	\
    ( (This)->lpVtbl -> put_layoutFlow(This,v) ) 

#define IHTMLStyle3_get_layoutFlow(This,p)	\
    ( (This)->lpVtbl -> get_layoutFlow(This,p) ) 

#define IHTMLStyle3_put_zoom(This,v)	\
    ( (This)->lpVtbl -> put_zoom(This,v) ) 

#define IHTMLStyle3_get_zoom(This,p)	\
    ( (This)->lpVtbl -> get_zoom(This,p) ) 

#define IHTMLStyle3_put_wordWrap(This,v)	\
    ( (This)->lpVtbl -> put_wordWrap(This,v) ) 

#define IHTMLStyle3_get_wordWrap(This,p)	\
    ( (This)->lpVtbl -> get_wordWrap(This,p) ) 

#define IHTMLStyle3_put_textUnderlinePosition(This,v)	\
    ( (This)->lpVtbl -> put_textUnderlinePosition(This,v) ) 

#define IHTMLStyle3_get_textUnderlinePosition(This,p)	\
    ( (This)->lpVtbl -> get_textUnderlinePosition(This,p) ) 

#define IHTMLStyle3_put_scrollbarBaseColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarBaseColor(This,v) ) 

#define IHTMLStyle3_get_scrollbarBaseColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarBaseColor(This,p) ) 

#define IHTMLStyle3_put_scrollbarFaceColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarFaceColor(This,v) ) 

#define IHTMLStyle3_get_scrollbarFaceColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarFaceColor(This,p) ) 

#define IHTMLStyle3_put_scrollbar3dLightColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbar3dLightColor(This,v) ) 

#define IHTMLStyle3_get_scrollbar3dLightColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbar3dLightColor(This,p) ) 

#define IHTMLStyle3_put_scrollbarShadowColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarShadowColor(This,v) ) 

#define IHTMLStyle3_get_scrollbarShadowColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarShadowColor(This,p) ) 

#define IHTMLStyle3_put_scrollbarHighlightColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarHighlightColor(This,v) ) 

#define IHTMLStyle3_get_scrollbarHighlightColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarHighlightColor(This,p) ) 

#define IHTMLStyle3_put_scrollbarDarkShadowColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarDarkShadowColor(This,v) ) 

#define IHTMLStyle3_get_scrollbarDarkShadowColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarDarkShadowColor(This,p) ) 

#define IHTMLStyle3_put_scrollbarArrowColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarArrowColor(This,v) ) 

#define IHTMLStyle3_get_scrollbarArrowColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarArrowColor(This,p) ) 

#define IHTMLStyle3_put_scrollbarTrackColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarTrackColor(This,v) ) 

#define IHTMLStyle3_get_scrollbarTrackColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarTrackColor(This,p) ) 

#define IHTMLStyle3_put_writingMode(This,v)	\
    ( (This)->lpVtbl -> put_writingMode(This,v) ) 

#define IHTMLStyle3_get_writingMode(This,p)	\
    ( (This)->lpVtbl -> get_writingMode(This,p) ) 

#define IHTMLStyle3_put_textAlignLast(This,v)	\
    ( (This)->lpVtbl -> put_textAlignLast(This,v) ) 

#define IHTMLStyle3_get_textAlignLast(This,p)	\
    ( (This)->lpVtbl -> get_textAlignLast(This,p) ) 

#define IHTMLStyle3_put_textKashidaSpace(This,v)	\
    ( (This)->lpVtbl -> put_textKashidaSpace(This,v) ) 

#define IHTMLStyle3_get_textKashidaSpace(This,p)	\
    ( (This)->lpVtbl -> get_textKashidaSpace(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyle3_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle4_INTERFACE_DEFINED__
#define __IHTMLStyle4_INTERFACE_DEFINED__

/* interface IHTMLStyle4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f816-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle4 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textOverflow( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textOverflow( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_minHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minHeight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyle4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyle4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyle4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyle4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyle4 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyle4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyle4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyle4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textOverflow )( 
            __RPC__in IHTMLStyle4 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textOverflow )( 
            __RPC__in IHTMLStyle4 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_minHeight )( 
            __RPC__in IHTMLStyle4 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_minHeight )( 
            __RPC__in IHTMLStyle4 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        END_INTERFACE
    } IHTMLStyle4Vtbl;

    interface IHTMLStyle4
    {
        CONST_VTBL struct IHTMLStyle4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyle4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyle4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyle4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyle4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyle4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyle4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyle4_put_textOverflow(This,v)	\
    ( (This)->lpVtbl -> put_textOverflow(This,v) ) 

#define IHTMLStyle4_get_textOverflow(This,p)	\
    ( (This)->lpVtbl -> get_textOverflow(This,p) ) 

#define IHTMLStyle4_put_minHeight(This,v)	\
    ( (This)->lpVtbl -> put_minHeight(This,v) ) 

#define IHTMLStyle4_get_minHeight(This,p)	\
    ( (This)->lpVtbl -> get_minHeight(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyle4_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle5_INTERFACE_DEFINED__
#define __IHTMLStyle5_INTERFACE_DEFINED__

/* interface IHTMLStyle5 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f33a-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle5 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_msInterpolationMode( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_msInterpolationMode( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_maxHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxHeight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_minWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_maxWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyle5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyle5 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyle5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyle5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyle5 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyle5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyle5 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyle5 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_msInterpolationMode )( 
            __RPC__in IHTMLStyle5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_msInterpolationMode )( 
            __RPC__in IHTMLStyle5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_maxHeight )( 
            __RPC__in IHTMLStyle5 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_maxHeight )( 
            __RPC__in IHTMLStyle5 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_minWidth )( 
            __RPC__in IHTMLStyle5 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_minWidth )( 
            __RPC__in IHTMLStyle5 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_maxWidth )( 
            __RPC__in IHTMLStyle5 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_maxWidth )( 
            __RPC__in IHTMLStyle5 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        END_INTERFACE
    } IHTMLStyle5Vtbl;

    interface IHTMLStyle5
    {
        CONST_VTBL struct IHTMLStyle5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyle5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyle5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyle5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyle5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyle5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyle5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyle5_put_msInterpolationMode(This,v)	\
    ( (This)->lpVtbl -> put_msInterpolationMode(This,v) ) 

#define IHTMLStyle5_get_msInterpolationMode(This,p)	\
    ( (This)->lpVtbl -> get_msInterpolationMode(This,p) ) 

#define IHTMLStyle5_put_maxHeight(This,v)	\
    ( (This)->lpVtbl -> put_maxHeight(This,v) ) 

#define IHTMLStyle5_get_maxHeight(This,p)	\
    ( (This)->lpVtbl -> get_maxHeight(This,p) ) 

#define IHTMLStyle5_put_minWidth(This,v)	\
    ( (This)->lpVtbl -> put_minWidth(This,v) ) 

#define IHTMLStyle5_get_minWidth(This,p)	\
    ( (This)->lpVtbl -> get_minWidth(This,p) ) 

#define IHTMLStyle5_put_maxWidth(This,v)	\
    ( (This)->lpVtbl -> put_maxWidth(This,v) ) 

#define IHTMLStyle5_get_maxWidth(This,p)	\
    ( (This)->lpVtbl -> get_maxWidth(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyle5_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle6_INTERFACE_DEFINED__
#define __IHTMLStyle6_INTERFACE_DEFINED__

/* interface IHTMLStyle6 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle6;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("30510480-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle6 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_content( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_content( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_captionSide( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_captionSide( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_counterIncrement( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_counterIncrement( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_counterReset( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_counterReset( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_outline( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_outline( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_outlineWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_outlineWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_outlineStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_outlineStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_outlineColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_outlineColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_boxSizing( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_boxSizing( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderSpacing( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderSpacing( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_orphans( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_orphans( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_widows( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_widows( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakInside( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakInside( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_emptyCells( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_emptyCells( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_msBlockProgression( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_msBlockProgression( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_quotes( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_quotes( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyle6Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyle6 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyle6 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyle6 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_content )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_content )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_captionSide )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_captionSide )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_counterIncrement )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_counterIncrement )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_counterReset )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_counterReset )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_outline )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outline )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_outlineWidth )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outlineWidth )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_outlineStyle )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outlineStyle )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_outlineColor )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outlineColor )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_boxSizing )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_boxSizing )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderSpacing )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderSpacing )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_orphans )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_orphans )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_widows )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_widows )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pageBreakInside )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakInside )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_emptyCells )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_emptyCells )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_msBlockProgression )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_msBlockProgression )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_quotes )( 
            __RPC__in IHTMLStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_quotes )( 
            __RPC__in IHTMLStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLStyle6Vtbl;

    interface IHTMLStyle6
    {
        CONST_VTBL struct IHTMLStyle6Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle6_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyle6_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyle6_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyle6_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyle6_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyle6_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyle6_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyle6_put_content(This,v)	\
    ( (This)->lpVtbl -> put_content(This,v) ) 

#define IHTMLStyle6_get_content(This,p)	\
    ( (This)->lpVtbl -> get_content(This,p) ) 

#define IHTMLStyle6_put_captionSide(This,v)	\
    ( (This)->lpVtbl -> put_captionSide(This,v) ) 

#define IHTMLStyle6_get_captionSide(This,p)	\
    ( (This)->lpVtbl -> get_captionSide(This,p) ) 

#define IHTMLStyle6_put_counterIncrement(This,v)	\
    ( (This)->lpVtbl -> put_counterIncrement(This,v) ) 

#define IHTMLStyle6_get_counterIncrement(This,p)	\
    ( (This)->lpVtbl -> get_counterIncrement(This,p) ) 

#define IHTMLStyle6_put_counterReset(This,v)	\
    ( (This)->lpVtbl -> put_counterReset(This,v) ) 

#define IHTMLStyle6_get_counterReset(This,p)	\
    ( (This)->lpVtbl -> get_counterReset(This,p) ) 

#define IHTMLStyle6_put_outline(This,v)	\
    ( (This)->lpVtbl -> put_outline(This,v) ) 

#define IHTMLStyle6_get_outline(This,p)	\
    ( (This)->lpVtbl -> get_outline(This,p) ) 

#define IHTMLStyle6_put_outlineWidth(This,v)	\
    ( (This)->lpVtbl -> put_outlineWidth(This,v) ) 

#define IHTMLStyle6_get_outlineWidth(This,p)	\
    ( (This)->lpVtbl -> get_outlineWidth(This,p) ) 

#define IHTMLStyle6_put_outlineStyle(This,v)	\
    ( (This)->lpVtbl -> put_outlineStyle(This,v) ) 

#define IHTMLStyle6_get_outlineStyle(This,p)	\
    ( (This)->lpVtbl -> get_outlineStyle(This,p) ) 

#define IHTMLStyle6_put_outlineColor(This,v)	\
    ( (This)->lpVtbl -> put_outlineColor(This,v) ) 

#define IHTMLStyle6_get_outlineColor(This,p)	\
    ( (This)->lpVtbl -> get_outlineColor(This,p) ) 

#define IHTMLStyle6_put_boxSizing(This,v)	\
    ( (This)->lpVtbl -> put_boxSizing(This,v) ) 

#define IHTMLStyle6_get_boxSizing(This,p)	\
    ( (This)->lpVtbl -> get_boxSizing(This,p) ) 

#define IHTMLStyle6_put_borderSpacing(This,v)	\
    ( (This)->lpVtbl -> put_borderSpacing(This,v) ) 

#define IHTMLStyle6_get_borderSpacing(This,p)	\
    ( (This)->lpVtbl -> get_borderSpacing(This,p) ) 

#define IHTMLStyle6_put_orphans(This,v)	\
    ( (This)->lpVtbl -> put_orphans(This,v) ) 

#define IHTMLStyle6_get_orphans(This,p)	\
    ( (This)->lpVtbl -> get_orphans(This,p) ) 

#define IHTMLStyle6_put_widows(This,v)	\
    ( (This)->lpVtbl -> put_widows(This,v) ) 

#define IHTMLStyle6_get_widows(This,p)	\
    ( (This)->lpVtbl -> get_widows(This,p) ) 

#define IHTMLStyle6_put_pageBreakInside(This,v)	\
    ( (This)->lpVtbl -> put_pageBreakInside(This,v) ) 

#define IHTMLStyle6_get_pageBreakInside(This,p)	\
    ( (This)->lpVtbl -> get_pageBreakInside(This,p) ) 

#define IHTMLStyle6_put_emptyCells(This,v)	\
    ( (This)->lpVtbl -> put_emptyCells(This,v) ) 

#define IHTMLStyle6_get_emptyCells(This,p)	\
    ( (This)->lpVtbl -> get_emptyCells(This,p) ) 

#define IHTMLStyle6_put_msBlockProgression(This,v)	\
    ( (This)->lpVtbl -> put_msBlockProgression(This,v) ) 

#define IHTMLStyle6_get_msBlockProgression(This,p)	\
    ( (This)->lpVtbl -> get_msBlockProgression(This,p) ) 

#define IHTMLStyle6_put_quotes(This,v)	\
    ( (This)->lpVtbl -> put_quotes(This,v) ) 

#define IHTMLStyle6_get_quotes(This,p)	\
    ( (This)->lpVtbl -> get_quotes(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyle6_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle_INTERFACE_DEFINED__
#define __IHTMLRuleStyle_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f3cf-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontFamily( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontFamily( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontVariant( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontVariant( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontWeight( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontWeight( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontSize( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontSize( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_font( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_font( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_color( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_color( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_background( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_background( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundImage( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundImage( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundRepeat( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundRepeat( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundAttachment( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundAttachment( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPosition( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPosition( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPositionX( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionX( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPositionY( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionY( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordSpacing( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_letterSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_letterSpacing( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecoration( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecoration( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationNone( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationNone( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationUnderline( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationUnderline( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationOverline( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationOverline( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationLineThrough( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationLineThrough( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationBlink( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationBlink( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_verticalAlign( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_verticalAlign( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textTransform( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textTransform( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAlign( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlign( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textIndent( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textIndent( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lineHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineHeight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginTop( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginRight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginRight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginBottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginBottom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginLeft( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_margin( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_margin( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingTop( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingRight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingRight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingBottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingBottom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingLeft( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_padding( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_padding( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTop( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTop( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRight( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRight( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottom( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottom( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeft( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeft( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColor( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderWidth( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderWidth( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_styleFloat( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_styleFloat( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_clear( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clear( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_display( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_display( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_visibility( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_visibility( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyleType( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleType( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStylePosition( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStylePosition( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyleImage( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleImage( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_whiteSpace( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_whiteSpace( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_top( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_left( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_left( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_zIndex( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zIndex( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflow( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflow( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakBefore( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakBefore( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakAfter( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakAfter( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cssText( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cssText( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cursor( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cursor( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_clip( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clip( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_filter( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_filter( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags = 1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT *AttributeValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLRuleStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLRuleStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRuleStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontFamily )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontFamily )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontVariant )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontVariant )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontWeight )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontWeight )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontSize )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontSize )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_font )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_font )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_background )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_background )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundColor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundColor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundImage )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundImage )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundRepeat )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundRepeat )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundAttachment )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundAttachment )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundPosition )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPosition )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundPositionX )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPositionX )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundPositionY )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPositionY )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_wordSpacing )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordSpacing )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_letterSpacing )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_letterSpacing )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecoration )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecoration )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationNone )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationNone )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationUnderline )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationUnderline )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationOverline )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationOverline )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationLineThrough )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationLineThrough )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationBlink )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationBlink )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_verticalAlign )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_verticalAlign )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textTransform )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textTransform )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textAlign )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAlign )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textIndent )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textIndent )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_lineHeight )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lineHeight )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginTop )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginTop )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginRight )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginRight )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginBottom )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginBottom )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginLeft )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginLeft )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_margin )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_margin )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingTop )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingTop )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingRight )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingRight )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingBottom )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingBottom )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingLeft )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingLeft )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_padding )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_padding )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_border )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_border )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTop )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTop )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRight )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRight )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottom )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottom )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeft )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeft )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderColor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderColor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTopColor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopColor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRightColor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightColor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottomColor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomColor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeftColor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftColor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderWidth )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderWidth )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTopWidth )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopWidth )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRightWidth )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightWidth )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottomWidth )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomWidth )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeftWidth )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftWidth )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTopStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRightStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottomStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeftStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_width )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_width )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_height )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_height )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_styleFloat )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_styleFloat )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_clear )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clear )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_display )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_display )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_visibility )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_visibility )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStyleType )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyleType )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStylePosition )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStylePosition )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStyleImage )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyleImage )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyle )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_whiteSpace )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_whiteSpace )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_top )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_top )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_left )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_left )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_position )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_zIndex )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_zIndex )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_overflow )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflow )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pageBreakBefore )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakBefore )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pageBreakAfter )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakAfter )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_cssText )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cssText )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_cursor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cursor )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_clip )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clip )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_filter )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_filter )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setAttribute )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getAttribute )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT *AttributeValue);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeAttribute )( 
            __RPC__in IHTMLRuleStyle * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess);
        
        END_INTERFACE
    } IHTMLRuleStyleVtbl;

    interface IHTMLRuleStyle
    {
        CONST_VTBL struct IHTMLRuleStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLRuleStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLRuleStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLRuleStyle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLRuleStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLRuleStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLRuleStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLRuleStyle_put_fontFamily(This,v)	\
    ( (This)->lpVtbl -> put_fontFamily(This,v) ) 

#define IHTMLRuleStyle_get_fontFamily(This,p)	\
    ( (This)->lpVtbl -> get_fontFamily(This,p) ) 

#define IHTMLRuleStyle_put_fontStyle(This,v)	\
    ( (This)->lpVtbl -> put_fontStyle(This,v) ) 

#define IHTMLRuleStyle_get_fontStyle(This,p)	\
    ( (This)->lpVtbl -> get_fontStyle(This,p) ) 

#define IHTMLRuleStyle_put_fontVariant(This,v)	\
    ( (This)->lpVtbl -> put_fontVariant(This,v) ) 

#define IHTMLRuleStyle_get_fontVariant(This,p)	\
    ( (This)->lpVtbl -> get_fontVariant(This,p) ) 

#define IHTMLRuleStyle_put_fontWeight(This,v)	\
    ( (This)->lpVtbl -> put_fontWeight(This,v) ) 

#define IHTMLRuleStyle_get_fontWeight(This,p)	\
    ( (This)->lpVtbl -> get_fontWeight(This,p) ) 

#define IHTMLRuleStyle_put_fontSize(This,v)	\
    ( (This)->lpVtbl -> put_fontSize(This,v) ) 

#define IHTMLRuleStyle_get_fontSize(This,p)	\
    ( (This)->lpVtbl -> get_fontSize(This,p) ) 

#define IHTMLRuleStyle_put_font(This,v)	\
    ( (This)->lpVtbl -> put_font(This,v) ) 

#define IHTMLRuleStyle_get_font(This,p)	\
    ( (This)->lpVtbl -> get_font(This,p) ) 

#define IHTMLRuleStyle_put_color(This,v)	\
    ( (This)->lpVtbl -> put_color(This,v) ) 

#define IHTMLRuleStyle_get_color(This,p)	\
    ( (This)->lpVtbl -> get_color(This,p) ) 

#define IHTMLRuleStyle_put_background(This,v)	\
    ( (This)->lpVtbl -> put_background(This,v) ) 

#define IHTMLRuleStyle_get_background(This,p)	\
    ( (This)->lpVtbl -> get_background(This,p) ) 

#define IHTMLRuleStyle_put_backgroundColor(This,v)	\
    ( (This)->lpVtbl -> put_backgroundColor(This,v) ) 

#define IHTMLRuleStyle_get_backgroundColor(This,p)	\
    ( (This)->lpVtbl -> get_backgroundColor(This,p) ) 

#define IHTMLRuleStyle_put_backgroundImage(This,v)	\
    ( (This)->lpVtbl -> put_backgroundImage(This,v) ) 

#define IHTMLRuleStyle_get_backgroundImage(This,p)	\
    ( (This)->lpVtbl -> get_backgroundImage(This,p) ) 

#define IHTMLRuleStyle_put_backgroundRepeat(This,v)	\
    ( (This)->lpVtbl -> put_backgroundRepeat(This,v) ) 

#define IHTMLRuleStyle_get_backgroundRepeat(This,p)	\
    ( (This)->lpVtbl -> get_backgroundRepeat(This,p) ) 

#define IHTMLRuleStyle_put_backgroundAttachment(This,v)	\
    ( (This)->lpVtbl -> put_backgroundAttachment(This,v) ) 

#define IHTMLRuleStyle_get_backgroundAttachment(This,p)	\
    ( (This)->lpVtbl -> get_backgroundAttachment(This,p) ) 

#define IHTMLRuleStyle_put_backgroundPosition(This,v)	\
    ( (This)->lpVtbl -> put_backgroundPosition(This,v) ) 

#define IHTMLRuleStyle_get_backgroundPosition(This,p)	\
    ( (This)->lpVtbl -> get_backgroundPosition(This,p) ) 

#define IHTMLRuleStyle_put_backgroundPositionX(This,v)	\
    ( (This)->lpVtbl -> put_backgroundPositionX(This,v) ) 

#define IHTMLRuleStyle_get_backgroundPositionX(This,p)	\
    ( (This)->lpVtbl -> get_backgroundPositionX(This,p) ) 

#define IHTMLRuleStyle_put_backgroundPositionY(This,v)	\
    ( (This)->lpVtbl -> put_backgroundPositionY(This,v) ) 

#define IHTMLRuleStyle_get_backgroundPositionY(This,p)	\
    ( (This)->lpVtbl -> get_backgroundPositionY(This,p) ) 

#define IHTMLRuleStyle_put_wordSpacing(This,v)	\
    ( (This)->lpVtbl -> put_wordSpacing(This,v) ) 

#define IHTMLRuleStyle_get_wordSpacing(This,p)	\
    ( (This)->lpVtbl -> get_wordSpacing(This,p) ) 

#define IHTMLRuleStyle_put_letterSpacing(This,v)	\
    ( (This)->lpVtbl -> put_letterSpacing(This,v) ) 

#define IHTMLRuleStyle_get_letterSpacing(This,p)	\
    ( (This)->lpVtbl -> get_letterSpacing(This,p) ) 

#define IHTMLRuleStyle_put_textDecoration(This,v)	\
    ( (This)->lpVtbl -> put_textDecoration(This,v) ) 

#define IHTMLRuleStyle_get_textDecoration(This,p)	\
    ( (This)->lpVtbl -> get_textDecoration(This,p) ) 

#define IHTMLRuleStyle_put_textDecorationNone(This,v)	\
    ( (This)->lpVtbl -> put_textDecorationNone(This,v) ) 

#define IHTMLRuleStyle_get_textDecorationNone(This,p)	\
    ( (This)->lpVtbl -> get_textDecorationNone(This,p) ) 

#define IHTMLRuleStyle_put_textDecorationUnderline(This,v)	\
    ( (This)->lpVtbl -> put_textDecorationUnderline(This,v) ) 

#define IHTMLRuleStyle_get_textDecorationUnderline(This,p)	\
    ( (This)->lpVtbl -> get_textDecorationUnderline(This,p) ) 

#define IHTMLRuleStyle_put_textDecorationOverline(This,v)	\
    ( (This)->lpVtbl -> put_textDecorationOverline(This,v) ) 

#define IHTMLRuleStyle_get_textDecorationOverline(This,p)	\
    ( (This)->lpVtbl -> get_textDecorationOverline(This,p) ) 

#define IHTMLRuleStyle_put_textDecorationLineThrough(This,v)	\
    ( (This)->lpVtbl -> put_textDecorationLineThrough(This,v) ) 

#define IHTMLRuleStyle_get_textDecorationLineThrough(This,p)	\
    ( (This)->lpVtbl -> get_textDecorationLineThrough(This,p) ) 

#define IHTMLRuleStyle_put_textDecorationBlink(This,v)	\
    ( (This)->lpVtbl -> put_textDecorationBlink(This,v) ) 

#define IHTMLRuleStyle_get_textDecorationBlink(This,p)	\
    ( (This)->lpVtbl -> get_textDecorationBlink(This,p) ) 

#define IHTMLRuleStyle_put_verticalAlign(This,v)	\
    ( (This)->lpVtbl -> put_verticalAlign(This,v) ) 

#define IHTMLRuleStyle_get_verticalAlign(This,p)	\
    ( (This)->lpVtbl -> get_verticalAlign(This,p) ) 

#define IHTMLRuleStyle_put_textTransform(This,v)	\
    ( (This)->lpVtbl -> put_textTransform(This,v) ) 

#define IHTMLRuleStyle_get_textTransform(This,p)	\
    ( (This)->lpVtbl -> get_textTransform(This,p) ) 

#define IHTMLRuleStyle_put_textAlign(This,v)	\
    ( (This)->lpVtbl -> put_textAlign(This,v) ) 

#define IHTMLRuleStyle_get_textAlign(This,p)	\
    ( (This)->lpVtbl -> get_textAlign(This,p) ) 

#define IHTMLRuleStyle_put_textIndent(This,v)	\
    ( (This)->lpVtbl -> put_textIndent(This,v) ) 

#define IHTMLRuleStyle_get_textIndent(This,p)	\
    ( (This)->lpVtbl -> get_textIndent(This,p) ) 

#define IHTMLRuleStyle_put_lineHeight(This,v)	\
    ( (This)->lpVtbl -> put_lineHeight(This,v) ) 

#define IHTMLRuleStyle_get_lineHeight(This,p)	\
    ( (This)->lpVtbl -> get_lineHeight(This,p) ) 

#define IHTMLRuleStyle_put_marginTop(This,v)	\
    ( (This)->lpVtbl -> put_marginTop(This,v) ) 

#define IHTMLRuleStyle_get_marginTop(This,p)	\
    ( (This)->lpVtbl -> get_marginTop(This,p) ) 

#define IHTMLRuleStyle_put_marginRight(This,v)	\
    ( (This)->lpVtbl -> put_marginRight(This,v) ) 

#define IHTMLRuleStyle_get_marginRight(This,p)	\
    ( (This)->lpVtbl -> get_marginRight(This,p) ) 

#define IHTMLRuleStyle_put_marginBottom(This,v)	\
    ( (This)->lpVtbl -> put_marginBottom(This,v) ) 

#define IHTMLRuleStyle_get_marginBottom(This,p)	\
    ( (This)->lpVtbl -> get_marginBottom(This,p) ) 

#define IHTMLRuleStyle_put_marginLeft(This,v)	\
    ( (This)->lpVtbl -> put_marginLeft(This,v) ) 

#define IHTMLRuleStyle_get_marginLeft(This,p)	\
    ( (This)->lpVtbl -> get_marginLeft(This,p) ) 

#define IHTMLRuleStyle_put_margin(This,v)	\
    ( (This)->lpVtbl -> put_margin(This,v) ) 

#define IHTMLRuleStyle_get_margin(This,p)	\
    ( (This)->lpVtbl -> get_margin(This,p) ) 

#define IHTMLRuleStyle_put_paddingTop(This,v)	\
    ( (This)->lpVtbl -> put_paddingTop(This,v) ) 

#define IHTMLRuleStyle_get_paddingTop(This,p)	\
    ( (This)->lpVtbl -> get_paddingTop(This,p) ) 

#define IHTMLRuleStyle_put_paddingRight(This,v)	\
    ( (This)->lpVtbl -> put_paddingRight(This,v) ) 

#define IHTMLRuleStyle_get_paddingRight(This,p)	\
    ( (This)->lpVtbl -> get_paddingRight(This,p) ) 

#define IHTMLRuleStyle_put_paddingBottom(This,v)	\
    ( (This)->lpVtbl -> put_paddingBottom(This,v) ) 

#define IHTMLRuleStyle_get_paddingBottom(This,p)	\
    ( (This)->lpVtbl -> get_paddingBottom(This,p) ) 

#define IHTMLRuleStyle_put_paddingLeft(This,v)	\
    ( (This)->lpVtbl -> put_paddingLeft(This,v) ) 

#define IHTMLRuleStyle_get_paddingLeft(This,p)	\
    ( (This)->lpVtbl -> get_paddingLeft(This,p) ) 

#define IHTMLRuleStyle_put_padding(This,v)	\
    ( (This)->lpVtbl -> put_padding(This,v) ) 

#define IHTMLRuleStyle_get_padding(This,p)	\
    ( (This)->lpVtbl -> get_padding(This,p) ) 

#define IHTMLRuleStyle_put_border(This,v)	\
    ( (This)->lpVtbl -> put_border(This,v) ) 

#define IHTMLRuleStyle_get_border(This,p)	\
    ( (This)->lpVtbl -> get_border(This,p) ) 

#define IHTMLRuleStyle_put_borderTop(This,v)	\
    ( (This)->lpVtbl -> put_borderTop(This,v) ) 

#define IHTMLRuleStyle_get_borderTop(This,p)	\
    ( (This)->lpVtbl -> get_borderTop(This,p) ) 

#define IHTMLRuleStyle_put_borderRight(This,v)	\
    ( (This)->lpVtbl -> put_borderRight(This,v) ) 

#define IHTMLRuleStyle_get_borderRight(This,p)	\
    ( (This)->lpVtbl -> get_borderRight(This,p) ) 

#define IHTMLRuleStyle_put_borderBottom(This,v)	\
    ( (This)->lpVtbl -> put_borderBottom(This,v) ) 

#define IHTMLRuleStyle_get_borderBottom(This,p)	\
    ( (This)->lpVtbl -> get_borderBottom(This,p) ) 

#define IHTMLRuleStyle_put_borderLeft(This,v)	\
    ( (This)->lpVtbl -> put_borderLeft(This,v) ) 

#define IHTMLRuleStyle_get_borderLeft(This,p)	\
    ( (This)->lpVtbl -> get_borderLeft(This,p) ) 

#define IHTMLRuleStyle_put_borderColor(This,v)	\
    ( (This)->lpVtbl -> put_borderColor(This,v) ) 

#define IHTMLRuleStyle_get_borderColor(This,p)	\
    ( (This)->lpVtbl -> get_borderColor(This,p) ) 

#define IHTMLRuleStyle_put_borderTopColor(This,v)	\
    ( (This)->lpVtbl -> put_borderTopColor(This,v) ) 

#define IHTMLRuleStyle_get_borderTopColor(This,p)	\
    ( (This)->lpVtbl -> get_borderTopColor(This,p) ) 

#define IHTMLRuleStyle_put_borderRightColor(This,v)	\
    ( (This)->lpVtbl -> put_borderRightColor(This,v) ) 

#define IHTMLRuleStyle_get_borderRightColor(This,p)	\
    ( (This)->lpVtbl -> get_borderRightColor(This,p) ) 

#define IHTMLRuleStyle_put_borderBottomColor(This,v)	\
    ( (This)->lpVtbl -> put_borderBottomColor(This,v) ) 

#define IHTMLRuleStyle_get_borderBottomColor(This,p)	\
    ( (This)->lpVtbl -> get_borderBottomColor(This,p) ) 

#define IHTMLRuleStyle_put_borderLeftColor(This,v)	\
    ( (This)->lpVtbl -> put_borderLeftColor(This,v) ) 

#define IHTMLRuleStyle_get_borderLeftColor(This,p)	\
    ( (This)->lpVtbl -> get_borderLeftColor(This,p) ) 

#define IHTMLRuleStyle_put_borderWidth(This,v)	\
    ( (This)->lpVtbl -> put_borderWidth(This,v) ) 

#define IHTMLRuleStyle_get_borderWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderWidth(This,p) ) 

#define IHTMLRuleStyle_put_borderTopWidth(This,v)	\
    ( (This)->lpVtbl -> put_borderTopWidth(This,v) ) 

#define IHTMLRuleStyle_get_borderTopWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderTopWidth(This,p) ) 

#define IHTMLRuleStyle_put_borderRightWidth(This,v)	\
    ( (This)->lpVtbl -> put_borderRightWidth(This,v) ) 

#define IHTMLRuleStyle_get_borderRightWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderRightWidth(This,p) ) 

#define IHTMLRuleStyle_put_borderBottomWidth(This,v)	\
    ( (This)->lpVtbl -> put_borderBottomWidth(This,v) ) 

#define IHTMLRuleStyle_get_borderBottomWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderBottomWidth(This,p) ) 

#define IHTMLRuleStyle_put_borderLeftWidth(This,v)	\
    ( (This)->lpVtbl -> put_borderLeftWidth(This,v) ) 

#define IHTMLRuleStyle_get_borderLeftWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderLeftWidth(This,p) ) 

#define IHTMLRuleStyle_put_borderStyle(This,v)	\
    ( (This)->lpVtbl -> put_borderStyle(This,v) ) 

#define IHTMLRuleStyle_get_borderStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderStyle(This,p) ) 

#define IHTMLRuleStyle_put_borderTopStyle(This,v)	\
    ( (This)->lpVtbl -> put_borderTopStyle(This,v) ) 

#define IHTMLRuleStyle_get_borderTopStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderTopStyle(This,p) ) 

#define IHTMLRuleStyle_put_borderRightStyle(This,v)	\
    ( (This)->lpVtbl -> put_borderRightStyle(This,v) ) 

#define IHTMLRuleStyle_get_borderRightStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderRightStyle(This,p) ) 

#define IHTMLRuleStyle_put_borderBottomStyle(This,v)	\
    ( (This)->lpVtbl -> put_borderBottomStyle(This,v) ) 

#define IHTMLRuleStyle_get_borderBottomStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderBottomStyle(This,p) ) 

#define IHTMLRuleStyle_put_borderLeftStyle(This,v)	\
    ( (This)->lpVtbl -> put_borderLeftStyle(This,v) ) 

#define IHTMLRuleStyle_get_borderLeftStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderLeftStyle(This,p) ) 

#define IHTMLRuleStyle_put_width(This,v)	\
    ( (This)->lpVtbl -> put_width(This,v) ) 

#define IHTMLRuleStyle_get_width(This,p)	\
    ( (This)->lpVtbl -> get_width(This,p) ) 

#define IHTMLRuleStyle_put_height(This,v)	\
    ( (This)->lpVtbl -> put_height(This,v) ) 

#define IHTMLRuleStyle_get_height(This,p)	\
    ( (This)->lpVtbl -> get_height(This,p) ) 

#define IHTMLRuleStyle_put_styleFloat(This,v)	\
    ( (This)->lpVtbl -> put_styleFloat(This,v) ) 

#define IHTMLRuleStyle_get_styleFloat(This,p)	\
    ( (This)->lpVtbl -> get_styleFloat(This,p) ) 

#define IHTMLRuleStyle_put_clear(This,v)	\
    ( (This)->lpVtbl -> put_clear(This,v) ) 

#define IHTMLRuleStyle_get_clear(This,p)	\
    ( (This)->lpVtbl -> get_clear(This,p) ) 

#define IHTMLRuleStyle_put_display(This,v)	\
    ( (This)->lpVtbl -> put_display(This,v) ) 

#define IHTMLRuleStyle_get_display(This,p)	\
    ( (This)->lpVtbl -> get_display(This,p) ) 

#define IHTMLRuleStyle_put_visibility(This,v)	\
    ( (This)->lpVtbl -> put_visibility(This,v) ) 

#define IHTMLRuleStyle_get_visibility(This,p)	\
    ( (This)->lpVtbl -> get_visibility(This,p) ) 

#define IHTMLRuleStyle_put_listStyleType(This,v)	\
    ( (This)->lpVtbl -> put_listStyleType(This,v) ) 

#define IHTMLRuleStyle_get_listStyleType(This,p)	\
    ( (This)->lpVtbl -> get_listStyleType(This,p) ) 

#define IHTMLRuleStyle_put_listStylePosition(This,v)	\
    ( (This)->lpVtbl -> put_listStylePosition(This,v) ) 

#define IHTMLRuleStyle_get_listStylePosition(This,p)	\
    ( (This)->lpVtbl -> get_listStylePosition(This,p) ) 

#define IHTMLRuleStyle_put_listStyleImage(This,v)	\
    ( (This)->lpVtbl -> put_listStyleImage(This,v) ) 

#define IHTMLRuleStyle_get_listStyleImage(This,p)	\
    ( (This)->lpVtbl -> get_listStyleImage(This,p) ) 

#define IHTMLRuleStyle_put_listStyle(This,v)	\
    ( (This)->lpVtbl -> put_listStyle(This,v) ) 

#define IHTMLRuleStyle_get_listStyle(This,p)	\
    ( (This)->lpVtbl -> get_listStyle(This,p) ) 

#define IHTMLRuleStyle_put_whiteSpace(This,v)	\
    ( (This)->lpVtbl -> put_whiteSpace(This,v) ) 

#define IHTMLRuleStyle_get_whiteSpace(This,p)	\
    ( (This)->lpVtbl -> get_whiteSpace(This,p) ) 

#define IHTMLRuleStyle_put_top(This,v)	\
    ( (This)->lpVtbl -> put_top(This,v) ) 

#define IHTMLRuleStyle_get_top(This,p)	\
    ( (This)->lpVtbl -> get_top(This,p) ) 

#define IHTMLRuleStyle_put_left(This,v)	\
    ( (This)->lpVtbl -> put_left(This,v) ) 

#define IHTMLRuleStyle_get_left(This,p)	\
    ( (This)->lpVtbl -> get_left(This,p) ) 

#define IHTMLRuleStyle_get_position(This,p)	\
    ( (This)->lpVtbl -> get_position(This,p) ) 

#define IHTMLRuleStyle_put_zIndex(This,v)	\
    ( (This)->lpVtbl -> put_zIndex(This,v) ) 

#define IHTMLRuleStyle_get_zIndex(This,p)	\
    ( (This)->lpVtbl -> get_zIndex(This,p) ) 

#define IHTMLRuleStyle_put_overflow(This,v)	\
    ( (This)->lpVtbl -> put_overflow(This,v) ) 

#define IHTMLRuleStyle_get_overflow(This,p)	\
    ( (This)->lpVtbl -> get_overflow(This,p) ) 

#define IHTMLRuleStyle_put_pageBreakBefore(This,v)	\
    ( (This)->lpVtbl -> put_pageBreakBefore(This,v) ) 

#define IHTMLRuleStyle_get_pageBreakBefore(This,p)	\
    ( (This)->lpVtbl -> get_pageBreakBefore(This,p) ) 

#define IHTMLRuleStyle_put_pageBreakAfter(This,v)	\
    ( (This)->lpVtbl -> put_pageBreakAfter(This,v) ) 

#define IHTMLRuleStyle_get_pageBreakAfter(This,p)	\
    ( (This)->lpVtbl -> get_pageBreakAfter(This,p) ) 

#define IHTMLRuleStyle_put_cssText(This,v)	\
    ( (This)->lpVtbl -> put_cssText(This,v) ) 

#define IHTMLRuleStyle_get_cssText(This,p)	\
    ( (This)->lpVtbl -> get_cssText(This,p) ) 

#define IHTMLRuleStyle_put_cursor(This,v)	\
    ( (This)->lpVtbl -> put_cursor(This,v) ) 

#define IHTMLRuleStyle_get_cursor(This,p)	\
    ( (This)->lpVtbl -> get_cursor(This,p) ) 

#define IHTMLRuleStyle_put_clip(This,v)	\
    ( (This)->lpVtbl -> put_clip(This,v) ) 

#define IHTMLRuleStyle_get_clip(This,p)	\
    ( (This)->lpVtbl -> get_clip(This,p) ) 

#define IHTMLRuleStyle_put_filter(This,v)	\
    ( (This)->lpVtbl -> put_filter(This,v) ) 

#define IHTMLRuleStyle_get_filter(This,p)	\
    ( (This)->lpVtbl -> get_filter(This,p) ) 

#define IHTMLRuleStyle_setAttribute(This,strAttributeName,AttributeValue,lFlags)	\
    ( (This)->lpVtbl -> setAttribute(This,strAttributeName,AttributeValue,lFlags) ) 

#define IHTMLRuleStyle_getAttribute(This,strAttributeName,lFlags,AttributeValue)	\
    ( (This)->lpVtbl -> getAttribute(This,strAttributeName,lFlags,AttributeValue) ) 

#define IHTMLRuleStyle_removeAttribute(This,strAttributeName,lFlags,pfSuccess)	\
    ( (This)->lpVtbl -> removeAttribute(This,strAttributeName,lFlags,pfSuccess) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_styleFloat_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_styleFloat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_clear_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_clear_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_display_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_display_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_visibility_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_visibility_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_listStyleType_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_listStyleType_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_listStylePosition_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_listStylePosition_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_listStyleImage_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_listStyleImage_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_listStyle_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_listStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_listStyle_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_listStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_whiteSpace_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_whiteSpace_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_top_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_top_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__out VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_left_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_left_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__out VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_position_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_zIndex_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_zIndex_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__out VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_overflow_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_overflow_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_pageBreakBefore_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_pageBreakBefore_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_pageBreakAfter_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_pageBreakAfter_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_cssText_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_cssText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_cssText_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_cssText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_cursor_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_cursor_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_clip_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_clip_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_filter_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_filter_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [out][retval] */ __RPC__deref_out_opt BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_setAttribute_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR strAttributeName,
    /* [in] */ VARIANT AttributeValue,
    /* [in][defaultvalue] */ LONG lFlags);


void __RPC_STUB IHTMLRuleStyle_setAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_getAttribute_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ __RPC__out VARIANT *AttributeValue);


void __RPC_STUB IHTMLRuleStyle_getAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_removeAttribute_Proxy( 
    __RPC__in IHTMLRuleStyle * This,
    /* [in] */ __RPC__in BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess);


void __RPC_STUB IHTMLRuleStyle_removeAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRuleStyle_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle2_INTERFACE_DEFINED__
#define __IHTMLRuleStyle2_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4ac-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_tableLayout( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_tableLayout( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderCollapse( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderCollapse( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_direction( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_direction( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_behavior( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_behavior( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_position( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_unicodeBidi( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_unicodeBidi( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_bottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_bottom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_right( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_right( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelBottom( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelBottom( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelRight( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelRight( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posBottom( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posBottom( 
            /* [out][retval] */ __RPC__out float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posRight( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posRight( 
            /* [out][retval] */ __RPC__out float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_imeMode( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeMode( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyAlign( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyAlign( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyPosition( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyPosition( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyOverhang( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyOverhang( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridChar( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridChar( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridLine( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridLine( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridMode( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridMode( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridType( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridType( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGrid( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGrid( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAutospace( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAutospace( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordBreak( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordBreak( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lineBreak( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineBreak( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textJustify( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustify( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textJustifyTrim( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustifyTrim( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textKashida( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashida( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflowX( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowX( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflowY( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowY( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_accelerator( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_accelerator( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyle2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLRuleStyle2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLRuleStyle2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_tableLayout )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_tableLayout )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderCollapse )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderCollapse )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_direction )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_direction )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_behavior )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_behavior )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_position )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_position )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_unicodeBidi )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_unicodeBidi )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_bottom )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_bottom )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_right )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_right )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelBottom )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelBottom )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelRight )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelRight )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posBottom )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posBottom )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__out float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posRight )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posRight )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__out float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_imeMode )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_imeMode )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rubyAlign )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyAlign )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rubyPosition )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyPosition )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rubyOverhang )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyOverhang )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridChar )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridChar )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridLine )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridLine )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridMode )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridMode )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridType )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridType )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGrid )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGrid )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textAutospace )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAutospace )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_wordBreak )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordBreak )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_lineBreak )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lineBreak )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textJustify )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textJustify )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textJustifyTrim )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textJustifyTrim )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textKashida )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textKashida )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_overflowX )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflowX )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_overflowY )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflowY )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_accelerator )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_accelerator )( 
            __RPC__in IHTMLRuleStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLRuleStyle2Vtbl;

    interface IHTMLRuleStyle2
    {
        CONST_VTBL struct IHTMLRuleStyle2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLRuleStyle2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLRuleStyle2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLRuleStyle2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLRuleStyle2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLRuleStyle2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLRuleStyle2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLRuleStyle2_put_tableLayout(This,v)	\
    ( (This)->lpVtbl -> put_tableLayout(This,v) ) 

#define IHTMLRuleStyle2_get_tableLayout(This,p)	\
    ( (This)->lpVtbl -> get_tableLayout(This,p) ) 

#define IHTMLRuleStyle2_put_borderCollapse(This,v)	\
    ( (This)->lpVtbl -> put_borderCollapse(This,v) ) 

#define IHTMLRuleStyle2_get_borderCollapse(This,p)	\
    ( (This)->lpVtbl -> get_borderCollapse(This,p) ) 

#define IHTMLRuleStyle2_put_direction(This,v)	\
    ( (This)->lpVtbl -> put_direction(This,v) ) 

#define IHTMLRuleStyle2_get_direction(This,p)	\
    ( (This)->lpVtbl -> get_direction(This,p) ) 

#define IHTMLRuleStyle2_put_behavior(This,v)	\
    ( (This)->lpVtbl -> put_behavior(This,v) ) 

#define IHTMLRuleStyle2_get_behavior(This,p)	\
    ( (This)->lpVtbl -> get_behavior(This,p) ) 

#define IHTMLRuleStyle2_put_position(This,v)	\
    ( (This)->lpVtbl -> put_position(This,v) ) 

#define IHTMLRuleStyle2_get_position(This,p)	\
    ( (This)->lpVtbl -> get_position(This,p) ) 

#define IHTMLRuleStyle2_put_unicodeBidi(This,v)	\
    ( (This)->lpVtbl -> put_unicodeBidi(This,v) ) 

#define IHTMLRuleStyle2_get_unicodeBidi(This,p)	\
    ( (This)->lpVtbl -> get_unicodeBidi(This,p) ) 

#define IHTMLRuleStyle2_put_bottom(This,v)	\
    ( (This)->lpVtbl -> put_bottom(This,v) ) 

#define IHTMLRuleStyle2_get_bottom(This,p)	\
    ( (This)->lpVtbl -> get_bottom(This,p) ) 

#define IHTMLRuleStyle2_put_right(This,v)	\
    ( (This)->lpVtbl -> put_right(This,v) ) 

#define IHTMLRuleStyle2_get_right(This,p)	\
    ( (This)->lpVtbl -> get_right(This,p) ) 

#define IHTMLRuleStyle2_put_pixelBottom(This,v)	\
    ( (This)->lpVtbl -> put_pixelBottom(This,v) ) 

#define IHTMLRuleStyle2_get_pixelBottom(This,p)	\
    ( (This)->lpVtbl -> get_pixelBottom(This,p) ) 

#define IHTMLRuleStyle2_put_pixelRight(This,v)	\
    ( (This)->lpVtbl -> put_pixelRight(This,v) ) 

#define IHTMLRuleStyle2_get_pixelRight(This,p)	\
    ( (This)->lpVtbl -> get_pixelRight(This,p) ) 

#define IHTMLRuleStyle2_put_posBottom(This,v)	\
    ( (This)->lpVtbl -> put_posBottom(This,v) ) 

#define IHTMLRuleStyle2_get_posBottom(This,p)	\
    ( (This)->lpVtbl -> get_posBottom(This,p) ) 

#define IHTMLRuleStyle2_put_posRight(This,v)	\
    ( (This)->lpVtbl -> put_posRight(This,v) ) 

#define IHTMLRuleStyle2_get_posRight(This,p)	\
    ( (This)->lpVtbl -> get_posRight(This,p) ) 

#define IHTMLRuleStyle2_put_imeMode(This,v)	\
    ( (This)->lpVtbl -> put_imeMode(This,v) ) 

#define IHTMLRuleStyle2_get_imeMode(This,p)	\
    ( (This)->lpVtbl -> get_imeMode(This,p) ) 

#define IHTMLRuleStyle2_put_rubyAlign(This,v)	\
    ( (This)->lpVtbl -> put_rubyAlign(This,v) ) 

#define IHTMLRuleStyle2_get_rubyAlign(This,p)	\
    ( (This)->lpVtbl -> get_rubyAlign(This,p) ) 

#define IHTMLRuleStyle2_put_rubyPosition(This,v)	\
    ( (This)->lpVtbl -> put_rubyPosition(This,v) ) 

#define IHTMLRuleStyle2_get_rubyPosition(This,p)	\
    ( (This)->lpVtbl -> get_rubyPosition(This,p) ) 

#define IHTMLRuleStyle2_put_rubyOverhang(This,v)	\
    ( (This)->lpVtbl -> put_rubyOverhang(This,v) ) 

#define IHTMLRuleStyle2_get_rubyOverhang(This,p)	\
    ( (This)->lpVtbl -> get_rubyOverhang(This,p) ) 

#define IHTMLRuleStyle2_put_layoutGridChar(This,v)	\
    ( (This)->lpVtbl -> put_layoutGridChar(This,v) ) 

#define IHTMLRuleStyle2_get_layoutGridChar(This,p)	\
    ( (This)->lpVtbl -> get_layoutGridChar(This,p) ) 

#define IHTMLRuleStyle2_put_layoutGridLine(This,v)	\
    ( (This)->lpVtbl -> put_layoutGridLine(This,v) ) 

#define IHTMLRuleStyle2_get_layoutGridLine(This,p)	\
    ( (This)->lpVtbl -> get_layoutGridLine(This,p) ) 

#define IHTMLRuleStyle2_put_layoutGridMode(This,v)	\
    ( (This)->lpVtbl -> put_layoutGridMode(This,v) ) 

#define IHTMLRuleStyle2_get_layoutGridMode(This,p)	\
    ( (This)->lpVtbl -> get_layoutGridMode(This,p) ) 

#define IHTMLRuleStyle2_put_layoutGridType(This,v)	\
    ( (This)->lpVtbl -> put_layoutGridType(This,v) ) 

#define IHTMLRuleStyle2_get_layoutGridType(This,p)	\
    ( (This)->lpVtbl -> get_layoutGridType(This,p) ) 

#define IHTMLRuleStyle2_put_layoutGrid(This,v)	\
    ( (This)->lpVtbl -> put_layoutGrid(This,v) ) 

#define IHTMLRuleStyle2_get_layoutGrid(This,p)	\
    ( (This)->lpVtbl -> get_layoutGrid(This,p) ) 

#define IHTMLRuleStyle2_put_textAutospace(This,v)	\
    ( (This)->lpVtbl -> put_textAutospace(This,v) ) 

#define IHTMLRuleStyle2_get_textAutospace(This,p)	\
    ( (This)->lpVtbl -> get_textAutospace(This,p) ) 

#define IHTMLRuleStyle2_put_wordBreak(This,v)	\
    ( (This)->lpVtbl -> put_wordBreak(This,v) ) 

#define IHTMLRuleStyle2_get_wordBreak(This,p)	\
    ( (This)->lpVtbl -> get_wordBreak(This,p) ) 

#define IHTMLRuleStyle2_put_lineBreak(This,v)	\
    ( (This)->lpVtbl -> put_lineBreak(This,v) ) 

#define IHTMLRuleStyle2_get_lineBreak(This,p)	\
    ( (This)->lpVtbl -> get_lineBreak(This,p) ) 

#define IHTMLRuleStyle2_put_textJustify(This,v)	\
    ( (This)->lpVtbl -> put_textJustify(This,v) ) 

#define IHTMLRuleStyle2_get_textJustify(This,p)	\
    ( (This)->lpVtbl -> get_textJustify(This,p) ) 

#define IHTMLRuleStyle2_put_textJustifyTrim(This,v)	\
    ( (This)->lpVtbl -> put_textJustifyTrim(This,v) ) 

#define IHTMLRuleStyle2_get_textJustifyTrim(This,p)	\
    ( (This)->lpVtbl -> get_textJustifyTrim(This,p) ) 

#define IHTMLRuleStyle2_put_textKashida(This,v)	\
    ( (This)->lpVtbl -> put_textKashida(This,v) ) 

#define IHTMLRuleStyle2_get_textKashida(This,p)	\
    ( (This)->lpVtbl -> get_textKashida(This,p) ) 

#define IHTMLRuleStyle2_put_overflowX(This,v)	\
    ( (This)->lpVtbl -> put_overflowX(This,v) ) 

#define IHTMLRuleStyle2_get_overflowX(This,p)	\
    ( (This)->lpVtbl -> get_overflowX(This,p) ) 

#define IHTMLRuleStyle2_put_overflowY(This,v)	\
    ( (This)->lpVtbl -> put_overflowY(This,v) ) 

#define IHTMLRuleStyle2_get_overflowY(This,p)	\
    ( (This)->lpVtbl -> get_overflowY(This,p) ) 

#define IHTMLRuleStyle2_put_accelerator(This,v)	\
    ( (This)->lpVtbl -> put_accelerator(This,v) ) 

#define IHTMLRuleStyle2_get_accelerator(This,p)	\
    ( (This)->lpVtbl -> get_accelerator(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLRuleStyle2_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle3_INTERFACE_DEFINED__
#define __IHTMLRuleStyle3_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f657-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutFlow( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutFlow( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_zoom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zoom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordWrap( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordWrap( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textUnderlinePosition( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textUnderlinePosition( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarBaseColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarBaseColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarFaceColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarFaceColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbar3dLightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbar3dLightColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarShadowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarShadowColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarHighlightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarHighlightColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarDarkShadowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarDarkShadowColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarArrowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarArrowColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarTrackColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarTrackColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_writingMode( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_writingMode( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAlignLast( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlignLast( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textKashidaSpace( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashidaSpace( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyle3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLRuleStyle3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLRuleStyle3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutFlow )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutFlow )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_zoom )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_zoom )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_wordWrap )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordWrap )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textUnderlinePosition )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textUnderlinePosition )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarBaseColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarBaseColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarFaceColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarFaceColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbar3dLightColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbar3dLightColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarShadowColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarShadowColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarHighlightColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarHighlightColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarDarkShadowColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarDarkShadowColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarArrowColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarArrowColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarTrackColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarTrackColor )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_writingMode )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_writingMode )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textAlignLast )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAlignLast )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textKashidaSpace )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textKashidaSpace )( 
            __RPC__in IHTMLRuleStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        END_INTERFACE
    } IHTMLRuleStyle3Vtbl;

    interface IHTMLRuleStyle3
    {
        CONST_VTBL struct IHTMLRuleStyle3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLRuleStyle3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLRuleStyle3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLRuleStyle3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLRuleStyle3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLRuleStyle3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLRuleStyle3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLRuleStyle3_put_layoutFlow(This,v)	\
    ( (This)->lpVtbl -> put_layoutFlow(This,v) ) 

#define IHTMLRuleStyle3_get_layoutFlow(This,p)	\
    ( (This)->lpVtbl -> get_layoutFlow(This,p) ) 

#define IHTMLRuleStyle3_put_zoom(This,v)	\
    ( (This)->lpVtbl -> put_zoom(This,v) ) 

#define IHTMLRuleStyle3_get_zoom(This,p)	\
    ( (This)->lpVtbl -> get_zoom(This,p) ) 

#define IHTMLRuleStyle3_put_wordWrap(This,v)	\
    ( (This)->lpVtbl -> put_wordWrap(This,v) ) 

#define IHTMLRuleStyle3_get_wordWrap(This,p)	\
    ( (This)->lpVtbl -> get_wordWrap(This,p) ) 

#define IHTMLRuleStyle3_put_textUnderlinePosition(This,v)	\
    ( (This)->lpVtbl -> put_textUnderlinePosition(This,v) ) 

#define IHTMLRuleStyle3_get_textUnderlinePosition(This,p)	\
    ( (This)->lpVtbl -> get_textUnderlinePosition(This,p) ) 

#define IHTMLRuleStyle3_put_scrollbarBaseColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarBaseColor(This,v) ) 

#define IHTMLRuleStyle3_get_scrollbarBaseColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarBaseColor(This,p) ) 

#define IHTMLRuleStyle3_put_scrollbarFaceColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarFaceColor(This,v) ) 

#define IHTMLRuleStyle3_get_scrollbarFaceColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarFaceColor(This,p) ) 

#define IHTMLRuleStyle3_put_scrollbar3dLightColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbar3dLightColor(This,v) ) 

#define IHTMLRuleStyle3_get_scrollbar3dLightColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbar3dLightColor(This,p) ) 

#define IHTMLRuleStyle3_put_scrollbarShadowColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarShadowColor(This,v) ) 

#define IHTMLRuleStyle3_get_scrollbarShadowColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarShadowColor(This,p) ) 

#define IHTMLRuleStyle3_put_scrollbarHighlightColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarHighlightColor(This,v) ) 

#define IHTMLRuleStyle3_get_scrollbarHighlightColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarHighlightColor(This,p) ) 

#define IHTMLRuleStyle3_put_scrollbarDarkShadowColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarDarkShadowColor(This,v) ) 

#define IHTMLRuleStyle3_get_scrollbarDarkShadowColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarDarkShadowColor(This,p) ) 

#define IHTMLRuleStyle3_put_scrollbarArrowColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarArrowColor(This,v) ) 

#define IHTMLRuleStyle3_get_scrollbarArrowColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarArrowColor(This,p) ) 

#define IHTMLRuleStyle3_put_scrollbarTrackColor(This,v)	\
    ( (This)->lpVtbl -> put_scrollbarTrackColor(This,v) ) 

#define IHTMLRuleStyle3_get_scrollbarTrackColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarTrackColor(This,p) ) 

#define IHTMLRuleStyle3_put_writingMode(This,v)	\
    ( (This)->lpVtbl -> put_writingMode(This,v) ) 

#define IHTMLRuleStyle3_get_writingMode(This,p)	\
    ( (This)->lpVtbl -> get_writingMode(This,p) ) 

#define IHTMLRuleStyle3_put_textAlignLast(This,v)	\
    ( (This)->lpVtbl -> put_textAlignLast(This,v) ) 

#define IHTMLRuleStyle3_get_textAlignLast(This,p)	\
    ( (This)->lpVtbl -> get_textAlignLast(This,p) ) 

#define IHTMLRuleStyle3_put_textKashidaSpace(This,v)	\
    ( (This)->lpVtbl -> put_textKashidaSpace(This,v) ) 

#define IHTMLRuleStyle3_get_textKashidaSpace(This,p)	\
    ( (This)->lpVtbl -> get_textKashidaSpace(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLRuleStyle3_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle4_INTERFACE_DEFINED__
#define __IHTMLRuleStyle4_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f817-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle4 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textOverflow( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textOverflow( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_minHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minHeight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyle4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLRuleStyle4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLRuleStyle4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLRuleStyle4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLRuleStyle4 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLRuleStyle4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLRuleStyle4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRuleStyle4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textOverflow )( 
            __RPC__in IHTMLRuleStyle4 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textOverflow )( 
            __RPC__in IHTMLRuleStyle4 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_minHeight )( 
            __RPC__in IHTMLRuleStyle4 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_minHeight )( 
            __RPC__in IHTMLRuleStyle4 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        END_INTERFACE
    } IHTMLRuleStyle4Vtbl;

    interface IHTMLRuleStyle4
    {
        CONST_VTBL struct IHTMLRuleStyle4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLRuleStyle4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLRuleStyle4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLRuleStyle4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLRuleStyle4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLRuleStyle4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLRuleStyle4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLRuleStyle4_put_textOverflow(This,v)	\
    ( (This)->lpVtbl -> put_textOverflow(This,v) ) 

#define IHTMLRuleStyle4_get_textOverflow(This,p)	\
    ( (This)->lpVtbl -> get_textOverflow(This,p) ) 

#define IHTMLRuleStyle4_put_minHeight(This,v)	\
    ( (This)->lpVtbl -> put_minHeight(This,v) ) 

#define IHTMLRuleStyle4_get_minHeight(This,p)	\
    ( (This)->lpVtbl -> get_minHeight(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLRuleStyle4_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle5_INTERFACE_DEFINED__
#define __IHTMLRuleStyle5_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle5 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f335-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle5 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_msInterpolationMode( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_msInterpolationMode( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_maxHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxHeight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_minWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_maxWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyle5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLRuleStyle5 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLRuleStyle5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLRuleStyle5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLRuleStyle5 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLRuleStyle5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLRuleStyle5 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRuleStyle5 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_msInterpolationMode )( 
            __RPC__in IHTMLRuleStyle5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_msInterpolationMode )( 
            __RPC__in IHTMLRuleStyle5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_maxHeight )( 
            __RPC__in IHTMLRuleStyle5 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_maxHeight )( 
            __RPC__in IHTMLRuleStyle5 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_minWidth )( 
            __RPC__in IHTMLRuleStyle5 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_minWidth )( 
            __RPC__in IHTMLRuleStyle5 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_maxWidth )( 
            __RPC__in IHTMLRuleStyle5 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_maxWidth )( 
            __RPC__in IHTMLRuleStyle5 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        END_INTERFACE
    } IHTMLRuleStyle5Vtbl;

    interface IHTMLRuleStyle5
    {
        CONST_VTBL struct IHTMLRuleStyle5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLRuleStyle5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLRuleStyle5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLRuleStyle5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLRuleStyle5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLRuleStyle5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLRuleStyle5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLRuleStyle5_put_msInterpolationMode(This,v)	\
    ( (This)->lpVtbl -> put_msInterpolationMode(This,v) ) 

#define IHTMLRuleStyle5_get_msInterpolationMode(This,p)	\
    ( (This)->lpVtbl -> get_msInterpolationMode(This,p) ) 

#define IHTMLRuleStyle5_put_maxHeight(This,v)	\
    ( (This)->lpVtbl -> put_maxHeight(This,v) ) 

#define IHTMLRuleStyle5_get_maxHeight(This,p)	\
    ( (This)->lpVtbl -> get_maxHeight(This,p) ) 

#define IHTMLRuleStyle5_put_minWidth(This,v)	\
    ( (This)->lpVtbl -> put_minWidth(This,v) ) 

#define IHTMLRuleStyle5_get_minWidth(This,p)	\
    ( (This)->lpVtbl -> get_minWidth(This,p) ) 

#define IHTMLRuleStyle5_put_maxWidth(This,v)	\
    ( (This)->lpVtbl -> put_maxWidth(This,v) ) 

#define IHTMLRuleStyle5_get_maxWidth(This,p)	\
    ( (This)->lpVtbl -> get_maxWidth(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLRuleStyle5_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle6_INTERFACE_DEFINED__
#define __IHTMLRuleStyle6_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle6 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle6;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("30510471-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle6 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_content( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_content( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_captionSide( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_captionSide( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_counterIncrement( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_counterIncrement( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_counterReset( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_counterReset( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_outline( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_outline( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_outlineWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_outlineWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_outlineStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_outlineStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_outlineColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_outlineColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_boxSizing( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_boxSizing( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderSpacing( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderSpacing( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_orphans( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_orphans( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_widows( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_widows( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakInside( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakInside( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_emptyCells( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_emptyCells( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_msBlockProgression( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_msBlockProgression( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_quotes( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_quotes( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyle6Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLRuleStyle6 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLRuleStyle6 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRuleStyle6 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_content )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_content )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_captionSide )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_captionSide )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_counterIncrement )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_counterIncrement )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_counterReset )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_counterReset )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_outline )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outline )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_outlineWidth )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outlineWidth )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_outlineStyle )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outlineStyle )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_outlineColor )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outlineColor )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_boxSizing )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_boxSizing )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderSpacing )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderSpacing )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_orphans )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_orphans )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_widows )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_widows )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pageBreakInside )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakInside )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_emptyCells )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_emptyCells )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_msBlockProgression )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_msBlockProgression )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_quotes )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_quotes )( 
            __RPC__in IHTMLRuleStyle6 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLRuleStyle6Vtbl;

    interface IHTMLRuleStyle6
    {
        CONST_VTBL struct IHTMLRuleStyle6Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle6_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLRuleStyle6_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLRuleStyle6_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLRuleStyle6_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLRuleStyle6_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLRuleStyle6_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLRuleStyle6_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLRuleStyle6_put_content(This,v)	\
    ( (This)->lpVtbl -> put_content(This,v) ) 

#define IHTMLRuleStyle6_get_content(This,p)	\
    ( (This)->lpVtbl -> get_content(This,p) ) 

#define IHTMLRuleStyle6_put_captionSide(This,v)	\
    ( (This)->lpVtbl -> put_captionSide(This,v) ) 

#define IHTMLRuleStyle6_get_captionSide(This,p)	\
    ( (This)->lpVtbl -> get_captionSide(This,p) ) 

#define IHTMLRuleStyle6_put_counterIncrement(This,v)	\
    ( (This)->lpVtbl -> put_counterIncrement(This,v) ) 

#define IHTMLRuleStyle6_get_counterIncrement(This,p)	\
    ( (This)->lpVtbl -> get_counterIncrement(This,p) ) 

#define IHTMLRuleStyle6_put_counterReset(This,v)	\
    ( (This)->lpVtbl -> put_counterReset(This,v) ) 

#define IHTMLRuleStyle6_get_counterReset(This,p)	\
    ( (This)->lpVtbl -> get_counterReset(This,p) ) 

#define IHTMLRuleStyle6_put_outline(This,v)	\
    ( (This)->lpVtbl -> put_outline(This,v) ) 

#define IHTMLRuleStyle6_get_outline(This,p)	\
    ( (This)->lpVtbl -> get_outline(This,p) ) 

#define IHTMLRuleStyle6_put_outlineWidth(This,v)	\
    ( (This)->lpVtbl -> put_outlineWidth(This,v) ) 

#define IHTMLRuleStyle6_get_outlineWidth(This,p)	\
    ( (This)->lpVtbl -> get_outlineWidth(This,p) ) 

#define IHTMLRuleStyle6_put_outlineStyle(This,v)	\
    ( (This)->lpVtbl -> put_outlineStyle(This,v) ) 

#define IHTMLRuleStyle6_get_outlineStyle(This,p)	\
    ( (This)->lpVtbl -> get_outlineStyle(This,p) ) 

#define IHTMLRuleStyle6_put_outlineColor(This,v)	\
    ( (This)->lpVtbl -> put_outlineColor(This,v) ) 

#define IHTMLRuleStyle6_get_outlineColor(This,p)	\
    ( (This)->lpVtbl -> get_outlineColor(This,p) ) 

#define IHTMLRuleStyle6_put_boxSizing(This,v)	\
    ( (This)->lpVtbl -> put_boxSizing(This,v) ) 

#define IHTMLRuleStyle6_get_boxSizing(This,p)	\
    ( (This)->lpVtbl -> get_boxSizing(This,p) ) 

#define IHTMLRuleStyle6_put_borderSpacing(This,v)	\
    ( (This)->lpVtbl -> put_borderSpacing(This,v) ) 

#define IHTMLRuleStyle6_get_borderSpacing(This,p)	\
    ( (This)->lpVtbl -> get_borderSpacing(This,p) ) 

#define IHTMLRuleStyle6_put_orphans(This,v)	\
    ( (This)->lpVtbl -> put_orphans(This,v) ) 

#define IHTMLRuleStyle6_get_orphans(This,p)	\
    ( (This)->lpVtbl -> get_orphans(This,p) ) 

#define IHTMLRuleStyle6_put_widows(This,v)	\
    ( (This)->lpVtbl -> put_widows(This,v) ) 

#define IHTMLRuleStyle6_get_widows(This,p)	\
    ( (This)->lpVtbl -> get_widows(This,p) ) 

#define IHTMLRuleStyle6_put_pageBreakInside(This,v)	\
    ( (This)->lpVtbl -> put_pageBreakInside(This,v) ) 

#define IHTMLRuleStyle6_get_pageBreakInside(This,p)	\
    ( (This)->lpVtbl -> get_pageBreakInside(This,p) ) 

#define IHTMLRuleStyle6_put_emptyCells(This,v)	\
    ( (This)->lpVtbl -> put_emptyCells(This,v) ) 

#define IHTMLRuleStyle6_get_emptyCells(This,p)	\
    ( (This)->lpVtbl -> get_emptyCells(This,p) ) 

#define IHTMLRuleStyle6_put_msBlockProgression(This,v)	\
    ( (This)->lpVtbl -> put_msBlockProgression(This,v) ) 

#define IHTMLRuleStyle6_get_msBlockProgression(This,p)	\
    ( (This)->lpVtbl -> get_msBlockProgression(This,p) ) 

#define IHTMLRuleStyle6_put_quotes(This,v)	\
    ( (This)->lpVtbl -> put_quotes(This,v) ) 

#define IHTMLRuleStyle6_get_quotes(This,p)	\
    ( (This)->lpVtbl -> get_quotes(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLRuleStyle6_INTERFACE_DEFINED__ */


#ifndef __DispHTMLStyle_DISPINTERFACE_DEFINED__
#define __DispHTMLStyle_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLStyle */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f55a-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLStyle : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLStyle * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLStyleVtbl;

    interface DispHTMLStyle
    {
        CONST_VTBL struct DispHTMLStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLStyle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLStyle_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f285-98b5-11cf-bb82-00aa00bdce0b")
HTMLStyle;
#endif

#ifndef __DispHTMLRuleStyle_DISPINTERFACE_DEFINED__
#define __DispHTMLRuleStyle_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLRuleStyle */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLRuleStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f55c-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLRuleStyle : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLRuleStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLRuleStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLRuleStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLRuleStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLRuleStyle * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLRuleStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLRuleStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLRuleStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLRuleStyleVtbl;

    interface DispHTMLRuleStyle
    {
        CONST_VTBL struct DispHTMLRuleStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLRuleStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLRuleStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLRuleStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLRuleStyle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLRuleStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLRuleStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLRuleStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLRuleStyle_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLRuleStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3d0-98b5-11cf-bb82-00aa00bdce0b")
HTMLRuleStyle;
#endif

#ifndef __IHTMLRenderStyle_INTERFACE_DEFINED__
#define __IHTMLRenderStyle_INTERFACE_DEFINED__

/* interface IHTMLRenderStyle */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRenderStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f6ae-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRenderStyle : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textLineThroughStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textLineThroughStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textUnderlineStyle( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textUnderlineStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textEffect( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textEffect( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textBackgroundColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textBackgroundColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_renderingPriority( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_renderingPriority( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_defaultTextSelection( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_defaultTextSelection( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecoration( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecoration( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRenderStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLRenderStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLRenderStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRenderStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textLineThroughStyle )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textLineThroughStyle )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textUnderlineStyle )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textUnderlineStyle )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textEffect )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textEffect )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textColor )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textColor )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textBackgroundColor )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textBackgroundColor )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationColor )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationColor )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_renderingPriority )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [in] */ long v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_renderingPriority )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_defaultTextSelection )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_defaultTextSelection )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecoration )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecoration )( 
            __RPC__in IHTMLRenderStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLRenderStyleVtbl;

    interface IHTMLRenderStyle
    {
        CONST_VTBL struct IHTMLRenderStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRenderStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLRenderStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLRenderStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLRenderStyle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLRenderStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLRenderStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLRenderStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLRenderStyle_put_textLineThroughStyle(This,v)	\
    ( (This)->lpVtbl -> put_textLineThroughStyle(This,v) ) 

#define IHTMLRenderStyle_get_textLineThroughStyle(This,p)	\
    ( (This)->lpVtbl -> get_textLineThroughStyle(This,p) ) 

#define IHTMLRenderStyle_put_textUnderlineStyle(This,v)	\
    ( (This)->lpVtbl -> put_textUnderlineStyle(This,v) ) 

#define IHTMLRenderStyle_get_textUnderlineStyle(This,p)	\
    ( (This)->lpVtbl -> get_textUnderlineStyle(This,p) ) 

#define IHTMLRenderStyle_put_textEffect(This,v)	\
    ( (This)->lpVtbl -> put_textEffect(This,v) ) 

#define IHTMLRenderStyle_get_textEffect(This,p)	\
    ( (This)->lpVtbl -> get_textEffect(This,p) ) 

#define IHTMLRenderStyle_put_textColor(This,v)	\
    ( (This)->lpVtbl -> put_textColor(This,v) ) 

#define IHTMLRenderStyle_get_textColor(This,p)	\
    ( (This)->lpVtbl -> get_textColor(This,p) ) 

#define IHTMLRenderStyle_put_textBackgroundColor(This,v)	\
    ( (This)->lpVtbl -> put_textBackgroundColor(This,v) ) 

#define IHTMLRenderStyle_get_textBackgroundColor(This,p)	\
    ( (This)->lpVtbl -> get_textBackgroundColor(This,p) ) 

#define IHTMLRenderStyle_put_textDecorationColor(This,v)	\
    ( (This)->lpVtbl -> put_textDecorationColor(This,v) ) 

#define IHTMLRenderStyle_get_textDecorationColor(This,p)	\
    ( (This)->lpVtbl -> get_textDecorationColor(This,p) ) 

#define IHTMLRenderStyle_put_renderingPriority(This,v)	\
    ( (This)->lpVtbl -> put_renderingPriority(This,v) ) 

#define IHTMLRenderStyle_get_renderingPriority(This,p)	\
    ( (This)->lpVtbl -> get_renderingPriority(This,p) ) 

#define IHTMLRenderStyle_put_defaultTextSelection(This,v)	\
    ( (This)->lpVtbl -> put_defaultTextSelection(This,v) ) 

#define IHTMLRenderStyle_get_defaultTextSelection(This,p)	\
    ( (This)->lpVtbl -> get_defaultTextSelection(This,p) ) 

#define IHTMLRenderStyle_put_textDecoration(This,v)	\
    ( (This)->lpVtbl -> put_textDecoration(This,v) ) 

#define IHTMLRenderStyle_get_textDecoration(This,p)	\
    ( (This)->lpVtbl -> get_textDecoration(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLRenderStyle_INTERFACE_DEFINED__ */


#ifndef __DispHTMLRenderStyle_DISPINTERFACE_DEFINED__
#define __DispHTMLRenderStyle_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLRenderStyle */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLRenderStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f58b-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLRenderStyle : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLRenderStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLRenderStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLRenderStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLRenderStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLRenderStyle * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLRenderStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLRenderStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLRenderStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLRenderStyleVtbl;

    interface DispHTMLRenderStyle
    {
        CONST_VTBL struct DispHTMLRenderStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLRenderStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLRenderStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLRenderStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLRenderStyle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLRenderStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLRenderStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLRenderStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLRenderStyle_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLRenderStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f6aa-98b5-11cf-bb82-00aa00bdce0b")
HTMLRenderStyle;
#endif

#ifndef __IHTMLCurrentStyle_INTERFACE_DEFINED__
#define __IHTMLCurrentStyle_INTERFACE_DEFINED__

/* interface IHTMLCurrentStyle */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCurrentStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f3db-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCurrentStyle : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_styleFloat( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_color( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontFamily( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontVariant( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontWeight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontSize( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundImage( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionX( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionY( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundRepeat( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_left( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingLeft( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingTop( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingRight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingBottom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlign( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecoration( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_display( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_visibility( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zIndex( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_letterSpacing( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineHeight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textIndent( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_verticalAlign( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundAttachment( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginTop( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginRight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginBottom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginLeft( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clear( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleType( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStylePosition( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleImage( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clipTop( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clipRight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clipBottom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clipLeft( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflow( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakBefore( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakAfter( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cursor( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_tableLayout( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderCollapse( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_direction( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_behavior( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT *AttributeValue) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_unicodeBidi( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_right( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_bottom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeMode( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyAlign( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyPosition( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyOverhang( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAutospace( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineBreak( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordBreak( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustify( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustifyTrim( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashida( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_blockDirection( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridChar( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridLine( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridMode( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridType( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderWidth( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_padding( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_margin( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_accelerator( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowX( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowY( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textTransform( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLCurrentStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLCurrentStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLCurrentStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLCurrentStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_position )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_styleFloat )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundColor )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontFamily )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontStyle )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontVariant )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontWeight )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontSize )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundImage )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPositionX )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPositionY )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundRepeat )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftColor )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopColor )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightColor )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomColor )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopStyle )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightStyle )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomStyle )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftStyle )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopWidth )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightWidth )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomWidth )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftWidth )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_left )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_top )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_width )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_height )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingLeft )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingTop )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingRight )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingBottom )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAlign )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecoration )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_display )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_visibility )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_zIndex )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_letterSpacing )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lineHeight )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textIndent )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_verticalAlign )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundAttachment )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginTop )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginRight )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginBottom )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginLeft )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clear )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyleType )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStylePosition )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyleImage )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clipTop )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clipRight )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clipBottom )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clipLeft )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflow )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakBefore )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakAfter )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cursor )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_tableLayout )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderCollapse )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_direction )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_behavior )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getAttribute )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT *AttributeValue);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_unicodeBidi )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_right )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_bottom )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_imeMode )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyAlign )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyPosition )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyOverhang )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAutospace )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lineBreak )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordBreak )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textJustify )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textJustifyTrim )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textKashida )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_blockDirection )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridChar )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridLine )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridMode )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridType )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderStyle )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderColor )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderWidth )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_padding )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_margin )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_accelerator )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflowX )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflowY )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textTransform )( 
            __RPC__in IHTMLCurrentStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLCurrentStyleVtbl;

    interface IHTMLCurrentStyle
    {
        CONST_VTBL struct IHTMLCurrentStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLCurrentStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLCurrentStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLCurrentStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLCurrentStyle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLCurrentStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLCurrentStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLCurrentStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLCurrentStyle_get_position(This,p)	\
    ( (This)->lpVtbl -> get_position(This,p) ) 

#define IHTMLCurrentStyle_get_styleFloat(This,p)	\
    ( (This)->lpVtbl -> get_styleFloat(This,p) ) 

#define IHTMLCurrentStyle_get_color(This,p)	\
    ( (This)->lpVtbl -> get_color(This,p) ) 

#define IHTMLCurrentStyle_get_backgroundColor(This,p)	\
    ( (This)->lpVtbl -> get_backgroundColor(This,p) ) 

#define IHTMLCurrentStyle_get_fontFamily(This,p)	\
    ( (This)->lpVtbl -> get_fontFamily(This,p) ) 

#define IHTMLCurrentStyle_get_fontStyle(This,p)	\
    ( (This)->lpVtbl -> get_fontStyle(This,p) ) 

#define IHTMLCurrentStyle_get_fontVariant(This,p)	\
    ( (This)->lpVtbl -> get_fontVariant(This,p) ) 

#define IHTMLCurrentStyle_get_fontWeight(This,p)	\
    ( (This)->lpVtbl -> get_fontWeight(This,p) ) 

#define IHTMLCurrentStyle_get_fontSize(This,p)	\
    ( (This)->lpVtbl -> get_fontSize(This,p) ) 

#define IHTMLCurrentStyle_get_backgroundImage(This,p)	\
    ( (This)->lpVtbl -> get_backgroundImage(This,p) ) 

#define IHTMLCurrentStyle_get_backgroundPositionX(This,p)	\
    ( (This)->lpVtbl -> get_backgroundPositionX(This,p) ) 

#define IHTMLCurrentStyle_get_backgroundPositionY(This,p)	\
    ( (This)->lpVtbl -> get_backgroundPositionY(This,p) ) 

#define IHTMLCurrentStyle_get_backgroundRepeat(This,p)	\
    ( (This)->lpVtbl -> get_backgroundRepeat(This,p) ) 

#define IHTMLCurrentStyle_get_borderLeftColor(This,p)	\
    ( (This)->lpVtbl -> get_borderLeftColor(This,p) ) 

#define IHTMLCurrentStyle_get_borderTopColor(This,p)	\
    ( (This)->lpVtbl -> get_borderTopColor(This,p) ) 

#define IHTMLCurrentStyle_get_borderRightColor(This,p)	\
    ( (This)->lpVtbl -> get_borderRightColor(This,p) ) 

#define IHTMLCurrentStyle_get_borderBottomColor(This,p)	\
    ( (This)->lpVtbl -> get_borderBottomColor(This,p) ) 

#define IHTMLCurrentStyle_get_borderTopStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderTopStyle(This,p) ) 

#define IHTMLCurrentStyle_get_borderRightStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderRightStyle(This,p) ) 

#define IHTMLCurrentStyle_get_borderBottomStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderBottomStyle(This,p) ) 

#define IHTMLCurrentStyle_get_borderLeftStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderLeftStyle(This,p) ) 

#define IHTMLCurrentStyle_get_borderTopWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderTopWidth(This,p) ) 

#define IHTMLCurrentStyle_get_borderRightWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderRightWidth(This,p) ) 

#define IHTMLCurrentStyle_get_borderBottomWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderBottomWidth(This,p) ) 

#define IHTMLCurrentStyle_get_borderLeftWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderLeftWidth(This,p) ) 

#define IHTMLCurrentStyle_get_left(This,p)	\
    ( (This)->lpVtbl -> get_left(This,p) ) 

#define IHTMLCurrentStyle_get_top(This,p)	\
    ( (This)->lpVtbl -> get_top(This,p) ) 

#define IHTMLCurrentStyle_get_width(This,p)	\
    ( (This)->lpVtbl -> get_width(This,p) ) 

#define IHTMLCurrentStyle_get_height(This,p)	\
    ( (This)->lpVtbl -> get_height(This,p) ) 

#define IHTMLCurrentStyle_get_paddingLeft(This,p)	\
    ( (This)->lpVtbl -> get_paddingLeft(This,p) ) 

#define IHTMLCurrentStyle_get_paddingTop(This,p)	\
    ( (This)->lpVtbl -> get_paddingTop(This,p) ) 

#define IHTMLCurrentStyle_get_paddingRight(This,p)	\
    ( (This)->lpVtbl -> get_paddingRight(This,p) ) 

#define IHTMLCurrentStyle_get_paddingBottom(This,p)	\
    ( (This)->lpVtbl -> get_paddingBottom(This,p) ) 

#define IHTMLCurrentStyle_get_textAlign(This,p)	\
    ( (This)->lpVtbl -> get_textAlign(This,p) ) 

#define IHTMLCurrentStyle_get_textDecoration(This,p)	\
    ( (This)->lpVtbl -> get_textDecoration(This,p) ) 

#define IHTMLCurrentStyle_get_display(This,p)	\
    ( (This)->lpVtbl -> get_display(This,p) ) 

#define IHTMLCurrentStyle_get_visibility(This,p)	\
    ( (This)->lpVtbl -> get_visibility(This,p) ) 

#define IHTMLCurrentStyle_get_zIndex(This,p)	\
    ( (This)->lpVtbl -> get_zIndex(This,p) ) 

#define IHTMLCurrentStyle_get_letterSpacing(This,p)	\
    ( (This)->lpVtbl -> get_letterSpacing(This,p) ) 

#define IHTMLCurrentStyle_get_lineHeight(This,p)	\
    ( (This)->lpVtbl -> get_lineHeight(This,p) ) 

#define IHTMLCurrentStyle_get_textIndent(This,p)	\
    ( (This)->lpVtbl -> get_textIndent(This,p) ) 

#define IHTMLCurrentStyle_get_verticalAlign(This,p)	\
    ( (This)->lpVtbl -> get_verticalAlign(This,p) ) 

#define IHTMLCurrentStyle_get_backgroundAttachment(This,p)	\
    ( (This)->lpVtbl -> get_backgroundAttachment(This,p) ) 

#define IHTMLCurrentStyle_get_marginTop(This,p)	\
    ( (This)->lpVtbl -> get_marginTop(This,p) ) 

#define IHTMLCurrentStyle_get_marginRight(This,p)	\
    ( (This)->lpVtbl -> get_marginRight(This,p) ) 

#define IHTMLCurrentStyle_get_marginBottom(This,p)	\
    ( (This)->lpVtbl -> get_marginBottom(This,p) ) 

#define IHTMLCurrentStyle_get_marginLeft(This,p)	\
    ( (This)->lpVtbl -> get_marginLeft(This,p) ) 

#define IHTMLCurrentStyle_get_clear(This,p)	\
    ( (This)->lpVtbl -> get_clear(This,p) ) 

#define IHTMLCurrentStyle_get_listStyleType(This,p)	\
    ( (This)->lpVtbl -> get_listStyleType(This,p) ) 

#define IHTMLCurrentStyle_get_listStylePosition(This,p)	\
    ( (This)->lpVtbl -> get_listStylePosition(This,p) ) 

#define IHTMLCurrentStyle_get_listStyleImage(This,p)	\
    ( (This)->lpVtbl -> get_listStyleImage(This,p) ) 

#define IHTMLCurrentStyle_get_clipTop(This,p)	\
    ( (This)->lpVtbl -> get_clipTop(This,p) ) 

#define IHTMLCurrentStyle_get_clipRight(This,p)	\
    ( (This)->lpVtbl -> get_clipRight(This,p) ) 

#define IHTMLCurrentStyle_get_clipBottom(This,p)	\
    ( (This)->lpVtbl -> get_clipBottom(This,p) ) 

#define IHTMLCurrentStyle_get_clipLeft(This,p)	\
    ( (This)->lpVtbl -> get_clipLeft(This,p) ) 

#define IHTMLCurrentStyle_get_overflow(This,p)	\
    ( (This)->lpVtbl -> get_overflow(This,p) ) 

#define IHTMLCurrentStyle_get_pageBreakBefore(This,p)	\
    ( (This)->lpVtbl -> get_pageBreakBefore(This,p) ) 

#define IHTMLCurrentStyle_get_pageBreakAfter(This,p)	\
    ( (This)->lpVtbl -> get_pageBreakAfter(This,p) ) 

#define IHTMLCurrentStyle_get_cursor(This,p)	\
    ( (This)->lpVtbl -> get_cursor(This,p) ) 

#define IHTMLCurrentStyle_get_tableLayout(This,p)	\
    ( (This)->lpVtbl -> get_tableLayout(This,p) ) 

#define IHTMLCurrentStyle_get_borderCollapse(This,p)	\
    ( (This)->lpVtbl -> get_borderCollapse(This,p) ) 

#define IHTMLCurrentStyle_get_direction(This,p)	\
    ( (This)->lpVtbl -> get_direction(This,p) ) 

#define IHTMLCurrentStyle_get_behavior(This,p)	\
    ( (This)->lpVtbl -> get_behavior(This,p) ) 

#define IHTMLCurrentStyle_getAttribute(This,strAttributeName,lFlags,AttributeValue)	\
    ( (This)->lpVtbl -> getAttribute(This,strAttributeName,lFlags,AttributeValue) ) 

#define IHTMLCurrentStyle_get_unicodeBidi(This,p)	\
    ( (This)->lpVtbl -> get_unicodeBidi(This,p) ) 

#define IHTMLCurrentStyle_get_right(This,p)	\
    ( (This)->lpVtbl -> get_right(This,p) ) 

#define IHTMLCurrentStyle_get_bottom(This,p)	\
    ( (This)->lpVtbl -> get_bottom(This,p) ) 

#define IHTMLCurrentStyle_get_imeMode(This,p)	\
    ( (This)->lpVtbl -> get_imeMode(This,p) ) 

#define IHTMLCurrentStyle_get_rubyAlign(This,p)	\
    ( (This)->lpVtbl -> get_rubyAlign(This,p) ) 

#define IHTMLCurrentStyle_get_rubyPosition(This,p)	\
    ( (This)->lpVtbl -> get_rubyPosition(This,p) ) 

#define IHTMLCurrentStyle_get_rubyOverhang(This,p)	\
    ( (This)->lpVtbl -> get_rubyOverhang(This,p) ) 

#define IHTMLCurrentStyle_get_textAutospace(This,p)	\
    ( (This)->lpVtbl -> get_textAutospace(This,p) ) 

#define IHTMLCurrentStyle_get_lineBreak(This,p)	\
    ( (This)->lpVtbl -> get_lineBreak(This,p) ) 

#define IHTMLCurrentStyle_get_wordBreak(This,p)	\
    ( (This)->lpVtbl -> get_wordBreak(This,p) ) 

#define IHTMLCurrentStyle_get_textJustify(This,p)	\
    ( (This)->lpVtbl -> get_textJustify(This,p) ) 

#define IHTMLCurrentStyle_get_textJustifyTrim(This,p)	\
    ( (This)->lpVtbl -> get_textJustifyTrim(This,p) ) 

#define IHTMLCurrentStyle_get_textKashida(This,p)	\
    ( (This)->lpVtbl -> get_textKashida(This,p) ) 

#define IHTMLCurrentStyle_get_blockDirection(This,p)	\
    ( (This)->lpVtbl -> get_blockDirection(This,p) ) 

#define IHTMLCurrentStyle_get_layoutGridChar(This,p)	\
    ( (This)->lpVtbl -> get_layoutGridChar(This,p) ) 

#define IHTMLCurrentStyle_get_layoutGridLine(This,p)	\
    ( (This)->lpVtbl -> get_layoutGridLine(This,p) ) 

#define IHTMLCurrentStyle_get_layoutGridMode(This,p)	\
    ( (This)->lpVtbl -> get_layoutGridMode(This,p) ) 

#define IHTMLCurrentStyle_get_layoutGridType(This,p)	\
    ( (This)->lpVtbl -> get_layoutGridType(This,p) ) 

#define IHTMLCurrentStyle_get_borderStyle(This,p)	\
    ( (This)->lpVtbl -> get_borderStyle(This,p) ) 

#define IHTMLCurrentStyle_get_borderColor(This,p)	\
    ( (This)->lpVtbl -> get_borderColor(This,p) ) 

#define IHTMLCurrentStyle_get_borderWidth(This,p)	\
    ( (This)->lpVtbl -> get_borderWidth(This,p) ) 

#define IHTMLCurrentStyle_get_padding(This,p)	\
    ( (This)->lpVtbl -> get_padding(This,p) ) 

#define IHTMLCurrentStyle_get_margin(This,p)	\
    ( (This)->lpVtbl -> get_margin(This,p) ) 

#define IHTMLCurrentStyle_get_accelerator(This,p)	\
    ( (This)->lpVtbl -> get_accelerator(This,p) ) 

#define IHTMLCurrentStyle_get_overflowX(This,p)	\
    ( (This)->lpVtbl -> get_overflowX(This,p) ) 

#define IHTMLCurrentStyle_get_overflowY(This,p)	\
    ( (This)->lpVtbl -> get_overflowY(This,p) ) 

#define IHTMLCurrentStyle_get_textTransform(This,p)	\
    ( (This)->lpVtbl -> get_textTransform(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLCurrentStyle_INTERFACE_DEFINED__ */


#ifndef __IHTMLCurrentStyle2_INTERFACE_DEFINED__
#define __IHTMLCurrentStyle2_INTERFACE_DEFINED__

/* interface IHTMLCurrentStyle2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCurrentStyle2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f658-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCurrentStyle2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutFlow( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordWrap( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textUnderlinePosition( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_hasLayout( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarBaseColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarFaceColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbar3dLightColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarShadowColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarHighlightColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarDarkShadowColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarArrowColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarTrackColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_writingMode( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zoom( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_filter( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlignLast( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashidaSpace( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][restricted][hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_isBlock( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLCurrentStyle2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLCurrentStyle2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLCurrentStyle2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLCurrentStyle2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutFlow )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordWrap )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textUnderlinePosition )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_hasLayout )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarBaseColor )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarFaceColor )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbar3dLightColor )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarShadowColor )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarHighlightColor )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarDarkShadowColor )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarArrowColor )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarTrackColor )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_writingMode )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_zoom )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_filter )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAlignLast )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textKashidaSpace )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [nonbrowsable][restricted][hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_isBlock )( 
            __RPC__in IHTMLCurrentStyle2 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        END_INTERFACE
    } IHTMLCurrentStyle2Vtbl;

    interface IHTMLCurrentStyle2
    {
        CONST_VTBL struct IHTMLCurrentStyle2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLCurrentStyle2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLCurrentStyle2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLCurrentStyle2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLCurrentStyle2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLCurrentStyle2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLCurrentStyle2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLCurrentStyle2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLCurrentStyle2_get_layoutFlow(This,p)	\
    ( (This)->lpVtbl -> get_layoutFlow(This,p) ) 

#define IHTMLCurrentStyle2_get_wordWrap(This,p)	\
    ( (This)->lpVtbl -> get_wordWrap(This,p) ) 

#define IHTMLCurrentStyle2_get_textUnderlinePosition(This,p)	\
    ( (This)->lpVtbl -> get_textUnderlinePosition(This,p) ) 

#define IHTMLCurrentStyle2_get_hasLayout(This,p)	\
    ( (This)->lpVtbl -> get_hasLayout(This,p) ) 

#define IHTMLCurrentStyle2_get_scrollbarBaseColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarBaseColor(This,p) ) 

#define IHTMLCurrentStyle2_get_scrollbarFaceColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarFaceColor(This,p) ) 

#define IHTMLCurrentStyle2_get_scrollbar3dLightColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbar3dLightColor(This,p) ) 

#define IHTMLCurrentStyle2_get_scrollbarShadowColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarShadowColor(This,p) ) 

#define IHTMLCurrentStyle2_get_scrollbarHighlightColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarHighlightColor(This,p) ) 

#define IHTMLCurrentStyle2_get_scrollbarDarkShadowColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarDarkShadowColor(This,p) ) 

#define IHTMLCurrentStyle2_get_scrollbarArrowColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarArrowColor(This,p) ) 

#define IHTMLCurrentStyle2_get_scrollbarTrackColor(This,p)	\
    ( (This)->lpVtbl -> get_scrollbarTrackColor(This,p) ) 

#define IHTMLCurrentStyle2_get_writingMode(This,p)	\
    ( (This)->lpVtbl -> get_writingMode(This,p) ) 

#define IHTMLCurrentStyle2_get_zoom(This,p)	\
    ( (This)->lpVtbl -> get_zoom(This,p) ) 

#define IHTMLCurrentStyle2_get_filter(This,p)	\
    ( (This)->lpVtbl -> get_filter(This,p) ) 

#define IHTMLCurrentStyle2_get_textAlignLast(This,p)	\
    ( (This)->lpVtbl -> get_textAlignLast(This,p) ) 

#define IHTMLCurrentStyle2_get_textKashidaSpace(This,p)	\
    ( (This)->lpVtbl -> get_textKashidaSpace(This,p) ) 

#define IHTMLCurrentStyle2_get_isBlock(This,p)	\
    ( (This)->lpVtbl -> get_isBlock(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLCurrentStyle2_INTERFACE_DEFINED__ */


#ifndef __IHTMLCurrentStyle3_INTERFACE_DEFINED__
#define __IHTMLCurrentStyle3_INTERFACE_DEFINED__

/* interface IHTMLCurrentStyle3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCurrentStyle3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f818-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCurrentStyle3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textOverflow( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minHeight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordSpacing( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_whiteSpace( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLCurrentStyle3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLCurrentStyle3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLCurrentStyle3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLCurrentStyle3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLCurrentStyle3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLCurrentStyle3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLCurrentStyle3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLCurrentStyle3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textOverflow )( 
            __RPC__in IHTMLCurrentStyle3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_minHeight )( 
            __RPC__in IHTMLCurrentStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordSpacing )( 
            __RPC__in IHTMLCurrentStyle3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_whiteSpace )( 
            __RPC__in IHTMLCurrentStyle3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLCurrentStyle3Vtbl;

    interface IHTMLCurrentStyle3
    {
        CONST_VTBL struct IHTMLCurrentStyle3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLCurrentStyle3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLCurrentStyle3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLCurrentStyle3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLCurrentStyle3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLCurrentStyle3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLCurrentStyle3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLCurrentStyle3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLCurrentStyle3_get_textOverflow(This,p)	\
    ( (This)->lpVtbl -> get_textOverflow(This,p) ) 

#define IHTMLCurrentStyle3_get_minHeight(This,p)	\
    ( (This)->lpVtbl -> get_minHeight(This,p) ) 

#define IHTMLCurrentStyle3_get_wordSpacing(This,p)	\
    ( (This)->lpVtbl -> get_wordSpacing(This,p) ) 

#define IHTMLCurrentStyle3_get_whiteSpace(This,p)	\
    ( (This)->lpVtbl -> get_whiteSpace(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLCurrentStyle3_INTERFACE_DEFINED__ */


#ifndef __IHTMLCurrentStyle4_INTERFACE_DEFINED__
#define __IHTMLCurrentStyle4_INTERFACE_DEFINED__

/* interface IHTMLCurrentStyle4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCurrentStyle4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f33b-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCurrentStyle4 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_msInterpolationMode( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxHeight( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLCurrentStyle4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLCurrentStyle4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLCurrentStyle4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLCurrentStyle4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLCurrentStyle4 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLCurrentStyle4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLCurrentStyle4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLCurrentStyle4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_msInterpolationMode )( 
            __RPC__in IHTMLCurrentStyle4 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_maxHeight )( 
            __RPC__in IHTMLCurrentStyle4 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_minWidth )( 
            __RPC__in IHTMLCurrentStyle4 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_maxWidth )( 
            __RPC__in IHTMLCurrentStyle4 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        END_INTERFACE
    } IHTMLCurrentStyle4Vtbl;

    interface IHTMLCurrentStyle4
    {
        CONST_VTBL struct IHTMLCurrentStyle4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLCurrentStyle4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLCurrentStyle4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLCurrentStyle4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLCurrentStyle4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLCurrentStyle4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLCurrentStyle4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLCurrentStyle4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLCurrentStyle4_get_msInterpolationMode(This,p)	\
    ( (This)->lpVtbl -> get_msInterpolationMode(This,p) ) 

#define IHTMLCurrentStyle4_get_maxHeight(This,p)	\
    ( (This)->lpVtbl -> get_maxHeight(This,p) ) 

#define IHTMLCurrentStyle4_get_minWidth(This,p)	\
    ( (This)->lpVtbl -> get_minWidth(This,p) ) 

#define IHTMLCurrentStyle4_get_maxWidth(This,p)	\
    ( (This)->lpVtbl -> get_maxWidth(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLCurrentStyle4_INTERFACE_DEFINED__ */


#ifndef __IHTMLCurrentStyle5_INTERFACE_DEFINED__
#define __IHTMLCurrentStyle5_INTERFACE_DEFINED__

/* interface IHTMLCurrentStyle5 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCurrentStyle5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("30510481-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCurrentStyle5 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_captionSide( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_outline( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_outlineWidth( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_outlineStyle( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_outlineColor( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_boxSizing( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderSpacing( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_orphans( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_widows( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakInside( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_emptyCells( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_msBlockProgression( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_quotes( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLCurrentStyle5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLCurrentStyle5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLCurrentStyle5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLCurrentStyle5 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_captionSide )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outline )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outlineWidth )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outlineStyle )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outlineColor )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_boxSizing )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderSpacing )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_orphans )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_widows )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakInside )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_emptyCells )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_msBlockProgression )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_quotes )( 
            __RPC__in IHTMLCurrentStyle5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLCurrentStyle5Vtbl;

    interface IHTMLCurrentStyle5
    {
        CONST_VTBL struct IHTMLCurrentStyle5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLCurrentStyle5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLCurrentStyle5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLCurrentStyle5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLCurrentStyle5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLCurrentStyle5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLCurrentStyle5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLCurrentStyle5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLCurrentStyle5_get_captionSide(This,p)	\
    ( (This)->lpVtbl -> get_captionSide(This,p) ) 

#define IHTMLCurrentStyle5_get_outline(This,p)	\
    ( (This)->lpVtbl -> get_outline(This,p) ) 

#define IHTMLCurrentStyle5_get_outlineWidth(This,p)	\
    ( (This)->lpVtbl -> get_outlineWidth(This,p) ) 

#define IHTMLCurrentStyle5_get_outlineStyle(This,p)	\
    ( (This)->lpVtbl -> get_outlineStyle(This,p) ) 

#define IHTMLCurrentStyle5_get_outlineColor(This,p)	\
    ( (This)->lpVtbl -> get_outlineColor(This,p) ) 

#define IHTMLCurrentStyle5_get_boxSizing(This,p)	\
    ( (This)->lpVtbl -> get_boxSizing(This,p) ) 

#define IHTMLCurrentStyle5_get_borderSpacing(This,p)	\
    ( (This)->lpVtbl -> get_borderSpacing(This,p) ) 

#define IHTMLCurrentStyle5_get_orphans(This,p)	\
    ( (This)->lpVtbl -> get_orphans(This,p) ) 

#define IHTMLCurrentStyle5_get_widows(This,p)	\
    ( (This)->lpVtbl -> get_widows(This,p) ) 

#define IHTMLCurrentStyle5_get_pageBreakInside(This,p)	\
    ( (This)->lpVtbl -> get_pageBreakInside(This,p) ) 

#define IHTMLCurrentStyle5_get_emptyCells(This,p)	\
    ( (This)->lpVtbl -> get_emptyCells(This,p) ) 

#define IHTMLCurrentStyle5_get_msBlockProgression(This,p)	\
    ( (This)->lpVtbl -> get_msBlockProgression(This,p) ) 

#define IHTMLCurrentStyle5_get_quotes(This,p)	\
    ( (This)->lpVtbl -> get_quotes(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLCurrentStyle5_INTERFACE_DEFINED__ */


#ifndef __DispHTMLCurrentStyle_DISPINTERFACE_DEFINED__
#define __DispHTMLCurrentStyle_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLCurrentStyle */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLCurrentStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f557-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLCurrentStyle : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLCurrentStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLCurrentStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLCurrentStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLCurrentStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLCurrentStyle * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLCurrentStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLCurrentStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLCurrentStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLCurrentStyleVtbl;

    interface DispHTMLCurrentStyle
    {
        CONST_VTBL struct DispHTMLCurrentStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLCurrentStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLCurrentStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLCurrentStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLCurrentStyle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLCurrentStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLCurrentStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLCurrentStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLCurrentStyle_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLCurrentStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3dc-98b5-11cf-bb82-00aa00bdce0b")
HTMLCurrentStyle;
#endif

#ifndef __IHTMLElement_INTERFACE_DEFINED__
#define __IHTMLElement_INTERFACE_DEFINED__

/* interface IHTMLElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f1ff-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLElement : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags = 1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT *AttributeValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_className( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_className( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_id( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_id( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_tagName( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentElement( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p) = 0;
        
        virtual /* [nonbrowsable][id][propget] */ HRESULT STDMETHODCALLTYPE get_style( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyle **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onhelp( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onhelp( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onclick( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onclick( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondblclick( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondblclick( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onkeydown( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onkeydown( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onkeyup( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onkeyup( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onkeypress( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onkeypress( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseout( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseout( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseover( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseover( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmousemove( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmousemove( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmousedown( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmousedown( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseup( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseup( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_document( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_title( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_title( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_language( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_language( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onselectstart( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onselectstart( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE scrollIntoView( 
            /* [in][optional] */ VARIANT varargStart) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE contains( 
            /* [in] */ __RPC__in_opt IHTMLElement *pChild,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfResult) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_sourceIndex( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_recordNumber( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_lang( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_lang( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetLeft( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetTop( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetWidth( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetHeight( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetParent( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_innerHTML( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_innerHTML( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_innerText( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_innerText( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_outerHTML( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_outerHTML( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_outerText( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_outerText( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertAdjacentHTML( 
            /* [in] */ __RPC__in BSTR where,
            /* [in] */ __RPC__in BSTR html) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertAdjacentText( 
            /* [in] */ __RPC__in BSTR where,
            /* [in] */ __RPC__in BSTR text) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentTextEdit( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_isTextEdit( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE click( void) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_filters( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLFiltersCollection **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondragstart( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondragstart( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *String) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeupdate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeupdate( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onafterupdate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onafterupdate( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onerrorupdate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onerrorupdate( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowexit( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowexit( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowenter( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowenter( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondatasetchanged( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondatasetchanged( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondataavailable( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondataavailable( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondatasetcomplete( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondatasetcomplete( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onfilterchange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onfilterchange( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_children( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_all( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLElement * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLElement * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setAttribute )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getAttribute )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT *AttributeValue);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeAttribute )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess);
        
        /* [bindable][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_className )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_className )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_id )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_id )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_tagName )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_parentElement )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p);
        
        /* [nonbrowsable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_style )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyle **p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onhelp )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onhelp )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onclick )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onclick )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondblclick )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondblclick )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onkeydown )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onkeydown )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onkeyup )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onkeyup )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onkeypress )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onkeypress )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmouseout )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmouseout )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmouseover )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmouseover )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmousemove )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmousemove )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmousedown )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmousedown )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmouseup )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmouseup )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_document )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_title )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_title )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_language )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_language )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onselectstart )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onselectstart )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *scrollIntoView )( 
            __RPC__in IHTMLElement * This,
            /* [in][optional] */ VARIANT varargStart);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *contains )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in_opt IHTMLElement *pChild,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfResult);
        
        /* [bindable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_sourceIndex )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_recordNumber )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_lang )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lang )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetLeft )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetTop )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetWidth )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetHeight )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetParent )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_innerHTML )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_innerHTML )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_innerText )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_innerText )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_outerHTML )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outerHTML )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_outerText )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outerText )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *insertAdjacentHTML )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR where,
            /* [in] */ __RPC__in BSTR html);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *insertAdjacentText )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ __RPC__in BSTR where,
            /* [in] */ __RPC__in BSTR text);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_parentTextEdit )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_isTextEdit )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *click )( 
            __RPC__in IHTMLElement * This);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_filters )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLFiltersCollection **p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondragstart )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondragstart )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *toString )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *String);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onbeforeupdate )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onbeforeupdate )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onafterupdate )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onafterupdate )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onerrorupdate )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onerrorupdate )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onrowexit )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onrowexit )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onrowenter )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onrowenter )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondatasetchanged )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondatasetchanged )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondataavailable )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondataavailable )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondatasetcomplete )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondatasetcomplete )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onfilterchange )( 
            __RPC__in IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onfilterchange )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_children )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_all )( 
            __RPC__in IHTMLElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        END_INTERFACE
    } IHTMLElementVtbl;

    interface IHTMLElement
    {
        CONST_VTBL struct IHTMLElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLElement_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLElement_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLElement_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLElement_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLElement_setAttribute(This,strAttributeName,AttributeValue,lFlags)	\
    ( (This)->lpVtbl -> setAttribute(This,strAttributeName,AttributeValue,lFlags) ) 

#define IHTMLElement_getAttribute(This,strAttributeName,lFlags,AttributeValue)	\
    ( (This)->lpVtbl -> getAttribute(This,strAttributeName,lFlags,AttributeValue) ) 

#define IHTMLElement_removeAttribute(This,strAttributeName,lFlags,pfSuccess)	\
    ( (This)->lpVtbl -> removeAttribute(This,strAttributeName,lFlags,pfSuccess) ) 

#define IHTMLElement_put_className(This,v)	\
    ( (This)->lpVtbl -> put_className(This,v) ) 

#define IHTMLElement_get_className(This,p)	\
    ( (This)->lpVtbl -> get_className(This,p) ) 

#define IHTMLElement_put_id(This,v)	\
    ( (This)->lpVtbl -> put_id(This,v) ) 

#define IHTMLElement_get_id(This,p)	\
    ( (This)->lpVtbl -> get_id(This,p) ) 

#define IHTMLElement_get_tagName(This,p)	\
    ( (This)->lpVtbl -> get_tagName(This,p) ) 

#define IHTMLElement_get_parentElement(This,p)	\
    ( (This)->lpVtbl -> get_parentElement(This,p) ) 

#define IHTMLElement_get_style(This,p)	\
    ( (This)->lpVtbl -> get_style(This,p) ) 

#define IHTMLElement_put_onhelp(This,v)	\
    ( (This)->lpVtbl -> put_onhelp(This,v) ) 

#define IHTMLElement_get_onhelp(This,p)	\
    ( (This)->lpVtbl -> get_onhelp(This,p) ) 

#define IHTMLElement_put_onclick(This,v)	\
    ( (This)->lpVtbl -> put_onclick(This,v) ) 

#define IHTMLElement_get_onclick(This,p)	\
    ( (This)->lpVtbl -> get_onclick(This,p) ) 

#define IHTMLElement_put_ondblclick(This,v)	\
    ( (This)->lpVtbl -> put_ondblclick(This,v) ) 

#define IHTMLElement_get_ondblclick(This,p)	\
    ( (This)->lpVtbl -> get_ondblclick(This,p) ) 

#define IHTMLElement_put_onkeydown(This,v)	\
    ( (This)->lpVtbl -> put_onkeydown(This,v) ) 

#define IHTMLElement_get_onkeydown(This,p)	\
    ( (This)->lpVtbl -> get_onkeydown(This,p) ) 

#define IHTMLElement_put_onkeyup(This,v)	\
    ( (This)->lpVtbl -> put_onkeyup(This,v) ) 

#define IHTMLElement_get_onkeyup(This,p)	\
    ( (This)->lpVtbl -> get_onkeyup(This,p) ) 

#define IHTMLElement_put_onkeypress(This,v)	\
    ( (This)->lpVtbl -> put_onkeypress(This,v) ) 

#define IHTMLElement_get_onkeypress(This,p)	\
    ( (This)->lpVtbl -> get_onkeypress(This,p) ) 

#define IHTMLElement_put_onmouseout(This,v)	\
    ( (This)->lpVtbl -> put_onmouseout(This,v) ) 

#define IHTMLElement_get_onmouseout(This,p)	\
    ( (This)->lpVtbl -> get_onmouseout(This,p) ) 

#define IHTMLElement_put_onmouseover(This,v)	\
    ( (This)->lpVtbl -> put_onmouseover(This,v) ) 

#define IHTMLElement_get_onmouseover(This,p)	\
    ( (This)->lpVtbl -> get_onmouseover(This,p) ) 

#define IHTMLElement_put_onmousemove(This,v)	\
    ( (This)->lpVtbl -> put_onmousemove(This,v) ) 

#define IHTMLElement_get_onmousemove(This,p)	\
    ( (This)->lpVtbl -> get_onmousemove(This,p) ) 

#define IHTMLElement_put_onmousedown(This,v)	\
    ( (This)->lpVtbl -> put_onmousedown(This,v) ) 

#define IHTMLElement_get_onmousedown(This,p)	\
    ( (This)->lpVtbl -> get_onmousedown(This,p) ) 

#define IHTMLElement_put_onmouseup(This,v)	\
    ( (This)->lpVtbl -> put_onmouseup(This,v) ) 

#define IHTMLElement_get_onmouseup(This,p)	\
    ( (This)->lpVtbl -> get_onmouseup(This,p) ) 

#define IHTMLElement_get_document(This,p)	\
    ( (This)->lpVtbl -> get_document(This,p) ) 

#define IHTMLElement_put_title(This,v)	\
    ( (This)->lpVtbl -> put_title(This,v) ) 

#define IHTMLElement_get_title(This,p)	\
    ( (This)->lpVtbl -> get_title(This,p) ) 

#define IHTMLElement_put_language(This,v)	\
    ( (This)->lpVtbl -> put_language(This,v) ) 

#define IHTMLElement_get_language(This,p)	\
    ( (This)->lpVtbl -> get_language(This,p) ) 

#define IHTMLElement_put_onselectstart(This,v)	\
    ( (This)->lpVtbl -> put_onselectstart(This,v) ) 

#define IHTMLElement_get_onselectstart(This,p)	\
    ( (This)->lpVtbl -> get_onselectstart(This,p) ) 

#define IHTMLElement_scrollIntoView(This,varargStart)	\
    ( (This)->lpVtbl -> scrollIntoView(This,varargStart) ) 

#define IHTMLElement_contains(This,pChild,pfResult)	\
    ( (This)->lpVtbl -> contains(This,pChild,pfResult) ) 

#define IHTMLElement_get_sourceIndex(This,p)	\
    ( (This)->lpVtbl -> get_sourceIndex(This,p) ) 

#define IHTMLElement_get_recordNumber(This,p)	\
    ( (This)->lpVtbl -> get_recordNumber(This,p) ) 

#define IHTMLElement_put_lang(This,v)	\
    ( (This)->lpVtbl -> put_lang(This,v) ) 

#define IHTMLElement_get_lang(This,p)	\
    ( (This)->lpVtbl -> get_lang(This,p) ) 

#define IHTMLElement_get_offsetLeft(This,p)	\
    ( (This)->lpVtbl -> get_offsetLeft(This,p) ) 

#define IHTMLElement_get_offsetTop(This,p)	\
    ( (This)->lpVtbl -> get_offsetTop(This,p) ) 

#define IHTMLElement_get_offsetWidth(This,p)	\
    ( (This)->lpVtbl -> get_offsetWidth(This,p) ) 

#define IHTMLElement_get_offsetHeight(This,p)	\
    ( (This)->lpVtbl -> get_offsetHeight(This,p) ) 

#define IHTMLElement_get_offsetParent(This,p)	\
    ( (This)->lpVtbl -> get_offsetParent(This,p) ) 

#define IHTMLElement_put_innerHTML(This,v)	\
    ( (This)->lpVtbl -> put_innerHTML(This,v) ) 

#define IHTMLElement_get_innerHTML(This,p)	\
    ( (This)->lpVtbl -> get_innerHTML(This,p) ) 

#define IHTMLElement_put_innerText(This,v)	\
    ( (This)->lpVtbl -> put_innerText(This,v) ) 

#define IHTMLElement_get_innerText(This,p)	\
    ( (This)->lpVtbl -> get_innerText(This,p) ) 

#define IHTMLElement_put_outerHTML(This,v)	\
    ( (This)->lpVtbl -> put_outerHTML(This,v) ) 

#define IHTMLElement_get_outerHTML(This,p)	\
    ( (This)->lpVtbl -> get_outerHTML(This,p) ) 

#define IHTMLElement_put_outerText(This,v)	\
    ( (This)->lpVtbl -> put_outerText(This,v) ) 

#define IHTMLElement_get_outerText(This,p)	\
    ( (This)->lpVtbl -> get_outerText(This,p) ) 

#define IHTMLElement_insertAdjacentHTML(This,where,html)	\
    ( (This)->lpVtbl -> insertAdjacentHTML(This,where,html) ) 

#define IHTMLElement_insertAdjacentText(This,where,text)	\
    ( (This)->lpVtbl -> insertAdjacentText(This,where,text) ) 

#define IHTMLElement_get_parentTextEdit(This,p)	\
    ( (This)->lpVtbl -> get_parentTextEdit(This,p) ) 

#define IHTMLElement_get_isTextEdit(This,p)	\
    ( (This)->lpVtbl -> get_isTextEdit(This,p) ) 

#define IHTMLElement_click(This)	\
    ( (This)->lpVtbl -> click(This) ) 

#define IHTMLElement_get_filters(This,p)	\
    ( (This)->lpVtbl -> get_filters(This,p) ) 

#define IHTMLElement_put_ondragstart(This,v)	\
    ( (This)->lpVtbl -> put_ondragstart(This,v) ) 

#define IHTMLElement_get_ondragstart(This,p)	\
    ( (This)->lpVtbl -> get_ondragstart(This,p) ) 

#define IHTMLElement_toString(This,String)	\
    ( (This)->lpVtbl -> toString(This,String) ) 

#define IHTMLElement_put_onbeforeupdate(This,v)	\
    ( (This)->lpVtbl -> put_onbeforeupdate(This,v) ) 

#define IHTMLElement_get_onbeforeupdate(This,p)	\
    ( (This)->lpVtbl -> get_onbeforeupdate(This,p) ) 

#define IHTMLElement_put_onafterupdate(This,v)	\
    ( (This)->lpVtbl -> put_onafterupdate(This,v) ) 

#define IHTMLElement_get_onafterupdate(This,p)	\
    ( (This)->lpVtbl -> get_onafterupdate(This,p) ) 

#define IHTMLElement_put_onerrorupdate(This,v)	\
    ( (This)->lpVtbl -> put_onerrorupdate(This,v) ) 

#define IHTMLElement_get_onerrorupdate(This,p)	\
    ( (This)->lpVtbl -> get_onerrorupdate(This,p) ) 

#define IHTMLElement_put_onrowexit(This,v)	\
    ( (This)->lpVtbl -> put_onrowexit(This,v) ) 

#define IHTMLElement_get_onrowexit(This,p)	\
    ( (This)->lpVtbl -> get_onrowexit(This,p) ) 

#define IHTMLElement_put_onrowenter(This,v)	\
    ( (This)->lpVtbl -> put_onrowenter(This,v) ) 

#define IHTMLElement_get_onrowenter(This,p)	\
    ( (This)->lpVtbl -> get_onrowenter(This,p) ) 

#define IHTMLElement_put_ondatasetchanged(This,v)	\
    ( (This)->lpVtbl -> put_ondatasetchanged(This,v) ) 

#define IHTMLElement_get_ondatasetchanged(This,p)	\
    ( (This)->lpVtbl -> get_ondatasetchanged(This,p) ) 

#define IHTMLElement_put_ondataavailable(This,v)	\
    ( (This)->lpVtbl -> put_ondataavailable(This,v) ) 

#define IHTMLElement_get_ondataavailable(This,p)	\
    ( (This)->lpVtbl -> get_ondataavailable(This,p) ) 

#define IHTMLElement_put_ondatasetcomplete(This,v)	\
    ( (This)->lpVtbl -> put_ondatasetcomplete(This,v) ) 

#define IHTMLElement_get_ondatasetcomplete(This,p)	\
    ( (This)->lpVtbl -> get_ondatasetcomplete(This,p) ) 

#define IHTMLElement_put_onfilterchange(This,v)	\
    ( (This)->lpVtbl -> put_onfilterchange(This,v) ) 

#define IHTMLElement_get_onfilterchange(This,p)	\
    ( (This)->lpVtbl -> get_onfilterchange(This,p) ) 

#define IHTMLElement_get_children(This,p)	\
    ( (This)->lpVtbl -> get_children(This,p) ) 

#define IHTMLElement_get_all(This,p)	\
    ( (This)->lpVtbl -> get_all(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLRect_INTERFACE_DEFINED__
#define __IHTMLRect_INTERFACE_DEFINED__

/* interface IHTMLRect */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRect;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a3-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRect : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_left( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_left( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_top( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_right( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_right( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_bottom( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bottom( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLRect * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLRect * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLRect * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLRect * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLRect * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLRect * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRect * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_left )( 
            __RPC__in IHTMLRect * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_left )( 
            __RPC__in IHTMLRect * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_top )( 
            __RPC__in IHTMLRect * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_top )( 
            __RPC__in IHTMLRect * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_right )( 
            __RPC__in IHTMLRect * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_right )( 
            __RPC__in IHTMLRect * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_bottom )( 
            __RPC__in IHTMLRect * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_bottom )( 
            __RPC__in IHTMLRect * This,
            /* [out][retval] */ __RPC__out long *p);
        
        END_INTERFACE
    } IHTMLRectVtbl;

    interface IHTMLRect
    {
        CONST_VTBL struct IHTMLRectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRect_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLRect_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLRect_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLRect_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLRect_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLRect_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLRect_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLRect_put_left(This,v)	\
    ( (This)->lpVtbl -> put_left(This,v) ) 

#define IHTMLRect_get_left(This,p)	\
    ( (This)->lpVtbl -> get_left(This,p) ) 

#define IHTMLRect_put_top(This,v)	\
    ( (This)->lpVtbl -> put_top(This,v) ) 

#define IHTMLRect_get_top(This,p)	\
    ( (This)->lpVtbl -> get_top(This,p) ) 

#define IHTMLRect_put_right(This,v)	\
    ( (This)->lpVtbl -> put_right(This,v) ) 

#define IHTMLRect_get_right(This,p)	\
    ( (This)->lpVtbl -> get_right(This,p) ) 

#define IHTMLRect_put_bottom(This,v)	\
    ( (This)->lpVtbl -> put_bottom(This,v) ) 

#define IHTMLRect_get_bottom(This,p)	\
    ( (This)->lpVtbl -> get_bottom(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLRect_INTERFACE_DEFINED__ */


#ifndef __IHTMLRectCollection_INTERFACE_DEFINED__
#define __IHTMLRectCollection_INTERFACE_DEFINED__

/* interface IHTMLRectCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRectCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a4-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRectCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ __RPC__in VARIANT *pvarIndex,
            /* [out][retval] */ __RPC__out VARIANT *pvarResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRectCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLRectCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLRectCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLRectCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLRectCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLRectCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLRectCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRectCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLRectCollection * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__newEnum )( 
            __RPC__in IHTMLRectCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            __RPC__in IHTMLRectCollection * This,
            /* [in] */ __RPC__in VARIANT *pvarIndex,
            /* [out][retval] */ __RPC__out VARIANT *pvarResult);
        
        END_INTERFACE
    } IHTMLRectCollectionVtbl;

    interface IHTMLRectCollection
    {
        CONST_VTBL struct IHTMLRectCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRectCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLRectCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLRectCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLRectCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLRectCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLRectCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLRectCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLRectCollection_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#define IHTMLRectCollection_get__newEnum(This,p)	\
    ( (This)->lpVtbl -> get__newEnum(This,p) ) 

#define IHTMLRectCollection_item(This,pvarIndex,pvarResult)	\
    ( (This)->lpVtbl -> item(This,pvarIndex,pvarResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLRectCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLElementCollection_INTERFACE_DEFINED__
#define __IHTMLElementCollection_INTERFACE_DEFINED__

/* interface IHTMLElementCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLElementCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f21f-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLElementCollection : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *String) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_length( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in][optional] */ VARIANT name,
            /* [in][optional] */ VARIANT index,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE tags( 
            /* [in] */ VARIANT tagName,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLElementCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLElementCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLElementCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLElementCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLElementCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLElementCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLElementCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLElementCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *toString )( 
            __RPC__in IHTMLElementCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *String);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_length )( 
            __RPC__in IHTMLElementCollection * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLElementCollection * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__newEnum )( 
            __RPC__in IHTMLElementCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            __RPC__in IHTMLElementCollection * This,
            /* [in][optional] */ VARIANT name,
            /* [in][optional] */ VARIANT index,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *tags )( 
            __RPC__in IHTMLElementCollection * This,
            /* [in] */ VARIANT tagName,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp);
        
        END_INTERFACE
    } IHTMLElementCollectionVtbl;

    interface IHTMLElementCollection
    {
        CONST_VTBL struct IHTMLElementCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLElementCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLElementCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLElementCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLElementCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLElementCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLElementCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLElementCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLElementCollection_toString(This,String)	\
    ( (This)->lpVtbl -> toString(This,String) ) 

#define IHTMLElementCollection_put_length(This,v)	\
    ( (This)->lpVtbl -> put_length(This,v) ) 

#define IHTMLElementCollection_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#define IHTMLElementCollection_get__newEnum(This,p)	\
    ( (This)->lpVtbl -> get__newEnum(This,p) ) 

#define IHTMLElementCollection_item(This,name,index,pdisp)	\
    ( (This)->lpVtbl -> item(This,name,index,pdisp) ) 

#define IHTMLElementCollection_tags(This,tagName,pdisp)	\
    ( (This)->lpVtbl -> tags(This,tagName,pdisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLElementCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLElement2_INTERFACE_DEFINED__
#define __IHTMLElement2_INTERFACE_DEFINED__

/* interface IHTMLElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLElement2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f434-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLElement2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_scopeName( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setCapture( 
            /* [in][defaultvalue] */ VARIANT_BOOL containerCapture = -1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE releaseCapture( void) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onlosecapture( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onlosecapture( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE componentFromPoint( 
            /* [in] */ long x,
            /* [in] */ long y,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *component) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE doScroll( 
            /* [in][optional] */ VARIANT component) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onscroll( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onscroll( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondrag( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondrag( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondragend( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondragend( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondragenter( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondragenter( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondragover( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondragover( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondragleave( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondragleave( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondrop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondrop( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforecut( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforecut( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_oncut( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_oncut( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforecopy( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforecopy( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_oncopy( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_oncopy( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforepaste( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforepaste( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onpaste( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onpaste( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][id][propget] */ HRESULT STDMETHODCALLTYPE get_currentStyle( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLCurrentStyle **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onpropertychange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onpropertychange( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getClientRects( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLRectCollection **pRectCol) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getBoundingClientRect( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLRect **pRect) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setExpression( 
            /* [in] */ __RPC__in BSTR propname,
            /* [in] */ __RPC__in BSTR expression,
            /* [in][defaultvalue] */ __RPC__in BSTR language = L"") = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getExpression( 
            /* [in] */ __RPC__in BSTR propname,
            /* [out][retval] */ __RPC__out VARIANT *expression) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeExpression( 
            /* [in] */ __RPC__in BSTR propname,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_tabIndex( 
            /* [in] */ short v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_tabIndex( 
            /* [out][retval] */ __RPC__out short *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE focus( void) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_accessKey( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_accessKey( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onblur( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onblur( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onfocus( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onfocus( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onresize( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onresize( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE blur( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE addFilter( 
            /* [in] */ __RPC__in_opt IUnknown *pUnk) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeFilter( 
            /* [in] */ __RPC__in_opt IUnknown *pUnk) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clientHeight( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clientWidth( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clientTop( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clientLeft( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE attachEvent( 
            /* [in] */ __RPC__in BSTR event,
            /* [in] */ __RPC__in_opt IDispatch *pDisp,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfResult) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE detachEvent( 
            /* [in] */ __RPC__in BSTR event,
            /* [in] */ __RPC__in_opt IDispatch *pDisp) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onreadystatechange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onreadystatechange( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowsdelete( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowsdelete( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowsinserted( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowsinserted( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_oncellchange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_oncellchange( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_dir( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_dir( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createControlRange( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **range) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollHeight( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollWidth( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollTop( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollTop( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollLeft( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollLeft( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE clearAttributes( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE mergeAttributes( 
            /* [in] */ __RPC__in_opt IHTMLElement *mergeThis) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_oncontextmenu( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_oncontextmenu( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertAdjacentElement( 
            /* [in] */ __RPC__in BSTR where,
            /* [in] */ __RPC__in_opt IHTMLElement *insertedElement,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **inserted) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE applyElement( 
            /* [in] */ __RPC__in_opt IHTMLElement *apply,
            /* [in] */ __RPC__in BSTR where,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **applied) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAdjacentText( 
            /* [in] */ __RPC__in BSTR where,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *text) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceAdjacentText( 
            /* [in] */ __RPC__in BSTR where,
            /* [in] */ __RPC__in BSTR newText,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *oldText) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_canHaveChildren( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE addBehavior( 
            /* [in] */ __RPC__in BSTR bstrUrl,
            /* [in][optional] */ __RPC__in VARIANT *pvarFactory,
            /* [out][retval] */ __RPC__out long *pCookie) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeBehavior( 
            /* [in] */ long cookie,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfResult) = 0;
        
        virtual /* [nonbrowsable][id][propget] */ HRESULT STDMETHODCALLTYPE get_runtimeStyle( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyle **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_behaviorUrns( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_tagUrn( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_tagUrn( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeeditfocus( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeeditfocus( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_readyStateValue( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getElementsByTagName( 
            /* [in] */ __RPC__in BSTR v,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElementCollection **pelColl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLElement2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLElement2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLElement2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLElement2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLElement2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scopeName )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setCapture )( 
            __RPC__in IHTMLElement2 * This,
            /* [in][defaultvalue] */ VARIANT_BOOL containerCapture);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *releaseCapture )( 
            __RPC__in IHTMLElement2 * This);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onlosecapture )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onlosecapture )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *componentFromPoint )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *component);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *doScroll )( 
            __RPC__in IHTMLElement2 * This,
            /* [in][optional] */ VARIANT component);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onscroll )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onscroll )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondrag )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondrag )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondragend )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondragend )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondragenter )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondragenter )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondragover )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondragover )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondragleave )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondragleave )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondrop )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondrop )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onbeforecut )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onbeforecut )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_oncut )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_oncut )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onbeforecopy )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onbeforecopy )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_oncopy )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_oncopy )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onbeforepaste )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onbeforepaste )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onpaste )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onpaste )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [nonbrowsable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_currentStyle )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLCurrentStyle **p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onpropertychange )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onpropertychange )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getClientRects )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLRectCollection **pRectCol);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getBoundingClientRect )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLRect **pRect);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setExpression )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR propname,
            /* [in] */ __RPC__in BSTR expression,
            /* [in][defaultvalue] */ __RPC__in BSTR language);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getExpression )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR propname,
            /* [out][retval] */ __RPC__out VARIANT *expression);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeExpression )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR propname,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_tabIndex )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ short v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_tabIndex )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out short *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *focus )( 
            __RPC__in IHTMLElement2 * This);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_accessKey )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_accessKey )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onblur )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onblur )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onfocus )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onfocus )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onresize )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onresize )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *blur )( 
            __RPC__in IHTMLElement2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *addFilter )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in_opt IUnknown *pUnk);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeFilter )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in_opt IUnknown *pUnk);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clientHeight )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clientWidth )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clientTop )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clientLeft )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *attachEvent )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR event,
            /* [in] */ __RPC__in_opt IDispatch *pDisp,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfResult);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *detachEvent )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR event,
            /* [in] */ __RPC__in_opt IDispatch *pDisp);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_readyState )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onreadystatechange )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onreadystatechange )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onrowsdelete )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onrowsdelete )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onrowsinserted )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onrowsinserted )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_oncellchange )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_oncellchange )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_dir )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_dir )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *createControlRange )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **range);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollHeight )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollWidth )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollTop )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ long v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollTop )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollLeft )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ long v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollLeft )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *clearAttributes )( 
            __RPC__in IHTMLElement2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *mergeAttributes )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in_opt IHTMLElement *mergeThis);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_oncontextmenu )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_oncontextmenu )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *insertAdjacentElement )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR where,
            /* [in] */ __RPC__in_opt IHTMLElement *insertedElement,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **inserted);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *applyElement )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in_opt IHTMLElement *apply,
            /* [in] */ __RPC__in BSTR where,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **applied);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getAdjacentText )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR where,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *text);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *replaceAdjacentText )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR where,
            /* [in] */ __RPC__in BSTR newText,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *oldText);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_canHaveChildren )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *addBehavior )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR bstrUrl,
            /* [in][optional] */ __RPC__in VARIANT *pvarFactory,
            /* [out][retval] */ __RPC__out long *pCookie);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeBehavior )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ long cookie,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfResult);
        
        /* [nonbrowsable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_runtimeStyle )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyle **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_behaviorUrns )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_tagUrn )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_tagUrn )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onbeforeeditfocus )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onbeforeeditfocus )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_readyStateValue )( 
            __RPC__in IHTMLElement2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getElementsByTagName )( 
            __RPC__in IHTMLElement2 * This,
            /* [in] */ __RPC__in BSTR v,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElementCollection **pelColl);
        
        END_INTERFACE
    } IHTMLElement2Vtbl;

    interface IHTMLElement2
    {
        CONST_VTBL struct IHTMLElement2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLElement2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLElement2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLElement2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLElement2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLElement2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLElement2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLElement2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLElement2_get_scopeName(This,p)	\
    ( (This)->lpVtbl -> get_scopeName(This,p) ) 

#define IHTMLElement2_setCapture(This,containerCapture)	\
    ( (This)->lpVtbl -> setCapture(This,containerCapture) ) 

#define IHTMLElement2_releaseCapture(This)	\
    ( (This)->lpVtbl -> releaseCapture(This) ) 

#define IHTMLElement2_put_onlosecapture(This,v)	\
    ( (This)->lpVtbl -> put_onlosecapture(This,v) ) 

#define IHTMLElement2_get_onlosecapture(This,p)	\
    ( (This)->lpVtbl -> get_onlosecapture(This,p) ) 

#define IHTMLElement2_componentFromPoint(This,x,y,component)	\
    ( (This)->lpVtbl -> componentFromPoint(This,x,y,component) ) 

#define IHTMLElement2_doScroll(This,component)	\
    ( (This)->lpVtbl -> doScroll(This,component) ) 

#define IHTMLElement2_put_onscroll(This,v)	\
    ( (This)->lpVtbl -> put_onscroll(This,v) ) 

#define IHTMLElement2_get_onscroll(This,p)	\
    ( (This)->lpVtbl -> get_onscroll(This,p) ) 

#define IHTMLElement2_put_ondrag(This,v)	\
    ( (This)->lpVtbl -> put_ondrag(This,v) ) 

#define IHTMLElement2_get_ondrag(This,p)	\
    ( (This)->lpVtbl -> get_ondrag(This,p) ) 

#define IHTMLElement2_put_ondragend(This,v)	\
    ( (This)->lpVtbl -> put_ondragend(This,v) ) 

#define IHTMLElement2_get_ondragend(This,p)	\
    ( (This)->lpVtbl -> get_ondragend(This,p) ) 

#define IHTMLElement2_put_ondragenter(This,v)	\
    ( (This)->lpVtbl -> put_ondragenter(This,v) ) 

#define IHTMLElement2_get_ondragenter(This,p)	\
    ( (This)->lpVtbl -> get_ondragenter(This,p) ) 

#define IHTMLElement2_put_ondragover(This,v)	\
    ( (This)->lpVtbl -> put_ondragover(This,v) ) 

#define IHTMLElement2_get_ondragover(This,p)	\
    ( (This)->lpVtbl -> get_ondragover(This,p) ) 

#define IHTMLElement2_put_ondragleave(This,v)	\
    ( (This)->lpVtbl -> put_ondragleave(This,v) ) 

#define IHTMLElement2_get_ondragleave(This,p)	\
    ( (This)->lpVtbl -> get_ondragleave(This,p) ) 

#define IHTMLElement2_put_ondrop(This,v)	\
    ( (This)->lpVtbl -> put_ondrop(This,v) ) 

#define IHTMLElement2_get_ondrop(This,p)	\
    ( (This)->lpVtbl -> get_ondrop(This,p) ) 

#define IHTMLElement2_put_onbeforecut(This,v)	\
    ( (This)->lpVtbl -> put_onbeforecut(This,v) ) 

#define IHTMLElement2_get_onbeforecut(This,p)	\
    ( (This)->lpVtbl -> get_onbeforecut(This,p) ) 

#define IHTMLElement2_put_oncut(This,v)	\
    ( (This)->lpVtbl -> put_oncut(This,v) ) 

#define IHTMLElement2_get_oncut(This,p)	\
    ( (This)->lpVtbl -> get_oncut(This,p) ) 

#define IHTMLElement2_put_onbeforecopy(This,v)	\
    ( (This)->lpVtbl -> put_onbeforecopy(This,v) ) 

#define IHTMLElement2_get_onbeforecopy(This,p)	\
    ( (This)->lpVtbl -> get_onbeforecopy(This,p) ) 

#define IHTMLElement2_put_oncopy(This,v)	\
    ( (This)->lpVtbl -> put_oncopy(This,v) ) 

#define IHTMLElement2_get_oncopy(This,p)	\
    ( (This)->lpVtbl -> get_oncopy(This,p) ) 

#define IHTMLElement2_put_onbeforepaste(This,v)	\
    ( (This)->lpVtbl -> put_onbeforepaste(This,v) ) 

#define IHTMLElement2_get_onbeforepaste(This,p)	\
    ( (This)->lpVtbl -> get_onbeforepaste(This,p) ) 

#define IHTMLElement2_put_onpaste(This,v)	\
    ( (This)->lpVtbl -> put_onpaste(This,v) ) 

#define IHTMLElement2_get_onpaste(This,p)	\
    ( (This)->lpVtbl -> get_onpaste(This,p) ) 

#define IHTMLElement2_get_currentStyle(This,p)	\
    ( (This)->lpVtbl -> get_currentStyle(This,p) ) 

#define IHTMLElement2_put_onpropertychange(This,v)	\
    ( (This)->lpVtbl -> put_onpropertychange(This,v) ) 

#define IHTMLElement2_get_onpropertychange(This,p)	\
    ( (This)->lpVtbl -> get_onpropertychange(This,p) ) 

#define IHTMLElement2_getClientRects(This,pRectCol)	\
    ( (This)->lpVtbl -> getClientRects(This,pRectCol) ) 

#define IHTMLElement2_getBoundingClientRect(This,pRect)	\
    ( (This)->lpVtbl -> getBoundingClientRect(This,pRect) ) 

#define IHTMLElement2_setExpression(This,propname,expression,language)	\
    ( (This)->lpVtbl -> setExpression(This,propname,expression,language) ) 

#define IHTMLElement2_getExpression(This,propname,expression)	\
    ( (This)->lpVtbl -> getExpression(This,propname,expression) ) 

#define IHTMLElement2_removeExpression(This,propname,pfSuccess)	\
    ( (This)->lpVtbl -> removeExpression(This,propname,pfSuccess) ) 

#define IHTMLElement2_put_tabIndex(This,v)	\
    ( (This)->lpVtbl -> put_tabIndex(This,v) ) 

#define IHTMLElement2_get_tabIndex(This,p)	\
    ( (This)->lpVtbl -> get_tabIndex(This,p) ) 

#define IHTMLElement2_focus(This)	\
    ( (This)->lpVtbl -> focus(This) ) 

#define IHTMLElement2_put_accessKey(This,v)	\
    ( (This)->lpVtbl -> put_accessKey(This,v) ) 

#define IHTMLElement2_get_accessKey(This,p)	\
    ( (This)->lpVtbl -> get_accessKey(This,p) ) 

#define IHTMLElement2_put_onblur(This,v)	\
    ( (This)->lpVtbl -> put_onblur(This,v) ) 

#define IHTMLElement2_get_onblur(This,p)	\
    ( (This)->lpVtbl -> get_onblur(This,p) ) 

#define IHTMLElement2_put_onfocus(This,v)	\
    ( (This)->lpVtbl -> put_onfocus(This,v) ) 

#define IHTMLElement2_get_onfocus(This,p)	\
    ( (This)->lpVtbl -> get_onfocus(This,p) ) 

#define IHTMLElement2_put_onresize(This,v)	\
    ( (This)->lpVtbl -> put_onresize(This,v) ) 

#define IHTMLElement2_get_onresize(This,p)	\
    ( (This)->lpVtbl -> get_onresize(This,p) ) 

#define IHTMLElement2_blur(This)	\
    ( (This)->lpVtbl -> blur(This) ) 

#define IHTMLElement2_addFilter(This,pUnk)	\
    ( (This)->lpVtbl -> addFilter(This,pUnk) ) 

#define IHTMLElement2_removeFilter(This,pUnk)	\
    ( (This)->lpVtbl -> removeFilter(This,pUnk) ) 

#define IHTMLElement2_get_clientHeight(This,p)	\
    ( (This)->lpVtbl -> get_clientHeight(This,p) ) 

#define IHTMLElement2_get_clientWidth(This,p)	\
    ( (This)->lpVtbl -> get_clientWidth(This,p) ) 

#define IHTMLElement2_get_clientTop(This,p)	\
    ( (This)->lpVtbl -> get_clientTop(This,p) ) 

#define IHTMLElement2_get_clientLeft(This,p)	\
    ( (This)->lpVtbl -> get_clientLeft(This,p) ) 

#define IHTMLElement2_attachEvent(This,event,pDisp,pfResult)	\
    ( (This)->lpVtbl -> attachEvent(This,event,pDisp,pfResult) ) 

#define IHTMLElement2_detachEvent(This,event,pDisp)	\
    ( (This)->lpVtbl -> detachEvent(This,event,pDisp) ) 

#define IHTMLElement2_get_readyState(This,p)	\
    ( (This)->lpVtbl -> get_readyState(This,p) ) 

#define IHTMLElement2_put_onreadystatechange(This,v)	\
    ( (This)->lpVtbl -> put_onreadystatechange(This,v) ) 

#define IHTMLElement2_get_onreadystatechange(This,p)	\
    ( (This)->lpVtbl -> get_onreadystatechange(This,p) ) 

#define IHTMLElement2_put_onrowsdelete(This,v)	\
    ( (This)->lpVtbl -> put_onrowsdelete(This,v) ) 

#define IHTMLElement2_get_onrowsdelete(This,p)	\
    ( (This)->lpVtbl -> get_onrowsdelete(This,p) ) 

#define IHTMLElement2_put_onrowsinserted(This,v)	\
    ( (This)->lpVtbl -> put_onrowsinserted(This,v) ) 

#define IHTMLElement2_get_onrowsinserted(This,p)	\
    ( (This)->lpVtbl -> get_onrowsinserted(This,p) ) 

#define IHTMLElement2_put_oncellchange(This,v)	\
    ( (This)->lpVtbl -> put_oncellchange(This,v) ) 

#define IHTMLElement2_get_oncellchange(This,p)	\
    ( (This)->lpVtbl -> get_oncellchange(This,p) ) 

#define IHTMLElement2_put_dir(This,v)	\
    ( (This)->lpVtbl -> put_dir(This,v) ) 

#define IHTMLElement2_get_dir(This,p)	\
    ( (This)->lpVtbl -> get_dir(This,p) ) 

#define IHTMLElement2_createControlRange(This,range)	\
    ( (This)->lpVtbl -> createControlRange(This,range) ) 

#define IHTMLElement2_get_scrollHeight(This,p)	\
    ( (This)->lpVtbl -> get_scrollHeight(This,p) ) 

#define IHTMLElement2_get_scrollWidth(This,p)	\
    ( (This)->lpVtbl -> get_scrollWidth(This,p) ) 

#define IHTMLElement2_put_scrollTop(This,v)	\
    ( (This)->lpVtbl -> put_scrollTop(This,v) ) 

#define IHTMLElement2_get_scrollTop(This,p)	\
    ( (This)->lpVtbl -> get_scrollTop(This,p) ) 

#define IHTMLElement2_put_scrollLeft(This,v)	\
    ( (This)->lpVtbl -> put_scrollLeft(This,v) ) 

#define IHTMLElement2_get_scrollLeft(This,p)	\
    ( (This)->lpVtbl -> get_scrollLeft(This,p) ) 

#define IHTMLElement2_clearAttributes(This)	\
    ( (This)->lpVtbl -> clearAttributes(This) ) 

#define IHTMLElement2_mergeAttributes(This,mergeThis)	\
    ( (This)->lpVtbl -> mergeAttributes(This,mergeThis) ) 

#define IHTMLElement2_put_oncontextmenu(This,v)	\
    ( (This)->lpVtbl -> put_oncontextmenu(This,v) ) 

#define IHTMLElement2_get_oncontextmenu(This,p)	\
    ( (This)->lpVtbl -> get_oncontextmenu(This,p) ) 

#define IHTMLElement2_insertAdjacentElement(This,where,insertedElement,inserted)	\
    ( (This)->lpVtbl -> insertAdjacentElement(This,where,insertedElement,inserted) ) 

#define IHTMLElement2_applyElement(This,apply,where,applied)	\
    ( (This)->lpVtbl -> applyElement(This,apply,where,applied) ) 

#define IHTMLElement2_getAdjacentText(This,where,text)	\
    ( (This)->lpVtbl -> getAdjacentText(This,where,text) ) 

#define IHTMLElement2_replaceAdjacentText(This,where,newText,oldText)	\
    ( (This)->lpVtbl -> replaceAdjacentText(This,where,newText,oldText) ) 

#define IHTMLElement2_get_canHaveChildren(This,p)	\
    ( (This)->lpVtbl -> get_canHaveChildren(This,p) ) 

#define IHTMLElement2_addBehavior(This,bstrUrl,pvarFactory,pCookie)	\
    ( (This)->lpVtbl -> addBehavior(This,bstrUrl,pvarFactory,pCookie) ) 

#define IHTMLElement2_removeBehavior(This,cookie,pfResult)	\
    ( (This)->lpVtbl -> removeBehavior(This,cookie,pfResult) ) 

#define IHTMLElement2_get_runtimeStyle(This,p)	\
    ( (This)->lpVtbl -> get_runtimeStyle(This,p) ) 

#define IHTMLElement2_get_behaviorUrns(This,p)	\
    ( (This)->lpVtbl -> get_behaviorUrns(This,p) ) 

#define IHTMLElement2_put_tagUrn(This,v)	\
    ( (This)->lpVtbl -> put_tagUrn(This,v) ) 

#define IHTMLElement2_get_tagUrn(This,p)	\
    ( (This)->lpVtbl -> get_tagUrn(This,p) ) 

#define IHTMLElement2_put_onbeforeeditfocus(This,v)	\
    ( (This)->lpVtbl -> put_onbeforeeditfocus(This,v) ) 

#define IHTMLElement2_get_onbeforeeditfocus(This,p)	\
    ( (This)->lpVtbl -> get_onbeforeeditfocus(This,p) ) 

#define IHTMLElement2_get_readyStateValue(This,p)	\
    ( (This)->lpVtbl -> get_readyStateValue(This,p) ) 

#define IHTMLElement2_getElementsByTagName(This,v,pelColl)	\
    ( (This)->lpVtbl -> getElementsByTagName(This,v,pelColl) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLElement2_INTERFACE_DEFINED__ */


#ifndef __IHTMLAttributeCollection3_INTERFACE_DEFINED__
#define __IHTMLAttributeCollection3_INTERFACE_DEFINED__

/* interface IHTMLAttributeCollection3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAttributeCollection3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("30510469-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAttributeCollection3 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getNamedItem( 
            /* [in] */ __RPC__in BSTR bstrName,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppNodeOut) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setNamedItem( 
            /* [in] */ __RPC__in_opt IHTMLDOMAttribute *pNodeIn,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppNodeOut) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeNamedItem( 
            /* [in] */ __RPC__in BSTR bstrName,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppNodeOut) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ long index,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppNodeOut) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLAttributeCollection3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLAttributeCollection3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLAttributeCollection3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLAttributeCollection3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLAttributeCollection3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLAttributeCollection3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLAttributeCollection3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLAttributeCollection3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getNamedItem )( 
            __RPC__in IHTMLAttributeCollection3 * This,
            /* [in] */ __RPC__in BSTR bstrName,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppNodeOut);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setNamedItem )( 
            __RPC__in IHTMLAttributeCollection3 * This,
            /* [in] */ __RPC__in_opt IHTMLDOMAttribute *pNodeIn,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppNodeOut);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeNamedItem )( 
            __RPC__in IHTMLAttributeCollection3 * This,
            /* [in] */ __RPC__in BSTR bstrName,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppNodeOut);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            __RPC__in IHTMLAttributeCollection3 * This,
            /* [in] */ long index,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppNodeOut);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLAttributeCollection3 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        END_INTERFACE
    } IHTMLAttributeCollection3Vtbl;

    interface IHTMLAttributeCollection3
    {
        CONST_VTBL struct IHTMLAttributeCollection3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLAttributeCollection3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLAttributeCollection3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLAttributeCollection3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLAttributeCollection3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLAttributeCollection3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLAttributeCollection3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLAttributeCollection3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLAttributeCollection3_getNamedItem(This,bstrName,ppNodeOut)	\
    ( (This)->lpVtbl -> getNamedItem(This,bstrName,ppNodeOut) ) 

#define IHTMLAttributeCollection3_setNamedItem(This,pNodeIn,ppNodeOut)	\
    ( (This)->lpVtbl -> setNamedItem(This,pNodeIn,ppNodeOut) ) 

#define IHTMLAttributeCollection3_removeNamedItem(This,bstrName,ppNodeOut)	\
    ( (This)->lpVtbl -> removeNamedItem(This,bstrName,ppNodeOut) ) 

#define IHTMLAttributeCollection3_item(This,index,ppNodeOut)	\
    ( (This)->lpVtbl -> item(This,index,ppNodeOut) ) 

#define IHTMLAttributeCollection3_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLAttributeCollection3_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMNode_INTERFACE_DEFINED__
#define __IHTMLDOMNode_INTERFACE_DEFINED__

/* interface IHTMLDOMNode */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMNode;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f5da-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMNode : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeType( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentNode( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hasChildNodes( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *fChildren) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_childNodes( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_attributes( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertBefore( 
            /* [in] */ __RPC__in_opt IHTMLDOMNode *newChild,
            /* [in][optional] */ VARIANT refChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeChild( 
            /* [in] */ __RPC__in_opt IHTMLDOMNode *oldChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceChild( 
            /* [in] */ __RPC__in_opt IHTMLDOMNode *newChild,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *oldChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE cloneNode( 
            /* [in] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **clonedNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeNode( 
            /* [in][defaultvalue] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **removed) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE swapNode( 
            /* [in] */ __RPC__in_opt IHTMLDOMNode *otherNode,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **swappedNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceNode( 
            /* [in] */ __RPC__in_opt IHTMLDOMNode *replacement,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **replaced) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE appendChild( 
            /* [in] */ __RPC__in_opt IHTMLDOMNode *newChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeName( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_nodeValue( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeValue( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_firstChild( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_lastChild( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_previousSibling( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nextSibling( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMNodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLDOMNode * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLDOMNode * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLDOMNode * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLDOMNode * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLDOMNode * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLDOMNode * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMNode * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeType )( 
            __RPC__in IHTMLDOMNode * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_parentNode )( 
            __RPC__in IHTMLDOMNode * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *hasChildNodes )( 
            __RPC__in IHTMLDOMNode * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *fChildren);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_childNodes )( 
            __RPC__in IHTMLDOMNode * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_attributes )( 
            __RPC__in IHTMLDOMNode * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *insertBefore )( 
            __RPC__in IHTMLDOMNode * This,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *newChild,
            /* [in][optional] */ VARIANT refChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeChild )( 
            __RPC__in IHTMLDOMNode * This,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *oldChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *replaceChild )( 
            __RPC__in IHTMLDOMNode * This,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *newChild,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *oldChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *cloneNode )( 
            __RPC__in IHTMLDOMNode * This,
            /* [in] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **clonedNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeNode )( 
            __RPC__in IHTMLDOMNode * This,
            /* [in][defaultvalue] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **removed);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *swapNode )( 
            __RPC__in IHTMLDOMNode * This,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *otherNode,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **swappedNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *replaceNode )( 
            __RPC__in IHTMLDOMNode * This,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *replacement,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **replaced);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *appendChild )( 
            __RPC__in IHTMLDOMNode * This,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *newChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeName )( 
            __RPC__in IHTMLDOMNode * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_nodeValue )( 
            __RPC__in IHTMLDOMNode * This,
            /* [in] */ VARIANT v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeValue )( 
            __RPC__in IHTMLDOMNode * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_firstChild )( 
            __RPC__in IHTMLDOMNode * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lastChild )( 
            __RPC__in IHTMLDOMNode * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_previousSibling )( 
            __RPC__in IHTMLDOMNode * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nextSibling )( 
            __RPC__in IHTMLDOMNode * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p);
        
        END_INTERFACE
    } IHTMLDOMNodeVtbl;

    interface IHTMLDOMNode
    {
        CONST_VTBL struct IHTMLDOMNodeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMNode_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLDOMNode_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLDOMNode_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLDOMNode_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLDOMNode_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLDOMNode_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLDOMNode_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLDOMNode_get_nodeType(This,p)	\
    ( (This)->lpVtbl -> get_nodeType(This,p) ) 

#define IHTMLDOMNode_get_parentNode(This,p)	\
    ( (This)->lpVtbl -> get_parentNode(This,p) ) 

#define IHTMLDOMNode_hasChildNodes(This,fChildren)	\
    ( (This)->lpVtbl -> hasChildNodes(This,fChildren) ) 

#define IHTMLDOMNode_get_childNodes(This,p)	\
    ( (This)->lpVtbl -> get_childNodes(This,p) ) 

#define IHTMLDOMNode_get_attributes(This,p)	\
    ( (This)->lpVtbl -> get_attributes(This,p) ) 

#define IHTMLDOMNode_insertBefore(This,newChild,refChild,node)	\
    ( (This)->lpVtbl -> insertBefore(This,newChild,refChild,node) ) 

#define IHTMLDOMNode_removeChild(This,oldChild,node)	\
    ( (This)->lpVtbl -> removeChild(This,oldChild,node) ) 

#define IHTMLDOMNode_replaceChild(This,newChild,oldChild,node)	\
    ( (This)->lpVtbl -> replaceChild(This,newChild,oldChild,node) ) 

#define IHTMLDOMNode_cloneNode(This,fDeep,clonedNode)	\
    ( (This)->lpVtbl -> cloneNode(This,fDeep,clonedNode) ) 

#define IHTMLDOMNode_removeNode(This,fDeep,removed)	\
    ( (This)->lpVtbl -> removeNode(This,fDeep,removed) ) 

#define IHTMLDOMNode_swapNode(This,otherNode,swappedNode)	\
    ( (This)->lpVtbl -> swapNode(This,otherNode,swappedNode) ) 

#define IHTMLDOMNode_replaceNode(This,replacement,replaced)	\
    ( (This)->lpVtbl -> replaceNode(This,replacement,replaced) ) 

#define IHTMLDOMNode_appendChild(This,newChild,node)	\
    ( (This)->lpVtbl -> appendChild(This,newChild,node) ) 

#define IHTMLDOMNode_get_nodeName(This,p)	\
    ( (This)->lpVtbl -> get_nodeName(This,p) ) 

#define IHTMLDOMNode_put_nodeValue(This,v)	\
    ( (This)->lpVtbl -> put_nodeValue(This,v) ) 

#define IHTMLDOMNode_get_nodeValue(This,p)	\
    ( (This)->lpVtbl -> get_nodeValue(This,p) ) 

#define IHTMLDOMNode_get_firstChild(This,p)	\
    ( (This)->lpVtbl -> get_firstChild(This,p) ) 

#define IHTMLDOMNode_get_lastChild(This,p)	\
    ( (This)->lpVtbl -> get_lastChild(This,p) ) 

#define IHTMLDOMNode_get_previousSibling(This,p)	\
    ( (This)->lpVtbl -> get_previousSibling(This,p) ) 

#define IHTMLDOMNode_get_nextSibling(This,p)	\
    ( (This)->lpVtbl -> get_nextSibling(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLDOMNode_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMNode2_INTERFACE_DEFINED__
#define __IHTMLDOMNode2_INTERFACE_DEFINED__

/* interface IHTMLDOMNode2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMNode2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f80b-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMNode2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ownerDocument( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMNode2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLDOMNode2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLDOMNode2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLDOMNode2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLDOMNode2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLDOMNode2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLDOMNode2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMNode2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ownerDocument )( 
            __RPC__in IHTMLDOMNode2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        END_INTERFACE
    } IHTMLDOMNode2Vtbl;

    interface IHTMLDOMNode2
    {
        CONST_VTBL struct IHTMLDOMNode2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMNode2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLDOMNode2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLDOMNode2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLDOMNode2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLDOMNode2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLDOMNode2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLDOMNode2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLDOMNode2_get_ownerDocument(This,p)	\
    ( (This)->lpVtbl -> get_ownerDocument(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLDOMNode2_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMAttribute_INTERFACE_DEFINED__
#define __IHTMLDOMAttribute_INTERFACE_DEFINED__

/* interface IHTMLDOMAttribute */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4b0-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMAttribute : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeName( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_nodeValue( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeValue( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_specified( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLDOMAttribute * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLDOMAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLDOMAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLDOMAttribute * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLDOMAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLDOMAttribute * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMAttribute * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeName )( 
            __RPC__in IHTMLDOMAttribute * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_nodeValue )( 
            __RPC__in IHTMLDOMAttribute * This,
            /* [in] */ VARIANT v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeValue )( 
            __RPC__in IHTMLDOMAttribute * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_specified )( 
            __RPC__in IHTMLDOMAttribute * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        END_INTERFACE
    } IHTMLDOMAttributeVtbl;

    interface IHTMLDOMAttribute
    {
        CONST_VTBL struct IHTMLDOMAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLDOMAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLDOMAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLDOMAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLDOMAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLDOMAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLDOMAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLDOMAttribute_get_nodeName(This,p)	\
    ( (This)->lpVtbl -> get_nodeName(This,p) ) 

#define IHTMLDOMAttribute_put_nodeValue(This,v)	\
    ( (This)->lpVtbl -> put_nodeValue(This,v) ) 

#define IHTMLDOMAttribute_get_nodeValue(This,p)	\
    ( (This)->lpVtbl -> get_nodeValue(This,p) ) 

#define IHTMLDOMAttribute_get_specified(This,p)	\
    ( (This)->lpVtbl -> get_specified(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLDOMAttribute_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMAttribute2_INTERFACE_DEFINED__
#define __IHTMLDOMAttribute2_INTERFACE_DEFINED__

/* interface IHTMLDOMAttribute2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMAttribute2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f810-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMAttribute2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_expando( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeType( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentNode( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_childNodes( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_firstChild( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_lastChild( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_previousSibling( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nextSibling( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_attributes( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ownerDocument( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertBefore( 
            /* [in] */ __RPC__in_opt IHTMLDOMNode *newChild,
            /* [in][optional] */ VARIANT refChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceChild( 
            /* [in] */ __RPC__in_opt IHTMLDOMNode *newChild,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *oldChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeChild( 
            /* [in] */ __RPC__in_opt IHTMLDOMNode *oldChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE appendChild( 
            /* [in] */ __RPC__in_opt IHTMLDOMNode *newChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hasChildNodes( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *fChildren) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE cloneNode( 
            /* [in] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **clonedNode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMAttribute2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLDOMAttribute2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLDOMAttribute2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMAttribute2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_name )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_value )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_value )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_expando )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeType )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_parentNode )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_childNodes )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_firstChild )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lastChild )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_previousSibling )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nextSibling )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_attributes )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ownerDocument )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *insertBefore )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *newChild,
            /* [in][optional] */ VARIANT refChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *replaceChild )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *newChild,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *oldChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeChild )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *oldChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *appendChild )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [in] */ __RPC__in_opt IHTMLDOMNode *newChild,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *hasChildNodes )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *fChildren);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *cloneNode )( 
            __RPC__in IHTMLDOMAttribute2 * This,
            /* [in] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **clonedNode);
        
        END_INTERFACE
    } IHTMLDOMAttribute2Vtbl;

    interface IHTMLDOMAttribute2
    {
        CONST_VTBL struct IHTMLDOMAttribute2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMAttribute2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLDOMAttribute2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLDOMAttribute2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLDOMAttribute2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLDOMAttribute2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLDOMAttribute2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLDOMAttribute2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLDOMAttribute2_get_name(This,p)	\
    ( (This)->lpVtbl -> get_name(This,p) ) 

#define IHTMLDOMAttribute2_put_value(This,v)	\
    ( (This)->lpVtbl -> put_value(This,v) ) 

#define IHTMLDOMAttribute2_get_value(This,p)	\
    ( (This)->lpVtbl -> get_value(This,p) ) 

#define IHTMLDOMAttribute2_get_expando(This,p)	\
    ( (This)->lpVtbl -> get_expando(This,p) ) 

#define IHTMLDOMAttribute2_get_nodeType(This,p)	\
    ( (This)->lpVtbl -> get_nodeType(This,p) ) 

#define IHTMLDOMAttribute2_get_parentNode(This,p)	\
    ( (This)->lpVtbl -> get_parentNode(This,p) ) 

#define IHTMLDOMAttribute2_get_childNodes(This,p)	\
    ( (This)->lpVtbl -> get_childNodes(This,p) ) 

#define IHTMLDOMAttribute2_get_firstChild(This,p)	\
    ( (This)->lpVtbl -> get_firstChild(This,p) ) 

#define IHTMLDOMAttribute2_get_lastChild(This,p)	\
    ( (This)->lpVtbl -> get_lastChild(This,p) ) 

#define IHTMLDOMAttribute2_get_previousSibling(This,p)	\
    ( (This)->lpVtbl -> get_previousSibling(This,p) ) 

#define IHTMLDOMAttribute2_get_nextSibling(This,p)	\
    ( (This)->lpVtbl -> get_nextSibling(This,p) ) 

#define IHTMLDOMAttribute2_get_attributes(This,p)	\
    ( (This)->lpVtbl -> get_attributes(This,p) ) 

#define IHTMLDOMAttribute2_get_ownerDocument(This,p)	\
    ( (This)->lpVtbl -> get_ownerDocument(This,p) ) 

#define IHTMLDOMAttribute2_insertBefore(This,newChild,refChild,node)	\
    ( (This)->lpVtbl -> insertBefore(This,newChild,refChild,node) ) 

#define IHTMLDOMAttribute2_replaceChild(This,newChild,oldChild,node)	\
    ( (This)->lpVtbl -> replaceChild(This,newChild,oldChild,node) ) 

#define IHTMLDOMAttribute2_removeChild(This,oldChild,node)	\
    ( (This)->lpVtbl -> removeChild(This,oldChild,node) ) 

#define IHTMLDOMAttribute2_appendChild(This,newChild,node)	\
    ( (This)->lpVtbl -> appendChild(This,newChild,node) ) 

#define IHTMLDOMAttribute2_hasChildNodes(This,fChildren)	\
    ( (This)->lpVtbl -> hasChildNodes(This,fChildren) ) 

#define IHTMLDOMAttribute2_cloneNode(This,fDeep,clonedNode)	\
    ( (This)->lpVtbl -> cloneNode(This,fDeep,clonedNode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLDOMAttribute2_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMAttribute3_INTERFACE_DEFINED__
#define __IHTMLDOMAttribute3_INTERFACE_DEFINED__

/* interface IHTMLDOMAttribute3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMAttribute3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("30510468-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMAttribute3 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_nodeValue( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeValue( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_specified( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ownerElement( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement2 **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMAttribute3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLDOMAttribute3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLDOMAttribute3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLDOMAttribute3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLDOMAttribute3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLDOMAttribute3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLDOMAttribute3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMAttribute3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_nodeValue )( 
            __RPC__in IHTMLDOMAttribute3 * This,
            /* [in] */ VARIANT v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeValue )( 
            __RPC__in IHTMLDOMAttribute3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_value )( 
            __RPC__in IHTMLDOMAttribute3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_value )( 
            __RPC__in IHTMLDOMAttribute3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_specified )( 
            __RPC__in IHTMLDOMAttribute3 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ownerElement )( 
            __RPC__in IHTMLDOMAttribute3 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement2 **p);
        
        END_INTERFACE
    } IHTMLDOMAttribute3Vtbl;

    interface IHTMLDOMAttribute3
    {
        CONST_VTBL struct IHTMLDOMAttribute3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMAttribute3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLDOMAttribute3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLDOMAttribute3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLDOMAttribute3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLDOMAttribute3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLDOMAttribute3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLDOMAttribute3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLDOMAttribute3_put_nodeValue(This,v)	\
    ( (This)->lpVtbl -> put_nodeValue(This,v) ) 

#define IHTMLDOMAttribute3_get_nodeValue(This,p)	\
    ( (This)->lpVtbl -> get_nodeValue(This,p) ) 

#define IHTMLDOMAttribute3_put_value(This,v)	\
    ( (This)->lpVtbl -> put_value(This,v) ) 

#define IHTMLDOMAttribute3_get_value(This,p)	\
    ( (This)->lpVtbl -> get_value(This,p) ) 

#define IHTMLDOMAttribute3_get_specified(This,p)	\
    ( (This)->lpVtbl -> get_specified(This,p) ) 

#define IHTMLDOMAttribute3_get_ownerElement(This,p)	\
    ( (This)->lpVtbl -> get_ownerElement(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLDOMAttribute3_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMTextNode_INTERFACE_DEFINED__
#define __IHTMLDOMTextNode_INTERFACE_DEFINED__

/* interface IHTMLDOMTextNode */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMTextNode;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4b1-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMTextNode : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_data( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_data( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *String) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE splitText( 
            /* [in] */ long offset,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **pRetNode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMTextNodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLDOMTextNode * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLDOMTextNode * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLDOMTextNode * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLDOMTextNode * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLDOMTextNode * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLDOMTextNode * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMTextNode * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_data )( 
            __RPC__in IHTMLDOMTextNode * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_data )( 
            __RPC__in IHTMLDOMTextNode * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *toString )( 
            __RPC__in IHTMLDOMTextNode * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *String);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLDOMTextNode * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *splitText )( 
            __RPC__in IHTMLDOMTextNode * This,
            /* [in] */ long offset,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMNode **pRetNode);
        
        END_INTERFACE
    } IHTMLDOMTextNodeVtbl;

    interface IHTMLDOMTextNode
    {
        CONST_VTBL struct IHTMLDOMTextNodeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMTextNode_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLDOMTextNode_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLDOMTextNode_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLDOMTextNode_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLDOMTextNode_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLDOMTextNode_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLDOMTextNode_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLDOMTextNode_put_data(This,v)	\
    ( (This)->lpVtbl -> put_data(This,v) ) 

#define IHTMLDOMTextNode_get_data(This,p)	\
    ( (This)->lpVtbl -> get_data(This,p) ) 

#define IHTMLDOMTextNode_toString(This,String)	\
    ( (This)->lpVtbl -> toString(This,String) ) 

#define IHTMLDOMTextNode_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#define IHTMLDOMTextNode_splitText(This,offset,pRetNode)	\
    ( (This)->lpVtbl -> splitText(This,offset,pRetNode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLDOMTextNode_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMTextNode2_INTERFACE_DEFINED__
#define __IHTMLDOMTextNode2_INTERFACE_DEFINED__

/* interface IHTMLDOMTextNode2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMTextNode2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f809-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMTextNode2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE substringData( 
            /* [in] */ long offset,
            /* [in] */ long Count,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pbstrsubString) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE appendData( 
            /* [in] */ __RPC__in BSTR bstrstring) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertData( 
            /* [in] */ long offset,
            /* [in] */ __RPC__in BSTR bstrstring) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE deleteData( 
            /* [in] */ long offset,
            /* [in] */ long Count) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceData( 
            /* [in] */ long offset,
            /* [in] */ long Count,
            /* [in] */ __RPC__in BSTR bstrstring) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMTextNode2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLDOMTextNode2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLDOMTextNode2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLDOMTextNode2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLDOMTextNode2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLDOMTextNode2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLDOMTextNode2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMTextNode2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *substringData )( 
            __RPC__in IHTMLDOMTextNode2 * This,
            /* [in] */ long offset,
            /* [in] */ long Count,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pbstrsubString);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *appendData )( 
            __RPC__in IHTMLDOMTextNode2 * This,
            /* [in] */ __RPC__in BSTR bstrstring);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *insertData )( 
            __RPC__in IHTMLDOMTextNode2 * This,
            /* [in] */ long offset,
            /* [in] */ __RPC__in BSTR bstrstring);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *deleteData )( 
            __RPC__in IHTMLDOMTextNode2 * This,
            /* [in] */ long offset,
            /* [in] */ long Count);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *replaceData )( 
            __RPC__in IHTMLDOMTextNode2 * This,
            /* [in] */ long offset,
            /* [in] */ long Count,
            /* [in] */ __RPC__in BSTR bstrstring);
        
        END_INTERFACE
    } IHTMLDOMTextNode2Vtbl;

    interface IHTMLDOMTextNode2
    {
        CONST_VTBL struct IHTMLDOMTextNode2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMTextNode2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLDOMTextNode2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLDOMTextNode2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLDOMTextNode2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLDOMTextNode2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLDOMTextNode2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLDOMTextNode2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLDOMTextNode2_substringData(This,offset,Count,pbstrsubString)	\
    ( (This)->lpVtbl -> substringData(This,offset,Count,pbstrsubString) ) 

#define IHTMLDOMTextNode2_appendData(This,bstrstring)	\
    ( (This)->lpVtbl -> appendData(This,bstrstring) ) 

#define IHTMLDOMTextNode2_insertData(This,offset,bstrstring)	\
    ( (This)->lpVtbl -> insertData(This,offset,bstrstring) ) 

#define IHTMLDOMTextNode2_deleteData(This,offset,Count)	\
    ( (This)->lpVtbl -> deleteData(This,offset,Count) ) 

#define IHTMLDOMTextNode2_replaceData(This,offset,Count,bstrstring)	\
    ( (This)->lpVtbl -> replaceData(This,offset,Count,bstrstring) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLDOMTextNode2_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMImplementation_INTERFACE_DEFINED__
#define __IHTMLDOMImplementation_INTERFACE_DEFINED__

/* interface IHTMLDOMImplementation */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMImplementation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f80d-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMImplementation : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hasFeature( 
            /* [in] */ __RPC__in BSTR bstrfeature,
            /* [in][optional] */ VARIANT version,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfHasFeature) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMImplementationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLDOMImplementation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLDOMImplementation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLDOMImplementation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLDOMImplementation * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLDOMImplementation * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLDOMImplementation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMImplementation * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *hasFeature )( 
            __RPC__in IHTMLDOMImplementation * This,
            /* [in] */ __RPC__in BSTR bstrfeature,
            /* [in][optional] */ VARIANT version,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfHasFeature);
        
        END_INTERFACE
    } IHTMLDOMImplementationVtbl;

    interface IHTMLDOMImplementation
    {
        CONST_VTBL struct IHTMLDOMImplementationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMImplementation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLDOMImplementation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLDOMImplementation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLDOMImplementation_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLDOMImplementation_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLDOMImplementation_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLDOMImplementation_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLDOMImplementation_hasFeature(This,bstrfeature,version,pfHasFeature)	\
    ( (This)->lpVtbl -> hasFeature(This,bstrfeature,version,pfHasFeature) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLDOMImplementation_INTERFACE_DEFINED__ */


#ifndef __DispHTMLDOMAttribute_DISPINTERFACE_DEFINED__
#define __DispHTMLDOMAttribute_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLDOMAttribute */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLDOMAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f564-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLDOMAttribute : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLDOMAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLDOMAttribute * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLDOMAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLDOMAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLDOMAttribute * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLDOMAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLDOMAttribute * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLDOMAttribute * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLDOMAttributeVtbl;

    interface DispHTMLDOMAttribute
    {
        CONST_VTBL struct DispHTMLDOMAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLDOMAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLDOMAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLDOMAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLDOMAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLDOMAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLDOMAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLDOMAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLDOMAttribute_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLDOMAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f4b2-98b5-11cf-bb82-00aa00bdce0b")
HTMLDOMAttribute;
#endif

#ifndef __DispHTMLDOMTextNode_DISPINTERFACE_DEFINED__
#define __DispHTMLDOMTextNode_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLDOMTextNode */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLDOMTextNode;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f565-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLDOMTextNode : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLDOMTextNodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLDOMTextNode * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLDOMTextNode * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLDOMTextNode * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLDOMTextNode * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLDOMTextNode * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLDOMTextNode * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLDOMTextNode * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLDOMTextNodeVtbl;

    interface DispHTMLDOMTextNode
    {
        CONST_VTBL struct DispHTMLDOMTextNodeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLDOMTextNode_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLDOMTextNode_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLDOMTextNode_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLDOMTextNode_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLDOMTextNode_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLDOMTextNode_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLDOMTextNode_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLDOMTextNode_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLDOMTextNode;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f4ba-98b5-11cf-bb82-00aa00bdce0b")
HTMLDOMTextNode;
#endif

#ifndef __DispHTMLDOMImplementation_DISPINTERFACE_DEFINED__
#define __DispHTMLDOMImplementation_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLDOMImplementation */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLDOMImplementation;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f58f-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLDOMImplementation : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLDOMImplementationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLDOMImplementation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLDOMImplementation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLDOMImplementation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLDOMImplementation * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLDOMImplementation * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLDOMImplementation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLDOMImplementation * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLDOMImplementationVtbl;

    interface DispHTMLDOMImplementation
    {
        CONST_VTBL struct DispHTMLDOMImplementationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLDOMImplementation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLDOMImplementation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLDOMImplementation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLDOMImplementation_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLDOMImplementation_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLDOMImplementation_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLDOMImplementation_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLDOMImplementation_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLDOMImplementation;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f80e-98b5-11cf-bb82-00aa00bdce0b")
HTMLDOMImplementation;
#endif

#ifndef __IHTMLAttributeCollection_INTERFACE_DEFINED__
#define __IHTMLAttributeCollection_INTERFACE_DEFINED__

/* interface IHTMLAttributeCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAttributeCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4c3-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAttributeCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in][optional] */ __RPC__in VARIANT *name,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLAttributeCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLAttributeCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLAttributeCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLAttributeCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLAttributeCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLAttributeCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLAttributeCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLAttributeCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLAttributeCollection * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__newEnum )( 
            __RPC__in IHTMLAttributeCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            __RPC__in IHTMLAttributeCollection * This,
            /* [in][optional] */ __RPC__in VARIANT *name,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp);
        
        END_INTERFACE
    } IHTMLAttributeCollectionVtbl;

    interface IHTMLAttributeCollection
    {
        CONST_VTBL struct IHTMLAttributeCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLAttributeCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLAttributeCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLAttributeCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLAttributeCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLAttributeCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLAttributeCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLAttributeCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLAttributeCollection_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#define IHTMLAttributeCollection_get__newEnum(This,p)	\
    ( (This)->lpVtbl -> get__newEnum(This,p) ) 

#define IHTMLAttributeCollection_item(This,name,pdisp)	\
    ( (This)->lpVtbl -> item(This,name,pdisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLAttributeCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLAttributeCollection2_INTERFACE_DEFINED__
#define __IHTMLAttributeCollection2_INTERFACE_DEFINED__

/* interface IHTMLAttributeCollection2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAttributeCollection2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f80a-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAttributeCollection2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getNamedItem( 
            /* [in] */ __RPC__in BSTR bstrName,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **newretNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setNamedItem( 
            /* [in] */ __RPC__in_opt IHTMLDOMAttribute *ppNode,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **newretNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeNamedItem( 
            /* [in] */ __RPC__in BSTR bstrName,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **newretNode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLAttributeCollection2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLAttributeCollection2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLAttributeCollection2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLAttributeCollection2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLAttributeCollection2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLAttributeCollection2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLAttributeCollection2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLAttributeCollection2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getNamedItem )( 
            __RPC__in IHTMLAttributeCollection2 * This,
            /* [in] */ __RPC__in BSTR bstrName,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **newretNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setNamedItem )( 
            __RPC__in IHTMLAttributeCollection2 * This,
            /* [in] */ __RPC__in_opt IHTMLDOMAttribute *ppNode,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **newretNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeNamedItem )( 
            __RPC__in IHTMLAttributeCollection2 * This,
            /* [in] */ __RPC__in BSTR bstrName,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **newretNode);
        
        END_INTERFACE
    } IHTMLAttributeCollection2Vtbl;

    interface IHTMLAttributeCollection2
    {
        CONST_VTBL struct IHTMLAttributeCollection2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLAttributeCollection2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLAttributeCollection2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLAttributeCollection2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLAttributeCollection2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLAttributeCollection2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLAttributeCollection2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLAttributeCollection2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLAttributeCollection2_getNamedItem(This,bstrName,newretNode)	\
    ( (This)->lpVtbl -> getNamedItem(This,bstrName,newretNode) ) 

#define IHTMLAttributeCollection2_setNamedItem(This,ppNode,newretNode)	\
    ( (This)->lpVtbl -> setNamedItem(This,ppNode,newretNode) ) 

#define IHTMLAttributeCollection2_removeNamedItem(This,bstrName,newretNode)	\
    ( (This)->lpVtbl -> removeNamedItem(This,bstrName,newretNode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLAttributeCollection2_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMChildrenCollection_INTERFACE_DEFINED__
#define __IHTMLDOMChildrenCollection_INTERFACE_DEFINED__

/* interface IHTMLDOMChildrenCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMChildrenCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f5ab-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMChildrenCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ long index,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMChildrenCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLDOMChildrenCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLDOMChildrenCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLDOMChildrenCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLDOMChildrenCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLDOMChildrenCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLDOMChildrenCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMChildrenCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLDOMChildrenCollection * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__newEnum )( 
            __RPC__in IHTMLDOMChildrenCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            __RPC__in IHTMLDOMChildrenCollection * This,
            /* [in] */ long index,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **ppItem);
        
        END_INTERFACE
    } IHTMLDOMChildrenCollectionVtbl;

    interface IHTMLDOMChildrenCollection
    {
        CONST_VTBL struct IHTMLDOMChildrenCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMChildrenCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLDOMChildrenCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLDOMChildrenCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLDOMChildrenCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLDOMChildrenCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLDOMChildrenCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLDOMChildrenCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLDOMChildrenCollection_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#define IHTMLDOMChildrenCollection_get__newEnum(This,p)	\
    ( (This)->lpVtbl -> get__newEnum(This,p) ) 

#define IHTMLDOMChildrenCollection_item(This,index,ppItem)	\
    ( (This)->lpVtbl -> item(This,index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLDOMChildrenCollection_INTERFACE_DEFINED__ */


#ifndef __DispHTMLAttributeCollection_DISPINTERFACE_DEFINED__
#define __DispHTMLAttributeCollection_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLAttributeCollection */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLAttributeCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f56c-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLAttributeCollection : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLAttributeCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLAttributeCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLAttributeCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLAttributeCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLAttributeCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLAttributeCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLAttributeCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLAttributeCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLAttributeCollectionVtbl;

    interface DispHTMLAttributeCollection
    {
        CONST_VTBL struct DispHTMLAttributeCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLAttributeCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLAttributeCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLAttributeCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLAttributeCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLAttributeCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLAttributeCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLAttributeCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLAttributeCollection_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLAttributeCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f4cc-98b5-11cf-bb82-00aa00bdce0b")
HTMLAttributeCollection;
#endif

#ifndef __DispStaticNodeList_DISPINTERFACE_DEFINED__
#define __DispStaticNodeList_DISPINTERFACE_DEFINED__

/* dispinterface DispStaticNodeList */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispStaticNodeList;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f59b-98b5-11cf-bb82-00aa00bdce0b")
    DispStaticNodeList : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispStaticNodeListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispStaticNodeList * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispStaticNodeList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispStaticNodeList * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispStaticNodeList * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispStaticNodeList * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispStaticNodeList * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispStaticNodeList * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispStaticNodeListVtbl;

    interface DispStaticNodeList
    {
        CONST_VTBL struct DispStaticNodeListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispStaticNodeList_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispStaticNodeList_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispStaticNodeList_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispStaticNodeList_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispStaticNodeList_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispStaticNodeList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispStaticNodeList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispStaticNodeList_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_StaticNodeList;

#ifdef __cplusplus

class DECLSPEC_UUID("30510467-98b5-11cf-bb82-00aa00bdce0b")
StaticNodeList;
#endif

#ifndef __DispDOMChildrenCollection_DISPINTERFACE_DEFINED__
#define __DispDOMChildrenCollection_DISPINTERFACE_DEFINED__

/* dispinterface DispDOMChildrenCollection */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispDOMChildrenCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f577-98b5-11cf-bb82-00aa00bdce0b")
    DispDOMChildrenCollection : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispDOMChildrenCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispDOMChildrenCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispDOMChildrenCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispDOMChildrenCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispDOMChildrenCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispDOMChildrenCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispDOMChildrenCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispDOMChildrenCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispDOMChildrenCollectionVtbl;

    interface DispDOMChildrenCollection
    {
        CONST_VTBL struct DispDOMChildrenCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispDOMChildrenCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispDOMChildrenCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispDOMChildrenCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispDOMChildrenCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispDOMChildrenCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispDOMChildrenCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispDOMChildrenCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispDOMChildrenCollection_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_DOMChildrenCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f5aa-98b5-11cf-bb82-00aa00bdce0b")
DOMChildrenCollection;
#endif

#ifndef __HTMLElementEvents3_DISPINTERFACE_DEFINED__
#define __HTMLElementEvents3_DISPINTERFACE_DEFINED__

/* dispinterface HTMLElementEvents3 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLElementEvents3;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f59f-98b5-11cf-bb82-00aa00bdce0b")
    HTMLElementEvents3 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct HTMLElementEvents3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in HTMLElementEvents3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in HTMLElementEvents3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in HTMLElementEvents3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in HTMLElementEvents3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in HTMLElementEvents3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in HTMLElementEvents3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            HTMLElementEvents3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } HTMLElementEvents3Vtbl;

    interface HTMLElementEvents3
    {
        CONST_VTBL struct HTMLElementEvents3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLElementEvents3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define HTMLElementEvents3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define HTMLElementEvents3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define HTMLElementEvents3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define HTMLElementEvents3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define HTMLElementEvents3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define HTMLElementEvents3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __HTMLElementEvents3_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLElementEvents2_DISPINTERFACE_DEFINED__
#define __HTMLElementEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLElementEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLElementEvents2;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f60f-98b5-11cf-bb82-00aa00bdce0b")
    HTMLElementEvents2 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct HTMLElementEvents2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in HTMLElementEvents2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in HTMLElementEvents2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in HTMLElementEvents2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in HTMLElementEvents2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in HTMLElementEvents2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in HTMLElementEvents2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            HTMLElementEvents2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } HTMLElementEvents2Vtbl;

    interface HTMLElementEvents2
    {
        CONST_VTBL struct HTMLElementEvents2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLElementEvents2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define HTMLElementEvents2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define HTMLElementEvents2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define HTMLElementEvents2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define HTMLElementEvents2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define HTMLElementEvents2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define HTMLElementEvents2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __HTMLElementEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLElementEvents_DISPINTERFACE_DEFINED__
#define __HTMLElementEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLElementEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLElementEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f33c-98b5-11cf-bb82-00aa00bdce0b")
    HTMLElementEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct HTMLElementEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in HTMLElementEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in HTMLElementEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in HTMLElementEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in HTMLElementEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in HTMLElementEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in HTMLElementEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            HTMLElementEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } HTMLElementEventsVtbl;

    interface HTMLElementEvents
    {
        CONST_VTBL struct HTMLElementEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLElementEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define HTMLElementEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define HTMLElementEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define HTMLElementEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define HTMLElementEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define HTMLElementEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define HTMLElementEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __HTMLElementEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLElement3_INTERFACE_DEFINED__
#define __IHTMLElement3_INTERFACE_DEFINED__

/* interface IHTMLElement3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLElement3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f673-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLElement3 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE mergeAttributes( 
            /* [in] */ __RPC__in_opt IHTMLElement *mergeThis,
            /* [in][optional] */ __RPC__in VARIANT *pvarFlags) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_isMultiLine( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_canHaveHTML( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onlayoutcomplete( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onlayoutcomplete( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onpage( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onpage( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][restricted][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_inflateBlock( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_inflateBlock( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforedeactivate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforedeactivate( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setActive( void) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_contentEditable( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_contentEditable( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_isContentEditable( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_hideFocus( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_hideFocus( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_isDisabled( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmove( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmove( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_oncontrolselect( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_oncontrolselect( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE fireEvent( 
            /* [in] */ __RPC__in BSTR bstrEventName,
            /* [in][optional] */ __RPC__in VARIANT *pvarEventObject,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfCancelled) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onresizestart( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onresizestart( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onresizeend( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onresizeend( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmovestart( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmovestart( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmoveend( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmoveend( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseenter( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseenter( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseleave( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseleave( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onactivate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onactivate( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondeactivate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondeactivate( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE dragDrop( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet) = 0;
        
        virtual /* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_glyphMode( 
            /* [out][retval] */ __RPC__out LONG *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLElement3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLElement3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLElement3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLElement3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLElement3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *mergeAttributes )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ __RPC__in_opt IHTMLElement *mergeThis,
            /* [in][optional] */ __RPC__in VARIANT *pvarFlags);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_isMultiLine )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_canHaveHTML )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onlayoutcomplete )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onlayoutcomplete )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onpage )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onpage )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [nonbrowsable][restricted][hidden][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_inflateBlock )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_inflateBlock )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onbeforedeactivate )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onbeforedeactivate )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setActive )( 
            __RPC__in IHTMLElement3 * This);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_contentEditable )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_contentEditable )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_isContentEditable )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_hideFocus )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_hideFocus )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_disabled )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_disabled )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_isDisabled )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmove )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmove )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_oncontrolselect )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_oncontrolselect )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *fireEvent )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ __RPC__in BSTR bstrEventName,
            /* [in][optional] */ __RPC__in VARIANT *pvarEventObject,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfCancelled);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onresizestart )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onresizestart )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onresizeend )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onresizeend )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmovestart )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmovestart )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmoveend )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmoveend )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmouseenter )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmouseenter )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmouseleave )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmouseleave )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onactivate )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onactivate )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondeactivate )( 
            __RPC__in IHTMLElement3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondeactivate )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *dragDrop )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet);
        
        /* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_glyphMode )( 
            __RPC__in IHTMLElement3 * This,
            /* [out][retval] */ __RPC__out LONG *p);
        
        END_INTERFACE
    } IHTMLElement3Vtbl;

    interface IHTMLElement3
    {
        CONST_VTBL struct IHTMLElement3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLElement3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLElement3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLElement3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLElement3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLElement3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLElement3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLElement3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLElement3_mergeAttributes(This,mergeThis,pvarFlags)	\
    ( (This)->lpVtbl -> mergeAttributes(This,mergeThis,pvarFlags) ) 

#define IHTMLElement3_get_isMultiLine(This,p)	\
    ( (This)->lpVtbl -> get_isMultiLine(This,p) ) 

#define IHTMLElement3_get_canHaveHTML(This,p)	\
    ( (This)->lpVtbl -> get_canHaveHTML(This,p) ) 

#define IHTMLElement3_put_onlayoutcomplete(This,v)	\
    ( (This)->lpVtbl -> put_onlayoutcomplete(This,v) ) 

#define IHTMLElement3_get_onlayoutcomplete(This,p)	\
    ( (This)->lpVtbl -> get_onlayoutcomplete(This,p) ) 

#define IHTMLElement3_put_onpage(This,v)	\
    ( (This)->lpVtbl -> put_onpage(This,v) ) 

#define IHTMLElement3_get_onpage(This,p)	\
    ( (This)->lpVtbl -> get_onpage(This,p) ) 

#define IHTMLElement3_put_inflateBlock(This,v)	\
    ( (This)->lpVtbl -> put_inflateBlock(This,v) ) 

#define IHTMLElement3_get_inflateBlock(This,p)	\
    ( (This)->lpVtbl -> get_inflateBlock(This,p) ) 

#define IHTMLElement3_put_onbeforedeactivate(This,v)	\
    ( (This)->lpVtbl -> put_onbeforedeactivate(This,v) ) 

#define IHTMLElement3_get_onbeforedeactivate(This,p)	\
    ( (This)->lpVtbl -> get_onbeforedeactivate(This,p) ) 

#define IHTMLElement3_setActive(This)	\
    ( (This)->lpVtbl -> setActive(This) ) 

#define IHTMLElement3_put_contentEditable(This,v)	\
    ( (This)->lpVtbl -> put_contentEditable(This,v) ) 

#define IHTMLElement3_get_contentEditable(This,p)	\
    ( (This)->lpVtbl -> get_contentEditable(This,p) ) 

#define IHTMLElement3_get_isContentEditable(This,p)	\
    ( (This)->lpVtbl -> get_isContentEditable(This,p) ) 

#define IHTMLElement3_put_hideFocus(This,v)	\
    ( (This)->lpVtbl -> put_hideFocus(This,v) ) 

#define IHTMLElement3_get_hideFocus(This,p)	\
    ( (This)->lpVtbl -> get_hideFocus(This,p) ) 

#define IHTMLElement3_put_disabled(This,v)	\
    ( (This)->lpVtbl -> put_disabled(This,v) ) 

#define IHTMLElement3_get_disabled(This,p)	\
    ( (This)->lpVtbl -> get_disabled(This,p) ) 

#define IHTMLElement3_get_isDisabled(This,p)	\
    ( (This)->lpVtbl -> get_isDisabled(This,p) ) 

#define IHTMLElement3_put_onmove(This,v)	\
    ( (This)->lpVtbl -> put_onmove(This,v) ) 

#define IHTMLElement3_get_onmove(This,p)	\
    ( (This)->lpVtbl -> get_onmove(This,p) ) 

#define IHTMLElement3_put_oncontrolselect(This,v)	\
    ( (This)->lpVtbl -> put_oncontrolselect(This,v) ) 

#define IHTMLElement3_get_oncontrolselect(This,p)	\
    ( (This)->lpVtbl -> get_oncontrolselect(This,p) ) 

#define IHTMLElement3_fireEvent(This,bstrEventName,pvarEventObject,pfCancelled)	\
    ( (This)->lpVtbl -> fireEvent(This,bstrEventName,pvarEventObject,pfCancelled) ) 

#define IHTMLElement3_put_onresizestart(This,v)	\
    ( (This)->lpVtbl -> put_onresizestart(This,v) ) 

#define IHTMLElement3_get_onresizestart(This,p)	\
    ( (This)->lpVtbl -> get_onresizestart(This,p) ) 

#define IHTMLElement3_put_onresizeend(This,v)	\
    ( (This)->lpVtbl -> put_onresizeend(This,v) ) 

#define IHTMLElement3_get_onresizeend(This,p)	\
    ( (This)->lpVtbl -> get_onresizeend(This,p) ) 

#define IHTMLElement3_put_onmovestart(This,v)	\
    ( (This)->lpVtbl -> put_onmovestart(This,v) ) 

#define IHTMLElement3_get_onmovestart(This,p)	\
    ( (This)->lpVtbl -> get_onmovestart(This,p) ) 

#define IHTMLElement3_put_onmoveend(This,v)	\
    ( (This)->lpVtbl -> put_onmoveend(This,v) ) 

#define IHTMLElement3_get_onmoveend(This,p)	\
    ( (This)->lpVtbl -> get_onmoveend(This,p) ) 

#define IHTMLElement3_put_onmouseenter(This,v)	\
    ( (This)->lpVtbl -> put_onmouseenter(This,v) ) 

#define IHTMLElement3_get_onmouseenter(This,p)	\
    ( (This)->lpVtbl -> get_onmouseenter(This,p) ) 

#define IHTMLElement3_put_onmouseleave(This,v)	\
    ( (This)->lpVtbl -> put_onmouseleave(This,v) ) 

#define IHTMLElement3_get_onmouseleave(This,p)	\
    ( (This)->lpVtbl -> get_onmouseleave(This,p) ) 

#define IHTMLElement3_put_onactivate(This,v)	\
    ( (This)->lpVtbl -> put_onactivate(This,v) ) 

#define IHTMLElement3_get_onactivate(This,p)	\
    ( (This)->lpVtbl -> get_onactivate(This,p) ) 

#define IHTMLElement3_put_ondeactivate(This,v)	\
    ( (This)->lpVtbl -> put_ondeactivate(This,v) ) 

#define IHTMLElement3_get_ondeactivate(This,p)	\
    ( (This)->lpVtbl -> get_ondeactivate(This,p) ) 

#define IHTMLElement3_dragDrop(This,pfRet)	\
    ( (This)->lpVtbl -> dragDrop(This,pfRet) ) 

#define IHTMLElement3_get_glyphMode(This,p)	\
    ( (This)->lpVtbl -> get_glyphMode(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLElement3_INTERFACE_DEFINED__ */


#ifndef __IHTMLElement4_INTERFACE_DEFINED__
#define __IHTMLElement4_INTERFACE_DEFINED__

/* interface IHTMLElement4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLElement4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f80f-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLElement4 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmousewheel( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmousewheel( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE normalize( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttributeNode( 
            /* [in] */ __RPC__in BSTR bstrname,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppAttribute) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttributeNode( 
            /* [in] */ __RPC__in_opt IHTMLDOMAttribute *pattr,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppretAttribute) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttributeNode( 
            /* [in] */ __RPC__in_opt IHTMLDOMAttribute *pattr,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppretAttribute) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeactivate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeactivate( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onfocusin( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onfocusin( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onfocusout( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onfocusout( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLElement4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLElement4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLElement4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLElement4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLElement4 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLElement4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLElement4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLElement4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmousewheel )( 
            __RPC__in IHTMLElement4 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmousewheel )( 
            __RPC__in IHTMLElement4 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *normalize )( 
            __RPC__in IHTMLElement4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getAttributeNode )( 
            __RPC__in IHTMLElement4 * This,
            /* [in] */ __RPC__in BSTR bstrname,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppAttribute);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setAttributeNode )( 
            __RPC__in IHTMLElement4 * This,
            /* [in] */ __RPC__in_opt IHTMLDOMAttribute *pattr,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppretAttribute);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeAttributeNode )( 
            __RPC__in IHTMLElement4 * This,
            /* [in] */ __RPC__in_opt IHTMLDOMAttribute *pattr,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute **ppretAttribute);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onbeforeactivate )( 
            __RPC__in IHTMLElement4 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onbeforeactivate )( 
            __RPC__in IHTMLElement4 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onfocusin )( 
            __RPC__in IHTMLElement4 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onfocusin )( 
            __RPC__in IHTMLElement4 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onfocusout )( 
            __RPC__in IHTMLElement4 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onfocusout )( 
            __RPC__in IHTMLElement4 * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        END_INTERFACE
    } IHTMLElement4Vtbl;

    interface IHTMLElement4
    {
        CONST_VTBL struct IHTMLElement4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLElement4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLElement4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLElement4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLElement4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLElement4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLElement4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLElement4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLElement4_put_onmousewheel(This,v)	\
    ( (This)->lpVtbl -> put_onmousewheel(This,v) ) 

#define IHTMLElement4_get_onmousewheel(This,p)	\
    ( (This)->lpVtbl -> get_onmousewheel(This,p) ) 

#define IHTMLElement4_normalize(This)	\
    ( (This)->lpVtbl -> normalize(This) ) 

#define IHTMLElement4_getAttributeNode(This,bstrname,ppAttribute)	\
    ( (This)->lpVtbl -> getAttributeNode(This,bstrname,ppAttribute) ) 

#define IHTMLElement4_setAttributeNode(This,pattr,ppretAttribute)	\
    ( (This)->lpVtbl -> setAttributeNode(This,pattr,ppretAttribute) ) 

#define IHTMLElement4_removeAttributeNode(This,pattr,ppretAttribute)	\
    ( (This)->lpVtbl -> removeAttributeNode(This,pattr,ppretAttribute) ) 

#define IHTMLElement4_put_onbeforeactivate(This,v)	\
    ( (This)->lpVtbl -> put_onbeforeactivate(This,v) ) 

#define IHTMLElement4_get_onbeforeactivate(This,p)	\
    ( (This)->lpVtbl -> get_onbeforeactivate(This,p) ) 

#define IHTMLElement4_put_onfocusin(This,v)	\
    ( (This)->lpVtbl -> put_onfocusin(This,v) ) 

#define IHTMLElement4_get_onfocusin(This,p)	\
    ( (This)->lpVtbl -> get_onfocusin(This,p) ) 

#define IHTMLElement4_put_onfocusout(This,v)	\
    ( (This)->lpVtbl -> put_onfocusout(This,v) ) 

#define IHTMLElement4_get_onfocusout(This,p)	\
    ( (This)->lpVtbl -> get_onfocusout(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLElement4_INTERFACE_DEFINED__ */


#ifndef __IElementSelector_INTERFACE_DEFINED__
#define __IElementSelector_INTERFACE_DEFINED__

/* interface IElementSelector */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IElementSelector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("30510463-98b5-11cf-bb82-00aa00bdce0b")
    IElementSelector : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE querySelector( 
            /* [in] */ __RPC__in BSTR v,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **pel) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE querySelectorAll( 
            /* [in] */ __RPC__in BSTR v,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMChildrenCollection **pel) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementSelectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IElementSelector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IElementSelector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IElementSelector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IElementSelector * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IElementSelector * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IElementSelector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IElementSelector * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *querySelector )( 
            __RPC__in IElementSelector * This,
            /* [in] */ __RPC__in BSTR v,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **pel);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *querySelectorAll )( 
            __RPC__in IElementSelector * This,
            /* [in] */ __RPC__in BSTR v,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMChildrenCollection **pel);
        
        END_INTERFACE
    } IElementSelectorVtbl;

    interface IElementSelector
    {
        CONST_VTBL struct IElementSelectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementSelector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IElementSelector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IElementSelector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IElementSelector_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IElementSelector_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IElementSelector_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IElementSelector_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IElementSelector_querySelector(This,v,pel)	\
    ( (This)->lpVtbl -> querySelector(This,v,pel) ) 

#define IElementSelector_querySelectorAll(This,v,pel)	\
    ( (This)->lpVtbl -> querySelectorAll(This,v,pel) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IElementSelector_INTERFACE_DEFINED__ */


#ifndef __IHTMLElementRender_INTERFACE_DEFINED__
#define __IHTMLElementRender_INTERFACE_DEFINED__

/* interface IHTMLElementRender */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLElementRender;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f669-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLElementRender : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE DrawToDC( 
            /* [in] */ __RPC__in HDC hDC) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDocumentPrinter( 
            /* [in] */ __RPC__in BSTR bstrPrinterName,
            /* [in] */ __RPC__in HDC hDC) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLElementRenderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLElementRender * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLElementRender * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLElementRender * This);
        
        HRESULT ( STDMETHODCALLTYPE *DrawToDC )( 
            __RPC__in IHTMLElementRender * This,
            /* [in] */ __RPC__in HDC hDC);
        
        HRESULT ( STDMETHODCALLTYPE *SetDocumentPrinter )( 
            __RPC__in IHTMLElementRender * This,
            /* [in] */ __RPC__in BSTR bstrPrinterName,
            /* [in] */ __RPC__in HDC hDC);
        
        END_INTERFACE
    } IHTMLElementRenderVtbl;

    interface IHTMLElementRender
    {
        CONST_VTBL struct IHTMLElementRenderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLElementRender_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLElementRender_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLElementRender_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLElementRender_DrawToDC(This,hDC)	\
    ( (This)->lpVtbl -> DrawToDC(This,hDC) ) 

#define IHTMLElementRender_SetDocumentPrinter(This,bstrPrinterName,hDC)	\
    ( (This)->lpVtbl -> SetDocumentPrinter(This,bstrPrinterName,hDC) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLElementRender_INTERFACE_DEFINED__ */


#ifndef __IHTMLUniqueName_INTERFACE_DEFINED__
#define __IHTMLUniqueName_INTERFACE_DEFINED__

/* interface IHTMLUniqueName */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLUniqueName;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4d0-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLUniqueName : public IDispatch
    {
    public:
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_uniqueNumber( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_uniqueID( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLUniqueNameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLUniqueName * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLUniqueName * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLUniqueName * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLUniqueName * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLUniqueName * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLUniqueName * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLUniqueName * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_uniqueNumber )( 
            __RPC__in IHTMLUniqueName * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_uniqueID )( 
            __RPC__in IHTMLUniqueName * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLUniqueNameVtbl;

    interface IHTMLUniqueName
    {
        CONST_VTBL struct IHTMLUniqueNameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLUniqueName_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLUniqueName_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLUniqueName_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLUniqueName_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLUniqueName_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLUniqueName_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLUniqueName_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLUniqueName_get_uniqueNumber(This,p)	\
    ( (This)->lpVtbl -> get_uniqueNumber(This,p) ) 

#define IHTMLUniqueName_get_uniqueID(This,p)	\
    ( (This)->lpVtbl -> get_uniqueID(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLUniqueName_INTERFACE_DEFINED__ */


#ifndef __IHTMLElement5_INTERFACE_DEFINED__
#define __IHTMLElement5_INTERFACE_DEFINED__

/* interface IHTMLElement5 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLElement5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3051045d-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLElement5 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttributeNode( 
            /* [in] */ __RPC__in BSTR bstrname,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute2 **ppretAttribute) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttributeNode( 
            /* [in] */ __RPC__in_opt IHTMLDOMAttribute2 *pattr,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute2 **ppretAttribute) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttributeNode( 
            /* [in] */ __RPC__in_opt IHTMLDOMAttribute2 *pattr,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute2 **ppretAttribute) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hasAttribute( 
            /* [in] */ __RPC__in BSTR name,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfHasAttribute) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_role( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_role( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaBusy( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaBusy( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaChecked( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaChecked( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaDisabled( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaDisabled( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaExpanded( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaExpanded( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaHaspopup( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaHaspopup( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaHidden( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaHidden( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaInvalid( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaInvalid( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaMultiselectable( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaMultiselectable( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaPressed( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaPressed( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaReadonly( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaReadonly( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaRequired( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaRequired( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaSecret( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaSecret( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaSelected( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaSelected( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [out][retval] */ __RPC__out VARIANT *AttributeValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttribute( 
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_attributes( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLAttributeCollection3 **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaValuenow( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaValuenow( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaPosinset( 
            /* [in] */ short v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaPosinset( 
            /* [out][retval] */ __RPC__out short *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaSetsize( 
            /* [in] */ short v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaSetsize( 
            /* [out][retval] */ __RPC__out short *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaLevel( 
            /* [in] */ short v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaLevel( 
            /* [out][retval] */ __RPC__out short *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaValuemin( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaValuemin( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaValuemax( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaValuemax( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaControls( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaControls( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaDescribedby( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaDescribedby( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaFlowto( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaFlowto( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaLabelledby( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaLabelledby( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaActivedescendant( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaActivedescendant( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaOwns( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaOwns( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hasAttributes( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfHasAttributes) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaLive( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaLive( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ariaRelevant( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ariaRelevant( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLElement5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLElement5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLElement5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLElement5 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLElement5 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getAttributeNode )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR bstrname,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute2 **ppretAttribute);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setAttributeNode )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in_opt IHTMLDOMAttribute2 *pattr,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute2 **ppretAttribute);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeAttributeNode )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in_opt IHTMLDOMAttribute2 *pattr,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDOMAttribute2 **ppretAttribute);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *hasAttribute )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR name,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfHasAttribute);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_role )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_role )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaBusy )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaBusy )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaChecked )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaChecked )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaDisabled )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaDisabled )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaExpanded )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaExpanded )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaHaspopup )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaHaspopup )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaHidden )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaHidden )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaInvalid )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaInvalid )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaMultiselectable )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaMultiselectable )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaPressed )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaPressed )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaReadonly )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaReadonly )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaRequired )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaRequired )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaSecret )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaSecret )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaSelected )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaSelected )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getAttribute )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [out][retval] */ __RPC__out VARIANT *AttributeValue);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setAttribute )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeAttribute )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR strAttributeName,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfSuccess);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_attributes )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLAttributeCollection3 **p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaValuenow )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaValuenow )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaPosinset )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ short v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaPosinset )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__out short *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaSetsize )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ short v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaSetsize )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__out short *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaLevel )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ short v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaLevel )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__out short *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaValuemin )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaValuemin )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaValuemax )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaValuemax )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaControls )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaControls )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaDescribedby )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaDescribedby )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaFlowto )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaFlowto )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaLabelledby )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaLabelledby )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaActivedescendant )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaActivedescendant )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaOwns )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaOwns )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *hasAttributes )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfHasAttributes);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaLive )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaLive )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ariaRelevant )( 
            __RPC__in IHTMLElement5 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ariaRelevant )( 
            __RPC__in IHTMLElement5 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLElement5Vtbl;

    interface IHTMLElement5
    {
        CONST_VTBL struct IHTMLElement5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLElement5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLElement5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLElement5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLElement5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLElement5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLElement5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLElement5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLElement5_getAttributeNode(This,bstrname,ppretAttribute)	\
    ( (This)->lpVtbl -> getAttributeNode(This,bstrname,ppretAttribute) ) 

#define IHTMLElement5_setAttributeNode(This,pattr,ppretAttribute)	\
    ( (This)->lpVtbl -> setAttributeNode(This,pattr,ppretAttribute) ) 

#define IHTMLElement5_removeAttributeNode(This,pattr,ppretAttribute)	\
    ( (This)->lpVtbl -> removeAttributeNode(This,pattr,ppretAttribute) ) 

#define IHTMLElement5_hasAttribute(This,name,pfHasAttribute)	\
    ( (This)->lpVtbl -> hasAttribute(This,name,pfHasAttribute) ) 

#define IHTMLElement5_put_role(This,v)	\
    ( (This)->lpVtbl -> put_role(This,v) ) 

#define IHTMLElement5_get_role(This,p)	\
    ( (This)->lpVtbl -> get_role(This,p) ) 

#define IHTMLElement5_put_ariaBusy(This,v)	\
    ( (This)->lpVtbl -> put_ariaBusy(This,v) ) 

#define IHTMLElement5_get_ariaBusy(This,p)	\
    ( (This)->lpVtbl -> get_ariaBusy(This,p) ) 

#define IHTMLElement5_put_ariaChecked(This,v)	\
    ( (This)->lpVtbl -> put_ariaChecked(This,v) ) 

#define IHTMLElement5_get_ariaChecked(This,p)	\
    ( (This)->lpVtbl -> get_ariaChecked(This,p) ) 

#define IHTMLElement5_put_ariaDisabled(This,v)	\
    ( (This)->lpVtbl -> put_ariaDisabled(This,v) ) 

#define IHTMLElement5_get_ariaDisabled(This,p)	\
    ( (This)->lpVtbl -> get_ariaDisabled(This,p) ) 

#define IHTMLElement5_put_ariaExpanded(This,v)	\
    ( (This)->lpVtbl -> put_ariaExpanded(This,v) ) 

#define IHTMLElement5_get_ariaExpanded(This,p)	\
    ( (This)->lpVtbl -> get_ariaExpanded(This,p) ) 

#define IHTMLElement5_put_ariaHaspopup(This,v)	\
    ( (This)->lpVtbl -> put_ariaHaspopup(This,v) ) 

#define IHTMLElement5_get_ariaHaspopup(This,p)	\
    ( (This)->lpVtbl -> get_ariaHaspopup(This,p) ) 

#define IHTMLElement5_put_ariaHidden(This,v)	\
    ( (This)->lpVtbl -> put_ariaHidden(This,v) ) 

#define IHTMLElement5_get_ariaHidden(This,p)	\
    ( (This)->lpVtbl -> get_ariaHidden(This,p) ) 

#define IHTMLElement5_put_ariaInvalid(This,v)	\
    ( (This)->lpVtbl -> put_ariaInvalid(This,v) ) 

#define IHTMLElement5_get_ariaInvalid(This,p)	\
    ( (This)->lpVtbl -> get_ariaInvalid(This,p) ) 

#define IHTMLElement5_put_ariaMultiselectable(This,v)	\
    ( (This)->lpVtbl -> put_ariaMultiselectable(This,v) ) 

#define IHTMLElement5_get_ariaMultiselectable(This,p)	\
    ( (This)->lpVtbl -> get_ariaMultiselectable(This,p) ) 

#define IHTMLElement5_put_ariaPressed(This,v)	\
    ( (This)->lpVtbl -> put_ariaPressed(This,v) ) 

#define IHTMLElement5_get_ariaPressed(This,p)	\
    ( (This)->lpVtbl -> get_ariaPressed(This,p) ) 

#define IHTMLElement5_put_ariaReadonly(This,v)	\
    ( (This)->lpVtbl -> put_ariaReadonly(This,v) ) 

#define IHTMLElement5_get_ariaReadonly(This,p)	\
    ( (This)->lpVtbl -> get_ariaReadonly(This,p) ) 

#define IHTMLElement5_put_ariaRequired(This,v)	\
    ( (This)->lpVtbl -> put_ariaRequired(This,v) ) 

#define IHTMLElement5_get_ariaRequired(This,p)	\
    ( (This)->lpVtbl -> get_ariaRequired(This,p) ) 

#define IHTMLElement5_put_ariaSecret(This,v)	\
    ( (This)->lpVtbl -> put_ariaSecret(This,v) ) 

#define IHTMLElement5_get_ariaSecret(This,p)	\
    ( (This)->lpVtbl -> get_ariaSecret(This,p) ) 

#define IHTMLElement5_put_ariaSelected(This,v)	\
    ( (This)->lpVtbl -> put_ariaSelected(This,v) ) 

#define IHTMLElement5_get_ariaSelected(This,p)	\
    ( (This)->lpVtbl -> get_ariaSelected(This,p) ) 

#define IHTMLElement5_getAttribute(This,strAttributeName,AttributeValue)	\
    ( (This)->lpVtbl -> getAttribute(This,strAttributeName,AttributeValue) ) 

#define IHTMLElement5_setAttribute(This,strAttributeName,AttributeValue)	\
    ( (This)->lpVtbl -> setAttribute(This,strAttributeName,AttributeValue) ) 

#define IHTMLElement5_removeAttribute(This,strAttributeName,pfSuccess)	\
    ( (This)->lpVtbl -> removeAttribute(This,strAttributeName,pfSuccess) ) 

#define IHTMLElement5_get_attributes(This,p)	\
    ( (This)->lpVtbl -> get_attributes(This,p) ) 

#define IHTMLElement5_put_ariaValuenow(This,v)	\
    ( (This)->lpVtbl -> put_ariaValuenow(This,v) ) 

#define IHTMLElement5_get_ariaValuenow(This,p)	\
    ( (This)->lpVtbl -> get_ariaValuenow(This,p) ) 

#define IHTMLElement5_put_ariaPosinset(This,v)	\
    ( (This)->lpVtbl -> put_ariaPosinset(This,v) ) 

#define IHTMLElement5_get_ariaPosinset(This,p)	\
    ( (This)->lpVtbl -> get_ariaPosinset(This,p) ) 

#define IHTMLElement5_put_ariaSetsize(This,v)	\
    ( (This)->lpVtbl -> put_ariaSetsize(This,v) ) 

#define IHTMLElement5_get_ariaSetsize(This,p)	\
    ( (This)->lpVtbl -> get_ariaSetsize(This,p) ) 

#define IHTMLElement5_put_ariaLevel(This,v)	\
    ( (This)->lpVtbl -> put_ariaLevel(This,v) ) 

#define IHTMLElement5_get_ariaLevel(This,p)	\
    ( (This)->lpVtbl -> get_ariaLevel(This,p) ) 

#define IHTMLElement5_put_ariaValuemin(This,v)	\
    ( (This)->lpVtbl -> put_ariaValuemin(This,v) ) 

#define IHTMLElement5_get_ariaValuemin(This,p)	\
    ( (This)->lpVtbl -> get_ariaValuemin(This,p) ) 

#define IHTMLElement5_put_ariaValuemax(This,v)	\
    ( (This)->lpVtbl -> put_ariaValuemax(This,v) ) 

#define IHTMLElement5_get_ariaValuemax(This,p)	\
    ( (This)->lpVtbl -> get_ariaValuemax(This,p) ) 

#define IHTMLElement5_put_ariaControls(This,v)	\
    ( (This)->lpVtbl -> put_ariaControls(This,v) ) 

#define IHTMLElement5_get_ariaControls(This,p)	\
    ( (This)->lpVtbl -> get_ariaControls(This,p) ) 

#define IHTMLElement5_put_ariaDescribedby(This,v)	\
    ( (This)->lpVtbl -> put_ariaDescribedby(This,v) ) 

#define IHTMLElement5_get_ariaDescribedby(This,p)	\
    ( (This)->lpVtbl -> get_ariaDescribedby(This,p) ) 

#define IHTMLElement5_put_ariaFlowto(This,v)	\
    ( (This)->lpVtbl -> put_ariaFlowto(This,v) ) 

#define IHTMLElement5_get_ariaFlowto(This,p)	\
    ( (This)->lpVtbl -> get_ariaFlowto(This,p) ) 

#define IHTMLElement5_put_ariaLabelledby(This,v)	\
    ( (This)->lpVtbl -> put_ariaLabelledby(This,v) ) 

#define IHTMLElement5_get_ariaLabelledby(This,p)	\
    ( (This)->lpVtbl -> get_ariaLabelledby(This,p) ) 

#define IHTMLElement5_put_ariaActivedescendant(This,v)	\
    ( (This)->lpVtbl -> put_ariaActivedescendant(This,v) ) 

#define IHTMLElement5_get_ariaActivedescendant(This,p)	\
    ( (This)->lpVtbl -> get_ariaActivedescendant(This,p) ) 

#define IHTMLElement5_put_ariaOwns(This,v)	\
    ( (This)->lpVtbl -> put_ariaOwns(This,v) ) 

#define IHTMLElement5_get_ariaOwns(This,p)	\
    ( (This)->lpVtbl -> get_ariaOwns(This,p) ) 

#define IHTMLElement5_hasAttributes(This,pfHasAttributes)	\
    ( (This)->lpVtbl -> hasAttributes(This,pfHasAttributes) ) 

#define IHTMLElement5_put_ariaLive(This,v)	\
    ( (This)->lpVtbl -> put_ariaLive(This,v) ) 

#define IHTMLElement5_get_ariaLive(This,p)	\
    ( (This)->lpVtbl -> get_ariaLive(This,p) ) 

#define IHTMLElement5_put_ariaRelevant(This,v)	\
    ( (This)->lpVtbl -> put_ariaRelevant(This,v) ) 

#define IHTMLElement5_get_ariaRelevant(This,p)	\
    ( (This)->lpVtbl -> get_ariaRelevant(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLElement5_INTERFACE_DEFINED__ */


#ifndef __IHTMLDatabinding_INTERFACE_DEFINED__
#define __IHTMLDatabinding_INTERFACE_DEFINED__

/* interface IHTMLDatabinding */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDatabinding;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f3f2-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDatabinding : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_dataFld( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_dataFld( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_dataSrc( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_dataSrc( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_dataFormatAs( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_dataFormatAs( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDatabindingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLDatabinding * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLDatabinding * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLDatabinding * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLDatabinding * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLDatabinding * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLDatabinding * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDatabinding * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_dataFld )( 
            __RPC__in IHTMLDatabinding * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_dataFld )( 
            __RPC__in IHTMLDatabinding * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_dataSrc )( 
            __RPC__in IHTMLDatabinding * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_dataSrc )( 
            __RPC__in IHTMLDatabinding * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_dataFormatAs )( 
            __RPC__in IHTMLDatabinding * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_dataFormatAs )( 
            __RPC__in IHTMLDatabinding * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLDatabindingVtbl;

    interface IHTMLDatabinding
    {
        CONST_VTBL struct IHTMLDatabindingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDatabinding_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLDatabinding_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLDatabinding_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLDatabinding_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLDatabinding_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLDatabinding_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLDatabinding_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLDatabinding_put_dataFld(This,v)	\
    ( (This)->lpVtbl -> put_dataFld(This,v) ) 

#define IHTMLDatabinding_get_dataFld(This,p)	\
    ( (This)->lpVtbl -> get_dataFld(This,p) ) 

#define IHTMLDatabinding_put_dataSrc(This,v)	\
    ( (This)->lpVtbl -> put_dataSrc(This,v) ) 

#define IHTMLDatabinding_get_dataSrc(This,p)	\
    ( (This)->lpVtbl -> get_dataSrc(This,p) ) 

#define IHTMLDatabinding_put_dataFormatAs(This,v)	\
    ( (This)->lpVtbl -> put_dataFormatAs(This,v) ) 

#define IHTMLDatabinding_get_dataFormatAs(This,p)	\
    ( (This)->lpVtbl -> get_dataFormatAs(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLDatabinding_INTERFACE_DEFINED__ */


#ifndef __IHTMLDocument_INTERFACE_DEFINED__
#define __IHTMLDocument_INTERFACE_DEFINED__

/* interface IHTMLDocument */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDocument;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("626FC520-A41E-11cf-A731-00A0C9082637")
    IHTMLDocument : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_Script( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDocumentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLDocument * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLDocument * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLDocument * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLDocument * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLDocument * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLDocument * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDocument * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Script )( 
            __RPC__in IHTMLDocument * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        END_INTERFACE
    } IHTMLDocumentVtbl;

    interface IHTMLDocument
    {
        CONST_VTBL struct IHTMLDocumentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDocument_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLDocument_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLDocument_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLDocument_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLDocument_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLDocument_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLDocument_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLDocument_get_Script(This,p)	\
    ( (This)->lpVtbl -> get_Script(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLDocument_INTERFACE_DEFINED__ */


#ifndef __IHTMLElementDefaults_INTERFACE_DEFINED__
#define __IHTMLElementDefaults_INTERFACE_DEFINED__

/* interface IHTMLElementDefaults */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLElementDefaults;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f6c9-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLElementDefaults : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][id][propget] */ HRESULT STDMETHODCALLTYPE get_style( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyle **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_tabStop( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_tabStop( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_viewInheritStyle( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_viewInheritStyle( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_viewMasterTab( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_viewMasterTab( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollSegmentX( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollSegmentX( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollSegmentY( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollSegmentY( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_isMultiLine( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_isMultiLine( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_contentEditable( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_contentEditable( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_canHaveHTML( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_canHaveHTML( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propputref] */ HRESULT STDMETHODCALLTYPE putref_viewLink( 
            /* [in] */ __RPC__in_opt IHTMLDocument *v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_viewLink( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDocument **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_frozen( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_frozen( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLElementDefaultsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLElementDefaults * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLElementDefaults * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLElementDefaults * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_style )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyle **p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_tabStop )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_tabStop )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_viewInheritStyle )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_viewInheritStyle )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_viewMasterTab )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_viewMasterTab )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollSegmentX )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ long v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollSegmentX )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollSegmentY )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ long v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollSegmentY )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_isMultiLine )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_isMultiLine )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_contentEditable )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_contentEditable )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_canHaveHTML )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_canHaveHTML )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_viewLink )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ __RPC__in_opt IHTMLDocument *v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_viewLink )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLDocument **p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_frozen )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_frozen )( 
            __RPC__in IHTMLElementDefaults * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        END_INTERFACE
    } IHTMLElementDefaultsVtbl;

    interface IHTMLElementDefaults
    {
        CONST_VTBL struct IHTMLElementDefaultsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLElementDefaults_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLElementDefaults_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLElementDefaults_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLElementDefaults_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLElementDefaults_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLElementDefaults_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLElementDefaults_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLElementDefaults_get_style(This,p)	\
    ( (This)->lpVtbl -> get_style(This,p) ) 

#define IHTMLElementDefaults_put_tabStop(This,v)	\
    ( (This)->lpVtbl -> put_tabStop(This,v) ) 

#define IHTMLElementDefaults_get_tabStop(This,p)	\
    ( (This)->lpVtbl -> get_tabStop(This,p) ) 

#define IHTMLElementDefaults_put_viewInheritStyle(This,v)	\
    ( (This)->lpVtbl -> put_viewInheritStyle(This,v) ) 

#define IHTMLElementDefaults_get_viewInheritStyle(This,p)	\
    ( (This)->lpVtbl -> get_viewInheritStyle(This,p) ) 

#define IHTMLElementDefaults_put_viewMasterTab(This,v)	\
    ( (This)->lpVtbl -> put_viewMasterTab(This,v) ) 

#define IHTMLElementDefaults_get_viewMasterTab(This,p)	\
    ( (This)->lpVtbl -> get_viewMasterTab(This,p) ) 

#define IHTMLElementDefaults_put_scrollSegmentX(This,v)	\
    ( (This)->lpVtbl -> put_scrollSegmentX(This,v) ) 

#define IHTMLElementDefaults_get_scrollSegmentX(This,p)	\
    ( (This)->lpVtbl -> get_scrollSegmentX(This,p) ) 

#define IHTMLElementDefaults_put_scrollSegmentY(This,v)	\
    ( (This)->lpVtbl -> put_scrollSegmentY(This,v) ) 

#define IHTMLElementDefaults_get_scrollSegmentY(This,p)	\
    ( (This)->lpVtbl -> get_scrollSegmentY(This,p) ) 

#define IHTMLElementDefaults_put_isMultiLine(This,v)	\
    ( (This)->lpVtbl -> put_isMultiLine(This,v) ) 

#define IHTMLElementDefaults_get_isMultiLine(This,p)	\
    ( (This)->lpVtbl -> get_isMultiLine(This,p) ) 

#define IHTMLElementDefaults_put_contentEditable(This,v)	\
    ( (This)->lpVtbl -> put_contentEditable(This,v) ) 

#define IHTMLElementDefaults_get_contentEditable(This,p)	\
    ( (This)->lpVtbl -> get_contentEditable(This,p) ) 

#define IHTMLElementDefaults_put_canHaveHTML(This,v)	\
    ( (This)->lpVtbl -> put_canHaveHTML(This,v) ) 

#define IHTMLElementDefaults_get_canHaveHTML(This,p)	\
    ( (This)->lpVtbl -> get_canHaveHTML(This,p) ) 

#define IHTMLElementDefaults_putref_viewLink(This,v)	\
    ( (This)->lpVtbl -> putref_viewLink(This,v) ) 

#define IHTMLElementDefaults_get_viewLink(This,p)	\
    ( (This)->lpVtbl -> get_viewLink(This,p) ) 

#define IHTMLElementDefaults_put_frozen(This,v)	\
    ( (This)->lpVtbl -> put_frozen(This,v) ) 

#define IHTMLElementDefaults_get_frozen(This,p)	\
    ( (This)->lpVtbl -> get_frozen(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLElementDefaults_INTERFACE_DEFINED__ */


#ifndef __DispHTMLDefaults_DISPINTERFACE_DEFINED__
#define __DispHTMLDefaults_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLDefaults */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLDefaults;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f58c-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLDefaults : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLDefaultsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLDefaults * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLDefaults * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLDefaults * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLDefaults * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLDefaults * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLDefaults * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLDefaults * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLDefaultsVtbl;

    interface DispHTMLDefaults
    {
        CONST_VTBL struct DispHTMLDefaultsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLDefaults_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLDefaults_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLDefaults_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLDefaults_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLDefaults_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLDefaults_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLDefaults_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLDefaults_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLDefaults;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f6c8-98b5-11cf-bb82-00aa00bdce0b")
HTMLDefaults;
#endif

#ifndef __IHTCDefaultDispatch_INTERFACE_DEFINED__
#define __IHTCDefaultDispatch_INTERFACE_DEFINED__

/* interface IHTCDefaultDispatch */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTCDefaultDispatch;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4fd-98b5-11cf-bb82-00aa00bdce0b")
    IHTCDefaultDispatch : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_element( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createEventObject( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLEventObj **eventObj) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_defaults( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_document( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTCDefaultDispatchVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTCDefaultDispatch * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTCDefaultDispatch * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTCDefaultDispatch * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTCDefaultDispatch * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTCDefaultDispatch * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTCDefaultDispatch * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTCDefaultDispatch * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_element )( 
            __RPC__in IHTCDefaultDispatch * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *createEventObject )( 
            __RPC__in IHTCDefaultDispatch * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLEventObj **eventObj);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_defaults )( 
            __RPC__in IHTCDefaultDispatch * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_document )( 
            __RPC__in IHTCDefaultDispatch * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        END_INTERFACE
    } IHTCDefaultDispatchVtbl;

    interface IHTCDefaultDispatch
    {
        CONST_VTBL struct IHTCDefaultDispatchVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTCDefaultDispatch_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTCDefaultDispatch_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTCDefaultDispatch_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTCDefaultDispatch_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTCDefaultDispatch_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTCDefaultDispatch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTCDefaultDispatch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTCDefaultDispatch_get_element(This,p)	\
    ( (This)->lpVtbl -> get_element(This,p) ) 

#define IHTCDefaultDispatch_createEventObject(This,eventObj)	\
    ( (This)->lpVtbl -> createEventObject(This,eventObj) ) 

#define IHTCDefaultDispatch_get_defaults(This,p)	\
    ( (This)->lpVtbl -> get_defaults(This,p) ) 

#define IHTCDefaultDispatch_get_document(This,p)	\
    ( (This)->lpVtbl -> get_document(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTCDefaultDispatch_INTERFACE_DEFINED__ */


#ifndef __IHTCPropertyBehavior_INTERFACE_DEFINED__
#define __IHTCPropertyBehavior_INTERFACE_DEFINED__

/* interface IHTCPropertyBehavior */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTCPropertyBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f5df-98b5-11cf-bb82-00aa00bdce0b")
    IHTCPropertyBehavior : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE fireChange( void) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTCPropertyBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTCPropertyBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTCPropertyBehavior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTCPropertyBehavior * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTCPropertyBehavior * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTCPropertyBehavior * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTCPropertyBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTCPropertyBehavior * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *fireChange )( 
            __RPC__in IHTCPropertyBehavior * This);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_value )( 
            __RPC__in IHTCPropertyBehavior * This,
            /* [in] */ VARIANT v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_value )( 
            __RPC__in IHTCPropertyBehavior * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        END_INTERFACE
    } IHTCPropertyBehaviorVtbl;

    interface IHTCPropertyBehavior
    {
        CONST_VTBL struct IHTCPropertyBehaviorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTCPropertyBehavior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTCPropertyBehavior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTCPropertyBehavior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTCPropertyBehavior_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTCPropertyBehavior_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTCPropertyBehavior_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTCPropertyBehavior_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTCPropertyBehavior_fireChange(This)	\
    ( (This)->lpVtbl -> fireChange(This) ) 

#define IHTCPropertyBehavior_put_value(This,v)	\
    ( (This)->lpVtbl -> put_value(This,v) ) 

#define IHTCPropertyBehavior_get_value(This,p)	\
    ( (This)->lpVtbl -> get_value(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTCPropertyBehavior_INTERFACE_DEFINED__ */


#ifndef __IHTCMethodBehavior_INTERFACE_DEFINED__
#define __IHTCMethodBehavior_INTERFACE_DEFINED__

/* interface IHTCMethodBehavior */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTCMethodBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f631-98b5-11cf-bb82-00aa00bdce0b")
    IHTCMethodBehavior : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IHTCMethodBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTCMethodBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTCMethodBehavior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTCMethodBehavior * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTCMethodBehavior * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTCMethodBehavior * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTCMethodBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTCMethodBehavior * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } IHTCMethodBehaviorVtbl;

    interface IHTCMethodBehavior
    {
        CONST_VTBL struct IHTCMethodBehaviorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTCMethodBehavior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTCMethodBehavior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTCMethodBehavior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTCMethodBehavior_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTCMethodBehavior_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTCMethodBehavior_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTCMethodBehavior_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTCMethodBehavior_INTERFACE_DEFINED__ */


#ifndef __IHTCEventBehavior_INTERFACE_DEFINED__
#define __IHTCEventBehavior_INTERFACE_DEFINED__

/* interface IHTCEventBehavior */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTCEventBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4ff-98b5-11cf-bb82-00aa00bdce0b")
    IHTCEventBehavior : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE fire( 
            /* [in] */ __RPC__in_opt IHTMLEventObj *pvar) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTCEventBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTCEventBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTCEventBehavior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTCEventBehavior * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTCEventBehavior * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTCEventBehavior * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTCEventBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTCEventBehavior * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *fire )( 
            __RPC__in IHTCEventBehavior * This,
            /* [in] */ __RPC__in_opt IHTMLEventObj *pvar);
        
        END_INTERFACE
    } IHTCEventBehaviorVtbl;

    interface IHTCEventBehavior
    {
        CONST_VTBL struct IHTCEventBehaviorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTCEventBehavior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTCEventBehavior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTCEventBehavior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTCEventBehavior_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTCEventBehavior_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTCEventBehavior_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTCEventBehavior_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTCEventBehavior_fire(This,pvar)	\
    ( (This)->lpVtbl -> fire(This,pvar) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTCEventBehavior_INTERFACE_DEFINED__ */


#ifndef __IHTCAttachBehavior_INTERFACE_DEFINED__
#define __IHTCAttachBehavior_INTERFACE_DEFINED__

/* interface IHTCAttachBehavior */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTCAttachBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f5f4-98b5-11cf-bb82-00aa00bdce0b")
    IHTCAttachBehavior : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE fireEvent( 
            /* [in] */ __RPC__in_opt IDispatch *evt) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE detachEvent( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTCAttachBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTCAttachBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTCAttachBehavior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTCAttachBehavior * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTCAttachBehavior * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTCAttachBehavior * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTCAttachBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTCAttachBehavior * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *fireEvent )( 
            __RPC__in IHTCAttachBehavior * This,
            /* [in] */ __RPC__in_opt IDispatch *evt);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *detachEvent )( 
            __RPC__in IHTCAttachBehavior * This);
        
        END_INTERFACE
    } IHTCAttachBehaviorVtbl;

    interface IHTCAttachBehavior
    {
        CONST_VTBL struct IHTCAttachBehaviorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTCAttachBehavior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTCAttachBehavior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTCAttachBehavior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTCAttachBehavior_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTCAttachBehavior_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTCAttachBehavior_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTCAttachBehavior_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTCAttachBehavior_fireEvent(This,evt)	\
    ( (This)->lpVtbl -> fireEvent(This,evt) ) 

#define IHTCAttachBehavior_detachEvent(This)	\
    ( (This)->lpVtbl -> detachEvent(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTCAttachBehavior_INTERFACE_DEFINED__ */


#ifndef __IHTCAttachBehavior2_INTERFACE_DEFINED__
#define __IHTCAttachBehavior2_INTERFACE_DEFINED__

/* interface IHTCAttachBehavior2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTCAttachBehavior2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f7eb-98b5-11cf-bb82-00aa00bdce0b")
    IHTCAttachBehavior2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE fireEvent( 
            /* [in] */ VARIANT evt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTCAttachBehavior2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTCAttachBehavior2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTCAttachBehavior2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTCAttachBehavior2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTCAttachBehavior2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTCAttachBehavior2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTCAttachBehavior2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTCAttachBehavior2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *fireEvent )( 
            __RPC__in IHTCAttachBehavior2 * This,
            /* [in] */ VARIANT evt);
        
        END_INTERFACE
    } IHTCAttachBehavior2Vtbl;

    interface IHTCAttachBehavior2
    {
        CONST_VTBL struct IHTCAttachBehavior2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTCAttachBehavior2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTCAttachBehavior2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTCAttachBehavior2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTCAttachBehavior2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTCAttachBehavior2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTCAttachBehavior2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTCAttachBehavior2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTCAttachBehavior2_fireEvent(This,evt)	\
    ( (This)->lpVtbl -> fireEvent(This,evt) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTCAttachBehavior2_INTERFACE_DEFINED__ */


#ifndef __IHTCDescBehavior_INTERFACE_DEFINED__
#define __IHTCDescBehavior_INTERFACE_DEFINED__

/* interface IHTCDescBehavior */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTCDescBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f5dc-98b5-11cf-bb82-00aa00bdce0b")
    IHTCDescBehavior : public IDispatch
    {
    public:
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_urn( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTCDescBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTCDescBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTCDescBehavior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTCDescBehavior * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTCDescBehavior * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTCDescBehavior * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTCDescBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTCDescBehavior * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_urn )( 
            __RPC__in IHTCDescBehavior * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_name )( 
            __RPC__in IHTCDescBehavior * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTCDescBehaviorVtbl;

    interface IHTCDescBehavior
    {
        CONST_VTBL struct IHTCDescBehaviorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTCDescBehavior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTCDescBehavior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTCDescBehavior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTCDescBehavior_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTCDescBehavior_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTCDescBehavior_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTCDescBehavior_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTCDescBehavior_get_urn(This,p)	\
    ( (This)->lpVtbl -> get_urn(This,p) ) 

#define IHTCDescBehavior_get_name(This,p)	\
    ( (This)->lpVtbl -> get_name(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTCDescBehavior_INTERFACE_DEFINED__ */


#ifndef __DispHTCDefaultDispatch_DISPINTERFACE_DEFINED__
#define __DispHTCDefaultDispatch_DISPINTERFACE_DEFINED__

/* dispinterface DispHTCDefaultDispatch */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTCDefaultDispatch;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f573-98b5-11cf-bb82-00aa00bdce0b")
    DispHTCDefaultDispatch : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTCDefaultDispatchVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTCDefaultDispatch * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTCDefaultDispatch * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTCDefaultDispatch * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTCDefaultDispatch * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTCDefaultDispatch * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTCDefaultDispatch * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTCDefaultDispatch * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTCDefaultDispatchVtbl;

    interface DispHTCDefaultDispatch
    {
        CONST_VTBL struct DispHTCDefaultDispatchVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTCDefaultDispatch_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTCDefaultDispatch_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTCDefaultDispatch_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTCDefaultDispatch_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTCDefaultDispatch_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTCDefaultDispatch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTCDefaultDispatch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTCDefaultDispatch_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTCDefaultDispatch;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f4fc-98b5-11cf-bb82-00aa00bdce0b")
HTCDefaultDispatch;
#endif

#ifndef __DispHTCPropertyBehavior_DISPINTERFACE_DEFINED__
#define __DispHTCPropertyBehavior_DISPINTERFACE_DEFINED__

/* dispinterface DispHTCPropertyBehavior */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTCPropertyBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f57f-98b5-11cf-bb82-00aa00bdce0b")
    DispHTCPropertyBehavior : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTCPropertyBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTCPropertyBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTCPropertyBehavior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTCPropertyBehavior * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTCPropertyBehavior * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTCPropertyBehavior * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTCPropertyBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTCPropertyBehavior * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTCPropertyBehaviorVtbl;

    interface DispHTCPropertyBehavior
    {
        CONST_VTBL struct DispHTCPropertyBehaviorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTCPropertyBehavior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTCPropertyBehavior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTCPropertyBehavior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTCPropertyBehavior_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTCPropertyBehavior_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTCPropertyBehavior_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTCPropertyBehavior_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTCPropertyBehavior_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTCPropertyBehavior;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f5de-98b5-11cf-bb82-00aa00bdce0b")
HTCPropertyBehavior;
#endif

#ifndef __DispHTCMethodBehavior_DISPINTERFACE_DEFINED__
#define __DispHTCMethodBehavior_DISPINTERFACE_DEFINED__

/* dispinterface DispHTCMethodBehavior */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTCMethodBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f587-98b5-11cf-bb82-00aa00bdce0b")
    DispHTCMethodBehavior : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTCMethodBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTCMethodBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTCMethodBehavior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTCMethodBehavior * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTCMethodBehavior * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTCMethodBehavior * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTCMethodBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTCMethodBehavior * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTCMethodBehaviorVtbl;

    interface DispHTCMethodBehavior
    {
        CONST_VTBL struct DispHTCMethodBehaviorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTCMethodBehavior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTCMethodBehavior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTCMethodBehavior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTCMethodBehavior_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTCMethodBehavior_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTCMethodBehavior_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTCMethodBehavior_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTCMethodBehavior_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTCMethodBehavior;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f630-98b5-11cf-bb82-00aa00bdce0b")
HTCMethodBehavior;
#endif

#ifndef __DispHTCEventBehavior_DISPINTERFACE_DEFINED__
#define __DispHTCEventBehavior_DISPINTERFACE_DEFINED__

/* dispinterface DispHTCEventBehavior */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTCEventBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f574-98b5-11cf-bb82-00aa00bdce0b")
    DispHTCEventBehavior : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTCEventBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTCEventBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTCEventBehavior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTCEventBehavior * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTCEventBehavior * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTCEventBehavior * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTCEventBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTCEventBehavior * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTCEventBehaviorVtbl;

    interface DispHTCEventBehavior
    {
        CONST_VTBL struct DispHTCEventBehaviorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTCEventBehavior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTCEventBehavior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTCEventBehavior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTCEventBehavior_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTCEventBehavior_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTCEventBehavior_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTCEventBehavior_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTCEventBehavior_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTCEventBehavior;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f4fe-98b5-11cf-bb82-00aa00bdce0b")
HTCEventBehavior;
#endif

#ifndef __DispHTCAttachBehavior_DISPINTERFACE_DEFINED__
#define __DispHTCAttachBehavior_DISPINTERFACE_DEFINED__

/* dispinterface DispHTCAttachBehavior */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTCAttachBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f583-98b5-11cf-bb82-00aa00bdce0b")
    DispHTCAttachBehavior : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTCAttachBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTCAttachBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTCAttachBehavior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTCAttachBehavior * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTCAttachBehavior * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTCAttachBehavior * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTCAttachBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTCAttachBehavior * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTCAttachBehaviorVtbl;

    interface DispHTCAttachBehavior
    {
        CONST_VTBL struct DispHTCAttachBehaviorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTCAttachBehavior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTCAttachBehavior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTCAttachBehavior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTCAttachBehavior_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTCAttachBehavior_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTCAttachBehavior_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTCAttachBehavior_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTCAttachBehavior_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTCAttachBehavior;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f5f5-98b5-11cf-bb82-00aa00bdce0b")
HTCAttachBehavior;
#endif

#ifndef __DispHTCDescBehavior_DISPINTERFACE_DEFINED__
#define __DispHTCDescBehavior_DISPINTERFACE_DEFINED__

/* dispinterface DispHTCDescBehavior */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTCDescBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f57e-98b5-11cf-bb82-00aa00bdce0b")
    DispHTCDescBehavior : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTCDescBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTCDescBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTCDescBehavior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTCDescBehavior * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTCDescBehavior * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTCDescBehavior * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTCDescBehavior * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTCDescBehavior * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTCDescBehaviorVtbl;

    interface DispHTCDescBehavior
    {
        CONST_VTBL struct DispHTCDescBehaviorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTCDescBehavior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTCDescBehavior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTCDescBehavior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTCDescBehavior_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTCDescBehavior_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTCDescBehavior_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTCDescBehavior_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTCDescBehavior_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTCDescBehavior;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f5dd-98b5-11cf-bb82-00aa00bdce0b")
HTCDescBehavior;
#endif

#ifndef __IHTMLUrnCollection_INTERFACE_DEFINED__
#define __IHTMLUrnCollection_INTERFACE_DEFINED__

/* interface IHTMLUrnCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLUrnCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f5e2-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLUrnCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ long index,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *ppUrn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLUrnCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLUrnCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLUrnCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLUrnCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLUrnCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLUrnCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLUrnCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLUrnCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLUrnCollection * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            __RPC__in IHTMLUrnCollection * This,
            /* [in] */ long index,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *ppUrn);
        
        END_INTERFACE
    } IHTMLUrnCollectionVtbl;

    interface IHTMLUrnCollection
    {
        CONST_VTBL struct IHTMLUrnCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLUrnCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLUrnCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLUrnCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLUrnCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLUrnCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLUrnCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLUrnCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLUrnCollection_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#define IHTMLUrnCollection_item(This,index,ppUrn)	\
    ( (This)->lpVtbl -> item(This,index,ppUrn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLUrnCollection_INTERFACE_DEFINED__ */


#ifndef __DispHTMLUrnCollection_DISPINTERFACE_DEFINED__
#define __DispHTMLUrnCollection_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLUrnCollection */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLUrnCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f551-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLUrnCollection : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLUrnCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLUrnCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLUrnCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLUrnCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLUrnCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLUrnCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLUrnCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLUrnCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLUrnCollectionVtbl;

    interface DispHTMLUrnCollection
    {
        CONST_VTBL struct DispHTMLUrnCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLUrnCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLUrnCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLUrnCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLUrnCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLUrnCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLUrnCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLUrnCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLUrnCollection_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLUrnCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f580-98b5-11cf-bb82-00aa00bdce0b")
HTMLUrnCollection;
#endif

#ifndef __IHTMLGenericElement_INTERFACE_DEFINED__
#define __IHTMLGenericElement_INTERFACE_DEFINED__

/* interface IHTMLGenericElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLGenericElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4b7-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLGenericElement : public IDispatch
    {
    public:
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_recordset( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE namedRecordset( 
            /* [in] */ __RPC__in BSTR dataMember,
            /* [in][optional] */ __RPC__in VARIANT *hierarchy,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **ppRecordset) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLGenericElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLGenericElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLGenericElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLGenericElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLGenericElement * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLGenericElement * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLGenericElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLGenericElement * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_recordset )( 
            __RPC__in IHTMLGenericElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *namedRecordset )( 
            __RPC__in IHTMLGenericElement * This,
            /* [in] */ __RPC__in BSTR dataMember,
            /* [in][optional] */ __RPC__in VARIANT *hierarchy,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **ppRecordset);
        
        END_INTERFACE
    } IHTMLGenericElementVtbl;

    interface IHTMLGenericElement
    {
        CONST_VTBL struct IHTMLGenericElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLGenericElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLGenericElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLGenericElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLGenericElement_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLGenericElement_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLGenericElement_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLGenericElement_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLGenericElement_get_recordset(This,p)	\
    ( (This)->lpVtbl -> get_recordset(This,p) ) 

#define IHTMLGenericElement_namedRecordset(This,dataMember,hierarchy,ppRecordset)	\
    ( (This)->lpVtbl -> namedRecordset(This,dataMember,hierarchy,ppRecordset) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLGenericElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLGenericElement_DISPINTERFACE_DEFINED__
#define __DispHTMLGenericElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLGenericElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLGenericElement;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f563-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLGenericElement : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLGenericElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLGenericElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLGenericElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLGenericElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLGenericElement * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLGenericElement * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLGenericElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLGenericElement * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLGenericElementVtbl;

    interface DispHTMLGenericElement
    {
        CONST_VTBL struct DispHTMLGenericElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLGenericElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLGenericElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLGenericElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLGenericElement_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLGenericElement_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLGenericElement_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLGenericElement_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLGenericElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLGenericElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f4b8-98b5-11cf-bb82-00aa00bdce0b")
HTMLGenericElement;
#endif

#ifndef __IHTMLStyleSheetRule_INTERFACE_DEFINED__
#define __IHTMLStyleSheetRule_INTERFACE_DEFINED__

/* interface IHTMLStyleSheetRule */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyleSheetRule;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f357-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyleSheetRule : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_selectorText( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_selectorText( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [nonbrowsable][id][propget] */ HRESULT STDMETHODCALLTYPE get_style( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLRuleStyle **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_readOnly( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyleSheetRuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyleSheetRule * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyleSheetRule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyleSheetRule * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyleSheetRule * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyleSheetRule * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyleSheetRule * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyleSheetRule * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_selectorText )( 
            __RPC__in IHTMLStyleSheetRule * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_selectorText )( 
            __RPC__in IHTMLStyleSheetRule * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [nonbrowsable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_style )( 
            __RPC__in IHTMLStyleSheetRule * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLRuleStyle **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_readOnly )( 
            __RPC__in IHTMLStyleSheetRule * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        END_INTERFACE
    } IHTMLStyleSheetRuleVtbl;

    interface IHTMLStyleSheetRule
    {
        CONST_VTBL struct IHTMLStyleSheetRuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyleSheetRule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyleSheetRule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyleSheetRule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyleSheetRule_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyleSheetRule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyleSheetRule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyleSheetRule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyleSheetRule_put_selectorText(This,v)	\
    ( (This)->lpVtbl -> put_selectorText(This,v) ) 

#define IHTMLStyleSheetRule_get_selectorText(This,p)	\
    ( (This)->lpVtbl -> get_selectorText(This,p) ) 

#define IHTMLStyleSheetRule_get_style(This,p)	\
    ( (This)->lpVtbl -> get_style(This,p) ) 

#define IHTMLStyleSheetRule_get_readOnly(This,p)	\
    ( (This)->lpVtbl -> get_readOnly(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyleSheetRule_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyleSheetRulesCollection_INTERFACE_DEFINED__
#define __IHTMLStyleSheetRulesCollection_INTERFACE_DEFINED__

/* interface IHTMLStyleSheetRulesCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyleSheetRulesCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f2e5-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyleSheetRulesCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ long index,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheetRule **ppHTMLStyleSheetRule) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyleSheetRulesCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyleSheetRulesCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyleSheetRulesCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyleSheetRulesCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyleSheetRulesCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyleSheetRulesCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyleSheetRulesCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyleSheetRulesCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLStyleSheetRulesCollection * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            __RPC__in IHTMLStyleSheetRulesCollection * This,
            /* [in] */ long index,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheetRule **ppHTMLStyleSheetRule);
        
        END_INTERFACE
    } IHTMLStyleSheetRulesCollectionVtbl;

    interface IHTMLStyleSheetRulesCollection
    {
        CONST_VTBL struct IHTMLStyleSheetRulesCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyleSheetRulesCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyleSheetRulesCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyleSheetRulesCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyleSheetRulesCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyleSheetRulesCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyleSheetRulesCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyleSheetRulesCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyleSheetRulesCollection_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#define IHTMLStyleSheetRulesCollection_item(This,index,ppHTMLStyleSheetRule)	\
    ( (This)->lpVtbl -> item(This,index,ppHTMLStyleSheetRule) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyleSheetRulesCollection_INTERFACE_DEFINED__ */


#ifndef __DispHTMLStyleSheetRule_DISPINTERFACE_DEFINED__
#define __DispHTMLStyleSheetRule_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLStyleSheetRule */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLStyleSheetRule;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f50e-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLStyleSheetRule : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLStyleSheetRuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLStyleSheetRule * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLStyleSheetRule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLStyleSheetRule * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLStyleSheetRule * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLStyleSheetRule * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLStyleSheetRule * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLStyleSheetRule * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLStyleSheetRuleVtbl;

    interface DispHTMLStyleSheetRule
    {
        CONST_VTBL struct DispHTMLStyleSheetRuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLStyleSheetRule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLStyleSheetRule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLStyleSheetRule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLStyleSheetRule_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLStyleSheetRule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLStyleSheetRule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLStyleSheetRule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLStyleSheetRule_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLStyleSheetRule;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3ce-98b5-11cf-bb82-00aa00bdce0b")
HTMLStyleSheetRule;
#endif

#ifndef __DispHTMLStyleSheetRulesCollection_DISPINTERFACE_DEFINED__
#define __DispHTMLStyleSheetRulesCollection_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLStyleSheetRulesCollection */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLStyleSheetRulesCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f52f-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLStyleSheetRulesCollection : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLStyleSheetRulesCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLStyleSheetRulesCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLStyleSheetRulesCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLStyleSheetRulesCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLStyleSheetRulesCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLStyleSheetRulesCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLStyleSheetRulesCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLStyleSheetRulesCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLStyleSheetRulesCollectionVtbl;

    interface DispHTMLStyleSheetRulesCollection
    {
        CONST_VTBL struct DispHTMLStyleSheetRulesCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLStyleSheetRulesCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLStyleSheetRulesCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLStyleSheetRulesCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLStyleSheetRulesCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLStyleSheetRulesCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLStyleSheetRulesCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLStyleSheetRulesCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLStyleSheetRulesCollection_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLStyleSheetRulesCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3cd-98b5-11cf-bb82-00aa00bdce0b")
HTMLStyleSheetRulesCollection;
#endif

#ifndef __IHTMLStyleSheetPage_INTERFACE_DEFINED__
#define __IHTMLStyleSheetPage_INTERFACE_DEFINED__

/* interface IHTMLStyleSheetPage */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyleSheetPage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f7ee-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyleSheetPage : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_selector( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_pseudoClass( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyleSheetPageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyleSheetPage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyleSheetPage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyleSheetPage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyleSheetPage * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyleSheetPage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyleSheetPage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyleSheetPage * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_selector )( 
            __RPC__in IHTMLStyleSheetPage * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pseudoClass )( 
            __RPC__in IHTMLStyleSheetPage * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLStyleSheetPageVtbl;

    interface IHTMLStyleSheetPage
    {
        CONST_VTBL struct IHTMLStyleSheetPageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyleSheetPage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyleSheetPage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyleSheetPage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyleSheetPage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyleSheetPage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyleSheetPage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyleSheetPage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyleSheetPage_get_selector(This,p)	\
    ( (This)->lpVtbl -> get_selector(This,p) ) 

#define IHTMLStyleSheetPage_get_pseudoClass(This,p)	\
    ( (This)->lpVtbl -> get_pseudoClass(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyleSheetPage_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyleSheetPagesCollection_INTERFACE_DEFINED__
#define __IHTMLStyleSheetPagesCollection_INTERFACE_DEFINED__

/* interface IHTMLStyleSheetPagesCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyleSheetPagesCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f7f0-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyleSheetPagesCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ long index,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheetPage **ppHTMLStyleSheetPage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyleSheetPagesCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyleSheetPagesCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyleSheetPagesCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyleSheetPagesCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyleSheetPagesCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyleSheetPagesCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyleSheetPagesCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyleSheetPagesCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLStyleSheetPagesCollection * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            __RPC__in IHTMLStyleSheetPagesCollection * This,
            /* [in] */ long index,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheetPage **ppHTMLStyleSheetPage);
        
        END_INTERFACE
    } IHTMLStyleSheetPagesCollectionVtbl;

    interface IHTMLStyleSheetPagesCollection
    {
        CONST_VTBL struct IHTMLStyleSheetPagesCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyleSheetPagesCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyleSheetPagesCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyleSheetPagesCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyleSheetPagesCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyleSheetPagesCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyleSheetPagesCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyleSheetPagesCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyleSheetPagesCollection_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#define IHTMLStyleSheetPagesCollection_item(This,index,ppHTMLStyleSheetPage)	\
    ( (This)->lpVtbl -> item(This,index,ppHTMLStyleSheetPage) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyleSheetPagesCollection_INTERFACE_DEFINED__ */


#ifndef __DispHTMLStyleSheetPage_DISPINTERFACE_DEFINED__
#define __DispHTMLStyleSheetPage_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLStyleSheetPage */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLStyleSheetPage;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f540-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLStyleSheetPage : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLStyleSheetPageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLStyleSheetPage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLStyleSheetPage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLStyleSheetPage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLStyleSheetPage * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLStyleSheetPage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLStyleSheetPage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLStyleSheetPage * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLStyleSheetPageVtbl;

    interface DispHTMLStyleSheetPage
    {
        CONST_VTBL struct DispHTMLStyleSheetPageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLStyleSheetPage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLStyleSheetPage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLStyleSheetPage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLStyleSheetPage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLStyleSheetPage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLStyleSheetPage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLStyleSheetPage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLStyleSheetPage_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLStyleSheetPage;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f7ef-98b5-11cf-bb82-00aa00bdce0b")
HTMLStyleSheetPage;
#endif

#ifndef __DispHTMLStyleSheetPagesCollection_DISPINTERFACE_DEFINED__
#define __DispHTMLStyleSheetPagesCollection_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLStyleSheetPagesCollection */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLStyleSheetPagesCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f543-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLStyleSheetPagesCollection : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLStyleSheetPagesCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLStyleSheetPagesCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLStyleSheetPagesCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLStyleSheetPagesCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLStyleSheetPagesCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLStyleSheetPagesCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLStyleSheetPagesCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLStyleSheetPagesCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLStyleSheetPagesCollectionVtbl;

    interface DispHTMLStyleSheetPagesCollection
    {
        CONST_VTBL struct DispHTMLStyleSheetPagesCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLStyleSheetPagesCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLStyleSheetPagesCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLStyleSheetPagesCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLStyleSheetPagesCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLStyleSheetPagesCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLStyleSheetPagesCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLStyleSheetPagesCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLStyleSheetPagesCollection_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLStyleSheetPagesCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f7f1-98b5-11cf-bb82-00aa00bdce0b")
HTMLStyleSheetPagesCollection;
#endif

#ifndef __IHTMLStyleSheetsCollection_INTERFACE_DEFINED__
#define __IHTMLStyleSheetsCollection_INTERFACE_DEFINED__

/* interface IHTMLStyleSheetsCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyleSheetsCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f37e-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyleSheetsCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ __RPC__in VARIANT *pvarIndex,
            /* [out][retval] */ __RPC__out VARIANT *pvarResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyleSheetsCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyleSheetsCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyleSheetsCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyleSheetsCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyleSheetsCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyleSheetsCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyleSheetsCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyleSheetsCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLStyleSheetsCollection * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__newEnum )( 
            __RPC__in IHTMLStyleSheetsCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            __RPC__in IHTMLStyleSheetsCollection * This,
            /* [in] */ __RPC__in VARIANT *pvarIndex,
            /* [out][retval] */ __RPC__out VARIANT *pvarResult);
        
        END_INTERFACE
    } IHTMLStyleSheetsCollectionVtbl;

    interface IHTMLStyleSheetsCollection
    {
        CONST_VTBL struct IHTMLStyleSheetsCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyleSheetsCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyleSheetsCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyleSheetsCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyleSheetsCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyleSheetsCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyleSheetsCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyleSheetsCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyleSheetsCollection_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#define IHTMLStyleSheetsCollection_get__newEnum(This,p)	\
    ( (This)->lpVtbl -> get__newEnum(This,p) ) 

#define IHTMLStyleSheetsCollection_item(This,pvarIndex,pvarResult)	\
    ( (This)->lpVtbl -> item(This,pvarIndex,pvarResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyleSheetsCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyleSheet_INTERFACE_DEFINED__
#define __IHTMLStyleSheet_INTERFACE_DEFINED__

/* interface IHTMLStyleSheet */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyleSheet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f2e3-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyleSheet : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_title( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_title( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentStyleSheet( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheet **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_owningElement( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_readOnly( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_imports( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheetsCollection **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_href( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_href( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_id( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE addImport( 
            /* [in] */ __RPC__in BSTR bstrURL,
            /* [in][defaultvalue] */ long lIndex,
            /* [out][retval] */ __RPC__out long *plIndex) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE addRule( 
            /* [in] */ __RPC__in BSTR bstrSelector,
            /* [in] */ __RPC__in BSTR bstrStyle,
            /* [in][defaultvalue] */ long lIndex,
            /* [out][retval] */ __RPC__out long *plNewIndex) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeImport( 
            /* [in] */ long lIndex) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeRule( 
            /* [in] */ long lIndex) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_media( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_media( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_cssText( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cssText( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_rules( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheetRulesCollection **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyleSheetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyleSheet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyleSheet * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyleSheet * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_title )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_title )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_parentStyleSheet )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheet **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_owningElement )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_disabled )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_disabled )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_readOnly )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_imports )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheetsCollection **p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_href )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_href )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_type )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_id )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *addImport )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [in] */ __RPC__in BSTR bstrURL,
            /* [in][defaultvalue] */ long lIndex,
            /* [out][retval] */ __RPC__out long *plIndex);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *addRule )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [in] */ __RPC__in BSTR bstrSelector,
            /* [in] */ __RPC__in BSTR bstrStyle,
            /* [in][defaultvalue] */ long lIndex,
            /* [out][retval] */ __RPC__out long *plNewIndex);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeImport )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [in] */ long lIndex);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeRule )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [in] */ long lIndex);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_media )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_media )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_cssText )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cssText )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rules )( 
            __RPC__in IHTMLStyleSheet * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheetRulesCollection **p);
        
        END_INTERFACE
    } IHTMLStyleSheetVtbl;

    interface IHTMLStyleSheet
    {
        CONST_VTBL struct IHTMLStyleSheetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyleSheet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyleSheet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyleSheet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyleSheet_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyleSheet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyleSheet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyleSheet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyleSheet_put_title(This,v)	\
    ( (This)->lpVtbl -> put_title(This,v) ) 

#define IHTMLStyleSheet_get_title(This,p)	\
    ( (This)->lpVtbl -> get_title(This,p) ) 

#define IHTMLStyleSheet_get_parentStyleSheet(This,p)	\
    ( (This)->lpVtbl -> get_parentStyleSheet(This,p) ) 

#define IHTMLStyleSheet_get_owningElement(This,p)	\
    ( (This)->lpVtbl -> get_owningElement(This,p) ) 

#define IHTMLStyleSheet_put_disabled(This,v)	\
    ( (This)->lpVtbl -> put_disabled(This,v) ) 

#define IHTMLStyleSheet_get_disabled(This,p)	\
    ( (This)->lpVtbl -> get_disabled(This,p) ) 

#define IHTMLStyleSheet_get_readOnly(This,p)	\
    ( (This)->lpVtbl -> get_readOnly(This,p) ) 

#define IHTMLStyleSheet_get_imports(This,p)	\
    ( (This)->lpVtbl -> get_imports(This,p) ) 

#define IHTMLStyleSheet_put_href(This,v)	\
    ( (This)->lpVtbl -> put_href(This,v) ) 

#define IHTMLStyleSheet_get_href(This,p)	\
    ( (This)->lpVtbl -> get_href(This,p) ) 

#define IHTMLStyleSheet_get_type(This,p)	\
    ( (This)->lpVtbl -> get_type(This,p) ) 

#define IHTMLStyleSheet_get_id(This,p)	\
    ( (This)->lpVtbl -> get_id(This,p) ) 

#define IHTMLStyleSheet_addImport(This,bstrURL,lIndex,plIndex)	\
    ( (This)->lpVtbl -> addImport(This,bstrURL,lIndex,plIndex) ) 

#define IHTMLStyleSheet_addRule(This,bstrSelector,bstrStyle,lIndex,plNewIndex)	\
    ( (This)->lpVtbl -> addRule(This,bstrSelector,bstrStyle,lIndex,plNewIndex) ) 

#define IHTMLStyleSheet_removeImport(This,lIndex)	\
    ( (This)->lpVtbl -> removeImport(This,lIndex) ) 

#define IHTMLStyleSheet_removeRule(This,lIndex)	\
    ( (This)->lpVtbl -> removeRule(This,lIndex) ) 

#define IHTMLStyleSheet_put_media(This,v)	\
    ( (This)->lpVtbl -> put_media(This,v) ) 

#define IHTMLStyleSheet_get_media(This,p)	\
    ( (This)->lpVtbl -> get_media(This,p) ) 

#define IHTMLStyleSheet_put_cssText(This,v)	\
    ( (This)->lpVtbl -> put_cssText(This,v) ) 

#define IHTMLStyleSheet_get_cssText(This,p)	\
    ( (This)->lpVtbl -> get_cssText(This,p) ) 

#define IHTMLStyleSheet_get_rules(This,p)	\
    ( (This)->lpVtbl -> get_rules(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyleSheet_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyleSheet2_INTERFACE_DEFINED__
#define __IHTMLStyleSheet2_INTERFACE_DEFINED__

/* interface IHTMLStyleSheet2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyleSheet2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f3d1-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyleSheet2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_pages( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheetPagesCollection **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE addPageRule( 
            /* [in] */ __RPC__in BSTR bstrSelector,
            /* [in] */ __RPC__in BSTR bstrStyle,
            /* [in][defaultvalue] */ long lIndex,
            /* [out][retval] */ __RPC__out long *plNewIndex) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyleSheet2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyleSheet2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyleSheet2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyleSheet2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyleSheet2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyleSheet2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyleSheet2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyleSheet2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pages )( 
            __RPC__in IHTMLStyleSheet2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheetPagesCollection **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *addPageRule )( 
            __RPC__in IHTMLStyleSheet2 * This,
            /* [in] */ __RPC__in BSTR bstrSelector,
            /* [in] */ __RPC__in BSTR bstrStyle,
            /* [in][defaultvalue] */ long lIndex,
            /* [out][retval] */ __RPC__out long *plNewIndex);
        
        END_INTERFACE
    } IHTMLStyleSheet2Vtbl;

    interface IHTMLStyleSheet2
    {
        CONST_VTBL struct IHTMLStyleSheet2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyleSheet2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyleSheet2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyleSheet2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyleSheet2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyleSheet2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyleSheet2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyleSheet2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyleSheet2_get_pages(This,p)	\
    ( (This)->lpVtbl -> get_pages(This,p) ) 

#define IHTMLStyleSheet2_addPageRule(This,bstrSelector,bstrStyle,lIndex,plNewIndex)	\
    ( (This)->lpVtbl -> addPageRule(This,bstrSelector,bstrStyle,lIndex,plNewIndex) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyleSheet2_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyleSheet3_INTERFACE_DEFINED__
#define __IHTMLStyleSheet3_INTERFACE_DEFINED__

/* interface IHTMLStyleSheet3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyleSheet3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("30510496-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyleSheet3 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_href( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_href( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_isAlternate( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_isPrefAlternate( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyleSheet3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLStyleSheet3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLStyleSheet3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLStyleSheet3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLStyleSheet3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLStyleSheet3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLStyleSheet3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyleSheet3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_href )( 
            __RPC__in IHTMLStyleSheet3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_href )( 
            __RPC__in IHTMLStyleSheet3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_isAlternate )( 
            __RPC__in IHTMLStyleSheet3 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_isPrefAlternate )( 
            __RPC__in IHTMLStyleSheet3 * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        END_INTERFACE
    } IHTMLStyleSheet3Vtbl;

    interface IHTMLStyleSheet3
    {
        CONST_VTBL struct IHTMLStyleSheet3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyleSheet3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLStyleSheet3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLStyleSheet3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLStyleSheet3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLStyleSheet3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLStyleSheet3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLStyleSheet3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLStyleSheet3_put_href(This,v)	\
    ( (This)->lpVtbl -> put_href(This,v) ) 

#define IHTMLStyleSheet3_get_href(This,p)	\
    ( (This)->lpVtbl -> get_href(This,p) ) 

#define IHTMLStyleSheet3_get_isAlternate(This,p)	\
    ( (This)->lpVtbl -> get_isAlternate(This,p) ) 

#define IHTMLStyleSheet3_get_isPrefAlternate(This,p)	\
    ( (This)->lpVtbl -> get_isPrefAlternate(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLStyleSheet3_INTERFACE_DEFINED__ */


#ifndef __DispHTMLStyleSheet_DISPINTERFACE_DEFINED__
#define __DispHTMLStyleSheet_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLStyleSheet */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLStyleSheet;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f58d-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLStyleSheet : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLStyleSheetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLStyleSheet * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLStyleSheet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLStyleSheet * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLStyleSheet * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLStyleSheet * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLStyleSheet * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLStyleSheet * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLStyleSheetVtbl;

    interface DispHTMLStyleSheet
    {
        CONST_VTBL struct DispHTMLStyleSheetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLStyleSheet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLStyleSheet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLStyleSheet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLStyleSheet_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLStyleSheet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLStyleSheet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLStyleSheet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLStyleSheet_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLStyleSheet;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2e4-98b5-11cf-bb82-00aa00bdce0b")
HTMLStyleSheet;
#endif

#ifndef __DispHTMLStyleSheetsCollection_DISPINTERFACE_DEFINED__
#define __DispHTMLStyleSheetsCollection_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLStyleSheetsCollection */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLStyleSheetsCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f547-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLStyleSheetsCollection : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLStyleSheetsCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLStyleSheetsCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLStyleSheetsCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLStyleSheetsCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLStyleSheetsCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLStyleSheetsCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLStyleSheetsCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLStyleSheetsCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLStyleSheetsCollectionVtbl;

    interface DispHTMLStyleSheetsCollection
    {
        CONST_VTBL struct DispHTMLStyleSheetsCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLStyleSheetsCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLStyleSheetsCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLStyleSheetsCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLStyleSheetsCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLStyleSheetsCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLStyleSheetsCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLStyleSheetsCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLStyleSheetsCollection_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLStyleSheetsCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f37f-98b5-11cf-bb82-00aa00bdce0b")
HTMLStyleSheetsCollection;
#endif

#ifndef __HTMLLinkElementEvents2_DISPINTERFACE_DEFINED__
#define __HTMLLinkElementEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLLinkElementEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLLinkElementEvents2;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f61d-98b5-11cf-bb82-00aa00bdce0b")
    HTMLLinkElementEvents2 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct HTMLLinkElementEvents2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in HTMLLinkElementEvents2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in HTMLLinkElementEvents2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in HTMLLinkElementEvents2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in HTMLLinkElementEvents2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in HTMLLinkElementEvents2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in HTMLLinkElementEvents2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            HTMLLinkElementEvents2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } HTMLLinkElementEvents2Vtbl;

    interface HTMLLinkElementEvents2
    {
        CONST_VTBL struct HTMLLinkElementEvents2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLLinkElementEvents2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define HTMLLinkElementEvents2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define HTMLLinkElementEvents2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define HTMLLinkElementEvents2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define HTMLLinkElementEvents2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define HTMLLinkElementEvents2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define HTMLLinkElementEvents2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __HTMLLinkElementEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLLinkElementEvents_DISPINTERFACE_DEFINED__
#define __HTMLLinkElementEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLLinkElementEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLLinkElementEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f3cc-98b5-11cf-bb82-00aa00bdce0b")
    HTMLLinkElementEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct HTMLLinkElementEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in HTMLLinkElementEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in HTMLLinkElementEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in HTMLLinkElementEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in HTMLLinkElementEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in HTMLLinkElementEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in HTMLLinkElementEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            HTMLLinkElementEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } HTMLLinkElementEventsVtbl;

    interface HTMLLinkElementEvents
    {
        CONST_VTBL struct HTMLLinkElementEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLLinkElementEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define HTMLLinkElementEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define HTMLLinkElementEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define HTMLLinkElementEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define HTMLLinkElementEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define HTMLLinkElementEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define HTMLLinkElementEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __HTMLLinkElementEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLLinkElement_INTERFACE_DEFINED__
#define __IHTMLLinkElement_INTERFACE_DEFINED__

/* interface IHTMLLinkElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLLinkElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f205-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLLinkElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_href( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_href( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rel( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rel( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rev( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rev( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_type( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onreadystatechange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onreadystatechange( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onload( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onload( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onerror( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onerror( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_styleSheet( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheet **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_media( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_media( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLLinkElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLLinkElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLLinkElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLLinkElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLLinkElement * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLLinkElement * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLLinkElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLLinkElement * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_href )( 
            __RPC__in IHTMLLinkElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_href )( 
            __RPC__in IHTMLLinkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rel )( 
            __RPC__in IHTMLLinkElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rel )( 
            __RPC__in IHTMLLinkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rev )( 
            __RPC__in IHTMLLinkElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rev )( 
            __RPC__in IHTMLLinkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_type )( 
            __RPC__in IHTMLLinkElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_type )( 
            __RPC__in IHTMLLinkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_readyState )( 
            __RPC__in IHTMLLinkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onreadystatechange )( 
            __RPC__in IHTMLLinkElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onreadystatechange )( 
            __RPC__in IHTMLLinkElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onload )( 
            __RPC__in IHTMLLinkElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onload )( 
            __RPC__in IHTMLLinkElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onerror )( 
            __RPC__in IHTMLLinkElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onerror )( 
            __RPC__in IHTMLLinkElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_styleSheet )( 
            __RPC__in IHTMLLinkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLStyleSheet **p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_disabled )( 
            __RPC__in IHTMLLinkElement * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_disabled )( 
            __RPC__in IHTMLLinkElement * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_media )( 
            __RPC__in IHTMLLinkElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_media )( 
            __RPC__in IHTMLLinkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLLinkElementVtbl;

    interface IHTMLLinkElement
    {
        CONST_VTBL struct IHTMLLinkElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLLinkElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLLinkElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLLinkElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLLinkElement_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLLinkElement_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLLinkElement_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLLinkElement_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLLinkElement_put_href(This,v)	\
    ( (This)->lpVtbl -> put_href(This,v) ) 

#define IHTMLLinkElement_get_href(This,p)	\
    ( (This)->lpVtbl -> get_href(This,p) ) 

#define IHTMLLinkElement_put_rel(This,v)	\
    ( (This)->lpVtbl -> put_rel(This,v) ) 

#define IHTMLLinkElement_get_rel(This,p)	\
    ( (This)->lpVtbl -> get_rel(This,p) ) 

#define IHTMLLinkElement_put_rev(This,v)	\
    ( (This)->lpVtbl -> put_rev(This,v) ) 

#define IHTMLLinkElement_get_rev(This,p)	\
    ( (This)->lpVtbl -> get_rev(This,p) ) 

#define IHTMLLinkElement_put_type(This,v)	\
    ( (This)->lpVtbl -> put_type(This,v) ) 

#define IHTMLLinkElement_get_type(This,p)	\
    ( (This)->lpVtbl -> get_type(This,p) ) 

#define IHTMLLinkElement_get_readyState(This,p)	\
    ( (This)->lpVtbl -> get_readyState(This,p) ) 

#define IHTMLLinkElement_put_onreadystatechange(This,v)	\
    ( (This)->lpVtbl -> put_onreadystatechange(This,v) ) 

#define IHTMLLinkElement_get_onreadystatechange(This,p)	\
    ( (This)->lpVtbl -> get_onreadystatechange(This,p) ) 

#define IHTMLLinkElement_put_onload(This,v)	\
    ( (This)->lpVtbl -> put_onload(This,v) ) 

#define IHTMLLinkElement_get_onload(This,p)	\
    ( (This)->lpVtbl -> get_onload(This,p) ) 

#define IHTMLLinkElement_put_onerror(This,v)	\
    ( (This)->lpVtbl -> put_onerror(This,v) ) 

#define IHTMLLinkElement_get_onerror(This,p)	\
    ( (This)->lpVtbl -> get_onerror(This,p) ) 

#define IHTMLLinkElement_get_styleSheet(This,p)	\
    ( (This)->lpVtbl -> get_styleSheet(This,p) ) 

#define IHTMLLinkElement_put_disabled(This,v)	\
    ( (This)->lpVtbl -> put_disabled(This,v) ) 

#define IHTMLLinkElement_get_disabled(This,p)	\
    ( (This)->lpVtbl -> get_disabled(This,p) ) 

#define IHTMLLinkElement_put_media(This,v)	\
    ( (This)->lpVtbl -> put_media(This,v) ) 

#define IHTMLLinkElement_get_media(This,p)	\
    ( (This)->lpVtbl -> get_media(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLLinkElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLLinkElement2_INTERFACE_DEFINED__
#define __IHTMLLinkElement2_INTERFACE_DEFINED__

/* interface IHTMLLinkElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLLinkElement2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4e5-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLLinkElement2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_target( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_target( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLLinkElement2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLLinkElement2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLLinkElement2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLLinkElement2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLLinkElement2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLLinkElement2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLLinkElement2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLLinkElement2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_target )( 
            __RPC__in IHTMLLinkElement2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_target )( 
            __RPC__in IHTMLLinkElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLLinkElement2Vtbl;

    interface IHTMLLinkElement2
    {
        CONST_VTBL struct IHTMLLinkElement2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLLinkElement2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLLinkElement2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLLinkElement2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLLinkElement2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLLinkElement2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLLinkElement2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLLinkElement2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLLinkElement2_put_target(This,v)	\
    ( (This)->lpVtbl -> put_target(This,v) ) 

#define IHTMLLinkElement2_get_target(This,p)	\
    ( (This)->lpVtbl -> get_target(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLLinkElement2_INTERFACE_DEFINED__ */


#ifndef __IHTMLLinkElement3_INTERFACE_DEFINED__
#define __IHTMLLinkElement3_INTERFACE_DEFINED__

/* interface IHTMLLinkElement3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLLinkElement3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f81e-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLLinkElement3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_charset( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_charset( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_hreflang( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_hreflang( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLLinkElement3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLLinkElement3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLLinkElement3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLLinkElement3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLLinkElement3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLLinkElement3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLLinkElement3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLLinkElement3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_charset )( 
            __RPC__in IHTMLLinkElement3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_charset )( 
            __RPC__in IHTMLLinkElement3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_hreflang )( 
            __RPC__in IHTMLLinkElement3 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_hreflang )( 
            __RPC__in IHTMLLinkElement3 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLLinkElement3Vtbl;

    interface IHTMLLinkElement3
    {
        CONST_VTBL struct IHTMLLinkElement3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLLinkElement3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLLinkElement3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLLinkElement3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLLinkElement3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLLinkElement3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLLinkElement3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLLinkElement3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLLinkElement3_put_charset(This,v)	\
    ( (This)->lpVtbl -> put_charset(This,v) ) 

#define IHTMLLinkElement3_get_charset(This,p)	\
    ( (This)->lpVtbl -> get_charset(This,p) ) 

#define IHTMLLinkElement3_put_hreflang(This,v)	\
    ( (This)->lpVtbl -> put_hreflang(This,v) ) 

#define IHTMLLinkElement3_get_hreflang(This,p)	\
    ( (This)->lpVtbl -> get_hreflang(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLLinkElement3_INTERFACE_DEFINED__ */


#ifndef __IHTMLLinkElement4_INTERFACE_DEFINED__
#define __IHTMLLinkElement4_INTERFACE_DEFINED__

/* interface IHTMLLinkElement4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLLinkElement4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3051043a-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLLinkElement4 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_href( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_href( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLLinkElement4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLLinkElement4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLLinkElement4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLLinkElement4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLLinkElement4 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLLinkElement4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLLinkElement4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLLinkElement4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_href )( 
            __RPC__in IHTMLLinkElement4 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_href )( 
            __RPC__in IHTMLLinkElement4 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        END_INTERFACE
    } IHTMLLinkElement4Vtbl;

    interface IHTMLLinkElement4
    {
        CONST_VTBL struct IHTMLLinkElement4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLLinkElement4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLLinkElement4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLLinkElement4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLLinkElement4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLLinkElement4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLLinkElement4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLLinkElement4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLLinkElement4_put_href(This,v)	\
    ( (This)->lpVtbl -> put_href(This,v) ) 

#define IHTMLLinkElement4_get_href(This,p)	\
    ( (This)->lpVtbl -> get_href(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLLinkElement4_INTERFACE_DEFINED__ */


#ifndef __DispHTMLLinkElement_DISPINTERFACE_DEFINED__
#define __DispHTMLLinkElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLLinkElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLLinkElement;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f524-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLLinkElement : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLLinkElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in DispHTMLLinkElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in DispHTMLLinkElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in DispHTMLLinkElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in DispHTMLLinkElement * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in DispHTMLLinkElement * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in DispHTMLLinkElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLLinkElement * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLLinkElementVtbl;

    interface DispHTMLLinkElement
    {
        CONST_VTBL struct DispHTMLLinkElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLLinkElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DispHTMLLinkElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DispHTMLLinkElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DispHTMLLinkElement_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DispHTMLLinkElement_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DispHTMLLinkElement_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DispHTMLLinkElement_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLLinkElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLLinkElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f277-98b5-11cf-bb82-00aa00bdce0b")
HTMLLinkElement;
#endif

#ifndef __IHTMLTxtRange_INTERFACE_DEFINED__
#define __IHTMLTxtRange_INTERFACE_DEFINED__

/* interface IHTMLTxtRange */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTxtRange;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f220-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTxtRange : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_htmlText( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_text( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_text( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE parentElement( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **parent) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE duplicate( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLTxtRange **Duplicate) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE inRange( 
            /* [in] */ __RPC__in_opt IHTMLTxtRange *Range,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *InRange) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE isEqual( 
            /* [in] */ __RPC__in_opt IHTMLTxtRange *Range,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *IsEqual) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE scrollIntoView( 
            /* [in][defaultvalue] */ VARIANT_BOOL fStart = -1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE collapse( 
            /* [in][defaultvalue] */ VARIANT_BOOL Start = -1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE expand( 
            /* [in] */ __RPC__in BSTR Unit,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *Success) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE move( 
            /* [in] */ __RPC__in BSTR Unit,
            /* [in][defaultvalue] */ long Count,
            /* [out][retval] */ __RPC__out long *ActualCount) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE moveStart( 
            /* [in] */ __RPC__in BSTR Unit,
            /* [in][defaultvalue] */ long Count,
            /* [out][retval] */ __RPC__out long *ActualCount) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE moveEnd( 
            /* [in] */ __RPC__in BSTR Unit,
            /* [in][defaultvalue] */ long Count,
            /* [out][retval] */ __RPC__out long *ActualCount) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE select( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE pasteHTML( 
            /* [in] */ __RPC__in BSTR html) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE moveToElementText( 
            /* [in] */ __RPC__in_opt IHTMLElement *element) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setEndPoint( 
            /* [in] */ __RPC__in BSTR how,
            /* [in] */ __RPC__in_opt IHTMLTxtRange *SourceRange) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE compareEndPoints( 
            /* [in] */ __RPC__in BSTR how,
            /* [in] */ __RPC__in_opt IHTMLTxtRange *SourceRange,
            /* [out][retval] */ __RPC__out long *ret) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE findText( 
            /* [in] */ __RPC__in BSTR String,
            /* [in][defaultvalue] */ long count,
            /* [in][defaultvalue] */ long Flags,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *Success) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE moveToPoint( 
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getBookmark( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *Boolmark) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE moveToBookmark( 
            /* [in] */ __RPC__in BSTR Bookmark,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *Success) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE queryCommandSupported( 
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE queryCommandEnabled( 
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE queryCommandState( 
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE queryCommandIndeterm( 
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE queryCommandText( 
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pcmdText) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE queryCommandValue( 
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__out VARIANT *pcmdValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE execCommand( 
            /* [in] */ __RPC__in BSTR cmdID,
            /* [in][defaultvalue] */ VARIANT_BOOL showUI,
            /* [in][optional] */ VARIANT value,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE execCommandShowHelp( 
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLTxtRangeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLTxtRange * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLTxtRange * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLTxtRange * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLTxtRange * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_htmlText )( 
            __RPC__in IHTMLTxtRange * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_text )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_text )( 
            __RPC__in IHTMLTxtRange * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *parentElement )( 
            __RPC__in IHTMLTxtRange * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLElement **parent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *duplicate )( 
            __RPC__in IHTMLTxtRange * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLTxtRange **Duplicate);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *inRange )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in_opt IHTMLTxtRange *Range,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *InRange);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *isEqual )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in_opt IHTMLTxtRange *Range,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *IsEqual);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *scrollIntoView )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in][defaultvalue] */ VARIANT_BOOL fStart);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *collapse )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in][defaultvalue] */ VARIANT_BOOL Start);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *expand )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR Unit,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *Success);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *move )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR Unit,
            /* [in][defaultvalue] */ long Count,
            /* [out][retval] */ __RPC__out long *ActualCount);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *moveStart )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR Unit,
            /* [in][defaultvalue] */ long Count,
            /* [out][retval] */ __RPC__out long *ActualCount);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *moveEnd )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR Unit,
            /* [in][defaultvalue] */ long Count,
            /* [out][retval] */ __RPC__out long *ActualCount);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *select )( 
            __RPC__in IHTMLTxtRange * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *pasteHTML )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR html);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *moveToElementText )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in_opt IHTMLElement *element);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setEndPoint )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR how,
            /* [in] */ __RPC__in_opt IHTMLTxtRange *SourceRange);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *compareEndPoints )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR how,
            /* [in] */ __RPC__in_opt IHTMLTxtRange *SourceRange,
            /* [out][retval] */ __RPC__out long *ret);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *findText )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR String,
            /* [in][defaultvalue] */ long count,
            /* [in][defaultvalue] */ long Flags,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *Success);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *moveToPoint )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ long x,
            /* [in] */ long y);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getBookmark )( 
            __RPC__in IHTMLTxtRange * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *Boolmark);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *moveToBookmark )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR Bookmark,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *Success);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *queryCommandSupported )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *queryCommandEnabled )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *queryCommandState )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *queryCommandIndeterm )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *queryCommandText )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pcmdText);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *queryCommandValue )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__out VARIANT *pcmdValue);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *execCommand )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR cmdID,
            /* [in][defaultvalue] */ VARIANT_BOOL showUI,
            /* [in][optional] */ VARIANT value,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *execCommandShowHelp )( 
            __RPC__in IHTMLTxtRange * This,
            /* [in] */ __RPC__in BSTR cmdID,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pfRet);
        
        END_INTERFACE
    } IHTMLTxtRangeVtbl;

    interface IHTMLTxtRange
    {
        CONST_VTBL struct IHTMLTxtRangeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLTxtRange_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLTxtRange_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLTxtRange_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLTxtRange_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLTxtRange_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLTxtRange_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLTxtRange_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLTxtRange_get_htmlText(This,p)	\
    ( (This)->lpVtbl -> get_htmlText(This,p) ) 

#define IHTMLTxtRange_put_text(This,v)	\
    ( (This)->lpVtbl -> put_text(This,v) ) 

#define IHTMLTxtRange_get_text(This,p)	\
    ( (This)->lpVtbl -> get_text(This,p) ) 

#define IHTMLTxtRange_parentElement(This,parent)	\
    ( (This)->lpVtbl -> parentElement(This,parent) ) 

#define IHTMLTxtRange_duplicate(This,Duplicate)	\
    ( (This)->lpVtbl -> duplicate(This,Duplicate) ) 

#define IHTMLTxtRange_inRange(This,Range,InRange)	\
    ( (This)->lpVtbl -> inRange(This,Range,InRange) ) 

#define IHTMLTxtRange_isEqual(This,Range,IsEqual)	\
    ( (This)->lpVtbl -> isEqual(This,Range,IsEqual) ) 

#define IHTMLTxtRange_scrollIntoView(This,fStart)	\
    ( (This)->lpVtbl -> scrollIntoView(This,fStart) ) 

#define IHTMLTxtRange_collapse(This,Start)	\
    ( (This)->lpVtbl -> collapse(This,Start) ) 

#define IHTMLTxtRange_expand(This,Unit,Success)	\
    ( (This)->lpVtbl -> expand(This,Unit,Success) ) 

#define IHTMLTxtRange_move(This,Unit,Count,ActualCount)	\
    ( (This)->lpVtbl -> move(This,Unit,Count,ActualCount) ) 

#define IHTMLTxtRange_moveStart(This,Unit,Count,ActualCount)	\
    ( (This)->lpVtbl -> moveStart(This,Unit,Count,ActualCount) ) 

#define IHTMLTxtRange_moveEnd(This,Unit,Count,ActualCount)	\
    ( (This)->lpVtbl -> moveEnd(This,Unit,Count,ActualCount) ) 

#define IHTMLTxtRange_select(This)	\
    ( (This)->lpVtbl -> select(This) ) 

#define IHTMLTxtRange_pasteHTML(This,html)	\
    ( (This)->lpVtbl -> pasteHTML(This,html) ) 

#define IHTMLTxtRange_moveToElementText(This,element)	\
    ( (This)->lpVtbl -> moveToElementText(This,element) ) 

#define IHTMLTxtRange_setEndPoint(This,how,SourceRange)	\
    ( (This)->lpVtbl -> setEndPoint(This,how,SourceRange) ) 

#define IHTMLTxtRange_compareEndPoints(This,how,SourceRange,ret)	\
    ( (This)->lpVtbl -> compareEndPoints(This,how,SourceRange,ret) ) 

#define IHTMLTxtRange_findText(This,String,count,Flags,Success)	\
    ( (This)->lpVtbl -> findText(This,String,count,Flags,Success) ) 

#define IHTMLTxtRange_moveToPoint(This,x,y)	\
    ( (This)->lpVtbl -> moveToPoint(This,x,y) ) 

#define IHTMLTxtRange_getBookmark(This,Boolmark)	\
    ( (This)->lpVtbl -> getBookmark(This,Boolmark) ) 

#define IHTMLTxtRange_moveToBookmark(This,Bookmark,Success)	\
    ( (This)->lpVtbl -> moveToBookmark(This,Bookmark,Success) ) 

#define IHTMLTxtRange_queryCommandSupported(This,cmdID,pfRet)	\
    ( (This)->lpVtbl -> queryCommandSupported(This,cmdID,pfRet) ) 

#define IHTMLTxtRange_queryCommandEnabled(This,cmdID,pfRet)	\
    ( (This)->lpVtbl -> queryCommandEnabled(This,cmdID,pfRet) ) 

#define IHTMLTxtRange_queryCommandState(This,cmdID,pfRet)	\
    ( (This)->lpVtbl -> queryCommandState(This,cmdID,pfRet) ) 

#define IHTMLTxtRange_queryCommandIndeterm(This,cmdID,pfRet)	\
    ( (This)->lpVtbl -> queryCommandIndeterm(This,cmdID,pfRet) ) 

#define IHTMLTxtRange_queryCommandText(This,cmdID,pcmdText)	\
    ( (This)->lpVtbl -> queryCommandText(This,cmdID,pcmdText) ) 

#define IHTMLTxtRange_queryCommandValue(This,cmdID,pcmdValue)	\
    ( (This)->lpVtbl -> queryCommandValue(This,cmdID,pcmdValue) ) 

#define IHTMLTxtRange_execCommand(This,cmdID,showUI,value,pfRet)	\
    ( (This)->lpVtbl -> execCommand(This,cmdID,showUI,value,pfRet) ) 

#define IHTMLTxtRange_execCommandShowHelp(This,cmdID,pfRet)	\
    ( (This)->lpVtbl -> execCommandShowHelp(This,cmdID,pfRet) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLTxtRange_INTERFACE_DEFINED__ */


#ifndef __IHTMLTextRangeMetrics_INTERFACE_DEFINED__
#define __IHTMLTextRangeMetrics_INTERFACE_DEFINED__

/* interface IHTMLTextRangeMetrics */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTextRangeMetrics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f40b-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTextRangeMetrics : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetTop( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetLeft( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_boundingTop( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_boundingLeft( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_boundingWidth( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_boundingHeight( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLTextRangeMetricsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLTextRangeMetrics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLTextRangeMetrics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLTextRangeMetrics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLTextRangeMetrics * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLTextRangeMetrics * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLTextRangeMetrics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLTextRangeMetrics * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetTop )( 
            __RPC__in IHTMLTextRangeMetrics * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetLeft )( 
            __RPC__in IHTMLTextRangeMetrics * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_boundingTop )( 
            __RPC__in IHTMLTextRangeMetrics * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_boundingLeft )( 
            __RPC__in IHTMLTextRangeMetrics * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_boundingWidth )( 
            __RPC__in IHTMLTextRangeMetrics * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_boundingHeight )( 
            __RPC__in IHTMLTextRangeMetrics * This,
            /* [out][retval] */ __RPC__out long *p);
        
        END_INTERFACE
    } IHTMLTextRangeMetricsVtbl;

    interface IHTMLTextRangeMetrics
    {
        CONST_VTBL struct IHTMLTextRangeMetricsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLTextRangeMetrics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLTextRangeMetrics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLTextRangeMetrics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLTextRangeMetrics_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLTextRangeMetrics_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLTextRangeMetrics_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLTextRangeMetrics_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLTextRangeMetrics_get_offsetTop(This,p)	\
    ( (This)->lpVtbl -> get_offsetTop(This,p) ) 

#define IHTMLTextRangeMetrics_get_offsetLeft(This,p)	\
    ( (This)->lpVtbl -> get_offsetLeft(This,p) ) 

#define IHTMLTextRangeMetrics_get_boundingTop(This,p)	\
    ( (This)->lpVtbl -> get_boundingTop(This,p) ) 

#define IHTMLTextRangeMetrics_get_boundingLeft(This,p)	\
    ( (This)->lpVtbl -> get_boundingLeft(This,p) ) 

#define IHTMLTextRangeMetrics_get_boundingWidth(This,p)	\
    ( (This)->lpVtbl -> get_boundingWidth(This,p) ) 

#define IHTMLTextRangeMetrics_get_boundingHeight(This,p)	\
    ( (This)->lpVtbl -> get_boundingHeight(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLTextRangeMetrics_INTERFACE_DEFINED__ */


#ifndef __IHTMLTextRangeMetrics2_INTERFACE_DEFINED__
#define __IHTMLTextRangeMetrics2_INTERFACE_DEFINED__

/* interface IHTMLTextRangeMetrics2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTextRangeMetrics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a6-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTextRangeMetrics2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getClientRects( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLRectCollection **pRectCol) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getBoundingClientRect( 
            /* [out][retval] */ __RPC__deref_out_opt IHTMLRect **pRect) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLTextRangeMetrics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLTextRangeMetrics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLTextRangeMetrics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLTextRangeMetrics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLTextRangeMetrics2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLTextRangeMetrics2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLTextRangeMetrics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLTextRangeMetrics2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getClientRects )( 
            __RPC__in IHTMLTextRangeMetrics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLRectCollection **pRectCol);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getBoundingClientRect )( 
            __RPC__in IHTMLTextRangeMetrics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IHTMLRect **pRect);
        
        END_INTERFACE
    } IHTMLTextRangeMetrics2Vtbl;

    interface IHTMLTextRangeMetrics2
    {
        CONST_VTBL struct IHTMLTextRangeMetrics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLTextRangeMetrics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLTextRangeMetrics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLTextRangeMetrics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLTextRangeMetrics2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLTextRangeMetrics2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLTextRangeMetrics2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLTextRangeMetrics2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLTextRangeMetrics2_getClientRects(This,pRectCol)	\
    ( (This)->lpVtbl -> getClientRects(This,pRectCol) ) 

#define IHTMLTextRangeMetrics2_getBoundingClientRect(This,pRect)	\
    ( (This)->lpVtbl -> getBoundingClientRect(This,pRect) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLTextRangeMetrics2_INTERFACE_DEFINED__ */


#ifndef __IHTMLTxtRangeCollection_INTERFACE_DEFINED__
#define __IHTMLTxtRangeCollection_INTERFACE_DEFINED__

/* interface IHTMLTxtRangeCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTxtRangeCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f7ed-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTxtRangeCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ __RPC__in VARIANT *pvarIndex,
            /* [out][retval] */ __RPC__out VARIANT *pvarResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLTxtRangeCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLTxtRangeCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLTxtRangeCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLTxtRangeCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLTxtRangeCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLTxtRangeCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLTxtRangeCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLTxtRangeCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLTxtRangeCollection * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__newEnum )( 
            __RPC__in IHTMLTxtRangeCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            __RPC__in IHTMLTxtRangeCollection * This,
            /* [in] */ __RPC__in VARIANT *pvarIndex,
            /* [out][retval] */ __RPC__out VARIANT *pvarResult);
        
        END_INTERFACE
    } IHTMLTxtRangeCollectionVtbl;

    interface IHTMLTxtRangeCollection
    {
        CONST_VTBL struct IHTMLTxtRangeCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLTxtRangeCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLTxtRangeCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLTxtRangeCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLTxtRangeCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLTxtRangeCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLTxtRangeCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLTxtRangeCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLTxtRangeCollection_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#define IHTMLTxtRangeCollection_get__newEnum(This,p)	\
    ( (This)->lpVtbl -> get__newEnum(This,p) ) 

#define IHTMLTxtRangeCollection_item(This,pvarIndex,pvarResult)	\
    ( (This)->lpVtbl -> item(This,pvarIndex,pvarResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLTxtRangeCollection_INTERFACE_DEFINED__ */


#ifndef __HTMLFormElementEvents2_DISPINTERFACE_DEFINED__
#define __HTMLFormElementEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLFormElementEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLFormElementEvents2;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f614-98b5-11cf-bb82-00aa00bdce0b")
    HTMLFormElementEvents2 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct HTMLFormElementEvents2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in HTMLFormElementEvents2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in HTMLFormElementEvents2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in HTMLFormElementEvents2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in HTMLFormElementEvents2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in HTMLFormElementEvents2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in HTMLFormElementEvents2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            HTMLFormElementEvents2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } HTMLFormElementEvents2Vtbl;

    interface HTMLFormElementEvents2
    {
        CONST_VTBL struct HTMLFormElementEvents2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLFormElementEvents2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define HTMLFormElementEvents2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define HTMLFormElementEvents2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define HTMLFormElementEvents2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define HTMLFormElementEvents2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define HTMLFormElementEvents2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define HTMLFormElementEvents2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __HTMLFormElementEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLFormElementEvents_DISPINTERFACE_DEFINED__
#define __HTMLFormElementEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLFormElementEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLFormElementEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f364-98b5-11cf-bb82-00aa00bdce0b")
    HTMLFormElementEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct HTMLFormElementEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in HTMLFormElementEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in HTMLFormElementEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in HTMLFormElementEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in HTMLFormElementEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in HTMLFormElementEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in HTMLFormElementEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            HTMLFormElementEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } HTMLFormElementEventsVtbl;

    interface HTMLFormElementEvents
    {
        CONST_VTBL struct HTMLFormElementEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLFormElementEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define HTMLFormElementEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define HTMLFormElementEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define HTMLFormElementEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define HTMLFormElementEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define HTMLFormElementEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define HTMLFormElementEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __HTMLFormElementEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLFormElement_INTERFACE_DEFINED__
#define __IHTMLFormElement_INTERFACE_DEFINED__

/* interface IHTMLFormElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFormElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f1f7-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFormElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_action( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_action( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_dir( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_dir( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_encoding( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_encoding( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_method( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_method( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_elements( 
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_target( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_target( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onsubmit( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onsubmit( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onreset( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onreset( 
            /* [out][retval] */ __RPC__out VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE submit( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE reset( void) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_length( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ __RPC__out long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in][optional] */ VARIANT name,
            /* [in][optional] */ VARIANT index,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE tags( 
            /* [in] */ VARIANT tagName,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLFormElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLFormElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLFormElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLFormElement * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLFormElement * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_action )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_action )( 
            __RPC__in IHTMLFormElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_dir )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_dir )( 
            __RPC__in IHTMLFormElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_encoding )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_encoding )( 
            __RPC__in IHTMLFormElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_method )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_method )( 
            __RPC__in IHTMLFormElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_elements )( 
            __RPC__in IHTMLFormElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_target )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_target )( 
            __RPC__in IHTMLFormElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_name )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_name )( 
            __RPC__in IHTMLFormElement * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onsubmit )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onsubmit )( 
            __RPC__in IHTMLFormElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onreset )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onreset )( 
            __RPC__in IHTMLFormElement * This,
            /* [out][retval] */ __RPC__out VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *submit )( 
            __RPC__in IHTMLFormElement * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *reset )( 
            __RPC__in IHTMLFormElement * This);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_length )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            __RPC__in IHTMLFormElement * This,
            /* [out][retval] */ __RPC__out long *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__newEnum )( 
            __RPC__in IHTMLFormElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IUnknown **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            __RPC__in IHTMLFormElement * This,
            /* [in][optional] */ VARIANT name,
            /* [in][optional] */ VARIANT index,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *tags )( 
            __RPC__in IHTMLFormElement * This,
            /* [in] */ VARIANT tagName,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp);
        
        END_INTERFACE
    } IHTMLFormElementVtbl;

    interface IHTMLFormElement
    {
        CONST_VTBL struct IHTMLFormElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLFormElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLFormElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLFormElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLFormElement_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLFormElement_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLFormElement_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLFormElement_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLFormElement_put_action(This,v)	\
    ( (This)->lpVtbl -> put_action(This,v) ) 

#define IHTMLFormElement_get_action(This,p)	\
    ( (This)->lpVtbl -> get_action(This,p) ) 

#define IHTMLFormElement_put_dir(This,v)	\
    ( (This)->lpVtbl -> put_dir(This,v) ) 

#define IHTMLFormElement_get_dir(This,p)	\
    ( (This)->lpVtbl -> get_dir(This,p) ) 

#define IHTMLFormElement_put_encoding(This,v)	\
    ( (This)->lpVtbl -> put_encoding(This,v) ) 

#define IHTMLFormElement_get_encoding(This,p)	\
    ( (This)->lpVtbl -> get_encoding(This,p) ) 

#define IHTMLFormElement_put_method(This,v)	\
    ( (This)->lpVtbl -> put_method(This,v) ) 

#define IHTMLFormElement_get_method(This,p)	\
    ( (This)->lpVtbl -> get_method(This,p) ) 

#define IHTMLFormElement_get_elements(This,p)	\
    ( (This)->lpVtbl -> get_elements(This,p) ) 

#define IHTMLFormElement_put_target(This,v)	\
    ( (This)->lpVtbl -> put_target(This,v) ) 

#define IHTMLFormElement_get_target(This,p)	\
    ( (This)->lpVtbl -> get_target(This,p) ) 

#define IHTMLFormElement_put_name(This,v)	\
    ( (This)->lpVtbl -> put_name(This,v) ) 

#define IHTMLFormElement_get_name(This,p)	\
    ( (This)->lpVtbl -> get_name(This,p) ) 

#define IHTMLFormElement_put_onsubmit(This,v)	\
    ( (This)->lpVtbl -> put_onsubmit(This,v) ) 

#define IHTMLFormElement_get_onsubmit(This,p)	\
    ( (This)->lpVtbl -> get_onsubmit(This,p) ) 

#define IHTMLFormElement_put_onreset(This,v)	\
    ( (This)->lpVtbl -> put_onreset(This,v) ) 

#define IHTMLFormElement_get_onreset(This,p)	\
    ( (This)->lpVtbl -> get_onreset(This,p) ) 

#define IHTMLFormElement_submit(This)	\
    ( (This)->lpVtbl -> submit(This) ) 

#define IHTMLFormElement_reset(This)	\
    ( (This)->lpVtbl -> reset(This) ) 

#define IHTMLFormElement_put_length(This,v)	\
    ( (This)->lpVtbl -> put_length(This,v) ) 

#define IHTMLFormElement_get_length(This,p)	\
    ( (This)->lpVtbl -> get_length(This,p) ) 

#define IHTMLFormElement_get__newEnum(This,p)	\
    ( (This)->lpVtbl -> get__newEnum(This,p) ) 

#define IHTMLFormElement_item(This,name,index,pdisp)	\
    ( (This)->lpVtbl -> item(This,name,index,pdisp) ) 

#define IHTMLFormElement_tags(This,tagName,pdisp)	\
    ( (This)->lpVtbl -> tags(This,tagName,pdisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLFormElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLFormElement2_INTERFACE_DEFINED__
#define __IHTMLFormElement2_INTERFACE_DEFINED__

/* interface IHTMLFormElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFormElement2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4f6-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFormElement2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_acceptCharset( 
            /* [in] */ __RPC__in BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_acceptCharset( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE urns( 
            /* [in] */ VARIANT urn,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLFormElement2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLFormElement2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLFormElement2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLFormElement2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLFormElement2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLFormElement2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLFormElement2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLFormElement2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_acceptCharset )( 
            __RPC__in IHTMLFormElement2 * This,
            /* [in] */ __RPC__in BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_acceptCharset )( 
            __RPC__in IHTMLFormElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *urns )( 
            __RPC__in IHTMLFormElement2 * This,
            /* [in] */ VARIANT urn,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp);
        
        END_INTERFACE
    } IHTMLFormElement2Vtbl;

    interface IHTMLFormElement2
    {
        CONST_VTBL struct IHTMLFormElement2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLFormElement2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLFormElement2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLFormElement2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLFormElement2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLFormElement2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLFormElement2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLFormElement2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLFormElement2_put_acceptCharset(This,v)	\
    ( (This)->lpVtbl -> put_acceptCharset(This,v) ) 

#define IHTMLFormElement2_get_acceptCharset(This,p)	\
    ( (This)->lpVtbl -> get_acceptCharset(This,p) ) 

#define IHTMLFormElement2_urns(This,urn,pdisp)	\
    ( (This)->lpVtbl -> urns(This,urn,pdisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLFormElement2_INTERFACE_DEFINED__ */


#ifndef __IHTMLFormElement3_INTERFACE_DEFINED__
#define __IHTMLFormElement3_INTERFACE_DEFINED__

/* interface IHTMLFormElement3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFormElement3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f836-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFormElement3 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE namedItem( 
            /* [in] */ __RPC__in BSTR name,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLFormElement3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLFormElement3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLFormElement3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLFormElement3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLFormElement3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLFormElement3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLFormElement3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLFormElement3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *namedItem )( 
            __RPC__in IHTMLFormElement3 * This,
            /* [in] */ __RPC__in BSTR name,
            /* [out][retval] */ __RPC__deref_out_opt IDispatch **pdisp);
        
        END_INTERFACE
    } IHTMLFormElement3Vtbl;

    interface IHTMLFormElement3
    {
        CONST_VTBL struct IHTMLFormElement3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLFormElement3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLFormElement3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLFormElement3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLFormElement3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLFormElement3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLFormElement3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLFormElement3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLFormElement3_namedItem(This,name,pdisp)	\
    ( (This)->lpVtbl -> namedItem(This,name,pdisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLFormElement3_INTERFACE_DEFINED__ */


#ifndef __IHTMLSubmitData_INTERFACE_DEFINED__
#define __IHTMLSubmitData_INTERFACE_DEFINED__

/* interface IHTMLSubmitData */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLSubmitData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f645-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLSubmitData : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE appendNameValuePair( 
            /* [in][defaultvalue] */ __RPC__in BSTR name = L"",
            /* [in][defaultvalue] */ __RPC__in BSTR value = L"") = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE appendNameFilePair( 
            /* [in][defaultvalue] */ __RPC__in BSTR name = L"",
            /* [in][defaultvalue] */ __RPC__in BSTR filename = L"") = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE appendItemSeparator( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLSubmitDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHTMLSubmitData * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHTMLSubmitData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHTMLSubmitData * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IHTMLSubmitData * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IHTMLSubmitData * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IHTMLSubmitData * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLSubmitData * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *appendNameValuePair )( 
            __RPC__in IHTMLSubmitData * This,
            /* [in][defaultvalue] */ __RPC__in BSTR name,
            /* [in][defaultvalue] */ __RPC__in BSTR value);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *appendNameFilePair )( 
            __RPC__in IHTMLSubmitData * This,
            /* [in][defaultvalue] */ __RPC__in BSTR name,
            /* [in][defaultvalue] */ __RPC__in BSTR filename);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *appendItemSeparator )( 
            __RPC__in IHTMLSubmitData * This);
        
        END_INTERFACE
    } IHTMLSubmitDataVtbl;

    interface IHTMLSubmitData
    {
        CONST_VTBL struct IHTMLSubmitDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLSubmitData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHTMLSubmitData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHTMLSubmitData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHTMLSubmitData_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHTMLSubmitData_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHTMLSubmitData_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHTMLSubmitData_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHTMLSubmitData_appendNameValuePair(This,name,value)	\
    ( (This)->lpVtbl -> appendNameValuePair(This,name,value) ) 

#define IHTMLSubmitData_appendNameFilePair(This,name,filename)	\
    ( (This)->lpVtbl -> appendNameFilePair(This,name,filename) ) 

#define IHTMLSubmitData_appendItemSeparator(This)	\
    ( (This)->lpVtbl -> appendItemSeparator(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHTMLSubmitData_INTERFACE_DEFINED__ */


#ifndef __IHTMLFormElement4_INTERFACE_DEFINED__
#define __IHTMLFormElement4_INTERFACE_DEFINED__

/* interface IHTMLFormElement4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFormElement4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3051042c-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFormElement4 : public IDispatch
    {
    public:
       