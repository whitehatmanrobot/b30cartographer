/ __RPC__in_opt IUnknown *punkWebReferenceFolder,
            /* [in] */ __RPC__in BSTR bstrDestinationPath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddWebReferenceTo( 
            /* [in] */ __RPC__in_opt IUnknown *punkWebReferenceFolder,
            /* [in] */ __RPC__in BSTR bstrDestinationPath,
            /* [in] */ __RPC__in BSTR bstrDiscomapFilename) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDiscoveryResultVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDiscoveryResult * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDiscoveryResult * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDiscoveryResult * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetRawXml )( 
            IDiscoveryResult * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrXml);
        
        HRESULT ( STDMETHODCALLTYPE *GetDocumentXml )( 
            IDiscoveryResult * This,
            /* [in] */ __RPC__in BSTR url,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrXml);
        
        HRESULT ( STDMETHODCALLTYPE *GetReferenceCount )( 
            IDiscoveryResult * This,
            /* [retval][out] */ __RPC__out int *pCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetReferenceInfo )( 
            IDiscoveryResult * This,
            /* [in] */ int pIndex,
            /* [retval][out] */ __RPC__deref_out_opt IReferenceInfo **ppIReferenceInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetDiscoverySession )( 
            IDiscoveryResult * This,
            /* [retval][out] */ __RPC__deref_out_opt IDiscoverySession **discoverySession);
        
        HRESULT ( STDMETHODCALLTYPE *GetUrl )( 
            IDiscoveryResult * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrUrl);
        
        HRESULT ( STDMETHODCALLTYPE *AddWebReference )( 
            IDiscoveryResult * This,
            /* [in] */ __RPC__in_opt IUnknown *punkWebReferenceFolder,
            /* [in] */ __RPC__in BSTR bstrDestinationPath);
        
        HRESULT ( STDMETHODCALLTYPE *AddWebReferenceTo )( 
            IDiscoveryResult * This,
            /* [in] */ __RPC__in_opt IUnknown *punkWebReferenceFolder,
            /* [in] */ __RPC__in BSTR bstrDestinationPath,
            /* [in] */ __RPC__in BSTR bstrDiscomapFilename);
        
        END_INTERFACE
    } IDiscoveryResultVtbl;

    interface IDiscoveryResult
    {
        CONST_VTBL struct IDiscoveryResultVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDiscoveryResult_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDiscoveryResult_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDiscoveryResult_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDiscoveryResult_GetRawXml(This,pbstrXml)	\
    ( (This)->lpVtbl -> GetRawXml(This,pbstrXml) ) 

#define IDiscoveryResult_GetDocumentXml(This,url,pbstrXml)	\
    ( (This)->lpVtbl -> GetDocumentXml(This,url,pbstrXml) ) 

#define IDiscoveryResult_GetReferenceCount(This,pCount)	\
    ( (This)->lpVtbl -> GetReferenceCount(This,pCount) ) 

#define IDiscoveryResult_GetReferenceInfo(This,pIndex,ppIReferenceInfo)	\
    ( (This)->lpVtbl -> GetReferenceInfo(This,pIndex,ppIReferenceInfo) ) 

#define IDiscoveryResult_GetDiscoverySession(This,discoverySession)	\
    ( (This)->lpVtbl -> GetDiscoverySession(This,discoverySession) ) 

#define IDiscoveryResult_GetUrl(This,pbstrUrl)	\
    ( (This)->lpVtbl -> GetUrl(This,pbstrUrl) ) 

#define IDiscoveryResult_AddWebReference(This,punkWebReferenceFolder,bstrDestinationPath)	\
    ( (This)->lpVtbl -> AddWebReference(This,punkWebReferenceFolder,bstrDestinationPath) ) 

#define IDiscoveryResult_AddWebReferenceTo(This,punkWebReferenceFolder,bstrDestinationPath,bstrDiscomapFilename)	\
    ( (This)->lpVtbl -> AddWebReferenceTo(This,punkWebReferenceFolder,bstrDestinationPath,bstrDiscomapFilename) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDiscoveryResult_INTERFACE_DEFINED__ */


#ifndef __IReferenceInfo_INTERFACE_DEFINED__
#define __IReferenceInfo_INTERFACE_DEFINED__

/* interface IReferenceInfo */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IReferenceInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B9A32C92-B14D-4ae3-A955-5CBC3E75FCA5")
    IReferenceInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNodeType( 
            /* [retval][out] */ __RPC__out DiscoveryNodeType *pType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUrl( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ppbstrUrl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IReferenceInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IReferenceInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IReferenceInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IReferenceInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetNodeType )( 
            IReferenceInfo * This,
            /* [retval][out] */ __RPC__out DiscoveryNodeType *pType);
        
        HRESULT ( STDMETHODCALLTYPE *GetUrl )( 
            IReferenceInfo * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ppbstrUrl);
        
        END_INTERFACE
    } IReferenceInfoVtbl;

    interface IReferenceInfo
    {
        CONST_VTBL struct IReferenceInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IReferenceInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IReferenceInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IReferenceInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IReferenceInfo_GetNodeType(This,pType)	\
    ( (This)->lpVtbl -> GetNodeType(This,pType) ) 

#define IReferenceInfo_GetUrl(This,ppbstrUrl)	\
    ( (This)->lpVtbl -> GetUrl(This,ppbstrUrl) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IReferenceInfo_INTERFACE_DEFINED__ */


#ifndef __ISchemaReferenceInfo_INTERFACE_DEFINED__
#define __ISchemaReferenceInfo_INTERFACE_DEFINED__

/* interface ISchemaReferenceInfo */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ISchemaReferenceInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B9A32C92-B14D-4ae3-A955-5CBC3E75FCA8")
    ISchemaReferenceInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTargetNamespace( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrRef) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISchemaReferenceInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISchemaReferenceInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISchemaReferenceInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISchemaReferenceInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTargetNamespace )( 
            ISchemaReferenceInfo * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrRef);
        
        END_INTERFACE
    } ISchemaReferenceInfoVtbl;

    interface ISchemaReferenceInfo
    {
        CONST_VTBL struct ISchemaReferenceInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISchemaReferenceInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISchemaReferenceInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISchemaReferenceInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISchemaReferenceInfo_GetTargetNamespace(This,pbstrRef)	\
    ( (This)->lpVtbl -> GetTargetNamespace(This,pbstrRef) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISchemaReferenceInfo_INTERFACE_DEFINED__ */


#ifndef __IDiscoverySession_INTERFACE_DEFINED__
#define __IDiscoverySession_INTERFACE_DEFINED__

/* interface IDiscoverySession */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IDiscoverySession;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D622FE99-2087-4d78-8B49-7B46460475FD")
    IDiscoverySession : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE DiscoverUrl( 
            /* [in] */ __RPC__in BSTR pbstrUrl,
            /* [retval][out] */ __RPC__deref_out_opt IDiscoveryResult **pIDiscoveryResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DiscoverUrlAsync( 
            /* [in] */ __RPC__in BSTR url,
            /* [in] */ __RPC__in_opt IDiscoverUrlCallBack *pDiscoverUrlCallBack,
            /* [retval][out] */ __RPC__out int *cookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CancelDiscoverUrl( 
            /* [in] */ int cookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDiscoverError( 
            /* [in] */ int cookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateWebReference( 
            /* [in] */ __RPC__in_opt IUnknown *punkWebReferenceFolder,
            /* [in] */ __RPC__in BSTR bstrUrl,
            /* [in] */ __RPC__in BSTR bstrDestinationPath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDiscoverySessionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDiscoverySession * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDiscoverySession * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDiscoverySession * This);
        
        HRESULT ( STDMETHODCALLTYPE *DiscoverUrl )( 
            IDiscoverySession * This,
            /* [in] */ __RPC__in BSTR pbstrUrl,
            /* [retval][out] */ __RPC__deref_out_opt IDiscoveryResult **pIDiscoveryResult);
        
        HRESULT ( STDMETHODCALLTYPE *DiscoverUrlAsync )( 
            IDiscoverySession * This,
            /* [in] */ __RPC__in BSTR url,
            /* [in] */ __RPC__in_opt IDiscoverUrlCallBack *pDiscoverUrlCallBack,
            /* [retval][out] */ __RPC__out int *cookie);
        
        HRESULT ( STDMETHODCALLTYPE *CancelDiscoverUrl )( 
            IDiscoverySession * This,
            /* [in] */ int cookie);
        
        HRESULT ( STDMETHODCALLTYPE *GetDiscoverError )( 
            IDiscoverySession * This,
            /* [in] */ int cookie);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateWebReference )( 
            IDiscoverySession * This,
            /* [in] */ __RPC__in_opt IUnknown *punkWebReferenceFolder,
            /* [in] */ __RPC__in BSTR bstrUrl,
            /* [in] */ __RPC__in BSTR bstrDestinationPath);
        
        END_INTERFACE
    } IDiscoverySessionVtbl;

    interface IDiscoverySession
    {
        CONST_VTBL struct IDiscoverySessionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDiscoverySession_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDiscoverySession_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDiscoverySession_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDiscoverySession_DiscoverUrl(This,pbstrUrl,pIDiscoveryResult)	\
    ( (This)->lpVtbl -> DiscoverUrl(This,pbstrUrl,pIDiscoveryResult) ) 

#define IDiscoverySession_DiscoverUrlAsync(This,url,pDiscoverUrlCallBack,cookie)	\
    ( (This)->lpVtbl -> DiscoverUrlAsync(This,url,pDiscoverUrlCallBack,cookie) ) 

#define IDiscoverySession_CancelDiscoverUrl(This,cookie)	\
    ( (This)->lpVtbl -> CancelDiscoverUrl(This,cookie) ) 

#define IDiscoverySession_GetDiscoverError(This,cookie)	\
    ( (This)->lpVtbl -> GetDiscoverError(This,cookie) ) 

#define IDiscoverySession_UpdateWebReference(This,punkWebReferenceFolder,bstrUrl,bstrDestinationPath)	\
    ( (This)->lpVtbl -> UpdateWebReference(This,punkWebReferenceFolder,bstrUrl,bstrDestinationPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDiscoverySession_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\dte.h ===
/*****************************************************************************
*  dte.h
*
*  Copyright (C) 1995-2000, Microsoft Corporation.  All Rights Reserved.
*
******************************************************************************/

namespace VxDTE
{
    #include "dteinternal.h"
};

#ifndef FORCE_EXPLICIT_DTE_NAMESPACE
using namespace VxDTE;
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\DiscoveryService90.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for discoveryservice90.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __discoveryservice90_h__
#define __discoveryservice90_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IDiscoveryResult3_FWD_DEFINED__
#define __IDiscoveryResult3_FWD_DEFINED__
typedef interface IDiscoveryResult3 IDiscoveryResult3;
#endif 	/* __IDiscoveryResult3_FWD_DEFINED__ */


#ifndef __IDiscoverySession2_FWD_DEFINED__
#define __IDiscoverySession2_FWD_DEFINED__
typedef interface IDiscoverySession2 IDiscoverySession2;
#endif 	/* __IDiscoverySession2_FWD_DEFINED__ */


#ifndef __IReferenceInfo2_FWD_DEFINED__
#define __IReferenceInfo2_FWD_DEFINED__
typedef interface IReferenceInfo2 IReferenceInfo2;
#endif 	/* __IReferenceInfo2_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "oleipc.h"
#include "vsshell.h"
#include "discoveryservice80.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_discoveryservice90_0000_0000 */
/* [local] */ 





enum DiscoveryProtocol
    {	DP_DiscoveryClientProtocol	= 1,
	DP_MetadataExchangeProtocol	= 2,
	DP_DiscoveryDataServiceProtocol	= 3
    } ;
typedef enum DiscoveryProtocol DiscoveryProtocol;



extern RPC_IF_HANDLE __MIDL_itf_discoveryservice90_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_discoveryservice90_0000_0000_v0_0_s_ifspec;

#ifndef __IDiscoveryResult3_INTERFACE_DEFINED__
#define __IDiscoveryResult3_INTERFACE_DEFINED__

/* interface IDiscoveryResult3 */
/* [object][uuid][unique][version] */ 


EXTERN_C const IID IID_IDiscoveryResult3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6e1073e5-a112-441a-8386-232cecc0c29b")
    IDiscoveryResult3 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetProtocol( 
            /* [retval][out] */ __RPC__out DiscoveryProtocol *pDiscoveryProtocol) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDiscoveryResult3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDiscoveryResult3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDiscoveryResult3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDiscoveryResult3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetProtocol )( 
            IDiscoveryResult3 * This,
            /* [retval][out] */ __RPC__out DiscoveryProtocol *pDiscoveryProtocol);
        
        END_INTERFACE
    } IDiscoveryResult3Vtbl;

    interface IDiscoveryResult3
    {
        CONST_VTBL struct IDiscoveryResult3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDiscoveryResult3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDiscoveryResult3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDiscoveryResult3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDiscoveryResult3_GetProtocol(This,pDiscoveryProtocol)	\
    ( (This)->lpVtbl -> GetProtocol(This,pDiscoveryProtocol) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDiscoveryResult3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_discoveryservice90_0000_0001 */
/* [local] */ 


enum DiscoverySessionProtocolPriority
    {	DSPP_NoPriority	= 0,
	DSPP_DiscoveryProtocolFirst	= 1,
	DSPP_MetadataExchangeFirst	= 2
    } ;
typedef enum DiscoverySessionProtocolPriority DiscoverySessionProtocolPriority;



extern RPC_IF_HANDLE __MIDL_itf_discoveryservice90_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_discoveryservice90_0000_0001_v0_0_s_ifspec;

#ifndef __IDiscoverySession2_INTERFACE_DEFINED__
#define __IDiscoverySession2_INTERFACE_DEFINED__

/* interface IDiscoverySession2 */
/* [object][uuid][unique][version] */ 


EXTERN_C const IID IID_IDiscoverySession2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("182b5eb4-9a58-47b7-a3fe-ac7ed8b891ff")
    IDiscoverySession2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE DiscoverUrlWithMetadataExchange( 
            __RPC__in LPCOLESTR url,
            DiscoverySessionProtocolPriority protocolPriority,
            BOOL resolveAllFiles,
            __RPC__in LPCOLESTR toolConfigurationPath,
            /* [out] */ __RPC__deref_out_opt IDiscoveryResult **ppDiscoverResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DiscoverUrlAsyncWithMetadataExchange( 
            __RPC__in LPCOLESTR url,
            DiscoverySessionProtocolPriority protocolPriority,
            BOOL resolveAllFiles,
            __RPC__in LPCOLESTR toolConfigurationPath,
            __RPC__in_opt IDiscoverUrlCallBack *pDiscoverUrlCallBack,
            /* [out] */ __RPC__out int *pCookieID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDiscoverySession2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDiscoverySession2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDiscoverySession2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDiscoverySession2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *DiscoverUrlWithMetadataExchange )( 
            IDiscoverySession2 * This,
            __RPC__in LPCOLESTR url,
            DiscoverySessionProtocolPriority protocolPriority,
            BOOL resolveAllFiles,
            __RPC__in LPCOLESTR toolConfigurationPath,
            /* [out] */ __RPC__deref_out_opt IDiscoveryResult **ppDiscoverResult);
        
        HRESULT ( STDMETHODCALLTYPE *DiscoverUrlAsyncWithMetadataExchange )( 
            IDiscoverySession2 * This,
            __RPC__in LPCOLESTR url,
            DiscoverySessionProtocolPriority protocolPriority,
            BOOL resolveAllFiles,
            __RPC__in LPCOLESTR toolConfigurationPath,
            __RPC__in_opt IDiscoverUrlCallBack *pDiscoverUrlCallBack,
            /* [out] */ __RPC__out int *pCookieID);
        
        END_INTERFACE
    } IDiscoverySession2Vtbl;

    interface IDiscoverySession2
    {
        CONST_VTBL struct IDiscoverySession2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDiscoverySession2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDiscoverySession2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDiscoverySession2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDiscoverySession2_DiscoverUrlWithMetadataExchange(This,url,protocolPriority,resolveAllFiles,toolConfigurationPath,ppDiscoverResult)	\
    ( (This)->lpVtbl -> DiscoverUrlWithMetadataExchange(This,url,protocolPriority,resolveAllFiles,toolConfigurationPath,ppDiscoverResult) ) 

#define IDiscoverySession2_DiscoverUrlAsyncWithMetadataExchange(This,url,protocolPriority,resolveAllFiles,toolConfigurationPath,pDiscoverUrlCallBack,pCookieID)	\
    ( (This)->lpVtbl -> DiscoverUrlAsyncWithMetadataExchange(This,url,protocolPriority,resolveAllFiles,toolConfigurationPath,pDiscoverUrlCallBack,pCookieID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDiscoverySession2_INTERFACE_DEFINED__ */


#ifndef __IReferenceInfo2_INTERFACE_DEFINED__
#define __IReferenceInfo2_INTERFACE_DEFINED__

/* interface IReferenceInfo2 */
/* [object][uuid][unique][version] */ 


EXTERN_C const IID IID_IReferenceInfo2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e316ff6d-ca00-49dd-969f-441399132ac7")
    IReferenceInfo2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDefaultFileName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDefaultName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDocumentContents( 
            /* [retval][out] */ __RPC__deref_out_opt SAFEARRAY * *pContent) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IReferenceInfo2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IReferenceInfo2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IReferenceInfo2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IReferenceInfo2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultFileName )( 
            IReferenceInfo2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDefaultName);
        
        HRESULT ( STDMETHODCALLTYPE *GetDocumentContents )( 
            IReferenceInfo2 * This,
            /* [retval][out] */ __RPC__deref_out_opt SAFEARRAY * *pContent);
        
        END_INTERFACE
    } IReferenceInfo2Vtbl;

    interface IReferenceInfo2
    {
        CONST_VTBL struct IReferenceInfo2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IReferenceInfo2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IReferenceInfo2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IReferenceInfo2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IReferenceInfo2_GetDefaultFileName(This,pbstrDefaultName)	\
    ( (This)->lpVtbl -> GetDefaultFileName(This,pbstrDefaultName) ) 

#define IReferenceInfo2_GetDocumentContents(This,pContent)	\
    ( (This)->lpVtbl -> GetDocumentContents(This,pContent) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IReferenceInfo2_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

unsigned long             __RPC_USER  LPSAFEARRAY_UserSize(     unsigned long *, unsigned long            , LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserMarshal(  unsigned long *, unsigned char *, LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserUnmarshal(unsigned long *, unsigned char *, LPSAFEARRAY * ); 
void                      __RPC_USER  LPSAFEARRAY_UserFree(     unsigned long *, LPSAFEARRAY * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\discoveryservice80.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for discoveryservice80.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __discoveryservice80_h__
#define __discoveryservice80_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IDiscoveryResult2_FWD_DEFINED__
#define __IDiscoveryResult2_FWD_DEFINED__
typedef interface IDiscoveryResult2 IDiscoveryResult2;
#endif 	/* __IDiscoveryResult2_FWD_DEFINED__ */


#ifndef __IDiscoveryClientResult_FWD_DEFINED__
#define __IDiscoveryClientResult_FWD_DEFINED__
typedef interface IDiscoveryClientResult IDiscoveryClientResult;
#endif 	/* __IDiscoveryClientResult_FWD_DEFINED__ */


#ifndef __IDiscoveryClientResultCollection_FWD_DEFINED__
#define __IDiscoveryClientResultCollection_FWD_DEFINED__
typedef interface IDiscoveryClientResultCollection IDiscoveryClientResultCollection;
#endif 	/* __IDiscoveryClientResultCollection_FWD_DEFINED__ */


/* header files for imported files */
#include "ocidl.h"
#include "discoveryservice.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_discoveryservice80_0000_0000 */
/* [local] */ 






extern RPC_IF_HANDLE __MIDL_itf_discoveryservice80_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_discoveryservice80_0000_0000_v0_0_s_ifspec;

#ifndef __IDiscoveryResult2_INTERFACE_DEFINED__
#define __IDiscoveryResult2_INTERFACE_DEFINED__

/* interface IDiscoveryResult2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IDiscoveryResult2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9947783D-B173-4fd9-8E6E-91482CF9E239")
    IDiscoveryResult2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE DownloadServiceDocument( 
            /* [in] */ __RPC__in BSTR bstrDestinationPath,
            /* [in] */ __RPC__in BSTR bstrDiscomapFileName,
            /* [retval][out] */ __RPC__deref_out_opt IDiscoveryClientResultCollection **ppIDiscoveryClientResultCollection) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDiscoveryResult2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDiscoveryResult2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDiscoveryResult2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDiscoveryResult2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *DownloadServiceDocument )( 
            IDiscoveryResult2 * This,
            /* [in] */ __RPC__in BSTR bstrDestinationPath,
            /* [in] */ __RPC__in BSTR bstrDiscomapFileName,
            /* [retval][out] */ __RPC__deref_out_opt IDiscoveryClientResultCollection **ppIDiscoveryClientResultCollection);
        
        END_INTERFACE
    } IDiscoveryResult2Vtbl;

    interface IDiscoveryResult2
    {
        CONST_VTBL struct IDiscoveryResult2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDiscoveryResult2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDiscoveryResult2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDiscoveryResult2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDiscoveryResult2_DownloadServiceDocument(This,bstrDestinationPath,bstrDiscomapFileName,ppIDiscoveryClientResultCollection)	\
    ( (This)->lpVtbl -> DownloadServiceDocument(This,bstrDestinationPath,bstrDiscomapFileName,ppIDiscoveryClientResultCollection) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDiscoveryResult2_INTERFACE_DEFINED__ */


#ifndef __IDiscoveryClientResult_INTERFACE_DEFINED__
#define __IDiscoveryClientResult_INTERFACE_DEFINED__

/* interface IDiscoveryClientResult */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IDiscoveryClientResult;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FC5E8B09-FF17-4da6-BA39-EB8DFC314BC1")
    IDiscoveryClientResult : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFileName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrFilename) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetReferenceTypeName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReferenceTypeName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUrl( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrUrl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDiscoveryClientResultVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDiscoveryClientResult * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDiscoveryClientResult * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDiscoveryClientResult * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetFileName )( 
            IDiscoveryClientResult * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrFilename);
        
        HRESULT ( STDMETHODCALLTYPE *GetReferenceTypeName )( 
            IDiscoveryClientResult * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReferenceTypeName);
        
        HRESULT ( STDMETHODCALLTYPE *GetUrl )( 
            IDiscoveryClientResult * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrUrl);
        
        END_INTERFACE
    } IDiscoveryClientResultVtbl;

    interface IDiscoveryClientResult
    {
        CONST_VTBL struct IDiscoveryClientResultVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDiscoveryClientResult_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDiscoveryClientResult_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDiscoveryClientResult_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDiscoveryClientResult_GetFileName(This,pbstrFilename)	\
    ( (This)->lpVtbl -> GetFileName(This,pbstrFilename) ) 

#define IDiscoveryClientResult_GetReferenceTypeName(This,pbstrReferenceTypeName)	\
    ( (This)->lpVtbl -> GetReferenceTypeName(This,pbstrReferenceTypeName) ) 

#define IDiscoveryClientResult_GetUrl(This,pbstrUrl)	\
    ( (This)->lpVtbl -> GetUrl(This,pbstrUrl) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDiscoveryClientResult_INTERFACE_DEFINED__ */


#ifndef __IDiscoveryClientResultCollection_INTERFACE_DEFINED__
#define __IDiscoveryClientResultCollection_INTERFACE_DEFINED__

/* interface IDiscoveryClientResultCollection */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IDiscoveryClientResultCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BCEB2C6C-E0D1-4fa5-8DDC-977D68E8D50B")
    IDiscoveryClientResultCollection : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetResultCount( 
            /* [retval][out] */ __RPC__out int *pCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetResult( 
            /* [in] */ int pIndex,
            /* [retval][out] */ __RPC__deref_out_opt IDiscoveryClientResult **ppIDiscoveryClientResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDiscoveryClientResultCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDiscoveryClientResultCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDiscoveryClientResultCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDiscoveryClientResultCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetResultCount )( 
            IDiscoveryClientResultCollection * This,
            /* [retval][out] */ __RPC__out int *pCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetResult )( 
            IDiscoveryClientResultCollection * This,
            /* [in] */ int pIndex,
            /* [retval][out] */ __RPC__deref_out_opt IDiscoveryClientResult **ppIDiscoveryClientResult);
        
        END_INTERFACE
    } IDiscoveryClientResultCollectionVtbl;

    interface IDiscoveryClientResultCollection
    {
        CONST_VTBL struct IDiscoveryClientResultCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDiscoveryClientResultCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDiscoveryClientResultCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDiscoveryClientResultCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDiscoveryClientResultCollection_GetResultCount(This,pCount)	\
    ( (This)->lpVtbl -> GetResultCount(This,pCount) ) 

#define IDiscoveryClientResultCollection_GetResult(This,pIndex,ppIDiscoveryClientResult)	\
    ( (This)->lpVtbl -> GetResult(This,pIndex,ppIDiscoveryClientResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDiscoveryClientResultCollection_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\DTE90.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for dte90.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __dte90_h__
#define __dte90_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __ToolBoxTab3_FWD_DEFINED__
#define __ToolBoxTab3_FWD_DEFINED__
typedef interface ToolBoxTab3 ToolBoxTab3;
#endif 	/* __ToolBoxTab3_FWD_DEFINED__ */


#ifndef __HTMLWindow3_FWD_DEFINED__
#define __HTMLWindow3_FWD_DEFINED__
typedef interface HTMLWindow3 HTMLWindow3;
#endif 	/* __HTMLWindow3_FWD_DEFINED__ */


#ifndef __Debugger3_FWD_DEFINED__
#define __Debugger3_FWD_DEFINED__
typedef interface Debugger3 Debugger3;
#endif 	/* __Debugger3_FWD_DEFINED__ */


#ifndef __Thread2_FWD_DEFINED__
#define __Thread2_FWD_DEFINED__
typedef interface Thread2 Thread2;
#endif 	/* __Thread2_FWD_DEFINED__ */


#ifndef __Process3_FWD_DEFINED__
#define __Process3_FWD_DEFINED__
typedef interface Process3 Process3;
#endif 	/* __Process3_FWD_DEFINED__ */


#ifndef __Modules_FWD_DEFINED__
#define __Modules_FWD_DEFINED__
typedef interface Modules Modules;
#endif 	/* __Modules_FWD_DEFINED__ */


#ifndef __Module_FWD_DEFINED__
#define __Module_FWD_DEFINED__
typedef interface Module Module;
#endif 	/* __Module_FWD_DEFINED__ */


#ifndef __ExceptionGroups_FWD_DEFINED__
#define __ExceptionGroups_FWD_DEFINED__
typedef interface ExceptionGroups ExceptionGroups;
#endif 	/* __ExceptionGroups_FWD_DEFINED__ */


#ifndef __ExceptionSettings_FWD_DEFINED__
#define __ExceptionSettings_FWD_DEFINED__
typedef interface ExceptionSettings ExceptionSettings;
#endif 	/* __ExceptionSettings_FWD_DEFINED__ */


#ifndef __ExceptionSetting_FWD_DEFINED__
#define __ExceptionSetting_FWD_DEFINED__
typedef interface ExceptionSetting ExceptionSetting;
#endif 	/* __ExceptionSetting_FWD_DEFINED__ */


#ifndef __Template_FWD_DEFINED__
#define __Template_FWD_DEFINED__
typedef interface Template Template;
#endif 	/* __Template_FWD_DEFINED__ */


#ifndef __Templates_FWD_DEFINED__
#define __Templates_FWD_DEFINED__
typedef interface Templates Templates;
#endif 	/* __Templates_FWD_DEFINED__ */


#ifndef __Solution3_FWD_DEFINED__
#define __Solution3_FWD_DEFINED__
typedef interface Solution3 Solution3;
#endif 	/* __Solution3_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_dte90_0000_0000 */
/* [local] */ 

#pragma once
#ifndef __INDENTSTYLE__
#define __INDENTSTYLE__
typedef /* [uuid] */  DECLSPEC_UUID("BCCEBE05-D29C-11D2-AABD-00C04F688DDE") 
enum _vsIndentStyle
    {	vsIndentStyleNone	= 0,
	vsIndentStyleDefault	= ( vsIndentStyleNone + 1 ) ,
	vsIndentStyleSmart	= ( vsIndentStyleDefault + 1 ) 
    } 	vsIndentStyle;

#endif // __INDENTSTYLE__


extern RPC_IF_HANDLE __MIDL_itf_dte90_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_dte90_0000_0000_v0_0_s_ifspec;


#ifndef __EnvDTE90_LIBRARY_DEFINED__
#define __EnvDTE90_LIBRARY_DEFINED__

/* library EnvDTE90 */
/* [version][helpstring][uuid] */ 

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("FCDF1B34-0781-43c6-BD46-062CAEA1FB05") 
enum vsHTMLViews
    {	vsHTMLViewSource	= 0,
	vsHTMLViewDesign	= 1
    } 	vsHTMLViews;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("7F27C244-AFD2-4bba-8193-DAA837CC03DA") 
enum vsHTMLPanes
    {	vsHTMLPaneSource	= 0,
	vsHTMLPaneDesign	= 1,
	vsHTMLPaneSplit	= 2
    } 	vsHTMLPanes;

typedef 
enum vsHTMLBackgroundTasks
    {	vsHTMLBackgroundCompilation	= 0,
	vsHTMLBackgroundToolboxPopulation	= ( vsHTMLBackgroundCompilation + 1 ) 
    } 	vsHTMLBackgroundTasks;









typedef 
enum enum_THREADCATEGORY
    {	THREADCATEGORY_Worker	= 0,
	THREADCATEGORY_UI	= ( THREADCATEGORY_Worker + 1 ) ,
	THREADCATEGORY_Main	= ( THREADCATEGORY_UI + 1 ) ,
	THREADCATEGORY_RPC	= ( THREADCATEGORY_Main + 1 ) ,
	THREADCATEGORY_Unknown	= ( THREADCATEGORY_RPC + 1 ) 
    } 	THREADCATEGORY;


EXTERN_C const IID LIBID_EnvDTE90;

#ifndef __ToolBoxTab3_INTERFACE_DEFINED__
#define __ToolBoxTab3_INTERFACE_DEFINED__

/* interface ToolBoxTab3 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ToolBoxTab3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("09D8476F-E6BF-46fb-A0A9-61C331B90F06")
    ToolBoxTab3 : public ToolBoxTab2
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Expanded( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfExpanded) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Expanded( 
            /* [in] */ VARIANT_BOOL fExpanded) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ToolBoxTab3Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ToolBoxTab3 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            ToolBoxTab3 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            ToolBoxTab3 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ToolBoxTab3 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ToolBoxTab3 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ToolBoxTab3 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ToolBoxTab3 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ToolBoxTab3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            ToolBoxTab3 * This,
            /* [in][idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            ToolBoxTab3 * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTabs **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ToolBoxTab3 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            ToolBoxTab3 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            ToolBoxTab3 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ToolBoxItems )( 
            ToolBoxTab3 * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItems **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ListView )( 
            ToolBoxTab3 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_ListView )( 
            ToolBoxTab3 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_UniqueID )( 
            ToolBoxTab3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_UniqueID )( 
            ToolBoxTab3 * This,
            /* [in][idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Expanded )( 
            ToolBoxTab3 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfExpanded);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Expanded )( 
            ToolBoxTab3 * This,
            /* [in] */ VARIANT_BOOL fExpanded);
        
        END_INTERFACE
    } ToolBoxTab3Vtbl;

    interface ToolBoxTab3
    {
        CONST_VTBL struct ToolBoxTab3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ToolBoxTab3_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define ToolBoxTab3_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define ToolBoxTab3_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define ToolBoxTab3_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define ToolBoxTab3_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define ToolBoxTab3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define ToolBoxTab3_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define ToolBoxTab3_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define ToolBoxTab3_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define ToolBoxTab3_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define ToolBoxTab3_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define ToolBoxTab3_Activate(This,retval)	\
    ( (This)->lpVtbl -> Activate(This,retval) ) 

#define ToolBoxTab3_Delete(This,retval)	\
    ( (This)->lpVtbl -> Delete(This,retval) ) 

#define ToolBoxTab3_get_ToolBoxItems(This,retval)	\
    ( (This)->lpVtbl -> get_ToolBoxItems(This,retval) ) 

#define ToolBoxTab3_get_ListView(This,retval)	\
    ( (This)->lpVtbl -> get_ListView(This,retval) ) 

#define ToolBoxTab3_put_ListView(This,noname,retval)	\
    ( (This)->lpVtbl -> put_ListView(This,noname,retval) ) 

#define ToolBoxTab3_get_UniqueID(This,retval)	\
    ( (This)->lpVtbl -> get_UniqueID(This,retval) ) 

#define ToolBoxTab3_put_UniqueID(This,noname,retval)	\
    ( (This)->lpVtbl -> put_UniqueID(This,noname,retval) ) 


#define ToolBoxTab3_get_Expanded(This,pfExpanded)	\
    ( (This)->lpVtbl -> get_Expanded(This,pfExpanded) ) 

#define ToolBoxTab3_put_Expanded(This,fExpanded)	\
    ( (This)->lpVtbl -> put_Expanded(This,fExpanded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ToolBoxTab3_INTERFACE_DEFINED__ */


#ifndef __HTMLWindow3_INTERFACE_DEFINED__
#define __HTMLWindow3_INTERFACE_DEFINED__

/* interface HTMLWindow3 */
/* [uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_HTMLWindow3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BAD0A3DD-8109-4684-B806-A5282267BFE4")
    HTMLWindow3 : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentView( 
            /* [retval][out] */ __RPC__out vsHTMLViews *pView) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CurrentView( 
            /* [in] */ vsHTMLViews View) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentPane( 
            /* [retval][out] */ __RPC__out vsHTMLPanes *pPane) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CurrentPane( 
            /* [in] */ vsHTMLPanes Pane) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE WaitForBackgroundProcessingComplete( 
            /* [in] */ vsHTMLBackgroundTasks Task) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct HTMLWindow3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            HTMLWindow3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            HTMLWindow3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            HTMLWindow3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            HTMLWindow3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            HTMLWindow3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            HTMLWindow3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            HTMLWindow3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentView )( 
            HTMLWindow3 * This,
            /* [retval][out] */ __RPC__out vsHTMLViews *pView);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentView )( 
            HTMLWindow3 * This,
            /* [in] */ vsHTMLViews View);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPane )( 
            HTMLWindow3 * This,
            /* [retval][out] */ __RPC__out vsHTMLPanes *pPane);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPane )( 
            HTMLWindow3 * This,
            /* [in] */ vsHTMLPanes Pane);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *WaitForBackgroundProcessingComplete )( 
            HTMLWindow3 * This,
            /* [in] */ vsHTMLBackgroundTasks Task);
        
        END_INTERFACE
    } HTMLWindow3Vtbl;

    interface HTMLWindow3
    {
        CONST_VTBL struct HTMLWindow3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLWindow3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define HTMLWindow3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define HTMLWindow3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define HTMLWindow3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define HTMLWindow3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define HTMLWindow3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define HTMLWindow3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define HTMLWindow3_get_CurrentView(This,pView)	\
    ( (This)->lpVtbl -> get_CurrentView(This,pView) ) 

#define HTMLWindow3_put_CurrentView(This,View)	\
    ( (This)->lpVtbl -> put_CurrentView(This,View) ) 

#define HTMLWindow3_get_CurrentPane(This,pPane)	\
    ( (This)->lpVtbl -> get_CurrentPane(This,pPane) ) 

#define HTMLWindow3_put_CurrentPane(This,Pane)	\
    ( (This)->lpVtbl -> put_CurrentPane(This,Pane) ) 

#define HTMLWindow3_WaitForBackgroundProcessingComplete(This,Task)	\
    ( (This)->lpVtbl -> WaitForBackgroundProcessingComplete(This,Task) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __HTMLWindow3_INTERFACE_DEFINED__ */


#ifndef __Debugger3_INTERFACE_DEFINED__
#define __Debugger3_INTERFACE_DEFINED__

/* interface Debugger3 */
/* [object][version][dual][uuid] */ 


EXTERN_C const IID IID_Debugger3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("87DFC8DA-67B4-4954-BB89-6A277A50BAFC")
    Debugger3 : public Debugger2
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ForceContinue( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *ForceContinue) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ForceContinue( 
            /* [in] */ VARIANT_BOOL ForceContinue) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ExceptionGroups( 
            /* [retval][out] */ __RPC__deref_out_opt ExceptionGroups **ExceptionGroups) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SymbolPath( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *SymbolPath) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SymbolPathState( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *SymbolPathState) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SymbolCachePath( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *SymbolCachePath) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OnlyLoadSymbolsManually( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *OnlyLoadSymbolsManually) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetSymbolSettings( 
            /* [in] */ __RPC__in BSTR SymbolPath,
            /* [in] */ __RPC__in BSTR SymbolPathState,
            /* [in] */ __RPC__in BSTR SymbolCachePath,
            /* [in] */ VARIANT_BOOL OnlyLoadSymbolsManually,
            /* [in] */ VARIANT_BOOL LoadSymbolsNow) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Debugger3Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Debugger3 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Debugger3 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Debugger3 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Debugger3 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Debugger3 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetExpression )( 
            Debugger3 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ExpressionText,
            /* [in][idldescattr] */ BOOLEAN UseAutoExpandRules,
            /* [in][idldescattr] */ signed long Timeout,
            /* [retval][out] */ __RPC__deref_out_opt Expression **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *DetachAll )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *StepInto )( 
            Debugger3 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *StepOver )( 
            Debugger3 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *StepOut )( 
            Debugger3 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Go )( 
            Debugger3 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Break )( 
            Debugger3 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakMode,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            Debugger3 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForDesignMode,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SetNextStatement )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RunToCursor )( 
            Debugger3 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ExecuteStatement )( 
            Debugger3 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Statement,
            /* [in][idldescattr] */ signed long Timeout,
            /* [in][idldescattr] */ BOOLEAN TreatAsExpression,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Breakpoints )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Breakpoints **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Languages )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Languages **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentMode )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__out enum dbgDebugMode *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentProcess )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Process **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentProcess )( 
            Debugger3 * This,
            /* [in][idldescattr] */ __RPC__in_opt Process *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentProgram )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Program **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentProgram )( 
            Debugger3 * This,
            /* [in][idldescattr] */ __RPC__in_opt Program *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentThread )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Thread **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentThread )( 
            Debugger3 * This,
            /* [in][idldescattr] */ __RPC__in_opt Thread *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentStackFrame )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt StackFrame **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentStackFrame )( 
            Debugger3 * This,
            /* [in][idldescattr] */ __RPC__in_opt StackFrame *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_HexDisplayMode )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_HexDisplayMode )( 
            Debugger3 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_HexInputMode )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_HexInputMode )( 
            Debugger3 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_LastBreakReason )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__out enum dbgEventReason *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_BreakpointLastHit )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Breakpoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AllBreakpointsLastHit )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Breakpoints **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DebuggedProcesses )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Processes **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_LocalProcesses )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Processes **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *TerminateAll )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *WriteMinidump )( 
            Debugger3 * This,
            /* [in][idldescattr] */ __RPC__in BSTR FileName,
            /* [in][idldescattr] */ enum dbgMinidumpOption Option,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetProcesses )( 
            Debugger3 * This,
            /* [in][idldescattr] */ __RPC__in_opt Transport *pTransport,
            /* [in][idldescattr] */ __RPC__in BSTR TransportQualifier,
            /* [retval][out] */ __RPC__deref_out_opt Processes **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetExpression2 )( 
            Debugger3 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ExpressionText,
            /* [in][idldescattr] */ BOOLEAN UseAutoExpandRules,
            /* [in][idldescattr] */ BOOLEAN TreatAsStatement,
            /* [in][idldescattr] */ signed long Timeout,
            /* [retval][out] */ __RPC__deref_out_opt Expression **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Transports )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Transports **retval);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForceContinue )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *ForceContinue);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForceContinue )( 
            Debugger3 * This,
            /* [in] */ VARIANT_BOOL ForceContinue);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExceptionGroups )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt ExceptionGroups **ExceptionGroups);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SymbolPath )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *SymbolPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SymbolPathState )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *SymbolPathState);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SymbolCachePath )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *SymbolCachePath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnlyLoadSymbolsManually )( 
            Debugger3 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *OnlyLoadSymbolsManually);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetSymbolSettings )( 
            Debugger3 * This,
            /* [in] */ __RPC__in BSTR SymbolPath,
            /* [in] */ __RPC__in BSTR SymbolPathState,
            /* [in] */ __RPC__in BSTR SymbolCachePath,
            /* [in] */ VARIANT_BOOL OnlyLoadSymbolsManually,
            /* [in] */ VARIANT_BOOL LoadSymbolsNow);
        
        END_INTERFACE
    } Debugger3Vtbl;

    interface Debugger3
    {
        CONST_VTBL struct Debugger3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Debugger3_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Debugger3_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Debugger3_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Debugger3_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Debugger3_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Debugger3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Debugger3_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Debugger3_GetExpression(This,ExpressionText,UseAutoExpandRules,Timeout,retval)	\
    ( (This)->lpVtbl -> GetExpression(This,ExpressionText,UseAutoExpandRules,Timeout,retval) ) 

#define Debugger3_DetachAll(This,retval)	\
    ( (This)->lpVtbl -> DetachAll(This,retval) ) 

#define Debugger3_StepInto(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> StepInto(This,WaitForBreakOrEnd,retval) ) 

#define Debugger3_StepOver(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> StepOver(This,WaitForBreakOrEnd,retval) ) 

#define Debugger3_StepOut(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> StepOut(This,WaitForBreakOrEnd,retval) ) 

#define Debugger3_Go(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> Go(This,WaitForBreakOrEnd,retval) ) 

#define Debugger3_Break(This,WaitForBreakMode,retval)	\
    ( (This)->lpVtbl -> Break(This,WaitForBreakMode,retval) ) 

#define Debugger3_Stop(This,WaitForDesignMode,retval)	\
    ( (This)->lpVtbl -> Stop(This,WaitForDesignMode,retval) ) 

#define Debugger3_SetNextStatement(This,retval)	\
    ( (This)->lpVtbl -> SetNextStatement(This,retval) ) 

#define Debugger3_RunToCursor(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> RunToCursor(This,WaitForBreakOrEnd,retval) ) 

#define Debugger3_ExecuteStatement(This,Statement,Timeout,TreatAsExpression,retval)	\
    ( (This)->lpVtbl -> ExecuteStatement(This,Statement,Timeout,TreatAsExpression,retval) ) 

#define Debugger3_get_Breakpoints(This,retval)	\
    ( (This)->lpVtbl -> get_Breakpoints(This,retval) ) 

#define Debugger3_get_Languages(This,retval)	\
    ( (This)->lpVtbl -> get_Languages(This,retval) ) 

#define Debugger3_get_CurrentMode(This,retval)	\
    ( (This)->lpVtbl -> get_CurrentMode(This,retval) ) 

#define Debugger3_get_CurrentProcess(This,retval)	\
    ( (This)->lpVtbl -> get_CurrentProcess(This,retval) ) 

#define Debugger3_put_CurrentProcess(This,noname,retval)	\
    ( (This)->lpVtbl -> put_CurrentProcess(This,noname,retval) ) 

#define Debugger3_get_CurrentProgram(This,retval)	\
    ( (This)->lpVtbl -> get_CurrentProgram(This,retval) ) 

#define Debugger3_put_CurrentProgram(This,noname,retval)	\
    ( (This)->lpVtbl -> put_CurrentProgram(This,noname,retval) ) 

#define Debugger3_get_CurrentThread(This,retval)	\
    ( (This)->lpVtbl -> get_CurrentThread(This,retval) ) 

#define Debugger3_put_CurrentThread(This,noname,retval)	\
    ( (This)->lpVtbl -> put_CurrentThread(This,noname,retval) ) 

#define Debugger3_get_CurrentStackFrame(This,retval)	\
    ( (This)->lpVtbl -> get_CurrentStackFrame(This,retval) ) 

#define Debugger3_put_CurrentStackFrame(This,noname,retval)	\
    ( (This)->lpVtbl -> put_CurrentStackFrame(This,noname,retval) ) 

#define Debugger3_get_HexDisplayMode(This,retval)	\
    ( (This)->lpVtbl -> get_HexDisplayMode(This,retval) ) 

#define Debugger3_put_HexDisplayMode(This,noname,retval)	\
    ( (This)->lpVtbl -> put_HexDisplayMode(This,noname,retval) ) 

#define Debugger3_get_HexInputMode(This,retval)	\
    ( (This)->lpVtbl -> get_HexInputMode(This,retval) ) 

#define Debugger3_put_HexInputMode(This,noname,retval)	\
    ( (This)->lpVtbl -> put_HexInputMode(This,noname,retval) ) 

#define Debugger3_get_LastBreakReason(This,retval)	\
    ( (This)->lpVtbl -> get_LastBreakReason(This,retval) ) 

#define Debugger3_get_BreakpointLastHit(This,retval)	\
    ( (This)->lpVtbl -> get_BreakpointLastHit(This,retval) ) 

#define Debugger3_get_AllBreakpointsLastHit(This,retval)	\
    ( (This)->lpVtbl -> get_AllBreakpointsLastHit(This,retval) ) 

#define Debugger3_get_DebuggedProcesses(This,retval)	\
    ( (This)->lpVtbl -> get_DebuggedProcesses(This,retval) ) 

#define Debugger3_get_LocalProcesses(This,retval)	\
    ( (This)->lpVtbl -> get_LocalProcesses(This,retval) ) 

#define Debugger3_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define Debugger3_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define Debugger3_TerminateAll(This,retval)	\
    ( (This)->lpVtbl -> TerminateAll(This,retval) ) 

#define Debugger3_WriteMinidump(This,FileName,Option,retval)	\
    ( (This)->lpVtbl -> WriteMinidump(This,FileName,Option,retval) ) 

#define Debugger3_GetProcesses(This,pTransport,TransportQualifier,retval)	\
    ( (This)->lpVtbl -> GetProcesses(This,pTransport,TransportQualifier,retval) ) 

#define Debugger3_GetExpression2(This,ExpressionText,UseAutoExpandRules,TreatAsStatement,Timeout,retval)	\
    ( (This)->lpVtbl -> GetExpression2(This,ExpressionText,UseAutoExpandRules,TreatAsStatement,Timeout,retval) ) 

#define Debugger3_get_Transports(This,retval)	\
    ( (This)->lpVtbl -> get_Transports(This,retval) ) 


#define Debugger3_get_ForceContinue(This,ForceContinue)	\
    ( (This)->lpVtbl -> get_ForceContinue(This,ForceContinue) ) 

#define Debugger3_put_ForceContinue(This,ForceContinue)	\
    ( (This)->lpVtbl -> put_ForceContinue(This,ForceContinue) ) 

#define Debugger3_get_ExceptionGroups(This,ExceptionGroups)	\
    ( (This)->lpVtbl -> get_ExceptionGroups(This,ExceptionGroups) ) 

#define Debugger3_get_SymbolPath(This,SymbolPath)	\
    ( (This)->lpVtbl -> get_SymbolPath(This,SymbolPath) ) 

#define Debugger3_get_SymbolPathState(This,SymbolPathState)	\
    ( (This)->lpVtbl -> get_SymbolPathState(This,SymbolPathState) ) 

#define Debugger3_get_SymbolCachePath(This,SymbolCachePath)	\
    ( (This)->lpVtbl -> get_SymbolCachePath(This,SymbolCachePath) ) 

#define Debugger3_get_OnlyLoadSymbolsManually(This,OnlyLoadSymbolsManually)	\
    ( (This)->lpVtbl -> get_OnlyLoadSymbolsManually(This,OnlyLoadSymbolsManually) ) 

#define Debugger3_SetSymbolSettings(This,SymbolPath,SymbolPathState,SymbolCachePath,OnlyLoadSymbolsManually,LoadSymbolsNow)	\
    ( (This)->lpVtbl -> SetSymbolSettings(This,SymbolPath,SymbolPathState,SymbolCachePath,OnlyLoadSymbolsManually,LoadSymbolsNow) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Debugger3_INTERFACE_DEFINED__ */


#ifndef __Thread2_INTERFACE_DEFINED__
#define __Thread2_INTERFACE_DEFINED__

/* interface Thread2 */
/* [object][version][dual][uuid] */ 


EXTERN_C const IID IID_Thread2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("86FD0779-FBBE-41cc-B444-6EE8676F4F2C")
    Thread2 : public Thread
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Flag( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Flag) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Flag( 
            /* [in] */ VARIANT_BOOL Flag) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayName( 
            /* [in] */ __RPC__in BSTR bstrName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Category( 
            /* [retval][out] */ __RPC__out THREADCATEGORY *pCategory) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Thread2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Thread2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Thread2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Thread2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Thread2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Thread2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Freeze )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Thaw )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SuspendCount )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StackFrames )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__deref_out_opt StackFrames **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Program )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Program **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsAlive )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Priority )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Location )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsFrozen )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Debugger **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Threads **retval);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Flag )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Flag);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Flag )( 
            Thread2 * This,
            /* [in] */ VARIANT_BOOL Flag);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayName )( 
            Thread2 * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayName )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Category )( 
            Thread2 * This,
            /* [retval][out] */ __RPC__out THREADCATEGORY *pCategory);
        
        END_INTERFACE
    } Thread2Vtbl;

    interface Thread2
    {
        CONST_VTBL struct Thread2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Thread2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Thread2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Thread2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Thread2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Thread2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Thread2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Thread2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Thread2_Freeze(This,retval)	\
    ( (This)->lpVtbl -> Freeze(This,retval) ) 

#define Thread2_Thaw(This,retval)	\
    ( (This)->lpVtbl -> Thaw(This,retval) ) 

#define Thread2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define Thread2_get_SuspendCount(This,retval)	\
    ( (This)->lpVtbl -> get_SuspendCount(This,retval) ) 

#define Thread2_get_ID(This,retval)	\
    ( (This)->lpVtbl -> get_ID(This,retval) ) 

#define Thread2_get_StackFrames(This,retval)	\
    ( (This)->lpVtbl -> get_StackFrames(This,retval) ) 

#define Thread2_get_Program(This,retval)	\
    ( (This)->lpVtbl -> get_Program(This,retval) ) 

#define Thread2_get_IsAlive(This,retval)	\
    ( (This)->lpVtbl -> get_IsAlive(This,retval) ) 

#define Thread2_get_Priority(This,retval)	\
    ( (This)->lpVtbl -> get_Priority(This,retval) ) 

#define Thread2_get_Location(This,retval)	\
    ( (This)->lpVtbl -> get_Location(This,retval) ) 

#define Thread2_get_IsFrozen(This,retval)	\
    ( (This)->lpVtbl -> get_IsFrozen(This,retval) ) 

#define Thread2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define Thread2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define Thread2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 


#define Thread2_get_Flag(This,Flag)	\
    ( (This)->lpVtbl -> get_Flag(This,Flag) ) 

#define Thread2_put_Flag(This,Flag)	\
    ( (This)->lpVtbl -> put_Flag(This,Flag) ) 

#define Thread2_put_DisplayName(This,bstrName)	\
    ( (This)->lpVtbl -> put_DisplayName(This,bstrName) ) 

#define Thread2_get_DisplayName(This,pbstrName)	\
    ( (This)->lpVtbl -> get_DisplayName(This,pbstrName) ) 

#define Thread2_get_Category(This,pCategory)	\
    ( (This)->lpVtbl -> get_Category(This,pCategory) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Thread2_INTERFACE_DEFINED__ */


#ifndef __Process3_INTERFACE_DEFINED__
#define __Process3_INTERFACE_DEFINED__

/* interface Process3 */
/* [object][version][dual][uuid] */ 


EXTERN_C const IID IID_Process3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D401C665-4EC7-452b-AA91-985D16772D84")
    Process3 : public Process2
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Modules( 
            /* [retval][out] */ __RPC__deref_out_opt Modules **Modules) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Process3Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Process3 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Process3 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Process3 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Process3 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Process3 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Process3 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Process3 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Attach )( 
            Process3 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            Process3 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Break )( 
            Process3 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakMode,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Terminate )( 
            Process3 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Process3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProcessID )( 
            Process3 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Programs )( 
            Process3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Programs **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Process3 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Process3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Debugger **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Process3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Processes **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Attach2 )( 
            Process3 * This,
            /* [in][idldescattr] */ VARIANT Engines,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Transport )( 
            Process3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Transport **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_TransportQualifier )( 
            Process3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Threads )( 
            Process3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Threads **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsBeingDebugged )( 
            Process3 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_UserName )( 
            Process3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Modules )( 
            Process3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Modules **Modules);
        
        END_INTERFACE
    } Process3Vtbl;

    interface Process3
    {
        CONST_VTBL struct Process3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Process3_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Process3_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Process3_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Process3_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Process3_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Process3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Process3_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Process3_Attach(This,retval)	\
    ( (This)->lpVtbl -> Attach(This,retval) ) 

#define Process3_Detach(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> Detach(This,WaitForBreakOrEnd,retval) ) 

#define Process3_Break(This,WaitForBreakMode,retval)	\
    ( (This)->lpVtbl -> Break(This,WaitForBreakMode,retval) ) 

#define Process3_Terminate(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> Terminate(This,WaitForBreakOrEnd,retval) ) 

#define Process3_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define Process3_get_ProcessID(This,retval)	\
    ( (This)->lpVtbl -> get_ProcessID(This,retval) ) 

#define Process3_get_Programs(This,retval)	\
    ( (This)->lpVtbl -> get_Programs(This,retval) ) 

#define Process3_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define Process3_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define Process3_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define Process3_Attach2(This,Engines,retval)	\
    ( (This)->lpVtbl -> Attach2(This,Engines,retval) ) 

#define Process3_get_Transport(This,retval)	\
    ( (This)->lpVtbl -> get_Transport(This,retval) ) 

#define Process3_get_TransportQualifier(This,retval)	\
    ( (This)->lpVtbl -> get_TransportQualifier(This,retval) ) 

#define Process3_get_Threads(This,retval)	\
    ( (This)->lpVtbl -> get_Threads(This,retval) ) 

#define Process3_get_IsBeingDebugged(This,retval)	\
    ( (This)->lpVtbl -> get_IsBeingDebugged(This,retval) ) 

#define Process3_get_UserName(This,retval)	\
    ( (This)->lpVtbl -> get_UserName(This,retval) ) 


#define Process3_get_Modules(This,Modules)	\
    ( (This)->lpVtbl -> get_Modules(This,Modules) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Process3_INTERFACE_DEFINED__ */


#ifndef __Modules_INTERFACE_DEFINED__
#define __Modules_INTERFACE_DEFINED__

/* interface Modules */
/* [object][version][dual][uuid] */ 


EXTERN_C const IID IID_Modules;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B0F3B256-D962-4319-B7C0-A52486C16CB9")
    Modules : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt Module **Module) = 0;
        
        virtual /* [restricted][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *Count) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ModulesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Modules * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Modules * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Modules * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Modules * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Modules * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Modules * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Modules * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Modules * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt Module **Module);
        
        /* [restricted][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Modules * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Modules * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Modules * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Modules * This,
            /* [retval][out] */ __RPC__out long *Count);
        
        END_INTERFACE
    } ModulesVtbl;

    interface Modules
    {
        CONST_VTBL struct ModulesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Modules_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Modules_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Modules_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Modules_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Modules_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Modules_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Modules_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Modules_Item(This,Index,Module)	\
    ( (This)->lpVtbl -> Item(This,Index,Module) ) 

#define Modules__NewEnum(This,Enumerator)	\
    ( (This)->lpVtbl -> _NewEnum(This,Enumerator) ) 

#define Modules_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define Modules_get_Parent(This,Debugger)	\
    ( (This)->lpVtbl -> get_Parent(This,Debugger) ) 

#define Modules_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Modules_INTERFACE_DEFINED__ */


#ifndef __Module_INTERFACE_DEFINED__
#define __Module_INTERFACE_DEFINED__

/* interface Module */
/* [object][version][dual][uuid] */ 


EXTERN_C const IID IID_Module;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("72832EE4-5808-433d-83A7-B8F149A79DB4")
    Module : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Path) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Optimized( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Optimized) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_UserCode( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *UserCode) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SymbolFile( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *SymbolFile) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Order( 
            /* [retval][out] */ __RPC__out DWORD *Order) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Version) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LoadAddress( 
            /* [retval][out] */ __RPC__out UINT64 *LoadAddress) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EndAddress( 
            /* [retval][out] */ __RPC__out UINT64 *EndAddress) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Rebased( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Rebased) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt Modules **Modules) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Process( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Process **Process) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Is64bit( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Is64bit) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE LoadSymbols( 
            /* [in] */ __RPC__in BSTR SymbolPath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ModuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Module * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Module * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Module * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Module * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Module * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Module * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Module * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Module * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            Module * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Path);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Optimized )( 
            Module * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Optimized);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserCode )( 
            Module * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *UserCode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SymbolFile )( 
            Module * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *SymbolFile);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Order )( 
            Module * This,
            /* [retval][out] */ __RPC__out DWORD *Order);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            Module * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Version);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LoadAddress )( 
            Module * This,
            /* [retval][out] */ __RPC__out UINT64 *LoadAddress);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndAddress )( 
            Module * This,
            /* [retval][out] */ __RPC__out UINT64 *EndAddress);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rebased )( 
            Module * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Rebased);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Module * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Module * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Module * This,
            /* [retval][out] */ __RPC__deref_out_opt Modules **Modules);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Process )( 
            Module * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Process **Process);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Is64bit )( 
            Module * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Is64bit);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *LoadSymbols )( 
            Module * This,
            /* [in] */ __RPC__in BSTR SymbolPath);
        
        END_INTERFACE
    } ModuleVtbl;

    interface Module
    {
        CONST_VTBL struct ModuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Module_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Module_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Module_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Module_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Module_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Module_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Module_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Module_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define Module_get_Path(This,Path)	\
    ( (This)->lpVtbl -> get_Path(This,Path) ) 

#define Module_get_Optimized(This,Optimized)	\
    ( (This)->lpVtbl -> get_Optimized(This,Optimized) ) 

#define Module_get_UserCode(This,UserCode)	\
    ( (This)->lpVtbl -> get_UserCode(This,UserCode) ) 

#define Module_get_SymbolFile(This,SymbolFile)	\
    ( (This)->lpVtbl -> get_SymbolFile(This,SymbolFile) ) 

#define Module_get_Order(This,Order)	\
    ( (This)->lpVtbl -> get_Order(This,Order) ) 

#define Module_get_Version(This,Version)	\
    ( (This)->lpVtbl -> get_Version(This,Version) ) 

#define Module_get_LoadAddress(This,LoadAddress)	\
    ( (This)->lpVtbl -> get_LoadAddress(This,LoadAddress) ) 

#define Module_get_EndAddress(This,EndAddress)	\
    ( (This)->lpVtbl -> get_EndAddress(This,EndAddress) ) 

#define Module_get_Rebased(This,Rebased)	\
    ( (This)->lpVtbl -> get_Rebased(This,Rebased) ) 

#define Module_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define Module_get_Parent(This,Debugger)	\
    ( (This)->lpVtbl -> get_Parent(This,Debugger) ) 

#define Module_get_Collection(This,Modules)	\
    ( (This)->lpVtbl -> get_Collection(This,Modules) ) 

#define Module_get_Process(This,Process)	\
    ( (This)->lpVtbl -> get_Process(This,Process) ) 

#define Module_get_Is64bit(This,Is64bit)	\
    ( (This)->lpVtbl -> get_Is64bit(This,Is64bit) ) 

#define Module_LoadSymbols(This,SymbolPath)	\
    ( (This)->lpVtbl -> LoadSymbols(This,SymbolPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Module_INTERFACE_DEFINED__ */


#ifndef __ExceptionGroups_INTERFACE_DEFINED__
#define __ExceptionGroups_INTERFACE_DEFINED__

/* interface ExceptionGroups */
/* [object][version][dual][uuid] */ 


EXTERN_C const IID IID_ExceptionGroups;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("21BDC491-F828-4846-9FD8-75C9148AEA24")
    ExceptionGroups : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt ExceptionSettings **ExceptionSettings) = 0;
        
        virtual /* [restricted][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *Count) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ResetAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ExceptionGroupsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ExceptionGroups * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ExceptionGroups * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ExceptionGroups * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ExceptionGroups * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ExceptionGroups * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ExceptionGroups * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ExceptionGroups * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ExceptionGroups * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt ExceptionSettings **ExceptionSettings);
        
        /* [restricted][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            ExceptionGroups * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ExceptionGroups * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ExceptionGroups * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ExceptionGroups * This,
            /* [retval][out] */ __RPC__out long *Count);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetAll )( 
            ExceptionGroups * This);
        
        END_INTERFACE
    } ExceptionGroupsVtbl;

    interface ExceptionGroups
    {
        CONST_VTBL struct ExceptionGroupsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ExceptionGroups_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ExceptionGroups_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ExceptionGroups_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ExceptionGroups_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ExceptionGroups_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ExceptionGroups_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ExceptionGroups_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ExceptionGroups_Item(This,Index,ExceptionSettings)	\
    ( (This)->lpVtbl -> Item(This,Index,ExceptionSettings) ) 

#define ExceptionGroups__NewEnum(This,Enumerator)	\
    ( (This)->lpVtbl -> _NewEnum(This,Enumerator) ) 

#define ExceptionGroups_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define ExceptionGroups_get_Parent(This,Debugger)	\
    ( (This)->lpVtbl -> get_Parent(This,Debugger) ) 

#define ExceptionGroups_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define ExceptionGroups_ResetAll(This)	\
    ( (This)->lpVtbl -> ResetAll(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ExceptionGroups_INTERFACE_DEFINED__ */


#ifndef __ExceptionSettings_INTERFACE_DEFINED__
#define __ExceptionSettings_INTERFACE_DEFINED__

/* interface ExceptionSettings */
/* [object][version][dual][uuid] */ 


EXTERN_C const IID IID_ExceptionSettings;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E1AB53B-4065-4884-A39F-02E16EB57F7D")
    ExceptionSettings : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt ExceptionSetting **ExceptionSetting) = 0;
        
        virtual /* [restricted][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *Count) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SupportsExceptionCodes( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *SupportsExceptionCodes) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ItemFromCode( 
            /* [in] */ DWORD Code,
            /* [retval][out] */ __RPC__deref_out_opt ExceptionSetting **ExceptionSetting) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE NewException( 
            /* [in] */ __RPC__in BSTR Name,
            /* [in] */ DWORD Code,
            /* [retval][out] */ __RPC__deref_out_opt ExceptionSetting **ExceptionSetting) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RemoveByCode( 
            /* [in] */ DWORD Code) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetBreakWhenThrown( 
            /* [in] */ VARIANT_BOOL BreakWhenThrown,
            /* [in] */ __RPC__in_opt ExceptionSetting *ExceptionSetting) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetBreakWhenUserUnhandled( 
            /* [in] */ VARIANT_BOOL BreakWhenUserUnhandled,
            /* [in] */ __RPC__in_opt ExceptionSetting *ExceptionSetting) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ExceptionSettingsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ExceptionSettings * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ExceptionSettings * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ExceptionSettings * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ExceptionSettings * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ExceptionSettings * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ExceptionSettings * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ExceptionSettings * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ExceptionSettings * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt ExceptionSetting **ExceptionSetting);
        
        /* [restricted][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            ExceptionSettings * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ExceptionSettings * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ExceptionSettings * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ExceptionSettings * This,
            /* [retval][out] */ __RPC__out long *Count);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ExceptionSettings * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SupportsExceptionCodes )( 
            ExceptionSettings * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *SupportsExceptionCodes);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ItemFromCode )( 
            ExceptionSettings * This,
            /* [in] */ DWORD Code,
            /* [retval][out] */ __RPC__deref_out_opt ExceptionSetting **ExceptionSetting);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *NewException )( 
            ExceptionSettings * This,
            /* [in] */ __RPC__in BSTR Name,
            /* [in] */ DWORD Code,
            /* [retval][out] */ __RPC__deref_out_opt ExceptionSetting **ExceptionSetting);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            ExceptionSettings * This,
            /* [in] */ VARIANT Index);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveByCode )( 
            ExceptionSettings * This,
            /* [in] */ DWORD Code);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetBreakWhenThrown )( 
            ExceptionSettings * This,
            /* [in] */ VARIANT_BOOL BreakWhenThrown,
            /* [in] */ __RPC__in_opt ExceptionSetting *ExceptionSetting);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetBreakWhenUserUnhandled )( 
            ExceptionSettings * This,
            /* [in] */ VARIANT_BOOL BreakWhenUserUnhandled,
            /* [in] */ __RPC__in_opt ExceptionSetting *ExceptionSetting);
        
        END_INTERFACE
    } ExceptionSettingsVtbl;

    interface ExceptionSettings
    {
        CONST_VTBL struct ExceptionSettingsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ExceptionSettings_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ExceptionSettings_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ExceptionSettings_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ExceptionSettings_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ExceptionSettings_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ExceptionSettings_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ExceptionSettings_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ExceptionSettings_Item(This,Index,ExceptionSetting)	\
    ( (This)->lpVtbl -> Item(This,Index,ExceptionSetting) ) 

#define ExceptionSettings__NewEnum(This,Enumerator)	\
    ( (This)->lpVtbl -> _NewEnum(This,Enumerator) ) 

#define ExceptionSettings_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define ExceptionSettings_get_Parent(This,Debugger)	\
    ( (This)->lpVtbl -> get_Parent(This,Debugger) ) 

#define ExceptionSettings_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define ExceptionSettings_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define ExceptionSettings_get_SupportsExceptionCodes(This,SupportsExceptionCodes)	\
    ( (This)->lpVtbl -> get_SupportsExceptionCodes(This,SupportsExceptionCodes) ) 

#define ExceptionSettings_ItemFromCode(This,Code,ExceptionSetting)	\
    ( (This)->lpVtbl -> ItemFromCode(This,Code,ExceptionSetting) ) 

#define ExceptionSettings_NewException(This,Name,Code,ExceptionSetting)	\
    ( (This)->lpVtbl -> NewException(This,Name,Code,ExceptionSetting) ) 

#define ExceptionSettings_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define ExceptionSettings_RemoveByCode(This,Code)	\
    ( (This)->lpVtbl -> RemoveByCode(This,Code) ) 

#define ExceptionSettings_SetBreakWhenThrown(This,BreakWhenThrown,ExceptionSetting)	\
    ( (This)->lpVtbl -> SetBreakWhenThrown(This,BreakWhenThrown,ExceptionSetting) ) 

#define ExceptionSettings_SetBreakWhenUserUnhandled(This,BreakWhenUserUnhandled,ExceptionSetting)	\
    ( (This)->lpVtbl -> SetBreakWhenUserUnhandled(This,BreakWhenUserUnhandled,ExceptionSetting) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ExceptionSettings_INTERFACE_DEFINED__ */


#ifndef __ExceptionSetting_INTERFACE_DEFINED__
#define __ExceptionSetting_INTERFACE_DEFINED__

/* interface ExceptionSetting */
/* [object][version][dual][uuid] */ 


EXTERN_C const IID IID_ExceptionSetting;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("115998BF-A603-4848-B5DE-3B250A13D109")
    ExceptionSetting : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt ExceptionSettings **ExceptionSettings) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BreakWhenThrown( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *BreakWhenThrown) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BreakWhenUserUnhandled( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *BreakWhenUserUnhandled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_UserDefined( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *UserDefined) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Code( 
            /* [retval][out] */ __RPC__out DWORD *Code) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ExceptionSettingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ExceptionSetting * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ExceptionSetting * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ExceptionSetting * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ExceptionSetting * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ExceptionSetting * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ExceptionSetting * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ExceptionSetting * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ExceptionSetting * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ExceptionSetting * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            ExceptionSetting * This,
            /* [retval][out] */ __RPC__deref_out_opt ExceptionSettings **ExceptionSettings);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ExceptionSetting * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BreakWhenThrown )( 
            ExceptionSetting * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *BreakWhenThrown);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BreakWhenUserUnhandled )( 
            ExceptionSetting * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *BreakWhenUserUnhandled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserDefined )( 
            ExceptionSetting * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *UserDefined);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Code )( 
            ExceptionSetting * This,
            /* [retval][out] */ __RPC__out DWORD *Code);
        
        END_INTERFACE
    } ExceptionSettingVtbl;

    interface ExceptionSetting
    {
        CONST_VTBL struct ExceptionSettingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ExceptionSetting_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ExceptionSetting_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ExceptionSetting_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ExceptionSetting_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ExceptionSetting_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ExceptionSetting_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ExceptionSetting_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ExceptionSetting_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define ExceptionSetting_get_Parent(This,Debugger)	\
    ( (This)->lpVtbl -> get_Parent(This,Debugger) ) 

#define ExceptionSetting_get_Collection(This,ExceptionSettings)	\
    ( (This)->lpVtbl -> get_Collection(This,ExceptionSettings) ) 

#define ExceptionSetting_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define ExceptionSetting_get_BreakWhenThrown(This,BreakWhenThrown)	\
    ( (This)->lpVtbl -> get_BreakWhenThrown(This,BreakWhenThrown) ) 

#define ExceptionSetting_get_BreakWhenUserUnhandled(This,BreakWhenUserUnhandled)	\
    ( (This)->lpVtbl -> get_BreakWhenUserUnhandled(This,BreakWhenUserUnhandled) ) 

#define ExceptionSetting_get_UserDefined(This,UserDefined)	\
    ( (This)->lpVtbl -> get_UserDefined(This,UserDefined) ) 

#define ExceptionSetting_get_Code(This,Code)	\
    ( (This)->lpVtbl -> get_Code(This,Code) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ExceptionSetting_INTERFACE_DEFINED__ */


#ifndef __Template_INTERFACE_DEFINED__
#define __Template_INTERFACE_DEFINED__

/* interface Template */
/* [helpstringcontext][helpstring][helpcontext][object][oleautomation][dual][uuid] */ 


EXTERN_C const IID IID_Template;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("76A0263C-083C-49f1-B312-9DB360FCC9F1")
    Template : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FilePath( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BaseName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CustomDataSignature( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CustomData( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TemplateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Template * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Template * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Template * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Template * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Template * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Template * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Template * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            Template * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Template * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            Template * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FilePath )( 
            Template * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BaseName )( 
            Template * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CustomDataSignature )( 
            Template * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CustomData )( 
            Template * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn);
        
        END_INTERFACE
    } TemplateVtbl;

    interface Template
    {
        CONST_VTBL struct TemplateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Template_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Template_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Template_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Template_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Template_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Template_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Template_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Template_get_ID(This,pbstrReturn)	\
    ( (This)->lpVtbl -> get_ID(This,pbstrReturn) ) 

#define Template_get_Name(This,pbstrReturn)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrReturn) ) 

#define Template_get_Description(This,pbstrReturn)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrReturn) ) 

#define Template_get_FilePath(This,pbstrReturn)	\
    ( (This)->lpVtbl -> get_FilePath(This,pbstrReturn) ) 

#define Template_get_BaseName(This,pbstrReturn)	\
    ( (This)->lpVtbl -> get_BaseName(This,pbstrReturn) ) 

#define Template_get_CustomDataSignature(This,pbstrReturn)	\
    ( (This)->lpVtbl -> get_CustomDataSignature(This,pbstrReturn) ) 

#define Template_get_CustomData(This,pbstrReturn)	\
    ( (This)->lpVtbl -> get_CustomData(This,pbstrReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Template_INTERFACE_DEFINED__ */


#ifndef __Templates_INTERFACE_DEFINED__
#define __Templates_INTERFACE_DEFINED__

/* interface Templates */
/* [helpstringcontext][helpstring][helpcontext][object][oleautomation][dual][uuid] */ 


EXTERN_C const IID IID_Templates;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("30C96324-A117-4618-A9A9-0B06EC455121")
    Templates : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppUnk) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long index,
            /* [retval][out] */ __RPC__deref_out_opt Template **lppcReturn) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *lplReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TemplatesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Templates * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Templates * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Templates * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Templates * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Templates * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Templates * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Templates * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            Templates * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppUnk);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            Templates * This,
            /* [in] */ long index,
            /* [retval][out] */ __RPC__deref_out_opt Template **lppcReturn);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Templates * This,
            /* [retval][out] */ __RPC__out long *lplReturn);
        
        END_INTERFACE
    } TemplatesVtbl;

    interface Templates
    {
        CONST_VTBL struct TemplatesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Templates_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Templates_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Templates_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Templates_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Templates_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Templates_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Templates_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Templates_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define Templates_get_Item(This,index,lppcReturn)	\
    ( (This)->lpVtbl -> get_Item(This,index,lppcReturn) ) 

#define Templates_get_Count(This,lplReturn)	\
    ( (This)->lpVtbl -> get_Count(This,lplReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Templates_INTERFACE_DEFINED__ */


#ifndef __Solution3_INTERFACE_DEFINED__
#define __Solution3_INTERFACE_DEFINED__

/* interface Solution3 */
/* [helpstringcontext][helpstring][helpcontext][object][oleautomation][dual][uuid] */ 


EXTERN_C const IID IID_Solution3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DF23915F-FDA3-4dd5-9CAA-2E1372C2BB16")
    Solution3 : public Solution2
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetProjectItemTemplates( 
            __RPC__in BSTR Language,
            __RPC__in BSTR CustomDataSignature,
            /* [retval][out] */ __RPC__deref_out_opt Templates **ppTemplates) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Solution3Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Solution3 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Solution3 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Solution3 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Solution3 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Solution3 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Solution3 * This,
            /* [in][idldescattr] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Project **retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            Solution3 * This,
            /* [in][idldescattr] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddFromTemplate )( 
            Solution3 * This,
            /* [in][idldescattr] */ __RPC__in BSTR FileName,
            /* [in][idldescattr] */ __RPC__in BSTR Destination,
            /* [in][idldescattr] */ __RPC__in BSTR ProjectName,
            /* [in][idldescattr] */ BOOLEAN Exclusive,
            /* [retval][out] */ __RPC__deref_out_opt Project **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddFromFile )( 
            Solution3 * This,
            /* [in][idldescattr] */ __RPC__in BSTR FileName,
            /* [in][idldescattr] */ BOOLEAN Exclusive,
            /* [retval][out] */ __RPC__deref_out_opt Project **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            Solution3 * This,
            /* [in][idldescattr] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            Solution3 * This,
            /* [in][idldescattr] */ BOOLEAN SaveFirst,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Properties **retval);
        
        /* [id][propget][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsDirty )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_IsDirty )( 
            Solution3 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            Solution3 * This,
            /* [in][idldescattr] */ __RPC__in_opt Project *proj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_TemplatePath )( 
            Solution3 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ProjectType,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Saved )( 
            Solution3 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Globals )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Globals **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AddIns )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__deref_out_opt AddIns **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            Solution3 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpen )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionBuild )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionBuild **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Create )( 
            Solution3 * This,
            /* [idldescattr] */ __RPC__in BSTR Destination,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Projects )( 
            Solution3 * This,
            /* [retval][out] */ __RPC__deref_out_opt Projects **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *FindProjectItem )( 
            Solution3 * This,
            /* [idldescattr] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ProjectItemsTemplatePath )( 
            Solution3 * This,
            /* [idldescattr] */ __RPC__in BSTR ProjectKind,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddSolutionFolder )( 
            Solution3 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt Project **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetProjectTemplate )( 
            Solution3 * This,
            /* [idldescattr] */ __RPC__in BSTR TemplateName,
            /* [idldescattr] */ __RPC__in BSTR Language,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetProjectItemTemplate )( 
            Solution3 * This,
            /* [idldescattr] */ __RPC__in BSTR TemplateName,
            /* [idldescattr] */ __RPC__in BSTR Language,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProjectItemTemplates )( 
            Solution3 * This,
            __RPC__in BSTR Language,
            __RPC__in BSTR CustomDataSignature,
            /* [retval][out] */ __RPC__deref_out_opt Templates **ppTemplates);
        
        END_INTERFACE
    } Solution3Vtbl;

    interface Solution3
    {
        CONST_VTBL struct Solution3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Solution3_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Solution3_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Solution3_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Solution3_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Solution3_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Solution3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Solution3_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Solution3_Item(This,index,retval)	\
    ( (This)->lpVtbl -> Item(This,index,retval) ) 

#define Solution3__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> _NewEnum(This,retval) ) 

#define Solution3_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define Solution3_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define Solution3_get_Count(This,retval)	\
    ( (This)->lpVtbl -> get_Count(This,retval) ) 

#define Solution3_get_FileName(This,retval)	\
    ( (This)->lpVtbl -> get_FileName(This,retval) ) 

#define Solution3_SaveAs(This,FileName,retval)	\
    ( (This)->lpVtbl -> SaveAs(This,FileName,retval) ) 

#define Solution3_AddFromTemplate(This,FileName,Destination,ProjectName,Exclusive,retval)	\
    ( (This)->lpVtbl -> AddFromTemplate(This,FileName,Destination,ProjectName,Exclusive,retval) ) 

#define Solution3_AddFromFile(This,FileName,Exclusive,retval)	\
    ( (This)->lpVtbl -> AddFromFile(This,FileName,Exclusive,retval) ) 

#define Solution3_Open(This,FileName,retval)	\
    ( (This)->lpVtbl -> Open(This,FileName,retval) ) 

#define Solution3_Close(This,SaveFirst,retval)	\
    ( (This)->lpVtbl -> Close(This,SaveFirst,retval) ) 

#define Solution3_get_Properties(This,retval)	\
    ( (This)->lpVtbl -> get_Properties(This,retval) ) 

#define Solution3_get_IsDirty(This,retval)	\
    ( (This)->lpVtbl -> get_IsDirty(This,retval) ) 

#define Solution3_put_IsDirty(This,noname,retval)	\
    ( (This)->lpVtbl -> put_IsDirty(This,noname,retval) ) 

#define Solution3_Remove(This,proj,retval)	\
    ( (This)->lpVtbl -> Remove(This,proj,retval) ) 

#define Solution3_get_TemplatePath(This,ProjectType,retval)	\
    ( (This)->lpVtbl -> get_TemplatePath(This,ProjectType,retval) ) 

#define Solution3_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define Solution3_get_Saved(This,retval)	\
    ( (This)->lpVtbl -> get_Saved(This,retval) ) 

#define Solution3_put_Saved(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Saved(This,noname,retval) ) 

#define Solution3_get_Globals(This,retval)	\
    ( (This)->lpVtbl -> get_Globals(This,retval) ) 

#define Solution3_get_AddIns(This,retval)	\
    ( (This)->lpVtbl -> get_AddIns(This,retval) ) 

#define Solution3_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define Solution3_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define Solution3_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define Solution3_get_IsOpen(This,retval)	\
    ( (This)->lpVtbl -> get_IsOpen(This,retval) ) 

#define Solution3_get_SolutionBuild(This,retval)	\
    ( (This)->lpVtbl -> get_SolutionBuild(This,retval) ) 

#define Solution3_Create(This,Destination,Name,retval)	\
    ( (This)->lpVtbl -> Create(This,Destination,Name,retval) ) 

#define Solution3_get_Projects(This,retval)	\
    ( (This)->lpVtbl -> get_Projects(This,retval) ) 

#define Solution3_FindProjectItem(This,FileName,retval)	\
    ( (This)->lpVtbl -> FindProjectItem(This,FileName,retval) ) 

#define Solution3_ProjectItemsTemplatePath(This,ProjectKind,retval)	\
    ( (This)->lpVtbl -> ProjectItemsTemplatePath(This,ProjectKind,retval) ) 

#define Solution3_AddSolutionFolder(This,Name,retval)	\
    ( (This)->lpVtbl -> AddSolutionFolder(This,Name,retval) ) 

#define Solution3_GetProjectTemplate(This,TemplateName,Language,retval)	\
    ( (This)->lpVtbl -> GetProjectTemplate(This,TemplateName,Language,retval) ) 

#define Solution3_GetProjectItemTemplate(This,TemplateName,Language,retval)	\
    ( (This)->lpVtbl -> GetProjectItemTemplate(This,TemplateName,Language,retval) ) 


#define Solution3_GetProjectItemTemplates(This,Language,CustomDataSignature,ppTemplates)	\
    ( (This)->lpVtbl -> GetProjectItemTemplates(This,Language,CustomDataSignature,ppTemplates) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Solution3_INTERFACE_DEFINED__ */

#endif /* __EnvDTE90_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\dte80.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for dte80.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __dte80_h__
#define __dte80_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __Commands2_FWD_DEFINED__
#define __Commands2_FWD_DEFINED__
typedef interface Commands2 Commands2;
#endif 	/* __Commands2_FWD_DEFINED__ */


#ifndef __SourceControl2_FWD_DEFINED__
#define __SourceControl2_FWD_DEFINED__
typedef interface SourceControl2 SourceControl2;
#endif 	/* __SourceControl2_FWD_DEFINED__ */


#ifndef __ErrorItem_FWD_DEFINED__
#define __ErrorItem_FWD_DEFINED__
typedef interface ErrorItem ErrorItem;
#endif 	/* __ErrorItem_FWD_DEFINED__ */


#ifndef __ErrorList_FWD_DEFINED__
#define __ErrorList_FWD_DEFINED__
typedef interface ErrorList ErrorList;
#endif 	/* __ErrorList_FWD_DEFINED__ */


#ifndef __CodeAttributeArgument_FWD_DEFINED__
#define __CodeAttributeArgument_FWD_DEFINED__
typedef interface CodeAttributeArgument CodeAttributeArgument;
#endif 	/* __CodeAttributeArgument_FWD_DEFINED__ */


#ifndef __CodeEvent_FWD_DEFINED__
#define __CodeEvent_FWD_DEFINED__
typedef interface CodeEvent CodeEvent;
#endif 	/* __CodeEvent_FWD_DEFINED__ */


#ifndef __CodeElement2_FWD_DEFINED__
#define __CodeElement2_FWD_DEFINED__
typedef interface CodeElement2 CodeElement2;
#endif 	/* __CodeElement2_FWD_DEFINED__ */


#ifndef __CodeImport_FWD_DEFINED__
#define __CodeImport_FWD_DEFINED__
typedef interface CodeImport CodeImport;
#endif 	/* __CodeImport_FWD_DEFINED__ */


#ifndef __FileCodeModel2_FWD_DEFINED__
#define __FileCodeModel2_FWD_DEFINED__
typedef interface FileCodeModel2 FileCodeModel2;
#endif 	/* __FileCodeModel2_FWD_DEFINED__ */


#ifndef __CodeModel2_FWD_DEFINED__
#define __CodeModel2_FWD_DEFINED__
typedef interface CodeModel2 CodeModel2;
#endif 	/* __CodeModel2_FWD_DEFINED__ */


#ifndef __CodeClass2_FWD_DEFINED__
#define __CodeClass2_FWD_DEFINED__
typedef interface CodeClass2 CodeClass2;
#endif 	/* __CodeClass2_FWD_DEFINED__ */


#ifndef __CodeParameter2_FWD_DEFINED__
#define __CodeParameter2_FWD_DEFINED__
typedef interface CodeParameter2 CodeParameter2;
#endif 	/* __CodeParameter2_FWD_DEFINED__ */


#ifndef __CodeFunction2_FWD_DEFINED__
#define __CodeFunction2_FWD_DEFINED__
typedef interface CodeFunction2 CodeFunction2;
#endif 	/* __CodeFunction2_FWD_DEFINED__ */


#ifndef __CodeAttribute2_FWD_DEFINED__
#define __CodeAttribute2_FWD_DEFINED__
typedef interface CodeAttribute2 CodeAttribute2;
#endif 	/* __CodeAttribute2_FWD_DEFINED__ */


#ifndef __CodeVariable2_FWD_DEFINED__
#define __CodeVariable2_FWD_DEFINED__
typedef interface CodeVariable2 CodeVariable2;
#endif 	/* __CodeVariable2_FWD_DEFINED__ */


#ifndef __CodeDelegate2_FWD_DEFINED__
#define __CodeDelegate2_FWD_DEFINED__
typedef interface CodeDelegate2 CodeDelegate2;
#endif 	/* __CodeDelegate2_FWD_DEFINED__ */


#ifndef __CodeStruct2_FWD_DEFINED__
#define __CodeStruct2_FWD_DEFINED__
typedef interface CodeStruct2 CodeStruct2;
#endif 	/* __CodeStruct2_FWD_DEFINED__ */


#ifndef __CodeInterface2_FWD_DEFINED__
#define __CodeInterface2_FWD_DEFINED__
typedef interface CodeInterface2 CodeInterface2;
#endif 	/* __CodeInterface2_FWD_DEFINED__ */


#ifndef __CodeTypeRef2_FWD_DEFINED__
#define __CodeTypeRef2_FWD_DEFINED__
typedef interface CodeTypeRef2 CodeTypeRef2;
#endif 	/* __CodeTypeRef2_FWD_DEFINED__ */


#ifndef __CodeProperty2_FWD_DEFINED__
#define __CodeProperty2_FWD_DEFINED__
typedef interface CodeProperty2 CodeProperty2;
#endif 	/* __CodeProperty2_FWD_DEFINED__ */


#ifndef ___dispCodeModelEvents_FWD_DEFINED__
#define ___dispCodeModelEvents_FWD_DEFINED__
typedef interface _dispCodeModelEvents _dispCodeModelEvents;
#endif 	/* ___dispCodeModelEvents_FWD_DEFINED__ */


#ifndef __CodeModelEvents_FWD_DEFINED__
#define __CodeModelEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class CodeModelEvents CodeModelEvents;
#else
typedef struct CodeModelEvents CodeModelEvents;
#endif /* __cplusplus */

#endif 	/* __CodeModelEvents_FWD_DEFINED__ */


#ifndef ___CodeModelEventsRoot_FWD_DEFINED__
#define ___CodeModelEventsRoot_FWD_DEFINED__
typedef interface _CodeModelEventsRoot _CodeModelEventsRoot;
#endif 	/* ___CodeModelEventsRoot_FWD_DEFINED__ */


#ifndef ___CodeModelEvents_FWD_DEFINED__
#define ___CodeModelEvents_FWD_DEFINED__
typedef interface _CodeModelEvents _CodeModelEvents;
#endif 	/* ___CodeModelEvents_FWD_DEFINED__ */


#ifndef __Debugger2_FWD_DEFINED__
#define __Debugger2_FWD_DEFINED__
typedef interface Debugger2 Debugger2;
#endif 	/* __Debugger2_FWD_DEFINED__ */


#ifndef __Process2_FWD_DEFINED__
#define __Process2_FWD_DEFINED__
typedef interface Process2 Process2;
#endif 	/* __Process2_FWD_DEFINED__ */


#ifndef __Breakpoint2_FWD_DEFINED__
#define __Breakpoint2_FWD_DEFINED__
typedef interface Breakpoint2 Breakpoint2;
#endif 	/* __Breakpoint2_FWD_DEFINED__ */


#ifndef __Engine_FWD_DEFINED__
#define __Engine_FWD_DEFINED__
typedef interface Engine Engine;
#endif 	/* __Engine_FWD_DEFINED__ */


#ifndef __Transport_FWD_DEFINED__
#define __Transport_FWD_DEFINED__
typedef interface Transport Transport;
#endif 	/* __Transport_FWD_DEFINED__ */


#ifndef __Engines_FWD_DEFINED__
#define __Engines_FWD_DEFINED__
typedef interface Engines Engines;
#endif 	/* __Engines_FWD_DEFINED__ */


#ifndef __Transports_FWD_DEFINED__
#define __Transports_FWD_DEFINED__
typedef interface Transports Transports;
#endif 	/* __Transports_FWD_DEFINED__ */


#ifndef ___dispDebuggerProcessEvents_FWD_DEFINED__
#define ___dispDebuggerProcessEvents_FWD_DEFINED__
typedef interface _dispDebuggerProcessEvents _dispDebuggerProcessEvents;
#endif 	/* ___dispDebuggerProcessEvents_FWD_DEFINED__ */


#ifndef ___DebuggerProcessEventsRoot_FWD_DEFINED__
#define ___DebuggerProcessEventsRoot_FWD_DEFINED__
typedef interface _DebuggerProcessEventsRoot _DebuggerProcessEventsRoot;
#endif 	/* ___DebuggerProcessEventsRoot_FWD_DEFINED__ */


#ifndef ___DebuggerProcessEvents_FWD_DEFINED__
#define ___DebuggerProcessEvents_FWD_DEFINED__
typedef interface _DebuggerProcessEvents _DebuggerProcessEvents;
#endif 	/* ___DebuggerProcessEvents_FWD_DEFINED__ */


#ifndef __DebuggerProcessEvents_FWD_DEFINED__
#define __DebuggerProcessEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class DebuggerProcessEvents DebuggerProcessEvents;
#else
typedef struct DebuggerProcessEvents DebuggerProcessEvents;
#endif /* __cplusplus */

#endif 	/* __DebuggerProcessEvents_FWD_DEFINED__ */


#ifndef ___dispDebuggerExpressionEvaluationEvents_FWD_DEFINED__
#define ___dispDebuggerExpressionEvaluationEvents_FWD_DEFINED__
typedef interface _dispDebuggerExpressionEvaluationEvents _dispDebuggerExpressionEvaluationEvents;
#endif 	/* ___dispDebuggerExpressionEvaluationEvents_FWD_DEFINED__ */


#ifndef ___DebuggerExpressionEvaluationEvents_FWD_DEFINED__
#define ___DebuggerExpressionEvaluationEvents_FWD_DEFINED__
typedef interface _DebuggerExpressionEvaluationEvents _DebuggerExpressionEvaluationEvents;
#endif 	/* ___DebuggerExpressionEvaluationEvents_FWD_DEFINED__ */


#ifndef ___DebuggerExpressionEvaluationEventsRoot_FWD_DEFINED__
#define ___DebuggerExpressionEvaluationEventsRoot_FWD_DEFINED__
typedef interface _DebuggerExpressionEvaluationEventsRoot _DebuggerExpressionEvaluationEventsRoot;
#endif 	/* ___DebuggerExpressionEvaluationEventsRoot_FWD_DEFINED__ */


#ifndef __DebuggerExpressionEvaluationEvents_FWD_DEFINED__
#define __DebuggerExpressionEvaluationEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class DebuggerExpressionEvaluationEvents DebuggerExpressionEvaluationEvents;
#else
typedef struct DebuggerExpressionEvaluationEvents DebuggerExpressionEvaluationEvents;
#endif /* __cplusplus */

#endif 	/* __DebuggerExpressionEvaluationEvents_FWD_DEFINED__ */


#ifndef __ToolWindows_FWD_DEFINED__
#define __ToolWindows_FWD_DEFINED__
typedef interface ToolWindows ToolWindows;
#endif 	/* __ToolWindows_FWD_DEFINED__ */


#ifndef __Windows2_FWD_DEFINED__
#define __Windows2_FWD_DEFINED__
typedef interface Windows2 Windows2;
#endif 	/* __Windows2_FWD_DEFINED__ */


#ifndef __Window2_FWD_DEFINED__
#define __Window2_FWD_DEFINED__
typedef interface Window2 Window2;
#endif 	/* __Window2_FWD_DEFINED__ */


#ifndef __SourceControlBindings_FWD_DEFINED__
#define __SourceControlBindings_FWD_DEFINED__
typedef interface SourceControlBindings SourceControlBindings;
#endif 	/* __SourceControlBindings_FWD_DEFINED__ */


#ifndef __DTE2_FWD_DEFINED__
#define __DTE2_FWD_DEFINED__
typedef interface DTE2 DTE2;
#endif 	/* __DTE2_FWD_DEFINED__ */


#ifndef __WindowVisibilityEventsRoot_FWD_DEFINED__
#define __WindowVisibilityEventsRoot_FWD_DEFINED__
typedef interface WindowVisibilityEventsRoot WindowVisibilityEventsRoot;
#endif 	/* __WindowVisibilityEventsRoot_FWD_DEFINED__ */


#ifndef ___WindowVisibilityEvents_FWD_DEFINED__
#define ___WindowVisibilityEvents_FWD_DEFINED__
typedef interface _WindowVisibilityEvents _WindowVisibilityEvents;
#endif 	/* ___WindowVisibilityEvents_FWD_DEFINED__ */


#ifndef ___dispWindowVisibilityEvents_FWD_DEFINED__
#define ___dispWindowVisibilityEvents_FWD_DEFINED__
typedef interface _dispWindowVisibilityEvents _dispWindowVisibilityEvents;
#endif 	/* ___dispWindowVisibilityEvents_FWD_DEFINED__ */


#ifndef __WindowVisibilityEvents_FWD_DEFINED__
#define __WindowVisibilityEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class WindowVisibilityEvents WindowVisibilityEvents;
#else
typedef struct WindowVisibilityEvents WindowVisibilityEvents;
#endif /* __cplusplus */

#endif 	/* __WindowVisibilityEvents_FWD_DEFINED__ */


#ifndef ___TextDocumentKeyPressEventsRoot_FWD_DEFINED__
#define ___TextDocumentKeyPressEventsRoot_FWD_DEFINED__
typedef interface _TextDocumentKeyPressEventsRoot _TextDocumentKeyPressEventsRoot;
#endif 	/* ___TextDocumentKeyPressEventsRoot_FWD_DEFINED__ */


#ifndef ___TextDocumentKeyPressEvents_FWD_DEFINED__
#define ___TextDocumentKeyPressEvents_FWD_DEFINED__
typedef interface _TextDocumentKeyPressEvents _TextDocumentKeyPressEvents;
#endif 	/* ___TextDocumentKeyPressEvents_FWD_DEFINED__ */


#ifndef ___dispTextDocumentKeyPressEvents_FWD_DEFINED__
#define ___dispTextDocumentKeyPressEvents_FWD_DEFINED__
typedef interface _dispTextDocumentKeyPressEvents _dispTextDocumentKeyPressEvents;
#endif 	/* ___dispTextDocumentKeyPressEvents_FWD_DEFINED__ */


#ifndef __TextDocumentKeyPressEvents_FWD_DEFINED__
#define __TextDocumentKeyPressEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class TextDocumentKeyPressEvents TextDocumentKeyPressEvents;
#else
typedef struct TextDocumentKeyPressEvents TextDocumentKeyPressEvents;
#endif /* __cplusplus */

#endif 	/* __TextDocumentKeyPressEvents_FWD_DEFINED__ */


#ifndef ___PublishEvents_FWD_DEFINED__
#define ___PublishEvents_FWD_DEFINED__
typedef interface _PublishEvents _PublishEvents;
#endif 	/* ___PublishEvents_FWD_DEFINED__ */


#ifndef ___dispPublishEvents_FWD_DEFINED__
#define ___dispPublishEvents_FWD_DEFINED__
typedef interface _dispPublishEvents _dispPublishEvents;
#endif 	/* ___dispPublishEvents_FWD_DEFINED__ */


#ifndef __PublishEvents_FWD_DEFINED__
#define __PublishEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class PublishEvents PublishEvents;
#else
typedef struct PublishEvents PublishEvents;
#endif /* __cplusplus */

#endif 	/* __PublishEvents_FWD_DEFINED__ */


#ifndef __Events2_FWD_DEFINED__
#define __Events2_FWD_DEFINED__
typedef interface Events2 Events2;
#endif 	/* __Events2_FWD_DEFINED__ */


#ifndef __Solution2_FWD_DEFINED__
#define __Solution2_FWD_DEFINED__
typedef interface Solution2 Solution2;
#endif 	/* __Solution2_FWD_DEFINED__ */


#ifndef __SolutionFolder_FWD_DEFINED__
#define __SolutionFolder_FWD_DEFINED__
typedef interface SolutionFolder SolutionFolder;
#endif 	/* __SolutionFolder_FWD_DEFINED__ */


#ifndef __TaskItems2_FWD_DEFINED__
#define __TaskItems2_FWD_DEFINED__
typedef interface TaskItems2 TaskItems2;
#endif 	/* __TaskItems2_FWD_DEFINED__ */


#ifndef __EditPoint2_FWD_DEFINED__
#define __EditPoint2_FWD_DEFINED__
typedef interface EditPoint2 EditPoint2;
#endif 	/* __EditPoint2_FWD_DEFINED__ */


#ifndef __IVsExtensibility2_FWD_DEFINED__
#define __IVsExtensibility2_FWD_DEFINED__
typedef interface IVsExtensibility2 IVsExtensibility2;
#endif 	/* __IVsExtensibility2_FWD_DEFINED__ */


#ifndef __IInternalExtenderProvider_FWD_DEFINED__
#define __IInternalExtenderProvider_FWD_DEFINED__
typedef interface IInternalExtenderProvider IInternalExtenderProvider;
#endif 	/* __IInternalExtenderProvider_FWD_DEFINED__ */


#ifndef __Find2_FWD_DEFINED__
#define __Find2_FWD_DEFINED__
typedef interface Find2 Find2;
#endif 	/* __Find2_FWD_DEFINED__ */


#ifndef __LifetimeInformation_FWD_DEFINED__
#define __LifetimeInformation_FWD_DEFINED__
typedef interface LifetimeInformation LifetimeInformation;
#endif 	/* __LifetimeInformation_FWD_DEFINED__ */


#ifndef __ToolBoxItem2_FWD_DEFINED__
#define __ToolBoxItem2_FWD_DEFINED__
typedef interface ToolBoxItem2 ToolBoxItem2;
#endif 	/* __ToolBoxItem2_FWD_DEFINED__ */


#ifndef __ToolBoxTab2_FWD_DEFINED__
#define __ToolBoxTab2_FWD_DEFINED__
typedef interface ToolBoxTab2 ToolBoxTab2;
#endif 	/* __ToolBoxTab2_FWD_DEFINED__ */


#ifndef __IncrementalSearch_FWD_DEFINED__
#define __IncrementalSearch_FWD_DEFINED__
typedef interface IncrementalSearch IncrementalSearch;
#endif 	/* __IncrementalSearch_FWD_DEFINED__ */


#ifndef __TextPane2_FWD_DEFINED__
#define __TextPane2_FWD_DEFINED__
typedef interface TextPane2 TextPane2;
#endif 	/* __TextPane2_FWD_DEFINED__ */


#ifndef __SolutionConfiguration2_FWD_DEFINED__
#define __SolutionConfiguration2_FWD_DEFINED__
typedef interface SolutionConfiguration2 SolutionConfiguration2;
#endif 	/* __SolutionConfiguration2_FWD_DEFINED__ */


#ifndef __IVsProfferCommands2_FWD_DEFINED__
#define __IVsProfferCommands2_FWD_DEFINED__
typedef interface IVsProfferCommands2 IVsProfferCommands2;
#endif 	/* __IVsProfferCommands2_FWD_DEFINED__ */


#ifndef __SolutionBuild2_FWD_DEFINED__
#define __SolutionBuild2_FWD_DEFINED__
typedef interface SolutionBuild2 SolutionBuild2;
#endif 	/* __SolutionBuild2_FWD_DEFINED__ */


#ifndef __ErrorItems_FWD_DEFINED__
#define __ErrorItems_FWD_DEFINED__
typedef interface ErrorItems ErrorItems;
#endif 	/* __ErrorItems_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_dte80_0000_0000 */
/* [local] */ 

#pragma once
#ifndef __INDENTSTYLE__
#define __INDENTSTYLE__
typedef /* [uuid] */  DECLSPEC_UUID("BCCEBE05-D29C-11D2-AABD-00C04F688DDE") 
enum _vsIndentStyle
    {	vsIndentStyleNone	= 0,
	vsIndentStyleDefault	= ( vsIndentStyleNone + 1 ) ,
	vsIndentStyleSmart	= ( vsIndentStyleDefault + 1 ) 
    } 	vsIndentStyle;

#endif // __INDENTSTYLE__


extern RPC_IF_HANDLE __MIDL_itf_dte80_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_dte80_0000_0000_v0_0_s_ifspec;


#ifndef __EnvDTE80_LIBRARY_DEFINED__
#define __EnvDTE80_LIBRARY_DEFINED__

/* library EnvDTE80 */
/* [version][helpstring][uuid] */ 










typedef /* [helpstring][uuid] */  DECLSPEC_UUID("d3c30b7b-11ad-4693-b1a8-e20a36c1c9f1") 
enum vsCMFunction2
    {	vsCMFunctionAddHandler	= 0x20000,
	vsCMFunctionRemoveHandler	= 0x40000,
	vsCMFunctionRaiseEvent	= 0x80000
    } 	vsCMFunction2;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("7edbc54f-4b70-4b72-a422-5e57555dbd06") 
enum vsCMElement2
    {	vsCMElementUnknown	= 40,
	vsCMElementAttributeArgument	= 41
    } 	vsCMElement2;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("7fb3c569-7faf-4070-82aa-04b18b8bbad1") 
enum vsCMTypeRef2
    {	vsCMTypeRefUnsignedChar	= 17,
	vsCMTypeRefUnsignedShort	= 18,
	vsCMTypeRefUnsignedInt	= 19,
	vsCMTypeRefUnsignedLong	= 20,
	vsCMTypeRefReference	= 21,
	vsCMTypeRefMCBoxedReference	= 22,
	vsCMTypeRefSByte	= 23
    } 	vsCMTypeRef2;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("A49FB892-EE3A-411E-8BD4-BB4AC6AE6608") 
enum vsCMParseStatus
    {	vsCMParseStatusError	= 1,
	vsCMParseStatusComplete	= 2
    } 	vsCMParseStatus;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("DBDF9319-8FCC-4950-A50D-1E6FB5490869") 
enum vsCMClassKind
    {	vsCMClassKindMainClass	= 1,
	vsCMClassKindBlueprint	= 2,
	vsCMClassKindPartialClass	= 4,
	vsCMClassKindModule	= 8
    } 	vsCMClassKind;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("DBDF931A-8FCC-4950-A50D-1E6FB5490869") 
enum vsCMDataTypeKind
    {	vsCMDataTypeKindMain	= 1,
	vsCMDataTypeKindBlueprint	= 2,
	vsCMDataTypeKindPartial	= 4,
	vsCMDataTypeKindModule	= 8
    } 	vsCMDataTypeKind;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("81DD2950-B7E7-4D51-BFD7-11B086738F6E") 
enum vsCMChangeKind
    {	vsCMChangeKindRename	= 1,
	vsCMChangeKindUnknown	= 2,
	vsCMChangeKindSignatureChange	= 4,
	vsCMChangeKindTypeRefChange	= 8,
	vsCMChangeKindBaseChange	= 16,
	vsCMChangeKindArgumentChange	= 32
    } 	vsCMChangeKind;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("C4541DAB-D314-452D-9760-30A615F0DC26") 
enum vsCMInheritanceKind
    {	vsCMInheritanceKindNone	= 0,
	vsCMInheritanceKindAbstract	= 1,
	vsCMInheritanceKindSealed	= 2,
	vsCMInheritanceKindNew	= 4
    } 	vsCMInheritanceKind;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("2366AEF3-BA49-4A96-B4A1-B8BF1ACB2600") 
enum vsCMParameterKind
    {	vsCMParameterKindNone	= 0,
	vsCMParameterKindIn	= 1,
	vsCMParameterKindRef	= 2,
	vsCMParameterKindOut	= 4,
	vsCMParameterKindOptional	= 8,
	vsCMParameterKindParamArray	= 16
    } 	vsCMParameterKind;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("3E30C32D-9E8D-4919-8CC4-C3D75879BC52") 
enum vsCMOverrideKind
    {	vsCMOverrideKindNone	= 0,
	vsCMOverrideKindAbstract	= 1,
	vsCMOverrideKindVirtual	= 2,
	vsCMOverrideKindOverride	= 4,
	vsCMOverrideKindNew	= 8,
	vsCMOverrideKindSealed	= 16
    } 	vsCMOverrideKind;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("4438EED0-E747-49AC-8D22-00F26B18755D") 
enum vsCMConstKind
    {	vsCMConstKindNone	= 0,
	vsCMConstKindConst	= 1,
	vsCMConstKindReadOnly	= 2
    } 	vsCMConstKind;

typedef /* [uuid] */  DECLSPEC_UUID("e24a10bd-9a40-43a3-9db9-afaf05d74704") 
enum vsCMPropertyKind
    {	vsCMPropertyKindReadWrite	= 0,
	vsCMPropertyKindReadOnly	= 1,
	vsCMPropertyKindWriteOnly	= 2
    } 	vsCMPropertyKind;








typedef /* [uuid] */  DECLSPEC_UUID("4232C43A-589B-44bc-8931-ED79C6A7CA2B") 
enum dbgMinidumpOption
    {	dbgMinidumpNormal	= 1,
	dbgMinidumpFull	= ( dbgMinidumpNormal + 1 ) 
    } 	dbgMinidumpOption;

typedef /* [uuid] */  DECLSPEC_UUID("ECD94EEC-EBF9-45B2-B072-1624241C7C0B") 
enum dbgEventReason2
    {	dbgEventReason2None	= 1,
	dbgEventReason2Go	= ( dbgEventReason2None + 1 ) ,
	dbgEventReason2AttachProgram	= ( dbgEventReason2Go + 1 ) ,
	dbgEventReason2DetachProgram	= ( dbgEventReason2AttachProgram + 1 ) ,
	dbgEventReason2LaunchProgram	= ( dbgEventReason2DetachProgram + 1 ) ,
	dbgEventReason2EndProgram	= ( dbgEventReason2LaunchProgram + 1 ) ,
	dbgEventReason2StopDebugging	= ( dbgEventReason2EndProgram + 1 ) ,
	dbgEventReason2Step	= ( dbgEventReason2StopDebugging + 1 ) ,
	dbgEventReason2Breakpoint	= ( dbgEventReason2Step + 1 ) ,
	dbgEventReason2ExceptionThrown	= ( dbgEventReason2Breakpoint + 1 ) ,
	dbgEventReason2ExceptionNotHandled	= ( dbgEventReason2ExceptionThrown + 1 ) ,
	dbgEventReason2UserBreak	= ( dbgEventReason2ExceptionNotHandled + 1 ) ,
	dbgEventReason2ContextSwitch	= ( dbgEventReason2UserBreak + 1 ) ,
	dbgEventReason2Evaluation	= ( dbgEventReason2ContextSwitch + 1 ) ,
	dbgEventReason2UnwindFromException	= ( dbgEventReason2Evaluation + 1 ) 
    } 	dbgEventReason2;


typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("0c57dfec-8424-4c1a-a43c-ea7922446232") 
enum dbgProcessState
    {	dbgProcessStateRun	= 1,
	dbgProcessStateStop	= ( dbgProcessStateRun + 1 ) 
    } 	dbgProcessState;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("f8305f32-f656-4353-a49b-6bb20c6fd263") 
enum dbgExpressionEvaluationState
    {	dbgExpressionEvaluationStateStart	= 1,
	dbgExpressionEvaluationStateStop	= ( dbgExpressionEvaluationStateStart + 1 ) 
    } 	dbgExpressionEvaluationState;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("6FB22721-008A-41a0-B4A9-23A7AB2A02B7") 
enum vsCommandStyle
    {	vsCommandStylePict	= 1,
	vsCommandStyleText	= 2,
	vsCommandStylePictAndText	= 3,
	vsCommandStyleComboNoAutoComplete	= 64,
	vsCommandStyleComboCaseSensitive	= 128
    } 	vsCommandStyle;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("765724FE-DDE5-422a-A008-198376C7B641") 
enum vsCommandControlType
    {	vsCommandControlTypeButton	= 2,
	vsCommandControlTypeDropDownCombo	= 32,
	vsCommandControlTypeMRUCombo	= 64,
	vsCommandControlTypeMRUButton	= 8192
    } 	vsCommandControlType;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("4eee3a14-18aa-4244-9745-6e3f35d7fc4b") 
enum vsSourceControlCheckOutOptions
    {	vsSourceControlCheckOutOptionLatestVersion	= 0,
	vsSourceControlCheckOutOptionLocalVersion	= 1
    } 	vsSourceControlCheckOutOptions;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("2C23EF05-01A5-4684-AC27-4EFD8D840BA9") 
enum vsThemeColors
    {	vsThemeColorAccentBorder	= 5,
	vsThemeColorAccentDark	= 6,
	vsThemeColorAccentLight	= 7,
	vsThemeColorAccentMedium	= 8,
	vsThemeColorAccentPale	= 9,
	vsThemeColorCommandbarBorder	= 10,
	vsThemeColorCommandbarDraghandle	= 11,
	vsThemeColorCommandbarDraghandleShadow	= 12,
	vsThemeColorCommandbarGradientBegin	= 13,
	vsThemeColorCommandbarGradientEnd	= 14,
	vsThemeColorCommandbarGradientMiddle	= 15,
	vsThemeColorCommandbarHover	= 16,
	vsThemeColorCommandbarHoveroverSelected	= 17,
	vsThemeColorCommandbarHoveroverSelectedicon	= 18,
	vsThemeColorCommandbarSelected	= 19,
	vsThemeColorCommandbarShadow	= 20,
	vsThemeColorCommandbarTextActive	= 21,
	vsThemeColorCommandbarTextHover	= 22,
	vsThemeColorCommandbarTextInactive	= 23,
	vsThemeColorCommandbarTextSelected	= 24,
	vsThemeColorControlEditHintText	= 25,
	vsThemeColorControlEditRequiredBackground	= 26,
	vsThemeColorControlEditRequiredHintText	= 27,
	vsThemeColorControlLinkText	= 28,
	vsThemeColorControlLinkTextHover	= 29,
	vsThemeColorControlLinkTextPressed	= 30,
	vsThemeColorControlOutline	= 31,
	vsThemeColorDebuggerDatatipActiveBackground	= 32,
	vsThemeColorDebuggerDatatipActiveBorder	= 33,
	vsThemeColorDebuggerDatatipActiveHighlight	= 34,
	vsThemeColorDebuggerDatatipActiveHighlightText	= 35,
	vsThemeColorDebuggerDatatipActiveSeparator	= 36,
	vsThemeColorDebuggerDatatipActiveText	= 37,
	vsThemeColorDebuggerDatatipInactiveBackground	= 38,
	vsThemeColorDebuggerDatatipInactiveBorder	= 39,
	vsThemeColorDebuggerDatatipInactiveHighlight	= 40,
	vsThemeColorDebuggerDatatipInactiveHighlightText	= 41,
	vsThemeColorDebuggerDatatipInactiveSeparator	= 42,
	vsThemeColorDebuggerDatatipInactiveText	= 43,
	vsThemeColorDesignerBackground	= 44,
	vsThemeColorDesignerSelectionDots	= 45,
	vsThemeColorDesignerTray	= 46,
	vsThemeColorDesignerWatermark	= 47,
	vsThemeColorEnvironmentBackground	= 48,
	vsThemeColorEnvironmentBackgroundGradientBegin	= 49,
	vsThemeColorEnvironmentBackgroundGradientEnd	= 50,
	vsThemeColorFileTabBorder	= 51,
	vsThemeColorFileTabChannelBackground	= 52,
	vsThemeColorFileTabGradientDark	= 53,
	vsThemeColorFileTabGradientLight	= 54,
	vsThemeColorFileTabSelectedBackground	= 55,
	vsThemeColorFileTabSelectedBorder	= 56,
	vsThemeColorFileTabSelectedText	= 57,
	vsThemeColorFileTabText	= 58,
	vsThemeColorFormSmartTagActiontagBorder	= 59,
	vsThemeColorFormSmartTagActiontagFill	= 60,
	vsThemeColorFormSmartTagObjecttagBorder	= 61,
	vsThemeColorFormSmartTagObjecttagFill	= 62,
	vsThemeColorGridHeadingBackground	= 63,
	vsThemeColorGridHeadingText	= 64,
	vsThemeColorGridLine	= 65,
	vsThemeColorHelpHowDoIPaneBackground	= 66,
	vsThemeColorHelpHowDoIPaneBorder	= 67,
	vsThemeColorHelpHowDoIPaneLink	= 68,
	vsThemeColorHelpHowDoIPaneText	= 69,
	vsThemeColorHelpHowDoITaskBackground	= 70,
	vsThemeColorHelpHowDoITaskLink	= 71,
	vsThemeColorHelpHowDoITaskText	= 72,
	vsThemeColorHelpSearchBackground	= 73,
	vsThemeColorHelpSearchBorder	= 74,
	vsThemeColorHelpSearchFitlerBackground	= 75,
	vsThemeColorHelpSearchFitlerBorder	= 76,
	vsThemeColorHelpSearchGradientBegin	= 77,
	vsThemeColorHelpSearchGradientEnd	= 78,
	vsThemeColorHelpSearchNavigationDisabled	= 79,
	vsThemeColorHelpSearchNavigationEnabled	= 80,
	vsThemeColorHelpSearchPanelRules	= 81,
	vsThemeColorHelpSearchProviderBackground	= 82,
	vsThemeColorHelpSearchProviderIcon	= 83,
	vsThemeColorHelpSearchProviderText	= 84,
	vsThemeColorHelpSearchResultLinkSelected	= 85,
	vsThemeColorHelpSearchResultLinkUnselected	= 86,
	vsThemeColorHelpSearchResultSelectedBackground	= 87,
	vsThemeColorHelpSearchResultSelectedText	= 88,
	vsThemeColorHelpSearchText	= 89,
	vsThemeColorPanelBorder	= 90,
	vsThemeColorPanelGradientDark	= 91,
	vsThemeColorPanelGradientLight	= 92,
	vsThemeColorPanelHoveroverCloseBorder	= 93,
	vsThemeColorPanelHoveroverCloseFill	= 94,
	vsThemeColorPanelHyperlink	= 95,
	vsThemeColorPanelHyperlinkHover	= 96,
	vsThemeColorPanelHyperlinkPressed	= 97,
	vsThemeColorPanelSeparator	= 98,
	vsThemeColorPanelSubGroupSeparator	= 99,
	vsThemeColorPanelText	= 100,
	vsThemeColorPanelTitlebar	= 101,
	vsThemeColorPanelTitlebarText	= 102,
	vsThemeColorPanelTitlebarUnselected	= 103,
	vsThemeColorProjectDesignerBackgroundGradientBegin	= 104,
	vsThemeColorProjectDesignerBackgroundGradientEnd	= 105,
	vsThemeColorProjectDesignerBorderOutside	= 106,
	vsThemeColorProjectDesignerBorderInside	= 107,
	vsThemeColorProjectDesignerContentsBackground	= 108,
	vsThemeColorProjectDesignerTabBackgroundGradientBegin	= 109,
	vsThemeColorProjectDesignerTabBackgroundGradientEnd	= 110,
	vsThemeColorProjectDesignerTabSelectedInsideborder	= 111,
	vsThemeColorProjectDesignerTabSelectedBorder	= 112,
	vsThemeColorProjectDesignerTabSelectedHighlight1	= 113,
	vsThemeColorProjectDesignerTabSelectedHighlight2	= 114,
	vsThemeColorProjectDesignerTabSelectedBackground	= 115,
	vsThemeColorProjectDesignerTabSepBottomGradientBegin	= 116,
	vsThemeColorProjectDesignerTabSepBottomGradientEnd	= 117,
	vsThemeColorProjectDesignerTabSepTopGradientBegin	= 118,
	vsThemeColorProjectDesignerTabSepTopGradientEnd	= 119,
	vsThemeColorScreentipBorder	= 120,
	vsThemeColorScreentipBackground	= 121,
	vsThemeColorScreentipText	= 122,
	vsThemeColorSidebarBackground	= 123,
	vsThemeColorSidebarGradientdark	= 124,
	vsThemeColorSidebarGradientlight	= 125,
	vsThemeColorSidebarText	= 126,
	vsThemeColorSmartTagBorder	= 127,
	vsThemeColorSmartTagFill	= 128,
	vsThemeColorSmartTagHoverBorder	= 129,
	vsThemeColorSmartTagHoverFill	= 130,
	vsThemeColorSmartTagHoverText	= 131,
	vsThemeColorSmartTagText	= 132,
	vsThemeColorSnaplines	= 133,
	vsThemeColorSnaplinesTextBaseline	= 134,
	vsThemeColorTasklistGridlines	= 135,
	vsThemeColorTitlebarActive	= 136,
	vsThemeColorTitlebarActiveGradientBegin	= 137,
	vsThemeColorTitlebarActiveGradientEnd	= 138,
	vsThemeColorTitlebarActiveText	= 139,
	vsThemeColorTitlebarInactive	= 140,
	vsThemeColorTitlebarInactiveGradientBegin	= 141,
	vsThemeColorTitlebarInactiveGradientEnd	= 142,
	vsThemeColorTitlebarInactiveText	= 143,
	vsThemeColorToolboxBackground	= 144,
	vsThemeColorToolboxDivider	= 145,
	vsThemeColorToolboxGradientDark	= 146,
	vsThemeColorToolboxGradientLight	= 147,
	vsThemeColorToolboxHeadingAccent	= 148,
	vsThemeColorToolboxHeadingBegin	= 149,
	vsThemeColorToolboxHeadingEnd	= 150,
	vsThemeColorToolboxIconHighlight	= 151,
	vsThemeColorToolboxIconShadow	= 152,
	vsThemeColorToolWindowBackground	= 153,
	vsThemeColorToolWindowBorder	= 154,
	vsThemeColorToolWindowTabSelectedtab	= 155,
	vsThemeColorToolWindowTabBorder	= 156,
	vsThemeColorToolWindowTabGradientBegin	= 157,
	vsThemeColorToolWindowTabGradientEnd	= 158,
	vsThemeColorToolWindowTabText	= 159,
	vsThemeColorToolWindowTabSelectedtext	= 160,
	vsThemeColorWizardOrientationPanelBackground	= 161,
	vsThemeColorWizardOrientationPanelText	= 162
    } 	vsThemeColors;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("A3ACF727-0590-4467-A9C7-5557B9C0F3F6") 
enum vsFindOptions2
    {	vsFindOptionsWaitForFindToComplete	= 0x4000
    } 	vsFindOptions2;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("FD6530D0-1A2C-4073-AAE9-3C2B3AA8BC4D") 
enum vsIncrementalSearchResult
    {	vsIncrementalSearchResultFound	= 1,
	vsIncrementalSearchResultPassedEOB	= 2,
	vsIncrementalSearchResultPassedStart	= 4,
	vsIncrementalSearchResultFailed	= 8
    } 	vsIncrementalSearchResult;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("861474e5-de58-4924-b6d3-8d48ba712944") 
enum vsPublishState
    {	vsPublishStateDone	= 1,
	vsPublishStateInProgress	= 2,
	vsPublishStateNotStarted	= 4
    } 	vsPublishState;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("e71fe63b-b6d9-47a0-9577-963c84aecce0") 
enum vsBuildErrorLevel
    {	vsBuildErrorLevelLow	= 1,
	vsBuildErrorLevelMedium	= 2,
	vsBuildErrorLevelHigh	= 4
    } 	vsBuildErrorLevel;


EXTERN_C const IID LIBID_EnvDTE80;

#ifndef __Commands2_INTERFACE_DEFINED__
#define __Commands2_INTERFACE_DEFINED__

/* interface Commands2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Commands2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7EAA857B-2356-494B-9E13-0F6EEFA86E43")
    Commands2 : public Commands
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddNamedCommand2( 
            /* [in] */ __RPC__in /* external definition not present */ AddIn *AddInInstance,
            /* [in] */ __RPC__in BSTR Name,
            /* [in] */ __RPC__in BSTR ButtonText,
            /* [in] */ __RPC__in BSTR Tooltip,
            /* [in] */ VARIANT_BOOL MSOButton,
            /* [optional][in] */ VARIANT Bitmap,
            /* [optional][in] */ __RPC__deref_in_opt SAFEARRAY * *ContextUIGUIDs,
            /* [defaultvalue][in] */ long vsCommandStatusValue,
            /* [defaultvalue][in] */ long CommandStyleFlags,
            /* [defaultvalue][in] */ vsCommandControlType ControlType,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Command **pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE UpdateCommandUI( 
            VARIANT_BOOL PerformImmediately) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Commands2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Commands2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Commands2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Commands2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Commands2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Commands2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Commands2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Commands2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Commands2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Commands2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            Commands2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Guid,
            /* [in][idldescattr] */ signed long ID,
            /* [in][idldescattr] */ __RPC__in VARIANT *Control,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Raise )( 
            Commands2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Guid,
            /* [in][idldescattr] */ signed long ID,
            /* [out][in][idldescattr] */ __RPC__inout VARIANT *CustomIn,
            /* [out][in][idldescattr] */ __RPC__inout VARIANT *CustomOut,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *CommandInfo )( 
            Commands2 * This,
            /* [in][idldescattr] */ __RPC__in_opt IDispatch *CommandBarControl,
            /* [out][idldescattr] */ __RPC__deref_out_opt BSTR *Guid,
            /* [out][idldescattr] */ __RPC__out signed long *ID,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Commands2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Commands2 * This,
            /* [in][idldescattr] */ VARIANT index,
            /* [in][idldescattr] */ signed long ID,
            /* [retval][out] */ __RPC__deref_out_opt Command **retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Commands2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddNamedCommand )( 
            Commands2 * This,
            /* [in][idldescattr] */ __RPC__in_opt AddIn *AddInInstance,
            /* [in][idldescattr] */ __RPC__in BSTR Name,
            /* [in][idldescattr] */ __RPC__in BSTR ButtonText,
            /* [in][idldescattr] */ __RPC__in BSTR Tooltip,
            /* [in][idldescattr] */ BOOLEAN MSOButton,
            /* [in][idldescattr] */ signed long Bitmap,
            /* [in][idldescattr] */ __RPC__deref_in_opt SAFEARRAY * *ContextUIGUIDs,
            /* [in][idldescattr] */ signed long vsCommandDisabledFlagsValue,
            /* [retval][out] */ __RPC__deref_out_opt Command **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddCommandBar )( 
            Commands2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Name,
            /* [in][idldescattr] */ enum vsCommandBarType Type,
            /* [in][idldescattr] */ __RPC__in_opt IDispatch *CommandBarParent,
            /* [in][idldescattr] */ signed long Position,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveCommandBar )( 
            Commands2 * This,
            /* [in][idldescattr] */ __RPC__in_opt IDispatch *CommandBar,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddNamedCommand2 )( 
            Commands2 * This,
            /* [in] */ __RPC__in /* external definition not present */ AddIn *AddInInstance,
            /* [in] */ __RPC__in BSTR Name,
            /* [in] */ __RPC__in BSTR ButtonText,
            /* [in] */ __RPC__in BSTR Tooltip,
            /* [in] */ VARIANT_BOOL MSOButton,
            /* [optional][in] */ VARIANT Bitmap,
            /* [optional][in] */ __RPC__deref_in_opt SAFEARRAY * *ContextUIGUIDs,
            /* [defaultvalue][in] */ long vsCommandStatusValue,
            /* [defaultvalue][in] */ long CommandStyleFlags,
            /* [defaultvalue][in] */ vsCommandControlType ControlType,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Command **pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *UpdateCommandUI )( 
            Commands2 * This,
            VARIANT_BOOL PerformImmediately);
        
        END_INTERFACE
    } Commands2Vtbl;

    interface Commands2
    {
        CONST_VTBL struct Commands2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Commands2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Commands2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Commands2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Commands2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Commands2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Commands2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Commands2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Commands2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define Commands2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define Commands2_Add(This,Guid,ID,Control,retval)	\
    ( (This)->lpVtbl -> Add(This,Guid,ID,Control,retval) ) 

#define Commands2_Raise(This,Guid,ID,CustomIn,CustomOut,retval)	\
    ( (This)->lpVtbl -> Raise(This,Guid,ID,CustomIn,CustomOut,retval) ) 

#define Commands2_CommandInfo(This,CommandBarControl,Guid,ID,retval)	\
    ( (This)->lpVtbl -> CommandInfo(This,CommandBarControl,Guid,ID,retval) ) 

#define Commands2_get_Count(This,retval)	\
    ( (This)->lpVtbl -> get_Count(This,retval) ) 

#define Commands2_Item(This,index,ID,retval)	\
    ( (This)->lpVtbl -> Item(This,index,ID,retval) ) 

#define Commands2__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> _NewEnum(This,retval) ) 

#define Commands2_AddNamedCommand(This,AddInInstance,Name,ButtonText,Tooltip,MSOButton,Bitmap,ContextUIGUIDs,vsCommandDisabledFlagsValue,retval)	\
    ( (This)->lpVtbl -> AddNamedCommand(This,AddInInstance,Name,ButtonText,Tooltip,MSOButton,Bitmap,ContextUIGUIDs,vsCommandDisabledFlagsValue,retval) ) 

#define Commands2_AddCommandBar(This,Name,Type,CommandBarParent,Position,retval)	\
    ( (This)->lpVtbl -> AddCommandBar(This,Name,Type,CommandBarParent,Position,retval) ) 

#define Commands2_RemoveCommandBar(This,CommandBar,retval)	\
    ( (This)->lpVtbl -> RemoveCommandBar(This,CommandBar,retval) ) 


#define Commands2_AddNamedCommand2(This,AddInInstance,Name,ButtonText,Tooltip,MSOButton,Bitmap,ContextUIGUIDs,vsCommandStatusValue,CommandStyleFlags,ControlType,pVal)	\
    ( (This)->lpVtbl -> AddNamedCommand2(This,AddInInstance,Name,ButtonText,Tooltip,MSOButton,Bitmap,ContextUIGUIDs,vsCommandStatusValue,CommandStyleFlags,ControlType,pVal) ) 

#define Commands2_UpdateCommandUI(This,PerformImmediately)	\
    ( (This)->lpVtbl -> UpdateCommandUI(This,PerformImmediately) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Commands2_INTERFACE_DEFINED__ */


#ifndef __SourceControl2_INTERFACE_DEFINED__
#define __SourceControl2_INTERFACE_DEFINED__

/* interface SourceControl2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SourceControl2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("111522ab-f439-4d85-9a36-1716da4da114")
    SourceControl2 : public SourceControl
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetBindings( 
            /* [in] */ __RPC__in BSTR ItemPath,
            /* [retval][out] */ __RPC__deref_out_opt SourceControlBindings **ppVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CheckOutItem2( 
            /* [in] */ __RPC__in BSTR ItemName,
            /* [in] */ vsSourceControlCheckOutOptions Flags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfCheckedOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CheckOutItems2( 
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *ItemNames,
            /* [in] */ vsSourceControlCheckOutOptions Flags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfCheckedOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE UndoExcludeItem( 
            /* [in] */ __RPC__in BSTR ProjectFile,
            /* [in] */ __RPC__in BSTR ItemName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE UndoExcludeItems( 
            /* [in] */ __RPC__in BSTR ProjectFile,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *ItemNames) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SourceControl2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SourceControl2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            SourceControl2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            SourceControl2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SourceControl2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SourceControl2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SourceControl2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SourceControl2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SourceControl2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SourceControl2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *IsItemUnderSCC )( 
            SourceControl2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ItemName,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *IsItemCheckedOut )( 
            SourceControl2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ItemName,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *CheckOutItem )( 
            SourceControl2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ItemName,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *CheckOutItems )( 
            SourceControl2 * This,
            /* [in][idldescattr] */ __RPC__deref_in_opt SAFEARRAY * *ItemNames,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ExcludeItem )( 
            SourceControl2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ProjectFile,
            /* [in][idldescattr] */ __RPC__in BSTR ItemName,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ExcludeItems )( 
            SourceControl2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ProjectFile,
            /* [in][idldescattr] */ __RPC__deref_in_opt SAFEARRAY * *ItemNames,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetBindings )( 
            SourceControl2 * This,
            /* [in] */ __RPC__in BSTR ItemPath,
            /* [retval][out] */ __RPC__deref_out_opt SourceControlBindings **ppVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckOutItem2 )( 
            SourceControl2 * This,
            /* [in] */ __RPC__in BSTR ItemName,
            /* [in] */ vsSourceControlCheckOutOptions Flags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfCheckedOut);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckOutItems2 )( 
            SourceControl2 * This,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *ItemNames,
            /* [in] */ vsSourceControlCheckOutOptions Flags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfCheckedOut);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *UndoExcludeItem )( 
            SourceControl2 * This,
            /* [in] */ __RPC__in BSTR ProjectFile,
            /* [in] */ __RPC__in BSTR ItemName);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *UndoExcludeItems )( 
            SourceControl2 * This,
            /* [in] */ __RPC__in BSTR ProjectFile,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *ItemNames);
        
        END_INTERFACE
    } SourceControl2Vtbl;

    interface SourceControl2
    {
        CONST_VTBL struct SourceControl2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SourceControl2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define SourceControl2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define SourceControl2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define SourceControl2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define SourceControl2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define SourceControl2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define SourceControl2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define SourceControl2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define SourceControl2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define SourceControl2_IsItemUnderSCC(This,ItemName,retval)	\
    ( (This)->lpVtbl -> IsItemUnderSCC(This,ItemName,retval) ) 

#define SourceControl2_IsItemCheckedOut(This,ItemName,retval)	\
    ( (This)->lpVtbl -> IsItemCheckedOut(This,ItemName,retval) ) 

#define SourceControl2_CheckOutItem(This,ItemName,retval)	\
    ( (This)->lpVtbl -> CheckOutItem(This,ItemName,retval) ) 

#define SourceControl2_CheckOutItems(This,ItemNames,retval)	\
    ( (This)->lpVtbl -> CheckOutItems(This,ItemNames,retval) ) 

#define SourceControl2_ExcludeItem(This,ProjectFile,ItemName,retval)	\
    ( (This)->lpVtbl -> ExcludeItem(This,ProjectFile,ItemName,retval) ) 

#define SourceControl2_ExcludeItems(This,ProjectFile,ItemNames,retval)	\
    ( (This)->lpVtbl -> ExcludeItems(This,ProjectFile,ItemNames,retval) ) 


#define SourceControl2_GetBindings(This,ItemPath,ppVal)	\
    ( (This)->lpVtbl -> GetBindings(This,ItemPath,ppVal) ) 

#define SourceControl2_CheckOutItem2(This,ItemName,Flags,pfCheckedOut)	\
    ( (This)->lpVtbl -> CheckOutItem2(This,ItemName,Flags,pfCheckedOut) ) 

#define SourceControl2_CheckOutItems2(This,ItemNames,Flags,pfCheckedOut)	\
    ( (This)->lpVtbl -> CheckOutItems2(This,ItemNames,Flags,pfCheckedOut) ) 

#define SourceControl2_UndoExcludeItem(This,ProjectFile,ItemName)	\
    ( (This)->lpVtbl -> UndoExcludeItem(This,ProjectFile,ItemName) ) 

#define SourceControl2_UndoExcludeItems(This,ProjectFile,ItemNames)	\
    ( (This)->lpVtbl -> UndoExcludeItems(This,ProjectFile,ItemNames) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SourceControl2_INTERFACE_DEFINED__ */


#ifndef __ErrorItem_INTERFACE_DEFINED__
#define __ErrorItem_INTERFACE_DEFINED__

/* interface ErrorItem */
/* [helpstring][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ErrorItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f49a191f-7258-493b-9310-5f7771ddf3d7")
    ErrorItem : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt ErrorItems **ErrorItems) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ErrorLevel( 
            /* [retval][out] */ __RPC__out vsBuildErrorLevel *ErrorLevel) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Description) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *File) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Line( 
            /* [retval][out] */ __RPC__out long *Line) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Column( 
            /* [retval][out] */ __RPC__out long *Column) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Project( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ProjectUniqueName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Navigate( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ErrorItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ErrorItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ErrorItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ErrorItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ErrorItem * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ErrorItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ErrorItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ErrorItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ErrorItem * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            ErrorItem * This,
            /* [retval][out] */ __RPC__deref_out_opt ErrorItems **ErrorItems);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorLevel )( 
            ErrorItem * This,
            /* [retval][out] */ __RPC__out vsBuildErrorLevel *ErrorLevel);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            ErrorItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Description);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            ErrorItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *File);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Line )( 
            ErrorItem * This,
            /* [retval][out] */ __RPC__out long *Line);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Column )( 
            ErrorItem * This,
            /* [retval][out] */ __RPC__out long *Column);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            ErrorItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ProjectUniqueName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Navigate )( 
            ErrorItem * This);
        
        END_INTERFACE
    } ErrorItemVtbl;

    interface ErrorItem
    {
        CONST_VTBL struct ErrorItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ErrorItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ErrorItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ErrorItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ErrorItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ErrorItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ErrorItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ErrorItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ErrorItem_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define ErrorItem_get_Collection(This,ErrorItems)	\
    ( (This)->lpVtbl -> get_Collection(This,ErrorItems) ) 

#define ErrorItem_get_ErrorLevel(This,ErrorLevel)	\
    ( (This)->lpVtbl -> get_ErrorLevel(This,ErrorLevel) ) 

#define ErrorItem_get_Description(This,Description)	\
    ( (This)->lpVtbl -> get_Description(This,Description) ) 

#define ErrorItem_get_FileName(This,File)	\
    ( (This)->lpVtbl -> get_FileName(This,File) ) 

#define ErrorItem_get_Line(This,Line)	\
    ( (This)->lpVtbl -> get_Line(This,Line) ) 

#define ErrorItem_get_Column(This,Column)	\
    ( (This)->lpVtbl -> get_Column(This,Column) ) 

#define ErrorItem_get_Project(This,ProjectUniqueName)	\
    ( (This)->lpVtbl -> get_Project(This,ProjectUniqueName) ) 

#define ErrorItem_Navigate(This)	\
    ( (This)->lpVtbl -> Navigate(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ErrorItem_INTERFACE_DEFINED__ */


#ifndef __ErrorList_INTERFACE_DEFINED__
#define __ErrorList_INTERFACE_DEFINED__

/* interface ErrorList */
/* [helpstring][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ErrorList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7bf84ef1-8246-498a-a127-2ea37824fda1")
    ErrorList : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **ppDTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Window **ppWindow) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowErrors( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pShowErrors) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowErrors( 
            VARIANT_BOOL ShowErrors) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowWarnings( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pShowWarnings) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowWarnings( 
            VARIANT_BOOL ShowWarnings) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowMessages( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pShowMessages) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowMessages( 
            VARIANT_BOOL ShowMessages) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ErrorItems( 
            /* [retval][out] */ __RPC__deref_out_opt ErrorItems **ppErrorItems) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectedItems( 
            /* [retval][out] */ __RPC__out VARIANT *Selections) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ErrorListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ErrorList * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ErrorList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ErrorList * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ErrorList * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ErrorList * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ErrorList * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ErrorList * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ErrorList * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **ppDTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ErrorList * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Window **ppWindow);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowErrors )( 
            ErrorList * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pShowErrors);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowErrors )( 
            ErrorList * This,
            VARIANT_BOOL ShowErrors);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowWarnings )( 
            ErrorList * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pShowWarnings);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowWarnings )( 
            ErrorList * This,
            VARIANT_BOOL ShowWarnings);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowMessages )( 
            ErrorList * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pShowMessages);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowMessages )( 
            ErrorList * This,
            VARIANT_BOOL ShowMessages);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorItems )( 
            ErrorList * This,
            /* [retval][out] */ __RPC__deref_out_opt ErrorItems **ppErrorItems);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedItems )( 
            ErrorList * This,
            /* [retval][out] */ __RPC__out VARIANT *Selections);
        
        END_INTERFACE
    } ErrorListVtbl;

    interface ErrorList
    {
        CONST_VTBL struct ErrorListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ErrorList_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ErrorList_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ErrorList_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ErrorList_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ErrorList_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ErrorList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ErrorList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ErrorList_get_DTE(This,ppDTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTEObject) ) 

#define ErrorList_get_Parent(This,ppWindow)	\
    ( (This)->lpVtbl -> get_Parent(This,ppWindow) ) 

#define ErrorList_get_ShowErrors(This,pShowErrors)	\
    ( (This)->lpVtbl -> get_ShowErrors(This,pShowErrors) ) 

#define ErrorList_put_ShowErrors(This,ShowErrors)	\
    ( (This)->lpVtbl -> put_ShowErrors(This,ShowErrors) ) 

#define ErrorList_get_ShowWarnings(This,pShowWarnings)	\
    ( (This)->lpVtbl -> get_ShowWarnings(This,pShowWarnings) ) 

#define ErrorList_put_ShowWarnings(This,ShowWarnings)	\
    ( (This)->lpVtbl -> put_ShowWarnings(This,ShowWarnings) ) 

#define ErrorList_get_ShowMessages(This,pShowMessages)	\
    ( (This)->lpVtbl -> get_ShowMessages(This,pShowMessages) ) 

#define ErrorList_put_ShowMessages(This,ShowMessages)	\
    ( (This)->lpVtbl -> put_ShowMessages(This,ShowMessages) ) 

#define ErrorList_get_ErrorItems(This,ppErrorItems)	\
    ( (This)->lpVtbl -> get_ErrorItems(This,ppErrorItems) ) 

#define ErrorList_get_SelectedItems(This,Selections)	\
    ( (This)->lpVtbl -> get_SelectedItems(This,Selections) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ErrorList_INTERFACE_DEFINED__ */


#ifndef __CodeAttributeArgument_INTERFACE_DEFINED__
#define __CodeAttributeArgument_INTERFACE_DEFINED__

/* interface CodeAttributeArgument */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeAttributeArgument;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("80F4779B-835D-4873-8356-2F34A759A514")
    CodeAttributeArgument : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ ProjectItem **pProjItem) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__out enum /* external definition not present */ vsCMElement *pCodeEltKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCodeType( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InfoLocation( 
            /* [retval][out] */ __RPC__out enum /* external definition not present */ vsCMInfoLocation *pInfoLocation) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStartPoint( 
            /* [defaultvalue][in] */ enum /* external definition not present */ vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetEndPoint( 
            /* [defaultvalue][in] */ enum /* external definition not present */ vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *value) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            __RPC__in BSTR value) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeAttributeArgumentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeAttributeArgument * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeAttributeArgument * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeAttributeArgument * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeAttributeArgument * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeAttributeArgument * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeAttributeArgument * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeAttributeArgument * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeAttributeArgument * This,
            __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ ProjectItem **pProjItem);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__out enum /* external definition not present */ vsCMElement *pCodeEltKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__out enum /* external definition not present */ vsCMInfoLocation *pInfoLocation);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeAttributeArgument * This,
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeAttributeArgument * This,
            /* [defaultvalue][in] */ enum /* external definition not present */ vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeAttributeArgument * This,
            /* [defaultvalue][in] */ enum /* external definition not present */ vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            CodeAttributeArgument * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *value);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            CodeAttributeArgument * This,
            __RPC__in BSTR value);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            CodeAttributeArgument * This);
        
        END_INTERFACE
    } CodeAttributeArgumentVtbl;

    interface CodeAttributeArgument
    {
        CONST_VTBL struct CodeAttributeArgumentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeAttributeArgument_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeAttributeArgument_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeAttributeArgument_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeAttributeArgument_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeAttributeArgument_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeAttributeArgument_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeAttributeArgument_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeAttributeArgument_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeAttributeArgument_get_Collection(This,ppCollection)	\
    ( (This)->lpVtbl -> get_Collection(This,ppCollection) ) 

#define CodeAttributeArgument_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define CodeAttributeArgument_put_Name(This,NewName)	\
    ( (This)->lpVtbl -> put_Name(This,NewName) ) 

#define CodeAttributeArgument_get_FullName(This,pVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pVal) ) 

#define CodeAttributeArgument_get_ProjectItem(This,pProjItem)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,pProjItem) ) 

#define CodeAttributeArgument_get_Kind(This,pCodeEltKind)	\
    ( (This)->lpVtbl -> get_Kind(This,pCodeEltKind) ) 

#define CodeAttributeArgument_get_IsCodeType(This,pIsCodeType)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,pIsCodeType) ) 

#define CodeAttributeArgument_get_InfoLocation(This,pInfoLocation)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,pInfoLocation) ) 

#define CodeAttributeArgument_get_Children(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Children(This,ppCodeElements) ) 

#define CodeAttributeArgument_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define CodeAttributeArgument_get_StartPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppTextPoint) ) 

#define CodeAttributeArgument_get_EndPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,ppTextPoint) ) 

#define CodeAttributeArgument_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define CodeAttributeArgument_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define CodeAttributeArgument_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define CodeAttributeArgument_GetStartPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,ppTextPoint) ) 

#define CodeAttributeArgument_GetEndPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,ppTextPoint) ) 

#define CodeAttributeArgument_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#define CodeAttributeArgument_put_Value(This,value)	\
    ( (This)->lpVtbl -> put_Value(This,value) ) 

#define CodeAttributeArgument_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeAttributeArgument_INTERFACE_DEFINED__ */



#ifndef __CodeModelLanguageConstants2_MODULE_DEFINED__
#define __CodeModelLanguageConstants2_MODULE_DEFINED__


/* module CodeModelLanguageConstants2 */
/* [dllname][uuid] */ 

const LPSTR vsCMLanguageJSharp	=	"{E6FDF8BF-F3D1-11D4-8576-0002A516ECE8}";

#endif /* __CodeModelLanguageConstants2_MODULE_DEFINED__ */

#ifndef __CodeEvent_INTERFACE_DEFINED__
#define __CodeEvent_INTERFACE_DEFINED__

/* interface CodeEvent */
/* [helpstring][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ce615bd2-8ed5-4f0c-a7b6-4a299d8801fd")
    CodeEvent : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ ProjectItem **pProjItem) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__out enum /* external definition not present */ vsCMElement *pCodeEltKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCodeType( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InfoLocation( 
            /* [retval][out] */ __RPC__out enum /* external definition not present */ vsCMInfoLocation *pInfoLocation) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStartPoint( 
            /* [defaultvalue][in] */ enum /* external definition not present */ vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetEndPoint( 
            /* [defaultvalue][in] */ enum /* external definition not present */ vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Access( 
            enum /* external definition not present */ vsCMAccess Access) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Access( 
            /* [retval][out] */ __RPC__out enum /* external definition not present */ vsCMAccess *Access) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppMembers) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocComment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocComment( 
            __RPC__in BSTR DocComment) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comment( 
            __RPC__in BSTR Comment) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeAttribute **ppCodeAttribute) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Adder( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeFunction **ppCodeFunction) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Adder( 
            __RPC__in /* external definition not present */ CodeFunction *codeFunction) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Remover( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeFunction **ppCodeFunction) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Remover( 
            __RPC__in /* external definition not present */ CodeFunction *codeFunction) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thrower( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeFunction **ppCodeFunction) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thrower( 
            __RPC__in /* external definition not present */ CodeFunction *codeFunction) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsPropertyStyleEvent( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *vbIsPropertyStyle) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Prototype( 
            /* [defaultvalue][in] */ long Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullName) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeTypeRef **ppCodeTypeRef) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            __RPC__in /* external definition not present */ CodeTypeRef *pCodeTypeRef) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OverrideKind( 
            /* [retval][out] */ __RPC__out vsCMOverrideKind *Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OverrideKind( 
            vsCMOverrideKind Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsShared( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsShared) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsShared( 
            VARIANT_BOOL Shared) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeEvent * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeEvent * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeEvent * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeEvent * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeEvent * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeEvent * This,
            __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ ProjectItem **pProjItem);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__out enum /* external definition not present */ vsCMElement *pCodeEltKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__out enum /* external definition not present */ vsCMInfoLocation *pInfoLocation);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeEvent * This,
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeEvent * This,
            /* [defaultvalue][in] */ enum /* external definition not present */ vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeEvent * This,
            /* [defaultvalue][in] */ enum /* external definition not present */ vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeEvent * This,
            enum /* external definition not present */ vsCMAccess Access);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__out enum /* external definition not present */ vsCMAccess *Access);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppMembers);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeEvent * This,
            __RPC__in BSTR DocComment);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeEvent * This,
            __RPC__in BSTR Comment);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeEvent * This,
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeAttribute **ppCodeAttribute);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Adder )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeFunction **ppCodeFunction);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Adder )( 
            CodeEvent * This,
            __RPC__in /* external definition not present */ CodeFunction *codeFunction);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Remover )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeFunction **ppCodeFunction);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Remover )( 
            CodeEvent * This,
            __RPC__in /* external definition not present */ CodeFunction *codeFunction);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thrower )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeFunction **ppCodeFunction);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thrower )( 
            CodeEvent * This,
            __RPC__in /* external definition not present */ CodeFunction *codeFunction);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsPropertyStyleEvent )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *vbIsPropertyStyle);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Prototype )( 
            CodeEvent * This,
            /* [defaultvalue][in] */ long Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullName);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeTypeRef **ppCodeTypeRef);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            CodeEvent * This,
            __RPC__in /* external definition not present */ CodeTypeRef *pCodeTypeRef);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OverrideKind )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__out vsCMOverrideKind *Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OverrideKind )( 
            CodeEvent * This,
            vsCMOverrideKind Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsShared )( 
            CodeEvent * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsShared);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsShared )( 
            CodeEvent * This,
            VARIANT_BOOL Shared);
        
        END_INTERFACE
    } CodeEventVtbl;

    interface CodeEvent
    {
        CONST_VTBL struct CodeEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeEvent_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeEvent_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeEvent_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeEvent_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeEvent_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeEvent_get_Collection(This,ppCollection)	\
    ( (This)->lpVtbl -> get_Collection(This,ppCollection) ) 

#define CodeEvent_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define CodeEvent_put_Name(This,NewName)	\
    ( (This)->lpVtbl -> put_Name(This,NewName) ) 

#define CodeEvent_get_FullName(This,pVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pVal) ) 

#define CodeEvent_get_ProjectItem(This,pProjItem)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,pProjItem) ) 

#define CodeEvent_get_Kind(This,pCodeEltKind)	\
    ( (This)->lpVtbl -> get_Kind(This,pCodeEltKind) ) 

#define CodeEvent_get_IsCodeType(This,pIsCodeType)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,pIsCodeType) ) 

#define CodeEvent_get_InfoLocation(This,pInfoLocation)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,pInfoLocation) ) 

#define CodeEvent_get_Children(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Children(This,ppCodeElements) ) 

#define CodeEvent_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define CodeEvent_get_StartPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppTextPoint) ) 

#define CodeEvent_get_EndPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,ppTextPoint) ) 

#define CodeEvent_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define CodeEvent_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define CodeEvent_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define CodeEvent_GetStartPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,ppTextPoint) ) 

#define CodeEvent_GetEndPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,ppTextPoint) ) 

#define CodeEvent_get_Parent(This,ParentObject)	\
    ( (This)->lpVtbl -> get_Parent(This,ParentObject) ) 

#define CodeEvent_put_Access(This,Access)	\
    ( (This)->lpVtbl -> put_Access(This,Access) ) 

#define CodeEvent_get_Access(This,Access)	\
    ( (This)->lpVtbl -> get_Access(This,Access) ) 

#define CodeEvent_get_Attributes(This,ppMembers)	\
    ( (This)->lpVtbl -> get_Attributes(This,ppMembers) ) 

#define CodeEvent_get_DocComment(This,pDocComment)	\
    ( (This)->lpVtbl -> get_DocComment(This,pDocComment) ) 

#define CodeEvent_put_DocComment(This,DocComment)	\
    ( (This)->lpVtbl -> put_DocComment(This,DocComment) ) 

#define CodeEvent_get_Comment(This,pComment)	\
    ( (This)->lpVtbl -> get_Comment(This,pComment) ) 

#define CodeEvent_put_Comment(This,Comment)	\
    ( (This)->lpVtbl -> put_Comment(This,Comment) ) 

#define CodeEvent_AddAttribute(This,Name,Value,Position,ppCodeAttribute)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,ppCodeAttribute) ) 

#define CodeEvent_get_Adder(This,ppCodeFunction)	\
    ( (This)->lpVtbl -> get_Adder(This,ppCodeFunction) ) 

#define CodeEvent_put_Adder(This,codeFunction)	\
    ( (This)->lpVtbl -> put_Adder(This,codeFunction) ) 

#define CodeEvent_get_Remover(This,ppCodeFunction)	\
    ( (This)->lpVtbl -> get_Remover(This,ppCodeFunction) ) 

#define CodeEvent_put_Remover(This,codeFunction)	\
    ( (This)->lpVtbl -> put_Remover(This,codeFunction) ) 

#define CodeEvent_get_Thrower(This,ppCodeFunction)	\
    ( (This)->lpVtbl -> get_Thrower(This,ppCodeFunction) ) 

#define CodeEvent_put_Thrower(This,codeFunction)	\
    ( (This)->lpVtbl -> put_Thrower(This,codeFunction) ) 

#define CodeEvent_get_IsPropertyStyleEvent(This,vbIsPropertyStyle)	\
    ( (This)->lpVtbl -> get_IsPropertyStyleEvent(This,vbIsPropertyStyle) ) 

#define CodeEvent_get_Prototype(This,Flags,pFullName)	\
    ( (This)->lpVtbl -> get_Prototype(This,Flags,pFullName) ) 

#define CodeEvent_get_Type(This,ppCodeTypeRef)	\
    ( (This)->lpVtbl -> get_Type(This,ppCodeTypeRef) ) 

#define CodeEvent_put_Type(This,pCodeTypeRef)	\
    ( (This)->lpVtbl -> put_Type(This,pCodeTypeRef) ) 

#define CodeEvent_get_OverrideKind(This,Kind)	\
    ( (This)->lpVtbl -> get_OverrideKind(This,Kind) ) 

#define CodeEvent_put_OverrideKind(This,Kind)	\
    ( (This)->lpVtbl -> put_OverrideKind(This,Kind) ) 

#define CodeEvent_get_IsShared(This,pIsShared)	\
    ( (This)->lpVtbl -> get_IsShared(This,pIsShared) ) 

#define CodeEvent_put_IsShared(This,Shared)	\
    ( (This)->lpVtbl -> put_IsShared(This,Shared) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeEvent_INTERFACE_DEFINED__ */


#ifndef __CodeElement2_INTERFACE_DEFINED__
#define __CodeElement2_INTERFACE_DEFINED__

/* interface CodeElement2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeElement2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F03DCCE8-233B-43D7-A66B-A66EFC1F85C3")
    CodeElement2 : public CodeElement
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ElementID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ID) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RenameSymbol( 
            __RPC__in BSTR NewName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeElement2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeElement2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeElement2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeElement2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeElement2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeElement2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeElement2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeElement2 * This,
            /* [idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeElement2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeElement2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ElementID )( 
            CodeElement2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ID);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RenameSymbol )( 
            CodeElement2 * This,
            __RPC__in BSTR NewName);
        
        END_INTERFACE
    } CodeElement2Vtbl;

    interface CodeElement2
    {
        CONST_VTBL struct CodeElement2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeElement2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeElement2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeElement2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeElement2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeElement2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeElement2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeElement2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeElement2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeElement2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define CodeElement2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define CodeElement2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define CodeElement2_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define CodeElement2_get_ProjectItem(This,retval)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,retval) ) 

#define CodeElement2_get_Kind(This,retval)	\
    ( (This)->lpVtbl -> get_Kind(This,retval) ) 

#define CodeElement2_get_IsCodeType(This,retval)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,retval) ) 

#define CodeElement2_get_InfoLocation(This,retval)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,retval) ) 

#define CodeElement2_get_Children(This,retval)	\
    ( (This)->lpVtbl -> get_Children(This,retval) ) 

#define CodeElement2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define CodeElement2_get_StartPoint(This,retval)	\
    ( (This)->lpVtbl -> get_StartPoint(This,retval) ) 

#define CodeElement2_get_EndPoint(This,retval)	\
    ( (This)->lpVtbl -> get_EndPoint(This,retval) ) 

#define CodeElement2_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define CodeElement2_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define CodeElement2_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define CodeElement2_GetStartPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,retval) ) 

#define CodeElement2_GetEndPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,retval) ) 


#define CodeElement2_get_ElementID(This,ID)	\
    ( (This)->lpVtbl -> get_ElementID(This,ID) ) 

#define CodeElement2_RenameSymbol(This,NewName)	\
    ( (This)->lpVtbl -> RenameSymbol(This,NewName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeElement2_INTERFACE_DEFINED__ */


#ifndef __CodeImport_INTERFACE_DEFINED__
#define __CodeImport_INTERFACE_DEFINED__

/* interface CodeImport */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeImport;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0C9A256E-0FF9-4D4A-88E6-304ACF78225F")
    CodeImport : public CodeElement
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Namespace( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Namespace( 
            __RPC__in BSTR Name) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Alias( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Alias) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Alias( 
            __RPC__in BSTR Alias) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeImportVtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeImport * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeImport * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeImport * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeImport * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeImport * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeImport * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeImport * This,
            /* [idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeImport * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeImport * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Namespace )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Namespace )( 
            CodeImport * This,
            __RPC__in BSTR Name);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Alias )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Alias);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Alias )( 
            CodeImport * This,
            __RPC__in BSTR Alias);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeImport * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject);
        
        END_INTERFACE
    } CodeImportVtbl;

    interface CodeImport
    {
        CONST_VTBL struct CodeImportVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeImport_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeImport_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeImport_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeImport_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeImport_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeImport_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeImport_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeImport_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeImport_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define CodeImport_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define CodeImport_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define CodeImport_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define CodeImport_get_ProjectItem(This,retval)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,retval) ) 

#define CodeImport_get_Kind(This,retval)	\
    ( (This)->lpVtbl -> get_Kind(This,retval) ) 

#define CodeImport_get_IsCodeType(This,retval)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,retval) ) 

#define CodeImport_get_InfoLocation(This,retval)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,retval) ) 

#define CodeImport_get_Children(This,retval)	\
    ( (This)->lpVtbl -> get_Children(This,retval) ) 

#define CodeImport_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define CodeImport_get_StartPoint(This,retval)	\
    ( (This)->lpVtbl -> get_StartPoint(This,retval) ) 

#define CodeImport_get_EndPoint(This,retval)	\
    ( (This)->lpVtbl -> get_EndPoint(This,retval) ) 

#define CodeImport_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define CodeImport_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define CodeImport_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define CodeImport_GetStartPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,retval) ) 

#define CodeImport_GetEndPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,retval) ) 


#define CodeImport_get_Namespace(This,Name)	\
    ( (This)->lpVtbl -> get_Namespace(This,Name) ) 

#define CodeImport_put_Namespace(This,Name)	\
    ( (This)->lpVtbl -> put_Namespace(This,Name) ) 

#define CodeImport_get_Alias(This,Alias)	\
    ( (This)->lpVtbl -> get_Alias(This,Alias) ) 

#define CodeImport_put_Alias(This,Alias)	\
    ( (This)->lpVtbl -> put_Alias(This,Alias) ) 

#define CodeImport_get_Parent(This,ParentObject)	\
    ( (This)->lpVtbl -> get_Parent(This,ParentObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeImport_INTERFACE_DEFINED__ */


#ifndef __FileCodeModel2_INTERFACE_DEFINED__
#define __FileCodeModel2_INTERFACE_DEFINED__

/* interface FileCodeModel2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_FileCodeModel2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A65964DF-3A07-45EB-882A-DD04602016B9")
    FileCodeModel2 : public FileCodeModel
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Synchronize( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ParseStatus( 
            /* [retval][out] */ __RPC__out vsCMParseStatus *Status) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddImport( 
            __RPC__in BSTR Name,
            /* [optional][in] */ VARIANT Position,
            /* [defaultvalue][in] */ __RPC__in BSTR Alias,
            /* [retval][out] */ __RPC__deref_out_opt CodeImport **ppImport) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE BeginBatch( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE EndBatch( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsBatchOpen( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Open) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ElementFromID( 
            __RPC__in BSTR ID,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElement **ppElement) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FileCodeModel2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FileCodeModel2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            FileCodeModel2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            FileCodeModel2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FileCodeModel2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FileCodeModel2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FileCodeModel2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FileCodeModel2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            FileCodeModel2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FileCodeModel2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            FileCodeModel2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CodeElements )( 
            FileCodeModel2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *CodeElementFromPoint )( 
            FileCodeModel2 * This,
            /* [idldescattr] */ __RPC__in_opt TextPoint *Point,
            /* [idldescattr] */ enum vsCMElement Scope,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddNamespace )( 
            FileCodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddClass )( 
            FileCodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ VARIANT ImplementedInterfaces,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddInterface )( 
            FileCodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeInterface **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddFunction )( 
            FileCodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ enum vsCMFunction Kind,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddVariable )( 
            FileCodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeVariable **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            FileCodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ __RPC__in BSTR Value,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddStruct )( 
            FileCodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ VARIANT ImplementedInterfaces,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeStruct **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddEnum )( 
            FileCodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEnum **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddDelegate )( 
            FileCodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeDelegate **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            FileCodeModel2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Synchronize )( 
            FileCodeModel2 * This);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ParseStatus )( 
            FileCodeModel2 * This,
            /* [retval][out] */ __RPC__out vsCMParseStatus *Status);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddImport )( 
            FileCodeModel2 * This,
            __RPC__in BSTR Name,
            /* [optional][in] */ VARIANT Position,
            /* [defaultvalue][in] */ __RPC__in BSTR Alias,
            /* [retval][out] */ __RPC__deref_out_opt CodeImport **ppImport);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *BeginBatch )( 
            FileCodeModel2 * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EndBatch )( 
            FileCodeModel2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsBatchOpen )( 
            FileCodeModel2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Open);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ElementFromID )( 
            FileCodeModel2 * This,
            __RPC__in BSTR ID,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElement **ppElement);
        
        END_INTERFACE
    } FileCodeModel2Vtbl;

    interface FileCodeModel2
    {
        CONST_VTBL struct FileCodeModel2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FileCodeModel2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define FileCodeModel2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define FileCodeModel2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define FileCodeModel2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define FileCodeModel2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define FileCodeModel2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define FileCodeModel2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define FileCodeModel2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define FileCodeModel2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define FileCodeModel2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define FileCodeModel2_get_CodeElements(This,retval)	\
    ( (This)->lpVtbl -> get_CodeElements(This,retval) ) 

#define FileCodeModel2_CodeElementFromPoint(This,Point,Scope,retval)	\
    ( (This)->lpVtbl -> CodeElementFromPoint(This,Point,Scope,retval) ) 

#define FileCodeModel2_AddNamespace(This,Name,Position,retval)	\
    ( (This)->lpVtbl -> AddNamespace(This,Name,Position,retval) ) 

#define FileCodeModel2_AddClass(This,Name,Position,Bases,ImplementedInterfaces,Access,retval)	\
    ( (This)->lpVtbl -> AddClass(This,Name,Position,Bases,ImplementedInterfaces,Access,retval) ) 

#define FileCodeModel2_AddInterface(This,Name,Position,Bases,Access,retval)	\
    ( (This)->lpVtbl -> AddInterface(This,Name,Position,Bases,Access,retval) ) 

#define FileCodeModel2_AddFunction(This,Name,Kind,Type,Position,Access,retval)	\
    ( (This)->lpVtbl -> AddFunction(This,Name,Kind,Type,Position,Access,retval) ) 

#define FileCodeModel2_AddVariable(This,Name,Type,Position,Access,retval)	\
    ( (This)->lpVtbl -> AddVariable(This,Name,Type,Position,Access,retval) ) 

#define FileCodeModel2_AddAttribute(This,Name,Value,Position,retval)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,retval) ) 

#define FileCodeModel2_AddStruct(This,Name,Position,Bases,ImplementedInterfaces,Access,retval)	\
    ( (This)->lpVtbl -> AddStruct(This,Name,Position,Bases,ImplementedInterfaces,Access,retval) ) 

#define FileCodeModel2_AddEnum(This,Name,Position,Bases,Access,retval)	\
    ( (This)->lpVtbl -> AddEnum(This,Name,Position,Bases,Access,retval) ) 

#define FileCodeModel2_AddDelegate(This,Name,Type,Position,Access,retval)	\
    ( (This)->lpVtbl -> AddDelegate(This,Name,Type,Position,Access,retval) ) 

#define FileCodeModel2_Remove(This,Element,retval)	\
    ( (This)->lpVtbl -> Remove(This,Element,retval) ) 


#define FileCodeModel2_Synchronize(This)	\
    ( (This)->lpVtbl -> Synchronize(This) ) 

#define FileCodeModel2_get_ParseStatus(This,Status)	\
    ( (This)->lpVtbl -> get_ParseStatus(This,Status) ) 

#define FileCodeModel2_AddImport(This,Name,Position,Alias,ppImport)	\
    ( (This)->lpVtbl -> AddImport(This,Name,Position,Alias,ppImport) ) 

#define FileCodeModel2_BeginBatch(This)	\
    ( (This)->lpVtbl -> BeginBatch(This) ) 

#define FileCodeModel2_EndBatch(This)	\
    ( (This)->lpVtbl -> EndBatch(This) ) 

#define FileCodeModel2_get_IsBatchOpen(This,Open)	\
    ( (This)->lpVtbl -> get_IsBatchOpen(This,Open) ) 

#define FileCodeModel2_ElementFromID(This,ID,ppElement)	\
    ( (This)->lpVtbl -> ElementFromID(This,ID,ppElement) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __FileCodeModel2_INTERFACE_DEFINED__ */


#ifndef __CodeModel2_INTERFACE_DEFINED__
#define __CodeModel2_INTERFACE_DEFINED__

/* interface CodeModel2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeModel2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("99B9CD0E-6C89-4BC4-BBA2-FFD3529D3ACB")
    CodeModel2 : public CodeModel
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Synchronize( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DotNetNameFromLanguageSpecific( 
            __RPC__in BSTR LanguageName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *DotNETName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LanguageSpecificNameFromDotNet( 
            __RPC__in BSTR DotNETName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *LanguageName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ElementFromID( 
            __RPC__in BSTR ID,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElement **pElement) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeModel2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeModel2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeModel2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeModel2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeModel2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeModel2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeModel2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeModel2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeModel2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeModel2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Project **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeModel2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CodeElements )( 
            CodeModel2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *CodeTypeFromFullName )( 
            CodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt CodeType **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddNamespace )( 
            CodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Location,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddClass )( 
            CodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Location,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ VARIANT ImplementedInterfaces,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddInterface )( 
            CodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Location,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeInterface **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddFunction )( 
            CodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Location,
            /* [idldescattr] */ enum vsCMFunction Kind,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddVariable )( 
            CodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Location,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeVariable **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddStruct )( 
            CodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Location,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ VARIANT ImplementedInterfaces,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeStruct **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddEnum )( 
            CodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Location,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEnum **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddDelegate )( 
            CodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Location,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeDelegate **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Location,
            /* [idldescattr] */ __RPC__in BSTR Value,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            CodeModel2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *IsValidID )( 
            CodeModel2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsCaseSensitive )( 
            CodeModel2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *CreateCodeTypeRef )( 
            CodeModel2 * This,
            /* [idldescattr] */ VARIANT Type,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **retval);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Synchronize )( 
            CodeModel2 * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DotNetNameFromLanguageSpecific )( 
            CodeModel2 * This,
            __RPC__in BSTR LanguageName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *DotNETName);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LanguageSpecificNameFromDotNet )( 
            CodeModel2 * This,
            __RPC__in BSTR DotNETName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *LanguageName);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ElementFromID )( 
            CodeModel2 * This,
            __RPC__in BSTR ID,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElement **pElement);
        
        END_INTERFACE
    } CodeModel2Vtbl;

    interface CodeModel2
    {
        CONST_VTBL struct CodeModel2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeModel2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeModel2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeModel2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeModel2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeModel2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeModel2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeModel2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeModel2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeModel2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define CodeModel2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define CodeModel2_get_CodeElements(This,retval)	\
    ( (This)->lpVtbl -> get_CodeElements(This,retval) ) 

#define CodeModel2_CodeTypeFromFullName(This,Name,retval)	\
    ( (This)->lpVtbl -> CodeTypeFromFullName(This,Name,retval) ) 

#define CodeModel2_AddNamespace(This,Name,Location,Position,retval)	\
    ( (This)->lpVtbl -> AddNamespace(This,Name,Location,Position,retval) ) 

#define CodeModel2_AddClass(This,Name,Location,Position,Bases,ImplementedInterfaces,Access,retval)	\
    ( (This)->lpVtbl -> AddClass(This,Name,Location,Position,Bases,ImplementedInterfaces,Access,retval) ) 

#define CodeModel2_AddInterface(This,Name,Location,Position,Bases,Access,retval)	\
    ( (This)->lpVtbl -> AddInterface(This,Name,Location,Position,Bases,Access,retval) ) 

#define CodeModel2_AddFunction(This,Name,Location,Kind,Type,Position,Access,retval)	\
    ( (This)->lpVtbl -> AddFunction(This,Name,Location,Kind,Type,Position,Access,retval) ) 

#define CodeModel2_AddVariable(This,Name,Location,Type,Position,Access,retval)	\
    ( (This)->lpVtbl -> AddVariable(This,Name,Location,Type,Position,Access,retval) ) 

#define CodeModel2_AddStruct(This,Name,Location,Position,Bases,ImplementedInterfaces,Access,retval)	\
    ( (This)->lpVtbl -> AddStruct(This,Name,Location,Position,Bases,ImplementedInterfaces,Access,retval) ) 

#define CodeModel2_AddEnum(This,Name,Location,Position,Bases,Access,retval)	\
    ( (This)->lpVtbl -> AddEnum(This,Name,Location,Position,Bases,Access,retval) ) 

#define CodeModel2_AddDelegate(This,Name,Location,Type,Position,Access,retval)	\
    ( (This)->lpVtbl -> AddDelegate(This,Name,Location,Type,Position,Access,retval) ) 

#define CodeModel2_AddAttribute(This,Name,Location,Value,Position,retval)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Location,Value,Position,retval) ) 

#define CodeModel2_Remove(This,Element,retval)	\
    ( (This)->lpVtbl -> Remove(This,Element,retval) ) 

#define CodeModel2_IsValidID(This,Name,retval)	\
    ( (This)->lpVtbl -> IsValidID(This,Name,retval) ) 

#define CodeModel2_get_IsCaseSensitive(This,retval)	\
    ( (This)->lpVtbl -> get_IsCaseSensitive(This,retval) ) 

#define CodeModel2_CreateCodeTypeRef(This,Type,retval)	\
    ( (This)->lpVtbl -> CreateCodeTypeRef(This,Type,retval) ) 


#define CodeModel2_Synchronize(This)	\
    ( (This)->lpVtbl -> Synchronize(This) ) 

#define CodeModel2_DotNetNameFromLanguageSpecific(This,LanguageName,DotNETName)	\
    ( (This)->lpVtbl -> DotNetNameFromLanguageSpecific(This,LanguageName,DotNETName) ) 

#define CodeModel2_LanguageSpecificNameFromDotNet(This,DotNETName,LanguageName)	\
    ( (This)->lpVtbl -> LanguageSpecificNameFromDotNet(This,DotNETName,LanguageName) ) 

#define CodeModel2_ElementFromID(This,ID,pElement)	\
    ( (This)->lpVtbl -> ElementFromID(This,ID,pElement) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeModel2_INTERFACE_DEFINED__ */


#ifndef __CodeClass2_INTERFACE_DEFINED__
#define __CodeClass2_INTERFACE_DEFINED__

/* interface CodeClass2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeClass2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("295ADCD4-B052-49EE-934E-C6B36862A7C6")
    CodeClass2 : public CodeClass
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ClassKind( 
            /* [retval][out] */ __RPC__out vsCMClassKind *Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_ClassKind( 
            vsCMClassKind Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_PartialClasses( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **Elements) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DataTypeKind( 
            /* [retval][out] */ __RPC__out vsCMDataTypeKind *Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DataTypeKind( 
            vsCMDataTypeKind Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parts( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **Elements) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InheritanceKind( 
            /* [retval][out] */ __RPC__out vsCMInheritanceKind *Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InheritanceKind( 
            vsCMInheritanceKind Kind) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsGeneric( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddEvent( 
            __RPC__in BSTR Name,
            __RPC__in BSTR FullDelegateName,
            /* [defaultvalue][in] */ VARIANT_BOOL CreatePropertyStyleEvent,
            /* [optional] */ VARIANT Location,
            /* [defaultvalue] */ enum /* external definition not present */ vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEvent **ppEvent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsShared( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsShared) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsShared( 
            VARIANT_BOOL Shared) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeClass2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeClass2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeClass2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeClass2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeClass2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeClass2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeClass2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeClass2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Namespace )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Bases )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeClass2 * This,
            /* [idldescattr] */ enum vsCMAccess noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out enum vsCMAccess *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddBase )( 
            CodeClass2 * This,
            /* [idldescattr] */ VARIANT Base,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ __RPC__in BSTR Value,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveBase )( 
            CodeClass2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveMember )( 
            CodeClass2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsDerivedFrom )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR FullName,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedTypes )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ImplementedInterfaces )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsAbstract )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_IsAbstract )( 
            CodeClass2 * This,
            /* [idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddImplementedInterface )( 
            CodeClass2 * This,
            /* [idldescattr] */ VARIANT Base,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeInterface **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddFunction )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ enum vsCMFunction Kind,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [optional][idldescattr] */ VARIANT Location,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddVariable )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [optional][idldescattr] */ VARIANT Location,
            /* [retval][out] */ __RPC__deref_out_opt CodeVariable **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddProperty )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR GetterName,
            /* [idldescattr] */ __RPC__in BSTR PutterName,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [optional][idldescattr] */ VARIANT Location,
            /* [retval][out] */ __RPC__deref_out_opt CodeProperty **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddClass )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ VARIANT ImplementedInterfaces,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddStruct )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ VARIANT ImplementedInterfaces,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeStruct **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddEnum )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEnum **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddDelegate )( 
            CodeClass2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeDelegate **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveInterface )( 
            CodeClass2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ClassKind )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out vsCMClassKind *Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ClassKind )( 
            CodeClass2 * This,
            vsCMClassKind Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PartialClasses )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **Elements);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataTypeKind )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out vsCMDataTypeKind *Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DataTypeKind )( 
            CodeClass2 * This,
            vsCMDataTypeKind Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parts )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **Elements);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InheritanceKind )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out vsCMInheritanceKind *Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InheritanceKind )( 
            CodeClass2 * This,
            vsCMInheritanceKind Kind);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsGeneric )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEvent )( 
            CodeClass2 * This,
            __RPC__in BSTR Name,
            __RPC__in BSTR FullDelegateName,
            /* [defaultvalue][in] */ VARIANT_BOOL CreatePropertyStyleEvent,
            /* [optional] */ VARIANT Location,
            /* [defaultvalue] */ enum /* external definition not present */ vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEvent **ppEvent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsShared )( 
            CodeClass2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsShared);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsShared )( 
            CodeClass2 * This,
            VARIANT_BOOL Shared);
        
        END_INTERFACE
    } CodeClass2Vtbl;

    interface CodeClass2
    {
        CONST_VTBL struct CodeClass2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeClass2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeClass2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeClass2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeClass2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeClass2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeClass2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeClass2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeClass2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeClass2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define CodeClass2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define CodeClass2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define CodeClass2_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define CodeClass2_get_ProjectItem(This,retval)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,retval) ) 

#define CodeClass2_get_Kind(This,retval)	\
    ( (This)->lpVtbl -> get_Kind(This,retval) ) 

#define CodeClass2_get_IsCodeType(This,retval)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,retval) ) 

#define CodeClass2_get_InfoLocation(This,retval)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,retval) ) 

#define CodeClass2_get_Children(This,retval)	\
    ( (This)->lpVtbl -> get_Children(This,retval) ) 

#define CodeClass2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define CodeClass2_get_StartPoint(This,retval)	\
    ( (This)->lpVtbl -> get_StartPoint(This,retval) ) 

#define CodeClass2_get_EndPoint(This,retval)	\
    ( (This)->lpVtbl -> get_EndPoint(This,retval) ) 

#define CodeClass2_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define CodeClass2_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define CodeClass2_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define CodeClass2_GetStartPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,retval) ) 

#define CodeClass2_GetEndPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,retval) ) 

#define CodeClass2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define CodeClass2_get_Namespace(This,retval)	\
    ( (This)->lpVtbl -> get_Namespace(This,retval) ) 

#define CodeClass2_get_Bases(This,retval)	\
    ( (This)->lpVtbl -> get_Bases(This,retval) ) 

#define CodeClass2_get_Members(This,retval)	\
    ( (This)->lpVtbl -> get_Members(This,retval) ) 

#define CodeClass2_put_Access(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Access(This,noname,retval) ) 

#define CodeClass2_get_Access(This,retval)	\
    ( (This)->lpVtbl -> get_Access(This,retval) ) 

#define CodeClass2_get_Attributes(This,retval)	\
    ( (This)->lpVtbl -> get_Attributes(This,retval) ) 

#define CodeClass2_get_DocComment(This,retval)	\
    ( (This)->lpVtbl -> get_DocComment(This,retval) ) 

#define CodeClass2_put_DocComment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_DocComment(This,noname,retval) ) 

#define CodeClass2_get_Comment(This,retval)	\
    ( (This)->lpVtbl -> get_Comment(This,retval) ) 

#define CodeClass2_put_Comment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Comment(This,noname,retval) ) 

#define CodeClass2_AddBase(This,Base,Position,retval)	\
    ( (This)->lpVtbl -> AddBase(This,Base,Position,retval) ) 

#define CodeClass2_AddAttribute(This,Name,Value,Position,retval)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,retval) ) 

#define CodeClass2_RemoveBase(This,Element,retval)	\
    ( (This)->lpVtbl -> RemoveBase(This,Element,retval) ) 

#define CodeClass2_RemoveMember(This,Element,retval)	\
    ( (This)->lpVtbl -> RemoveMember(This,Element,retval) ) 

#define CodeClass2_get_IsDerivedFrom(This,FullName,retval)	\
    ( (This)->lpVtbl -> get_IsDerivedFrom(This,FullName,retval) ) 

#define CodeClass2_get_DerivedTypes(This,retval)	\
    ( (This)->lpVtbl -> get_DerivedTypes(This,retval) ) 

#define CodeClass2_get_ImplementedInterfaces(This,retval)	\
    ( (This)->lpVtbl -> get_ImplementedInterfaces(This,retval) ) 

#define CodeClass2_get_IsAbstract(This,retval)	\
    ( (This)->lpVtbl -> get_IsAbstract(This,retval) ) 

#define CodeClass2_put_IsAbstract(This,noname,retval)	\
    ( (This)->lpVtbl -> put_IsAbstract(This,noname,retval) ) 

#define CodeClass2_AddImplementedInterface(This,Base,Position,retval)	\
    ( (This)->lpVtbl -> AddImplementedInterface(This,Base,Position,retval) ) 

#define CodeClass2_AddFunction(This,Name,Kind,Type,Position,Access,Location,retval)	\
    ( (This)->lpVtbl -> AddFunction(This,Name,Kind,Type,Position,Access,Location,retval) ) 

#define CodeClass2_AddVariable(This,Name,Type,Position,Access,Location,retval)	\
    ( (This)->lpVtbl -> AddVariable(This,Name,Type,Position,Access,Location,retval) ) 

#define CodeClass2_AddProperty(This,GetterName,PutterName,Type,Position,Access,Location,retval)	\
    ( (This)->lpVtbl -> AddProperty(This,GetterName,PutterName,Type,Position,Access,Location,retval) ) 

#define CodeClass2_AddClass(This,Name,Position,Bases,ImplementedInterfaces,Access,retval)	\
    ( (This)->lpVtbl -> AddClass(This,Name,Position,Bases,ImplementedInterfaces,Access,retval) ) 

#define CodeClass2_AddStruct(This,Name,Position,Bases,ImplementedInterfaces,Access,retval)	\
    ( (This)->lpVtbl -> AddStruct(This,Name,Position,Bases,ImplementedInterfaces,Access,retval) ) 

#define CodeClass2_AddEnum(This,Name,Position,Bases,Access,retval)	\
    ( (This)->lpVtbl -> AddEnum(This,Name,Position,Bases,Access,retval) ) 

#define CodeClass2_AddDelegate(This,Name,Type,Position,Access,retval)	\
    ( (This)->lpVtbl -> AddDelegate(This,Name,Type,Position,Access,retval) ) 

#define CodeClass2_RemoveInterface(This,Element,retval)	\
    ( (This)->lpVtbl -> RemoveInterface(This,Element,retval) ) 


#define CodeClass2_get_ClassKind(This,Kind)	\
    ( (This)->lpVtbl -> get_ClassKind(This,Kind) ) 

#define CodeClass2_put_ClassKind(This,Kind)	\
    ( (This)->lpVtbl -> put_ClassKind(This,Kind) ) 

#define CodeClass2_get_PartialClasses(This,Elements)	\
    ( (This)->lpVtbl -> get_PartialClasses(This,Elements) ) 

#define CodeClass2_get_DataTypeKind(This,Kind)	\
    ( (This)->lpVtbl -> get_DataTypeKind(This,Kind) ) 

#define CodeClass2_put_DataTypeKind(This,Kind)	\
    ( (This)->lpVtbl -> put_DataTypeKind(This,Kind) ) 

#define CodeClass2_get_Parts(This,Elements)	\
    ( (This)->lpVtbl -> get_Parts(This,Elements) ) 

#define CodeClass2_get_InheritanceKind(This,Kind)	\
    ( (This)->lpVtbl -> get_InheritanceKind(This,Kind) ) 

#define CodeClass2_put_InheritanceKind(This,Kind)	\
    ( (This)->lpVtbl -> put_InheritanceKind(This,Kind) ) 

#define CodeClass2_get_IsGeneric(This,pIsGeneric)	\
    ( (This)->lpVtbl -> get_IsGeneric(This,pIsGeneric) ) 

#define CodeClass2_AddEvent(This,Name,FullDelegateName,CreatePropertyStyleEvent,Location,Access,ppEvent)	\
    ( (This)->lpVtbl -> AddEvent(This,Name,FullDelegateName,CreatePropertyStyleEvent,Location,Access,ppEvent) ) 

#define CodeClass2_get_IsShared(This,pIsShared)	\
    ( (This)->lpVtbl -> get_IsShared(This,pIsShared) ) 

#define CodeClass2_put_IsShared(This,Shared)	\
    ( (This)->lpVtbl -> put_IsShared(This,Shared) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeClass2_INTERFACE_DEFINED__ */


#ifndef __CodeParameter2_INTERFACE_DEFINED__
#define __CodeParameter2_INTERFACE_DEFINED__

/* interface CodeParameter2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeParameter2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("35CD9E36-7C96-4429-968F-C0C350CB1A47")
    CodeParameter2 : public CodeParameter
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ParameterKind( 
            /* [retval][out] */ __RPC__out vsCMParameterKind *Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ParameterKind( 
            vsCMParameterKind Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultValue( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Value) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultValue( 
            __RPC__in BSTR Value) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeParameter2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeParameter2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeParameter2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeParameter2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeParameter2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeParameter2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeParameter2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeParameter2 * This,
            /* [idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeParameter2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeParameter2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            CodeParameter2 * This,
            /* [idldescattr] */ __RPC__in_opt CodeTypeRef *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeParameter2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeParameter2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ __RPC__in BSTR Value,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ParameterKind )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__out vsCMParameterKind *Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ParameterKind )( 
            CodeParameter2 * This,
            vsCMParameterKind Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultValue )( 
            CodeParameter2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Value);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultValue )( 
            CodeParameter2 * This,
            __RPC__in BSTR Value);
        
        END_INTERFACE
    } CodeParameter2Vtbl;

    interface CodeParameter2
    {
        CONST_VTBL struct CodeParameter2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeParameter2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeParameter2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeParameter2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeParameter2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeParameter2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeParameter2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeParameter2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeParameter2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeParameter2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define CodeParameter2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define CodeParameter2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define CodeParameter2_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define CodeParameter2_get_ProjectItem(This,retval)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,retval) ) 

#define CodeParameter2_get_Kind(This,retval)	\
    ( (This)->lpVtbl -> get_Kind(This,retval) ) 

#define CodeParameter2_get_IsCodeType(This,retval)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,retval) ) 

#define CodeParameter2_get_InfoLocation(This,retval)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,retval) ) 

#define CodeParameter2_get_Children(This,retval)	\
    ( (This)->lpVtbl -> get_Children(This,retval) ) 

#define CodeParameter2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define CodeParameter2_get_StartPoint(This,retval)	\
    ( (This)->lpVtbl -> get_StartPoint(This,retval) ) 

#define CodeParameter2_get_EndPoint(This,retval)	\
    ( (This)->lpVtbl -> get_EndPoint(This,retval) ) 

#define CodeParameter2_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define CodeParameter2_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define CodeParameter2_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define CodeParameter2_GetStartPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,retval) ) 

#define CodeParameter2_GetEndPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,retval) ) 

#define CodeParameter2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define CodeParameter2_put_Type(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Type(This,noname,retval) ) 

#define CodeParameter2_get_Type(This,retval)	\
    ( (This)->lpVtbl -> get_Type(This,retval) ) 

#define CodeParameter2_get_Attributes(This,retval)	\
    ( (This)->lpVtbl -> get_Attributes(This,retval) ) 

#define CodeParameter2_get_DocComment(This,retval)	\
    ( (This)->lpVtbl -> get_DocComment(This,retval) ) 

#define CodeParameter2_put_DocComment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_DocComment(This,noname,retval) ) 

#define CodeParameter2_AddAttribute(This,Name,Value,Position,retval)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,retval) ) 


#define CodeParameter2_get_ParameterKind(This,Kind)	\
    ( (This)->lpVtbl -> get_ParameterKind(This,Kind) ) 

#define CodeParameter2_put_ParameterKind(This,Kind)	\
    ( (This)->lpVtbl -> put_ParameterKind(This,Kind) ) 

#define CodeParameter2_get_DefaultValue(This,Value)	\
    ( (This)->lpVtbl -> get_DefaultValue(This,Value) ) 

#define CodeParameter2_put_DefaultValue(This,Value)	\
    ( (This)->lpVtbl -> put_DefaultValue(This,Value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeParameter2_INTERFACE_DEFINED__ */


#ifndef __CodeFunction2_INTERFACE_DEFINED__
#define __CodeFunction2_INTERFACE_DEFINED__

/* interface CodeFunction2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeFunction2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7E20CD35-8689-466D-8EA0-A863B7EA5DB9")
    CodeFunction2 : public CodeFunction
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OverrideKind( 
            /* [retval][out] */ __RPC__out vsCMOverrideKind *Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OverrideKind( 
            vsCMOverrideKind Kind) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsGeneric( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeFunction2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeFunction2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeFunction2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeFunction2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeFunction2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeFunction2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeFunction2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeFunction2 * This,
            /* [idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeFunction2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeFunction2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FunctionKind )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out enum vsCMFunction *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Prototype )( 
            CodeFunction2 * This,
            /* [in][idldescattr] */ signed long Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            CodeFunction2 * This,
            /* [idldescattr] */ __RPC__in_opt CodeTypeRef *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parameters )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeFunction2 * This,
            /* [idldescattr] */ enum vsCMAccess noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out enum vsCMAccess *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsOverloaded )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsShared )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_IsShared )( 
            CodeFunction2 * This,
            /* [idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_MustImplement )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_MustImplement )( 
            CodeFunction2 * This,
            /* [idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Overloads )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeFunction2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeFunction2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddParameter )( 
            CodeFunction2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Type,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeParameter **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeFunction2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ __RPC__in BSTR Value,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveParameter )( 
            CodeFunction2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CanOverride )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_CanOverride )( 
            CodeFunction2 * This,
            /* [idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OverrideKind )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out vsCMOverrideKind *Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OverrideKind )( 
            CodeFunction2 * This,
            vsCMOverrideKind Kind);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsGeneric )( 
            CodeFunction2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric);
        
        END_INTERFACE
    } CodeFunction2Vtbl;

    interface CodeFunction2
    {
        CONST_VTBL struct CodeFunction2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeFunction2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeFunction2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeFunction2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeFunction2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeFunction2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeFunction2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeFunction2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeFunction2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeFunction2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define CodeFunction2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define CodeFunction2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define CodeFunction2_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define CodeFunction2_get_ProjectItem(This,retval)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,retval) ) 

#define CodeFunction2_get_Kind(This,retval)	\
    ( (This)->lpVtbl -> get_Kind(This,retval) ) 

#define CodeFunction2_get_IsCodeType(This,retval)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,retval) ) 

#define CodeFunction2_get_InfoLocation(This,retval)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,retval) ) 

#define CodeFunction2_get_Children(This,retval)	\
    ( (This)->lpVtbl -> get_Children(This,retval) ) 

#define CodeFunction2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define CodeFunction2_get_StartPoint(This,retval)	\
    ( (This)->lpVtbl -> get_StartPoint(This,retval) ) 

#define CodeFunction2_get_EndPoint(This,retval)	\
    ( (This)->lpVtbl -> get_EndPoint(This,retval) ) 

#define CodeFunction2_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define CodeFunction2_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define CodeFunction2_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define CodeFunction2_GetStartPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,retval) ) 

#define CodeFunction2_GetEndPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,retval) ) 

#define CodeFunction2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define CodeFunction2_get_FunctionKind(This,retval)	\
    ( (This)->lpVtbl -> get_FunctionKind(This,retval) ) 

#define CodeFunction2_get_Prototype(This,Flags,retval)	\
    ( (This)->lpVtbl -> get_Prototype(This,Flags,retval) ) 

#define CodeFunction2_get_Type(This,retval)	\
    ( (This)->lpVtbl -> get_Type(This,retval) ) 

#define CodeFunction2_put_Type(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Type(This,noname,retval) ) 

#define CodeFunction2_get_Parameters(This,retval)	\
    ( (This)->lpVtbl -> get_Parameters(This,retval) ) 

#define CodeFunction2_put_Access(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Access(This,noname,retval) ) 

#define CodeFunction2_get_Access(This,retval)	\
    ( (This)->lpVtbl -> get_Access(This,retval) ) 

#define CodeFunction2_get_IsOverloaded(This,retval)	\
    ( (This)->lpVtbl -> get_IsOverloaded(This,retval) ) 

#define CodeFunction2_get_IsShared(This,retval)	\
    ( (This)->lpVtbl -> get_IsShared(This,retval) ) 

#define CodeFunction2_put_IsShared(This,noname,retval)	\
    ( (This)->lpVtbl -> put_IsShared(This,noname,retval) ) 

#define CodeFunction2_get_MustImplement(This,retval)	\
    ( (This)->lpVtbl -> get_MustImplement(This,retval) ) 

#define CodeFunction2_put_MustImplement(This,noname,retval)	\
    ( (This)->lpVtbl -> put_MustImplement(This,noname,retval) ) 

#define CodeFunction2_get_Overloads(This,retval)	\
    ( (This)->lpVtbl -> get_Overloads(This,retval) ) 

#define CodeFunction2_get_Attributes(This,retval)	\
    ( (This)->lpVtbl -> get_Attributes(This,retval) ) 

#define CodeFunction2_get_DocComment(This,retval)	\
    ( (This)->lpVtbl -> get_DocComment(This,retval) ) 

#define CodeFunction2_put_DocComment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_DocComment(This,noname,retval) ) 

#define CodeFunction2_get_Comment(This,retval)	\
    ( (This)->lpVtbl -> get_Comment(This,retval) ) 

#define CodeFunction2_put_Comment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Comment(This,noname,retval) ) 

#define CodeFunction2_AddParameter(This,Name,Type,Position,retval)	\
    ( (This)->lpVtbl -> AddParameter(This,Name,Type,Position,retval) ) 

#define CodeFunction2_AddAttribute(This,Name,Value,Position,retval)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,retval) ) 

#define CodeFunction2_RemoveParameter(This,Element,retval)	\
    ( (This)->lpVtbl -> RemoveParameter(This,Element,retval) ) 

#define CodeFunction2_get_CanOverride(This,retval)	\
    ( (This)->lpVtbl -> get_CanOverride(This,retval) ) 

#define CodeFunction2_put_CanOverride(This,noname,retval)	\
    ( (This)->lpVtbl -> put_CanOverride(This,noname,retval) ) 


#define CodeFunction2_get_OverrideKind(This,Kind)	\
    ( (This)->lpVtbl -> get_OverrideKind(This,Kind) ) 

#define CodeFunction2_put_OverrideKind(This,Kind)	\
    ( (This)->lpVtbl -> put_OverrideKind(This,Kind) ) 

#define CodeFunction2_get_IsGeneric(This,pIsGeneric)	\
    ( (This)->lpVtbl -> get_IsGeneric(This,pIsGeneric) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeFunction2_INTERFACE_DEFINED__ */


#ifndef __CodeAttribute2_INTERFACE_DEFINED__
#define __CodeAttribute2_INTERFACE_DEFINED__

/* interface CodeAttribute2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeAttribute2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("35187E2A-E5F6-4F89-A4CE-DA254640855B")
    CodeAttribute2 : public CodeAttribute
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Target) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Target( 
            __RPC__in BSTR Target) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddArgument( 
            __RPC__in BSTR Value,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttributeArgument **Argument) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arguments( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppCodeAttributeArguments) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeAttribute2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeAttribute2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeAttribute2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeAttribute2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeAttribute2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeAttribute2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeAttribute2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeAttribute2 * This,
            /* [idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeAttribute2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeAttribute2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            CodeAttribute2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Target);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            CodeAttribute2 * This,
            __RPC__in BSTR Target);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddArgument )( 
            CodeAttribute2 * This,
            __RPC__in BSTR Value,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttributeArgument **Argument);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arguments )( 
            CodeAttribute2 * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppCodeAttributeArguments);
        
        END_INTERFACE
    } CodeAttribute2Vtbl;

    interface CodeAttribute2
    {
        CONST_VTBL struct CodeAttribute2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeAttribute2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeAttribute2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeAttribute2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeAttribute2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeAttribute2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeAttribute2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeAttribute2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeAttribute2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeAttribute2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define CodeAttribute2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define CodeAttribute2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define CodeAttribute2_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define CodeAttribute2_get_ProjectItem(This,retval)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,retval) ) 

#define CodeAttribute2_get_Kind(This,retval)	\
    ( (This)->lpVtbl -> get_Kind(This,retval) ) 

#define CodeAttribute2_get_IsCodeType(This,retval)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,retval) ) 

#define CodeAttribute2_get_InfoLocation(This,retval)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,retval) ) 

#define CodeAttribute2_get_Children(This,retval)	\
    ( (This)->lpVtbl -> get_Children(This,retval) ) 

#define CodeAttribute2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define CodeAttribute2_get_StartPoint(This,retval)	\
    ( (This)->lpVtbl -> get_StartPoint(This,retval) ) 

#define CodeAttribute2_get_EndPoint(This,retval)	\
    ( (This)->lpVtbl -> get_EndPoint(This,retval) ) 

#define CodeAttribute2_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define CodeAttribute2_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define CodeAttribute2_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define CodeAttribute2_GetStartPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,retval) ) 

#define CodeAttribute2_GetEndPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,retval) ) 

#define CodeAttribute2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define CodeAttribute2_get_Value(This,retval)	\
    ( (This)->lpVtbl -> get_Value(This,retval) ) 

#define CodeAttribute2_put_Value(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Value(This,noname,retval) ) 

#define CodeAttribute2_Delete(This,retval)	\
    ( (This)->lpVtbl -> Delete(This,retval) ) 


#define CodeAttribute2_get_Target(This,Target)	\
    ( (This)->lpVtbl -> get_Target(This,Target) ) 

#define CodeAttribute2_put_Target(This,Target)	\
    ( (This)->lpVtbl -> put_Target(This,Target) ) 

#define CodeAttribute2_AddArgument(This,Value,Name,Position,Argument)	\
    ( (This)->lpVtbl -> AddArgument(This,Value,Name,Position,Argument) ) 

#define CodeAttribute2_get_Arguments(This,ppCodeAttributeArguments)	\
    ( (This)->lpVtbl -> get_Arguments(This,ppCodeAttributeArguments) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeAttribute2_INTERFACE_DEFINED__ */


#ifndef __CodeVariable2_INTERFACE_DEFINED__
#define __CodeVariable2_INTERFACE_DEFINED__

/* interface CodeVariable2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeVariable2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F747A8A0-01B1-4DA2-9259-0D5A0CB4C049")
    CodeVariable2 : public CodeVariable
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConstKind( 
            /* [retval][out] */ __RPC__out vsCMConstKind *Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ConstKind( 
            vsCMConstKind Kind) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsGeneric( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeVariable2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeVariable2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeVariable2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeVariable2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeVariable2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeVariable2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeVariable2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeVariable2 * This,
            /* [idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeVariable2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeVariable2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_InitExpression )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_InitExpression )( 
            CodeVariable2 * This,
            /* [idldescattr] */ VARIANT noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Prototype )( 
            CodeVariable2 * This,
            /* [in][idldescattr] */ signed long Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            CodeVariable2 * This,
            /* [idldescattr] */ __RPC__in_opt CodeTypeRef *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeVariable2 * This,
            /* [idldescattr] */ enum vsCMAccess noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__out enum vsCMAccess *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsConstant )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_IsConstant )( 
            CodeVariable2 * This,
            /* [idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeVariable2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeVariable2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeVariable2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ __RPC__in BSTR Value,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsShared )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_IsShared )( 
            CodeVariable2 * This,
            /* [idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConstKind )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__out vsCMConstKind *Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ConstKind )( 
            CodeVariable2 * This,
            vsCMConstKind Kind);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsGeneric )( 
            CodeVariable2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric);
        
        END_INTERFACE
    } CodeVariable2Vtbl;

    interface CodeVariable2
    {
        CONST_VTBL struct CodeVariable2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeVariable2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeVariable2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeVariable2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeVariable2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeVariable2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeVariable2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeVariable2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeVariable2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeVariable2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define CodeVariable2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define CodeVariable2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define CodeVariable2_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define CodeVariable2_get_ProjectItem(This,retval)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,retval) ) 

#define CodeVariable2_get_Kind(This,retval)	\
    ( (This)->lpVtbl -> get_Kind(This,retval) ) 

#define CodeVariable2_get_IsCodeType(This,retval)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,retval) ) 

#define CodeVariable2_get_InfoLocation(This,retval)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,retval) ) 

#define CodeVariable2_get_Children(This,retval)	\
    ( (This)->lpVtbl -> get_Children(This,retval) ) 

#define CodeVariable2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define CodeVariable2_get_StartPoint(This,retval)	\
    ( (This)->lpVtbl -> get_StartPoint(This,retval) ) 

#define CodeVariable2_get_EndPoint(This,retval)	\
    ( (This)->lpVtbl -> get_EndPoint(This,retval) ) 

#define CodeVariable2_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define CodeVariable2_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define CodeVariable2_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define CodeVariable2_GetStartPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,retval) ) 

#define CodeVariable2_GetEndPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,retval) ) 

#define CodeVariable2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define CodeVariable2_get_InitExpression(This,retval)	\
    ( (This)->lpVtbl -> get_InitExpression(This,retval) ) 

#define CodeVariable2_put_InitExpression(This,noname,retval)	\
    ( (This)->lpVtbl -> put_InitExpression(This,noname,retval) ) 

#define CodeVariable2_get_Prototype(This,Flags,retval)	\
    ( (This)->lpVtbl -> get_Prototype(This,Flags,retval) ) 

#define CodeVariable2_put_Type(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Type(This,noname,retval) ) 

#define CodeVariable2_get_Type(This,retval)	\
    ( (This)->lpVtbl -> get_Type(This,retval) ) 

#define CodeVariable2_put_Access(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Access(This,noname,retval) ) 

#define CodeVariable2_get_Access(This,retval)	\
    ( (This)->lpVtbl -> get_Access(This,retval) ) 

#define CodeVariable2_get_IsConstant(This,retval)	\
    ( (This)->lpVtbl -> get_IsConstant(This,retval) ) 

#define CodeVariable2_put_IsConstant(This,noname,retval)	\
    ( (This)->lpVtbl -> put_IsConstant(This,noname,retval) ) 

#define CodeVariable2_get_Attributes(This,retval)	\
    ( (This)->lpVtbl -> get_Attributes(This,retval) ) 

#define CodeVariable2_get_DocComment(This,retval)	\
    ( (This)->lpVtbl -> get_DocComment(This,retval) ) 

#define CodeVariable2_put_DocComment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_DocComment(This,noname,retval) ) 

#define CodeVariable2_get_Comment(This,retval)	\
    ( (This)->lpVtbl -> get_Comment(This,retval) ) 

#define CodeVariable2_put_Comment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Comment(This,noname,retval) ) 

#define CodeVariable2_AddAttribute(This,Name,Value,Position,retval)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,retval) ) 

#define CodeVariable2_get_IsShared(This,retval)	\
    ( (This)->lpVtbl -> get_IsShared(This,retval) ) 

#define CodeVariable2_put_IsShared(This,noname,retval)	\
    ( (This)->lpVtbl -> put_IsShared(This,noname,retval) ) 


#define CodeVariable2_get_ConstKind(This,Kind)	\
    ( (This)->lpVtbl -> get_ConstKind(This,Kind) ) 

#define CodeVariable2_put_ConstKind(This,Kind)	\
    ( (This)->lpVtbl -> put_ConstKind(This,Kind) ) 

#define CodeVariable2_get_IsGeneric(This,pIsGeneric)	\
    ( (This)->lpVtbl -> get_IsGeneric(This,pIsGeneric) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeVariable2_INTERFACE_DEFINED__ */


#ifndef __CodeDelegate2_INTERFACE_DEFINED__
#define __CodeDelegate2_INTERFACE_DEFINED__

/* interface CodeDelegate2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeDelegate2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3b1b24ef-dd8e-4c98-8799-4efac80080e9")
    CodeDelegate2 : public CodeDelegate
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsGeneric( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeDelegate2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeDelegate2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeDelegate2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeDelegate2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeDelegate2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeDelegate2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeDelegate2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeDelegate2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Namespace )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Bases )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ enum vsCMAccess noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__out enum vsCMAccess *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddBase )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ VARIANT Base,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ __RPC__in BSTR Value,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveBase )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveMember )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsDerivedFrom )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ __RPC__in BSTR FullName,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedTypes )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_BaseClass )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Prototype )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ signed long Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ __RPC__in_opt CodeTypeRef *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parameters )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddParameter )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Type,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeParameter **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveParameter )( 
            CodeDelegate2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsGeneric )( 
            CodeDelegate2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric);
        
        END_INTERFACE
    } CodeDelegate2Vtbl;

    interface CodeDelegate2
    {
        CONST_VTBL struct CodeDelegate2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeDelegate2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeDelegate2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeDelegate2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeDelegate2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeDelegate2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeDelegate2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeDelegate2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeDelegate2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeDelegate2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define CodeDelegate2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define CodeDelegate2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define CodeDelegate2_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define CodeDelegate2_get_ProjectItem(This,retval)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,retval) ) 

#define CodeDelegate2_get_Kind(This,retval)	\
    ( (This)->lpVtbl -> get_Kind(This,retval) ) 

#define CodeDelegate2_get_IsCodeType(This,retval)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,retval) ) 

#define CodeDelegate2_get_InfoLocation(This,retval)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,retval) ) 

#define CodeDelegate2_get_Children(This,retval)	\
    ( (This)->lpVtbl -> get_Children(This,retval) ) 

#define CodeDelegate2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define CodeDelegate2_get_StartPoint(This,retval)	\
    ( (This)->lpVtbl -> get_StartPoint(This,retval) ) 

#define CodeDelegate2_get_EndPoint(This,retval)	\
    ( (This)->lpVtbl -> get_EndPoint(This,retval) ) 

#define CodeDelegate2_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define CodeDelegate2_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define CodeDelegate2_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define CodeDelegate2_GetStartPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,retval) ) 

#define CodeDelegate2_GetEndPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,retval) ) 

#define CodeDelegate2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define CodeDelegate2_get_Namespace(This,retval)	\
    ( (This)->lpVtbl -> get_Namespace(This,retval) ) 

#define CodeDelegate2_get_Bases(This,retval)	\
    ( (This)->lpVtbl -> get_Bases(This,retval) ) 

#define CodeDelegate2_get_Members(This,retval)	\
    ( (This)->lpVtbl -> get_Members(This,retval) ) 

#define CodeDelegate2_put_Access(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Access(This,noname,retval) ) 

#define CodeDelegate2_get_Access(This,retval)	\
    ( (This)->lpVtbl -> get_Access(This,retval) ) 

#define CodeDelegate2_get_Attributes(This,retval)	\
    ( (This)->lpVtbl -> get_Attributes(This,retval) ) 

#define CodeDelegate2_get_DocComment(This,retval)	\
    ( (This)->lpVtbl -> get_DocComment(This,retval) ) 

#define CodeDelegate2_put_DocComment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_DocComment(This,noname,retval) ) 

#define CodeDelegate2_get_Comment(This,retval)	\
    ( (This)->lpVtbl -> get_Comment(This,retval) ) 

#define CodeDelegate2_put_Comment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Comment(This,noname,retval) ) 

#define CodeDelegate2_AddBase(This,Base,Position,retval)	\
    ( (This)->lpVtbl -> AddBase(This,Base,Position,retval) ) 

#define CodeDelegate2_AddAttribute(This,Name,Value,Position,retval)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,retval) ) 

#define CodeDelegate2_RemoveBase(This,Element,retval)	\
    ( (This)->lpVtbl -> RemoveBase(This,Element,retval) ) 

#define CodeDelegate2_RemoveMember(This,Element,retval)	\
    ( (This)->lpVtbl -> RemoveMember(This,Element,retval) ) 

#define CodeDelegate2_get_IsDerivedFrom(This,FullName,retval)	\
    ( (This)->lpVtbl -> get_IsDerivedFrom(This,FullName,retval) ) 

#define CodeDelegate2_get_DerivedTypes(This,retval)	\
    ( (This)->lpVtbl -> get_DerivedTypes(This,retval) ) 

#define CodeDelegate2_get_BaseClass(This,retval)	\
    ( (This)->lpVtbl -> get_BaseClass(This,retval) ) 

#define CodeDelegate2_get_Prototype(This,Flags,retval)	\
    ( (This)->lpVtbl -> get_Prototype(This,Flags,retval) ) 

#define CodeDelegate2_get_Type(This,retval)	\
    ( (This)->lpVtbl -> get_Type(This,retval) ) 

#define CodeDelegate2_put_Type(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Type(This,noname,retval) ) 

#define CodeDelegate2_get_Parameters(This,retval)	\
    ( (This)->lpVtbl -> get_Parameters(This,retval) ) 

#define CodeDelegate2_AddParameter(This,Name,Type,Position,retval)	\
    ( (This)->lpVtbl -> AddParameter(This,Name,Type,Position,retval) ) 

#define CodeDelegate2_RemoveParameter(This,Element,retval)	\
    ( (This)->lpVtbl -> RemoveParameter(This,Element,retval) ) 


#define CodeDelegate2_get_IsGeneric(This,pIsGeneric)	\
    ( (This)->lpVtbl -> get_IsGeneric(This,pIsGeneric) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeDelegate2_INTERFACE_DEFINED__ */


#ifndef __CodeStruct2_INTERFACE_DEFINED__
#define __CodeStruct2_INTERFACE_DEFINED__

/* interface CodeStruct2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeStruct2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f6dc1a01-e65a-404b-8b6d-9cdd603db4ed")
    CodeStruct2 : public CodeStruct
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsGeneric( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddEvent( 
            __RPC__in BSTR Name,
            __RPC__in BSTR FullDelegateName,
            /* [defaultvalue][in] */ VARIANT_BOOL CreatePropertyStyleEvent,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum /* external definition not present */ vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEvent **ppEvent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DataTypeKind( 
            /* [retval][out] */ __RPC__out vsCMDataTypeKind *Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DataTypeKind( 
            vsCMDataTypeKind Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parts( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **Elements) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeStruct2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeStruct2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeStruct2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeStruct2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeStruct2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeStruct2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeStruct2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeStruct2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Namespace )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Bases )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeStruct2 * This,
            /* [idldescattr] */ enum vsCMAccess noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__out enum vsCMAccess *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddBase )( 
            CodeStruct2 * This,
            /* [idldescattr] */ VARIANT Base,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ __RPC__in BSTR Value,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveBase )( 
            CodeStruct2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveMember )( 
            CodeStruct2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsDerivedFrom )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR FullName,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedTypes )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ImplementedInterfaces )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsAbstract )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_IsAbstract )( 
            CodeStruct2 * This,
            /* [idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddImplementedInterface )( 
            CodeStruct2 * This,
            /* [idldescattr] */ VARIANT Base,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeInterface **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddFunction )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ enum vsCMFunction Kind,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [optional][idldescattr] */ VARIANT Location,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddVariable )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [optional][idldescattr] */ VARIANT Location,
            /* [retval][out] */ __RPC__deref_out_opt CodeVariable **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddProperty )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR GetterName,
            /* [idldescattr] */ __RPC__in BSTR PutterName,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [optional][idldescattr] */ VARIANT Location,
            /* [retval][out] */ __RPC__deref_out_opt CodeProperty **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddClass )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ VARIANT ImplementedInterfaces,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddStruct )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ VARIANT ImplementedInterfaces,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeStruct **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddEnum )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ VARIANT Bases,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEnum **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddDelegate )( 
            CodeStruct2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeDelegate **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveInterface )( 
            CodeStruct2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsGeneric )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEvent )( 
            CodeStruct2 * This,
            __RPC__in BSTR Name,
            __RPC__in BSTR FullDelegateName,
            /* [defaultvalue][in] */ VARIANT_BOOL CreatePropertyStyleEvent,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum /* external definition not present */ vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEvent **ppEvent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataTypeKind )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__out vsCMDataTypeKind *Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DataTypeKind )( 
            CodeStruct2 * This,
            vsCMDataTypeKind Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parts )( 
            CodeStruct2 * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **Elements);
        
        END_INTERFACE
    } CodeStruct2Vtbl;

    interface CodeStruct2
    {
        CONST_VTBL struct CodeStruct2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeStruct2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeStruct2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeStruct2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeStruct2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeStruct2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeStruct2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeStruct2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeStruct2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeStruct2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define CodeStruct2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define CodeStruct2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define CodeStruct2_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define CodeStruct2_get_ProjectItem(This,retval)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,retval) ) 

#define CodeStruct2_get_Kind(This,retval)	\
    ( (This)->lpVtbl -> get_Kind(This,retval) ) 

#define CodeStruct2_get_IsCodeType(This,retval)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,retval) ) 

#define CodeStruct2_get_InfoLocation(This,retval)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,retval) ) 

#define CodeStruct2_get_Children(This,retval)	\
    ( (This)->lpVtbl -> get_Children(This,retval) ) 

#define CodeStruct2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define CodeStruct2_get_StartPoint(This,retval)	\
    ( (This)->lpVtbl -> get_StartPoint(This,retval) ) 

#define CodeStruct2_get_EndPoint(This,retval)	\
    ( (This)->lpVtbl -> get_EndPoint(This,retval) ) 

#define CodeStruct2_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define CodeStruct2_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define CodeStruct2_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define CodeStruct2_GetStartPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,retval) ) 

#define CodeStruct2_GetEndPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,retval) ) 

#define CodeStruct2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define CodeStruct2_get_Namespace(This,retval)	\
    ( (This)->lpVtbl -> get_Namespace(This,retval) ) 

#define CodeStruct2_get_Bases(This,retval)	\
    ( (This)->lpVtbl -> get_Bases(This,retval) ) 

#define CodeStruct2_get_Members(This,retval)	\
    ( (This)->lpVtbl -> get_Members(This,retval) ) 

#define CodeStruct2_put_Access(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Access(This,noname,retval) ) 

#define CodeStruct2_get_Access(This,retval)	\
    ( (This)->lpVtbl -> get_Access(This,retval) ) 

#define CodeStruct2_get_Attributes(This,retval)	\
    ( (This)->lpVtbl -> get_Attributes(This,retval) ) 

#define CodeStruct2_get_DocComment(This,retval)	\
    ( (This)->lpVtbl -> get_DocComment(This,retval) ) 

#define CodeStruct2_put_DocComment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_DocComment(This,noname,retval) ) 

#define CodeStruct2_get_Comment(This,retval)	\
    ( (This)->lpVtbl -> get_Comment(This,retval) ) 

#define CodeStruct2_put_Comment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Comment(This,noname,retval) ) 

#define CodeStruct2_AddBase(This,Base,Position,retval)	\
    ( (This)->lpVtbl -> AddBase(This,Base,Position,retval) ) 

#define CodeStruct2_AddAttribute(This,Name,Value,Position,retval)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,retval) ) 

#define CodeStruct2_RemoveBase(This,Element,retval)	\
    ( (This)->lpVtbl -> RemoveBase(This,Element,retval) ) 

#define CodeStruct2_RemoveMember(This,Element,retval)	\
    ( (This)->lpVtbl -> RemoveMember(This,Element,retval) ) 

#define CodeStruct2_get_IsDerivedFrom(This,FullName,retval)	\
    ( (This)->lpVtbl -> get_IsDerivedFrom(This,FullName,retval) ) 

#define CodeStruct2_get_DerivedTypes(This,retval)	\
    ( (This)->lpVtbl -> get_DerivedTypes(This,retval) ) 

#define CodeStruct2_get_ImplementedInterfaces(This,retval)	\
    ( (This)->lpVtbl -> get_ImplementedInterfaces(This,retval) ) 

#define CodeStruct2_get_IsAbstract(This,retval)	\
    ( (This)->lpVtbl -> get_IsAbstract(This,retval) ) 

#define CodeStruct2_put_IsAbstract(This,noname,retval)	\
    ( (This)->lpVtbl -> put_IsAbstract(This,noname,retval) ) 

#define CodeStruct2_AddImplementedInterface(This,Base,Position,retval)	\
    ( (This)->lpVtbl -> AddImplementedInterface(This,Base,Position,retval) ) 

#define CodeStruct2_AddFunction(This,Name,Kind,Type,Position,Access,Location,retval)	\
    ( (This)->lpVtbl -> AddFunction(This,Name,Kind,Type,Position,Access,Location,retval) ) 

#define CodeStruct2_AddVariable(This,Name,Type,Position,Access,Location,retval)	\
    ( (This)->lpVtbl -> AddVariable(This,Name,Type,Position,Access,Location,retval) ) 

#define CodeStruct2_AddProperty(This,GetterName,PutterName,Type,Position,Access,Location,retval)	\
    ( (This)->lpVtbl -> AddProperty(This,GetterName,PutterName,Type,Position,Access,Location,retval) ) 

#define CodeStruct2_AddClass(This,Name,Position,Bases,ImplementedInterfaces,Access,retval)	\
    ( (This)->lpVtbl -> AddClass(This,Name,Position,Bases,ImplementedInterfaces,Access,retval) ) 

#define CodeStruct2_AddStruct(This,Name,Position,Bases,ImplementedInterfaces,Access,retval)	\
    ( (This)->lpVtbl -> AddStruct(This,Name,Position,Bases,ImplementedInterfaces,Access,retval) ) 

#define CodeStruct2_AddEnum(This,Name,Position,Bases,Access,retval)	\
    ( (This)->lpVtbl -> AddEnum(This,Name,Position,Bases,Access,retval) ) 

#define CodeStruct2_AddDelegate(This,Name,Type,Position,Access,retval)	\
    ( (This)->lpVtbl -> AddDelegate(This,Name,Type,Position,Access,retval) ) 

#define CodeStruct2_RemoveInterface(This,Element,retval)	\
    ( (This)->lpVtbl -> RemoveInterface(This,Element,retval) ) 


#define CodeStruct2_get_IsGeneric(This,pIsGeneric)	\
    ( (This)->lpVtbl -> get_IsGeneric(This,pIsGeneric) ) 

#define CodeStruct2_AddEvent(This,Name,FullDelegateName,CreatePropertyStyleEvent,Position,Access,ppEvent)	\
    ( (This)->lpVtbl -> AddEvent(This,Name,FullDelegateName,CreatePropertyStyleEvent,Position,Access,ppEvent) ) 

#define CodeStruct2_get_DataTypeKind(This,Kind)	\
    ( (This)->lpVtbl -> get_DataTypeKind(This,Kind) ) 

#define CodeStruct2_put_DataTypeKind(This,Kind)	\
    ( (This)->lpVtbl -> put_DataTypeKind(This,Kind) ) 

#define CodeStruct2_get_Parts(This,Elements)	\
    ( (This)->lpVtbl -> get_Parts(This,Elements) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeStruct2_INTERFACE_DEFINED__ */


#ifndef __CodeInterface2_INTERFACE_DEFINED__
#define __CodeInterface2_INTERFACE_DEFINED__

/* interface CodeInterface2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeInterface2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("860ab609-8af2-4434-b4dd-a43dee31b017")
    CodeInterface2 : public CodeInterface
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsGeneric( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddEvent( 
            __RPC__in BSTR Name,
            __RPC__in BSTR FullDelegateName,
            /* [defaultvalue][in] */ VARIANT_BOOL CreatePropertyStyleEvent,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum /* external definition not present */ vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEvent **ppEvent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DataTypeKind( 
            /* [retval][out] */ __RPC__out vsCMDataTypeKind *Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DataTypeKind( 
            vsCMDataTypeKind Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parts( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **Elements) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeInterface2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeInterface2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeInterface2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeInterface2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeInterface2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeInterface2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeInterface2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeInterface2 * This,
            /* [idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeInterface2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeInterface2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Namespace )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Bases )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeInterface2 * This,
            /* [idldescattr] */ enum vsCMAccess noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__out enum vsCMAccess *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeInterface2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeInterface2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddBase )( 
            CodeInterface2 * This,
            /* [idldescattr] */ VARIANT Base,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeInterface2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ __RPC__in BSTR Value,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveBase )( 
            CodeInterface2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveMember )( 
            CodeInterface2 * This,
            /* [idldescattr] */ VARIANT Element,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsDerivedFrom )( 
            CodeInterface2 * This,
            /* [idldescattr] */ __RPC__in BSTR FullName,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedTypes )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddFunction )( 
            CodeInterface2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ enum vsCMFunction Kind,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddProperty )( 
            CodeInterface2 * This,
            /* [idldescattr] */ __RPC__in BSTR GetterName,
            /* [idldescattr] */ __RPC__in BSTR PutterName,
            /* [idldescattr] */ VARIANT Type,
            /* [idldescattr] */ VARIANT Position,
            /* [idldescattr] */ enum vsCMAccess Access,
            /* [optional][idldescattr] */ VARIANT Location,
            /* [retval][out] */ __RPC__deref_out_opt CodeProperty **retval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsGeneric )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEvent )( 
            CodeInterface2 * This,
            __RPC__in BSTR Name,
            __RPC__in BSTR FullDelegateName,
            /* [defaultvalue][in] */ VARIANT_BOOL CreatePropertyStyleEvent,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum /* external definition not present */ vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEvent **ppEvent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataTypeKind )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__out vsCMDataTypeKind *Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DataTypeKind )( 
            CodeInterface2 * This,
            vsCMDataTypeKind Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parts )( 
            CodeInterface2 * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **Elements);
        
        END_INTERFACE
    } CodeInterface2Vtbl;

    interface CodeInterface2
    {
        CONST_VTBL struct CodeInterface2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeInterface2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeInterface2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeInterface2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeInterface2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeInterface2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeInterface2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeInterface2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeInterface2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeInterface2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define CodeInterface2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define CodeInterface2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define CodeInterface2_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define CodeInterface2_get_ProjectItem(This,retval)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,retval) ) 

#define CodeInterface2_get_Kind(This,retval)	\
    ( (This)->lpVtbl -> get_Kind(This,retval) ) 

#define CodeInterface2_get_IsCodeType(This,retval)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,retval) ) 

#define CodeInterface2_get_InfoLocation(This,retval)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,retval) ) 

#define CodeInterface2_get_Children(This,retval)	\
    ( (This)->lpVtbl -> get_Children(This,retval) ) 

#define CodeInterface2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define CodeInterface2_get_StartPoint(This,retval)	\
    ( (This)->lpVtbl -> get_StartPoint(This,retval) ) 

#define CodeInterface2_get_EndPoint(This,retval)	\
    ( (This)->lpVtbl -> get_EndPoint(This,retval) ) 

#define CodeInterface2_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define CodeInterface2_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define CodeInterface2_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define CodeInterface2_GetStartPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,retval) ) 

#define CodeInterface2_GetEndPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,retval) ) 

#define CodeInterface2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define CodeInterface2_get_Namespace(This,retval)	\
    ( (This)->lpVtbl -> get_Namespace(This,retval) ) 

#define CodeInterface2_get_Bases(This,retval)	\
    ( (This)->lpVtbl -> get_Bases(This,retval) ) 

#define CodeInterface2_get_Members(This,retval)	\
    ( (This)->lpVtbl -> get_Members(This,retval) ) 

#define CodeInterface2_put_Access(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Access(This,noname,retval) ) 

#define CodeInterface2_get_Access(This,retval)	\
    ( (This)->lpVtbl -> get_Access(This,retval) ) 

#define CodeInterface2_get_Attributes(This,retval)	\
    ( (This)->lpVtbl -> get_Attributes(This,retval) ) 

#define CodeInterface2_get_DocComment(This,retval)	\
    ( (This)->lpVtbl -> get_DocComment(This,retval) ) 

#define CodeInterface2_put_DocComment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_DocComment(This,noname,retval) ) 

#define CodeInterface2_get_Comment(This,retval)	\
    ( (This)->lpVtbl -> get_Comment(This,retval) ) 

#define CodeInterface2_put_Comment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Comment(This,noname,retval) ) 

#define CodeInterface2_AddBase(This,Base,Position,retval)	\
    ( (This)->lpVtbl -> AddBase(This,Base,Position,retval) ) 

#define CodeInterface2_AddAttribute(This,Name,Value,Position,retval)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,retval) ) 

#define CodeInterface2_RemoveBase(This,Element,retval)	\
    ( (This)->lpVtbl -> RemoveBase(This,Element,retval) ) 

#define CodeInterface2_RemoveMember(This,Element,retval)	\
    ( (This)->lpVtbl -> RemoveMember(This,Element,retval) ) 

#define CodeInterface2_get_IsDerivedFrom(This,FullName,retval)	\
    ( (This)->lpVtbl -> get_IsDerivedFrom(This,FullName,retval) ) 

#define CodeInterface2_get_DerivedTypes(This,retval)	\
    ( (This)->lpVtbl -> get_DerivedTypes(This,retval) ) 

#define CodeInterface2_AddFunction(This,Name,Kind,Type,Position,Access,retval)	\
    ( (This)->lpVtbl -> AddFunction(This,Name,Kind,Type,Position,Access,retval) ) 

#define CodeInterface2_AddProperty(This,GetterName,PutterName,Type,Position,Access,Location,retval)	\
    ( (This)->lpVtbl -> AddProperty(This,GetterName,PutterName,Type,Position,Access,Location,retval) ) 


#define CodeInterface2_get_IsGeneric(This,pIsGeneric)	\
    ( (This)->lpVtbl -> get_IsGeneric(This,pIsGeneric) ) 

#define CodeInterface2_AddEvent(This,Name,FullDelegateName,CreatePropertyStyleEvent,Position,Access,ppEvent)	\
    ( (This)->lpVtbl -> AddEvent(This,Name,FullDelegateName,CreatePropertyStyleEvent,Position,Access,ppEvent) ) 

#define CodeInterface2_get_DataTypeKind(This,Kind)	\
    ( (This)->lpVtbl -> get_DataTypeKind(This,Kind) ) 

#define CodeInterface2_put_DataTypeKind(This,Kind)	\
    ( (This)->lpVtbl -> put_DataTypeKind(This,Kind) ) 

#define CodeInterface2_get_Parts(This,Elements)	\
    ( (This)->lpVtbl -> get_Parts(This,Elements) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeInterface2_INTERFACE_DEFINED__ */


#ifndef __CodeTypeRef2_INTERFACE_DEFINED__
#define __CodeTypeRef2_INTERFACE_DEFINED__

/* interface CodeTypeRef2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeTypeRef2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9883c07a-fa07-4ce7-bd8e-01e1a3f3a3f7")
    CodeTypeRef2 : public CodeTypeRef
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsGeneric( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeTypeRef2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeTypeRef2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeTypeRef2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeTypeRef2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeTypeRef2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeTypeRef2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeTypeRef2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeTypeRef2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeTypeRef2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeTypeRef2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_TypeKind )( 
            CodeTypeRef2 * This,
            /* [retval][out] */ __RPC__out enum vsCMTypeRef *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CodeType )( 
            CodeTypeRef2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeType **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_CodeType )( 
            CodeTypeRef2 * This,
            /* [idldescattr] */ __RPC__in_opt CodeType *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ElementType )( 
            CodeTypeRef2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_ElementType )( 
            CodeTypeRef2 * This,
            /* [idldescattr] */ __RPC__in_opt CodeTypeRef *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AsString )( 
            CodeTypeRef2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AsFullName )( 
            CodeTypeRef2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Rank )( 
            CodeTypeRef2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Rank )( 
            CodeTypeRef2 * This,
            /* [idldescattr] */ signed long noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *CreateArrayType )( 
            CodeTypeRef2 * This,
            /* [idldescattr] */ signed long Rank,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **retval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsGeneric )( 
            CodeTypeRef2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric);
        
        END_INTERFACE
    } CodeTypeRef2Vtbl;

    interface CodeTypeRef2
    {
        CONST_VTBL struct CodeTypeRef2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeTypeRef2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeTypeRef2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeTypeRef2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeTypeRef2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeTypeRef2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeTypeRef2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeTypeRef2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeTypeRef2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeTypeRef2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define CodeTypeRef2_get_TypeKind(This,retval)	\
    ( (This)->lpVtbl -> get_TypeKind(This,retval) ) 

#define CodeTypeRef2_get_CodeType(This,retval)	\
    ( (This)->lpVtbl -> get_CodeType(This,retval) ) 

#define CodeTypeRef2_put_CodeType(This,noname,retval)	\
    ( (This)->lpVtbl -> put_CodeType(This,noname,retval) ) 

#define CodeTypeRef2_get_ElementType(This,retval)	\
    ( (This)->lpVtbl -> get_ElementType(This,retval) ) 

#define CodeTypeRef2_put_ElementType(This,noname,retval)	\
    ( (This)->lpVtbl -> put_ElementType(This,noname,retval) ) 

#define CodeTypeRef2_get_AsString(This,retval)	\
    ( (This)->lpVtbl -> get_AsString(This,retval) ) 

#define CodeTypeRef2_get_AsFullName(This,retval)	\
    ( (This)->lpVtbl -> get_AsFullName(This,retval) ) 

#define CodeTypeRef2_get_Rank(This,retval)	\
    ( (This)->lpVtbl -> get_Rank(This,retval) ) 

#define CodeTypeRef2_put_Rank(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Rank(This,noname,retval) ) 

#define CodeTypeRef2_CreateArrayType(This,Rank,retval)	\
    ( (This)->lpVtbl -> CreateArrayType(This,Rank,retval) ) 


#define CodeTypeRef2_get_IsGeneric(This,pIsGeneric)	\
    ( (This)->lpVtbl -> get_IsGeneric(This,pIsGeneric) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeTypeRef2_INTERFACE_DEFINED__ */


#ifndef __CodeProperty2_INTERFACE_DEFINED__
#define __CodeProperty2_INTERFACE_DEFINED__

/* interface CodeProperty2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeProperty2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33770C02-21B7-4224-A577-6877BDBA60EA")
    CodeProperty2 : public CodeProperty
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parameters( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppMembers) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddParameter( 
            __RPC__in BSTR Name,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeParameter **ppCodeParameter) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsGeneric( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OverrideKind( 
            /* [retval][out] */ __RPC__out vsCMOverrideKind *Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OverrideKind( 
            vsCMOverrideKind Kind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsShared( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsShared) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsShared( 
            VARIANT_BOOL Shared) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsDefault( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsDefault) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsDefault( 
            VARIANT_BOOL Default) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent2( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElement **pParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveParameter( 
            VARIANT Element) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReadWrite( 
            /* [retval][out] */ __RPC__out vsCMPropertyKind *pPropertyKind) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeProperty2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeProperty2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeProperty2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeProperty2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeProperty2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeProperty2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeProperty2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeProperty2 * This,
            /* [idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeProperty2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeProperty2 * This,
            /* [in][idldescattr] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Prototype )( 
            CodeProperty2 * This,
            /* [in][idldescattr] */ signed long Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            CodeProperty2 * This,
            /* [idldescattr] */ __RPC__in_opt CodeTypeRef *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Getter )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Getter )( 
            CodeProperty2 * This,
            /* [idldescattr] */ __RPC__in_opt CodeFunction *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Setter )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Setter )( 
            CodeProperty2 * This,
            /* [idldescattr] */ __RPC__in_opt CodeFunction *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeProperty2 * This,
            /* [idldescattr] */ enum vsCMAccess noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__out enum vsCMAccess *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeProperty2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeProperty2 * This,
            /* [idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeProperty2 * This,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [idldescattr] */ __RPC__in BSTR Value,
            /* [optional][idldescattr] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parameters )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElements **ppMembers);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddParameter )( 
            CodeProperty2 * This,
            __RPC__in BSTR Name,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeParameter **ppCodeParameter);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsGeneric )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsGeneric);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OverrideKind )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__out vsCMOverrideKind *Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OverrideKind )( 
            CodeProperty2 * This,
            vsCMOverrideKind Kind);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsShared )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsShared);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsShared )( 
            CodeProperty2 * This,
            VARIANT_BOOL Shared);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsDefault )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsDefault);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsDefault )( 
            CodeProperty2 * This,
            VARIANT_BOOL Default);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent2 )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CodeElement **pParent);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveParameter )( 
            CodeProperty2 * This,
            VARIANT Element);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReadWrite )( 
            CodeProperty2 * This,
            /* [retval][out] */ __RPC__out vsCMPropertyKind *pPropertyKind);
        
        END_INTERFACE
    } CodeProperty2Vtbl;

    interface CodeProperty2
    {
        CONST_VTBL struct CodeProperty2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeProperty2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define CodeProperty2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define CodeProperty2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define CodeProperty2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define CodeProperty2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define CodeProperty2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define CodeProperty2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define CodeProperty2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define CodeProperty2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define CodeProperty2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define CodeProperty2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define CodeProperty2_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define CodeProperty2_get_ProjectItem(This,retval)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,retval) ) 

#define CodeProperty2_get_Kind(This,retval)	\
    ( (This)->lpVtbl -> get_Kind(This,retval) ) 

#define CodeProperty2_get_IsCodeType(This,retval)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,retval) ) 

#define CodeProperty2_get_InfoLocation(This,retval)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,retval) ) 

#define CodeProperty2_get_Children(This,retval)	\
    ( (This)->lpVtbl -> get_Children(This,retval) ) 

#define CodeProperty2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define CodeProperty2_get_StartPoint(This,retval)	\
    ( (This)->lpVtbl -> get_StartPoint(This,retval) ) 

#define CodeProperty2_get_EndPoint(This,retval)	\
    ( (This)->lpVtbl -> get_EndPoint(This,retval) ) 

#define CodeProperty2_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define CodeProperty2_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define CodeProperty2_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define CodeProperty2_GetStartPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,retval) ) 

#define CodeProperty2_GetEndPoint(This,Part,retval)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,retval) ) 

#define CodeProperty2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define CodeProperty2_get_Prototype(This,Flags,retval)	\
    ( (This)->lpVtbl -> get_Prototype(This,Flags,retval) ) 

#define CodeProperty2_put_Type(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Type(This,noname,retval) ) 

#define CodeProperty2_get_Type(This,retval)	\
    ( (This)->lpVtbl -> get_Type(This,retval) ) 

#define CodeProperty2_get_Getter(This,retval)	\
    ( (This)->lpVtbl -> get_Getter(This,retval) ) 

#define CodeProperty2_put_Getter(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Getter(This,noname,retval) ) 

#define CodeProperty2_get_Setter(This,retval)	\
    ( (This)->lpVtbl -> get_Setter(This,retval) ) 

#define CodeProperty2_put_Setter(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Setter(This,noname,retval) ) 

#define CodeProperty2_put_Access(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Access(This,noname,retval) ) 

#define CodeProperty2_get_Access(This,retval)	\
    ( (This)->lpVtbl -> get_Access(This,retval) ) 

#define CodeProperty2_get_Attributes(This,retval)	\
    ( (This)->lpVtbl -> get_Attributes(This,retval) ) 

#define CodeProperty2_get_DocComment(This,retval)	\
    ( (This)->lpVtbl -> get_DocComment(This,retval) ) 

#define CodeProperty2_put_DocComment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_DocComment(This,noname,retval) ) 

#define CodeProperty2_get_Comment(This,retval)	\
    ( (This)->lpVtbl -> get_Comment(This,retval) ) 

#define CodeProperty2_put_Comment(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Comment(This,noname,retval) ) 

#define CodeProperty2_AddAttribute(This,Name,Value,Position,retval)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,retval) ) 


#define CodeProperty2_get_Parameters(This,ppMembers)	\
    ( (This)->lpVtbl -> get_Parameters(This,ppMembers) ) 

#define CodeProperty2_AddParameter(This,Name,Type,Position,ppCodeParameter)	\
    ( (This)->lpVtbl -> AddParameter(This,Name,Type,Position,ppCodeParameter) ) 

#define CodeProperty2_get_IsGeneric(This,pIsGeneric)	\
    ( (This)->lpVtbl -> get_IsGeneric(This,pIsGeneric) ) 

#define CodeProperty2_get_OverrideKind(This,Kind)	\
    ( (This)->lpVtbl -> get_OverrideKind(This,Kind) ) 

#define CodeProperty2_put_OverrideKind(This,Kind)	\
    ( (This)->lpVtbl -> put_OverrideKind(This,Kind) ) 

#define CodeProperty2_get_IsShared(This,pIsShared)	\
    ( (This)->lpVtbl -> get_IsShared(This,pIsShared) ) 

#define CodeProperty2_put_IsShared(This,Shared)	\
    ( (This)->lpVtbl -> put_IsShared(This,Shared) ) 

#define CodeProperty2_get_IsDefault(This,pIsDefault)	\
    ( (This)->lpVtbl -> get_IsDefault(This,pIsDefault) ) 

#define CodeProperty2_put_IsDefault(This,Default)	\
    ( (This)->lpVtbl -> put_IsDefault(This,Default) ) 

#define CodeProperty2_get_Parent2(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent2(This,pParent) ) 

#define CodeProperty2_RemoveParameter(This,Element)	\
    ( (This)->lpVtbl -> RemoveParameter(This,Element) ) 

#define CodeProperty2_get_ReadWrite(This,pPropertyKind)	\
    ( (This)->lpVtbl -> get_ReadWrite(This,pPropertyKind) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeProperty2_INTERFACE_DEFINED__ */


#ifndef ___dispCodeModelEvents_DISPINTERFACE_DEFINED__
#define ___dispCodeModelEvents_DISPINTERFACE_DEFINED__

/* dispinterface _dispCodeModelEvents */
/* [helpstringcontext][helpstring][helpcontext][uuid] */ 


EXTERN_C const IID DIID__dispCodeModelEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("4EA8090E-D289-4D56-98CD-C48DD2853B2E")
    _dispCodeModelEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _dispCodeModelEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _dispCodeModelEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _dispCodeModelEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _dispCodeModelEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _dispCodeModelEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _dispCodeModelEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _dispCodeModelEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _dispCodeModelEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _dispCodeModelEventsVtbl;

    interface _dispCodeModelEvents
    {
        CONST_VTBL struct _dispCodeModelEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _dispCodeModelEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _dispCodeModelEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _dispCodeModelEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _dispCodeModelEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _dispCodeModelEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _dispCodeModelEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _dispCodeModelEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___dispCodeModelEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_CodeModelEvents;

#ifdef __cplusplus

class DECLSPEC_UUID("B2FA9979-35EB-4CA2-B467-7370152E53B7")
CodeModelEvents;
#endif

#ifndef ___CodeModelEventsRoot_INTERFACE_DEFINED__
#define ___CodeModelEventsRoot_INTERFACE_DEFINED__

/* interface _CodeModelEventsRoot */
/* [hidden][object][dual][uuid] */ 


EXTERN_C const IID IID__CodeModelEventsRoot;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c6e28776-b7ff-421f-8c18-57f82e447704")
    _CodeModelEventsRoot : public IDispatch
    {
    public:
        virtual /* [hidden][propget][id] */ HRESULT __stdcall get_CodeModelEvents( 
            /* [in] */ __RPC__in /* external definition not present */ CodeElement *CodeElementFilter,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _CodeModelEventsRootVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CodeModelEventsRoot * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CodeModelEventsRoot * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CodeModelEventsRoot * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CodeModelEventsRoot * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CodeModelEventsRoot * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CodeModelEventsRoot * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CodeModelEventsRoot * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( __stdcall *get_CodeModelEvents )( 
            _CodeModelEventsRoot * This,
            /* [in] */ __RPC__in /* external definition not present */ CodeElement *CodeElementFilter,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppdisp);
        
        END_INTERFACE
    } _CodeModelEventsRootVtbl;

    interface _CodeModelEventsRoot
    {
        CONST_VTBL struct _CodeModelEventsRootVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CodeModelEventsRoot_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CodeModelEventsRoot_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CodeModelEventsRoot_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CodeModelEventsRoot_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CodeModelEventsRoot_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CodeModelEventsRoot_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CodeModelEventsRoot_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _CodeModelEventsRoot_get_CodeModelEvents(This,CodeElementFilter,ppdisp)	\
    ( (This)->lpVtbl -> get_CodeModelEvents(This,CodeElementFilter,ppdisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CodeModelEventsRoot_INTERFACE_DEFINED__ */


#ifndef ___CodeModelEvents_INTERFACE_DEFINED__
#define ___CodeModelEvents_INTERFACE_DEFINED__

/* interface _CodeModelEvents */
/* [object][oleautomation][uuid] */ 


EXTERN_C const IID IID__CodeModelEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("66adc510-0ca2-475d-a343-57192bce38bf")
    _CodeModelEvents : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct _CodeModelEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CodeModelEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CodeModelEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CodeModelEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CodeModelEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CodeModelEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CodeModelEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CodeModelEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _CodeModelEventsVtbl;

    interface _CodeModelEvents
    {
        CONST_VTBL struct _CodeModelEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CodeModelEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CodeModelEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CodeModelEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CodeModelEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CodeModelEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CodeModelEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CodeModelEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CodeModelEvents_INTERFACE_DEFINED__ */


#ifndef __Debugger2_INTERFACE_DEFINED__
#define __Debugger2_INTERFACE_DEFINED__

/* interface Debugger2 */
/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_Debugger2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8B5E2BFD-4642-4efe-8AF4-0B2DA9AAA23C")
    Debugger2 : public Debugger
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE WriteMinidump( 
            /* [in] */ __RPC__in BSTR FileName,
            /* [in] */ dbgMinidumpOption Option) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetProcesses( 
            /* [in] */ __RPC__in_opt Transport *pTransport,
            /* [in] */ __RPC__in BSTR TransportQualifier,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Processes **Processes) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExpression2( 
            /* [in] */ __RPC__in BSTR ExpressionText,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL UseAutoExpandRules,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL TreatAsStatement,
            /* [defaultvalue][in] */ long Timeout,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Expression **Expression) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Transports( 
            /* [retval][out] */ __RPC__deref_out_opt Transports **Transports) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Debugger2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Debugger2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Debugger2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Debugger2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Debugger2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Debugger2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetExpression )( 
            Debugger2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ExpressionText,
            /* [in][idldescattr] */ BOOLEAN UseAutoExpandRules,
            /* [in][idldescattr] */ signed long Timeout,
            /* [retval][out] */ __RPC__deref_out_opt Expression **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *DetachAll )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *StepInto )( 
            Debugger2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *StepOver )( 
            Debugger2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *StepOut )( 
            Debugger2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Go )( 
            Debugger2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Break )( 
            Debugger2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakMode,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            Debugger2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForDesignMode,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SetNextStatement )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RunToCursor )( 
            Debugger2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ExecuteStatement )( 
            Debugger2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Statement,
            /* [in][idldescattr] */ signed long Timeout,
            /* [in][idldescattr] */ BOOLEAN TreatAsExpression,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Breakpoints )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Breakpoints **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Languages )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Languages **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentMode )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__out enum dbgDebugMode *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentProcess )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Process **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentProcess )( 
            Debugger2 * This,
            /* [in][idldescattr] */ __RPC__in_opt Process *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentProgram )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Program **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentProgram )( 
            Debugger2 * This,
            /* [in][idldescattr] */ __RPC__in_opt Program *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentThread )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Thread **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentThread )( 
            Debugger2 * This,
            /* [in][idldescattr] */ __RPC__in_opt Thread *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentStackFrame )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt StackFrame **retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentStackFrame )( 
            Debugger2 * This,
            /* [in][idldescattr] */ __RPC__in_opt StackFrame *noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_HexDisplayMode )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_HexDisplayMode )( 
            Debugger2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_HexInputMode )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_HexInputMode )( 
            Debugger2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_LastBreakReason )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__out enum dbgEventReason *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_BreakpointLastHit )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Breakpoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AllBreakpointsLastHit )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Breakpoints **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DebuggedProcesses )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Processes **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_LocalProcesses )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Processes **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *TerminateAll )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *WriteMinidump )( 
            Debugger2 * This,
            /* [in] */ __RPC__in BSTR FileName,
            /* [in] */ dbgMinidumpOption Option);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetProcesses )( 
            Debugger2 * This,
            /* [in] */ __RPC__in_opt Transport *pTransport,
            /* [in] */ __RPC__in BSTR TransportQualifier,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Processes **Processes);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExpression2 )( 
            Debugger2 * This,
            /* [in] */ __RPC__in BSTR ExpressionText,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL UseAutoExpandRules,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL TreatAsStatement,
            /* [defaultvalue][in] */ long Timeout,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Expression **Expression);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Transports )( 
            Debugger2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Transports **Transports);
        
        END_INTERFACE
    } Debugger2Vtbl;

    interface Debugger2
    {
        CONST_VTBL struct Debugger2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Debugger2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Debugger2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Debugger2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Debugger2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Debugger2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Debugger2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Debugger2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Debugger2_GetExpression(This,ExpressionText,UseAutoExpandRules,Timeout,retval)	\
    ( (This)->lpVtbl -> GetExpression(This,ExpressionText,UseAutoExpandRules,Timeout,retval) ) 

#define Debugger2_DetachAll(This,retval)	\
    ( (This)->lpVtbl -> DetachAll(This,retval) ) 

#define Debugger2_StepInto(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> StepInto(This,WaitForBreakOrEnd,retval) ) 

#define Debugger2_StepOver(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> StepOver(This,WaitForBreakOrEnd,retval) ) 

#define Debugger2_StepOut(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> StepOut(This,WaitForBreakOrEnd,retval) ) 

#define Debugger2_Go(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> Go(This,WaitForBreakOrEnd,retval) ) 

#define Debugger2_Break(This,WaitForBreakMode,retval)	\
    ( (This)->lpVtbl -> Break(This,WaitForBreakMode,retval) ) 

#define Debugger2_Stop(This,WaitForDesignMode,retval)	\
    ( (This)->lpVtbl -> Stop(This,WaitForDesignMode,retval) ) 

#define Debugger2_SetNextStatement(This,retval)	\
    ( (This)->lpVtbl -> SetNextStatement(This,retval) ) 

#define Debugger2_RunToCursor(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> RunToCursor(This,WaitForBreakOrEnd,retval) ) 

#define Debugger2_ExecuteStatement(This,Statement,Timeout,TreatAsExpression,retval)	\
    ( (This)->lpVtbl -> ExecuteStatement(This,Statement,Timeout,TreatAsExpression,retval) ) 

#define Debugger2_get_Breakpoints(This,retval)	\
    ( (This)->lpVtbl -> get_Breakpoints(This,retval) ) 

#define Debugger2_get_Languages(This,retval)	\
    ( (This)->lpVtbl -> get_Languages(This,retval) ) 

#define Debugger2_get_CurrentMode(This,retval)	\
    ( (This)->lpVtbl -> get_CurrentMode(This,retval) ) 

#define Debugger2_get_CurrentProcess(This,retval)	\
    ( (This)->lpVtbl -> get_CurrentProcess(This,retval) ) 

#define Debugger2_put_CurrentProcess(This,noname,retval)	\
    ( (This)->lpVtbl -> put_CurrentProcess(This,noname,retval) ) 

#define Debugger2_get_CurrentProgram(This,retval)	\
    ( (This)->lpVtbl -> get_CurrentProgram(This,retval) ) 

#define Debugger2_put_CurrentProgram(This,noname,retval)	\
    ( (This)->lpVtbl -> put_CurrentProgram(This,noname,retval) ) 

#define Debugger2_get_CurrentThread(This,retval)	\
    ( (This)->lpVtbl -> get_CurrentThread(This,retval) ) 

#define Debugger2_put_CurrentThread(This,noname,retval)	\
    ( (This)->lpVtbl -> put_CurrentThread(This,noname,retval) ) 

#define Debugger2_get_CurrentStackFrame(This,retval)	\
    ( (This)->lpVtbl -> get_CurrentStackFrame(This,retval) ) 

#define Debugger2_put_CurrentStackFrame(This,noname,retval)	\
    ( (This)->lpVtbl -> put_CurrentStackFrame(This,noname,retval) ) 

#define Debugger2_get_HexDisplayMode(This,retval)	\
    ( (This)->lpVtbl -> get_HexDisplayMode(This,retval) ) 

#define Debugger2_put_HexDisplayMode(This,noname,retval)	\
    ( (This)->lpVtbl -> put_HexDisplayMode(This,noname,retval) ) 

#define Debugger2_get_HexInputMode(This,retval)	\
    ( (This)->lpVtbl -> get_HexInputMode(This,retval) ) 

#define Debugger2_put_HexInputMode(This,noname,retval)	\
    ( (This)->lpVtbl -> put_HexInputMode(This,noname,retval) ) 

#define Debugger2_get_LastBreakReason(This,retval)	\
    ( (This)->lpVtbl -> get_LastBreakReason(This,retval) ) 

#define Debugger2_get_BreakpointLastHit(This,retval)	\
    ( (This)->lpVtbl -> get_BreakpointLastHit(This,retval) ) 

#define Debugger2_get_AllBreakpointsLastHit(This,retval)	\
    ( (This)->lpVtbl -> get_AllBreakpointsLastHit(This,retval) ) 

#define Debugger2_get_DebuggedProcesses(This,retval)	\
    ( (This)->lpVtbl -> get_DebuggedProcesses(This,retval) ) 

#define Debugger2_get_LocalProcesses(This,retval)	\
    ( (This)->lpVtbl -> get_LocalProcesses(This,retval) ) 

#define Debugger2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define Debugger2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define Debugger2_TerminateAll(This,retval)	\
    ( (This)->lpVtbl -> TerminateAll(This,retval) ) 


#define Debugger2_WriteMinidump(This,FileName,Option)	\
    ( (This)->lpVtbl -> WriteMinidump(This,FileName,Option) ) 

#define Debugger2_GetProcesses(This,pTransport,TransportQualifier,Processes)	\
    ( (This)->lpVtbl -> GetProcesses(This,pTransport,TransportQualifier,Processes) ) 

#define Debugger2_GetExpression2(This,ExpressionText,UseAutoExpandRules,TreatAsStatement,Timeout,Expression)	\
    ( (This)->lpVtbl -> GetExpression2(This,ExpressionText,UseAutoExpandRules,TreatAsStatement,Timeout,Expression) ) 

#define Debugger2_get_Transports(This,Transports)	\
    ( (This)->lpVtbl -> get_Transports(This,Transports) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Debugger2_INTERFACE_DEFINED__ */


#ifndef __Process2_INTERFACE_DEFINED__
#define __Process2_INTERFACE_DEFINED__

/* interface Process2 */
/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_Process2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("95AC1923-6EAA-427c-B43E-6274A8CA6C95")
    Process2 : public Process
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Attach2( 
            /* [optional][defaultvalue][in] */ VARIANT Engines) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Transport( 
            /* [retval][out] */ __RPC__deref_out_opt Transport **Transport) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TransportQualifier( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *TransportQualifier) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Threads( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Threads **Threads) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsBeingDebugged( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *IsBeingDebugged) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *UserName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Process2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Process2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Process2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Process2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Process2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Process2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Process2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Process2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Attach )( 
            Process2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            Process2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Break )( 
            Process2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakMode,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Terminate )( 
            Process2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBreakOrEnd,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Process2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProcessID )( 
            Process2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Programs )( 
            Process2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Programs **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Process2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Process2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Debugger **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Process2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Processes **retval);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Attach2 )( 
            Process2 * This,
            /* [optional][defaultvalue][in] */ VARIANT Engines);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Transport )( 
            Process2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Transport **Transport);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TransportQualifier )( 
            Process2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *TransportQualifier);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Threads )( 
            Process2 * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Threads **Threads);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsBeingDebugged )( 
            Process2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *IsBeingDebugged);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserName )( 
            Process2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *UserName);
        
        END_INTERFACE
    } Process2Vtbl;

    interface Process2
    {
        CONST_VTBL struct Process2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Process2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Process2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Process2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Process2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Process2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Process2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Process2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Process2_Attach(This,retval)	\
    ( (This)->lpVtbl -> Attach(This,retval) ) 

#define Process2_Detach(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> Detach(This,WaitForBreakOrEnd,retval) ) 

#define Process2_Break(This,WaitForBreakMode,retval)	\
    ( (This)->lpVtbl -> Break(This,WaitForBreakMode,retval) ) 

#define Process2_Terminate(This,WaitForBreakOrEnd,retval)	\
    ( (This)->lpVtbl -> Terminate(This,WaitForBreakOrEnd,retval) ) 

#define Process2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define Process2_get_ProcessID(This,retval)	\
    ( (This)->lpVtbl -> get_ProcessID(This,retval) ) 

#define Process2_get_Programs(This,retval)	\
    ( (This)->lpVtbl -> get_Programs(This,retval) ) 

#define Process2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define Process2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define Process2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 


#define Process2_Attach2(This,Engines)	\
    ( (This)->lpVtbl -> Attach2(This,Engines) ) 

#define Process2_get_Transport(This,Transport)	\
    ( (This)->lpVtbl -> get_Transport(This,Transport) ) 

#define Process2_get_TransportQualifier(This,TransportQualifier)	\
    ( (This)->lpVtbl -> get_TransportQualifier(This,TransportQualifier) ) 

#define Process2_get_Threads(This,Threads)	\
    ( (This)->lpVtbl -> get_Threads(This,Threads) ) 

#define Process2_get_IsBeingDebugged(This,IsBeingDebugged)	\
    ( (This)->lpVtbl -> get_IsBeingDebugged(This,IsBeingDebugged) ) 

#define Process2_get_UserName(This,UserName)	\
    ( (This)->lpVtbl -> get_UserName(This,UserName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Process2_INTERFACE_DEFINED__ */


#ifndef __Breakpoint2_INTERFACE_DEFINED__
#define __Breakpoint2_INTERFACE_DEFINED__

/* interface Breakpoint2 */
/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_Breakpoint2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FBC8D85A-E449-4cb3-B026-F7808DEB7792")
    Breakpoint2 : public Breakpoint
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Process( 
            /* [retval][out] */ __RPC__deref_out_opt Process2 **ppProcess) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BreakWhenHit( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *BreakWhenHit) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BreakWhenHit( 
            /* [in] */ VARIANT_BOOL BreakWhenHit) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Message( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Message) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Message( 
            /* [in] */ __RPC__in BSTR Message) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Macro( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Macro) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Macro( 
            /* [in] */ __RPC__in BSTR Macro) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FilterBy( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *FilterBy) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FilterBy( 
            /* [in] */ __RPC__in BSTR FilterBy) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Breakpoint2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Breakpoint2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Breakpoint2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Breakpoint2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Breakpoint2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Breakpoint2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out enum dbgBreakpointType *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            Breakpoint2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_LocationType )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out enum dbgBreakpointLocationType *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FunctionName )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FunctionLineOffset )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FunctionColumnOffset )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_File )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FileLine )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FileColumn )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ConditionType )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out enum dbgBreakpointConditionType *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Condition )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_HitCountType )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out enum dbgHitCountType *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_HitCountTarget )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            Breakpoint2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Tag )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Tag )( 
            Breakpoint2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentHits )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Program )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Program **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Breakpoint **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Breakpoints **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Breakpoints **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ResetHitCount )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Process )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Process2 **ppProcess);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BreakWhenHit )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *BreakWhenHit);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BreakWhenHit )( 
            Breakpoint2 * This,
            /* [in] */ VARIANT_BOOL BreakWhenHit);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Message )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Message);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Message )( 
            Breakpoint2 * This,
            /* [in] */ __RPC__in BSTR Message);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Macro )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Macro);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Macro )( 
            Breakpoint2 * This,
            /* [in] */ __RPC__in BSTR Macro);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FilterBy )( 
            Breakpoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *FilterBy);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FilterBy )( 
            Breakpoint2 * This,
            /* [in] */ __RPC__in BSTR FilterBy);
        
        END_INTERFACE
    } Breakpoint2Vtbl;

    interface Breakpoint2
    {
        CONST_VTBL struct Breakpoint2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Breakpoint2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Breakpoint2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Breakpoint2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Breakpoint2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Breakpoint2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Breakpoint2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Breakpoint2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Breakpoint2_Delete(This,retval)	\
    ( (This)->lpVtbl -> Delete(This,retval) ) 

#define Breakpoint2_get_Type(This,retval)	\
    ( (This)->lpVtbl -> get_Type(This,retval) ) 

#define Breakpoint2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define Breakpoint2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define Breakpoint2_get_LocationType(This,retval)	\
    ( (This)->lpVtbl -> get_LocationType(This,retval) ) 

#define Breakpoint2_get_FunctionName(This,retval)	\
    ( (This)->lpVtbl -> get_FunctionName(This,retval) ) 

#define Breakpoint2_get_FunctionLineOffset(This,retval)	\
    ( (This)->lpVtbl -> get_FunctionLineOffset(This,retval) ) 

#define Breakpoint2_get_FunctionColumnOffset(This,retval)	\
    ( (This)->lpVtbl -> get_FunctionColumnOffset(This,retval) ) 

#define Breakpoint2_get_File(This,retval)	\
    ( (This)->lpVtbl -> get_File(This,retval) ) 

#define Breakpoint2_get_FileLine(This,retval)	\
    ( (This)->lpVtbl -> get_FileLine(This,retval) ) 

#define Breakpoint2_get_FileColumn(This,retval)	\
    ( (This)->lpVtbl -> get_FileColumn(This,retval) ) 

#define Breakpoint2_get_ConditionType(This,retval)	\
    ( (This)->lpVtbl -> get_ConditionType(This,retval) ) 

#define Breakpoint2_get_Condition(This,retval)	\
    ( (This)->lpVtbl -> get_Condition(This,retval) ) 

#define Breakpoint2_get_Language(This,retval)	\
    ( (This)->lpVtbl -> get_Language(This,retval) ) 

#define Breakpoint2_get_HitCountType(This,retval)	\
    ( (This)->lpVtbl -> get_HitCountType(This,retval) ) 

#define Breakpoint2_get_HitCountTarget(This,retval)	\
    ( (This)->lpVtbl -> get_HitCountTarget(This,retval) ) 

#define Breakpoint2_get_Enabled(This,retval)	\
    ( (This)->lpVtbl -> get_Enabled(This,retval) ) 

#define Breakpoint2_put_Enabled(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Enabled(This,noname,retval) ) 

#define Breakpoint2_get_Tag(This,retval)	\
    ( (This)->lpVtbl -> get_Tag(This,retval) ) 

#define Breakpoint2_put_Tag(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Tag(This,noname,retval) ) 

#define Breakpoint2_get_CurrentHits(This,retval)	\
    ( (This)->lpVtbl -> get_CurrentHits(This,retval) ) 

#define Breakpoint2_get_Program(This,retval)	\
    ( (This)->lpVtbl -> get_Program(This,retval) ) 

#define Breakpoint2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define Breakpoint2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define Breakpoint2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define Breakpoint2_get_Children(This,retval)	\
    ( (This)->lpVtbl -> get_Children(This,retval) ) 

#define Breakpoint2_ResetHitCount(This,retval)	\
    ( (This)->lpVtbl -> ResetHitCount(This,retval) ) 


#define Breakpoint2_get_Process(This,ppProcess)	\
    ( (This)->lpVtbl -> get_Process(This,ppProcess) ) 

#define Breakpoint2_get_BreakWhenHit(This,BreakWhenHit)	\
    ( (This)->lpVtbl -> get_BreakWhenHit(This,BreakWhenHit) ) 

#define Breakpoint2_put_BreakWhenHit(This,BreakWhenHit)	\
    ( (This)->lpVtbl -> put_BreakWhenHit(This,BreakWhenHit) ) 

#define Breakpoint2_get_Message(This,Message)	\
    ( (This)->lpVtbl -> get_Message(This,Message) ) 

#define Breakpoint2_put_Message(This,Message)	\
    ( (This)->lpVtbl -> put_Message(This,Message) ) 

#define Breakpoint2_get_Macro(This,Macro)	\
    ( (This)->lpVtbl -> get_Macro(This,Macro) ) 

#define Breakpoint2_put_Macro(This,Macro)	\
    ( (This)->lpVtbl -> put_Macro(This,Macro) ) 

#define Breakpoint2_get_FilterBy(This,FilterBy)	\
    ( (This)->lpVtbl -> get_FilterBy(This,FilterBy) ) 

#define Breakpoint2_put_FilterBy(This,FilterBy)	\
    ( (This)->lpVtbl -> put_FilterBy(This,FilterBy) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Breakpoint2_INTERFACE_DEFINED__ */


#ifndef __Engine_INTERFACE_DEFINED__
#define __Engine_INTERFACE_DEFINED__

/* interface Engine */
/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_Engine;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8CEA6D39-EBEE-4de9-B282-B5CECE9C9861")
    Engine : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ID) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AttachResult( 
            /* [retval][out] */ __RPC__out HRESULT *Result) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Transport **Transport) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt Engines **Engines) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct EngineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Engine * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Engine * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Engine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Engine * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Engine * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Engine * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Engine * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Engine * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            Engine * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ID);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AttachResult )( 
            Engine * This,
            /* [retval][out] */ __RPC__out HRESULT *Result);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Engine * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Engine * This,
            /* [retval][out] */ __RPC__deref_out_opt Transport **Transport);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Engine * This,
            /* [retval][out] */ __RPC__deref_out_opt Engines **Engines);
        
        END_INTERFACE
    } EngineVtbl;

    interface Engine
    {
        CONST_VTBL struct EngineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Engine_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Engine_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Engine_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Engine_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Engine_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Engine_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Engine_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Engine_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define Engine_get_ID(This,ID)	\
    ( (This)->lpVtbl -> get_ID(This,ID) ) 

#define Engine_get_AttachResult(This,Result)	\
    ( (This)->lpVtbl -> get_AttachResult(This,Result) ) 

#define Engine_get_DTE(This,DTE)	\
    ( (This)->lpVtbl -> get_DTE(This,DTE) ) 

#define Engine_get_Parent(This,Transport)	\
    ( (This)->lpVtbl -> get_Parent(This,Transport) ) 

#define Engine_get_Collection(This,Engines)	\
    ( (This)->lpVtbl -> get_Collection(This,Engines) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Engine_INTERFACE_DEFINED__ */


#ifndef __Transport_INTERFACE_DEFINED__
#define __Transport_INTERFACE_DEFINED__

/* interface Transport */
/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_Transport;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C977EAED-9E6C-4122-9D28-9D5EAE2BDC33")
    Transport : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ID) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Engines( 
            /* [retval][out] */ __RPC__deref_out_opt Engines **Engines) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Debugger2 **Debugger) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt Transports **Transports) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TransportVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Transport * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Transport * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Transport * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Transport * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Transport * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Transport * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Transport * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Transport * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            Transport * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ID);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Engines )( 
            Transport * This,
            /* [retval][out] */ __RPC__deref_out_opt Engines **Engines);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Transport * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Transport * This,
            /* [retval][out] */ __RPC__deref_out_opt Debugger2 **Debugger);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Transport * This,
            /* [retval][out] */ __RPC__deref_out_opt Transports **Transports);
        
        END_INTERFACE
    } TransportVtbl;

    interface Transport
    {
        CONST_VTBL struct TransportVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Transport_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Transport_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Transport_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Transport_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Transport_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Transport_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Transport_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Transport_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define Transport_get_ID(This,ID)	\
    ( (This)->lpVtbl -> get_ID(This,ID) ) 

#define Transport_get_Engines(This,Engines)	\
    ( (This)->lpVtbl -> get_Engines(This,Engines) ) 

#define Transport_get_DTE(This,DTE)	\
    ( (This)->lpVtbl -> get_DTE(This,DTE) ) 

#define Transport_get_Parent(This,Debugger)	\
    ( (This)->lpVtbl -> get_Parent(This,Debugger) ) 

#define Transport_get_Collection(This,Transports)	\
    ( (This)->lpVtbl -> get_Collection(This,Transports) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Transport_INTERFACE_DEFINED__ */


#ifndef __Engines_INTERFACE_DEFINED__
#define __Engines_INTERFACE_DEFINED__

/* interface Engines */
/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_Engines;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9F998C5E-549E-4c74-9FD8-B3A93D85A248")
    Engines : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt Engine **Engine) = 0;
        
        virtual /* [restricted][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *Count) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct EnginesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Engines * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Engines * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Engines * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Engines * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Engines * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Engines * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Engines * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Engines * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt Engine **Engine);
        
        /* [restricted][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Engines * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Engines * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Engines * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Engines * This,
            /* [retval][out] */ __RPC__out long *Count);
        
        END_INTERFACE
    } EnginesVtbl;

    interface Engines
    {
        CONST_VTBL struct EnginesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Engines_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Engines_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Engines_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Engines_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Engines_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Engines_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Engines_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Engines_Item(This,Index,Engine)	\
    ( (This)->lpVtbl -> Item(This,Index,Engine) ) 

#define Engines__NewEnum(This,Enumerator)	\
    ( (This)->lpVtbl -> _NewEnum(This,Enumerator) ) 

#define Engines_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define Engines_get_Parent(This,Debugger)	\
    ( (This)->lpVtbl -> get_Parent(This,Debugger) ) 

#define Engines_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Engines_INTERFACE_DEFINED__ */


#ifndef __Transports_INTERFACE_DEFINED__
#define __Transports_INTERFACE_DEFINED__

/* interface Transports */
/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_Transports;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EA47C3D9-FD41-4402-BDC6-7F07D0C8E3FC")
    Transports : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt Transport **Transport) = 0;
        
        virtual /* [restricted][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *Count) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TransportsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Transports * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Transports * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Transports * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Transports * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Transports * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Transports * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Transports * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Transports * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt Transport **Transport);
        
        /* [restricted][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Transports * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Transports * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Transports * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Debugger **Debugger);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Transports * This,
            /* [retval][out] */ __RPC__out long *Count);
        
        END_INTERFACE
    } TransportsVtbl;

    interface Transports
    {
        CONST_VTBL struct TransportsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Transports_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Transports_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Transports_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Transports_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Transports_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Transports_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Transports_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Transports_Item(This,Index,Transport)	\
    ( (This)->lpVtbl -> Item(This,Index,Transport) ) 

#define Transports__NewEnum(This,Enumerator)	\
    ( (This)->lpVtbl -> _NewEnum(This,Enumerator) ) 

#define Transports_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define Transports_get_Parent(This,Debugger)	\
    ( (This)->lpVtbl -> get_Parent(This,Debugger) ) 

#define Transports_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Transports_INTERFACE_DEFINED__ */


#ifndef ___dispDebuggerProcessEvents_DISPINTERFACE_DEFINED__
#define ___dispDebuggerProcessEvents_DISPINTERFACE_DEFINED__

/* dispinterface _dispDebuggerProcessEvents */
/* [version][uuid] */ 


EXTERN_C const IID DIID__dispDebuggerProcessEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("7d04c01d-bb7a-47e8-92eb-e914cd61366b")
    _dispDebuggerProcessEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _dispDebuggerProcessEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _dispDebuggerProcessEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _dispDebuggerProcessEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _dispDebuggerProcessEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _dispDebuggerProcessEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _dispDebuggerProcessEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _dispDebuggerProcessEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _dispDebuggerProcessEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _dispDebuggerProcessEventsVtbl;

    interface _dispDebuggerProcessEvents
    {
        CONST_VTBL struct _dispDebuggerProcessEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _dispDebuggerProcessEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _dispDebuggerProcessEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _dispDebuggerProcessEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _dispDebuggerProcessEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _dispDebuggerProcessEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _dispDebuggerProcessEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _dispDebuggerProcessEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___dispDebuggerProcessEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___DebuggerProcessEventsRoot_INTERFACE_DEFINED__
#define ___DebuggerProcessEventsRoot_INTERFACE_DEFINED__

/* interface _DebuggerProcessEventsRoot */
/* [version][hidden][object][dual][uuid] */ 


EXTERN_C const IID IID__DebuggerProcessEventsRoot;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2eb9070-38b3-404d-bed8-2d5f5d971df5")
    _DebuggerProcessEventsRoot : public IDispatch
    {
    public:
        virtual /* [hidden][propget][id] */ HRESULT __stdcall get_DebuggerProcessEvents( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **disp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _DebuggerProcessEventsRootVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggerProcessEventsRoot * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggerProcessEventsRoot * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggerProcessEventsRoot * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggerProcessEventsRoot * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggerProcessEventsRoot * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggerProcessEventsRoot * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggerProcessEventsRoot * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( __stdcall *get_DebuggerProcessEvents )( 
            _DebuggerProcessEventsRoot * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **disp);
        
        END_INTERFACE
    } _DebuggerProcessEventsRootVtbl;

    interface _DebuggerProcessEventsRoot
    {
        CONST_VTBL struct _DebuggerProcessEventsRootVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggerProcessEventsRoot_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggerProcessEventsRoot_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggerProcessEventsRoot_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggerProcessEventsRoot_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggerProcessEventsRoot_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggerProcessEventsRoot_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggerProcessEventsRoot_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _DebuggerProcessEventsRoot_get_DebuggerProcessEvents(This,disp)	\
    ( (This)->lpVtbl -> get_DebuggerProcessEvents(This,disp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggerProcessEventsRoot_INTERFACE_DEFINED__ */


#ifndef ___DebuggerProcessEvents_INTERFACE_DEFINED__
#define ___DebuggerProcessEvents_INTERFACE_DEFINED__

/* interface _DebuggerProcessEvents */
/* [object][helpstringcontext][helpstring][helpcontext][oleautomation][uuid] */ 


EXTERN_C const IID IID__DebuggerProcessEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ce9ddba3-b23b-4c53-bb3e-5471659289d1")
    _DebuggerProcessEvents : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct _DebuggerProcessEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggerProcessEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggerProcessEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggerProcessEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggerProcessEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggerProcessEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggerProcessEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggerProcessEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _DebuggerProcessEventsVtbl;

    interface _DebuggerProcessEvents
    {
        CONST_VTBL struct _DebuggerProcessEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggerProcessEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggerProcessEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggerProcessEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggerProcessEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggerProcessEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggerProcessEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggerProcessEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggerProcessEvents_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_DebuggerProcessEvents;

#ifdef __cplusplus

class DECLSPEC_UUID("d14b8b85-e4a8-42f8-b486-8a14dc74adeb")
DebuggerProcessEvents;
#endif

#ifndef ___dispDebuggerExpressionEvaluationEvents_DISPINTERFACE_DEFINED__
#define ___dispDebuggerExpressionEvaluationEvents_DISPINTERFACE_DEFINED__

/* dispinterface _dispDebuggerExpressionEvaluationEvents */
/* [version][uuid] */ 


EXTERN_C const IID DIID__dispDebuggerExpressionEvaluationEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("73ffa13f-ad72-4154-be77-d4288f2e4fc5")
    _dispDebuggerExpressionEvaluationEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _dispDebuggerExpressionEvaluationEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _dispDebuggerExpressionEvaluationEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _dispDebuggerExpressionEvaluationEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _dispDebuggerExpressionEvaluationEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _dispDebuggerExpressionEvaluationEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _dispDebuggerExpressionEvaluationEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _dispDebuggerExpressionEvaluationEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _dispDebuggerExpressionEvaluationEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _dispDebuggerExpressionEvaluationEventsVtbl;

    interface _dispDebuggerExpressionEvaluationEvents
    {
        CONST_VTBL struct _dispDebuggerExpressionEvaluationEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _dispDebuggerExpressionEvaluationEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _dispDebuggerExpressionEvaluationEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _dispDebuggerExpressionEvaluationEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _dispDebuggerExpressionEvaluationEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _dispDebuggerExpressionEvaluationEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _dispDebuggerExpressionEvaluationEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _dispDebuggerExpressionEvaluationEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___dispDebuggerExpressionEvaluationEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___DebuggerExpressionEvaluationEvents_INTERFACE_DEFINED__
#define ___DebuggerExpressionEvaluationEvents_INTERFACE_DEFINED__

/* interface _DebuggerExpressionEvaluationEvents */
/* [object][helpstringcontext][helpstring][helpcontext][oleautomation][uuid] */ 


EXTERN_C const IID IID__DebuggerExpressionEvaluationEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6973a466-e09c-4195-9ae8-07b7aaff7d85")
    _DebuggerExpressionEvaluationEvents : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct _DebuggerExpressionEvaluationEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggerExpressionEvaluationEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggerExpressionEvaluationEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggerExpressionEvaluationEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggerExpressionEvaluationEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggerExpressionEvaluationEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggerExpressionEvaluationEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggerExpressionEvaluationEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _DebuggerExpressionEvaluationEventsVtbl;

    interface _DebuggerExpressionEvaluationEvents
    {
        CONST_VTBL struct _DebuggerExpressionEvaluationEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggerExpressionEvaluationEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggerExpressionEvaluationEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggerExpressionEvaluationEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggerExpressionEvaluationEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggerExpressionEvaluationEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggerExpressionEvaluationEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggerExpressionEvaluationEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggerExpressionEvaluationEvents_INTERFACE_DEFINED__ */


#ifndef ___DebuggerExpressionEvaluationEventsRoot_INTERFACE_DEFINED__
#define ___DebuggerExpressionEvaluationEventsRoot_INTERFACE_DEFINED__

/* interface _DebuggerExpressionEvaluationEventsRoot */
/* [version][hidden][object][dual][uuid] */ 


EXTERN_C const IID IID__DebuggerExpressionEvaluationEventsRoot;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("45ae9835-6090-4cca-97e0-5ea9a5608fbe")
    _DebuggerExpressionEvaluationEventsRoot : public IDispatch
    {
    public:
        virtual /* [hidden][propget][id] */ HRESULT __stdcall get_DebuggerExpressionEvaluationEvents( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **disp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _DebuggerExpressionEvaluationEventsRootVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggerExpressionEvaluationEventsRoot * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggerExpressionEvaluationEventsRoot * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggerExpressionEvaluationEventsRoot * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggerExpressionEvaluationEventsRoot * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggerExpressionEvaluationEventsRoot * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggerExpressionEvaluationEventsRoot * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggerExpressionEvaluationEventsRoot * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( __stdcall *get_DebuggerExpressionEvaluationEvents )( 
            _DebuggerExpressionEvaluationEventsRoot * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **disp);
        
        END_INTERFACE
    } _DebuggerExpressionEvaluationEventsRootVtbl;

    interface _DebuggerExpressionEvaluationEventsRoot
    {
        CONST_VTBL struct _DebuggerExpressionEvaluationEventsRootVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggerExpressionEvaluationEventsRoot_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggerExpressionEvaluationEventsRoot_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggerExpressionEvaluationEventsRoot_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggerExpressionEvaluationEventsRoot_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggerExpressionEvaluationEventsRoot_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggerExpressionEvaluationEventsRoot_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggerExpressionEvaluationEventsRoot_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _DebuggerExpressionEvaluationEventsRoot_get_DebuggerExpressionEvaluationEvents(This,disp)	\
    ( (This)->lpVtbl -> get_DebuggerExpressionEvaluationEvents(This,disp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggerExpressionEvaluationEventsRoot_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_DebuggerExpressionEvaluationEvents;

#ifdef __cplusplus

class DECLSPEC_UUID("1aa6b3e4-42f7-4396-80fa-76728d1b824c")
DebuggerExpressionEvaluationEvents;
#endif


#ifndef __ContextGuids_MODULE_DEFINED__
#define __ContextGuids_MODULE_DEFINED__


/* module ContextGuids */
/* [helpstring][dllname][uuid] */ 

const LPSTR vsContextGuidSolutionBuilding	=	"{ADFC4E60-0397-11D1-9F4E-00A0C911004F}";

const LPSTR vsContextGuidDebugging	=	"{ADFC4E61-0397-11D1-9F4E-00A0C911004F}";

const LPSTR vsContextGuidUIHierarchyDragging	=	"{B706F393-2E5B-49E7-9E2E-B1825F639B63}";

const LPSTR vsContextGuidFullScreenMode	=	"{ADFC4E62-0397-11D1-9F4E-00A0C911004F}";

const LPSTR vsContextGuidDesignMode	=	"{ADFC4E63-0397-11D1-9F4E-00A0C911004F}";

const LPSTR vsContextGuidNoSolution	=	"{ADFC4E64-0397-11D1-9F4E-00A0C911004F}";

const LPSTR vsContextGuidSolutionExists	=	"{F1536EF8-92EC-443C-9ED7-FDADF150DA82}";

const LPSTR vsContextGuidEmptySolution	=	"{ADFC4E65-0397-11D1-9F4E-00A0C911004F}";

const LPSTR vsContextGuidSolutionHasSingleProject	=	"{ADFC4E66-0397-11D1-9F4E-00A0C911004F}";

const LPSTR vsContextGuidSolutionHasMultipleProjects	=	"{93694FA0-0397-11D1-9F4E-00A0C911004F}";

const LPSTR vsContextGuidCodeWindow	=	"{8FE2DF1D-E0DA-4EBE-9D5C-415D40E487B5}";

const LPSTR vsContextGuidNotBuildingAndNotDebugging	=	"{48EA4A80-F14E-4107-88FA-8D0016F30B9C}";

const LPSTR vsContextGuidSolutionOrProjectUpgrading	=	"{EF4F870B-7B85-4F29-9D15-CE1ABFBE733B}";

const LPSTR vsContextGuidDataSourceWindowSupported	=	"{95C314C4-660B-4627-9F82-1BAF1C764BBF}";

const LPSTR vsContextGuidDataSourceWindowAutoVisible	=	"{2E78870D-AC7C-4460-A4A1-3FE37D00EF81}";

const LPSTR vsContextGuidWindowsFormsDesigner	=	"{BA09E2AF-9DF2-4068-B2F0-4C7E5CC19E2F}";

const LPSTR vsContextGuidToolboxInitialized	=	"{DC5DB425-F0FD-4403-96A1-F475CDBA9EE0}";

const LPSTR vsContextGuidSolutionExistsAndNotBuildingAndNotDebugging	=	"{D0E4DEEC-1B53-4CDA-8559-D454583AD23B}";

const LPSTR vsContextGuidTextEditor	=	"{8B382828-6202-11D1-8870-0000F87579D2}";

const LPSTR vsContextGuidXMLTextEditor	=	"{F6819A78-A205-47B5-BE1C-675B3C7F0B8E}";

const LPSTR vsContextGuidCSSTextEditor	=	"{A764E898-518D-11D2-9A89-00C04F79EFC3}";

const LPSTR vsContextGuidHTMLSourceEditor	=	"{58E975A0-F8FE-11D2-A6AE-00104BCC7269}";

const LPSTR vsContextGuidHTMLDesignView	=	"{CB3FCFEA-03DF-11D1-81D2-00A0C91BBEE3}";

const LPSTR vsContextGuidHTMLSourceView	=	"{CB3FCFEB-03DF-11D1-81D2-00A0C91BBEE3}";

const LPSTR vsContextGuidHTMLCodeView	=	"{4C01CBEE-FB8C-4ED0-8EC0-68348C52822E}";

const LPSTR vsContextGuidFrames	=	"{CB3FCFEC-03DF-11D1-81D2-00A0C91BBEE3}";

const LPSTR vsContextGuidSchema	=	"{E6631B5B-2EAB-41E8-82FD-6469645C76C9}";

const LPSTR vsContextGuidData	=	"{F482F8AF-1E66-4760-919E-964707265994}";

const LPSTR vsContextGuidKindStartPage	=	"{387CB18D-6153-4156-9257-9AC3F9207BBE}";

const LPSTR vsContextGuidCommunityWindow	=	"{96DB1F3B-0E7A-4406-B73E-C6F0A2C67B97}";

const LPSTR vsContextGuidDeviceExplorer	=	"{B65E9355-A4C7-4855-96BB-1D3EC8514E8F}";

const LPSTR vsContextGuidBookmarks	=	"{A0C5197D-0AC7-4B63-97CD-8872A789D233}";

const LPSTR vsContextGuidApplicationBrowser	=	"{399832EA-70A8-4AE7-9B99-3C0850DAD152}";

const LPSTR vsContextGuidFavorites	=	"{57DC5D59-11C2-4955-A7B4-D7699D677E93}";

const LPSTR vsContextGuidErrorList	=	"{D78612C7-9962-4B83-95D9-268046DAD23A}";

const LPSTR vsContextGuidHelpSearch	=	"{46C87F81-5A06-43A8-9E25-85D33BAC49F8}";

const LPSTR vsContextGuidHelpIndex	=	"{73F6DD58-437E-11D3-B88E-00C04F79F802}";

const LPSTR vsContextGuidHelpContents	=	"{4A791147-19E4-11D3-B86B-00C04F79F802}";

const LPSTR vsContextGuidCallBrowser	=	"{5415EA3A-D813-4948-B51E-562082CE0887}";

const LPSTR vsContextGuidCodeDefinition	=	"{588470CC-84F8-4A57-9AC4-86BCA0625FF4}";

const LPSTR vsContextGuidTaskList	=	"{4A9B7E51-AA16-11D0-A8C5-00A0C921A4D2}";

const LPSTR vsContextGuidToolbox	=	"{B1E99781-AB81-11D0-B683-00AA00A3EE26}";

const LPSTR vsContextGuidCallStack	=	"{0504FF91-9D61-11D0-A794-00A0C9110051}";

const LPSTR vsContextGuidThread	=	"{E62CE6A0-B439-11D0-A79D-00A0C9110051}";

const LPSTR vsContextGuidLocals	=	"{4A18F9D0-B838-11D0-93EB-00A0C90F2734}";

const LPSTR vsContextGuidAutoLocals	=	"{F2E84780-2AF1-11D1-A7FA-00A0C9110051}";

const LPSTR vsContextGuidWatch	=	"{90243340-BD7A-11D0-93EF-00A0C90F2734}";

const LPSTR vsContextGuidProperties	=	"{EEFA5220-E298-11D0-8F78-00A0C9110057}";

const LPSTR vsContextGuidSolutionExplorer	=	"{3AE79031-E1BC-11D0-8F78-00A0C9110057}";

const LPSTR vsContextGuidOutput	=	"{34E76E81-EE4A-11D0-AE2E-00A0C90FFFC3}";

const LPSTR vsContextGuidObjectBrowser	=	"{269A02DC-6AF8-11D3-BDC4-00C04F688E50}";

const LPSTR vsContextGuidMacroExplorer	=	"{07CD18B4-3BA1-11D2-890A-0060083196C6}";

const LPSTR vsContextGuidDynamicHelp	=	"{66DBA47C-61DF-11D2-AA79-00C04F990343}";

const LPSTR vsContextGuidClassView	=	"{C9C0AE26-AA77-11D2-B3F0-0000F87570EE}";

const LPSTR vsContextGuidResourceView	=	"{2D7728C2-DE0A-45B5-99AA-89B609DFDE73}";

const LPSTR vsContextGuidDocumentOutline	=	"{25F7E850-FFA1-11D0-B63F-00A0C922E851}";

const LPSTR vsContextGuidServerExplorer	=	"{74946827-37A0-11D2-A273-00C04F8EF4FF}";

const LPSTR vsContextGuidCommandWindow	=	"{28836128-FC2C-11D2-A433-00C04F72D18A}";

const LPSTR vsContextGuidFindSymbol	=	"{53024D34-0EF5-11D3-87E0-00C04F7971A5}";

const LPSTR vsContextGuidFindSymbolResults	=	"{68487888-204A-11D3-87EB-00C04F7971A5}";

const LPSTR vsContextGuidFindReplace	=	"{CF2DDC32-8CAD-11D2-9302-005345000000}";

const LPSTR vsContextGuidFindResults1	=	"{0F887920-C2B6-11D2-9375-0080C747D9A0}";

const LPSTR vsContextGuidFindResults2	=	"{0F887921-C2B6-11D2-9375-0080C747D9A0}";

const LPSTR vsContextGuidMainWindow	=	"{9DDABE98-1D02-11D3-89A1-00C04F688DDE}";

const LPSTR vsContextGuidLinkedWindowFrame	=	"{9DDABE99-1D02-11D3-89A1-00C04F688DDE}";

const LPSTR vsContextGuidWebBrowser	=	"{E8B06F52-6D01-11D2-AA7D-00C04F990343}";

#endif /* __ContextGuids_MODULE_DEFINED__ */


#ifndef __WindowKinds_MODULE_DEFINED__
#define __WindowKinds_MODULE_DEFINED__


/* module WindowKinds */
/* [helpstringcontext][helpstring][helpcontext][dllname][uuid] */ 

const LPSTR vsWindowKindKindStartPage	=	"{387CB18D-6153-4156-9257-9AC3F9207BBE}";

const LPSTR vsWindowKindCommunityWindow	=	"{96DB1F3B-0E7A-4406-B73E-C6F0A2C67B97}";

const LPSTR vsWindowKindDeviceExplorer	=	"{B65E9355-A4C7-4855-96BB-1D3EC8514E8F}";

const LPSTR vsWindowKindBookmarks	=	"{A0C5197D-0AC7-4B63-97CD-8872A789D233}";

const LPSTR vsWindowKindApplicationBrowser	=	"{399832EA-70A8-4AE7-9B99-3C0850DAD152}";

const LPSTR vsWindowKindFavorites	=	"{57DC5D59-11C2-4955-A7B4-D7699D677E93}";

const LPSTR vsWindowKindErrorList	=	"{D78612C7-9962-4B83-95D9-268046DAD23A}";

const LPSTR vsWindowKindHelpSearch	=	"{46C87F81-5A06-43A8-9E25-85D33BAC49F8}";

const LPSTR vsWindowKindHelpIndex	=	"{73F6DD58-437E-11D3-B88E-00C04F79F802}";

const LPSTR vsWindowKindHelpContents	=	"{4A791147-19E4-11D3-B86B-00C04F79F802}";

const LPSTR vsWindowKindCallBrowser	=	"{5415EA3A-D813-4948-B51E-562082CE0887}";

const LPSTR vsWindowKindCodeDefinition	=	"{588470CC-84F8-4A57-9AC4-86BCA0625FF4}";

const LPSTR vsWindowKindImmediate	=	"{28836128-FC2C-11D2-A433-00C04F72D18A}";

#endif /* __WindowKinds_MODULE_DEFINED__ */


#ifndef __ProjectKinds_MODULE_DEFINED__
#define __ProjectKinds_MODULE_DEFINED__


/* module ProjectKinds */
/* [helpstringcontext][helpstring][helpcontext][dllname][uuid] */ 

const LPSTR vsProjectKindSolutionFolder	=	"{66A26720-8FB5-11D2-AA7E-00C04F688DDE}";

#endif /* __ProjectKinds_MODULE_DEFINED__ */

#ifndef __ToolWindows_INTERFACE_DEFINED__
#define __ToolWindows_INTERFACE_DEFINED__

/* interface ToolWindows */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ToolWindows;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("19AC6F68-3019-4D65-8D98-404DFB96B8E2")
    ToolWindows : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetToolWindow( 
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToolBox( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ ToolBox **ppToolBox) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandWindow( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CommandWindow **ppOutputWindow) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutputWindow( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ OutputWindow **ppOutputWindow) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SolutionExplorer( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ UIHierarchy **ppUIHierarchy) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskList( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TaskList **ppTaskList) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ErrorList( 
            /* [retval][out] */ __RPC__deref_out_opt ErrorList **ppErrorList) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ToolWindowsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ToolWindows * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ToolWindows * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ToolWindows * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ToolWindows * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ToolWindows * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ToolWindows * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ToolWindows * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ToolWindows * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetToolWindow )( 
            ToolWindows * This,
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToolBox )( 
            ToolWindows * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ ToolBox **ppToolBox);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandWindow )( 
            ToolWindows * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ CommandWindow **ppOutputWindow);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutputWindow )( 
            ToolWindows * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ OutputWindow **ppOutputWindow);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionExplorer )( 
            ToolWindows * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ UIHierarchy **ppUIHierarchy);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskList )( 
            ToolWindows * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TaskList **ppTaskList);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorList )( 
            ToolWindows * This,
            /* [retval][out] */ __RPC__deref_out_opt ErrorList **ppErrorList);
        
        END_INTERFACE
    } ToolWindowsVtbl;

    interface ToolWindows
    {
        CONST_VTBL struct ToolWindowsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ToolWindows_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ToolWindows_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ToolWindows_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ToolWindows_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ToolWindows_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ToolWindows_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ToolWindows_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ToolWindows_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define ToolWindows_GetToolWindow(This,Name,ppObject)	\
    ( (This)->lpVtbl -> GetToolWindow(This,Name,ppObject) ) 

#define ToolWindows_get_ToolBox(This,ppToolBox)	\
    ( (This)->lpVtbl -> get_ToolBox(This,ppToolBox) ) 

#define ToolWindows_get_CommandWindow(This,ppOutputWindow)	\
    ( (This)->lpVtbl -> get_CommandWindow(This,ppOutputWindow) ) 

#define ToolWindows_get_OutputWindow(This,ppOutputWindow)	\
    ( (This)->lpVtbl -> get_OutputWindow(This,ppOutputWindow) ) 

#define ToolWindows_get_SolutionExplorer(This,ppUIHierarchy)	\
    ( (This)->lpVtbl -> get_SolutionExplorer(This,ppUIHierarchy) ) 

#define ToolWindows_get_TaskList(This,ppTaskList)	\
    ( (This)->lpVtbl -> get_TaskList(This,ppTaskList) ) 

#define ToolWindows_get_ErrorList(This,ppErrorList)	\
    ( (This)->lpVtbl -> get_ErrorList(This,ppErrorList) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ToolWindows_INTERFACE_DEFINED__ */


#ifndef __Windows2_INTERFACE_DEFINED__
#define __Windows2_INTERFACE_DEFINED__

/* interface Windows2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Windows2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("31EFB5B1-C655-4ada-BB52-3ED87FB2A4AE")
    Windows2 : public Windows
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateToolWindow2( 
            __RPC__in /* external definition not present */ AddIn *Addin,
            __RPC__in BSTR Assembly,
            __RPC__in BSTR Class,
            __RPC__in BSTR Caption,
            __RPC__in BSTR GuidPosition,
            /* [out][in] */ __RPC__deref_inout_opt IDispatch **ControlObject,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Window **ppwindowOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Windows2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Windows2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Windows2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Windows2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Windows2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Windows2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Windows2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Windows2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Windows2 * This,
            /* [in][idldescattr] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Window **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Windows2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Windows2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *CreateToolWindow )( 
            Windows2 * This,
            /* [in][idldescattr] */ __RPC__in_opt AddIn *AddInInst,
            /* [in][idldescattr] */ __RPC__in BSTR ProgID,
            /* [in][idldescattr] */ __RPC__in BSTR Caption,
            /* [in][idldescattr] */ __RPC__in BSTR GuidPosition,
            /* [out][in][idldescattr] */ __RPC__deref_inout_opt IDispatch **DocObj,
            /* [retval][out] */ __RPC__deref_out_opt Window **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Windows2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Windows2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *CreateLinkedWindowFrame )( 
            Windows2 * This,
            /* [in][idldescattr] */ __RPC__in_opt Window *Window1,
            /* [in][idldescattr] */ __RPC__in_opt Window *Window2,
            /* [in][idldescattr] */ enum vsLinkedWindowType Link,
            /* [retval][out] */ __RPC__deref_out_opt Window **retval);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateToolWindow2 )( 
            Windows2 * This,
            __RPC__in /* external definition not present */ AddIn *Addin,
            __RPC__in BSTR Assembly,
            __RPC__in BSTR Class,
            __RPC__in BSTR Caption,
            __RPC__in BSTR GuidPosition,
            /* [out][in] */ __RPC__deref_inout_opt IDispatch **ControlObject,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Window **ppwindowOut);
        
        END_INTERFACE
    } Windows2Vtbl;

    interface Windows2
    {
        CONST_VTBL struct Windows2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Windows2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Windows2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Windows2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Windows2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Windows2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Windows2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Windows2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Windows2_Item(This,index,retval)	\
    ( (This)->lpVtbl -> Item(This,index,retval) ) 

#define Windows2_get_Count(This,retval)	\
    ( (This)->lpVtbl -> get_Count(This,retval) ) 

#define Windows2__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> _NewEnum(This,retval) ) 

#define Windows2_CreateToolWindow(This,AddInInst,ProgID,Caption,GuidPosition,DocObj,retval)	\
    ( (This)->lpVtbl -> CreateToolWindow(This,AddInInst,ProgID,Caption,GuidPosition,DocObj,retval) ) 

#define Windows2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define Windows2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define Windows2_CreateLinkedWindowFrame(This,Window1,Window2,Link,retval)	\
    ( (This)->lpVtbl -> CreateLinkedWindowFrame(This,Window1,Window2,Link,retval) ) 


#define Windows2_CreateToolWindow2(This,Addin,Assembly,Class,Caption,GuidPosition,ControlObject,ppwindowOut)	\
    ( (This)->lpVtbl -> CreateToolWindow2(This,Addin,Assembly,Class,Caption,GuidPosition,ControlObject,ppwindowOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Windows2_INTERFACE_DEFINED__ */


#ifndef __Window2_INTERFACE_DEFINED__
#define __Window2_INTERFACE_DEFINED__

/* interface Window2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Window2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("25731932-3283-4ae0-B7CF-F4691B8BE523")
    Window2 : public Window
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandBars( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppcbs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Window2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Window2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Window2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Window2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Window2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Window2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Windows **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            Window2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Left )( 
            Window2 * This,
            /* [in][idldescattr] */ signed long noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Top )( 
            Window2 * This,
            /* [in][idldescattr] */ signed long noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            Window2 * This,
            /* [in][idldescattr] */ signed long noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            Window2 * This,
            /* [in][idldescattr] */ signed long noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_WindowState )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out enum vsWindowState *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_WindowState )( 
            Window2 * This,
            /* [in][idldescattr] */ enum vsWindowState noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SetFocus )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out enum vsWindowType *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SetKind )( 
            Window2 * This,
            /* [in][idldescattr] */ enum vsWindowType eKind,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_LinkedWindows )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt LinkedWindows **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_LinkedWindowFrame )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Attach )( 
            Window2 * This,
            /* [in][idldescattr] */ signed long lWindowHandle,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_HWnd )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectKind )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Object )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentData )( 
            Window2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR bstrWhichData,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Project **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Document **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Linkable )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Linkable )( 
            Window2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            Window2 * This,
            /* [in][idldescattr] */ enum vsSaveChanges SaveChanges,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            Window2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SetSelectionContainer )( 
            Window2 * This,
            /* [idldescattr] */ __RPC__deref_in_opt SAFEARRAY * *Objects,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsFloating )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_IsFloating )( 
            Window2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AutoHides )( 
            Window2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_AutoHides )( 
            Window2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SetTabPicture )( 
            Window2 * This,
            /* [idldescattr] */ VARIANT Picture,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ContextAttributes )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ContextAttributes **retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandBars )( 
            Window2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppcbs);
        
        END_INTERFACE
    } Window2Vtbl;

    interface Window2
    {
        CONST_VTBL struct Window2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Window2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Window2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Window2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Window2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Window2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Window2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Window2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Window2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define Window2_get_Visible(This,retval)	\
    ( (This)->lpVtbl -> get_Visible(This,retval) ) 

#define Window2_put_Visible(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Visible(This,noname,retval) ) 

#define Window2_get_Left(This,retval)	\
    ( (This)->lpVtbl -> get_Left(This,retval) ) 

#define Window2_put_Left(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Left(This,noname,retval) ) 

#define Window2_get_Top(This,retval)	\
    ( (This)->lpVtbl -> get_Top(This,retval) ) 

#define Window2_put_Top(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Top(This,noname,retval) ) 

#define Window2_get_Width(This,retval)	\
    ( (This)->lpVtbl -> get_Width(This,retval) ) 

#define Window2_put_Width(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Width(This,noname,retval) ) 

#define Window2_get_Height(This,retval)	\
    ( (This)->lpVtbl -> get_Height(This,retval) ) 

#define Window2_put_Height(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Height(This,noname,retval) ) 

#define Window2_get_WindowState(This,retval)	\
    ( (This)->lpVtbl -> get_WindowState(This,retval) ) 

#define Window2_put_WindowState(This,noname,retval)	\
    ( (This)->lpVtbl -> put_WindowState(This,noname,retval) ) 

#define Window2_SetFocus(This,retval)	\
    ( (This)->lpVtbl -> SetFocus(This,retval) ) 

#define Window2_get_Type(This,retval)	\
    ( (This)->lpVtbl -> get_Type(This,retval) ) 

#define Window2_SetKind(This,eKind,retval)	\
    ( (This)->lpVtbl -> SetKind(This,eKind,retval) ) 

#define Window2_get_LinkedWindows(This,retval)	\
    ( (This)->lpVtbl -> get_LinkedWindows(This,retval) ) 

#define Window2_get_LinkedWindowFrame(This,retval)	\
    ( (This)->lpVtbl -> get_LinkedWindowFrame(This,retval) ) 

#define Window2_Detach(This,retval)	\
    ( (This)->lpVtbl -> Detach(This,retval) ) 

#define Window2_Attach(This,lWindowHandle,retval)	\
    ( (This)->lpVtbl -> Attach(This,lWindowHandle,retval) ) 

#define Window2_get_HWnd(This,retval)	\
    ( (This)->lpVtbl -> get_HWnd(This,retval) ) 

#define Window2_get_Kind(This,retval)	\
    ( (This)->lpVtbl -> get_Kind(This,retval) ) 

#define Window2_get_ObjectKind(This,retval)	\
    ( (This)->lpVtbl -> get_ObjectKind(This,retval) ) 

#define Window2_get_Object(This,retval)	\
    ( (This)->lpVtbl -> get_Object(This,retval) ) 

#define Window2_get_DocumentData(This,bstrWhichData,retval)	\
    ( (This)->lpVtbl -> get_DocumentData(This,bstrWhichData,retval) ) 

#define Window2_get_ProjectItem(This,retval)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,retval) ) 

#define Window2_get_Project(This,retval)	\
    ( (This)->lpVtbl -> get_Project(This,retval) ) 

#define Window2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define Window2_get_Document(This,retval)	\
    ( (This)->lpVtbl -> get_Document(This,retval) ) 

#define Window2_get_Selection(This,retval)	\
    ( (This)->lpVtbl -> get_Selection(This,retval) ) 

#define Window2_get_Linkable(This,retval)	\
    ( (This)->lpVtbl -> get_Linkable(This,retval) ) 

#define Window2_put_Linkable(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Linkable(This,noname,retval) ) 

#define Window2_Activate(This,retval)	\
    ( (This)->lpVtbl -> Activate(This,retval) ) 

#define Window2_Close(This,SaveChanges,retval)	\
    ( (This)->lpVtbl -> Close(This,SaveChanges,retval) ) 

#define Window2_get_Caption(This,retval)	\
    ( (This)->lpVtbl -> get_Caption(This,retval) ) 

#define Window2_put_Caption(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Caption(This,noname,retval) ) 

#define Window2_SetSelectionContainer(This,Objects,retval)	\
    ( (This)->lpVtbl -> SetSelectionContainer(This,Objects,retval) ) 

#define Window2_get_IsFloating(This,retval)	\
    ( (This)->lpVtbl -> get_IsFloating(This,retval) ) 

#define Window2_put_IsFloating(This,noname,retval)	\
    ( (This)->lpVtbl -> put_IsFloating(This,noname,retval) ) 

#define Window2_get_AutoHides(This,retval)	\
    ( (This)->lpVtbl -> get_AutoHides(This,retval) ) 

#define Window2_put_AutoHides(This,noname,retval)	\
    ( (This)->lpVtbl -> put_AutoHides(This,noname,retval) ) 

#define Window2_SetTabPicture(This,Picture,retval)	\
    ( (This)->lpVtbl -> SetTabPicture(This,Picture,retval) ) 

#define Window2_get_ContextAttributes(This,retval)	\
    ( (This)->lpVtbl -> get_ContextAttributes(This,retval) ) 


#define Window2_get_CommandBars(This,ppcbs)	\
    ( (This)->lpVtbl -> get_CommandBars(This,ppcbs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Window2_INTERFACE_DEFINED__ */


#ifndef __SourceControlBindings_INTERFACE_DEFINED__
#define __SourceControlBindings_INTERFACE_DEFINED__

/* interface SourceControlBindings */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SourceControlBindings;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("544a6477-be0b-42ed-b47b-553ed8c5f22c")
    SourceControlBindings : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ SourceControl **ppSourceControl) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrSeverName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_LocalBinding( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrLocalPath) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerBinding( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrServerLocation) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProviderName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrProviderName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProviderRegKey( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrProviderRegKey) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SourceControlBindingsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SourceControlBindings * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SourceControlBindings * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SourceControlBindings * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SourceControlBindings * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SourceControlBindings * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SourceControlBindings * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SourceControlBindings * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SourceControlBindings * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SourceControlBindings * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ SourceControl **ppSourceControl);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerName )( 
            SourceControlBindings * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrSeverName);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocalBinding )( 
            SourceControlBindings * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrLocalPath);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerBinding )( 
            SourceControlBindings * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrServerLocation);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProviderName )( 
            SourceControlBindings * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrProviderName);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProviderRegKey )( 
            SourceControlBindings * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrProviderRegKey);
        
        END_INTERFACE
    } SourceControlBindingsVtbl;

    interface SourceControlBindings
    {
        CONST_VTBL struct SourceControlBindingsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SourceControlBindings_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SourceControlBindings_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SourceControlBindings_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SourceControlBindings_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SourceControlBindings_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SourceControlBindings_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SourceControlBindings_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SourceControlBindings_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define SourceControlBindings_get_Parent(This,ppSourceControl)	\
    ( (This)->lpVtbl -> get_Parent(This,ppSourceControl) ) 

#define SourceControlBindings_get_ServerName(This,lpbstrSeverName)	\
    ( (This)->lpVtbl -> get_ServerName(This,lpbstrSeverName) ) 

#define SourceControlBindings_get_LocalBinding(This,lpbstrLocalPath)	\
    ( (This)->lpVtbl -> get_LocalBinding(This,lpbstrLocalPath) ) 

#define SourceControlBindings_get_ServerBinding(This,lpbstrServerLocation)	\
    ( (This)->lpVtbl -> get_ServerBinding(This,lpbstrServerLocation) ) 

#define SourceControlBindings_get_ProviderName(This,lpbstrProviderName)	\
    ( (This)->lpVtbl -> get_ProviderName(This,lpbstrProviderName) ) 

#define SourceControlBindings_get_ProviderRegKey(This,lpbstrProviderRegKey)	\
    ( (This)->lpVtbl -> get_ProviderRegKey(This,lpbstrProviderRegKey) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SourceControlBindings_INTERFACE_DEFINED__ */


#ifndef __DTE2_INTERFACE_DEFINED__
#define __DTE2_INTERFACE_DEFINED__

/* interface DTE2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_DTE2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2EE1E9FA-0AFE-4348-A89F-ED9CB45C99CF")
    DTE2 : public _DTE
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToolWindows( 
            /* [retval][out] */ __RPC__deref_out_opt ToolWindows **ppcbs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetThemeColor( 
            vsThemeColors Element,
            /* [retval][out] */ __RPC__out /* external definition not present */ OLE_COLOR *pColor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct DTE2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DTE2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DTE2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DTE2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DTE2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DTE2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CommandBars )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Windows )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Windows **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Events )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Events **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AddIns )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt AddIns **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_MainWindow )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveWindow )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Quit )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayMode )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__out enum vsDisplay *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayMode )( 
            DTE2 * This,
            /* [in][idldescattr] */ enum vsDisplay noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Solution )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Commands )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Commands **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetObject )( 
            DTE2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            DTE2 * This,
            /* [idldescattr] */ __RPC__in BSTR Category,
            /* [idldescattr] */ __RPC__in BSTR Page,
            /* [retval][out] */ __RPC__deref_out_opt Properties **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedItems )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt SelectedItems **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CommandLineArguments )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *OpenFile )( 
            DTE2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ViewKind,
            /* [in][idldescattr] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt Window **retval);
        
        /* [id][propget][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpenFile )( 
            DTE2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ViewKind,
            /* [in][idldescattr] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_LocaleID )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_WindowConfigurations )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt WindowConfigurations **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Documents )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Documents **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveDocument )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Document **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ExecuteCommand )( 
            DTE2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR CommandName,
            /* [in][idldescattr] */ __RPC__in BSTR CommandArgs,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Globals )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Globals **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StatusBar )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt StatusBar **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_UserControl )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_UserControl )( 
            DTE2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectExtenders )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ObjectExtenders **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Find )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Find **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__out enum vsIDEMode *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *LaunchWizard )( 
            DTE2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR VSZFile,
            /* [in][idldescattr] */ __RPC__deref_in_opt SAFEARRAY * *ContextParams,
            /* [retval][out] */ __RPC__out enum wizardResult *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ItemOperations )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ItemOperations **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_UndoContext )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt UndoContext **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Macros )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Macros **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveSolutionProjects )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_MacrosIDE )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryRoot )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ContextAttributes )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ContextAttributes **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SourceControl )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt SourceControl **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressUI )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressUI )( 
            DTE2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Debugger )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Debugger **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SatelliteDllPath )( 
            DTE2 * This,
            /* [idldescattr] */ __RPC__in BSTR Path,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Edition )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToolWindows )( 
            DTE2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolWindows **ppcbs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetThemeColor )( 
            DTE2 * This,
            vsThemeColors Element,
            /* [retval][out] */ __RPC__out /* external definition not present */ OLE_COLOR *pColor);
        
        END_INTERFACE
    } DTE2Vtbl;

    interface DTE2
    {
        CONST_VTBL struct DTE2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DTE2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define DTE2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define DTE2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define DTE2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define DTE2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define DTE2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define DTE2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define DTE2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define DTE2_get_FileName(This,retval)	\
    ( (This)->lpVtbl -> get_FileName(This,retval) ) 

#define DTE2_get_Version(This,retval)	\
    ( (This)->lpVtbl -> get_Version(This,retval) ) 

#define DTE2_get_CommandBars(This,retval)	\
    ( (This)->lpVtbl -> get_CommandBars(This,retval) ) 

#define DTE2_get_Windows(This,retval)	\
    ( (This)->lpVtbl -> get_Windows(This,retval) ) 

#define DTE2_get_Events(This,retval)	\
    ( (This)->lpVtbl -> get_Events(This,retval) ) 

#define DTE2_get_AddIns(This,retval)	\
    ( (This)->lpVtbl -> get_AddIns(This,retval) ) 

#define DTE2_get_MainWindow(This,retval)	\
    ( (This)->lpVtbl -> get_MainWindow(This,retval) ) 

#define DTE2_get_ActiveWindow(This,retval)	\
    ( (This)->lpVtbl -> get_ActiveWindow(This,retval) ) 

#define DTE2_Quit(This,retval)	\
    ( (This)->lpVtbl -> Quit(This,retval) ) 

#define DTE2_get_DisplayMode(This,retval)	\
    ( (This)->lpVtbl -> get_DisplayMode(This,retval) ) 

#define DTE2_put_DisplayMode(This,noname,retval)	\
    ( (This)->lpVtbl -> put_DisplayMode(This,noname,retval) ) 

#define DTE2_get_Solution(This,retval)	\
    ( (This)->lpVtbl -> get_Solution(This,retval) ) 

#define DTE2_get_Commands(This,retval)	\
    ( (This)->lpVtbl -> get_Commands(This,retval) ) 

#define DTE2_GetObject(This,Name,retval)	\
    ( (This)->lpVtbl -> GetObject(This,Name,retval) ) 

#define DTE2_get_Properties(This,Category,Page,retval)	\
    ( (This)->lpVtbl -> get_Properties(This,Category,Page,retval) ) 

#define DTE2_get_SelectedItems(This,retval)	\
    ( (This)->lpVtbl -> get_SelectedItems(This,retval) ) 

#define DTE2_get_CommandLineArguments(This,retval)	\
    ( (This)->lpVtbl -> get_CommandLineArguments(This,retval) ) 

#define DTE2_OpenFile(This,ViewKind,FileName,retval)	\
    ( (This)->lpVtbl -> OpenFile(This,ViewKind,FileName,retval) ) 

#define DTE2_get_IsOpenFile(This,ViewKind,FileName,retval)	\
    ( (This)->lpVtbl -> get_IsOpenFile(This,ViewKind,FileName,retval) ) 

#define DTE2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define DTE2_get_LocaleID(This,retval)	\
    ( (This)->lpVtbl -> get_LocaleID(This,retval) ) 

#define DTE2_get_WindowConfigurations(This,retval)	\
    ( (This)->lpVtbl -> get_WindowConfigurations(This,retval) ) 

#define DTE2_get_Documents(This,retval)	\
    ( (This)->lpVtbl -> get_Documents(This,retval) ) 

#define DTE2_get_ActiveDocument(This,retval)	\
    ( (This)->lpVtbl -> get_ActiveDocument(This,retval) ) 

#define DTE2_ExecuteCommand(This,CommandName,CommandArgs,retval)	\
    ( (This)->lpVtbl -> ExecuteCommand(This,CommandName,CommandArgs,retval) ) 

#define DTE2_get_Globals(This,retval)	\
    ( (This)->lpVtbl -> get_Globals(This,retval) ) 

#define DTE2_get_StatusBar(This,retval)	\
    ( (This)->lpVtbl -> get_StatusBar(This,retval) ) 

#define DTE2_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define DTE2_get_UserControl(This,retval)	\
    ( (This)->lpVtbl -> get_UserControl(This,retval) ) 

#define DTE2_put_UserControl(This,noname,retval)	\
    ( (This)->lpVtbl -> put_UserControl(This,noname,retval) ) 

#define DTE2_get_ObjectExtenders(This,retval)	\
    ( (This)->lpVtbl -> get_ObjectExtenders(This,retval) ) 

#define DTE2_get_Find(This,retval)	\
    ( (This)->lpVtbl -> get_Find(This,retval) ) 

#define DTE2_get_Mode(This,retval)	\
    ( (This)->lpVtbl -> get_Mode(This,retval) ) 

#define DTE2_LaunchWizard(This,VSZFile,ContextParams,retval)	\
    ( (This)->lpVtbl -> LaunchWizard(This,VSZFile,ContextParams,retval) ) 

#define DTE2_get_ItemOperations(This,retval)	\
    ( (This)->lpVtbl -> get_ItemOperations(This,retval) ) 

#define DTE2_get_UndoContext(This,retval)	\
    ( (This)->lpVtbl -> get_UndoContext(This,retval) ) 

#define DTE2_get_Macros(This,retval)	\
    ( (This)->lpVtbl -> get_Macros(This,retval) ) 

#define DTE2_get_ActiveSolutionProjects(This,retval)	\
    ( (This)->lpVtbl -> get_ActiveSolutionProjects(This,retval) ) 

#define DTE2_get_MacrosIDE(This,retval)	\
    ( (This)->lpVtbl -> get_MacrosIDE(This,retval) ) 

#define DTE2_get_RegistryRoot(This,retval)	\
    ( (This)->lpVtbl -> get_RegistryRoot(This,retval) ) 

#define DTE2_get_Application(This,retval)	\
    ( (This)->lpVtbl -> get_Application(This,retval) ) 

#define DTE2_get_ContextAttributes(This,retval)	\
    ( (This)->lpVtbl -> get_ContextAttributes(This,retval) ) 

#define DTE2_get_SourceControl(This,retval)	\
    ( (This)->lpVtbl -> get_SourceControl(This,retval) ) 

#define DTE2_get_SuppressUI(This,retval)	\
    ( (This)->lpVtbl -> get_SuppressUI(This,retval) ) 

#define DTE2_put_SuppressUI(This,noname,retval)	\
    ( (This)->lpVtbl -> put_SuppressUI(This,noname,retval) ) 

#define DTE2_get_Debugger(This,retval)	\
    ( (This)->lpVtbl -> get_Debugger(This,retval) ) 

#define DTE2_SatelliteDllPath(This,Path,Name,retval)	\
    ( (This)->lpVtbl -> SatelliteDllPath(This,Path,Name,retval) ) 

#define DTE2_get_Edition(This,retval)	\
    ( (This)->lpVtbl -> get_Edition(This,retval) ) 


#define DTE2_get_ToolWindows(This,ppcbs)	\
    ( (This)->lpVtbl -> get_ToolWindows(This,ppcbs) ) 

#define DTE2_GetThemeColor(This,Element,pColor)	\
    ( (This)->lpVtbl -> GetThemeColor(This,Element,pColor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __DTE2_INTERFACE_DEFINED__ */


#ifndef __WindowVisibilityEventsRoot_INTERFACE_DEFINED__
#define __WindowVisibilityEventsRoot_INTERFACE_DEFINED__

/* interface WindowVisibilityEventsRoot */
/* [hidden][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_WindowVisibilityEventsRoot;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C7B4BCC9-E23E-400C-8821-C85B6B31369E")
    WindowVisibilityEventsRoot : public IDispatch
    {
    public:
        virtual /* [hidden][propget][id] */ HRESULT __stdcall get_WindowVisibilityEvents( 
            /* [in] */ __RPC__in /* external definition not present */ Window *WindowFilter,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct WindowVisibilityEventsRootVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            WindowVisibilityEventsRoot * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            WindowVisibilityEventsRoot * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            WindowVisibilityEventsRoot * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            WindowVisibilityEventsRoot * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            WindowVisibilityEventsRoot * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            WindowVisibilityEventsRoot * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            WindowVisibilityEventsRoot * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( __stdcall *get_WindowVisibilityEvents )( 
            WindowVisibilityEventsRoot * This,
            /* [in] */ __RPC__in /* external definition not present */ Window *WindowFilter,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppdisp);
        
        END_INTERFACE
    } WindowVisibilityEventsRootVtbl;

    interface WindowVisibilityEventsRoot
    {
        CONST_VTBL struct WindowVisibilityEventsRootVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define WindowVisibilityEventsRoot_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define WindowVisibilityEventsRoot_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define WindowVisibilityEventsRoot_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define WindowVisibilityEventsRoot_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define WindowVisibilityEventsRoot_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define WindowVisibilityEventsRoot_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define WindowVisibilityEventsRoot_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define WindowVisibilityEventsRoot_get_WindowVisibilityEvents(This,WindowFilter,ppdisp)	\
    ( (This)->lpVtbl -> get_WindowVisibilityEvents(This,WindowFilter,ppdisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __WindowVisibilityEventsRoot_INTERFACE_DEFINED__ */


#ifndef ___WindowVisibilityEvents_INTERFACE_DEFINED__
#define ___WindowVisibilityEvents_INTERFACE_DEFINED__

/* interface _WindowVisibilityEvents */
/* [helpstring][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID__WindowVisibilityEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("84DE07BC-43A2-4275-BCF9-D207D20E49ED")
    _WindowVisibilityEvents : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct _WindowVisibilityEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _WindowVisibilityEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _WindowVisibilityEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _WindowVisibilityEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _WindowVisibilityEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _WindowVisibilityEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _WindowVisibilityEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _WindowVisibilityEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _WindowVisibilityEventsVtbl;

    interface _WindowVisibilityEvents
    {
        CONST_VTBL struct _WindowVisibilityEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _WindowVisibilityEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _WindowVisibilityEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _WindowVisibilityEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _WindowVisibilityEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _WindowVisibilityEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _WindowVisibilityEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _WindowVisibilityEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___WindowVisibilityEvents_INTERFACE_DEFINED__ */


#ifndef ___dispWindowVisibilityEvents_DISPINTERFACE_DEFINED__
#define ___dispWindowVisibilityEvents_DISPINTERFACE_DEFINED__

/* dispinterface _dispWindowVisibilityEvents */
/* [uuid] */ 


EXTERN_C const IID DIID__dispWindowVisibilityEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("94259E4B-A44A-4B77-B18F-F2CC9A601D03")
    _dispWindowVisibilityEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _dispWindowVisibilityEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _dispWindowVisibilityEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _dispWindowVisibilityEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _dispWindowVisibilityEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _dispWindowVisibilityEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _dispWindowVisibilityEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _dispWindowVisibilityEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _dispWindowVisibilityEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _dispWindowVisibilityEventsVtbl;

    interface _dispWindowVisibilityEvents
    {
        CONST_VTBL struct _dispWindowVisibilityEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _dispWindowVisibilityEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _dispWindowVisibilityEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _dispWindowVisibilityEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _dispWindowVisibilityEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _dispWindowVisibilityEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _dispWindowVisibilityEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _dispWindowVisibilityEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___dispWindowVisibilityEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_WindowVisibilityEvents;

#ifdef __cplusplus

class DECLSPEC_UUID("8B7E04AD-B109-4B96-8BA3-2F348813F238")
WindowVisibilityEvents;
#endif

#ifndef ___TextDocumentKeyPressEventsRoot_INTERFACE_DEFINED__
#define ___TextDocumentKeyPressEventsRoot_INTERFACE_DEFINED__

/* interface _TextDocumentKeyPressEventsRoot */
/* [hidden][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID__TextDocumentKeyPressEventsRoot;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D7EADE3F-BD19-4422-9C4C-85A02535437C")
    _TextDocumentKeyPressEventsRoot : public IDispatch
    {
    public:
        virtual /* [hidden][propget][id] */ HRESULT __stdcall get_TextDocumentKeyPressEvents( 
            /* [in] */ __RPC__in /* external definition not present */ TextDocument *TextDocument,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _TextDocumentKeyPressEventsRootVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TextDocumentKeyPressEventsRoot * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TextDocumentKeyPressEventsRoot * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TextDocumentKeyPressEventsRoot * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TextDocumentKeyPressEventsRoot * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TextDocumentKeyPressEventsRoot * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TextDocumentKeyPressEventsRoot * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TextDocumentKeyPressEventsRoot * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( __stdcall *get_TextDocumentKeyPressEvents )( 
            _TextDocumentKeyPressEventsRoot * This,
            /* [in] */ __RPC__in /* external definition not present */ TextDocument *TextDocument,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppdisp);
        
        END_INTERFACE
    } _TextDocumentKeyPressEventsRootVtbl;

    interface _TextDocumentKeyPressEventsRoot
    {
        CONST_VTBL struct _TextDocumentKeyPressEventsRootVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TextDocumentKeyPressEventsRoot_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TextDocumentKeyPressEventsRoot_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TextDocumentKeyPressEventsRoot_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TextDocumentKeyPressEventsRoot_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TextDocumentKeyPressEventsRoot_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TextDocumentKeyPressEventsRoot_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TextDocumentKeyPressEventsRoot_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _TextDocumentKeyPressEventsRoot_get_TextDocumentKeyPressEvents(This,TextDocument,ppdisp)	\
    ( (This)->lpVtbl -> get_TextDocumentKeyPressEvents(This,TextDocument,ppdisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TextDocumentKeyPressEventsRoot_INTERFACE_DEFINED__ */


#ifndef ___TextDocumentKeyPressEvents_INTERFACE_DEFINED__
#define ___TextDocumentKeyPressEvents_INTERFACE_DEFINED__

/* interface _TextDocumentKeyPressEvents */
/* [helpstring][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID__TextDocumentKeyPressEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("505B7600-8FCC-487c-9E4F-C7FD0B5FB690")
    _TextDocumentKeyPressEvents : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct _TextDocumentKeyPressEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TextDocumentKeyPressEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TextDocumentKeyPressEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TextDocumentKeyPressEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TextDocumentKeyPressEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TextDocumentKeyPressEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TextDocumentKeyPressEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TextDocumentKeyPressEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _TextDocumentKeyPressEventsVtbl;

    interface _TextDocumentKeyPressEvents
    {
        CONST_VTBL struct _TextDocumentKeyPressEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TextDocumentKeyPressEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TextDocumentKeyPressEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TextDocumentKeyPressEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TextDocumentKeyPressEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TextDocumentKeyPressEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TextDocumentKeyPressEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TextDocumentKeyPressEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TextDocumentKeyPressEvents_INTERFACE_DEFINED__ */


#ifndef ___dispTextDocumentKeyPressEvents_DISPINTERFACE_DEFINED__
#define ___dispTextDocumentKeyPressEvents_DISPINTERFACE_DEFINED__

/* dispinterface _dispTextDocumentKeyPressEvents */
/* [uuid] */ 


EXTERN_C const IID DIID__dispTextDocumentKeyPressEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("4B57C85E-5100-4caf-9301-4544B85C7945")
    _dispTextDocumentKeyPressEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _dispTextDocumentKeyPressEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _dispTextDocumentKeyPressEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _dispTextDocumentKeyPressEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _dispTextDocumentKeyPressEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _dispTextDocumentKeyPressEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _dispTextDocumentKeyPressEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _dispTextDocumentKeyPressEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _dispTextDocumentKeyPressEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _dispTextDocumentKeyPressEventsVtbl;

    interface _dispTextDocumentKeyPressEvents
    {
        CONST_VTBL struct _dispTextDocumentKeyPressEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _dispTextDocumentKeyPressEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _dispTextDocumentKeyPressEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _dispTextDocumentKeyPressEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _dispTextDocumentKeyPressEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _dispTextDocumentKeyPressEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _dispTextDocumentKeyPressEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _dispTextDocumentKeyPressEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___dispTextDocumentKeyPressEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_TextDocumentKeyPressEvents;

#ifdef __cplusplus

class DECLSPEC_UUID("E7532A4E-AB9E-41DF-BB9A-7C764677E5C3")
TextDocumentKeyPressEvents;
#endif

#ifndef ___PublishEvents_INTERFACE_DEFINED__
#define ___PublishEvents_INTERFACE_DEFINED__

/* interface _PublishEvents */
/* [object][helpstring][oleautomation][uuid] */ 


EXTERN_C const IID IID__PublishEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("827be7dc-1817-4171-a8ff-aab3854913bf")
    _PublishEvents : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct _PublishEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PublishEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PublishEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PublishEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PublishEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PublishEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PublishEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PublishEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _PublishEventsVtbl;

    interface _PublishEvents
    {
        CONST_VTBL struct _PublishEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PublishEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PublishEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PublishEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PublishEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PublishEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PublishEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PublishEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PublishEvents_INTERFACE_DEFINED__ */


#ifndef ___dispPublishEvents_DISPINTERFACE_DEFINED__
#define ___dispPublishEvents_DISPINTERFACE_DEFINED__

/* dispinterface _dispPublishEvents */
/* [uuid] */ 


EXTERN_C const IID DIID__dispPublishEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("a0b40b93-9311-410f-b210-1f65bafb0e27")
    _dispPublishEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _dispPublishEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _dispPublishEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _dispPublishEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _dispPublishEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _dispPublishEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _dispPublishEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _dispPublishEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _dispPublishEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _dispPublishEventsVtbl;

    interface _dispPublishEvents
    {
        CONST_VTBL struct _dispPublishEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _dispPublishEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _dispPublishEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _dispPublishEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _dispPublishEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _dispPublishEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _dispPublishEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _dispPublishEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___dispPublishEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_PublishEvents;

#ifdef __cplusplus

class DECLSPEC_UUID("045448ea-e8c1-4122-ac7b-d96d8e5c6e5b")
PublishEvents;
#endif

#ifndef __Events2_INTERFACE_DEFINED__
#define __Events2_INTERFACE_DEFINED__

/* interface Events2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Events2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BED31E8C-F845-4397-AF13-6B82A6996C0D")
    Events2 : public Events
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItemsEvents( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ ProjectItemsEvents **ppProjectItemsEvents) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectsEvents( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ ProjectsEvents **ppProjectsEvents) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextDocumentKeyPressEvents( 
            /* [defaultvalue][in] */ __RPC__in /* external definition not present */ TextDocument *TextDocument,
            /* [retval][out] */ __RPC__deref_out_opt TextDocumentKeyPressEvents	**ppEditorKeyPressEvents) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CodeModelEvents( 
            /* [defaultvalue][in] */ __RPC__in /* external definition not present */ CodeElement *Reserved,
            /* [retval][out] */ __RPC__deref_out_opt CodeModelEvents	**ppdisp) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WindowVisibilityEvents( 
            /* [defaultvalue][in] */ __RPC__in /* external definition not present */ Window *WindowFilter,
            /* [retval][out] */ __RPC__deref_out_opt WindowVisibilityEvents	**ppdisp) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DebuggerProcessEvents( 
            /* [retval][out] */ __RPC__deref_out_opt DebuggerProcessEvents	**ppDebuggerProcessEvents) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DebuggerExpressionEvaluationEvents( 
            /* [retval][out] */ __RPC__deref_out_opt DebuggerExpressionEvaluationEvents	**ppDebuggerExpressionEvalutionEvents) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PublishEvents( 
            /* [retval][out] */ __RPC__deref_out_opt PublishEvents	**ppPublishEvents) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Events2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Events2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Events2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Events2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Events2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Events2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Events2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Events2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CommandBarEvents )( 
            Events2 * This,
            /* [in][idldescattr] */ __RPC__in_opt IDispatch *CommandBarControl,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CommandEvents )( 
            Events2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Guid,
            /* [in][idldescattr] */ signed long ID,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_BuildEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_WindowEvents )( 
            Events2 * This,
            /* [in][idldescattr] */ __RPC__in_opt Window *WindowFilter,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_OutputWindowEvents )( 
            Events2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Pane,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FindEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_TaskListEvents )( 
            Events2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Filter,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTEEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentEvents )( 
            Events2 * This,
            /* [in][idldescattr] */ __RPC__in_opt Document *Document,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionItemsEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_MiscFilesEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DebuggerEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_TextEditorEvents )( 
            Events2 * This,
            /* [in][idldescattr] */ __RPC__in_opt TextDocument *TextDocumentFilter,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetObject )( 
            Events2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItemsEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ ProjectItemsEvents **ppProjectItemsEvents);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectsEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ ProjectsEvents **ppProjectsEvents);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextDocumentKeyPressEvents )( 
            Events2 * This,
            /* [defaultvalue][in] */ __RPC__in /* external definition not present */ TextDocument *TextDocument,
            /* [retval][out] */ __RPC__deref_out_opt TextDocumentKeyPressEvents	**ppEditorKeyPressEvents);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CodeModelEvents )( 
            Events2 * This,
            /* [defaultvalue][in] */ __RPC__in /* external definition not present */ CodeElement *Reserved,
            /* [retval][out] */ __RPC__deref_out_opt CodeModelEvents	**ppdisp);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WindowVisibilityEvents )( 
            Events2 * This,
            /* [defaultvalue][in] */ __RPC__in /* external definition not present */ Window *WindowFilter,
            /* [retval][out] */ __RPC__deref_out_opt WindowVisibilityEvents	**ppdisp);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DebuggerProcessEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt DebuggerProcessEvents	**ppDebuggerProcessEvents);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DebuggerExpressionEvaluationEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt DebuggerExpressionEvaluationEvents	**ppDebuggerExpressionEvalutionEvents);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PublishEvents )( 
            Events2 * This,
            /* [retval][out] */ __RPC__deref_out_opt PublishEvents	**ppPublishEvents);
        
        END_INTERFACE
    } Events2Vtbl;

    interface Events2
    {
        CONST_VTBL struct Events2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Events2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Events2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Events2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Events2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Events2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Events2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Events2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Events2_get_CommandBarEvents(This,CommandBarControl,retval)	\
    ( (This)->lpVtbl -> get_CommandBarEvents(This,CommandBarControl,retval) ) 

#define Events2_get_CommandEvents(This,Guid,ID,retval)	\
    ( (This)->lpVtbl -> get_CommandEvents(This,Guid,ID,retval) ) 

#define Events2_get_SelectionEvents(This,retval)	\
    ( (This)->lpVtbl -> get_SelectionEvents(This,retval) ) 

#define Events2_get_SolutionEvents(This,retval)	\
    ( (This)->lpVtbl -> get_SolutionEvents(This,retval) ) 

#define Events2_get_BuildEvents(This,retval)	\
    ( (This)->lpVtbl -> get_BuildEvents(This,retval) ) 

#define Events2_get_WindowEvents(This,WindowFilter,retval)	\
    ( (This)->lpVtbl -> get_WindowEvents(This,WindowFilter,retval) ) 

#define Events2_get_OutputWindowEvents(This,Pane,retval)	\
    ( (This)->lpVtbl -> get_OutputWindowEvents(This,Pane,retval) ) 

#define Events2_get_FindEvents(This,retval)	\
    ( (This)->lpVtbl -> get_FindEvents(This,retval) ) 

#define Events2_get_TaskListEvents(This,Filter,retval)	\
    ( (This)->lpVtbl -> get_TaskListEvents(This,Filter,retval) ) 

#define Events2_get_DTEEvents(This,retval)	\
    ( (This)->lpVtbl -> get_DTEEvents(This,retval) ) 

#define Events2_get_DocumentEvents(This,Document,retval)	\
    ( (This)->lpVtbl -> get_DocumentEvents(This,Document,retval) ) 

#define Events2_get_SolutionItemsEvents(This,retval)	\
    ( (This)->lpVtbl -> get_SolutionItemsEvents(This,retval) ) 

#define Events2_get_MiscFilesEvents(This,retval)	\
    ( (This)->lpVtbl -> get_MiscFilesEvents(This,retval) ) 

#define Events2_get_DebuggerEvents(This,retval)	\
    ( (This)->lpVtbl -> get_DebuggerEvents(This,retval) ) 

#define Events2_get_TextEditorEvents(This,TextDocumentFilter,retval)	\
    ( (This)->lpVtbl -> get_TextEditorEvents(This,TextDocumentFilter,retval) ) 

#define Events2_GetObject(This,Name,retval)	\
    ( (This)->lpVtbl -> GetObject(This,Name,retval) ) 


#define Events2_get_ProjectItemsEvents(This,ppProjectItemsEvents)	\
    ( (This)->lpVtbl -> get_ProjectItemsEvents(This,ppProjectItemsEvents) ) 

#define Events2_get_ProjectsEvents(This,ppProjectsEvents)	\
    ( (This)->lpVtbl -> get_ProjectsEvents(This,ppProjectsEvents) ) 

#define Events2_get_TextDocumentKeyPressEvents(This,TextDocument,ppEditorKeyPressEvents)	\
    ( (This)->lpVtbl -> get_TextDocumentKeyPressEvents(This,TextDocument,ppEditorKeyPressEvents) ) 

#define Events2_get_CodeModelEvents(This,Reserved,ppdisp)	\
    ( (This)->lpVtbl -> get_CodeModelEvents(This,Reserved,ppdisp) ) 

#define Events2_get_WindowVisibilityEvents(This,WindowFilter,ppdisp)	\
    ( (This)->lpVtbl -> get_WindowVisibilityEvents(This,WindowFilter,ppdisp) ) 

#define Events2_get_DebuggerProcessEvents(This,ppDebuggerProcessEvents)	\
    ( (This)->lpVtbl -> get_DebuggerProcessEvents(This,ppDebuggerProcessEvents) ) 

#define Events2_get_DebuggerExpressionEvaluationEvents(This,ppDebuggerExpressionEvalutionEvents)	\
    ( (This)->lpVtbl -> get_DebuggerExpressionEvaluationEvents(This,ppDebuggerExpressionEvalutionEvents) ) 

#define Events2_get_PublishEvents(This,ppPublishEvents)	\
    ( (This)->lpVtbl -> get_PublishEvents(This,ppPublishEvents) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Events2_INTERFACE_DEFINED__ */


#ifndef __Solution2_INTERFACE_DEFINED__
#define __Solution2_INTERFACE_DEFINED__

/* interface Solution2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Solution2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FA238614-FBB1-4314-A7F7-49AE8BB6C6BA")
    Solution2 : public _Solution
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddSolutionFolder( 
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Project **pProject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetProjectTemplate( 
            __RPC__in BSTR TemplateName,
            __RPC__in BSTR Language,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullPath) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetProjectItemTemplate( 
            __RPC__in BSTR TemplateName,
            __RPC__in BSTR Language,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullPath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Solution2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Solution2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Solution2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Solution2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Solution2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Solution2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Solution2 * This,
            /* [in][idldescattr] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Project **retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            Solution2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddFromTemplate )( 
            Solution2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR FileName,
            /* [in][idldescattr] */ __RPC__in BSTR Destination,
            /* [in][idldescattr] */ __RPC__in BSTR ProjectName,
            /* [in][idldescattr] */ BOOLEAN Exclusive,
            /* [retval][out] */ __RPC__deref_out_opt Project **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddFromFile )( 
            Solution2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR FileName,
            /* [in][idldescattr] */ BOOLEAN Exclusive,
            /* [retval][out] */ __RPC__deref_out_opt Project **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            Solution2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            Solution2 * This,
            /* [in][idldescattr] */ BOOLEAN SaveFirst,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Properties **retval);
        
        /* [id][propget][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsDirty )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][hidden][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_IsDirty )( 
            Solution2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            Solution2 * This,
            /* [in][idldescattr] */ __RPC__in_opt Project *proj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_TemplatePath )( 
            Solution2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ProjectType,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Saved )( 
            Solution2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Globals )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Globals **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AddIns )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__deref_out_opt AddIns **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            Solution2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpen )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionBuild )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionBuild **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Create )( 
            Solution2 * This,
            /* [idldescattr] */ __RPC__in BSTR Destination,
            /* [idldescattr] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Projects )( 
            Solution2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Projects **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *FindProjectItem )( 
            Solution2 * This,
            /* [idldescattr] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ProjectItemsTemplatePath )( 
            Solution2 * This,
            /* [idldescattr] */ __RPC__in BSTR ProjectKind,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddSolutionFolder )( 
            Solution2 * This,
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Project **pProject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetProjectTemplate )( 
            Solution2 * This,
            __RPC__in BSTR TemplateName,
            __RPC__in BSTR Language,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullPath);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetProjectItemTemplate )( 
            Solution2 * This,
            __RPC__in BSTR TemplateName,
            __RPC__in BSTR Language,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullPath);
        
        END_INTERFACE
    } Solution2Vtbl;

    interface Solution2
    {
        CONST_VTBL struct Solution2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Solution2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Solution2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Solution2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Solution2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Solution2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Solution2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Solution2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Solution2_Item(This,index,retval)	\
    ( (This)->lpVtbl -> Item(This,index,retval) ) 

#define Solution2__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> _NewEnum(This,retval) ) 

#define Solution2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define Solution2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define Solution2_get_Count(This,retval)	\
    ( (This)->lpVtbl -> get_Count(This,retval) ) 

#define Solution2_get_FileName(This,retval)	\
    ( (This)->lpVtbl -> get_FileName(This,retval) ) 

#define Solution2_SaveAs(This,FileName,retval)	\
    ( (This)->lpVtbl -> SaveAs(This,FileName,retval) ) 

#define Solution2_AddFromTemplate(This,FileName,Destination,ProjectName,Exclusive,retval)	\
    ( (This)->lpVtbl -> AddFromTemplate(This,FileName,Destination,ProjectName,Exclusive,retval) ) 

#define Solution2_AddFromFile(This,FileName,Exclusive,retval)	\
    ( (This)->lpVtbl -> AddFromFile(This,FileName,Exclusive,retval) ) 

#define Solution2_Open(This,FileName,retval)	\
    ( (This)->lpVtbl -> Open(This,FileName,retval) ) 

#define Solution2_Close(This,SaveFirst,retval)	\
    ( (This)->lpVtbl -> Close(This,SaveFirst,retval) ) 

#define Solution2_get_Properties(This,retval)	\
    ( (This)->lpVtbl -> get_Properties(This,retval) ) 

#define Solution2_get_IsDirty(This,retval)	\
    ( (This)->lpVtbl -> get_IsDirty(This,retval) ) 

#define Solution2_put_IsDirty(This,noname,retval)	\
    ( (This)->lpVtbl -> put_IsDirty(This,noname,retval) ) 

#define Solution2_Remove(This,proj,retval)	\
    ( (This)->lpVtbl -> Remove(This,proj,retval) ) 

#define Solution2_get_TemplatePath(This,ProjectType,retval)	\
    ( (This)->lpVtbl -> get_TemplatePath(This,ProjectType,retval) ) 

#define Solution2_get_FullName(This,retval)	\
    ( (This)->lpVtbl -> get_FullName(This,retval) ) 

#define Solution2_get_Saved(This,retval)	\
    ( (This)->lpVtbl -> get_Saved(This,retval) ) 

#define Solution2_put_Saved(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Saved(This,noname,retval) ) 

#define Solution2_get_Globals(This,retval)	\
    ( (This)->lpVtbl -> get_Globals(This,retval) ) 

#define Solution2_get_AddIns(This,retval)	\
    ( (This)->lpVtbl -> get_AddIns(This,retval) ) 

#define Solution2_get_Extender(This,ExtenderName,retval)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,retval) ) 

#define Solution2_get_ExtenderNames(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,retval) ) 

#define Solution2_get_ExtenderCATID(This,retval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,retval) ) 

#define Solution2_get_IsOpen(This,retval)	\
    ( (This)->lpVtbl -> get_IsOpen(This,retval) ) 

#define Solution2_get_SolutionBuild(This,retval)	\
    ( (This)->lpVtbl -> get_SolutionBuild(This,retval) ) 

#define Solution2_Create(This,Destination,Name,retval)	\
    ( (This)->lpVtbl -> Create(This,Destination,Name,retval) ) 

#define Solution2_get_Projects(This,retval)	\
    ( (This)->lpVtbl -> get_Projects(This,retval) ) 

#define Solution2_FindProjectItem(This,FileName,retval)	\
    ( (This)->lpVtbl -> FindProjectItem(This,FileName,retval) ) 

#define Solution2_ProjectItemsTemplatePath(This,ProjectKind,retval)	\
    ( (This)->lpVtbl -> ProjectItemsTemplatePath(This,ProjectKind,retval) ) 


#define Solution2_AddSolutionFolder(This,Name,pProject)	\
    ( (This)->lpVtbl -> AddSolutionFolder(This,Name,pProject) ) 

#define Solution2_GetProjectTemplate(This,TemplateName,Language,pFullPath)	\
    ( (This)->lpVtbl -> GetProjectTemplate(This,TemplateName,Language,pFullPath) ) 

#define Solution2_GetProjectItemTemplate(This,TemplateName,Language,pFullPath)	\
    ( (This)->lpVtbl -> GetProjectItemTemplate(This,TemplateName,Language,pFullPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Solution2_INTERFACE_DEFINED__ */


#ifndef __SolutionFolder_INTERFACE_DEFINED__
#define __SolutionFolder_INTERFACE_DEFINED__

/* interface SolutionFolder */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SolutionFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F8F69788-267C-4408-8967-74F26108C438")
    SolutionFolder : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Project **ppProject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddSolutionFolder( 
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Project **pProject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFromFile( 
            /* [in] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Project **ppProject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFromTemplate( 
            /* [in] */ __RPC__in BSTR FileName,
            /* [in] */ __RPC__in BSTR Destination,
            /* [in] */ __RPC__in BSTR ProjectName,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Project **ppProject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Hidden( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pHidden) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Hidden( 
            VARIANT_BOOL hidden) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SolutionFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SolutionFolder * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SolutionFolder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SolutionFolder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SolutionFolder * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SolutionFolder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SolutionFolder * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SolutionFolder * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SolutionFolder * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SolutionFolder * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Project **ppProject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddSolutionFolder )( 
            SolutionFolder * This,
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Project **pProject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFromFile )( 
            SolutionFolder * This,
            /* [in] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Project **ppProject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFromTemplate )( 
            SolutionFolder * This,
            /* [in] */ __RPC__in BSTR FileName,
            /* [in] */ __RPC__in BSTR Destination,
            /* [in] */ __RPC__in BSTR ProjectName,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ Project **ppProject);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hidden )( 
            SolutionFolder * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pHidden);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Hidden )( 
            SolutionFolder * This,
            VARIANT_BOOL hidden);
        
        END_INTERFACE
    } SolutionFolderVtbl;

    interface SolutionFolder
    {
        CONST_VTBL struct SolutionFolderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SolutionFolder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SolutionFolder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SolutionFolder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SolutionFolder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SolutionFolder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SolutionFolder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SolutionFolder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SolutionFolder_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define SolutionFolder_get_Parent(This,ppProject)	\
    ( (This)->lpVtbl -> get_Parent(This,ppProject) ) 

#define SolutionFolder_AddSolutionFolder(This,Name,pProject)	\
    ( (This)->lpVtbl -> AddSolutionFolder(This,Name,pProject) ) 

#define SolutionFolder_AddFromFile(This,FileName,ppProject)	\
    ( (This)->lpVtbl -> AddFromFile(This,FileName,ppProject) ) 

#define SolutionFolder_AddFromTemplate(This,FileName,Destination,ProjectName,ppProject)	\
    ( (This)->lpVtbl -> AddFromTemplate(This,FileName,Destination,ProjectName,ppProject) ) 

#define SolutionFolder_get_Hidden(This,pHidden)	\
    ( (This)->lpVtbl -> get_Hidden(This,pHidden) ) 

#define SolutionFolder_put_Hidden(This,hidden)	\
    ( (This)->lpVtbl -> put_Hidden(This,hidden) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SolutionFolder_INTERFACE_DEFINED__ */


#ifndef __TaskItems2_INTERFACE_DEFINED__
#define __TaskItems2_INTERFACE_DEFINED__

/* interface TaskItems2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TaskItems2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B820F931-645A-473F-8246-922CF069E1FE")
    TaskItems2 : public TaskItems
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add2( 
            /* [in] */ __RPC__in BSTR Category,
            /* [in] */ __RPC__in BSTR SubCategory,
            /* [in] */ __RPC__in BSTR Description,
            /* [defaultvalue][in] */ long Priority,
            /* [optional][in] */ VARIANT Icon,
            /* [defaultvalue][in] */ VARIANT_BOOL Checkable,
            /* [defaultvalue][in] */ __RPC__in BSTR File,
            /* [defaultvalue][in] */ long Line,
            /* [defaultvalue][in] */ VARIANT_BOOL CanUserDelete,
            /* [defaultvalue][in] */ VARIANT_BOOL FlushItem,
            /* [defaultvalue][in] */ VARIANT_BOOL AutoNavigate,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TaskItem **pTaskItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TaskItems2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TaskItems2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            TaskItems2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            TaskItems2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TaskItems2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TaskItems2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TaskItems2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TaskItems2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TaskItems2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TaskItems2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TaskList **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            TaskItems2 * This,
            /* [in][idldescattr] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt TaskItem **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            TaskItems2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            TaskItems2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Category,
            /* [in][idldescattr] */ __RPC__in BSTR SubCategory,
            /* [in][idldescattr] */ __RPC__in BSTR Description,
            /* [in][idldescattr] */ enum vsTaskPriority Priority,
            /* [in][idldescattr] */ VARIANT Icon,
            /* [in][idldescattr] */ BOOLEAN Checkable,
            /* [in][idldescattr] */ __RPC__in BSTR File,
            /* [in][idldescattr] */ signed long Line,
            /* [in][idldescattr] */ BOOLEAN CanUserDelete,
            /* [in][idldescattr] */ BOOLEAN FlushItem,
            /* [retval][out] */ __RPC__deref_out_opt TaskItem **retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            TaskItems2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ForceItemsToTaskList )( 
            TaskItems2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add2 )( 
            TaskItems2 * This,
            /* [in] */ __RPC__in BSTR Category,
            /* [in] */ __RPC__in BSTR SubCategory,
            /* [in] */ __RPC__in BSTR Description,
            /* [defaultvalue][in] */ long Priority,
            /* [optional][in] */ VARIANT Icon,
            /* [defaultvalue][in] */ VARIANT_BOOL Checkable,
            /* [defaultvalue][in] */ __RPC__in BSTR File,
            /* [defaultvalue][in] */ long Line,
            /* [defaultvalue][in] */ VARIANT_BOOL CanUserDelete,
            /* [defaultvalue][in] */ VARIANT_BOOL FlushItem,
            /* [defaultvalue][in] */ VARIANT_BOOL AutoNavigate,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ TaskItem **pTaskItem);
        
        END_INTERFACE
    } TaskItems2Vtbl;

    interface TaskItems2
    {
        CONST_VTBL struct TaskItems2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TaskItems2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define TaskItems2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define TaskItems2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define TaskItems2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define TaskItems2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define TaskItems2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define TaskItems2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define TaskItems2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define TaskItems2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define TaskItems2_Item(This,index,retval)	\
    ( (This)->lpVtbl -> Item(This,index,retval) ) 

#define TaskItems2_get_Count(This,retval)	\
    ( (This)->lpVtbl -> get_Count(This,retval) ) 

#define TaskItems2_Add(This,Category,SubCategory,Description,Priority,Icon,Checkable,File,Line,CanUserDelete,FlushItem,retval)	\
    ( (This)->lpVtbl -> Add(This,Category,SubCategory,Description,Priority,Icon,Checkable,File,Line,CanUserDelete,FlushItem,retval) ) 

#define TaskItems2__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> _NewEnum(This,retval) ) 

#define TaskItems2_ForceItemsToTaskList(This,retval)	\
    ( (This)->lpVtbl -> ForceItemsToTaskList(This,retval) ) 


#define TaskItems2_Add2(This,Category,SubCategory,Description,Priority,Icon,Checkable,File,Line,CanUserDelete,FlushItem,AutoNavigate,pTaskItem)	\
    ( (This)->lpVtbl -> Add2(This,Category,SubCategory,Description,Priority,Icon,Checkable,File,Line,CanUserDelete,FlushItem,AutoNavigate,pTaskItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TaskItems2_INTERFACE_DEFINED__ */


#ifndef __EditPoint2_INTERFACE_DEFINED__
#define __EditPoint2_INTERFACE_DEFINED__

/* interface EditPoint2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_EditPoint2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("136AFA9F-F243-4abb-A8F8-4C2D26C47163")
    EditPoint2 : public EditPoint
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE InsertNewLine( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct EditPoint2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            EditPoint2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextDocument **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Line )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_LineCharOffset )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AbsoluteCharOffset )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayColumn )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AtEndOfDocument )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AtStartOfDocument )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AtEndOfLine )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_AtStartOfLine )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_LineLength )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *EqualTo )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *LessThan )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GreaterThan )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *TryToShow )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ enum vsPaneShowHow How,
            /* [optional][in][idldescattr] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_CodeElement )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ enum vsCMElement Scope,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *CreateEditPoint )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__deref_out_opt EditPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *CharLeft )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ signed long Count,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *CharRight )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ signed long Count,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *EndOfLine )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *StartOfLine )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *EndOfDocument )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *StartOfDocument )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *WordLeft )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ signed long Count,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *WordRight )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ signed long Count,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *LineUp )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ signed long Count,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *LineDown )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ signed long Count,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *MoveToPoint )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *MoveToLineAndOffset )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ signed long Line,
            /* [in][idldescattr] */ signed long Offset,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *MoveToAbsoluteOffset )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ signed long Offset,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SetBookmark )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ClearBookmark )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *NextBookmark )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *PreviousBookmark )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *PadToColumn )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ signed long Column,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Text,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *InsertFromFile )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR File,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetText )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetLines )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ signed long Start,
            /* [in][idldescattr] */ signed long ExclusiveEnd,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ VARIANT PointOrCount,
            /* [in][idldescattr] */ BOOLEAN Append,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Cut )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ VARIANT PointOrCount,
            /* [in][idldescattr] */ BOOLEAN Append,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Paste )( 
            EditPoint2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ReadOnly )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *FindPattern )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR Pattern,
            /* [in][idldescattr] */ signed long vsFindOptionsValue,
            /* [out][in][idldescattr] */ __RPC__deref_inout_opt EditPoint **EndPoint,
            /* [out][in][idldescattr] */ __RPC__deref_inout_opt TextRanges **Tags,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ReplacePattern )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in_opt TextPoint *Point,
            /* [in][idldescattr] */ __RPC__in BSTR Pattern,
            /* [in][idldescattr] */ __RPC__in BSTR Replace,
            /* [in][idldescattr] */ signed long vsFindOptionsValue,
            /* [out][in][idldescattr] */ __RPC__deref_inout_opt TextRanges **Tags,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Indent )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in_opt TextPoint *Point,
            /* [in][idldescattr] */ signed long Count,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Unindent )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in_opt TextPoint *Point,
            /* [in][idldescattr] */ signed long Count,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SmartFormat )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *OutlineSection )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ReplaceText )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ VARIANT PointOrCount,
            /* [in][idldescattr] */ __RPC__in BSTR Text,
            /* [in][idldescattr] */ signed long Flags,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ChangeCase )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ VARIANT PointOrCount,
            /* [in][idldescattr] */ enum vsCaseOptions How,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *DeleteWhitespace )( 
            EditPoint2 * This,
            /* [in][idldescattr] */ enum vsWhitespaceOptions Direction,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *InsertNewLine )( 
            EditPoint2 * This,
            /* [defaultvalue][in] */ long Count);
        
        END_INTERFACE
    } EditPoint2Vtbl;

    interface EditPoint2
    {
        CONST_VTBL struct EditPoint2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define EditPoint2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define EditPoint2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define EditPoint2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define EditPoint2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define EditPoint2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define EditPoint2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define EditPoint2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define EditPoint2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define EditPoint2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define EditPoint2_get_Line(This,retval)	\
    ( (This)->lpVtbl -> get_Line(This,retval) ) 

#define EditPoint2_get_LineCharOffset(This,retval)	\
    ( (This)->lpVtbl -> get_LineCharOffset(This,retval) ) 

#define EditPoint2_get_AbsoluteCharOffset(This,retval)	\
    ( (This)->lpVtbl -> get_AbsoluteCharOffset(This,retval) ) 

#define EditPoint2_get_DisplayColumn(This,retval)	\
    ( (This)->lpVtbl -> get_DisplayColumn(This,retval) ) 

#define EditPoint2_get_AtEndOfDocument(This,retval)	\
    ( (This)->lpVtbl -> get_AtEndOfDocument(This,retval) ) 

#define EditPoint2_get_AtStartOfDocument(This,retval)	\
    ( (This)->lpVtbl -> get_AtStartOfDocument(This,retval) ) 

#define EditPoint2_get_AtEndOfLine(This,retval)	\
    ( (This)->lpVtbl -> get_AtEndOfLine(This,retval) ) 

#define EditPoint2_get_AtStartOfLine(This,retval)	\
    ( (This)->lpVtbl -> get_AtStartOfLine(This,retval) ) 

#define EditPoint2_get_LineLength(This,retval)	\
    ( (This)->lpVtbl -> get_LineLength(This,retval) ) 

#define EditPoint2_EqualTo(This,Point,retval)	\
    ( (This)->lpVtbl -> EqualTo(This,Point,retval) ) 

#define EditPoint2_LessThan(This,Point,retval)	\
    ( (This)->lpVtbl -> LessThan(This,Point,retval) ) 

#define EditPoint2_GreaterThan(This,Point,retval)	\
    ( (This)->lpVtbl -> GreaterThan(This,Point,retval) ) 

#define EditPoint2_TryToShow(This,How,PointOrCount,retval)	\
    ( (This)->lpVtbl -> TryToShow(This,How,PointOrCount,retval) ) 

#define EditPoint2_get_CodeElement(This,Scope,retval)	\
    ( (This)->lpVtbl -> get_CodeElement(This,Scope,retval) ) 

#define EditPoint2_CreateEditPoint(This,retval)	\
    ( (This)->lpVtbl -> CreateEditPoint(This,retval) ) 

#define EditPoint2_CharLeft(This,Count,retval)	\
    ( (This)->lpVtbl -> CharLeft(This,Count,retval) ) 

#define EditPoint2_CharRight(This,Count,retval)	\
    ( (This)->lpVtbl -> CharRight(This,Count,retval) ) 

#define EditPoint2_EndOfLine(This,retval)	\
    ( (This)->lpVtbl -> EndOfLine(This,retval) ) 

#define EditPoint2_StartOfLine(This,retval)	\
    ( (This)->lpVtbl -> StartOfLine(This,retval) ) 

#define EditPoint2_EndOfDocument(This,retval)	\
    ( (This)->lpVtbl -> EndOfDocument(This,retval) ) 

#define EditPoint2_StartOfDocument(This,retval)	\
    ( (This)->lpVtbl -> StartOfDocument(This,retval) ) 

#define EditPoint2_WordLeft(This,Count,retval)	\
    ( (This)->lpVtbl -> WordLeft(This,Count,retval) ) 

#define EditPoint2_WordRight(This,Count,retval)	\
    ( (This)->lpVtbl -> WordRight(This,Count,retval) ) 

#define EditPoint2_LineUp(This,Count,retval)	\
    ( (This)->lpVtbl -> LineUp(This,Count,retval) ) 

#define EditPoint2_LineDown(This,Count,retval)	\
    ( (This)->lpVtbl -> LineDown(This,Count,retval) ) 

#define EditPoint2_MoveToPoint(This,Point,retval)	\
    ( (This)->lpVtbl -> MoveToPoint(This,Point,retval) ) 

#define EditPoint2_MoveToLineAndOffset(This,Line,Offset,retval)	\
    ( (This)->lpVtbl -> MoveToLineAndOffset(This,Line,Offset,retval) ) 

#define EditPoint2_MoveToAbsoluteOffset(This,Offset,retval)	\
    ( (This)->lpVtbl -> MoveToAbsoluteOffset(This,Offset,retval) ) 

#define EditPoint2_SetBookmark(This,retval)	\
    ( (This)->lpVtbl -> SetBookmark(This,retval) ) 

#define EditPoint2_ClearBookmark(This,retval)	\
    ( (This)->lpVtbl -> ClearBookmark(This,retval) ) 

#define EditPoint2_NextBookmark(This,retval)	\
    ( (This)->lpVtbl -> NextBookmark(This,retval) ) 

#define EditPoint2_PreviousBookmark(This,retval)	\
    ( (This)->lpVtbl -> PreviousBookmark(This,retval) ) 

#define EditPoint2_PadToColumn(This,Column,retval)	\
    ( (This)->lpVtbl -> PadToColumn(This,Column,retval) ) 

#define EditPoint2_Insert(This,Text,retval)	\
    ( (This)->lpVtbl -> Insert(This,Text,retval) ) 

#define EditPoint2_InsertFromFile(This,File,retval)	\
    ( (This)->lpVtbl -> InsertFromFile(This,File,retval) ) 

#define EditPoint2_GetText(This,PointOrCount,retval)	\
    ( (This)->lpVtbl -> GetText(This,PointOrCount,retval) ) 

#define EditPoint2_GetLines(This,Start,ExclusiveEnd,retval)	\
    ( (This)->lpVtbl -> GetLines(This,Start,ExclusiveEnd,retval) ) 

#define EditPoint2_Copy(This,PointOrCount,Append,retval)	\
    ( (This)->lpVtbl -> Copy(This,PointOrCount,Append,retval) ) 

#define EditPoint2_Cut(This,PointOrCount,Append,retval)	\
    ( (This)->lpVtbl -> Cut(This,PointOrCount,Append,retval) ) 

#define EditPoint2_Delete(This,PointOrCount,retval)	\
    ( (This)->lpVtbl -> Delete(This,PointOrCount,retval) ) 

#define EditPoint2_Paste(This,retval)	\
    ( (This)->lpVtbl -> Paste(This,retval) ) 

#define EditPoint2_ReadOnly(This,PointOrCount,retval)	\
    ( (This)->lpVtbl -> ReadOnly(This,PointOrCount,retval) ) 

#define EditPoint2_FindPattern(This,Pattern,vsFindOptionsValue,EndPoint,Tags,retval)	\
    ( (This)->lpVtbl -> FindPattern(This,Pattern,vsFindOptionsValue,EndPoint,Tags,retval) ) 

#define EditPoint2_ReplacePattern(This,Point,Pattern,Replace,vsFindOptionsValue,Tags,retval)	\
    ( (This)->lpVtbl -> ReplacePattern(This,Point,Pattern,Replace,vsFindOptionsValue,Tags,retval) ) 

#define EditPoint2_Indent(This,Point,Count,retval)	\
    ( (This)->lpVtbl -> Indent(This,Point,Count,retval) ) 

#define EditPoint2_Unindent(This,Point,Count,retval)	\
    ( (This)->lpVtbl -> Unindent(This,Point,Count,retval) ) 

#define EditPoint2_SmartFormat(This,Point,retval)	\
    ( (This)->lpVtbl -> SmartFormat(This,Point,retval) ) 

#define EditPoint2_OutlineSection(This,PointOrCount,retval)	\
    ( (This)->lpVtbl -> OutlineSection(This,PointOrCount,retval) ) 

#define EditPoint2_ReplaceText(This,PointOrCount,Text,Flags,retval)	\
    ( (This)->lpVtbl -> ReplaceText(This,PointOrCount,Text,Flags,retval) ) 

#define EditPoint2_ChangeCase(This,PointOrCount,How,retval)	\
    ( (This)->lpVtbl -> ChangeCase(This,PointOrCount,How,retval) ) 

#define EditPoint2_DeleteWhitespace(This,Direction,retval)	\
    ( (This)->lpVtbl -> DeleteWhitespace(This,Direction,retval) ) 


#define EditPoint2_InsertNewLine(This,Count)	\
    ( (This)->lpVtbl -> InsertNewLine(This,Count) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __EditPoint2_INTERFACE_DEFINED__ */


#ifndef __IVsExtensibility2_INTERFACE_DEFINED__
#define __IVsExtensibility2_INTERFACE_DEFINED__

/* interface IVsExtensibility2 */
/* [restricted][hidden][uuid][object][oleautomation] */ 


EXTERN_C const IID IID_IVsExtensibility2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("12133BC2-390A-4b30-AD5B-504C1D1C89E7")
    IVsExtensibility2 : public IVsExtensibility
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FireProjectsEvent_ItemAdded( 
            /* [in] */ __RPC__in /* external definition not present */ Project *Project) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FireProjectsEvent_ItemRemoved( 
            /* [in] */ __RPC__in /* external definition not present */ Project *Project) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FireProjectsEvent_ItemRenamed( 
            /* [in] */ __RPC__in /* external definition not present */ Project *Project,
            /* [in] */ __RPC__in BSTR OldName) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FireProjectItemsEvent_ItemAdded( 
            /* [in] */ __RPC__in /* external definition not present */ ProjectItem *ProjectItem) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FireProjectItemsEvent_ItemRemoved( 
            /* [in] */ __RPC__in /* external definition not present */ ProjectItem *ProjectItem) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FireProjectItemsEvent_ItemRenamed( 
            /* [in] */ __RPC__in /* external definition not present */ ProjectItem *ProjectItem,
            /* [in] */ __RPC__in BSTR OldName) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE BuildUIHierarchyFromTree( 
            /* external definition not present */ OLE_HANDLE hwnd,
            __RPC__in /* external definition not present */ Window *pParent,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ UIHierarchy **ppUIHierarchy) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FireCodeModelEvent( 
            DISPID dispid,
            __RPC__in /* external definition not present */ CodeElement *pElement,
            vsCMChangeKind changeKind) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsFireCodeModelEventNeeded( 
            __RPC__in VARIANT_BOOL *vbNeeded) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RunWizardFileEx( 
            /* [in] */ __RPC__in BSTR bstrWizFilename,
            /* [in] */ long hwndOwner,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *vContextParams,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *vCustomParams,
            /* [retval][out] */ __RPC__out long *pResult) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FireCodeModelEvent3( 
            DISPID dispid,
            __RPC__in_opt IDispatch *pParent,
            __RPC__in /* external definition not present */ CodeElement *pElement,
            vsCMChangeKind changeKind) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsExtensibility2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsExtensibility2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj);
        
        /* [id][restricted][funcdescattr] */ unsigned long ( STDMETHODCALLTYPE *AddRef )( 
            IVsExtensibility2 * This);
        
        /* [id][restricted][funcdescattr] */ unsigned long ( STDMETHODCALLTYPE *Release )( 
            IVsExtensibility2 * This);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            IVsExtensibility2 * This,
            /* [in][idldescattr] */ __RPC__in_opt ISupportVSProperties *pParent,
            /* [in][idldescattr] */ __RPC__in_opt IDispatch *pdispPropObj,
            /* [out][idldescattr] */ __RPC__deref_out_opt Properties **ppProperties);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RunWizardFile )( 
            IVsExtensibility2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR bstrWizFilename,
            /* [in][idldescattr] */ signed long hwndOwner,
            /* [in][idldescattr] */ __RPC__deref_in_opt SAFEARRAY * *vContextParams,
            /* [out][idldescattr] */ __RPC__out enum wizardResult *pResult);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Get_TextBuffer )( 
            IVsExtensibility2 * This,
            /* [in][idldescattr] */ __RPC__in_opt IUnknown *pVsTextStream,
            /* [in][idldescattr] */ __RPC__in_opt IExtensibleObjectSite *pParent,
            /* [out][idldescattr] */ __RPC__deref_out_opt TextBuffer **ppTextBuffer);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *EnterAutomationFunction )( 
            IVsExtensibility2 * This);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *ExitAutomationFunction )( 
            IVsExtensibility2 * This);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *IsInAutomationFunction )( 
            IVsExtensibility2 * This,
            /* [out][idldescattr] */ __RPC__out signed long *pfInAutoFunc);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetUserControl )( 
            IVsExtensibility2 * This,
            /* [out][idldescattr] */ __RPC__out BOOLEAN *fUserControl);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SetUserControl )( 
            IVsExtensibility2 * This,
            /* [in][idldescattr] */ BOOLEAN fUserControl);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SetUserControlUnlatched )( 
            IVsExtensibility2 * This,
            /* [in][idldescattr] */ BOOLEAN fUserControl);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *LockServer )( 
            IVsExtensibility2 * This,
            /* [in][idldescattr] */ BOOLEAN __MIDL__IVsExtensibility0000);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetLockCount )( 
            IVsExtensibility2 * This,
            /* [out][idldescattr] */ __RPC__out signed long *pCount);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *TestForShutdown )( 
            IVsExtensibility2 * This,
            /* [out][idldescattr] */ __RPC__out BOOLEAN *fShutdown);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetGlobalsObject )( 
            IVsExtensibility2 * This,
            /* [in][idldescattr] */ VARIANT ExtractFrom,
            /* [out][idldescattr] */ __RPC__deref_out_opt Globals **ppGlobals);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetConfigMgr )( 
            IVsExtensibility2 * This,
            /* [in][idldescattr] */ __RPC__in_opt IUnknown *pIVsProject,
            /* [idldescattr] */ ULONG_PTR itemid,
            /* [out][idldescattr] */ __RPC__deref_out_opt ConfigurationManager **ppCfgMgr);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *FireMacroReset )( 
            IVsExtensibility2 * This);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetDocumentFromDocCookie )( 
            IVsExtensibility2 * This,
            /* [idldescattr] */ LONG_PTR lDocCookie,
            /* [out][idldescattr] */ __RPC__deref_out_opt Document **ppDoc);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *IsMethodDisabled )( 
            IVsExtensibility2 * This,
            /* [idldescattr] */ __RPC__in struct GUID *pGUID,
            /* [idldescattr] */ signed long dispid);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *SetSuppressUI )( 
            IVsExtensibility2 * This,
            /* [idldescattr] */ BOOLEAN In);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetSuppressUI )( 
            IVsExtensibility2 * This,
            /* [idldescattr] */ __RPC__in BOOLEAN *pOut);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FireProjectsEvent_ItemAdded )( 
            IVsExtensibility2 * This,
            /* [in] */ __RPC__in /* external definition not present */ Project *Project);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FireProjectsEvent_ItemRemoved )( 
            IVsExtensibility2 * This,
            /* [in] */ __RPC__in /* external definition not present */ Project *Project);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FireProjectsEvent_ItemRenamed )( 
            IVsExtensibility2 * This,
            /* [in] */ __RPC__in /* external definition not present */ Project *Project,
            /* [in] */ __RPC__in BSTR OldName);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FireProjectItemsEvent_ItemAdded )( 
            IVsExtensibility2 * This,
            /* [in] */ __RPC__in /* external definition not present */ ProjectItem *ProjectItem);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FireProjectItemsEvent_ItemRemoved )( 
            IVsExtensibility2 * This,
            /* [in] */ __RPC__in /* external definition not present */ ProjectItem *ProjectItem);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FireProjectItemsEvent_ItemRenamed )( 
            IVsExtensibility2 * This,
            /* [in] */ __RPC__in /* external definition not present */ ProjectItem *ProjectItem,
            /* [in] */ __RPC__in BSTR OldName);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *BuildUIHierarchyFromTree )( 
            IVsExtensibility2 * This,
            /* external definition not present */ OLE_HANDLE hwnd,
            __RPC__in /* external definition not present */ Window *pParent,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ UIHierarchy **ppUIHierarchy);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FireCodeModelEvent )( 
            IVsExtensibility2 * This,
            DISPID dispid,
            __RPC__in /* external definition not present */ CodeElement *pElement,
            vsCMChangeKind changeKind);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFireCodeModelEventNeeded )( 
            IVsExtensibility2 * This,
            __RPC__in VARIANT_BOOL *vbNeeded);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RunWizardFileEx )( 
            IVsExtensibility2 * This,
            /* [in] */ __RPC__in BSTR bstrWizFilename,
            /* [in] */ long hwndOwner,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *vContextParams,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *vCustomParams,
            /* [retval][out] */ __RPC__out long *pResult);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FireCodeModelEvent3 )( 
            IVsExtensibility2 * This,
            DISPID dispid,
            __RPC__in_opt IDispatch *pParent,
            __RPC__in /* external definition not present */ CodeElement *pElement,
            vsCMChangeKind changeKind);
        
        END_INTERFACE
    } IVsExtensibility2Vtbl;

    interface IVsExtensibility2
    {
        CONST_VTBL struct IVsExtensibility2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsExtensibility2_QueryInterface(This,riid,ppvObj)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj) ) 

#define IVsExtensibility2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsExtensibility2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsExtensibility2_get_Properties(This,pParent,pdispPropObj,ppProperties)	\
    ( (This)->lpVtbl -> get_Properties(This,pParent,pdispPropObj,ppProperties) ) 

#define IVsExtensibility2_RunWizardFile(This,bstrWizFilename,hwndOwner,vContextParams,pResult)	\
    ( (This)->lpVtbl -> RunWizardFile(This,bstrWizFilename,hwndOwner,vContextParams,pResult) ) 

#define IVsExtensibility2_Get_TextBuffer(This,pVsTextStream,pParent,ppTextBuffer)	\
    ( (This)->lpVtbl -> Get_TextBuffer(This,pVsTextStream,pParent,ppTextBuffer) ) 

#define IVsExtensibility2_EnterAutomationFunction(This)	\
    ( (This)->lpVtbl -> EnterAutomationFunction(This) ) 

#define IVsExtensibility2_ExitAutomationFunction(This)	\
    ( (This)->lpVtbl -> ExitAutomationFunction(This) ) 

#define IVsExtensibility2_IsInAutomationFunction(This,pfInAutoFunc)	\
    ( (This)->lpVtbl -> IsInAutomationFunction(This,pfInAutoFunc) ) 

#define IVsExtensibility2_GetUserControl(This,fUserControl)	\
    ( (This)->lpVtbl -> GetUserControl(This,fUserControl) ) 

#define IVsExtensibility2_SetUserControl(This,fUserControl)	\
    ( (This)->lpVtbl -> SetUserControl(This,fUserControl) ) 

#define IVsExtensibility2_SetUserControlUnlatched(This,fUserControl)	\
    ( (This)->lpVtbl -> SetUserControlUnlatched(This,fUserControl) ) 

#define IVsExtensibility2_LockServer(This,__MIDL__IVsExtensibility0000)	\
    ( (This)->lpVtbl -> LockServer(This,__MIDL__IVsExtensibility0000) ) 

#define IVsExtensibility2_GetLockCount(This,pCount)	\
    ( (This)->lpVtbl -> GetLockCount(This,pCount) ) 

#define IVsExtensibility2_TestForShutdown(This,fShutdown)	\
    ( (This)->lpVtbl -> TestForShutdown(This,fShutdown) ) 

#define IVsExtensibility2_GetGlobalsObject(This,ExtractFrom,ppGlobals)	\
    ( (This)->lpVtbl -> GetGlobalsObject(This,ExtractFrom,ppGlobals) ) 

#define IVsExtensibility2_GetConfigMgr(This,pIVsProject,itemid,ppCfgMgr)	\
    ( (This)->lpVtbl -> GetConfigMgr(This,pIVsProject,itemid,ppCfgMgr) ) 

#define IVsExtensibility2_FireMacroReset(This)	\
    ( (This)->lpVtbl -> FireMacroReset(This) ) 

#define IVsExtensibility2_GetDocumentFromDocCookie(This,lDocCookie,ppDoc)	\
    ( (This)->lpVtbl -> GetDocumentFromDocCookie(This,lDocCookie,ppDoc) ) 

#define IVsExtensibility2_IsMethodDisabled(This,pGUID,dispid)	\
    ( (This)->lpVtbl -> IsMethodDisabled(This,pGUID,dispid) ) 

#define IVsExtensibility2_SetSuppressUI(This,In)	\
    ( (This)->lpVtbl -> SetSuppressUI(This,In) ) 

#define IVsExtensibility2_GetSuppressUI(This,pOut)	\
    ( (This)->lpVtbl -> GetSuppressUI(This,pOut) ) 


#define IVsExtensibility2_FireProjectsEvent_ItemAdded(This,Project)	\
    ( (This)->lpVtbl -> FireProjectsEvent_ItemAdded(This,Project) ) 

#define IVsExtensibility2_FireProjectsEvent_ItemRemoved(This,Project)	\
    ( (This)->lpVtbl -> FireProjectsEvent_ItemRemoved(This,Project) ) 

#define IVsExtensibility2_FireProjectsEvent_ItemRenamed(This,Project,OldName)	\
    ( (This)->lpVtbl -> FireProjectsEvent_ItemRenamed(This,Project,OldName) ) 

#define IVsExtensibility2_FireProjectItemsEvent_ItemAdded(This,ProjectItem)	\
    ( (This)->lpVtbl -> FireProjectItemsEvent_ItemAdded(This,ProjectItem) ) 

#define IVsExtensibility2_FireProjectItemsEvent_ItemRemoved(This,ProjectItem)	\
    ( (This)->lpVtbl -> FireProjectItemsEvent_ItemRemoved(This,ProjectItem) ) 

#define IVsExtensibility2_FireProjectItemsEvent_ItemRenamed(This,ProjectItem,OldName)	\
    ( (This)->lpVtbl -> FireProjectItemsEvent_ItemRenamed(This,ProjectItem,OldName) ) 

#define IVsExtensibility2_BuildUIHierarchyFromTree(This,hwnd,pParent,ppUIHierarchy)	\
    ( (This)->lpVtbl -> BuildUIHierarchyFromTree(This,hwnd,pParent,ppUIHierarchy) ) 

#define IVsExtensibility2_FireCodeModelEvent(This,dispid,pElement,changeKind)	\
    ( (This)->lpVtbl -> FireCodeModelEvent(This,dispid,pElement,changeKind) ) 

#define IVsExtensibility2_IsFireCodeModelEventNeeded(This,vbNeeded)	\
    ( (This)->lpVtbl -> IsFireCodeModelEventNeeded(This,vbNeeded) ) 

#define IVsExtensibility2_RunWizardFileEx(This,bstrWizFilename,hwndOwner,vContextParams,vCustomParams,pResult)	\
    ( (This)->lpVtbl -> RunWizardFileEx(This,bstrWizFilename,hwndOwner,vContextParams,vCustomParams,pResult) ) 

#define IVsExtensibility2_FireCodeModelEvent3(This,dispid,pParent,pElement,changeKind)	\
    ( (This)->lpVtbl -> FireCodeModelEvent3(This,dispid,pParent,pElement,changeKind) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsExtensibility2_INTERFACE_DEFINED__ */


#ifndef __IInternalExtenderProvider_INTERFACE_DEFINED__
#define __IInternalExtenderProvider_INTERFACE_DEFINED__

/* interface IInternalExtenderProvider */
/* [uuid][restricted][hidden][object][oleautomation][dual] */ 


EXTERN_C const IID IID_IInternalExtenderProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B85F43C4-C765-4984-AE3D-695E8CD8E992")
    IInternalExtenderProvider : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetExtenderNames( 
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in_opt IUnknown *ExtendeeObject,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetExtender( 
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IDispatch *ExtendeeObject,
            /* [in] */ __RPC__in /* external definition not present */ IExtenderSite *ExtenderSite,
            /* [in] */ long Cookie,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CanExtend( 
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IDispatch *ExtendeeObject,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *fRetval) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInternalExtenderProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IInternalExtenderProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IInternalExtenderProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IInternalExtenderProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IInternalExtenderProvider * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IInternalExtenderProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IInternalExtenderProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IInternalExtenderProvider * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExtenderNames )( 
            IInternalExtenderProvider * This,
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in_opt IUnknown *ExtendeeObject,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExtender )( 
            IInternalExtenderProvider * This,
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IDispatch *ExtendeeObject,
            /* [in] */ __RPC__in /* external definition not present */ IExtenderSite *ExtenderSite,
            /* [in] */ long Cookie,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CanExtend )( 
            IInternalExtenderProvider * This,
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IDispatch *ExtendeeObject,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *fRetval);
        
        END_INTERFACE
    } IInternalExtenderProviderVtbl;

    interface IInternalExtenderProvider
    {
        CONST_VTBL struct IInternalExtenderProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInternalExtenderProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IInternalExtenderProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IInternalExtenderProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IInternalExtenderProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IInternalExtenderProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IInternalExtenderProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IInternalExtenderProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IInternalExtenderProvider_GetExtenderNames(This,ExtenderCATID,ExtendeeObject,ExtenderNames)	\
    ( (This)->lpVtbl -> GetExtenderNames(This,ExtenderCATID,ExtendeeObject,ExtenderNames) ) 

#define IInternalExtenderProvider_GetExtender(This,ExtenderCATID,ExtenderName,ExtendeeObject,ExtenderSite,Cookie,Extender)	\
    ( (This)->lpVtbl -> GetExtender(This,ExtenderCATID,ExtenderName,ExtendeeObject,ExtenderSite,Cookie,Extender) ) 

#define IInternalExtenderProvider_CanExtend(This,ExtenderCATID,ExtenderName,ExtendeeObject,fRetval)	\
    ( (This)->lpVtbl -> CanExtend(This,ExtenderCATID,ExtenderName,ExtendeeObject,fRetval) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IInternalExtenderProvider_INTERFACE_DEFINED__ */


#ifndef __Find2_INTERFACE_DEFINED__
#define __Find2_INTERFACE_DEFINED__

/* interface Find2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Find2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("01568308-5b2a-4f30-8d0a-e10ee0f28f4a")
    Find2 : public Find
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WaitForFindToComplete( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pWait) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WaitForFindToComplete( 
            VARIANT_BOOL Wait) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Find2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Find2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Find2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Find2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Find2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Find2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Find2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Find2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Action )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out enum vsFindAction *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Action )( 
            Find2 * This,
            /* [in][idldescattr] */ enum vsFindAction noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FindWhat )( 
            Find2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_FindWhat )( 
            Find2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_MatchCase )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_MatchCase )( 
            Find2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_MatchWholeWord )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_MatchWholeWord )( 
            Find2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_MatchInHiddenText )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_MatchInHiddenText )( 
            Find2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Backwards )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Backwards )( 
            Find2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SearchSubfolders )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_SearchSubfolders )( 
            Find2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_KeepModifiedDocumentsOpen )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_KeepModifiedDocumentsOpen )( 
            Find2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_PatternSyntax )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out enum vsFindPatternSyntax *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_PatternSyntax )( 
            Find2 * This,
            /* [in][idldescattr] */ enum vsFindPatternSyntax noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ReplaceWith )( 
            Find2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_ReplaceWith )( 
            Find2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out enum vsFindTarget *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            Find2 * This,
            /* [in][idldescattr] */ enum vsFindTarget noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SearchPath )( 
            Find2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_SearchPath )( 
            Find2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_FilesOfType )( 
            Find2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_FilesOfType )( 
            Find2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ResultsLocation )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out enum vsFindResultsLocation *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_ResultsLocation )( 
            Find2 * This,
            /* [in][idldescattr] */ enum vsFindResultsLocation noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out enum vsFindResult *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *FindReplace )( 
            Find2 * This,
            /* [in][idldescattr] */ enum vsFindAction Action,
            /* [in][idldescattr] */ __RPC__in BSTR FindWhat,
            /* [in][idldescattr] */ signed long vsFindOptionsValue,
            /* [in][idldescattr] */ __RPC__in BSTR ReplaceWith,
            /* [in][idldescattr] */ enum vsFindTarget Target,
            /* [in][idldescattr] */ __RPC__in BSTR SearchPath,
            /* [in][idldescattr] */ __RPC__in BSTR FilesOfType,
            /* [in][idldescattr] */ enum vsFindResultsLocation ResultsLocation,
            /* [retval][out] */ __RPC__out enum vsFindResult *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WaitForFindToComplete )( 
            Find2 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pWait);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WaitForFindToComplete )( 
            Find2 * This,
            VARIANT_BOOL Wait);
        
        END_INTERFACE
    } Find2Vtbl;

    interface Find2
    {
        CONST_VTBL struct Find2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Find2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define Find2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define Find2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define Find2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define Find2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define Find2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define Find2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define Find2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define Find2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define Find2_get_Action(This,retval)	\
    ( (This)->lpVtbl -> get_Action(This,retval) ) 

#define Find2_put_Action(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Action(This,noname,retval) ) 

#define Find2_get_FindWhat(This,retval)	\
    ( (This)->lpVtbl -> get_FindWhat(This,retval) ) 

#define Find2_put_FindWhat(This,noname,retval)	\
    ( (This)->lpVtbl -> put_FindWhat(This,noname,retval) ) 

#define Find2_get_MatchCase(This,retval)	\
    ( (This)->lpVtbl -> get_MatchCase(This,retval) ) 

#define Find2_put_MatchCase(This,noname,retval)	\
    ( (This)->lpVtbl -> put_MatchCase(This,noname,retval) ) 

#define Find2_get_MatchWholeWord(This,retval)	\
    ( (This)->lpVtbl -> get_MatchWholeWord(This,retval) ) 

#define Find2_put_MatchWholeWord(This,noname,retval)	\
    ( (This)->lpVtbl -> put_MatchWholeWord(This,noname,retval) ) 

#define Find2_get_MatchInHiddenText(This,retval)	\
    ( (This)->lpVtbl -> get_MatchInHiddenText(This,retval) ) 

#define Find2_put_MatchInHiddenText(This,noname,retval)	\
    ( (This)->lpVtbl -> put_MatchInHiddenText(This,noname,retval) ) 

#define Find2_get_Backwards(This,retval)	\
    ( (This)->lpVtbl -> get_Backwards(This,retval) ) 

#define Find2_put_Backwards(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Backwards(This,noname,retval) ) 

#define Find2_get_SearchSubfolders(This,retval)	\
    ( (This)->lpVtbl -> get_SearchSubfolders(This,retval) ) 

#define Find2_put_SearchSubfolders(This,noname,retval)	\
    ( (This)->lpVtbl -> put_SearchSubfolders(This,noname,retval) ) 

#define Find2_get_KeepModifiedDocumentsOpen(This,retval)	\
    ( (This)->lpVtbl -> get_KeepModifiedDocumentsOpen(This,retval) ) 

#define Find2_put_KeepModifiedDocumentsOpen(This,noname,retval)	\
    ( (This)->lpVtbl -> put_KeepModifiedDocumentsOpen(This,noname,retval) ) 

#define Find2_get_PatternSyntax(This,retval)	\
    ( (This)->lpVtbl -> get_PatternSyntax(This,retval) ) 

#define Find2_put_PatternSyntax(This,noname,retval)	\
    ( (This)->lpVtbl -> put_PatternSyntax(This,noname,retval) ) 

#define Find2_get_ReplaceWith(This,retval)	\
    ( (This)->lpVtbl -> get_ReplaceWith(This,retval) ) 

#define Find2_put_ReplaceWith(This,noname,retval)	\
    ( (This)->lpVtbl -> put_ReplaceWith(This,noname,retval) ) 

#define Find2_get_Target(This,retval)	\
    ( (This)->lpVtbl -> get_Target(This,retval) ) 

#define Find2_put_Target(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Target(This,noname,retval) ) 

#define Find2_get_SearchPath(This,retval)	\
    ( (This)->lpVtbl -> get_SearchPath(This,retval) ) 

#define Find2_put_SearchPath(This,noname,retval)	\
    ( (This)->lpVtbl -> put_SearchPath(This,noname,retval) ) 

#define Find2_get_FilesOfType(This,retval)	\
    ( (This)->lpVtbl -> get_FilesOfType(This,retval) ) 

#define Find2_put_FilesOfType(This,noname,retval)	\
    ( (This)->lpVtbl -> put_FilesOfType(This,noname,retval) ) 

#define Find2_get_ResultsLocation(This,retval)	\
    ( (This)->lpVtbl -> get_ResultsLocation(This,retval) ) 

#define Find2_put_ResultsLocation(This,noname,retval)	\
    ( (This)->lpVtbl -> put_ResultsLocation(This,noname,retval) ) 

#define Find2_Execute(This,retval)	\
    ( (This)->lpVtbl -> Execute(This,retval) ) 

#define Find2_FindReplace(This,Action,FindWhat,vsFindOptionsValue,ReplaceWith,Target,SearchPath,FilesOfType,ResultsLocation,retval)	\
    ( (This)->lpVtbl -> FindReplace(This,Action,FindWhat,vsFindOptionsValue,ReplaceWith,Target,SearchPath,FilesOfType,ResultsLocation,retval) ) 


#define Find2_get_WaitForFindToComplete(This,pWait)	\
    ( (This)->lpVtbl -> get_WaitForFindToComplete(This,pWait) ) 

#define Find2_put_WaitForFindToComplete(This,Wait)	\
    ( (This)->lpVtbl -> put_WaitForFindToComplete(This,Wait) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Find2_INTERFACE_DEFINED__ */


#ifndef __LifetimeInformation_INTERFACE_DEFINED__
#define __LifetimeInformation_INTERFACE_DEFINED__

/* interface LifetimeInformation */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_LifetimeInformation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C8F4F9CC-B7E5-4458-BCE3-E1542468F26B")
    LifetimeInformation : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasBeenDeleted( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pDeleted) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct LifetimeInformationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            LifetimeInformation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            LifetimeInformation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            LifetimeInformation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            LifetimeInformation * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            LifetimeInformation * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            LifetimeInformation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            LifetimeInformation * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasBeenDeleted )( 
            LifetimeInformation * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pDeleted);
        
        END_INTERFACE
    } LifetimeInformationVtbl;

    interface LifetimeInformation
    {
        CONST_VTBL struct LifetimeInformationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define LifetimeInformation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define LifetimeInformation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define LifetimeInformation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define LifetimeInformation_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define LifetimeInformation_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define LifetimeInformation_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define LifetimeInformation_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define LifetimeInformation_get_HasBeenDeleted(This,pDeleted)	\
    ( (This)->lpVtbl -> get_HasBeenDeleted(This,pDeleted) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __LifetimeInformation_INTERFACE_DEFINED__ */


#ifndef __ToolBoxItem2_INTERFACE_DEFINED__
#define __ToolBoxItem2_INTERFACE_DEFINED__

/* interface ToolBoxItem2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ToolBoxItem2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("82C9DBF2-1DA8-4ED6-A5EC-8B876B46317C")
    ToolBoxItem2 : public ToolBoxItem
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Data( 
            /* [retval][out] */ __RPC__out VARIANT *pData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ToolBoxItem2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ToolBoxItem2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            ToolBoxItem2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            ToolBoxItem2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ToolBoxItem2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ToolBoxItem2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ToolBoxItem2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ToolBoxItem2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ToolBoxItem2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            ToolBoxItem2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            ToolBoxItem2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItems **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ToolBoxItem2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            ToolBoxItem2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Select )( 
            ToolBoxItem2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Data )( 
            ToolBoxItem2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pData);
        
        END_INTERFACE
    } ToolBoxItem2Vtbl;

    interface ToolBoxItem2
    {
        CONST_VTBL struct ToolBoxItem2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ToolBoxItem2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define ToolBoxItem2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define ToolBoxItem2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define ToolBoxItem2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define ToolBoxItem2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define ToolBoxItem2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define ToolBoxItem2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define ToolBoxItem2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define ToolBoxItem2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define ToolBoxItem2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define ToolBoxItem2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define ToolBoxItem2_Delete(This,retval)	\
    ( (This)->lpVtbl -> Delete(This,retval) ) 

#define ToolBoxItem2_Select(This,retval)	\
    ( (This)->lpVtbl -> Select(This,retval) ) 


#define ToolBoxItem2_get_Data(This,pData)	\
    ( (This)->lpVtbl -> get_Data(This,pData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ToolBoxItem2_INTERFACE_DEFINED__ */


#ifndef __ToolBoxTab2_INTERFACE_DEFINED__
#define __ToolBoxTab2_INTERFACE_DEFINED__

/* interface ToolBoxTab2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ToolBoxTab2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A64715CB-85D7-41c3-8E71-2302D4EEBC34")
    ToolBoxTab2 : public ToolBoxTab
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UniqueID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrID) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UniqueID( 
            /* [in] */ __RPC__in BSTR bstrID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ToolBoxTab2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ToolBoxTab2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            ToolBoxTab2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            ToolBoxTab2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ToolBoxTab2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ToolBoxTab2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ToolBoxTab2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ToolBoxTab2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ToolBoxTab2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            ToolBoxTab2 * This,
            /* [in][idldescattr] */ __RPC__in BSTR noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            ToolBoxTab2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTabs **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ToolBoxTab2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            ToolBoxTab2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            ToolBoxTab2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ToolBoxItems )( 
            ToolBoxTab2 * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItems **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ListView )( 
            ToolBoxTab2 * This,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_ListView )( 
            ToolBoxTab2 * This,
            /* [in][idldescattr] */ BOOLEAN noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UniqueID )( 
            ToolBoxTab2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrID);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UniqueID )( 
            ToolBoxTab2 * This,
            /* [in] */ __RPC__in BSTR bstrID);
        
        END_INTERFACE
    } ToolBoxTab2Vtbl;

    interface ToolBoxTab2
    {
        CONST_VTBL struct ToolBoxTab2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ToolBoxTab2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define ToolBoxTab2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define ToolBoxTab2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define ToolBoxTab2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define ToolBoxTab2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define ToolBoxTab2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define ToolBoxTab2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define ToolBoxTab2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define ToolBoxTab2_put_Name(This,noname,retval)	\
    ( (This)->lpVtbl -> put_Name(This,noname,retval) ) 

#define ToolBoxTab2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define ToolBoxTab2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define ToolBoxTab2_Activate(This,retval)	\
    ( (This)->lpVtbl -> Activate(This,retval) ) 

#define ToolBoxTab2_Delete(This,retval)	\
    ( (This)->lpVtbl -> Delete(This,retval) ) 

#define ToolBoxTab2_get_ToolBoxItems(This,retval)	\
    ( (This)->lpVtbl -> get_ToolBoxItems(This,retval) ) 

#define ToolBoxTab2_get_ListView(This,retval)	\
    ( (This)->lpVtbl -> get_ListView(This,retval) ) 

#define ToolBoxTab2_put_ListView(This,noname,retval)	\
    ( (This)->lpVtbl -> put_ListView(This,noname,retval) ) 


#define ToolBoxTab2_get_UniqueID(This,pbstrID)	\
    ( (This)->lpVtbl -> get_UniqueID(This,pbstrID) ) 

#define ToolBoxTab2_put_UniqueID(This,bstrID)	\
    ( (This)->lpVtbl -> put_UniqueID(This,bstrID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ToolBoxTab2_INTERFACE_DEFINED__ */


#ifndef __IncrementalSearch_INTERFACE_DEFINED__
#define __IncrementalSearch_INTERFACE_DEFINED__

/* interface IncrementalSearch */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_IncrementalSearch;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C5BEE6D8-ED45-4317-96BF-97EB88EA3A07")
    IncrementalSearch : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StartForward( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StartBackward( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IncrementalSearchModeOn( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pOn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SearchWithLastPattern( 
            /* [retval][out] */ __RPC__out vsIncrementalSearchResult *pResult) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Pattern( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pPattern) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AppendCharAndSearch( 
            short Character,
            /* [retval][out] */ __RPC__out vsIncrementalSearchResult *pResult) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeleteCharAndBackup( 
            /* [retval][out] */ __RPC__out vsIncrementalSearchResult *pResult) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Exit( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SearchForward( 
            /* [retval][out] */ __RPC__out vsIncrementalSearchResult *pResult) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SearchBackward( 
            /* [retval][out] */ __RPC__out vsIncrementalSearchResult *pResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IncrementalSearchVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IncrementalSearch * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IncrementalSearch * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IncrementalSearch * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IncrementalSearch * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IncrementalSearch * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IncrementalSearch * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IncrementalSearch * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            IncrementalSearch * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartForward )( 
            IncrementalSearch * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartBackward )( 
            IncrementalSearch * This);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IncrementalSearchModeOn )( 
            IncrementalSearch * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pOn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SearchWithLastPattern )( 
            IncrementalSearch * This,
            /* [retval][out] */ __RPC__out vsIncrementalSearchResult *pResult);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Pattern )( 
            IncrementalSearch * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pPattern);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AppendCharAndSearch )( 
            IncrementalSearch * This,
            short Character,
            /* [retval][out] */ __RPC__out vsIncrementalSearchResult *pResult);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteCharAndBackup )( 
            IncrementalSearch * This,
            /* [retval][out] */ __RPC__out vsIncrementalSearchResult *pResult);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Exit )( 
            IncrementalSearch * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SearchForward )( 
            IncrementalSearch * This,
            /* [retval][out] */ __RPC__out vsIncrementalSearchResult *pResult);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SearchBackward )( 
            IncrementalSearch * This,
            /* [retval][out] */ __RPC__out vsIncrementalSearchResult *pResult);
        
        END_INTERFACE
    } IncrementalSearchVtbl;

    interface IncrementalSearch
    {
        CONST_VTBL struct IncrementalSearchVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IncrementalSearch_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IncrementalSearch_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IncrementalSearch_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IncrementalSearch_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IncrementalSearch_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IncrementalSearch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IncrementalSearch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IncrementalSearch_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define IncrementalSearch_StartForward(This)	\
    ( (This)->lpVtbl -> StartForward(This) ) 

#define IncrementalSearch_StartBackward(This)	\
    ( (This)->lpVtbl -> StartBackward(This) ) 

#define IncrementalSearch_get_IncrementalSearchModeOn(This,pOn)	\
    ( (This)->lpVtbl -> get_IncrementalSearchModeOn(This,pOn) ) 

#define IncrementalSearch_SearchWithLastPattern(This,pResult)	\
    ( (This)->lpVtbl -> SearchWithLastPattern(This,pResult) ) 

#define IncrementalSearch_get_Pattern(This,pPattern)	\
    ( (This)->lpVtbl -> get_Pattern(This,pPattern) ) 

#define IncrementalSearch_AppendCharAndSearch(This,Character,pResult)	\
    ( (This)->lpVtbl -> AppendCharAndSearch(This,Character,pResult) ) 

#define IncrementalSearch_DeleteCharAndBackup(This,pResult)	\
    ( (This)->lpVtbl -> DeleteCharAndBackup(This,pResult) ) 

#define IncrementalSearch_Exit(This)	\
    ( (This)->lpVtbl -> Exit(This) ) 

#define IncrementalSearch_SearchForward(This,pResult)	\
    ( (This)->lpVtbl -> SearchForward(This,pResult) ) 

#define IncrementalSearch_SearchBackward(This,pResult)	\
    ( (This)->lpVtbl -> SearchBackward(This,pResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IncrementalSearch_INTERFACE_DEFINED__ */


#ifndef __TextPane2_INTERFACE_DEFINED__
#define __TextPane2_INTERFACE_DEFINED__

/* interface TextPane2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TextPane2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ACE19C7B-A0AC-4089-94FD-749CF4380E1F")
    TextPane2 : public TextPane
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IncrementalSearch( 
            /* [retval][out] */ __RPC__deref_out_opt IncrementalSearch **ppIncrementalSearch) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextPane2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextPane2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            TextPane2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            TextPane2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextPane2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextPane2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextPane2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextPane2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TextPane2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            TextPane2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPanes **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            TextPane2 * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            TextPane2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            TextPane2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            TextPane2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextSelection **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            TextPane2 * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            TextPane2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *IsVisible )( 
            TextPane2 * This,
            /* [in][idldescattr] */ __RPC__in_opt TextPoint *Point,
            /* [optional][in][idldescattr] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *TryToShow )( 
            TextPane2 * This,
            /* [in][idldescattr] */ __RPC__in_opt TextPoint *Point,
            /* [in][idldescattr] */ enum vsPaneShowHow How,
            /* [optional][in][idldescattr] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out BOOLEAN *retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IncrementalSearch )( 
            TextPane2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IncrementalSearch **ppIncrementalSearch);
        
        END_INTERFACE
    } TextPane2Vtbl;

    interface TextPane2
    {
        CONST_VTBL struct TextPane2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextPane2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define TextPane2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define TextPane2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define TextPane2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define TextPane2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define TextPane2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define TextPane2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define TextPane2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define TextPane2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define TextPane2_get_Window(This,retval)	\
    ( (This)->lpVtbl -> get_Window(This,retval) ) 

#define TextPane2_get_Height(This,retval)	\
    ( (This)->lpVtbl -> get_Height(This,retval) ) 

#define TextPane2_get_Width(This,retval)	\
    ( (This)->lpVtbl -> get_Width(This,retval) ) 

#define TextPane2_get_Selection(This,retval)	\
    ( (This)->lpVtbl -> get_Selection(This,retval) ) 

#define TextPane2_get_StartPoint(This,retval)	\
    ( (This)->lpVtbl -> get_StartPoint(This,retval) ) 

#define TextPane2_Activate(This,retval)	\
    ( (This)->lpVtbl -> Activate(This,retval) ) 

#define TextPane2_IsVisible(This,Point,PointOrCount,retval)	\
    ( (This)->lpVtbl -> IsVisible(This,Point,PointOrCount,retval) ) 

#define TextPane2_TryToShow(This,Point,How,PointOrCount,retval)	\
    ( (This)->lpVtbl -> TryToShow(This,Point,How,PointOrCount,retval) ) 


#define TextPane2_get_IncrementalSearch(This,ppIncrementalSearch)	\
    ( (This)->lpVtbl -> get_IncrementalSearch(This,ppIncrementalSearch) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextPane2_INTERFACE_DEFINED__ */


#ifndef __SolutionConfiguration2_INTERFACE_DEFINED__
#define __SolutionConfiguration2_INTERFACE_DEFINED__

/* interface SolutionConfiguration2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SolutionConfiguration2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1099AAA6-4169-430D-9F57-0B4C76624B3B")
    SolutionConfiguration2 : public SolutionConfiguration
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlatformName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SolutionConfiguration2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SolutionConfiguration2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            SolutionConfiguration2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            SolutionConfiguration2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SolutionConfiguration2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SolutionConfiguration2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SolutionConfiguration2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SolutionConfiguration2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SolutionConfiguration2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            SolutionConfiguration2 * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfigurations **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            SolutionConfiguration2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionContexts )( 
            SolutionConfiguration2 * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionContexts **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            SolutionConfiguration2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            SolutionConfiguration2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlatformName )( 
            SolutionConfiguration2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName);
        
        END_INTERFACE
    } SolutionConfiguration2Vtbl;

    interface SolutionConfiguration2
    {
        CONST_VTBL struct SolutionConfiguration2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SolutionConfiguration2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define SolutionConfiguration2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define SolutionConfiguration2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define SolutionConfiguration2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define SolutionConfiguration2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define SolutionConfiguration2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define SolutionConfiguration2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define SolutionConfiguration2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define SolutionConfiguration2_get_Collection(This,retval)	\
    ( (This)->lpVtbl -> get_Collection(This,retval) ) 

#define SolutionConfiguration2_get_Name(This,retval)	\
    ( (This)->lpVtbl -> get_Name(This,retval) ) 

#define SolutionConfiguration2_get_SolutionContexts(This,retval)	\
    ( (This)->lpVtbl -> get_SolutionContexts(This,retval) ) 

#define SolutionConfiguration2_Delete(This,retval)	\
    ( (This)->lpVtbl -> Delete(This,retval) ) 

#define SolutionConfiguration2_Activate(This,retval)	\
    ( (This)->lpVtbl -> Activate(This,retval) ) 


#define SolutionConfiguration2_get_PlatformName(This,pName)	\
    ( (This)->lpVtbl -> get_PlatformName(This,pName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SolutionConfiguration2_INTERFACE_DEFINED__ */


#ifndef __IVsProfferCommands2_INTERFACE_DEFINED__
#define __IVsProfferCommands2_INTERFACE_DEFINED__

/* interface IVsProfferCommands2 */
/* [object][restricted][hidden][version][uuid] */ 


EXTERN_C const IID IID_IVsProfferCommands2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c508b13c-06c5-40c7-b405-d327d4f8e268")
    IVsProfferCommands2 : public IVsProfferCommands
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddNamedCommand2( 
            /* [in] */ __RPC__in const GUID *pguidPackage,
            /* [in] */ __RPC__in const GUID *pguidCmdGroup,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameCanonical,
            /* [out] */ __RPC__out DWORD *pdwCmdId,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameLocalized,
            /* [string][in] */ __RPC__in const LPCOLESTR pszBtnText,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdTooltip,
            /* [string][in] */ __RPC__in const LPCOLESTR pszSatelliteDLL,
            /* [in] */ DWORD dwBitmapResourceId,
            /* [in] */ DWORD dwBitmapImageIndex,
            /* [in] */ DWORD dwCmdFlagsDefault,
            /* [in] */ DWORD cUIContexts,
            /* [size_is][in] */ __RPC__in_ecount_full(cUIContexts) const GUID *rgguidUIContexts,
            /* [in] */ DWORD dwUIElementType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsProfferCommands2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsProfferCommands2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj);
        
        /* [id][restricted][funcdescattr] */ unsigned long ( STDMETHODCALLTYPE *AddRef )( 
            IVsProfferCommands2 * This);
        
        /* [id][restricted][funcdescattr] */ unsigned long ( STDMETHODCALLTYPE *Release )( 
            IVsProfferCommands2 * This);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddNamedCommand )( 
            IVsProfferCommands2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *pguidPackage,
            /* [in][idldescattr] */ __RPC__in struct GUID *pguidCmdGroup,
            /* [in][idldescattr] */ LPWSTR pszCmdNameCanonical,
            /* [out][idldescattr] */ __RPC__out unsigned long *pdwCmdId,
            /* [in][idldescattr] */ LPWSTR pszCmdNameLocalized,
            /* [in][idldescattr] */ LPWSTR pszBtnText,
            /* [in][idldescattr] */ LPWSTR pszCmdTooltip,
            /* [in][idldescattr] */ LPWSTR pszSatelliteDLL,
            /* [in][idldescattr] */ unsigned long dwBitmapResourceId,
            /* [in][idldescattr] */ unsigned long dwBitmapImageIndex,
            /* [in][idldescattr] */ unsigned long dwCmdFlagsDefault,
            /* [in][idldescattr] */ unsigned long cUIContexts,
            /* [in][idldescattr] */ __RPC__in struct GUID *rgguidUIContexts);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveNamedCommand )( 
            IVsProfferCommands2 * This,
            /* [in][idldescattr] */ LPWSTR pszCmdNameCanonical);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RenameNamedCommand )( 
            IVsProfferCommands2 * This,
            /* [in][idldescattr] */ LPWSTR pszCmdNameCanonical,
            /* [in][idldescattr] */ LPWSTR pszCmdNameCanonicalNew,
            /* [in][idldescattr] */ LPWSTR pszCmdNameLocalizedNew);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddCommandBarControl )( 
            IVsProfferCommands2 * This,
            /* [in][idldescattr] */ LPWSTR pszCmdNameCanonical,
            /* [in][idldescattr] */ __RPC__in_opt IDispatch *pCmdBarParent,
            /* [in][idldescattr] */ unsigned long dwIndex,
            /* [in][idldescattr] */ unsigned long dwCmdType,
            /* [out][idldescattr] */ __RPC__deref_out_opt IDispatch **ppCmdBarCtrl);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveCommandBarControl )( 
            IVsProfferCommands2 * This,
            /* [in][idldescattr] */ __RPC__in_opt IDispatch *pCmdBarCtrl);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddCommandBar )( 
            IVsProfferCommands2 * This,
            /* [in][idldescattr] */ LPWSTR pszCmdBarName,
            /* [in][idldescattr] */ enum vsCommandBarType dwType,
            /* [in][idldescattr] */ __RPC__in_opt IDispatch *pCmdBarParent,
            /* [in][idldescattr] */ unsigned long dwIndex,
            /* [out][idldescattr] */ __RPC__deref_out_opt IDispatch **ppCmdBar);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *RemoveCommandBar )( 
            IVsProfferCommands2 * This,
            /* [in][idldescattr] */ __RPC__in_opt IDispatch *pCmdBar);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *FindCommandBar )( 
            IVsProfferCommands2 * This,
            /* [in][idldescattr] */ __RPC__in void *pToolbarSet,
            /* [in][idldescattr] */ __RPC__in struct GUID *pguidCmdGroup,
            /* [in][idldescattr] */ unsigned long dwMenuId,
            /* [out][idldescattr] */ __RPC__deref_out_opt IDispatch **ppdispCmdBar);
        
        HRESULT ( STDMETHODCALLTYPE *AddNamedCommand2 )( 
            IVsProfferCommands2 * This,
            /* [in] */ __RPC__in const GUID *pguidPackage,
            /* [in] */ __RPC__in const GUID *pguidCmdGroup,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameCanonical,
            /* [out] */ __RPC__out DWORD *pdwCmdId,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameLocalized,
            /* [string][in] */ __RPC__in const LPCOLESTR pszBtnText,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdTooltip,
            /* [string][in] */ __RPC__in const LPCOLESTR pszSatelliteDLL,
            /* [in] */ DWORD dwBitmapResourceId,
            /* [in] */ DWORD dwBitmapImageIndex,
            /* [in] */ DWORD dwCmdFlagsDefault,
            /* [in] */ DWORD cUIContexts,
            /* [size_is][in] */ __RPC__in_ecount_full(cUIContexts) const GUID *rgguidUIContexts,
            /* [in] */ DWORD dwUIElementType);
        
        END_INTERFACE
    } IVsProfferCommands2Vtbl;

    interface IVsProfferCommands2
    {
        CONST_VTBL struct IVsProfferCommands2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsProfferCommands2_QueryInterface(This,riid,ppvObj)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj) ) 

#define IVsProfferCommands2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsProfferCommands2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsProfferCommands2_AddNamedCommand(This,pguidPackage,pguidCmdGroup,pszCmdNameCanonical,pdwCmdId,pszCmdNameLocalized,pszBtnText,pszCmdTooltip,pszSatelliteDLL,dwBitmapResourceId,dwBitmapImageIndex,dwCmdFlagsDefault,cUIContexts,rgguidUIContexts)	\
    ( (This)->lpVtbl -> AddNamedCommand(This,pguidPackage,pguidCmdGroup,pszCmdNameCanonical,pdwCmdId,pszCmdNameLocalized,pszBtnText,pszCmdTooltip,pszSatelliteDLL,dwBitmapResourceId,dwBitmapImageIndex,dwCmdFlagsDefault,cUIContexts,rgguidUIContexts) ) 

#define IVsProfferCommands2_RemoveNamedCommand(This,pszCmdNameCanonical)	\
    ( (This)->lpVtbl -> RemoveNamedCommand(This,pszCmdNameCanonical) ) 

#define IVsProfferCommands2_RenameNamedCommand(This,pszCmdNameCanonical,pszCmdNameCanonicalNew,pszCmdNameLocalizedNew)	\
    ( (This)->lpVtbl -> RenameNamedCommand(This,pszCmdNameCanonical,pszCmdNameCanonicalNew,pszCmdNameLocalizedNew) ) 

#define IVsProfferCommands2_AddCommandBarControl(This,pszCmdNameCanonical,pCmdBarParent,dwIndex,dwCmdType,ppCmdBarCtrl)	\
    ( (This)->lpVtbl -> AddCommandBarControl(This,pszCmdNameCanonical,pCmdBarParent,dwIndex,dwCmdType,ppCmdBarCtrl) ) 

#define IVsProfferCommands2_RemoveCommandBarControl(This,pCmdBarCtrl)	\
    ( (This)->lpVtbl -> RemoveCommandBarControl(This,pCmdBarCtrl) ) 

#define IVsProfferCommands2_AddCommandBar(This,pszCmdBarName,dwType,pCmdBarParent,dwIndex,ppCmdBar)	\
    ( (This)->lpVtbl -> AddCommandBar(This,pszCmdBarName,dwType,pCmdBarParent,dwIndex,ppCmdBar) ) 

#define IVsProfferCommands2_RemoveCommandBar(This,pCmdBar)	\
    ( (This)->lpVtbl -> RemoveCommandBar(This,pCmdBar) ) 

#define IVsProfferCommands2_FindCommandBar(This,pToolbarSet,pguidCmdGroup,dwMenuId,ppdispCmdBar)	\
    ( (This)->lpVtbl -> FindCommandBar(This,pToolbarSet,pguidCmdGroup,dwMenuId,ppdispCmdBar) ) 


#define IVsProfferCommands2_AddNamedCommand2(This,pguidPackage,pguidCmdGroup,pszCmdNameCanonical,pdwCmdId,pszCmdNameLocalized,pszBtnText,pszCmdTooltip,pszSatelliteDLL,dwBitmapResourceId,dwBitmapImageIndex,dwCmdFlagsDefault,cUIContexts,rgguidUIContexts,dwUIElementType)	\
    ( (This)->lpVtbl -> AddNamedCommand2(This,pguidPackage,pguidCmdGroup,pszCmdNameCanonical,pdwCmdId,pszCmdNameLocalized,pszBtnText,pszCmdTooltip,pszSatelliteDLL,dwBitmapResourceId,dwBitmapImageIndex,dwCmdFlagsDefault,cUIContexts,rgguidUIContexts,dwUIElementType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsProfferCommands2_INTERFACE_DEFINED__ */


#ifndef __SolutionBuild2_INTERFACE_DEFINED__
#define __SolutionBuild2_INTERFACE_DEFINED__

/* interface SolutionBuild2 */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SolutionBuild2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2516e4b-5d69-459d-b539-c95a71c4fa3d")
    SolutionBuild2 : public SolutionBuild
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Publish( 
            /* [defaultvalue] */ VARIANT_BOOL WaitForPublishToFinish = 0) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE PublishProject( 
            __RPC__in BSTR SolutionConfiguration,
            __RPC__in BSTR ProjectUniqueName,
            /* [defaultvalue] */ VARIANT_BOOL WaitForPublishToFinish = 0) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastPublishInfo( 
            /* [retval][out] */ __RPC__out long *Info) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PublishState( 
            /* [retval][out] */ __RPC__out vsPublishState *State) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DeployProject( 
            __RPC__in BSTR SolutionConfiguration,
            __RPC__in BSTR ProjectUniqueName,
            /* [defaultvalue] */ VARIANT_BOOL WaitForDeployToFinish = 0) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SolutionBuild2Vtbl
    {
        BEGIN_INTERFACE
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SolutionBuild2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **ppvObj,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *AddRef )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Release )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__out unsigned long *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SolutionBuild2 * This,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *pctinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SolutionBuild2 * This,
            /* [in][idldescattr] */ unsigned UINT itinfo,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__deref_out_opt void **pptinfo,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SolutionBuild2 * This,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ __RPC__deref_in_opt signed char **rgszNames,
            /* [in][idldescattr] */ unsigned UINT cNames,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [out][idldescattr] */ __RPC__out signed long *rgdispid,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][restricted][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SolutionBuild2 * This,
            /* [in][idldescattr] */ signed long dispidMember,
            /* [in][idldescattr] */ __RPC__in struct GUID *riid,
            /* [in][idldescattr] */ unsigned long lcid,
            /* [in][idldescattr] */ unsigned short wFlags,
            /* [in][idldescattr] */ __RPC__in struct DISPPARAMS *pdispparams,
            /* [out][idldescattr] */ __RPC__out VARIANT *pvarResult,
            /* [out][idldescattr] */ __RPC__out struct EXCEPINFO *pexcepinfo,
            /* [out][idldescattr] */ __RPC__out unsigned UINT *puArgErr,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__deref_out_opt **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveConfiguration )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfiguration **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_BuildDependencies )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BuildDependencies **retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_BuildState )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__out enum vsBuildState *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_LastBuildInfo )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__out signed long *retval);
        
        /* [id][propput][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *put_StartupProjects )( 
            SolutionBuild2 * This,
            /* [in][idldescattr] */ VARIANT noname,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_StartupProjects )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__out VARIANT *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Build )( 
            SolutionBuild2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForBuildToFinish,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Debug )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Deploy )( 
            SolutionBuild2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForDeployToFinish,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Clean )( 
            SolutionBuild2 * This,
            /* [in][idldescattr] */ BOOLEAN WaitForCleanToFinish,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [id][propget][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionConfigurations )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfigurations **retval);
        
        /* [id][funcdescattr] */ HRESULT ( STDMETHODCALLTYPE *BuildProject )( 
            SolutionBuild2 * This,
            /* [idldescattr] */ __RPC__in BSTR SolutionConfiguration,
            /* [idldescattr] */ __RPC__in BSTR ProjectUniqueName,
            /* [idldescattr] */ BOOLEAN WaitForBuildToFinish,
            /* [retval][out] */ __RPC__out void *retval);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Publish )( 
            SolutionBuild2 * This,
            /* [defaultvalue] */ VARIANT_BOOL WaitForPublishToFinish);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PublishProject )( 
            SolutionBuild2 * This,
            __RPC__in BSTR SolutionConfiguration,
            __RPC__in BSTR ProjectUniqueName,
            /* [defaultvalue] */ VARIANT_BOOL WaitForPublishToFinish);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastPublishInfo )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__out long *Info);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PublishState )( 
            SolutionBuild2 * This,
            /* [retval][out] */ __RPC__out vsPublishState *State);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeployProject )( 
            SolutionBuild2 * This,
            __RPC__in BSTR SolutionConfiguration,
            __RPC__in BSTR ProjectUniqueName,
            /* [defaultvalue] */ VARIANT_BOOL WaitForDeployToFinish);
        
        END_INTERFACE
    } SolutionBuild2Vtbl;

    interface SolutionBuild2
    {
        CONST_VTBL struct SolutionBuild2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SolutionBuild2_QueryInterface(This,riid,ppvObj,retval)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObj,retval) ) 

#define SolutionBuild2_AddRef(This,retval)	\
    ( (This)->lpVtbl -> AddRef(This,retval) ) 

#define SolutionBuild2_Release(This,retval)	\
    ( (This)->lpVtbl -> Release(This,retval) ) 

#define SolutionBuild2_GetTypeInfoCount(This,pctinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo,retval) ) 

#define SolutionBuild2_GetTypeInfo(This,itinfo,lcid,pptinfo,retval)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,itinfo,lcid,pptinfo,retval) ) 

#define SolutionBuild2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) ) 

#define SolutionBuild2_Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval)	\
    ( (This)->lpVtbl -> Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) ) 

#define SolutionBuild2_get_DTE(This,retval)	\
    ( (This)->lpVtbl -> get_DTE(This,retval) ) 

#define SolutionBuild2_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define SolutionBuild2_get_ActiveConfiguration(This,retval)	\
    ( (This)->lpVtbl -> get_ActiveConfiguration(This,retval) ) 

#define SolutionBuild2_get_BuildDependencies(This,retval)	\
    ( (This)->lpVtbl -> get_BuildDependencies(This,retval) ) 

#define SolutionBuild2_get_BuildState(This,retval)	\
    ( (This)->lpVtbl -> get_BuildState(This,retval) ) 

#define SolutionBuild2_get_LastBuildInfo(This,retval)	\
    ( (This)->lpVtbl -> get_LastBuildInfo(This,retval) ) 

#define SolutionBuild2_put_StartupProjects(This,noname,retval)	\
    ( (This)->lpVtbl -> put_StartupProjects(This,noname,retval) ) 

#define SolutionBuild2_get_StartupProjects(This,retval)	\
    ( (This)->lpVtbl -> get_StartupProjects(This,retval) ) 

#define SolutionBuild2_Build(This,WaitForBuildToFinish,retval)	\
    ( (This)->lpVtbl -> Build(This,WaitForBuildToFinish,retval) ) 

#define SolutionBuild2_Debug(This,retval)	\
    ( (This)->lpVtbl -> Debug(This,retval) ) 

#define SolutionBuild2_Deploy(This,WaitForDeployToFinish,retval)	\
    ( (This)->lpVtbl -> Deploy(This,WaitForDeployToFinish,retval) ) 

#define SolutionBuild2_Clean(This,WaitForCleanToFinish,retval)	\
    ( (This)->lpVtbl -> Clean(This,WaitForCleanToFinish,retval) ) 

#define SolutionBuild2_Run(This,retval)	\
    ( (This)->lpVtbl -> Run(This,retval) ) 

#define SolutionBuild2_get_SolutionConfigurations(This,retval)	\
    ( (This)->lpVtbl -> get_SolutionConfigurations(This,retval) ) 

#define SolutionBuild2_BuildProject(This,SolutionConfiguration,ProjectUniqueName,WaitForBuildToFinish,retval)	\
    ( (This)->lpVtbl -> BuildProject(This,SolutionConfiguration,ProjectUniqueName,WaitForBuildToFinish,retval) ) 


#define SolutionBuild2_Publish(This,WaitForPublishToFinish)	\
    ( (This)->lpVtbl -> Publish(This,WaitForPublishToFinish) ) 

#define SolutionBuild2_PublishProject(This,SolutionConfiguration,ProjectUniqueName,WaitForPublishToFinish)	\
    ( (This)->lpVtbl -> PublishProject(This,SolutionConfiguration,ProjectUniqueName,WaitForPublishToFinish) ) 

#define SolutionBuild2_get_LastPublishInfo(This,Info)	\
    ( (This)->lpVtbl -> get_LastPublishInfo(This,Info) ) 

#define SolutionBuild2_get_PublishState(This,State)	\
    ( (This)->lpVtbl -> get_PublishState(This,State) ) 

#define SolutionBuild2_DeployProject(This,SolutionConfiguration,ProjectUniqueName,WaitForDeployToFinish)	\
    ( (This)->lpVtbl -> DeployProject(This,SolutionConfiguration,ProjectUniqueName,WaitForDeployToFinish) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SolutionBuild2_INTERFACE_DEFINED__ */


#ifndef __ErrorItems_INTERFACE_DEFINED__
#define __ErrorItems_INTERFACE_DEFINED__

/* interface ErrorItems */
/* [helpstring][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ErrorItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("dcf93a30-d013-42f4-8aee-9f5ba215fb8b")
    ErrorItems : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt ErrorList **ErrorList) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt ErrorItem **ErrorItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *Count) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ErrorItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ErrorItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ErrorItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ErrorItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ErrorItems * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ErrorItems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ErrorItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ErrorItems * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ErrorItems * This,
            /* [retval][out] */ __RPC__deref_out_opt /* external definition not present */ DTE **DTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ErrorItems * This,
            /* [retval][out] */ __RPC__deref_out_opt ErrorList **ErrorList);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ErrorItems * This,
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt ErrorItem **ErrorItem);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ErrorItems * This,
            /* [retval][out] */ __RPC__out long *Count);
        
        END_INTERFACE
    } ErrorItemsVtbl;

    interface ErrorItems
    {
        CONST_VTBL struct ErrorItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ErrorItems_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ErrorItems_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ErrorItems_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ErrorItems_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ErrorItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ErrorItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ErrorItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ErrorItems_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define ErrorItems_get_Parent(This,ErrorList)	\
    ( (This)->lpVtbl -> get_Parent(This,ErrorList) ) 

#define ErrorItems_Item(This,index,ErrorItem)	\
    ( (This)->lpVtbl -> Item(This,index,ErrorItem) ) 

#define ErrorItems_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ErrorItems_INTERFACE_DEFINED__ */

#endif /* __EnvDTE80_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\dpkg.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for dpkg.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __dpkg_h__
#define __dpkg_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IVsSolutionDebuggingAssistant2_FWD_DEFINED__
#define __IVsSolutionDebuggingAssistant2_FWD_DEFINED__
typedef interface IVsSolutionDebuggingAssistant2 IVsSolutionDebuggingAssistant2;
#endif 	/* __IVsSolutionDebuggingAssistant2_FWD_DEFINED__ */


#ifndef __IVsProvideDebuggingInfo_FWD_DEFINED__
#define __IVsProvideDebuggingInfo_FWD_DEFINED__
typedef interface IVsProvideDebuggingInfo IVsProvideDebuggingInfo;
#endif 	/* __IVsProvideDebuggingInfo_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "vsshell.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_dpkg_0000_0000 */
/* [local] */ 

#define VS_GUID_DEPLOYMENT_PACKAGE L"{9BBF7AD1-9153-465C-88FD-6AA23494C136}"
#define SID_SVsSolutionDebuggingAssistant2 IID_IVsSolutionDebuggingAssistant2


extern RPC_IF_HANDLE __MIDL_itf_dpkg_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_dpkg_0000_0000_v0_0_s_ifspec;

#ifndef __IVsSolutionDebuggingAssistant2_INTERFACE_DEFINED__
#define __IVsSolutionDebuggingAssistant2_INTERFACE_DEFINED__

/* interface IVsSolutionDebuggingAssistant2 */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsSolutionDebuggingAssistant2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0A2EE8D5-53EF-410F-8504-3E0AFDAC5995")
    IVsSolutionDebuggingAssistant2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MapOutputToDeployedURLs( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in_opt IVsProjectCfg *pProjectCfg,
            /* [in] */ __RPC__in LPCOLESTR pszOutputCanonicalName,
            /* [in] */ ULONG celt,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) BSTR rgbstrMachines[  ],
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) BSTR rgbstrURLs[  ],
            /* [out] */ __RPC__out ULONG *pcActual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MapDeployedURLToProjectItem( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in LPCOLESTR pszDUrl,
            /* [out] */ __RPC__deref_out_opt IVsHierarchy **pphier,
            /* [out] */ __RPC__out VSITEMID *pitemid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsSolutionDebuggingAssistant2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsSolutionDebuggingAssistant2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsSolutionDebuggingAssistant2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsSolutionDebuggingAssistant2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *MapOutputToDeployedURLs )( 
            IVsSolutionDebuggingAssistant2 * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in_opt IVsProjectCfg *pProjectCfg,
            /* [in] */ __RPC__in LPCOLESTR pszOutputCanonicalName,
            /* [in] */ ULONG celt,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) BSTR rgbstrMachines[  ],
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) BSTR rgbstrURLs[  ],
            /* [out] */ __RPC__out ULONG *pcActual);
        
        HRESULT ( STDMETHODCALLTYPE *MapDeployedURLToProjectItem )( 
            IVsSolutionDebuggingAssistant2 * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ __RPC__in LPCOLESTR pszDUrl,
            /* [out] */ __RPC__deref_out_opt IVsHierarchy **pphier,
            /* [out] */ __RPC__out VSITEMID *pitemid);
        
        END_INTERFACE
    } IVsSolutionDebuggingAssistant2Vtbl;

    interface IVsSolutionDebuggingAssistant2
    {
        CONST_VTBL struct IVsSolutionDebuggingAssistant2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsSolutionDebuggingAssistant2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsSolutionDebuggingAssistant2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsSolutionDebuggingAssistant2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsSolutionDebuggingAssistant2_MapOutputToDeployedURLs(This,dwReserved,pProjectCfg,pszOutputCanonicalName,celt,rgbstrMachines,rgbstrURLs,pcActual)	\
    ( (This)->lpVtbl -> MapOutputToDeployedURLs(This,dwReserved,pProjectCfg,pszOutputCanonicalName,celt,rgbstrMachines,rgbstrURLs,pcActual) ) 

#define IVsSolutionDebuggingAssistant2_MapDeployedURLToProjectItem(This,dwReserved,pszDUrl,pphier,pitemid)	\
    ( (This)->lpVtbl -> MapDeployedURLToProjectItem(This,dwReserved,pszDUrl,pphier,pitemid) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsSolutionDebuggingAssistant2_INTERFACE_DEFINED__ */


#ifndef __IVsProvideDebuggingInfo_INTERFACE_DEFINED__
#define __IVsProvideDebuggingInfo_INTERFACE_DEFINED__

/* interface IVsProvideDebuggingInfo */
/* [object][unique][version][uuid] */ 


EXTERN_C const IID IID_IVsProvideDebuggingInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("665AADC9-DFF5-4DDF-A119-60D2EEA051C6")
    IVsProvideDebuggingInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDeployedOutputs( 
            /* [in] */ ULONG celt,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) IVsHierarchy *pIVsHierarchy[  ],
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) IVsProjectCfg *pIVsProjectCfg[  ],
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) IVsOutput *pIVsOutput[  ],
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) BSTR rgbstrMachines[  ],
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) BSTR rgbstrURLs[  ],
            /* [out] */ __RPC__out ULONG *pcActual) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsProvideDebuggingInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsProvideDebuggingInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsProvideDebuggingInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsProvideDebuggingInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetDeployedOutputs )( 
            IVsProvideDebuggingInfo * This,
            /* [in] */ ULONG celt,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) IVsHierarchy *pIVsHierarchy[  ],
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) IVsProjectCfg *pIVsProjectCfg[  ],
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) IVsOutput *pIVsOutput[  ],
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) BSTR rgbstrMachines[  ],
            /* [size_is][out][in] */ __RPC__inout_ecount_full(celt) BSTR rgbstrURLs[  ],
            /* [out] */ __RPC__out ULONG *pcActual);
        
        END_INTERFACE
    } IVsProvideDebuggingInfoVtbl;

    interface IVsProvideDebuggingInfo
    {
        CONST_VTBL struct IVsProvideDebuggingInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsProvideDebuggingInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsProvideDebuggingInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsProvideDebuggingInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsProvideDebuggingInfo_GetDeployedOutputs(This,celt,pIVsHierarchy,pIVsProjectCfg,pIVsOutput,rgbstrMachines,rgbstrURLs,pcActual)	\
    ( (This)->lpVtbl -> GetDeployedOutputs(This,celt,pIVsHierarchy,pIVsProjectCfg,pIVsOutput,rgbstrMachines,rgbstrURLs,pcActual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsProvideDebuggingInfo_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\dsrfid.h ===
//-----------------------------------------------------------------------------
//
// Microsoft Visual Database Tools
//
// Copyright 1994 - 2001 Microsoft Corporation. All Rights Reserved.
//
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// This file is not wrapped by an "#ifndef _DSCPGUID_H_" so that it can be
// included in both precompiled header files and GUID source files
//-----------------------------------------------------------------------------


// { e09ee6ac-fef0-41ae-9f77-3c394da49849 }
DEFINE_GUID(CLSID_DSRef,		0xe09ee6ac, 0xfef0, 0x41ae, 0x9f, 0x77, 0x3c, 0x39, 0x4d, 0xa4, 0x98, 0x49);

// {ab36de41-2bf4-11ce-ab3c-00aa004404fb}
DEFINE_GUID(IID_IDSRefProvider, 0xab36de41, 0x2bf4, 0x11ce, 0xab, 0x3c, 0x00, 0xaa, 0x00, 0x44, 0x04, 0xfb);

// {ab36de42-2bf4-11ce-ab3c-00aa004404fb}
DEFINE_GUID(IID_IDSRefConsumer, 0xab36de42, 0x2bf4, 0x11ce, 0xab, 0x3c, 0x00, 0xaa, 0x00, 0x44, 0x04, 0xfb);

//-----------------------------------------------------------------------------
//
// The following two definitions are for backward compatibility do not use 
// them to create new instances.
//-----------------------------------------------------------------------------

// {ab36de40-2bf4-11ce-ab3c-00aa004404fb}
DEFINE_GUID(CLSID_DSRef_R1,		0xab36de40, 0x2bf4, 0x11ce, 0xab, 0x3c, 0x00, 0xaa, 0x00, 0x44, 0x04, 0xfb);

// {E9B0E6DB-811C-11d0-AD51-00A0C90F5739}
DEFINE_GUID(CLSID_DSRef_R2, 0xe9b0e6db, 0x811c, 0x11d0, 0xad, 0x51, 0x00, 0xa0, 0xc9, 0x0f, 0x57, 0x39);
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\editids.h ===
//
// editids.h
// NOTE this file is superseded and defines moved to vsshlids.h
//
#ifndef _EDITIDS_H_
#define _EDITIDS_H_


#include "msobtnid.h"
#include "virtkeys.h"
#include "stdidcmd.h"
#include "vsshlids.h"
#include "sharedids.h"
#endif //_EDITIDS_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\ee100.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for ee100.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __ee100_h__
#define __ee100_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IDebugBinderDirect100_FWD_DEFINED__
#define __IDebugBinderDirect100_FWD_DEFINED__
typedef interface IDebugBinderDirect100 IDebugBinderDirect100;
#endif 	/* __IDebugBinderDirect100_FWD_DEFINED__ */


#ifndef __IDebugExpressionEvaluator100_FWD_DEFINED__
#define __IDebugExpressionEvaluator100_FWD_DEFINED__
typedef interface IDebugExpressionEvaluator100 IDebugExpressionEvaluator100;
#endif 	/* __IDebugExpressionEvaluator100_FWD_DEFINED__ */


/* header files for imported files */
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_ee100_0000_0000 */
/* [local] */ 

#define E_EVAL_ILLEGAL_SIDE_EFFECT            	MAKE_HRESULT(1, FACILITY_ITF, 0x0019)
#define S_EVAL_THREADSLIP_REQUIRED            	MAKE_HRESULT(0, FACILITY_ITF, 0x0020)
#define E_EVAL_INTERPRETER_ERROR                 MAKE_HRESULT(1, FACILITY_ITF, 0x0021)
#define E_EVAL_FUNCEVAL_IN_MINIDUMP              MAKE_HRESULT(1, FACILITY_ITF, 0x0022)


extern RPC_IF_HANDLE __MIDL_itf_ee100_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ee100_0000_0000_v0_0_s_ifspec;

#ifndef __IDebugBinderDirect100_INTERFACE_DEFINED__
#define __IDebugBinderDirect100_INTERFACE_DEFINED__

/* interface IDebugBinderDirect100 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugBinderDirect100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00ca5803-6adc-49b3-adcb-a2b538b5665e")
    IDebugBinderDirect100 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetErrorMessage( 
            HRESULT hrError,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrError) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsDump( 
            /* [out] */ __RPC__out BOOL *pfDump) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugBinderDirect100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugBinderDirect100 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugBinderDirect100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugBinderDirect100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrorMessage )( 
            IDebugBinderDirect100 * This,
            HRESULT hrError,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrError);
        
        HRESULT ( STDMETHODCALLTYPE *IsDump )( 
            IDebugBinderDirect100 * This,
            /* [out] */ __RPC__out BOOL *pfDump);
        
        END_INTERFACE
    } IDebugBinderDirect100Vtbl;

    interface IDebugBinderDirect100
    {
        CONST_VTBL struct IDebugBinderDirect100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugBinderDirect100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugBinderDirect100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugBinderDirect100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugBinderDirect100_GetErrorMessage(This,hrError,pbstrError)	\
    ( (This)->lpVtbl -> GetErrorMessage(This,hrError,pbstrError) ) 

#define IDebugBinderDirect100_IsDump(This,pfDump)	\
    ( (This)->lpVtbl -> IsDump(This,pfDump) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugBinderDirect100_INTERFACE_DEFINED__ */


#ifndef __IDebugExpressionEvaluator100_INTERFACE_DEFINED__
#define __IDebugExpressionEvaluator100_INTERFACE_DEFINED__

/* interface IDebugExpressionEvaluator100 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IDebugExpressionEvaluator100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("643CD3D4-043D-410C-8201-7E83C8918A91")
    IDebugExpressionEvaluator100 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetAttachedCLRMajorMinorVersion( 
            /* [in] */ __RPC__in BSTR bstrCLRVersion) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NotifyFuncEval( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDebugExpressionEvaluator100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDebugExpressionEvaluator100 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDebugExpressionEvaluator100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDebugExpressionEvaluator100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetAttachedCLRMajorMinorVersion )( 
            IDebugExpressionEvaluator100 * This,
            /* [in] */ __RPC__in BSTR bstrCLRVersion);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyFuncEval )( 
            IDebugExpressionEvaluator100 * This);
        
        END_INTERFACE
    } IDebugExpressionEvaluator100Vtbl;

    interface IDebugExpressionEvaluator100
    {
        CONST_VTBL struct IDebugExpressionEvaluator100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDebugExpressionEvaluator100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDebugExpressionEvaluator100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDebugExpressionEvaluator100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDebugExpressionEvaluator100_SetAttachedCLRMajorMinorVersion(This,bstrCLRVersion)	\
    ( (This)->lpVtbl -> SetAttachedCLRMajorMinorVersion(This,bstrCLRVersion) ) 

#define IDebugExpressionEvaluator100_NotifyFuncEval(This)	\
    ( (This)->lpVtbl -> NotifyFuncEval(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDebugExpressionEvaluator100_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Inc\dteinternal.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for dte.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __dte_h__
#define __dte_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef ___DTE_FWD_DEFINED__
#define ___DTE_FWD_DEFINED__
typedef interface _DTE _DTE;
#endif 	/* ___DTE_FWD_DEFINED__ */


#ifndef ___Solution_FWD_DEFINED__
#define ___Solution_FWD_DEFINED__
typedef interface _Solution _Solution;
#endif 	/* ___Solution_FWD_DEFINED__ */


#ifndef __Projects_FWD_DEFINED__
#define __Projects_FWD_DEFINED__
typedef interface Projects Projects;
#endif 	/* __Projects_FWD_DEFINED__ */


#ifndef __Project_FWD_DEFINED__
#define __Project_FWD_DEFINED__
typedef interface Project Project;
#endif 	/* __Project_FWD_DEFINED__ */


#ifndef __ProjectItems_FWD_DEFINED__
#define __ProjectItems_FWD_DEFINED__
typedef interface ProjectItems ProjectItems;
#endif 	/* __ProjectItems_FWD_DEFINED__ */


#ifndef __ProjectItem_FWD_DEFINED__
#define __ProjectItem_FWD_DEFINED__
typedef interface ProjectItem ProjectItem;
#endif 	/* __ProjectItem_FWD_DEFINED__ */


#ifndef __Commands_FWD_DEFINED__
#define __Commands_FWD_DEFINED__
typedef interface Commands Commands;
#endif 	/* __Commands_FWD_DEFINED__ */


#ifndef __TextBuffer_FWD_DEFINED__
#define __TextBuffer_FWD_DEFINED__
typedef interface TextBuffer TextBuffer;
#endif 	/* __TextBuffer_FWD_DEFINED__ */


#ifndef __AddIns_FWD_DEFINED__
#define __AddIns_FWD_DEFINED__
typedef interface AddIns AddIns;
#endif 	/* __AddIns_FWD_DEFINED__ */


#ifndef __AddIn_FWD_DEFINED__
#define __AddIn_FWD_DEFINED__
typedef interface AddIn AddIn;
#endif 	/* __AddIn_FWD_DEFINED__ */


#ifndef __Properties_FWD_DEFINED__
#define __Properties_FWD_DEFINED__
typedef interface Properties Properties;
#endif 	/* __Properties_FWD_DEFINED__ */


#ifndef __Property_FWD_DEFINED__
#define __Property_FWD_DEFINED__
typedef interface Property Property;
#endif 	/* __Property_FWD_DEFINED__ */


#ifndef __ISupportVSProperties_FWD_DEFINED__
#define __ISupportVSProperties_FWD_DEFINED__
typedef interface ISupportVSProperties ISupportVSProperties;
#endif 	/* __ISupportVSProperties_FWD_DEFINED__ */


#ifndef __SelectedItems_FWD_DEFINED__
#define __SelectedItems_FWD_DEFINED__
typedef interface SelectedItems SelectedItems;
#endif 	/* __SelectedItems_FWD_DEFINED__ */


#ifndef __SelectedItem_FWD_DEFINED__
#define __SelectedItem_FWD_DEFINED__
typedef interface SelectedItem SelectedItem;
#endif 	/* __SelectedItem_FWD_DEFINED__ */


#ifndef __SelectionContainer_FWD_DEFINED__
#define __SelectionContainer_FWD_DEFINED__
typedef interface SelectionContainer SelectionContainer;
#endif 	/* __SelectionContainer_FWD_DEFINED__ */


#ifndef __Windows_FWD_DEFINED__
#define __Windows_FWD_DEFINED__
typedef interface Windows Windows;
#endif 	/* __Windows_FWD_DEFINED__ */


#ifndef __Window_FWD_DEFINED__
#define __Window_FWD_DEFINED__
typedef interface Window Window;
#endif 	/* __Window_FWD_DEFINED__ */


#ifndef __LinkedWindows_FWD_DEFINED__
#define __LinkedWindows_FWD_DEFINED__
typedef interface LinkedWindows LinkedWindows;
#endif 	/* __LinkedWindows_FWD_DEFINED__ */


#ifndef __Events_FWD_DEFINED__
#define __Events_FWD_DEFINED__
typedef interface Events Events;
#endif 	/* __Events_FWD_DEFINED__ */


#ifndef __TaskList_FWD_DEFINED__
#define __TaskList_FWD_DEFINED__
typedef interface TaskList TaskList;
#endif 	/* __TaskList_FWD_DEFINED__ */


#ifndef __TaskItems_FWD_DEFINED__
#define __TaskItems_FWD_DEFINED__
typedef interface TaskItems TaskItems;
#endif 	/* __TaskItems_FWD_DEFINED__ */


#ifndef __TaskItem_FWD_DEFINED__
#define __TaskItem_FWD_DEFINED__
typedef interface TaskItem TaskItem;
#endif 	/* __TaskItem_FWD_DEFINED__ */


#ifndef __ToolBox_FWD_DEFINED__
#define __ToolBox_FWD_DEFINED__
typedef interface ToolBox ToolBox;
#endif 	/* __ToolBox_FWD_DEFINED__ */


#ifndef __ToolBoxTabs_FWD_DEFINED__
#define __ToolBoxTabs_FWD_DEFINED__
typedef interface ToolBoxTabs ToolBoxTabs;
#endif 	/* __ToolBoxTabs_FWD_DEFINED__ */


#ifndef __ToolBoxTab_FWD_DEFINED__
#define __ToolBoxTab_FWD_DEFINED__
typedef interface ToolBoxTab ToolBoxTab;
#endif 	/* __ToolBoxTab_FWD_DEFINED__ */


#ifndef __ToolBoxItem_FWD_DEFINED__
#define __ToolBoxItem_FWD_DEFINED__
typedef interface ToolBoxItem ToolBoxItem;
#endif 	/* __ToolBoxItem_FWD_DEFINED__ */


#ifndef __ToolBoxItems_FWD_DEFINED__
#define __ToolBoxItems_FWD_DEFINED__
typedef interface ToolBoxItems ToolBoxItems;
#endif 	/* __ToolBoxItems_FWD_DEFINED__ */


#ifndef __OutputWindow_FWD_DEFINED__
#define __OutputWindow_FWD_DEFINED__
typedef interface OutputWindow OutputWindow;
#endif 	/* __OutputWindow_FWD_DEFINED__ */


#ifndef __OutputWindowPanes_FWD_DEFINED__
#define __OutputWindowPanes_FWD_DEFINED__
typedef interface OutputWindowPanes OutputWindowPanes;
#endif 	/* __OutputWindowPanes_FWD_DEFINED__ */


#ifndef __OutputWindowPane_FWD_DEFINED__
#define __OutputWindowPane_FWD_DEFINED__
typedef interface OutputWindowPane OutputWindowPane;
#endif 	/* __OutputWindowPane_FWD_DEFINED__ */


#ifndef __IExtensibleObjectSite_FWD_DEFINED__
#define __IExtensibleObjectSite_FWD_DEFINED__
typedef interface IExtensibleObjectSite IExtensibleObjectSite;
#endif 	/* __IExtensibleObjectSite_FWD_DEFINED__ */


#ifndef __Document_FWD_DEFINED__
#define __Document_FWD_DEFINED__
typedef interface Document Document;
#endif 	/* __Document_FWD_DEFINED__ */


#ifndef __Documents_FWD_DEFINED__
#define __Documents_FWD_DEFINED__
typedef interface Documents Documents;
#endif 	/* __Documents_FWD_DEFINED__ */


#ifndef __WindowConfigurations_FWD_DEFINED__
#define __WindowConfigurations_FWD_DEFINED__
typedef interface WindowConfigurations WindowConfigurations;
#endif 	/* __WindowConfigurations_FWD_DEFINED__ */


#ifndef __WindowConfiguration_FWD_DEFINED__
#define __WindowConfiguration_FWD_DEFINED__
typedef interface WindowConfiguration WindowConfiguration;
#endif 	/* __WindowConfiguration_FWD_DEFINED__ */


#ifndef __Command_FWD_DEFINED__
#define __Command_FWD_DEFINED__
typedef interface Command Command;
#endif 	/* __Command_FWD_DEFINED__ */


#ifndef __Globals_FWD_DEFINED__
#define __Globals_FWD_DEFINED__
typedef interface Globals Globals;
#endif 	/* __Globals_FWD_DEFINED__ */


#ifndef __StatusBar_FWD_DEFINED__
#define __StatusBar_FWD_DEFINED__
typedef interface StatusBar StatusBar;
#endif 	/* __StatusBar_FWD_DEFINED__ */


#ifndef __Find_FWD_DEFINED__
#define __Find_FWD_DEFINED__
typedef interface Find Find;
#endif 	/* __Find_FWD_DEFINED__ */


#ifndef __ItemOperations_FWD_DEFINED__
#define __ItemOperations_FWD_DEFINED__
typedef interface ItemOperations ItemOperations;
#endif 	/* __ItemOperations_FWD_DEFINED__ */


#ifndef __IVsProfferCommands_FWD_DEFINED__
#define __IVsProfferCommands_FWD_DEFINED__
typedef interface IVsProfferCommands IVsProfferCommands;
#endif 	/* __IVsProfferCommands_FWD_DEFINED__ */


#ifndef __ObjectExtenders_FWD_DEFINED__
#define __ObjectExtenders_FWD_DEFINED__
typedef interface ObjectExtenders ObjectExtenders;
#endif 	/* __ObjectExtenders_FWD_DEFINED__ */


#ifndef __IExtenderSite_FWD_DEFINED__
#define __IExtenderSite_FWD_DEFINED__
typedef interface IExtenderSite IExtenderSite;
#endif 	/* __IExtenderSite_FWD_DEFINED__ */


#ifndef __IExtenderProvider_FWD_DEFINED__
#define __IExtenderProvider_FWD_DEFINED__
typedef interface IExtenderProvider IExtenderProvider;
#endif 	/* __IExtenderProvider_FWD_DEFINED__ */


#ifndef __IExtenderProviderUnk_FWD_DEFINED__
#define __IExtenderProviderUnk_FWD_DEFINED__
typedef interface IExtenderProviderUnk IExtenderProviderUnk;
#endif 	/* __IExtenderProviderUnk_FWD_DEFINED__ */


#ifndef __IFilterProperties_FWD_DEFINED__
#define __IFilterProperties_FWD_DEFINED__
typedef interface IFilterProperties IFilterProperties;
#endif 	/* __IFilterProperties_FWD_DEFINED__ */


#ifndef ___dispDTEEvents_FWD_DEFINED__
#define ___dispDTEEvents_FWD_DEFINED__
typedef interface _dispDTEEvents _dispDTEEvents;
#endif 	/* ___dispDTEEvents_FWD_DEFINED__ */


#ifndef __BuildDependencies_FWD_DEFINED__
#define __BuildDependencies_FWD_DEFINED__
typedef interface BuildDependencies BuildDependencies;
#endif 	/* __BuildDependencies_FWD_DEFINED__ */


#ifndef __BuildDependency_FWD_DEFINED__
#define __BuildDependency_FWD_DEFINED__
typedef interface BuildDependency BuildDependency;
#endif 	/* __BuildDependency_FWD_DEFINED__ */


#ifndef __SolutionConfigurations_FWD_DEFINED__
#define __SolutionConfigurations_FWD_DEFINED__
typedef interface SolutionConfigurations SolutionConfigurations;
#endif 	/* __SolutionConfigurations_FWD_DEFINED__ */


#ifndef __SolutionConfiguration_FWD_DEFINED__
#define __SolutionConfiguration_FWD_DEFINED__
typedef interface SolutionConfiguration SolutionConfiguration;
#endif 	/* __SolutionConfiguration_FWD_DEFINED__ */


#ifndef __SolutionContext_FWD_DEFINED__
#define __SolutionContext_FWD_DEFINED__
typedef interface SolutionContext SolutionContext;
#endif 	/* __SolutionContext_FWD_DEFINED__ */


#ifndef __SolutionBuild_FWD_DEFINED__
#define __SolutionBuild_FWD_DEFINED__
typedef interface SolutionBuild SolutionBuild;
#endif 	/* __SolutionBuild_FWD_DEFINED__ */


#ifndef __UIHierarchyItem_FWD_DEFINED__
#define __UIHierarchyItem_FWD_DEFINED__
typedef interface UIHierarchyItem UIHierarchyItem;
#endif 	/* __UIHierarchyItem_FWD_DEFINED__ */


#ifndef __UIHierarchyItems_FWD_DEFINED__
#define __UIHierarchyItems_FWD_DEFINED__
typedef interface UIHierarchyItems UIHierarchyItems;
#endif 	/* __UIHierarchyItems_FWD_DEFINED__ */


#ifndef __UIHierarchy_FWD_DEFINED__
#define __UIHierarchy_FWD_DEFINED__
typedef interface UIHierarchy UIHierarchy;
#endif 	/* __UIHierarchy_FWD_DEFINED__ */


#ifndef __UndoContext_FWD_DEFINED__
#define __UndoContext_FWD_DEFINED__
typedef interface UndoContext UndoContext;
#endif 	/* __UndoContext_FWD_DEFINED__ */


#ifndef __Configuration_FWD_DEFINED__
#define __Configuration_FWD_DEFINED__
typedef interface Configuration Configuration;
#endif 	/* __Configuration_FWD_DEFINED__ */


#ifndef __SolutionContexts_FWD_DEFINED__
#define __SolutionContexts_FWD_DEFINED__
typedef interface SolutionContexts SolutionContexts;
#endif 	/* __SolutionContexts_FWD_DEFINED__ */


#ifndef __Configurations_FWD_DEFINED__
#define __Configurations_FWD_DEFINED__
typedef interface Configurations Configurations;
#endif 	/* __Configurations_FWD_DEFINED__ */


#ifndef __ConfigurationManager_FWD_DEFINED__
#define __ConfigurationManager_FWD_DEFINED__
typedef interface ConfigurationManager ConfigurationManager;
#endif 	/* __ConfigurationManager_FWD_DEFINED__ */


#ifndef __Macros_FWD_DEFINED__
#define __Macros_FWD_DEFINED__
typedef interface Macros Macros;
#endif 	/* __Macros_FWD_DEFINED__ */


#ifndef __OutputGroups_FWD_DEFINED__
#define __OutputGroups_FWD_DEFINED__
typedef interface OutputGroups OutputGroups;
#endif 	/* __OutputGroups_FWD_DEFINED__ */


#ifndef __OutputGroup_FWD_DEFINED__
#define __OutputGroup_FWD_DEFINED__
typedef interface OutputGroup OutputGroup;
#endif 	/* __OutputGroup_FWD_DEFINED__ */


#ifndef __ContextAttributes_FWD_DEFINED__
#define __ContextAttributes_FWD_DEFINED__
typedef interface ContextAttributes ContextAttributes;
#endif 	/* __ContextAttributes_FWD_DEFINED__ */


#ifndef __SourceControl_FWD_DEFINED__
#define __SourceControl_FWD_DEFINED__
typedef interface SourceControl SourceControl;
#endif 	/* __SourceControl_FWD_DEFINED__ */


#ifndef __TextPoint_FWD_DEFINED__
#define __TextPoint_FWD_DEFINED__
typedef interface TextPoint TextPoint;
#endif 	/* __TextPoint_FWD_DEFINED__ */


#ifndef __EditPoint_FWD_DEFINED__
#define __EditPoint_FWD_DEFINED__
typedef interface EditPoint EditPoint;
#endif 	/* __EditPoint_FWD_DEFINED__ */


#ifndef __TextSelection_FWD_DEFINED__
#define __TextSelection_FWD_DEFINED__
typedef interface TextSelection TextSelection;
#endif 	/* __TextSelection_FWD_DEFINED__ */


#ifndef __TextRanges_FWD_DEFINED__
#define __TextRanges_FWD_DEFINED__
typedef interface TextRanges TextRanges;
#endif 	/* __TextRanges_FWD_DEFINED__ */


#ifndef __TextRange_FWD_DEFINED__
#define __TextRange_FWD_DEFINED__
typedef interface TextRange TextRange;
#endif 	/* __TextRange_FWD_DEFINED__ */


#ifndef __TextDocument_FWD_DEFINED__
#define __TextDocument_FWD_DEFINED__
typedef interface TextDocument TextDocument;
#endif 	/* __TextDocument_FWD_DEFINED__ */


#ifndef __VirtualPoint_FWD_DEFINED__
#define __VirtualPoint_FWD_DEFINED__
typedef interface VirtualPoint VirtualPoint;
#endif 	/* __VirtualPoint_FWD_DEFINED__ */


#ifndef __TextPane_FWD_DEFINED__
#define __TextPane_FWD_DEFINED__
typedef interface TextPane TextPane;
#endif 	/* __TextPane_FWD_DEFINED__ */


#ifndef __TextWindow_FWD_DEFINED__
#define __TextWindow_FWD_DEFINED__
typedef interface TextWindow TextWindow;
#endif 	/* __TextWindow_FWD_DEFINED__ */


#ifndef __TextPanes_FWD_DEFINED__
#define __TextPanes_FWD_DEFINED__
typedef interface TextPanes TextPanes;
#endif 	/* __TextPanes_FWD_DEFINED__ */


#ifndef __TextEditor_FWD_DEFINED__
#define __TextEditor_FWD_DEFINED__
typedef interface TextEditor TextEditor;
#endif 	/* __TextEditor_FWD_DEFINED__ */


#ifndef __CodeModel_FWD_DEFINED__
#define __CodeModel_FWD_DEFINED__
typedef interface CodeModel CodeModel;
#endif 	/* __CodeModel_FWD_DEFINED__ */


#ifndef __CodeElements_FWD_DEFINED__
#define __CodeElements_FWD_DEFINED__
typedef interface CodeElements CodeElements;
#endif 	/* __CodeElements_FWD_DEFINED__ */


#ifndef __CodeElement_FWD_DEFINED__
#define __CodeElement_FWD_DEFINED__
typedef interface CodeElement CodeElement;
#endif 	/* __CodeElement_FWD_DEFINED__ */


#ifndef __CodeType_FWD_DEFINED__
#define __CodeType_FWD_DEFINED__
typedef interface CodeType CodeType;
#endif 	/* __CodeType_FWD_DEFINED__ */


#ifndef __CodeNamespace_FWD_DEFINED__
#define __CodeNamespace_FWD_DEFINED__
typedef interface CodeNamespace CodeNamespace;
#endif 	/* __CodeNamespace_FWD_DEFINED__ */


#ifndef __CodeFunction_FWD_DEFINED__
#define __CodeFunction_FWD_DEFINED__
typedef interface CodeFunction CodeFunction;
#endif 	/* __CodeFunction_FWD_DEFINED__ */


#ifndef __CodeVariable_FWD_DEFINED__
#define __CodeVariable_FWD_DEFINED__
typedef interface CodeVariable CodeVariable;
#endif 	/* __CodeVariable_FWD_DEFINED__ */


#ifndef __CodeProperty_FWD_DEFINED__
#define __CodeProperty_FWD_DEFINED__
typedef interface CodeProperty CodeProperty;
#endif 	/* __CodeProperty_FWD_DEFINED__ */


#ifndef __CodeParameter_FWD_DEFINED__
#define __CodeParameter_FWD_DEFINED__
typedef interface CodeParameter CodeParameter;
#endif 	/* __CodeParameter_FWD_DEFINED__ */


#ifndef __CodeAttribute_FWD_DEFINED__
#define __CodeAttribute_FWD_DEFINED__
typedef interface CodeAttribute CodeAttribute;
#endif 	/* __CodeAttribute_FWD_DEFINED__ */


#ifndef __CodeInterface_FWD_DEFINED__
#define __CodeInterface_FWD_DEFINED__
typedef interface CodeInterface CodeInterface;
#endif 	/* __CodeInterface_FWD_DEFINED__ */


#ifndef __CodeStruct_FWD_DEFINED__
#define __CodeStruct_FWD_DEFINED__
typedef interface CodeStruct CodeStruct;
#endif 	/* __CodeStruct_FWD_DEFINED__ */


#ifndef __CodeEnum_FWD_DEFINED__
#define __CodeEnum_FWD_DEFINED__
typedef interface CodeEnum CodeEnum;
#endif 	/* __CodeEnum_FWD_DEFINED__ */


#ifndef __CodeDelegate_FWD_DEFINED__
#define __CodeDelegate_FWD_DEFINED__
typedef interface CodeDelegate CodeDelegate;
#endif 	/* __CodeDelegate_FWD_DEFINED__ */


#ifndef __CodeTypeRef_FWD_DEFINED__
#define __CodeTypeRef_FWD_DEFINED__
typedef interface CodeTypeRef CodeTypeRef;
#endif 	/* __CodeTypeRef_FWD_DEFINED__ */


#ifndef __CodeClass_FWD_DEFINED__
#define __CodeClass_FWD_DEFINED__
typedef interface CodeClass CodeClass;
#endif 	/* __CodeClass_FWD_DEFINED__ */


#ifndef __FileCodeModel_FWD_DEFINED__
#define __FileCodeModel_FWD_DEFINED__
typedef interface FileCodeModel FileCodeModel;
#endif 	/* __FileCodeModel_FWD_DEFINED__ */


#ifndef __Breakpoint_FWD_DEFINED__
#define __Breakpoint_FWD_DEFINED__
typedef interface Breakpoint Breakpoint;
#endif 	/* __Breakpoint_FWD_DEFINED__ */


#ifndef __Breakpoints_FWD_DEFINED__
#define __Breakpoints_FWD_DEFINED__
typedef interface Breakpoints Breakpoints;
#endif 	/* __Breakpoints_FWD_DEFINED__ */


#ifndef __Debugger_FWD_DEFINED__
#define __Debugger_FWD_DEFINED__
typedef interface Debugger Debugger;
#endif 	/* __Debugger_FWD_DEFINED__ */


#ifndef __Expression_FWD_DEFINED__
#define __Expression_FWD_DEFINED__
typedef interface Expression Expression;
#endif 	/* __Expression_FWD_DEFINED__ */


#ifndef __Expressions_FWD_DEFINED__
#define __Expressions_FWD_DEFINED__
typedef interface Expressions Expressions;
#endif 	/* __Expressions_FWD_DEFINED__ */


#ifndef __Language_FWD_DEFINED__
#define __Language_FWD_DEFINED__
typedef interface Language Language;
#endif 	/* __Language_FWD_DEFINED__ */


#ifndef __Languages_FWD_DEFINED__
#define __Languages_FWD_DEFINED__
typedef interface Languages Languages;
#endif 	/* __Languages_FWD_DEFINED__ */


#ifndef __Process_FWD_DEFINED__
#define __Process_FWD_DEFINED__
typedef interface Process Process;
#endif 	/* __Process_FWD_DEFINED__ */


#ifndef __Processes_FWD_DEFINED__
#define __Processes_FWD_DEFINED__
typedef interface Processes Processes;
#endif 	/* __Processes_FWD_DEFINED__ */


#ifndef __Program_FWD_DEFINED__
#define __Program_FWD_DEFINED__
typedef interface Program Program;
#endif 	/* __Program_FWD_DEFINED__ */


#ifndef __Programs_FWD_DEFINED__
#define __Programs_FWD_DEFINED__
typedef interface Programs Programs;
#endif 	/* __Programs_FWD_DEFINED__ */


#ifndef __StackFrame_FWD_DEFINED__
#define __StackFrame_FWD_DEFINED__
typedef interface StackFrame StackFrame;
#endif 	/* __StackFrame_FWD_DEFINED__ */


#ifndef __StackFrames_FWD_DEFINED__
#define __StackFrames_FWD_DEFINED__
typedef interface StackFrames StackFrames;
#endif 	/* __StackFrames_FWD_DEFINED__ */


#ifndef __Thread_FWD_DEFINED__
#define __Thread_FWD_DEFINED__
typedef interface Thread Thread;
#endif 	/* __Thread_FWD_DEFINED__ */


#ifndef __Threads_FWD_DEFINED__
#define __Threads_FWD_DEFINED__
typedef interface Threads Threads;
#endif 	/* __Threads_FWD_DEFINED__ */


#ifndef ___dispDebuggerEvents_FWD_DEFINED__
#define ___dispDebuggerEvents_FWD_DEFINED__
typedef interface _dispDebuggerEvents _dispDebuggerEvents;
#endif 	/* ___dispDebuggerEvents_FWD_DEFINED__ */


#ifndef ___DebuggerEventsRoot_FWD_DEFINED__
#define ___DebuggerEventsRoot_FWD_DEFINED__
typedef interface _DebuggerEventsRoot _DebuggerEventsRoot;
#endif 	/* ___DebuggerEventsRoot_FWD_DEFINED__ */


#ifndef ___DebuggerEvents_FWD_DEFINED__
#define ___DebuggerEvents_FWD_DEFINED__
typedef interface _DebuggerEvents _DebuggerEvents;
#endif 	/* ___DebuggerEvents_FWD_DEFINED__ */


#ifndef __DebuggerEvents_FWD_DEFINED__
#define __DebuggerEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class DebuggerEvents DebuggerEvents;
#else
typedef struct DebuggerEvents DebuggerEvents;
#endif /* __cplusplus */

#endif 	/* __DebuggerEvents_FWD_DEFINED__ */


#ifndef __IDTWizard_FWD_DEFINED__
#define __IDTWizard_FWD_DEFINED__
typedef interface IDTWizard IDTWizard;
#endif 	/* __IDTWizard_FWD_DEFINED__ */


#ifndef __IVsExtensibility_FWD_DEFINED__
#define __IVsExtensibility_FWD_DEFINED__
typedef interface IVsExtensibility IVsExtensibility;
#endif 	/* __IVsExtensibility_FWD_DEFINED__ */


#ifndef __IVsGlobalsCallback_FWD_DEFINED__
#define __IVsGlobalsCallback_FWD_DEFINED__
typedef interface IVsGlobalsCallback IVsGlobalsCallback;
#endif 	/* __IVsGlobalsCallback_FWD_DEFINED__ */


#ifndef __IVsGlobals_FWD_DEFINED__
#define __IVsGlobals_FWD_DEFINED__
typedef interface IVsGlobals IVsGlobals;
#endif 	/* __IVsGlobals_FWD_DEFINED__ */


#ifndef __IDTCommandTarget_FWD_DEFINED__
#define __IDTCommandTarget_FWD_DEFINED__
typedef interface IDTCommandTarget IDTCommandTarget;
#endif 	/* __IDTCommandTarget_FWD_DEFINED__ */


#ifndef __CommandWindow_FWD_DEFINED__
#define __CommandWindow_FWD_DEFINED__
typedef interface CommandWindow CommandWindow;
#endif 	/* __CommandWindow_FWD_DEFINED__ */


#ifndef __DTE_FWD_DEFINED__
#define __DTE_FWD_DEFINED__

#ifdef __cplusplus
typedef class DTE DTE;
#else
typedef struct DTE DTE;
#endif /* __cplusplus */

#endif 	/* __DTE_FWD_DEFINED__ */


#ifndef __Solution_FWD_DEFINED__
#define __Solution_FWD_DEFINED__

#ifdef __cplusplus
typedef class Solution Solution;
#else
typedef struct Solution Solution;
#endif /* __cplusplus */

#endif 	/* __Solution_FWD_DEFINED__ */


#ifndef __DTEEvents_FWD_DEFINED__
#define __DTEEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class DTEEvents DTEEvents;
#else
typedef struct DTEEvents DTEEvents;
#endif /* __cplusplus */

#endif 	/* __DTEEvents_FWD_DEFINED__ */


#ifndef ___DTEEvents_FWD_DEFINED__
#define ___DTEEvents_FWD_DEFINED__
typedef interface _DTEEvents _DTEEvents;
#endif 	/* ___DTEEvents_FWD_DEFINED__ */


#ifndef ___ProjectItemsEvents_FWD_DEFINED__
#define ___ProjectItemsEvents_FWD_DEFINED__
typedef interface _ProjectItemsEvents _ProjectItemsEvents;
#endif 	/* ___ProjectItemsEvents_FWD_DEFINED__ */


#ifndef ___dispProjectItemsEvents_FWD_DEFINED__
#define ___dispProjectItemsEvents_FWD_DEFINED__
typedef interface _dispProjectItemsEvents _dispProjectItemsEvents;
#endif 	/* ___dispProjectItemsEvents_FWD_DEFINED__ */


#ifndef __ProjectItemsEvents_FWD_DEFINED__
#define __ProjectItemsEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class ProjectItemsEvents ProjectItemsEvents;
#else
typedef struct ProjectItemsEvents ProjectItemsEvents;
#endif /* __cplusplus */

#endif 	/* __ProjectItemsEvents_FWD_DEFINED__ */


#ifndef ___ProjectsEvents_FWD_DEFINED__
#define ___ProjectsEvents_FWD_DEFINED__
typedef interface _ProjectsEvents _ProjectsEvents;
#endif 	/* ___ProjectsEvents_FWD_DEFINED__ */


#ifndef ___dispProjectsEvents_FWD_DEFINED__
#define ___dispProjectsEvents_FWD_DEFINED__
typedef interface _dispProjectsEvents _dispProjectsEvents;
#endif 	/* ___dispProjectsEvents_FWD_DEFINED__ */


#ifndef __ProjectsEvents_FWD_DEFINED__
#define __ProjectsEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class ProjectsEvents ProjectsEvents;
#else
typedef struct ProjectsEvents ProjectsEvents;
#endif /* __cplusplus */

#endif 	/* __ProjectsEvents_FWD_DEFINED__ */


#ifndef ___MiscSlnFilesEventsRoot_FWD_DEFINED__
#define ___MiscSlnFilesEventsRoot_FWD_DEFINED__
typedef interface _MiscSlnFilesEventsRoot _MiscSlnFilesEventsRoot;
#endif 	/* ___MiscSlnFilesEventsRoot_FWD_DEFINED__ */


#ifndef ___CommandBarControlEvents_FWD_DEFINED__
#define ___CommandBarControlEvents_FWD_DEFINED__
typedef interface _CommandBarControlEvents _CommandBarControlEvents;
#endif 	/* ___CommandBarControlEvents_FWD_DEFINED__ */


#ifndef ___dispCommandBarControlEvents_FWD_DEFINED__
#define ___dispCommandBarControlEvents_FWD_DEFINED__
typedef interface _dispCommandBarControlEvents _dispCommandBarControlEvents;
#endif 	/* ___dispCommandBarControlEvents_FWD_DEFINED__ */


#ifndef __CommandBarEvents_FWD_DEFINED__
#define __CommandBarEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class CommandBarEvents CommandBarEvents;
#else
typedef struct CommandBarEvents CommandBarEvents;
#endif /* __cplusplus */

#endif 	/* __CommandBarEvents_FWD_DEFINED__ */


#ifndef ___CommandEvents_FWD_DEFINED__
#define ___CommandEvents_FWD_DEFINED__
typedef interface _CommandEvents _CommandEvents;
#endif 	/* ___CommandEvents_FWD_DEFINED__ */


#ifndef ___dispCommandEvents_FWD_DEFINED__
#define ___dispCommandEvents_FWD_DEFINED__
typedef interface _dispCommandEvents _dispCommandEvents;
#endif 	/* ___dispCommandEvents_FWD_DEFINED__ */


#ifndef __CommandEvents_FWD_DEFINED__
#define __CommandEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class CommandEvents CommandEvents;
#else
typedef struct CommandEvents CommandEvents;
#endif /* __cplusplus */

#endif 	/* __CommandEvents_FWD_DEFINED__ */


#ifndef ___SelectionEvents_FWD_DEFINED__
#define ___SelectionEvents_FWD_DEFINED__
typedef interface _SelectionEvents _SelectionEvents;
#endif 	/* ___SelectionEvents_FWD_DEFINED__ */


#ifndef ___dispSelectionEvents_FWD_DEFINED__
#define ___dispSelectionEvents_FWD_DEFINED__
typedef interface _dispSelectionEvents _dispSelectionEvents;
#endif 	/* ___dispSelectionEvents_FWD_DEFINED__ */


#ifndef __SelectionEvents_FWD_DEFINED__
#define __SelectionEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class SelectionEvents SelectionEvents;
#else
typedef struct SelectionEvents SelectionEvents;
#endif /* __cplusplus */

#endif 	/* __SelectionEvents_FWD_DEFINED__ */


#ifndef ___BuildEvents_FWD_DEFINED__
#define ___BuildEvents_FWD_DEFINED__
typedef interface _BuildEvents _BuildEvents;
#endif 	/* ___BuildEvents_FWD_DEFINED__ */


#ifndef ___dispBuildEvents_FWD_DEFINED__
#define ___dispBuildEvents_FWD_DEFINED__
typedef interface _dispBuildEvents _dispBuildEvents;
#endif 	/* ___dispBuildEvents_FWD_DEFINED__ */


#ifndef __BuildEvents_FWD_DEFINED__
#define __BuildEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class BuildEvents BuildEvents;
#else
typedef struct BuildEvents BuildEvents;
#endif /* __cplusplus */

#endif 	/* __BuildEvents_FWD_DEFINED__ */


#ifndef ___SolutionEvents_FWD_DEFINED__
#define ___SolutionEvents_FWD_DEFINED__
typedef interface _SolutionEvents _SolutionEvents;
#endif 	/* ___SolutionEvents_FWD_DEFINED__ */


#ifndef ___dispSolutionEvents_FWD_DEFINED__
#define ___dispSolutionEvents_FWD_DEFINED__
typedef interface _dispSolutionEvents _dispSolutionEvents;
#endif 	/* ___dispSolutionEvents_FWD_DEFINED__ */


#ifndef __SolutionEvents_FWD_DEFINED__
#define __SolutionEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class SolutionEvents SolutionEvents;
#else
typedef struct SolutionEvents SolutionEvents;
#endif /* __cplusplus */

#endif 	/* __SolutionEvents_FWD_DEFINED__ */


#ifndef __ContextAttribute_FWD_DEFINED__
#define __ContextAttribute_FWD_DEFINED__
typedef interface ContextAttribute ContextAttribute;
#endif 	/* __ContextAttribute_FWD_DEFINED__ */


#ifndef ___DocumentEventsRoot_FWD_DEFINED__
#define ___DocumentEventsRoot_FWD_DEFINED__
typedef interface _DocumentEventsRoot _DocumentEventsRoot;
#endif 	/* ___DocumentEventsRoot_FWD_DEFINED__ */


#ifndef ___DocumentEvents_FWD_DEFINED__
#define ___DocumentEvents_FWD_DEFINED__
typedef interface _DocumentEvents _DocumentEvents;
#endif 	/* ___DocumentEvents_FWD_DEFINED__ */


#ifndef ___dispDocumentEvents_FWD_DEFINED__
#define ___dispDocumentEvents_FWD_DEFINED__
typedef interface _dispDocumentEvents _dispDocumentEvents;
#endif 	/* ___dispDocumentEvents_FWD_DEFINED__ */


#ifndef __DocumentEvents_FWD_DEFINED__
#define __DocumentEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class DocumentEvents DocumentEvents;
#else
typedef struct DocumentEvents DocumentEvents;
#endif /* __cplusplus */

#endif 	/* __DocumentEvents_FWD_DEFINED__ */


#ifndef ___TextEditorEventsRoot_FWD_DEFINED__
#define ___TextEditorEventsRoot_FWD_DEFINED__
typedef interface _TextEditorEventsRoot _TextEditorEventsRoot;
#endif 	/* ___TextEditorEventsRoot_FWD_DEFINED__ */


#ifndef ___TextEditorEvents_FWD_DEFINED__
#define ___TextEditorEvents_FWD_DEFINED__
typedef interface _TextEditorEvents _TextEditorEvents;
#endif 	/* ___TextEditorEvents_FWD_DEFINED__ */


#ifndef ___dispTextEditorEvents_FWD_DEFINED__
#define ___dispTextEditorEvents_FWD_DEFINED__
typedef interface _dispTextEditorEvents _dispTextEditorEvents;
#endif 	/* ___dispTextEditorEvents_FWD_DEFINED__ */


#ifndef __TextEditorEvents_FWD_DEFINED__
#define __TextEditorEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class TextEditorEvents TextEditorEvents;
#else
typedef struct TextEditorEvents TextEditorEvents;
#endif /* __cplusplus */

#endif 	/* __TextEditorEvents_FWD_DEFINED__ */


#ifndef ___WindowEventsRoot_FWD_DEFINED__
#define ___WindowEventsRoot_FWD_DEFINED__
typedef interface _WindowEventsRoot _WindowEventsRoot;
#endif 	/* ___WindowEventsRoot_FWD_DEFINED__ */


#ifndef ___WindowEvents_FWD_DEFINED__
#define ___WindowEvents_FWD_DEFINED__
typedef interface _WindowEvents _WindowEvents;
#endif 	/* ___WindowEvents_FWD_DEFINED__ */


#ifndef ___dispWindowEvents_FWD_DEFINED__
#define ___dispWindowEvents_FWD_DEFINED__
typedef interface _dispWindowEvents _dispWindowEvents;
#endif 	/* ___dispWindowEvents_FWD_DEFINED__ */


#ifndef __WindowEvents_FWD_DEFINED__
#define __WindowEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class WindowEvents WindowEvents;
#else
typedef struct WindowEvents WindowEvents;
#endif /* __cplusplus */

#endif 	/* __WindowEvents_FWD_DEFINED__ */


#ifndef ___OutputWindowEventsRoot_FWD_DEFINED__
#define ___OutputWindowEventsRoot_FWD_DEFINED__
typedef interface _OutputWindowEventsRoot _OutputWindowEventsRoot;
#endif 	/* ___OutputWindowEventsRoot_FWD_DEFINED__ */


#ifndef ___OutputWindowEvents_FWD_DEFINED__
#define ___OutputWindowEvents_FWD_DEFINED__
typedef interface _OutputWindowEvents _OutputWindowEvents;
#endif 	/* ___OutputWindowEvents_FWD_DEFINED__ */


#ifndef ___dispOutputWindowEvents_FWD_DEFINED__
#define ___dispOutputWindowEvents_FWD_DEFINED__
typedef interface _dispOutputWindowEvents _dispOutputWindowEvents;
#endif 	/* ___dispOutputWindowEvents_FWD_DEFINED__ */


#ifndef __OutputWindowEvents_FWD_DEFINED__
#define __OutputWindowEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class OutputWindowEvents OutputWindowEvents;
#else
typedef struct OutputWindowEvents OutputWindowEvents;
#endif /* __cplusplus */

#endif 	/* __OutputWindowEvents_FWD_DEFINED__ */


#ifndef ___TaskListEventsRoot_FWD_DEFINED__
#define ___TaskListEventsRoot_FWD_DEFINED__
typedef interface _TaskListEventsRoot _TaskListEventsRoot;
#endif 	/* ___TaskListEventsRoot_FWD_DEFINED__ */


#ifndef ___TaskListEvents_FWD_DEFINED__
#define ___TaskListEvents_FWD_DEFINED__
typedef interface _TaskListEvents _TaskListEvents;
#endif 	/* ___TaskListEvents_FWD_DEFINED__ */


#ifndef ___dispTaskListEvents_FWD_DEFINED__
#define ___dispTaskListEvents_FWD_DEFINED__
typedef interface _dispTaskListEvents _dispTaskListEvents;
#endif 	/* ___dispTaskListEvents_FWD_DEFINED__ */


#ifndef __TaskListEvents_FWD_DEFINED__
#define __TaskListEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class TaskListEvents TaskListEvents;
#else
typedef struct TaskListEvents TaskListEvents;
#endif /* __cplusplus */

#endif 	/* __TaskListEvents_FWD_DEFINED__ */


#ifndef __IDTToolsOptionsPage_FWD_DEFINED__
#define __IDTToolsOptionsPage_FWD_DEFINED__
typedef interface IDTToolsOptionsPage IDTToolsOptionsPage;
#endif 	/* __IDTToolsOptionsPage_FWD_DEFINED__ */


#ifndef ___EnvironmentWebBrowser_FWD_DEFINED__
#define ___EnvironmentWebBrowser_FWD_DEFINED__
typedef interface _EnvironmentWebBrowser _EnvironmentWebBrowser;
#endif 	/* ___EnvironmentWebBrowser_FWD_DEFINED__ */


#ifndef ___EnvironmentHelp_FWD_DEFINED__
#define ___EnvironmentHelp_FWD_DEFINED__
typedef interface _EnvironmentHelp _EnvironmentHelp;
#endif 	/* ___EnvironmentHelp_FWD_DEFINED__ */


#ifndef __ColorableItems_FWD_DEFINED__
#define __ColorableItems_FWD_DEFINED__
typedef interface ColorableItems ColorableItems;
#endif 	/* __ColorableItems_FWD_DEFINED__ */


#ifndef __FontsAndColorsItems_FWD_DEFINED__
#define __FontsAndColorsItems_FWD_DEFINED__
typedef interface FontsAndColorsItems FontsAndColorsItems;
#endif 	/* __FontsAndColorsItems_FWD_DEFINED__ */


#ifndef ___FontsAndColors_FWD_DEFINED__
#define ___FontsAndColors_FWD_DEFINED__
typedef interface _FontsAndColors _FontsAndColors;
#endif 	/* ___FontsAndColors_FWD_DEFINED__ */


#ifndef ___EnvironmentGeneral_FWD_DEFINED__
#define ___EnvironmentGeneral_FWD_DEFINED__
typedef interface _EnvironmentGeneral _EnvironmentGeneral;
#endif 	/* ___EnvironmentGeneral_FWD_DEFINED__ */


#ifndef ___EnvironmentFontsAndColors_FWD_DEFINED__
#define ___EnvironmentFontsAndColors_FWD_DEFINED__
typedef interface _EnvironmentFontsAndColors _EnvironmentFontsAndColors;
#endif 	/* ___EnvironmentFontsAndColors_FWD_DEFINED__ */


#ifndef ___EnvironmentProjectsAndSolution_FWD_DEFINED__
#define ___EnvironmentProjectsAndSolution_FWD_DEFINED__
typedef interface _EnvironmentProjectsAndSolution _EnvironmentProjectsAndSolution;
#endif 	/* ___EnvironmentProjectsAndSolution_FWD_DEFINED__ */


#ifndef ___EnvironmentDocuments_FWD_DEFINED__
#define ___EnvironmentDocuments_FWD_DEFINED__
typedef interface _EnvironmentDocuments _EnvironmentDocuments;
#endif 	/* ___EnvironmentDocuments_FWD_DEFINED__ */


#ifndef ___EnvironmentTaskList_FWD_DEFINED__
#define ___EnvironmentTaskList_FWD_DEFINED__
typedef interface _EnvironmentTaskList _EnvironmentTaskList;
#endif 	/* ___EnvironmentTaskList_FWD_DEFINED__ */


#ifndef ___EnvironmentKeyboard_FWD_DEFINED__
#define ___EnvironmentKeyboard_FWD_DEFINED__
typedef interface _EnvironmentKeyboard _EnvironmentKeyboard;
#endif 	/* ___EnvironmentKeyboard_FWD_DEFINED__ */


#ifndef __IExtensibleObject_FWD_DEFINED__
#define __IExtensibleObject_FWD_DEFINED__
typedef interface IExtensibleObject IExtensibleObject;
#endif 	/* __IExtensibleObject_FWD_DEFINED__ */


#ifndef ___FindEvents_FWD_DEFINED__
#define ___FindEvents_FWD_DEFINED__
typedef interface _FindEvents _FindEvents;
#endif 	/* ___FindEvents_FWD_DEFINED__ */


#ifndef ___dispFindEvents_FWD_DEFINED__
#define ___dispFindEvents_FWD_DEFINED__
typedef interface _dispFindEvents _dispFindEvents;
#endif 	/* ___dispFindEvents_FWD_DEFINED__ */


#ifndef __FindEvents_FWD_DEFINED__
#define __FindEvents_FWD_DEFINED__

#ifdef __cplusplus
typedef class FindEvents FindEvents;
#else
typedef struct FindEvents FindEvents;
#endif /* __cplusplus */

#endif 	/* __FindEvents_FWD_DEFINED__ */


#ifndef __IVsTextEditGeneral_FWD_DEFINED__
#define __IVsTextEditGeneral_FWD_DEFINED__
typedef interface IVsTextEditGeneral IVsTextEditGeneral;
#endif 	/* __IVsTextEditGeneral_FWD_DEFINED__ */


#ifndef __IVsTextEditPerLanguage_FWD_DEFINED__
#define __IVsTextEditPerLanguage_FWD_DEFINED__
typedef interface IVsTextEditPerLanguage IVsTextEditPerLanguage;
#endif 	/* __IVsTextEditPerLanguage_FWD_DEFINED__ */


#ifndef __IVsTextEditFonts_FWD_DEFINED__
#define __IVsTextEditFonts_FWD_DEFINED__
typedef interface IVsTextEditFonts IVsTextEditFonts;
#endif 	/* __IVsTextEditFonts_FWD_DEFINED__ */


#ifndef __HTMLWindow_FWD_DEFINED__
#define __HTMLWindow_FWD_DEFINED__
typedef interface HTMLWindow HTMLWindow;
#endif 	/* __HTMLWindow_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_dte_0000_0000 */
/* [local] */ 

#ifdef Delete
#define Delete_defined
#undef Delete
#endif
#ifdef ReplaceText
#define ReplaceText_defined
#undef ReplaceText
#endif
#define DTEIDL_REVISION 8
#define SID_SVsExtensibility IID_IVsExtensibility
//The following are defined for backward source compatibility
// They were needed when the transition from a coclass to interface
// object model was made.
#define IID__Projects IID_Projects
#define _Projects Projects
#define IID__Project IID_Project
#define _Project Project
#define IID__ProjectItems IID_ProjectItems
#define _ProjectItems ProjectItems
#define IID__ProjectItem IID_ProjectItem
#define _ProjectItem ProjectItem
#define IID__Commands IID_Commands
#define _Commands Commands
#define IID__AddIns IID_AddIns
#define _AddIns AddIns
#define IID__AddIn IID_AddIn
#define _AddIn AddIn
#define IID__Windows IID_Windows
#define _Windows Windows
#define IID__LinkedWindows IID_LinkedWindows
#define _LinkedWindows LinkedWindows
#define IID__SelectedItems IID_SelectedItems
#define _SelectedItems SelectedItems
#define IID__SelectedItem IID_SelectedItem
#define _SelectedItem SelectedItem
#define IID__Properties IID_Properties
#define _Properties Properties
#define IID__SelectionContainer IID_SelectionContainer
#define _SelectionContainer SelectionContainer
#define IID__TextBuffer IID_TextBuffer
#define _TextBuffer TextBuffer
#define SID_SVsProfferCommands IID_IVsProfferCommands
#pragma once
#ifndef __INDENTSTYLE__
#define __INDENTSTYLE__
typedef /* [uuid] */  DECLSPEC_UUID("BCCEBE05-D29C-11D2-AABD-00C04F688DDE") 
enum _vsIndentStyle
    {	vsIndentStyleNone	= 0,
	vsIndentStyleDefault	= ( vsIndentStyleNone + 1 ) ,
	vsIndentStyleSmart	= ( vsIndentStyleDefault + 1 ) 
    } 	vsIndentStyle;

#endif // __INDENTSTYLE__
const GUID GUID_Addins = { 0x1e58696e, 0xc90f, 0x11D2, { 0xaa, 0xb2, 0x0, 0xc0, 0x4f, 0x68, 0x8d, 0xde } };
#define LIBID_DTE LIBID_EnvDTE


extern RPC_IF_HANDLE __MIDL_itf_dte_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_dte_0000_0000_v0_0_s_ifspec;


#ifndef __EnvDTE_LIBRARY_DEFINED__
#define __EnvDTE_LIBRARY_DEFINED__

/* library EnvDTE */
/* [version][helpstring][uuid] */ 




















































































































typedef /* [uuid] */  DECLSPEC_UUID("494815FD-49D0-41e0-912F-D9C673DD068A") 
enum vsCMPart
    {	vsCMPartName	= 1,
	vsCMPartAttributes	= 2,
	vsCMPartHeader	= 4,
	vsCMPartWhole	= 8,
	vsCMPartBody	= 16,
	vsCMPartNavigate	= 32,
	vsCMPartAttributesWithDelimiter	= 68,
	vsCMPartBodyWithDelimiter	= 80,
	vsCMPartHeaderWithAttributes	= 6,
	vsCMPartWholeWithAttributes	= 10
    } 	vsCMPart;

typedef /* [uuid] */  DECLSPEC_UUID("0CFBC2CD-0D4E-11D3-8997-00C04F688DDE") 
enum vsCMElement
    {	vsCMElementOther	= 0,
	vsCMElementClass	= 1,
	vsCMElementFunction	= 2,
	vsCMElementVariable	= 3,
	vsCMElementProperty	= 4,
	vsCMElementNamespace	= 5,
	vsCMElementParameter	= 6,
	vsCMElementAttribute	= 7,
	vsCMElementInterface	= 8,
	vsCMElementDelegate	= 9,
	vsCMElementEnum	= 10,
	vsCMElementStruct	= 11,
	vsCMElementUnion	= 12,
	vsCMElementLocalDeclStmt	= 13,
	vsCMElementFunctionInvokeStmt	= 14,
	vsCMElementPropertySetStmt	= 15,
	vsCMElementAssignmentStmt	= 16,
	vsCMElementInheritsStmt	= 17,
	vsCMElementImplementsStmt	= 18,
	vsCMElementOptionStmt	= 19,
	vsCMElementVBAttributeStmt	= 20,
	vsCMElementVBAttributeGroup	= 21,
	vsCMElementEventsDeclaration	= 22,
	vsCMElementUDTDecl	= 23,
	vsCMElementDeclareDecl	= 24,
	vsCMElementDefineStmt	= 25,
	vsCMElementTypeDef	= 26,
	vsCMElementIncludeStmt	= 27,
	vsCMElementUsingStmt	= 28,
	vsCMElementMacro	= 29,
	vsCMElementMap	= 30,
	vsCMElementIDLImport	= 31,
	vsCMElementIDLImportLib	= 32,
	vsCMElementIDLCoClass	= 33,
	vsCMElementIDLLibrary	= 34,
	vsCMElementImportStmt	= 35,
	vsCMElementMapEntry	= 36,
	vsCMElementVCBase	= 37,
	vsCMElementEvent	= 38,
	vsCMElementModule	= 39
    } 	vsCMElement;

typedef /* [uuid] */  DECLSPEC_UUID("0CFBC2CE-0D4E-11D3-8997-00C04F688DDE") 
enum vsCMFunction
    {	vsCMFunctionOther	= 0,
	vsCMFunctionConstructor	= 1,
	vsCMFunctionPropertyGet	= 2,
	vsCMFunctionPropertyLet	= 4,
	vsCMFunctionPropertySet	= 8,
	vsCMFunctionPutRef	= 16,
	vsCMFunctionPropertyAssign	= 32,
	vsCMFunctionSub	= 64,
	vsCMFunctionFunction	= 128,
	vsCMFunctionTopLevel	= 256,
	vsCMFunctionDestructor	= 512,
	vsCMFunctionOperator	= 1024,
	vsCMFunctionVirtual	= 2048,
	vsCMFunctionPure	= 4096,
	vsCMFunctionConstant	= 8192,
	vsCMFunctionShared	= 16384,
	vsCMFunctionInline	= 32768,
	vsCMFunctionComMethod	= 65536
    } 	vsCMFunction;

typedef /* [uuid] */  DECLSPEC_UUID("ED1A3F96-4477-11d3-89BF-00C04F688DDE") 
enum vsCMAccess
    {	vsCMAccessPublic	= 1,
	vsCMAccessPrivate	= 2,
	vsCMAccessProject	= 4,
	vsCMAccessProtected	= 8,
	vsCMAccessDefault	= 32,
	vsCMAccessAssemblyOrFamily	= 64,
	vsCMAccessWithEvents	= 128,
	vsCMAccessProjectOrProtected	= 12
    } 	vsCMAccess;

typedef /* [uuid] */  DECLSPEC_UUID("ED1A3F97-4477-11d3-89BF-00C04F688DDE") 
enum vsCMInfoLocation
    {	vsCMInfoLocationProject	= 1,
	vsCMInfoLocationExternal	= 2,
	vsCMInfoLocationNone	= 4,
	vsCMInfoLocationVirtual	= 8
    } 	vsCMInfoLocation;

typedef /* [uuid] */  DECLSPEC_UUID("ED1A3F98-4477-11d3-89BF-00C04F688DDE") 
enum vsCMPrototype
    {	vsCMPrototypeFullname	= 1,
	vsCMPrototypeNoName	= 2,
	vsCMPrototypeClassName	= 4,
	vsCMPrototypeParamTypes	= 8,
	vsCMPrototypeParamNames	= 16,
	vsCMPrototypeParamDefaultValues	= 32,
	vsCMPrototypeUniqueSignature	= 64,
	vsCMPrototypeType	= 128,
	vsCMPrototypeInitExpression	= 256
    } 	vsCMPrototype;

typedef /* [uuid] */  DECLSPEC_UUID("C58839C3-7435-4944-8277-EA97B8EB2FA2") 
enum vsCMTypeRef
    {	vsCMTypeRefOther	= 0,
	vsCMTypeRefCodeType	= 1,
	vsCMTypeRefArray	= 2,
	vsCMTypeRefVoid	= 3,
	vsCMTypeRefPointer	= 4,
	vsCMTypeRefString	= 5,
	vsCMTypeRefObject	= 6,
	vsCMTypeRefByte	= 7,
	vsCMTypeRefChar	= 8,
	vsCMTypeRefShort	= 9,
	vsCMTypeRefInt	= 10,
	vsCMTypeRefLong	= 11,
	vsCMTypeRefFloat	= 12,
	vsCMTypeRefDouble	= 13,
	vsCMTypeRefDecimal	= 14,
	vsCMTypeRefBool	= 15,
	vsCMTypeRefVariant	= 16
    } 	vsCMTypeRef;

















typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("75607DDE-2B43-11d3-B88B-00C04F79E479") 
enum dbgBreakpointType
    {	dbgBreakpointTypePending	= 1,
	dbgBreakpointTypeBound	= ( dbgBreakpointTypePending + 1 ) 
    } 	dbgBreakpointType;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("229C054C-C146-11d2-8AD1-00C04F79E479") 
enum dbgBreakpointLocationType
    {	dbgBreakpointLocationTypeNone	= 1,
	dbgBreakpointLocationTypeFunction	= ( dbgBreakpointLocationTypeNone + 1 ) ,
	dbgBreakpointLocationTypeFile	= ( dbgBreakpointLocationTypeFunction + 1 ) ,
	dbgBreakpointLocationTypeData	= ( dbgBreakpointLocationTypeFile + 1 ) ,
	dbgBreakpointLocationTypeAddress	= ( dbgBreakpointLocationTypeData + 1 ) 
    } 	dbgBreakpointLocationType;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("2A594772-C146-11d2-8AD1-00C04F79E479") 
enum dbgBreakpointConditionType
    {	dbgBreakpointConditionTypeWhenTrue	= 1,
	dbgBreakpointConditionTypeWhenChanged	= ( dbgBreakpointConditionTypeWhenTrue + 1 ) 
    } 	dbgBreakpointConditionType;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("ED2FBDD2-1EB1-11d3-B888-00C04F79E479") 
enum dbgExceptionAction
    {	dbgExceptionActionDefault	= 1,
	dbgExceptionActionIgnore	= ( dbgExceptionActionDefault + 1 ) ,
	dbgExceptionActionBreak	= ( dbgExceptionActionIgnore + 1 ) ,
	dbgExceptionActionContinue	= ( dbgExceptionActionBreak + 1 ) 
    } 	dbgExceptionAction;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("3A3329CE-C146-11d2-8AD1-00C04F79E479") 
enum dbgHitCountType
    {	dbgHitCountTypeNone	= 1,
	dbgHitCountTypeEqual	= ( dbgHitCountTypeNone + 1 ) ,
	dbgHitCountTypeGreaterOrEqual	= ( dbgHitCountTypeEqual + 1 ) ,
	dbgHitCountTypeMultiple	= ( dbgHitCountTypeGreaterOrEqual + 1 ) 
    } 	dbgHitCountType;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("E940C60A-C68F-11d2-8AD6-00C04F79E479") 
enum dbgDebugMode
    {	dbgDesignMode	= 1,
	dbgBreakMode	= ( dbgDesignMode + 1 ) ,
	dbgRunMode	= ( dbgBreakMode + 1 ) 
    } 	dbgDebugMode;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("4106C580-C146-11d2-8AD1-00C04F79E479") 
enum dbgEventReason
    {	dbgEventReasonNone	= 1,
	dbgEventReasonGo	= ( dbgEventReasonNone + 1 ) ,
	dbgEventReasonAttachProgram	= ( dbgEventReasonGo + 1 ) ,
	dbgEventReasonDetachProgram	= ( dbgEventReasonAttachProgram + 1 ) ,
	dbgEventReasonLaunchProgram	= ( dbgEventReasonDetachProgram + 1 ) ,
	dbgEventReasonEndProgram	= ( dbgEventReasonLaunchProgram + 1 ) ,
	dbgEventReasonStopDebugging	= ( dbgEventReasonEndProgram + 1 ) ,
	dbgEventReasonStep	= ( dbgEventReasonStopDebugging + 1 ) ,
	dbgEventReasonBreakpoint	= ( dbgEventReasonStep + 1 ) ,
	dbgEventReasonExceptionThrown	= ( dbgEventReasonBreakpoint + 1 ) ,
	dbgEventReasonExceptionNotHandled	= ( dbgEventReasonExceptionThrown + 1 ) ,
	dbgEventReasonUserBreak	= ( dbgEventReasonExceptionNotHandled + 1 ) ,
	dbgEventReasonContextSwitch	= ( dbgEventReasonUserBreak + 1 ) 
    } 	dbgEventReason;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("77940E85-BCE0-443d-8B77-F5BD841A211E") 
enum dbgExecutionAction
    {	dbgExecutionActionDefault	= 1,
	dbgExecutionActionGo	= ( dbgExecutionActionDefault + 1 ) ,
	dbgExecutionActionStopDebugging	= ( dbgExecutionActionGo + 1 ) ,
	dbgExecutionActionStepInto	= ( dbgExecutionActionStopDebugging + 1 ) ,
	dbgExecutionActionStepOut	= ( dbgExecutionActionStepInto + 1 ) ,
	dbgExecutionActionStepOver	= ( dbgExecutionActionStepOut + 1 ) ,
	dbgExecutionActionRunToCursor	= ( dbgExecutionActionStepOver + 1 ) 
    } 	dbgExecutionAction;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("178c767a-1963-4bc5-b3f2-e70f3eb441a8") 
enum vsNavigateBrowser
    {	vsNavigateBrowserDefault	= 0,
	vsNavigateBrowserHelp	= 1,
	vsNavigateBrowserNewWindow	= 2
    } 	vsNavigateBrowser;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("947978f5-185b-4366-921e-a14c0ed46702") 
enum vsCommandDisabledFlags
    {	vsCommandDisabledFlagsEnabled	= 0,
	vsCommandDisabledFlagsGrey	= 0x10,
	vsCommandDisabledFlagsHidden	= 0x20
    } 	vsCommandDisabledFlags;

typedef /* [uuid] */  DECLSPEC_UUID("9e3c8489-ae44-4fcf-9697-cd3f312ba08c") 
enum vsInitializeMode
    {	vsInitializeModeStartup	= 0,
	vsInitializeModeReset	= 1
    } 	vsInitializeMode;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("79946991-1ae2-4d2d-9768-fd7801be7daa") 
enum vsCommandBarType
    {	vsCommandBarTypePopup	= 10,
	vsCommandBarTypeToolbar	= 23,
	vsCommandBarTypeMenu	= 24
    } 	vsCommandBarType;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("b638b3e3-c98b-4f59-9d05-105a620529f9") 
enum vsIDEMode
    {	vsIDEModeDesign	= 1,
	vsIDEModeDebug	= 2
    } 	vsIDEMode;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("d920605a-11dd-4a12-a8dc-10578bb08606") 
enum wizardResult
    {	wizardResultSuccess	= -1,
	wizardResultFailure	= 0,
	wizardResultCancel	= 1,
	wizardResultBackOut	= 2
    } 	wizardResult;

#define ext_cm_Solution 4
#define ext_cm_UISetup 5
#define ext_dm_UISetupComplete 2
#define ext_dm_SolutionClosed 3
typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("ca3ee5d0-6305-422f-a425-99737956088f") 
enum vsPromptResult
    {	vsPromptResultYes	= 1,
	vsPromptResultNo	= 2,
	vsPromptResultCancelled	= 3
    } 	vsPromptResult;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("d9e97957-b425-4cd6-bb74-9e6f232a342a") 
enum vsCommandStatusTextWanted
    {	vsCommandStatusTextWantedNone	= 0,
	vsCommandStatusTextWantedName	= 1,
	vsCommandStatusTextWantedStatus	= 2
    } 	vsCommandStatusTextWanted;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("e0ace2e3-49c1-4aa3-ac03-a2877a93d77f") 
enum vsCommandStatus
    {	vsCommandStatusUnsupported	= 0,
	vsCommandStatusSupported	= 1,
	vsCommandStatusEnabled	= 2,
	vsCommandStatusLatched	= 4,
	vsCommandStatusNinched	= 8,
	vsCommandStatusInvisible	= 16
    } 	vsCommandStatus;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("3c537e1a-39b8-4fda-9f22-93d8c030865d") 
enum vsCommandExecOption
    {	vsCommandExecOptionDoDefault	= 0,
	vsCommandExecOptionPromptUser	= 1,
	vsCommandExecOptionDoPromptUser	= 2,
	vsCommandExecOptionShowHelp	= 3
    } 	vsCommandExecOption;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("e0e643c3-5410-487a-b64e-2664a5c4ab50") 
enum vsDisplay
    {	vsDisplayMDI	= 1,
	vsDisplayMDITabs	= 2
    } 	vsDisplay;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("AAE3FAE8-8AFC-11D2-ADEE-00C04F7971C3") 
enum vsSaveChanges
    {	vsSaveChangesYes	= 1,
	vsSaveChangesNo	= 2,
	vsSaveChangesPrompt	= 3
    } 	vsSaveChanges;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("8901ff7a-e6e8-4154-a505-135ee434817e") 
enum vsSaveStatus
    {	vsSaveCancelled	= 2,
	vsSaveSucceeded	= 1
    } 	vsSaveStatus;

#define SID_SVsSourceControl IID_SourceControl
typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("3982FA28-7BCC-4f14-817C-93EEECE8BEEE") 
enum vsBuildKind
    {	vsBuildKindSolution	= 0,
	vsBuildKindProject	= 1,
	vsBuildKindProjectItem	= 2
    } 	vsBuildKind;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("FA7FA701-EFAD-4895-A95A-D4ECB383BF7D") 
enum vsBuildScope
    {	vsBuildScopeSolution	= 1,
	vsBuildScopeBatch	= 2,
	vsBuildScopeProject	= 3
    } 	vsBuildScope;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("FA7FA702-EFAD-4895-A95A-D4ECB383BF7D") 
enum vsBuildAction
    {	vsBuildActionBuild	= 1,
	vsBuildActionRebuildAll	= 2,
	vsBuildActionClean	= 3,
	vsBuildActionDeploy	= 4
    } 	vsBuildAction;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("705CD8A9-D29B-11D2-AABD-00C04F688DDE") 
enum vsWindowType
    {	vsWindowTypeCodeWindow	= 0,
	vsWindowTypeDesigner	= 1,
	vsWindowTypeBrowser	= 2,
	vsWindowTypeWatch	= 3,
	vsWindowTypeLocals	= 4,
	vsWindowTypeImmediate	= 5,
	vsWindowTypeSolutionExplorer	= 6,
	vsWindowTypeProperties	= 7,
	vsWindowTypeFind	= 8,
	vsWindowTypeFindReplace	= 9,
	vsWindowTypeToolbox	= 10,
	vsWindowTypeLinkedWindowFrame	= 11,
	vsWindowTypeMainWindow	= 12,
	vsWindowTypePreview	= 13,
	vsWindowTypeColorPalette	= 14,
	vsWindowTypeToolWindow	= 15,
	vsWindowTypeDocument	= 16,
	vsWindowTypeOutput	= 17,
	vsWindowTypeTaskList	= 18,
	vsWindowTypeAutos	= 19,
	vsWindowTypeCallStack	= 20,
	vsWindowTypeThreads	= 21,
	vsWindowTypeDocumentOutline	= 22,
	vsWindowTypeRunningDocuments	= 23
    } 	vsWindowType;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("cd678662-7939-48a0-bf1d-fa1bed56c130") 
enum vsWindowState
    {	vsWindowStateNormal	= 0,
	vsWindowStateMinimize	= 1,
	vsWindowStateMaximize	= 2
    } 	vsWindowState;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("539f9c17-db5f-421d-b02b-07bcf9faa92f") 
enum vsLinkedWindowType
    {	vsLinkedWindowTypeDocked	= 0,
	vsLinkedWindowTypeVertical	= 2,
	vsLinkedWindowTypeHorizontal	= 3,
	vsLinkedWindowTypeTabbed	= 1
    } 	vsLinkedWindowType;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("59286edc-d580-4e22-96c9-44d15b6148cc") 
enum vsContextAttributes
    {	vsContextAttributesGlobal	= 1,
	vsContextAttributesWindow	= 2,
	vsContextAttributesHighPriority	= 3
    } 	vsContextAttributes;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("410202e1-b83a-41dd-aab0-8c0029fe9435") 
enum vsContextAttributeType
    {	vsContextAttributeFilter	= 1,
	vsContextAttributeLookup	= 2,
	vsContextAttributeLookupF1	= 3
    } 	vsContextAttributeType;

typedef /* [uuid] */  DECLSPEC_UUID("11f0cb7f-4f63-4e09-b99c-92a6cc5f84ce") 
enum vsTextChanged
    {	vsTextChangedMultiLine	= 1,
	vsTextChangedSave	= 2,
	vsTextChangedCaretMoved	= 4,
	vsTextChangedReplaceAll	= 8,
	vsTextChangedNewline	= 16,
	vsTextChangedFindStarting	= 32
    } 	vsTextChanged;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("36B56DE8-5A17-11D1-B2B6-00C04FB6C6FF") 
enum vsTaskPriority
    {	vsTaskPriorityLow	= 1,
	vsTaskPriorityMedium	= 2,
	vsTaskPriorityHigh	= 3
    } 	vsTaskPriority;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("195DAB2E-4854-11D2-8820-00C04FB6C6FF") 
enum vsTaskIcon
    {	vsTaskIconNone	= 0,
	vsTaskIconCompile	= 1,
	vsTaskIconSquiggle	= 2,
	vsTaskIconComment	= 3,
	vsTaskIconShortcut	= 4,
	vsTaskIconUser	= 5
    } 	vsTaskIcon;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("9848C17E-6AA5-11D2-97C3-00C04FB6C6FF") 
enum vsTaskListColumn
    {	vsTaskListColumnPriority	= 1,
	vsTaskListColumnGlyph	= 2,
	vsTaskListColumnCheck	= 4,
	vsTaskListColumnDescription	= 8,
	vsTaskListColumnFile	= 16,
	vsTaskListColumnLine	= 32
    } 	vsTaskListColumn;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("f40a5d39-fd39-4f03-8358-4df3c338b448") 
enum vsStatusAnimation
    {	vsStatusAnimationGeneral	= 0,
	vsStatusAnimationPrint	= 1,
	vsStatusAnimationSave	= 2,
	vsStatusAnimationDeploy	= 3,
	vsStatusAnimationSync	= 4,
	vsStatusAnimationBuild	= 5,
	vsStatusAnimationFind	= 6
    } 	vsStatusAnimation;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("44DF8FDC-7378-11D2-97CA-00C04FB6C6FF") 
enum vsToolBoxItemFormat
    {	vsToolBoxItemFormatText	= 1,
	vsToolBoxItemFormatHTML	= 2,
	vsToolBoxItemFormatGUID	= 4,
	vsToolBoxItemFormatDotNETComponent	= 8
    } 	vsToolBoxItemFormat;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("705CD8AC-D29B-11D2-AABD-00C04F688DDE") 
enum vsStartUp
    {	vsStartUpShowHomePage	= 0,
	vsStartUpLoadLastSolution	= 1,
	vsStartUpOpenProjectDialog	= 2,
	vsStartUpNewProjectDialog	= 3,
	vsStartUpEmptyEnvironment	= 4
    } 	vsStartUp;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("705CD8A4-D29B-11D2-AABD-00C04F688DDE") 
enum vsFontCharSet
    {	vsFontCharSetANSI	= 0,
	vsFontCharSetDefault	= 1,
	vsFontCharSetSymbol	= 2,
	vsFontCharSetShiftJIS	= 128,
	vsFontCharSetHangeul	= 129,
	vsFontCharSetGB2312	= 134,
	vsFontCharSetChineseBig5	= 136,
	vsFontCharSetOEM	= 255,
	vsFontCharSetJohab	= 130,
	vsFontCharSetHebrew	= 177,
	vsFontCharSetArabic	= 178,
	vsFontCharSetGreek	= 161,
	vsFontCharSetTurkish	= 162,
	vsFontCharSetVietnamese	= 163,
	vsFontCharSetThai	= 222,
	vsFontCharSetEastEurope	= 238,
	vsFontCharSetRussian	= 204,
	vsFontCharSetMac	= 77,
	vsFontCharSetBaltic	= 186
    } 	vsFontCharSet;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("947FFC03-8314-4288-BDD7-DFD282DA40D5") 
enum vsBrowserViewSource
    {	vsBrowserViewSourceSource	= 1,
	vsBrowserViewSourceDesign	= 2,
	vsBrowserViewSourceExternal	= 3
    } 	vsBrowserViewSource;

// Standard Shell Automation Extender CATIDs
// These are the intrinsic extender CATIDs for the automation and the property
// browser IDispatch objects implemented by the shell that suppport Automation
// Extenders. For other implementation specific extender CATIDs (for eg. VB, VC)
// look in those specific headers
//
// Also note that the object (IDispatch) used for automation is typically
// different than the one used for Property Browsing. For instance, the
// DTE.Solution automation object is different than the object used to populate
// the property browser when the solution node is selected in the project
// explorer. Hence, the two objects used DIFFERENT intrinsic CATIDs
// (guidCATIDSolution for the Solution automation object and
// guidCATIDSolutionBrowseObject for the Solution's property browse object)
// Solution Automation object CATID {52AEFF70-BBD8-11d2-8598-006097C68E81}
DEFINE_GUID(guidCATIDSolution,						0x52aeff70, 0xbbd8, 0x11d2, 0x85, 0x98, 0x0, 0x60, 0x97, 0xc6, 0x8e, 0x81);
// Solution Browse Object CATID {A2392464-7C22-11d3-BDCA-00C04F688E50}
DEFINE_GUID(guidCATIDSolutionBrowseObject, 0xa2392464, 0x7c22, 0x11d3, 0xbd, 0xca, 0x0, 0xc0, 0x4f, 0x68, 0x8e, 0x50);
// Misc Files Project Automation Object CATID {610d4612-d0d5-11d2-8599-006097c68e81}
DEFINE_GUID(guidCATIDMiscFilesProject,		0x610d4612, 0xd0d5, 0x11d2, 0x85, 0x99, 0x00, 0x60, 0x97, 0xc6, 0x8e, 0x81);
// Misc Files Project Item Automation Object CATID {610d4613-d0d5-11d2-8599-006097c68e81
DEFINE_GUID(guidCATIDMiscFilesProjectItem, 0x610d4613, 0xd0d5, 0x11d2, 0x85, 0x99, 0x00, 0x60, 0x97, 0xc6, 0x8e, 0x81);
// Generic Project Automation Object CATID {610d4616-d0d5-11d2-8599-006097c68e81}
DEFINE_GUID(guidCATIDGenericProject,			0x610d4616, 0xd0d5, 0x11d2, 0x85, 0x99, 0x00, 0x60, 0x97, 0xc6, 0x8e, 0x81);
// (Generic) Document Automation Object CATID {610d4611-d0d5-11d2-8599-006097c68e81}
DEFINE_GUID(guidCATIDDocument,						0x610d4611, 0xd0d5, 0x11d2, 0x85, 0x99, 0x00, 0x60, 0x97, 0xc6, 0x8e, 0x81);
typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("28362492-b1e3-4998-94c6-0a2cdb5484ed") 
enum vsUISelectionType
    {	vsUISelectionTypeSelect	= 1,
	vsUISelectionTypeToggle	= 2,
	vsUISelectionTypeExtend	= 3,
	vsUISelectionTypeSetCaret	= 4
    } 	vsUISelectionType;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("16386f0e-4ad2-41b8-8d6f-7ff230ae1d17") 
enum vsBuildState
    {	vsBuildStateNotStarted	= 1,
	vsBuildStateInProgress	= 2,
	vsBuildStateDone	= 3
    } 	vsBuildState;

#ifdef Debug
#define Debug_defined
#undef Debug
#endif
typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("612256bd-7ba2-45c4-b60f-7b2ae42f96c3") 
enum vsConfigurationType
    {	vsConfigurationTypeProject	= 1,
	vsConfigurationTypeProjectItem	= 2
    } 	vsConfigurationType;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("9fb64132-726a-4262-829e-051c6ec7b24f") 
enum vsFindAction
    {	vsFindActionFind	= 1,
	vsFindActionFindAll	= 2,
	vsFindActionReplace	= 3,
	vsFindActionReplaceAll	= 4,
	vsFindActionBookmarkAll	= 5
    } 	vsFindAction;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("6fa137be-32a8-4f54-8099-60bb955097a3") 
enum vsFindResult
    {	vsFindResultNotFound	= 0,
	vsFindResultFound	= 1,
	vsFindResultReplaceAndNotFound	= 2,
	vsFindResultReplaceAndFound	= 3,
	vsFindResultReplaced	= 4,
	vsFindResultPending	= 5,
	vsFindResultError	= 6
    } 	vsFindResult;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("530f2d0e-a5f9-4b7a-a379-0a3b99b5e66d") 
enum vsFindPatternSyntax
    {	vsFindPatternSyntaxLiteral	= 0,
	vsFindPatternSyntaxRegExpr	= 1,
	vsFindPatternSyntaxWildcards	= 2
    } 	vsFindPatternSyntax;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("481899fb-b657-4e45-8c00-0e051052bb13") 
enum vsFindTarget
    {	vsFindTargetCurrentDocument	= 1,
	vsFindTargetCurrentDocumentSelection	= 2,
	vsFindTargetCurrentDocumentFunction	= 3,
	vsFindTargetOpenDocuments	= 4,
	vsFindTargetCurrentProject	= 5,
	vsFindTargetSolution	= 6,
	vsFindTargetFiles	= 7
    } 	vsFindTarget;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("ea9142bf-b2af-48a7-b256-93ccd3350bd8") 
enum vsFindResultsLocation
    {	vsFindResultsNone	= 0,
	vsFindResults1	= 1,
	vsFindResults2	= 2
    } 	vsFindResultsLocation;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("a457303f-d058-4415-a2b4-a81b148c7689") 
enum vsFindOptions
    {	vsFindOptionsNone	= 0,
	vsFindOptionsMatchWholeWord	= 0x2,
	vsFindOptionsMatchCase	= 0x4,
	vsFindOptionsRegularExpression	= 0x8,
	vsFindOptionsBackwards	= 0x80,
	vsFindOptionsFromStart	= 0x100,
	vsFindOptionsMatchInHiddenText	= 0x200,
	vsFindOptionsWildcards	= 0x400,
	vsFindOptionsSearchSubfolders	= 0x1000,
	vsFindOptionsKeepModifiedDocumentsOpen	= 0x2000
    } 	vsFindOptions;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("b4cc3e73-0038-47e5-ba52-d1183f8fdbf0") 
enum vsNavigateOptions
    {	vsNavigateOptionsDefault	= 0,
	vsNavigateOptionsNewWindow	= 0x1
    } 	vsNavigateOptions;

#define SID_SExtensionManager	IID_ObjectExtenders
typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("221ab797-408b-4d69-9dd1-c6f329189414") 
enum vsFilterProperties
    {	vsFilterPropertiesNone	= 0,
	vsFilterPropertiesAll	= 1,
	vsFilterPropertiesSet	= 2
    } 	vsFilterProperties;

typedef /* [uuid] */  DECLSPEC_UUID("bbdfcfe4-4c68-4736-b991-f85fa955d585") 
enum vsWhitespaceOptions
    {	vsWhitespaceOptionsHorizontal	= 0,
	vsWhitespaceOptionsVertical	= 1
    } 	vsWhitespaceOptions;

typedef /* [uuid] */  DECLSPEC_UUID("98a2f403-007b-41f8-9a18-87addef1760f") 
enum vsCaseOptions
    {	vsCaseOptionsLowercase	= 1,
	vsCaseOptionsUppercase	= 2,
	vsCaseOptionsCapitalize	= 3
    } 	vsCaseOptions;

typedef /* [uuid] */  DECLSPEC_UUID("29182bd4-48a8-4e4b-81dd-1b742a3a5203") 
enum vsMovementOptions
    {	vsMovementOptionsMove	= 0,
	vsMovementOptionsExtend	= 1
    } 	vsMovementOptions;

typedef /* [uuid] */  DECLSPEC_UUID("f05ea427-01ba-46dc-8392-fb4aa7e5eb3a") 
enum vsStartOfLineOptions
    {	vsStartOfLineOptionsFirstColumn	= 0,
	vsStartOfLineOptionsFirstText	= 1
    } 	vsStartOfLineOptions;

typedef /* [uuid] */  DECLSPEC_UUID("11b63a24-6200-48cd-9b8d-fc6a6fb9eff0") 
enum vsGoToLineOptions
    {	vsGoToLineOptionsLast	= -1,
	vsGoToLineOptionsFirst	= -2
    } 	vsGoToLineOptions;

typedef /* [uuid] */  DECLSPEC_UUID("c512dde3-a220-4373-8950-e6636f8cc546") 
enum vsSmartFormatOptions
    {	vsSmartFormatOptionsNone	= 0,
	vsSmartFormatOptionsBlock	= 1,
	vsSmartFormatOptionsSmart	= 2
    } 	vsSmartFormatOptions;

typedef /* [uuid] */  DECLSPEC_UUID("f3128012-b41f-46ec-8794-f716db9697d0") 
enum vsSelectionMode
    {	vsSelectionModeStream	= 0,
	vsSelectionModeBox	= 1
    } 	vsSelectionMode;

typedef /* [uuid] */  DECLSPEC_UUID("79515b53-8294-4f96-aa96-dd16bf126703") 
enum vsInsertFlags
    {	vsInsertFlagsCollapseToEnd	= 1,
	vsInsertFlagsCollapseToStart	= 2,
	vsInsertFlagsContainNewText	= 4,
	vsInsertFlagsInsertAtEnd	= 8,
	vsInsertFlagsInsertAtStart	= 16
    } 	vsInsertFlags;

typedef /* [uuid] */  DECLSPEC_UUID("b26ac3c2-3981-4a2e-9d6f-559b41cd1cd2") 
enum vsPaneShowHow
    {	vsPaneShowCentered	= 0,
	vsPaneShowTop	= 1,
	vsPaneShowAsIs	= 2
    } 	vsPaneShowHow;

typedef /* [uuid] */  DECLSPEC_UUID("4eb2c04f-8a83-4363-81db-dbb76cd76812") 
enum vsMoveToColumnLine
    {	vsMoveToColumnLineFirst	= 0,
	vsMoveToColumnLineLast	= 1
    } 	vsMoveToColumnLine;

typedef /* [uuid] */  DECLSPEC_UUID("3740dcf8-b8b2-49a9-a1ab-944c84876c3c") 
enum vsEPReplaceTextOptions
    {	vsEPReplaceTextKeepMarkers	= 1,
	vsEPReplaceTextNormalizeNewlines	= 2,
	vsEPReplaceTextTabsSpaces	= 4,
	vsEPReplaceTextAutoformat	= 8
    } 	vsEPReplaceTextOptions;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("C106C8DC-6D0C-11D1-B2C9-00C04FB6C6FF") 
enum vsext_FontCharSet
    {	vsext_fontcs_ANSI	= 0,
	vsext_fontcs_DEFAULT	= 1,
	vsext_fontcs_SYMBOL	= 2,
	vsext_fontcs_SHIFTJIS	= 128,
	vsext_fontcs_HANGEUL	= 129,
	vsext_fontcs_GB2312	= 134,
	vsext_fontcs_CHINESEBIG5	= 136,
	vsext_fontcs_OEM	= 255,
	vsext_fontcs_JOHAB	= 130,
	vsext_fontcs_HEBREW	= 177,
	vsext_fontcs_ARABIC	= 178,
	vsext_fontcs_GREEK	= 161,
	vsext_fontcs_TURKISH	= 162,
	vsext_fontcs_VIETNAMESE	= 163,
	vsext_fontcs_THAI	= 222,
	vsext_fontcs_EASTEUROPE	= 238,
	vsext_fontcs_RUSSIAN	= 204,
	vsext_fontcs_MAC	= 77,
	vsext_fontcs_BALTIC	= 186
    } 	vsext_FontCharSet;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("cb0066fc-c052-4b24-84e7-045f33e4d6af") 
enum VSEXECRESULT
    {	RESULT_Success	= -1,
	RESULT_Failure	= 0,
	RESULT_Cancel	= 1
    } 	vs_exec_Result;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("91aab9c3-da83-473a-8bc9-1a2730865995") 
enum vsext_DisplayMode
    {	vsext_dm_SDI	= 0,
	vsext_dm_MDI	= 1
    } 	vsext_DisplayMode;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("E4B9E990-FD59-11D0-BBC6-00A0C90F2744") 
enum vsext_WindowType
    {	vsext_wt_CodeWindow	= 0,
	vsext_wt_Designer	= 1,
	vsext_wt_Browser	= 2,
	vsext_wt_Watch	= 3,
	vsext_wt_Locals	= 4,
	vsext_wt_Immediate	= 5,
	vsext_wt_ProjectWindow	= 6,
	vsext_wt_PropertyWindow	= 7,
	vsext_wt_Find	= 8,
	vsext_wt_FindReplace	= 9,
	vsext_wt_Toolbox	= 10,
	vsext_wt_LinkedWindowFrame	= 11,
	vsext_wt_MainWindow	= 12,
	vsext_wt_Preview	= 13,
	vsext_wt_ColorPalette	= 14,
	vsext_wt_ToolWindow	= 15,
	vsext_wt_Document	= 16,
	vsext_wt_OutPutWindow	= 17,
	vsext_wt_TaskList	= 18,
	vsext_wt_Autos	= 19,
	vsext_wt_CallStack	= 20,
	vsext_wt_Threads	= 21,
	vsext_wt_DocumentOutline	= 22,
	vsext_wt_RunningDocuments	= 23
    } 	vsext_WindowType;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("e0c72e51-6b99-489b-aca6-90cedce888e7") 
enum vsext_WindowState
    {	vsext_ws_Normal	= 0,
	vsext_ws_Minimize	= 1,
	vsext_ws_Maximize	= 2
    } 	vsext_WindowState;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("97653acf-d869-4ec0-b450-e9842457c729") 
enum vsext_LinkedWindowType
    {	vsext_lwt_Docked	= 0,
	vsext_lwt_Tabbed	= 1
    } 	vsext_LinkedWindowType;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("A5578594-18E0-11D1-BBDB-00A0C90F2744") 
enum vsext_StartUp
    {	vsext_su_EMPTY_ENVIRONMENT	= 0,
	vsext_su_NEW_SOLUTION_DIALOG	= 1,
	vsext_su_LOAD_LAST_SOLUTION	= 2
    } 	vsext_StartUp;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("47046891-19F7-11D1-BCAF-000000000000") 
enum vsext_Build
    {	vsext_bld_SAVE_CHANGES	= 0,
	vsext_bld_CONFIRM_SAVE	= 1,
	vsext_bld_NO_SAVE	= 2
    } 	vsext_Build;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("bdbe10aa-74d3-498a-a464-8074cd5e99cb") 
enum DsTextSearchOptions
    {	dsMatchWord	= 2,
	dsMatchCase	= 4,
	dsMatchNoRegExp	= 0,
	dsMatchRegExp	= 8,
	dsMatchRegExpB	= 16,
	dsMatchRegExpE	= 32,
	dsMatchRegExpCur	= 64,
	dsMatchForward	= 0,
	dsMatchBackward	= 128,
	dsMatchFromStart	= 256
    } 	DsTextSearchOptions;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("99744EC4-7A72-11D2-ADC9-00C04F7971C3") 
enum DsSaveChanges
    {	dsSaveChangesYes	= 1,
	dsSaveChangesNo	= 2,
	dsSaveChangesPrompt	= 3
    } 	DsSaveChanges;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("6269c78d-5591-40d6-a095-5bac8ba07478") 
enum DsGoToLineOptions
    {	dsLastLine	= -1
    } 	DsGoToLineOptions;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("95751137-ac07-4c76-a219-4be5d381985d") 
enum DsStartOfLineOptions
    {	dsFirstColumn	= 0,
	dsFirstText	= 1
    } 	DsStartOfLineOptions;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("4b58f807-6f08-4b41-abaf-b5bca4869d2c") 
enum DsMovementOptions
    {	dsMove	= 0,
	dsExtend	= 1
    } 	DsMovementOptions;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("31445615-bcae-4ba0-a99c-246bc660cfe8") 
enum DsWhitespaceOptions
    {	dsHorizontal	= 0,
	dsVertical	= 1
    } 	DsWhitespaceOptions;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("f7d38518-e803-4462-8fa2-e481642d42fb") 
enum DsCaseOptions
    {	dsLowercase	= 1,
	dsUppercase	= 2,
	dsCapitalize	= 3
    } 	DsCaseOptions;

typedef /* [hidden][uuid] */  DECLSPEC_UUID("8d78b9a9-a3be-49d0-aa97-bf7fa46d8ea2") 
enum dsSaveStatus
    {	dsSaveCancelled	= 2,
	dsSaveSucceeded	= 1
    } 	dsSaveStatus;

typedef /* [helpstringcontext][helpstring][helpcontext][uuid] */  DECLSPEC_UUID("44160df5-e305-4d85-b7fe-6b5a1b81b9b0") 
enum vsHTMLTabs
    {	vsHTMLTabsSource	= 0,
	vsHTMLTabsDesign	= 1
    } 	vsHTMLTabs;


EXTERN_C const IID LIBID_EnvDTE;

#ifndef ___DTE_INTERFACE_DEFINED__
#define ___DTE_INTERFACE_DEFINED__

/* interface _DTE */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID__DTE;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("04a72314-32e9-48e2-9b87-a63603454f3e")
    _DTE : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandBars( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppcbs) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Windows( 
            /* [retval][out] */ __RPC__deref_out_opt Windows **ppwnsVBWindows) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Events( 
            /* [retval][out] */ __RPC__deref_out_opt Events **ppevtEvents) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AddIns( 
            /* [retval][out] */ __RPC__deref_out_opt AddIns **lpppAddIns) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MainWindow( 
            /* [retval][out] */ __RPC__deref_out_opt Window **ppwin) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveWindow( 
            /* [retval][out] */ __RPC__deref_out_opt Window **ppwinActive) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Quit( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayMode( 
            /* [retval][out] */ __RPC__out vsDisplay *lpDispMode) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayMode( 
            /* [in] */ vsDisplay DispMode) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Solution( 
            /* [retval][out] */ __RPC__deref_out_opt Solution	**ppSolution) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Commands( 
            /* [retval][out] */ __RPC__deref_out_opt Commands **ppCommands) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetObject( 
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Properties( 
            __RPC__in BSTR Category,
            __RPC__in BSTR Page,
            /* [retval][out] */ __RPC__deref_out_opt Properties **ppObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectedItems( 
            /* [retval][out] */ __RPC__deref_out_opt SelectedItems **ppSelectedItems) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandLineArguments( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE OpenFile( 
            /* [in] */ __RPC__in BSTR ViewKind,
            /* [in] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt Window **ppwin) = 0;
        
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsOpenFile( 
            /* [in] */ __RPC__in BSTR ViewKind,
            /* [in] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LocaleID( 
            /* [retval][out] */ __RPC__out long *lpReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WindowConfigurations( 
            /* [retval][out] */ __RPC__deref_out_opt WindowConfigurations **WindowConfigurationsObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Documents( 
            /* [retval][out] */ __RPC__deref_out_opt Documents **ppDocuments) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveDocument( 
            /* [retval][out] */ __RPC__deref_out_opt Document **ppDocument) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ExecuteCommand( 
            /* [in] */ __RPC__in BSTR CommandName,
            /* [defaultvalue][in] */ __RPC__in BSTR CommandArgs = L"") = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Globals( 
            /* [retval][out] */ __RPC__deref_out_opt Globals **ppGlobals) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StatusBar( 
            /* [retval][out] */ __RPC__deref_out_opt StatusBar **ppStatusBar) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserControl( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *UserControl) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UserControl( 
            /* [in] */ VARIANT_BOOL HasControl) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObjectExtenders( 
            /* [retval][out] */ __RPC__deref_out_opt ObjectExtenders **ppObjectExtenders) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Find( 
            /* [retval][out] */ __RPC__deref_out_opt Find **ppFind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mode( 
            /* [retval][out] */ __RPC__out vsIDEMode *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LaunchWizard( 
            /* [in] */ __RPC__in BSTR VSZFile,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *ContextParams,
            /* [retval][out] */ __RPC__out wizardResult *pResult) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemOperations( 
            /* [retval][out] */ __RPC__deref_out_opt ItemOperations **ppItemOperations) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UndoContext( 
            /* [retval][out] */ __RPC__deref_out_opt UndoContext **ppUndoContext) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Macros( 
            /* [retval][out] */ __RPC__deref_out_opt Macros **ppMacros) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveSolutionProjects( 
            /* [retval][out] */ __RPC__out VARIANT *pProjects) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MacrosIDE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RegistryRoot( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [propget][hidden][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContextAttributes( 
            /* [retval][out] */ __RPC__deref_out_opt ContextAttributes **ppVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SourceControl( 
            /* [retval][out] */ __RPC__deref_out_opt SourceControl **ppVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressUI( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressUI( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Debugger( 
            /* [retval][out] */ __RPC__deref_out_opt Debugger **ppDebugger) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SatelliteDLLPath( 
            __RPC__in BSTR Path,
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullPath) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Edition( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ProductEdition) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _DTEVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DTE * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DTE * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DTE * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DTE * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DTE * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DTE * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DTE * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandBars )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppcbs);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Windows )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt Windows **ppwnsVBWindows);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Events )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt Events **ppevtEvents);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddIns )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt AddIns **lpppAddIns);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MainWindow )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **ppwin);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveWindow )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **ppwinActive);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Quit )( 
            _DTE * This);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayMode )( 
            _DTE * This,
            /* [retval][out] */ __RPC__out vsDisplay *lpDispMode);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayMode )( 
            _DTE * This,
            /* [in] */ vsDisplay DispMode);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Solution )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt Solution	**ppSolution);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Commands )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt Commands **ppCommands);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetObject )( 
            _DTE * This,
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            _DTE * This,
            __RPC__in BSTR Category,
            __RPC__in BSTR Page,
            /* [retval][out] */ __RPC__deref_out_opt Properties **ppObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedItems )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt SelectedItems **ppSelectedItems);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandLineArguments )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OpenFile )( 
            _DTE * This,
            /* [in] */ __RPC__in BSTR ViewKind,
            /* [in] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt Window **ppwin);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpenFile )( 
            _DTE * This,
            /* [in] */ __RPC__in BSTR ViewKind,
            /* [in] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LocaleID )( 
            _DTE * This,
            /* [retval][out] */ __RPC__out long *lpReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WindowConfigurations )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt WindowConfigurations **WindowConfigurationsObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Documents )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt Documents **ppDocuments);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveDocument )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt Document **ppDocument);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ExecuteCommand )( 
            _DTE * This,
            /* [in] */ __RPC__in BSTR CommandName,
            /* [defaultvalue][in] */ __RPC__in BSTR CommandArgs);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Globals )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt Globals **ppGlobals);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StatusBar )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt StatusBar **ppStatusBar);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserControl )( 
            _DTE * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *UserControl);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UserControl )( 
            _DTE * This,
            /* [in] */ VARIANT_BOOL HasControl);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectExtenders )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt ObjectExtenders **ppObjectExtenders);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Find )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt Find **ppFind);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            _DTE * This,
            /* [retval][out] */ __RPC__out vsIDEMode *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LaunchWizard )( 
            _DTE * This,
            /* [in] */ __RPC__in BSTR VSZFile,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *ContextParams,
            /* [retval][out] */ __RPC__out wizardResult *pResult);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemOperations )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt ItemOperations **ppItemOperations);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UndoContext )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt UndoContext **ppUndoContext);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Macros )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt Macros **ppMacros);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveSolutionProjects )( 
            _DTE * This,
            /* [retval][out] */ __RPC__out VARIANT *pProjects);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MacrosIDE )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryRoot )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [propget][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContextAttributes )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt ContextAttributes **ppVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SourceControl )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt SourceControl **ppVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressUI )( 
            _DTE * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressUI )( 
            _DTE * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Debugger )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt Debugger **ppDebugger);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SatelliteDLLPath )( 
            _DTE * This,
            __RPC__in BSTR Path,
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Edition )( 
            _DTE * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ProductEdition);
        
        END_INTERFACE
    } _DTEVtbl;

    interface _DTE
    {
        CONST_VTBL struct _DTEVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DTE_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DTE_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DTE_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DTE_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DTE_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DTE_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DTE_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _DTE_get_Name(This,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_Name(This,lpbstrReturn) ) 

#define _DTE_get_FileName(This,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_FileName(This,lpbstrReturn) ) 

#define _DTE_get_Version(This,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_Version(This,lpbstrReturn) ) 

#define _DTE_get_CommandBars(This,ppcbs)	\
    ( (This)->lpVtbl -> get_CommandBars(This,ppcbs) ) 

#define _DTE_get_Windows(This,ppwnsVBWindows)	\
    ( (This)->lpVtbl -> get_Windows(This,ppwnsVBWindows) ) 

#define _DTE_get_Events(This,ppevtEvents)	\
    ( (This)->lpVtbl -> get_Events(This,ppevtEvents) ) 

#define _DTE_get_AddIns(This,lpppAddIns)	\
    ( (This)->lpVtbl -> get_AddIns(This,lpppAddIns) ) 

#define _DTE_get_MainWindow(This,ppwin)	\
    ( (This)->lpVtbl -> get_MainWindow(This,ppwin) ) 

#define _DTE_get_ActiveWindow(This,ppwinActive)	\
    ( (This)->lpVtbl -> get_ActiveWindow(This,ppwinActive) ) 

#define _DTE_Quit(This)	\
    ( (This)->lpVtbl -> Quit(This) ) 

#define _DTE_get_DisplayMode(This,lpDispMode)	\
    ( (This)->lpVtbl -> get_DisplayMode(This,lpDispMode) ) 

#define _DTE_put_DisplayMode(This,DispMode)	\
    ( (This)->lpVtbl -> put_DisplayMode(This,DispMode) ) 

#define _DTE_get_Solution(This,ppSolution)	\
    ( (This)->lpVtbl -> get_Solution(This,ppSolution) ) 

#define _DTE_get_Commands(This,ppCommands)	\
    ( (This)->lpVtbl -> get_Commands(This,ppCommands) ) 

#define _DTE_GetObject(This,Name,ppObject)	\
    ( (This)->lpVtbl -> GetObject(This,Name,ppObject) ) 

#define _DTE_get_Properties(This,Category,Page,ppObject)	\
    ( (This)->lpVtbl -> get_Properties(This,Category,Page,ppObject) ) 

#define _DTE_get_SelectedItems(This,ppSelectedItems)	\
    ( (This)->lpVtbl -> get_SelectedItems(This,ppSelectedItems) ) 

#define _DTE_get_CommandLineArguments(This,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_CommandLineArguments(This,lpbstrReturn) ) 

#define _DTE_OpenFile(This,ViewKind,FileName,ppwin)	\
    ( (This)->lpVtbl -> OpenFile(This,ViewKind,FileName,ppwin) ) 

#define _DTE_get_IsOpenFile(This,ViewKind,FileName,lpfReturn)	\
    ( (This)->lpVtbl -> get_IsOpenFile(This,ViewKind,FileName,lpfReturn) ) 

#define _DTE_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define _DTE_get_LocaleID(This,lpReturn)	\
    ( (This)->lpVtbl -> get_LocaleID(This,lpReturn) ) 

#define _DTE_get_WindowConfigurations(This,WindowConfigurationsObject)	\
    ( (This)->lpVtbl -> get_WindowConfigurations(This,WindowConfigurationsObject) ) 

#define _DTE_get_Documents(This,ppDocuments)	\
    ( (This)->lpVtbl -> get_Documents(This,ppDocuments) ) 

#define _DTE_get_ActiveDocument(This,ppDocument)	\
    ( (This)->lpVtbl -> get_ActiveDocument(This,ppDocument) ) 

#define _DTE_ExecuteCommand(This,CommandName,CommandArgs)	\
    ( (This)->lpVtbl -> ExecuteCommand(This,CommandName,CommandArgs) ) 

#define _DTE_get_Globals(This,ppGlobals)	\
    ( (This)->lpVtbl -> get_Globals(This,ppGlobals) ) 

#define _DTE_get_StatusBar(This,ppStatusBar)	\
    ( (This)->lpVtbl -> get_StatusBar(This,ppStatusBar) ) 

#define _DTE_get_FullName(This,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_FullName(This,lpbstrReturn) ) 

#define _DTE_get_UserControl(This,UserControl)	\
    ( (This)->lpVtbl -> get_UserControl(This,UserControl) ) 

#define _DTE_put_UserControl(This,HasControl)	\
    ( (This)->lpVtbl -> put_UserControl(This,HasControl) ) 

#define _DTE_get_ObjectExtenders(This,ppObjectExtenders)	\
    ( (This)->lpVtbl -> get_ObjectExtenders(This,ppObjectExtenders) ) 

#define _DTE_get_Find(This,ppFind)	\
    ( (This)->lpVtbl -> get_Find(This,ppFind) ) 

#define _DTE_get_Mode(This,pVal)	\
    ( (This)->lpVtbl -> get_Mode(This,pVal) ) 

#define _DTE_LaunchWizard(This,VSZFile,ContextParams,pResult)	\
    ( (This)->lpVtbl -> LaunchWizard(This,VSZFile,ContextParams,pResult) ) 

#define _DTE_get_ItemOperations(This,ppItemOperations)	\
    ( (This)->lpVtbl -> get_ItemOperations(This,ppItemOperations) ) 

#define _DTE_get_UndoContext(This,ppUndoContext)	\
    ( (This)->lpVtbl -> get_UndoContext(This,ppUndoContext) ) 

#define _DTE_get_Macros(This,ppMacros)	\
    ( (This)->lpVtbl -> get_Macros(This,ppMacros) ) 

#define _DTE_get_ActiveSolutionProjects(This,pProjects)	\
    ( (This)->lpVtbl -> get_ActiveSolutionProjects(This,pProjects) ) 

#define _DTE_get_MacrosIDE(This,pDTE)	\
    ( (This)->lpVtbl -> get_MacrosIDE(This,pDTE) ) 

#define _DTE_get_RegistryRoot(This,pVal)	\
    ( (This)->lpVtbl -> get_RegistryRoot(This,pVal) ) 

#define _DTE_get_Application(This,pVal)	\
    ( (This)->lpVtbl -> get_Application(This,pVal) ) 

#define _DTE_get_ContextAttributes(This,ppVal)	\
    ( (This)->lpVtbl -> get_ContextAttributes(This,ppVal) ) 

#define _DTE_get_SourceControl(This,ppVal)	\
    ( (This)->lpVtbl -> get_SourceControl(This,ppVal) ) 

#define _DTE_get_SuppressUI(This,pVal)	\
    ( (This)->lpVtbl -> get_SuppressUI(This,pVal) ) 

#define _DTE_put_SuppressUI(This,Suppress)	\
    ( (This)->lpVtbl -> put_SuppressUI(This,Suppress) ) 

#define _DTE_get_Debugger(This,ppDebugger)	\
    ( (This)->lpVtbl -> get_Debugger(This,ppDebugger) ) 

#define _DTE_SatelliteDLLPath(This,Path,Name,pFullPath)	\
    ( (This)->lpVtbl -> SatelliteDLLPath(This,Path,Name,pFullPath) ) 

#define _DTE_get_Edition(This,ProductEdition)	\
    ( (This)->lpVtbl -> get_Edition(This,ProductEdition) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DTE_INTERFACE_DEFINED__ */


#ifndef ___Solution_INTERFACE_DEFINED__
#define ___Solution_INTERFACE_DEFINED__

/* interface _Solution */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID__Solution;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("26f6cc4b-7a48-4e4d-8af5-9e960232e05f")
    _Solution : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Project **lppcReturn) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *lplReturn) = 0;
        
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ __RPC__in BSTR FileName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFromTemplate( 
            /* [in] */ __RPC__in BSTR FileName,
            /* [in] */ __RPC__in BSTR Destination,
            /* [in] */ __RPC__in BSTR ProjectName,
            /* [defaultvalue][in] */ VARIANT_BOOL Exclusive,
            /* [retval][out] */ __RPC__deref_out_opt Project **IppptReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFromFile( 
            /* [in] */ __RPC__in BSTR FileName,
            /* [defaultvalue][in] */ VARIANT_BOOL Exclusive,
            /* [retval][out] */ __RPC__deref_out_opt Project **IppptReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [in] */ __RPC__in BSTR FileName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [defaultvalue][in] */ VARIANT_BOOL SaveFirst = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Properties( 
            /* [retval][out] */ __RPC__deref_out_opt Properties **ppObject) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsDirty( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn) = 0;
        
        virtual /* [hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsDirty( 
            /* [in] */ VARIANT_BOOL fDirty) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ __RPC__in_opt Project *proj) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TemplatePath( 
            /* [in] */ __RPC__in BSTR ProjectType,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrPath) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Saved( 
            /* [in] */ VARIANT_BOOL fDirty) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Globals( 
            /* [retval][out] */ __RPC__deref_out_opt Globals **ppGlobals) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AddIns( 
            /* [retval][out] */ __RPC__deref_out_opt AddIns **ppAddIns) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsOpen( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SolutionBuild( 
            /* [retval][out] */ __RPC__deref_out_opt SolutionBuild **ppSolutionBuild) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Create( 
            __RPC__in BSTR Destination,
            __RPC__in BSTR Name) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Projects( 
            /* [retval][out] */ __RPC__deref_out_opt Projects **ppProjects) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE FindProjectItem( 
            __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **ppProjectItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ProjectItemsTemplatePath( 
            __RPC__in BSTR ProjectKind,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullPath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _SolutionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Solution * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Solution * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Solution * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Solution * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Solution * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Solution * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Solution * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Solution * This,
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Project **lppcReturn);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            _Solution * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            _Solution * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Solution * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Solution * This,
            /* [retval][out] */ __RPC__out long *lplReturn);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            _Solution * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _Solution * This,
            /* [in] */ __RPC__in BSTR FileName);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFromTemplate )( 
            _Solution * This,
            /* [in] */ __RPC__in BSTR FileName,
            /* [in] */ __RPC__in BSTR Destination,
            /* [in] */ __RPC__in BSTR ProjectName,
            /* [defaultvalue][in] */ VARIANT_BOOL Exclusive,
            /* [retval][out] */ __RPC__deref_out_opt Project **IppptReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFromFile )( 
            _Solution * This,
            /* [in] */ __RPC__in BSTR FileName,
            /* [defaultvalue][in] */ VARIANT_BOOL Exclusive,
            /* [retval][out] */ __RPC__deref_out_opt Project **IppptReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            _Solution * This,
            /* [in] */ __RPC__in BSTR FileName);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _Solution * This,
            /* [defaultvalue][in] */ VARIANT_BOOL SaveFirst);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            _Solution * This,
            /* [retval][out] */ __RPC__deref_out_opt Properties **ppObject);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsDirty )( 
            _Solution * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsDirty )( 
            _Solution * This,
            /* [in] */ VARIANT_BOOL fDirty);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _Solution * This,
            /* [in] */ __RPC__in_opt Project *proj);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TemplatePath )( 
            _Solution * This,
            /* [in] */ __RPC__in BSTR ProjectType,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrPath);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            _Solution * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _Solution * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Saved )( 
            _Solution * This,
            /* [in] */ VARIANT_BOOL fDirty);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Globals )( 
            _Solution * This,
            /* [retval][out] */ __RPC__deref_out_opt Globals **ppGlobals);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddIns )( 
            _Solution * This,
            /* [retval][out] */ __RPC__deref_out_opt AddIns **ppAddIns);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            _Solution * This,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            _Solution * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            _Solution * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpen )( 
            _Solution * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionBuild )( 
            _Solution * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionBuild **ppSolutionBuild);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Create )( 
            _Solution * This,
            __RPC__in BSTR Destination,
            __RPC__in BSTR Name);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Projects )( 
            _Solution * This,
            /* [retval][out] */ __RPC__deref_out_opt Projects **ppProjects);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FindProjectItem )( 
            _Solution * This,
            __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **ppProjectItem);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ProjectItemsTemplatePath )( 
            _Solution * This,
            __RPC__in BSTR ProjectKind,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullPath);
        
        END_INTERFACE
    } _SolutionVtbl;

    interface _Solution
    {
        CONST_VTBL struct _SolutionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Solution_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Solution_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Solution_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Solution_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Solution_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Solution_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Solution_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Solution_Item(This,index,lppcReturn)	\
    ( (This)->lpVtbl -> Item(This,index,lppcReturn) ) 

#define _Solution__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define _Solution_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define _Solution_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define _Solution_get_Count(This,lplReturn)	\
    ( (This)->lpVtbl -> get_Count(This,lplReturn) ) 

#define _Solution_get_FileName(This,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_FileName(This,lpbstrReturn) ) 

#define _Solution_SaveAs(This,FileName)	\
    ( (This)->lpVtbl -> SaveAs(This,FileName) ) 

#define _Solution_AddFromTemplate(This,FileName,Destination,ProjectName,Exclusive,IppptReturn)	\
    ( (This)->lpVtbl -> AddFromTemplate(This,FileName,Destination,ProjectName,Exclusive,IppptReturn) ) 

#define _Solution_AddFromFile(This,FileName,Exclusive,IppptReturn)	\
    ( (This)->lpVtbl -> AddFromFile(This,FileName,Exclusive,IppptReturn) ) 

#define _Solution_Open(This,FileName)	\
    ( (This)->lpVtbl -> Open(This,FileName) ) 

#define _Solution_Close(This,SaveFirst)	\
    ( (This)->lpVtbl -> Close(This,SaveFirst) ) 

#define _Solution_get_Properties(This,ppObject)	\
    ( (This)->lpVtbl -> get_Properties(This,ppObject) ) 

#define _Solution_get_IsDirty(This,lpfReturn)	\
    ( (This)->lpVtbl -> get_IsDirty(This,lpfReturn) ) 

#define _Solution_put_IsDirty(This,fDirty)	\
    ( (This)->lpVtbl -> put_IsDirty(This,fDirty) ) 

#define _Solution_Remove(This,proj)	\
    ( (This)->lpVtbl -> Remove(This,proj) ) 

#define _Solution_get_TemplatePath(This,ProjectType,lpbstrPath)	\
    ( (This)->lpVtbl -> get_TemplatePath(This,ProjectType,lpbstrPath) ) 

#define _Solution_get_FullName(This,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_FullName(This,lpbstrReturn) ) 

#define _Solution_get_Saved(This,lpfReturn)	\
    ( (This)->lpVtbl -> get_Saved(This,lpfReturn) ) 

#define _Solution_put_Saved(This,fDirty)	\
    ( (This)->lpVtbl -> put_Saved(This,fDirty) ) 

#define _Solution_get_Globals(This,ppGlobals)	\
    ( (This)->lpVtbl -> get_Globals(This,ppGlobals) ) 

#define _Solution_get_AddIns(This,ppAddIns)	\
    ( (This)->lpVtbl -> get_AddIns(This,ppAddIns) ) 

#define _Solution_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define _Solution_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define _Solution_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define _Solution_get_IsOpen(This,pVal)	\
    ( (This)->lpVtbl -> get_IsOpen(This,pVal) ) 

#define _Solution_get_SolutionBuild(This,ppSolutionBuild)	\
    ( (This)->lpVtbl -> get_SolutionBuild(This,ppSolutionBuild) ) 

#define _Solution_Create(This,Destination,Name)	\
    ( (This)->lpVtbl -> Create(This,Destination,Name) ) 

#define _Solution_get_Projects(This,ppProjects)	\
    ( (This)->lpVtbl -> get_Projects(This,ppProjects) ) 

#define _Solution_FindProjectItem(This,FileName,ppProjectItem)	\
    ( (This)->lpVtbl -> FindProjectItem(This,FileName,ppProjectItem) ) 

#define _Solution_ProjectItemsTemplatePath(This,ProjectKind,pFullPath)	\
    ( (This)->lpVtbl -> ProjectItemsTemplatePath(This,ProjectKind,pFullPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Solution_INTERFACE_DEFINED__ */


#ifndef __Projects_INTERFACE_DEFINED__
#define __Projects_INTERFACE_DEFINED__

/* interface Projects */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Projects;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e3ec0add-31b3-461f-8303-8a5e6931257a")
    Projects : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Project **lppcReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *lplReturn) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Properties( 
            /* [retval][out] */ __RPC__deref_out_opt Properties **ppObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ProjectsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Projects * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Projects * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Projects * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Projects * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Projects * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Projects * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Projects * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Projects * This,
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Project **lppcReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Projects * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Projects * This,
            /* [retval][out] */ __RPC__out long *lplReturn);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Projects * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Projects * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            Projects * This,
            /* [retval][out] */ __RPC__deref_out_opt Properties **ppObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            Projects * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        END_INTERFACE
    } ProjectsVtbl;

    interface Projects
    {
        CONST_VTBL struct ProjectsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Projects_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Projects_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Projects_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Projects_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Projects_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Projects_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Projects_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Projects_Item(This,index,lppcReturn)	\
    ( (This)->lpVtbl -> Item(This,index,lppcReturn) ) 

#define Projects_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define Projects_get_Count(This,lplReturn)	\
    ( (This)->lpVtbl -> get_Count(This,lplReturn) ) 

#define Projects__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define Projects_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define Projects_get_Properties(This,ppObject)	\
    ( (This)->lpVtbl -> get_Properties(This,ppObject) ) 

#define Projects_get_Kind(This,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_Kind(This,lpbstrReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Projects_INTERFACE_DEFINED__ */


#ifndef __Project_INTERFACE_DEFINED__
#define __Project_INTERFACE_DEFINED__

/* interface Project */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Project;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("866311e6-c887-4143-9833-645f5b93f6f1")
    Project : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ __RPC__in BSTR bstrName) = 0;
        
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsDirty( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn) = 0;
        
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsDirty( 
            /* [in] */ VARIANT_BOOL Dirty) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt Projects **lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ __RPC__in BSTR NewFileName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrFileName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItems( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItems **lppcReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Properties( 
            /* [retval][out] */ __RPC__deref_out_opt Properties **ppObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UniqueName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrFileName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Object( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ProjectModel) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Saved( 
            /* [in] */ VARIANT_BOOL SavedFlag) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConfigurationManager( 
            /* [retval][out] */ __RPC__deref_out_opt ConfigurationManager **ppConfigurationManager) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Globals( 
            /* [retval][out] */ __RPC__deref_out_opt Globals **ppGlobals) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [defaultvalue] */ __RPC__in BSTR FileName = L"") = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ParentProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **ppParentProjectItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CodeModel( 
            /* [retval][out] */ __RPC__deref_out_opt CodeModel **ppCodeModel) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ProjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Project * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Project * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Project * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Project * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Project * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Project * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Project * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrName);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            Project * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsDirty )( 
            Project * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsDirty )( 
            Project * This,
            /* [in] */ VARIANT_BOOL Dirty);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt Projects **lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            Project * This,
            /* [in] */ __RPC__in BSTR NewFileName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrFileName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItems )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItems **lppcReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt Properties **ppObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UniqueName )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrFileName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Object )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ProjectModel);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            Project * This,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            Project * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            Project * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Saved )( 
            Project * This,
            /* [in] */ VARIANT_BOOL SavedFlag);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigurationManager )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt ConfigurationManager **ppConfigurationManager);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Globals )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt Globals **ppGlobals);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            Project * This,
            /* [defaultvalue] */ __RPC__in BSTR FileName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ParentProjectItem )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **ppParentProjectItem);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CodeModel )( 
            Project * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeModel **ppCodeModel);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Project * This);
        
        END_INTERFACE
    } ProjectVtbl;

    interface Project
    {
        CONST_VTBL struct ProjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Project_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Project_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Project_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Project_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Project_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Project_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Project_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Project_get_Name(This,lpbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,lpbstrName) ) 

#define Project_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define Project_get_FileName(This,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_FileName(This,lpbstrReturn) ) 

#define Project_get_IsDirty(This,lpfReturn)	\
    ( (This)->lpVtbl -> get_IsDirty(This,lpfReturn) ) 

#define Project_put_IsDirty(This,Dirty)	\
    ( (This)->lpVtbl -> put_IsDirty(This,Dirty) ) 

#define Project_get_Collection(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Collection(This,lppaReturn) ) 

#define Project_SaveAs(This,NewFileName)	\
    ( (This)->lpVtbl -> SaveAs(This,NewFileName) ) 

#define Project_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define Project_get_Kind(This,lpbstrFileName)	\
    ( (This)->lpVtbl -> get_Kind(This,lpbstrFileName) ) 

#define Project_get_ProjectItems(This,lppcReturn)	\
    ( (This)->lpVtbl -> get_ProjectItems(This,lppcReturn) ) 

#define Project_get_Properties(This,ppObject)	\
    ( (This)->lpVtbl -> get_Properties(This,ppObject) ) 

#define Project_get_UniqueName(This,lpbstrFileName)	\
    ( (This)->lpVtbl -> get_UniqueName(This,lpbstrFileName) ) 

#define Project_get_Object(This,ProjectModel)	\
    ( (This)->lpVtbl -> get_Object(This,ProjectModel) ) 

#define Project_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define Project_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define Project_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define Project_get_FullName(This,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_FullName(This,lpbstrReturn) ) 

#define Project_get_Saved(This,lpfReturn)	\
    ( (This)->lpVtbl -> get_Saved(This,lpfReturn) ) 

#define Project_put_Saved(This,SavedFlag)	\
    ( (This)->lpVtbl -> put_Saved(This,SavedFlag) ) 

#define Project_get_ConfigurationManager(This,ppConfigurationManager)	\
    ( (This)->lpVtbl -> get_ConfigurationManager(This,ppConfigurationManager) ) 

#define Project_get_Globals(This,ppGlobals)	\
    ( (This)->lpVtbl -> get_Globals(This,ppGlobals) ) 

#define Project_Save(This,FileName)	\
    ( (This)->lpVtbl -> Save(This,FileName) ) 

#define Project_get_ParentProjectItem(This,ppParentProjectItem)	\
    ( (This)->lpVtbl -> get_ParentProjectItem(This,ppParentProjectItem) ) 

#define Project_get_CodeModel(This,ppCodeModel)	\
    ( (This)->lpVtbl -> get_CodeModel(This,ppCodeModel) ) 

#define Project_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Project_INTERFACE_DEFINED__ */


#ifndef __ProjectItems_INTERFACE_DEFINED__
#define __ProjectItems_INTERFACE_DEFINED__

/* interface ProjectItems */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ProjectItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8e2f1269-185e-43c7-8899-950ad2769ccf")
    ProjectItems : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **lppcReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppptReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *lplReturn) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrFileName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFromFile( 
            /* [in] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **lppcReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFromTemplate( 
            /* [in] */ __RPC__in BSTR FileName,
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **lppcReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFromDirectory( 
            /* [in] */ __RPC__in BSTR Directory,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **lppcReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContainingProject( 
            /* [retval][out] */ __RPC__deref_out_opt Project **ppProject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFolder( 
            __RPC__in BSTR Name,
            /* [defaultvalue] */ __RPC__in BSTR Kind,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjectItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFromFileCopy( 
            __RPC__in BSTR FilePath,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjectItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ProjectItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ProjectItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ProjectItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ProjectItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ProjectItems * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ProjectItems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ProjectItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ProjectItems * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ProjectItems * This,
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **lppcReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ProjectItems * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppptReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ProjectItems * This,
            /* [retval][out] */ __RPC__out long *lplReturn);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            ProjectItems * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ProjectItems * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            ProjectItems * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrFileName);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFromFile )( 
            ProjectItems * This,
            /* [in] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **lppcReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFromTemplate )( 
            ProjectItems * This,
            /* [in] */ __RPC__in BSTR FileName,
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **lppcReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFromDirectory )( 
            ProjectItems * This,
            /* [in] */ __RPC__in BSTR Directory,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **lppcReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContainingProject )( 
            ProjectItems * This,
            /* [retval][out] */ __RPC__deref_out_opt Project **ppProject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFolder )( 
            ProjectItems * This,
            __RPC__in BSTR Name,
            /* [defaultvalue] */ __RPC__in BSTR Kind,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjectItem);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFromFileCopy )( 
            ProjectItems * This,
            __RPC__in BSTR FilePath,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjectItem);
        
        END_INTERFACE
    } ProjectItemsVtbl;

    interface ProjectItems
    {
        CONST_VTBL struct ProjectItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ProjectItems_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ProjectItems_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ProjectItems_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ProjectItems_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ProjectItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ProjectItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ProjectItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ProjectItems_Item(This,index,lppcReturn)	\
    ( (This)->lpVtbl -> Item(This,index,lppcReturn) ) 

#define ProjectItems_get_Parent(This,lppptReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppptReturn) ) 

#define ProjectItems_get_Count(This,lplReturn)	\
    ( (This)->lpVtbl -> get_Count(This,lplReturn) ) 

#define ProjectItems__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define ProjectItems_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define ProjectItems_get_Kind(This,lpbstrFileName)	\
    ( (This)->lpVtbl -> get_Kind(This,lpbstrFileName) ) 

#define ProjectItems_AddFromFile(This,FileName,lppcReturn)	\
    ( (This)->lpVtbl -> AddFromFile(This,FileName,lppcReturn) ) 

#define ProjectItems_AddFromTemplate(This,FileName,Name,lppcReturn)	\
    ( (This)->lpVtbl -> AddFromTemplate(This,FileName,Name,lppcReturn) ) 

#define ProjectItems_AddFromDirectory(This,Directory,lppcReturn)	\
    ( (This)->lpVtbl -> AddFromDirectory(This,Directory,lppcReturn) ) 

#define ProjectItems_get_ContainingProject(This,ppProject)	\
    ( (This)->lpVtbl -> get_ContainingProject(This,ppProject) ) 

#define ProjectItems_AddFolder(This,Name,Kind,pProjectItem)	\
    ( (This)->lpVtbl -> AddFolder(This,Name,Kind,pProjectItem) ) 

#define ProjectItems_AddFromFileCopy(This,FilePath,pProjectItem)	\
    ( (This)->lpVtbl -> AddFromFileCopy(This,FilePath,pProjectItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ProjectItems_INTERFACE_DEFINED__ */


#ifndef __ProjectItem_INTERFACE_DEFINED__
#define __ProjectItem_INTERFACE_DEFINED__

/* interface ProjectItem */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ProjectItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0b48100a-473e-433c-ab8f-66b9739ab620")
    ProjectItem : public IDispatch
    {
    public:
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsDirty( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn) = 0;
        
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsDirty( 
            /* [in] */ VARIANT_BOOL DirtyFlag) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileNames( 
            /* [in] */ short Index,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ __RPC__in BSTR NewFileName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileCount( 
            /* [retval][out] */ __RPC__out short *lpsReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ __RPC__in BSTR bstrName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItems **lppcReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Properties( 
            /* [retval][out] */ __RPC__deref_out_opt Properties **ppObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrFileName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItems( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItems **lppcReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsOpen( 
            /* [defaultvalue][in] */ __RPC__in BSTR ViewKind,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [defaultvalue][in] */ __RPC__in BSTR ViewKind,
            /* [retval][out] */ __RPC__deref_out_opt Window **lppfReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ExpandView( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Object( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ProjectItemModel) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Saved( 
            /* [in] */ VARIANT_BOOL SavedFlag) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConfigurationManager( 
            /* [retval][out] */ __RPC__deref_out_opt ConfigurationManager **ppConfigurationManager) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileCodeModel( 
            /* [retval][out] */ __RPC__deref_out_opt FileCodeModel **ppFileCodeModel) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [defaultvalue] */ __RPC__in BSTR FileName = L"") = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Document( 
            /* [retval][out] */ __RPC__deref_out_opt Document **ppDocument) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SubProject( 
            /* [retval][out] */ __RPC__deref_out_opt Project **ppProject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContainingProject( 
            /* [retval][out] */ __RPC__deref_out_opt Project **ppProject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ProjectItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ProjectItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ProjectItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ProjectItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ProjectItem * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ProjectItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ProjectItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ProjectItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsDirty )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsDirty )( 
            ProjectItem * This,
            /* [in] */ VARIANT_BOOL DirtyFlag);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileNames )( 
            ProjectItem * This,
            /* [in] */ short Index,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            ProjectItem * This,
            /* [in] */ __RPC__in BSTR NewFileName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileCount )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__out short *lpsReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            ProjectItem * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItems **lppcReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt Properties **ppObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrFileName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItems )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItems **lppcReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpen )( 
            ProjectItem * This,
            /* [defaultvalue][in] */ __RPC__in BSTR ViewKind,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            ProjectItem * This,
            /* [defaultvalue][in] */ __RPC__in BSTR ViewKind,
            /* [retval][out] */ __RPC__deref_out_opt Window **lppfReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            ProjectItem * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ExpandView )( 
            ProjectItem * This);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Object )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ProjectItemModel);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            ProjectItem * This,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Saved )( 
            ProjectItem * This,
            /* [in] */ VARIANT_BOOL SavedFlag);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigurationManager )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt ConfigurationManager **ppConfigurationManager);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileCodeModel )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt FileCodeModel **ppFileCodeModel);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            ProjectItem * This,
            /* [defaultvalue] */ __RPC__in BSTR FileName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt Document **ppDocument);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SubProject )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt Project **ppProject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContainingProject )( 
            ProjectItem * This,
            /* [retval][out] */ __RPC__deref_out_opt Project **ppProject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            ProjectItem * This);
        
        END_INTERFACE
    } ProjectItemVtbl;

    interface ProjectItem
    {
        CONST_VTBL struct ProjectItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ProjectItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ProjectItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ProjectItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ProjectItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ProjectItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ProjectItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ProjectItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ProjectItem_get_IsDirty(This,lpfReturn)	\
    ( (This)->lpVtbl -> get_IsDirty(This,lpfReturn) ) 

#define ProjectItem_put_IsDirty(This,DirtyFlag)	\
    ( (This)->lpVtbl -> put_IsDirty(This,DirtyFlag) ) 

#define ProjectItem_get_FileNames(This,Index,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_FileNames(This,Index,lpbstrReturn) ) 

#define ProjectItem_SaveAs(This,NewFileName,lpfReturn)	\
    ( (This)->lpVtbl -> SaveAs(This,NewFileName,lpfReturn) ) 

#define ProjectItem_get_FileCount(This,lpsReturn)	\
    ( (This)->lpVtbl -> get_FileCount(This,lpsReturn) ) 

#define ProjectItem_get_Name(This,pbstrReturn)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrReturn) ) 

#define ProjectItem_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define ProjectItem_get_Collection(This,lppcReturn)	\
    ( (This)->lpVtbl -> get_Collection(This,lppcReturn) ) 

#define ProjectItem_get_Properties(This,ppObject)	\
    ( (This)->lpVtbl -> get_Properties(This,ppObject) ) 

#define ProjectItem_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define ProjectItem_get_Kind(This,lpbstrFileName)	\
    ( (This)->lpVtbl -> get_Kind(This,lpbstrFileName) ) 

#define ProjectItem_get_ProjectItems(This,lppcReturn)	\
    ( (This)->lpVtbl -> get_ProjectItems(This,lppcReturn) ) 

#define ProjectItem_get_IsOpen(This,ViewKind,lpfReturn)	\
    ( (This)->lpVtbl -> get_IsOpen(This,ViewKind,lpfReturn) ) 

#define ProjectItem_Open(This,ViewKind,lppfReturn)	\
    ( (This)->lpVtbl -> Open(This,ViewKind,lppfReturn) ) 

#define ProjectItem_Remove(This)	\
    ( (This)->lpVtbl -> Remove(This) ) 

#define ProjectItem_ExpandView(This)	\
    ( (This)->lpVtbl -> ExpandView(This) ) 

#define ProjectItem_get_Object(This,ProjectItemModel)	\
    ( (This)->lpVtbl -> get_Object(This,ProjectItemModel) ) 

#define ProjectItem_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define ProjectItem_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define ProjectItem_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define ProjectItem_get_Saved(This,lpfReturn)	\
    ( (This)->lpVtbl -> get_Saved(This,lpfReturn) ) 

#define ProjectItem_put_Saved(This,SavedFlag)	\
    ( (This)->lpVtbl -> put_Saved(This,SavedFlag) ) 

#define ProjectItem_get_ConfigurationManager(This,ppConfigurationManager)	\
    ( (This)->lpVtbl -> get_ConfigurationManager(This,ppConfigurationManager) ) 

#define ProjectItem_get_FileCodeModel(This,ppFileCodeModel)	\
    ( (This)->lpVtbl -> get_FileCodeModel(This,ppFileCodeModel) ) 

#define ProjectItem_Save(This,FileName)	\
    ( (This)->lpVtbl -> Save(This,FileName) ) 

#define ProjectItem_get_Document(This,ppDocument)	\
    ( (This)->lpVtbl -> get_Document(This,ppDocument) ) 

#define ProjectItem_get_SubProject(This,ppProject)	\
    ( (This)->lpVtbl -> get_SubProject(This,ppProject) ) 

#define ProjectItem_get_ContainingProject(This,ppProject)	\
    ( (This)->lpVtbl -> get_ContainingProject(This,ppProject) ) 

#define ProjectItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ProjectItem_INTERFACE_DEFINED__ */


#ifndef __Commands_INTERFACE_DEFINED__
#define __Commands_INTERFACE_DEFINED__

/* interface Commands */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Commands;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e6b96cac-b8c7-40ae-b705-5c81878c4a9e")
    Commands : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in BSTR Guid,
            /* [in] */ long ID,
            /* [in] */ __RPC__in VARIANT *Control) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Raise( 
            /* [in] */ __RPC__in BSTR Guid,
            /* [in] */ long ID,
            /* [out][in] */ __RPC__inout VARIANT *CustomIn,
            /* [out][in] */ __RPC__inout VARIANT *CustomOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CommandInfo( 
            /* [in] */ __RPC__in_opt IDispatch *CommandBarControl,
            /* [out] */ __RPC__deref_out_opt BSTR *Guid,
            /* [out] */ __RPC__out long *ID) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *lplReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [defaultvalue][in] */ long ID,
            /* [retval][out] */ __RPC__deref_out_opt Command **lppcReturn) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddNamedCommand( 
            /* [in] */ __RPC__in_opt AddIn *AddInInstance,
            /* [in] */ __RPC__in BSTR Name,
            /* [in] */ __RPC__in BSTR ButtonText,
            /* [in] */ __RPC__in BSTR Tooltip,
            /* [in] */ VARIANT_BOOL MSOButton,
            /* [defaultvalue][in] */ long Bitmap,
            /* [optional][in] */ __RPC__deref_in_opt SAFEARRAY * *ContextUIGUIDs,
            /* [defaultvalue][in] */ long vsCommandDisabledFlagsValue,
            /* [retval][out] */ __RPC__deref_out_opt Command **pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddCommandBar( 
            /* [in] */ __RPC__in BSTR Name,
            /* [in] */ vsCommandBarType Type,
            /* [defaultvalue][in] */ __RPC__in_opt IDispatch *CommandBarParent,
            /* [defaultvalue][in] */ long Position,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveCommandBar( 
            /* [in] */ __RPC__in_opt IDispatch *CommandBar) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CommandsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Commands * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Commands * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Commands * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Commands * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Commands * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Commands * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Commands * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Commands * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Commands * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            Commands * This,
            /* [in] */ __RPC__in BSTR Guid,
            /* [in] */ long ID,
            /* [in] */ __RPC__in VARIANT *Control);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Raise )( 
            Commands * This,
            /* [in] */ __RPC__in BSTR Guid,
            /* [in] */ long ID,
            /* [out][in] */ __RPC__inout VARIANT *CustomIn,
            /* [out][in] */ __RPC__inout VARIANT *CustomOut);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CommandInfo )( 
            Commands * This,
            /* [in] */ __RPC__in_opt IDispatch *CommandBarControl,
            /* [out] */ __RPC__deref_out_opt BSTR *Guid,
            /* [out] */ __RPC__out long *ID);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Commands * This,
            /* [retval][out] */ __RPC__out long *lplReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Commands * This,
            /* [in] */ VARIANT Index,
            /* [defaultvalue][in] */ long ID,
            /* [retval][out] */ __RPC__deref_out_opt Command **lppcReturn);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Commands * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddNamedCommand )( 
            Commands * This,
            /* [in] */ __RPC__in_opt AddIn *AddInInstance,
            /* [in] */ __RPC__in BSTR Name,
            /* [in] */ __RPC__in BSTR ButtonText,
            /* [in] */ __RPC__in BSTR Tooltip,
            /* [in] */ VARIANT_BOOL MSOButton,
            /* [defaultvalue][in] */ long Bitmap,
            /* [optional][in] */ __RPC__deref_in_opt SAFEARRAY * *ContextUIGUIDs,
            /* [defaultvalue][in] */ long vsCommandDisabledFlagsValue,
            /* [retval][out] */ __RPC__deref_out_opt Command **pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddCommandBar )( 
            Commands * This,
            /* [in] */ __RPC__in BSTR Name,
            /* [in] */ vsCommandBarType Type,
            /* [defaultvalue][in] */ __RPC__in_opt IDispatch *CommandBarParent,
            /* [defaultvalue][in] */ long Position,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveCommandBar )( 
            Commands * This,
            /* [in] */ __RPC__in_opt IDispatch *CommandBar);
        
        END_INTERFACE
    } CommandsVtbl;

    interface Commands
    {
        CONST_VTBL struct CommandsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Commands_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Commands_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Commands_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Commands_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Commands_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Commands_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Commands_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Commands_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define Commands_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define Commands_Add(This,Guid,ID,Control)	\
    ( (This)->lpVtbl -> Add(This,Guid,ID,Control) ) 

#define Commands_Raise(This,Guid,ID,CustomIn,CustomOut)	\
    ( (This)->lpVtbl -> Raise(This,Guid,ID,CustomIn,CustomOut) ) 

#define Commands_CommandInfo(This,CommandBarControl,Guid,ID)	\
    ( (This)->lpVtbl -> CommandInfo(This,CommandBarControl,Guid,ID) ) 

#define Commands_get_Count(This,lplReturn)	\
    ( (This)->lpVtbl -> get_Count(This,lplReturn) ) 

#define Commands_Item(This,Index,ID,lppcReturn)	\
    ( (This)->lpVtbl -> Item(This,Index,ID,lppcReturn) ) 

#define Commands__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define Commands_AddNamedCommand(This,AddInInstance,Name,ButtonText,Tooltip,MSOButton,Bitmap,ContextUIGUIDs,vsCommandDisabledFlagsValue,pVal)	\
    ( (This)->lpVtbl -> AddNamedCommand(This,AddInInstance,Name,ButtonText,Tooltip,MSOButton,Bitmap,ContextUIGUIDs,vsCommandDisabledFlagsValue,pVal) ) 

#define Commands_AddCommandBar(This,Name,Type,CommandBarParent,Position,pVal)	\
    ( (This)->lpVtbl -> AddCommandBar(This,Name,Type,CommandBarParent,Position,pVal) ) 

#define Commands_RemoveCommandBar(This,CommandBar)	\
    ( (This)->lpVtbl -> RemoveCommandBar(This,CommandBar) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Commands_INTERFACE_DEFINED__ */


#ifndef __TextBuffer_INTERFACE_DEFINED__
#define __TextBuffer_INTERFACE_DEFINED__

/* interface TextBuffer */
/* [hidden][helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TextBuffer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f47dc7e7-84b6-474f-bb91-631640aa0560")
    TextBuffer : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Window **retval) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFromString( 
            /* [in] */ __RPC__in BSTR String,
            /* [defaultvalue][in] */ long StartLine = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFromFile( 
            /* [in] */ __RPC__in BSTR FileName,
            /* [defaultvalue][in] */ long StartLine = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Lines( 
            /* [in] */ long StartLine,
            /* [in] */ long Count,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *String) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CountOfLines( 
            /* [retval][out] */ __RPC__out long *CountOfLines) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeleteLines( 
            /* [in] */ long StartLine,
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ __RPC__in BSTR Target,
            /* [out][in] */ __RPC__inout long *StartLine,
            /* [out][in] */ __RPC__inout long *StartColumn,
            /* [out][in] */ __RPC__inout long *EndLine,
            /* [out][in] */ __RPC__inout long *EndColumn,
            /* [defaultvalue][in] */ VARIANT_BOOL WholeWord,
            /* [defaultvalue][in] */ VARIANT_BOOL MatchCase,
            /* [defaultvalue][in] */ VARIANT_BOOL PatternSearch,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfFound) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextBufferVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextBuffer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TextBuffer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TextBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextBuffer * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextBuffer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextBuffer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextBuffer * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TextBuffer * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **retval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TextBuffer * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFromString )( 
            TextBuffer * This,
            /* [in] */ __RPC__in BSTR String,
            /* [defaultvalue][in] */ long StartLine);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFromFile )( 
            TextBuffer * This,
            /* [in] */ __RPC__in BSTR FileName,
            /* [defaultvalue][in] */ long StartLine);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lines )( 
            TextBuffer * This,
            /* [in] */ long StartLine,
            /* [in] */ long Count,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *String);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CountOfLines )( 
            TextBuffer * This,
            /* [retval][out] */ __RPC__out long *CountOfLines);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteLines )( 
            TextBuffer * This,
            /* [in] */ long StartLine,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            TextBuffer * This,
            /* [in] */ __RPC__in BSTR Target,
            /* [out][in] */ __RPC__inout long *StartLine,
            /* [out][in] */ __RPC__inout long *StartColumn,
            /* [out][in] */ __RPC__inout long *EndLine,
            /* [out][in] */ __RPC__inout long *EndColumn,
            /* [defaultvalue][in] */ VARIANT_BOOL WholeWord,
            /* [defaultvalue][in] */ VARIANT_BOOL MatchCase,
            /* [defaultvalue][in] */ VARIANT_BOOL PatternSearch,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfFound);
        
        END_INTERFACE
    } TextBufferVtbl;

    interface TextBuffer
    {
        CONST_VTBL struct TextBufferVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextBuffer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TextBuffer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TextBuffer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TextBuffer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TextBuffer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TextBuffer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TextBuffer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TextBuffer_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#define TextBuffer_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define TextBuffer_AddFromString(This,String,StartLine)	\
    ( (This)->lpVtbl -> AddFromString(This,String,StartLine) ) 

#define TextBuffer_AddFromFile(This,FileName,StartLine)	\
    ( (This)->lpVtbl -> AddFromFile(This,FileName,StartLine) ) 

#define TextBuffer_get_Lines(This,StartLine,Count,String)	\
    ( (This)->lpVtbl -> get_Lines(This,StartLine,Count,String) ) 

#define TextBuffer_get_CountOfLines(This,CountOfLines)	\
    ( (This)->lpVtbl -> get_CountOfLines(This,CountOfLines) ) 

#define TextBuffer_DeleteLines(This,StartLine,Count)	\
    ( (This)->lpVtbl -> DeleteLines(This,StartLine,Count) ) 

#define TextBuffer_Find(This,Target,StartLine,StartColumn,EndLine,EndColumn,WholeWord,MatchCase,PatternSearch,pfFound)	\
    ( (This)->lpVtbl -> Find(This,Target,StartLine,StartColumn,EndLine,EndColumn,WholeWord,MatchCase,PatternSearch,pfFound) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextBuffer_INTERFACE_DEFINED__ */


#ifndef __AddIns_INTERFACE_DEFINED__
#define __AddIns_INTERFACE_DEFINED__

/* interface AddIns */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_AddIns;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("50590801-d13e-4404-80c2-5ca30a4d0ee8")
    AddIns : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt AddIn **lppaddin) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *lplReturn) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Update( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            __RPC__in BSTR ProgID,
            __RPC__in BSTR Description,
            __RPC__in BSTR Name,
            VARIANT_BOOL Connected,
            /* [retval][out] */ __RPC__deref_out_opt AddIn **__MIDL__AddIns0000) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct AddInsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            AddIns * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            AddIns * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            AddIns * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            AddIns * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            AddIns * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            AddIns * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            AddIns * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            AddIns * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt AddIn **lppaddin);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            AddIns * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            AddIns * This,
            /* [retval][out] */ __RPC__out long *lplReturn);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            AddIns * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            AddIns * This);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            AddIns * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            AddIns * This,
            __RPC__in BSTR ProgID,
            __RPC__in BSTR Description,
            __RPC__in BSTR Name,
            VARIANT_BOOL Connected,
            /* [retval][out] */ __RPC__deref_out_opt AddIn **__MIDL__AddIns0000);
        
        END_INTERFACE
    } AddInsVtbl;

    interface AddIns
    {
        CONST_VTBL struct AddInsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AddIns_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AddIns_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AddIns_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AddIns_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define AddIns_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define AddIns_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define AddIns_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define AddIns_Item(This,Index,lppaddin)	\
    ( (This)->lpVtbl -> Item(This,Index,lppaddin) ) 

#define AddIns_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define AddIns_get_Count(This,lplReturn)	\
    ( (This)->lpVtbl -> get_Count(This,lplReturn) ) 

#define AddIns__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define AddIns_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define AddIns_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define AddIns_Add(This,ProgID,Description,Name,Connected,__MIDL__AddIns0000)	\
    ( (This)->lpVtbl -> Add(This,ProgID,Description,Name,Connected,__MIDL__AddIns0000) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __AddIns_INTERFACE_DEFINED__ */


#ifndef __AddIn_INTERFACE_DEFINED__
#define __AddIn_INTERFACE_DEFINED__

/* interface AddIn */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_AddIn;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("53a87fa1-ce93-48bf-958b-c6da793c5028")
    AddIn : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ __RPC__in BSTR bstr) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt AddIns **lppaddins) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProgID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Guid( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Connected( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfConnect) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Connected( 
            /* [in] */ VARIANT_BOOL fConnect) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Object( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppdisp) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Object( 
            /* [in] */ __RPC__in_opt IDispatch *_lpdispObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( void) = 0;
        
        virtual /* [propget][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE get_SatelliteDllPath( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct AddInVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            AddIn * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            AddIn * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            AddIn * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            AddIn * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            AddIn * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            AddIn * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            AddIn * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            AddIn * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            AddIn * This,
            /* [in] */ __RPC__in BSTR bstr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            AddIn * This,
            /* [retval][out] */ __RPC__deref_out_opt AddIns **lppaddins);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProgID )( 
            AddIn * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Guid )( 
            AddIn * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Connected )( 
            AddIn * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lpfConnect);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Connected )( 
            AddIn * This,
            /* [in] */ VARIANT_BOOL fConnect);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Object )( 
            AddIn * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppdisp);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Object )( 
            AddIn * This,
            /* [in] */ __RPC__in_opt IDispatch *_lpdispObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            AddIn * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            AddIn * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            AddIn * This);
        
        /* [propget][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *get_SatelliteDllPath )( 
            AddIn * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPath);
        
        END_INTERFACE
    } AddInVtbl;

    interface AddIn
    {
        CONST_VTBL struct AddInVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AddIn_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AddIn_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AddIn_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AddIn_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define AddIn_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define AddIn_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define AddIn_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define AddIn_get_Description(This,lpbstr)	\
    ( (This)->lpVtbl -> get_Description(This,lpbstr) ) 

#define AddIn_put_Description(This,bstr)	\
    ( (This)->lpVtbl -> put_Description(This,bstr) ) 

#define AddIn_get_Collection(This,lppaddins)	\
    ( (This)->lpVtbl -> get_Collection(This,lppaddins) ) 

#define AddIn_get_ProgID(This,lpbstr)	\
    ( (This)->lpVtbl -> get_ProgID(This,lpbstr) ) 

#define AddIn_get_Guid(This,lpbstr)	\
    ( (This)->lpVtbl -> get_Guid(This,lpbstr) ) 

#define AddIn_get_Connected(This,lpfConnect)	\
    ( (This)->lpVtbl -> get_Connected(This,lpfConnect) ) 

#define AddIn_put_Connected(This,fConnect)	\
    ( (This)->lpVtbl -> put_Connected(This,fConnect) ) 

#define AddIn_get_Object(This,lppdisp)	\
    ( (This)->lpVtbl -> get_Object(This,lppdisp) ) 

#define AddIn_put_Object(This,_lpdispObject)	\
    ( (This)->lpVtbl -> put_Object(This,_lpdispObject) ) 

#define AddIn_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define AddIn_get_Name(This,lpbstr)	\
    ( (This)->lpVtbl -> get_Name(This,lpbstr) ) 

#define AddIn_Remove(This)	\
    ( (This)->lpVtbl -> Remove(This) ) 

#define AddIn_get_SatelliteDllPath(This,pbstrPath)	\
    ( (This)->lpVtbl -> get_SatelliteDllPath(This,pbstrPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __AddIn_INTERFACE_DEFINED__ */


#ifndef __Properties_INTERFACE_DEFINED__
#define __Properties_INTERFACE_DEFINED__

/* interface Properties */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Properties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4cc8ccf5-a926-4646-b17f-b4940caed472")
    Properties : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Property **lplppReturn) = 0;
        
        virtual /* [restricted][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppidReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppidReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *lplReturn) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct PropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Properties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Properties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Properties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Properties * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Properties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Properties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Properties * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Properties * This,
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Property **lplppReturn);
        
        /* [restricted][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Properties * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppidReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Properties * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppidReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Properties * This,
            /* [retval][out] */ __RPC__out long *lplReturn);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Properties * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Properties * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        END_INTERFACE
    } PropertiesVtbl;

    interface Properties
    {
        CONST_VTBL struct PropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Properties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Properties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Properties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Properties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Properties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Properties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Properties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Properties_Item(This,index,lplppReturn)	\
    ( (This)->lpVtbl -> Item(This,index,lplppReturn) ) 

#define Properties_get_Application(This,lppidReturn)	\
    ( (This)->lpVtbl -> get_Application(This,lppidReturn) ) 

#define Properties_get_Parent(This,lppidReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppidReturn) ) 

#define Properties_get_Count(This,lplReturn)	\
    ( (This)->lpVtbl -> get_Count(This,lplReturn) ) 

#define Properties__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define Properties_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Properties_INTERFACE_DEFINED__ */


#ifndef __Property_INTERFACE_DEFINED__
#define __Property_INTERFACE_DEFINED__

/* interface Property */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Property;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7b988e06-2581-485e-9322-04881e0600d0")
    Property : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ __RPC__out VARIANT *lppvReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT NewValue) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Value( 
            /* [in] */ VARIANT NewValue) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IndexedValue( 
            /* [in] */ VARIANT Index1,
            /* [optional][in] */ VARIANT Index2,
            /* [optional][in] */ VARIANT Index3,
            /* [optional][in] */ VARIANT Index4,
            /* [retval][out] */ __RPC__out VARIANT *Val) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IndexedValue( 
            /* [in] */ VARIANT Index1,
            /* [optional][in] */ VARIANT Index2,
            /* [optional][in] */ VARIANT Index3,
            /* [optional][in] */ VARIANT Index4,
            /* [in] */ VARIANT NewValue) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NumIndices( 
            /* [retval][out] */ __RPC__out short *lpiRetVal) = 0;
        
        virtual /* [restricted][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppidReturn) = 0;
        
        virtual /* [restricted][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Properties **lpppReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt Properties **lpppReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Object( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppunk) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propputref] */ HRESULT STDMETHODCALLTYPE putref_Object( 
            /* [in] */ __RPC__in_opt IUnknown *lpunk) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct PropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Property * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Property * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Property * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Property * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Property * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Property * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Property * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            Property * This,
            /* [retval][out] */ __RPC__out VARIANT *lppvReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            Property * This,
            /* [in] */ VARIANT NewValue);
        
        /* [helpstringcontext][helpstring][helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Value )( 
            Property * This,
            /* [in] */ VARIANT NewValue);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IndexedValue )( 
            Property * This,
            /* [in] */ VARIANT Index1,
            /* [optional][in] */ VARIANT Index2,
            /* [optional][in] */ VARIANT Index3,
            /* [optional][in] */ VARIANT Index4,
            /* [retval][out] */ __RPC__out VARIANT *Val);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IndexedValue )( 
            Property * This,
            /* [in] */ VARIANT Index1,
            /* [optional][in] */ VARIANT Index2,
            /* [optional][in] */ VARIANT Index3,
            /* [optional][in] */ VARIANT Index4,
            /* [in] */ VARIANT NewValue);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NumIndices )( 
            Property * This,
            /* [retval][out] */ __RPC__out short *lpiRetVal);
        
        /* [restricted][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Property * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppidReturn);
        
        /* [restricted][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Property * This,
            /* [retval][out] */ __RPC__deref_out_opt Properties **lpppReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Property * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Property * This,
            /* [retval][out] */ __RPC__deref_out_opt Properties **lpppReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Object )( 
            Property * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppunk);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_Object )( 
            Property * This,
            /* [in] */ __RPC__in_opt IUnknown *lpunk);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Property * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        END_INTERFACE
    } PropertyVtbl;

    interface Property
    {
        CONST_VTBL struct PropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Property_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Property_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Property_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Property_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Property_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Property_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Property_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Property_get_Value(This,lppvReturn)	\
    ( (This)->lpVtbl -> get_Value(This,lppvReturn) ) 

#define Property_put_Value(This,NewValue)	\
    ( (This)->lpVtbl -> put_Value(This,NewValue) ) 

#define Property_putref_Value(This,NewValue)	\
    ( (This)->lpVtbl -> putref_Value(This,NewValue) ) 

#define Property_get_IndexedValue(This,Index1,Index2,Index3,Index4,Val)	\
    ( (This)->lpVtbl -> get_IndexedValue(This,Index1,Index2,Index3,Index4,Val) ) 

#define Property_put_IndexedValue(This,Index1,Index2,Index3,Index4,NewValue)	\
    ( (This)->lpVtbl -> put_IndexedValue(This,Index1,Index2,Index3,Index4,NewValue) ) 

#define Property_get_NumIndices(This,lpiRetVal)	\
    ( (This)->lpVtbl -> get_NumIndices(This,lpiRetVal) ) 

#define Property_get_Application(This,lppidReturn)	\
    ( (This)->lpVtbl -> get_Application(This,lppidReturn) ) 

#define Property_get_Parent(This,lpppReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lpppReturn) ) 

#define Property_get_Name(This,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_Name(This,lpbstrReturn) ) 

#define Property_get_Collection(This,lpppReturn)	\
    ( (This)->lpVtbl -> get_Collection(This,lpppReturn) ) 

#define Property_get_Object(This,lppunk)	\
    ( (This)->lpVtbl -> get_Object(This,lppunk) ) 

#define Property_putref_Object(This,lpunk)	\
    ( (This)->lpVtbl -> putref_Object(This,lpunk) ) 

#define Property_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Property_INTERFACE_DEFINED__ */


#ifndef __ISupportVSProperties_INTERFACE_DEFINED__
#define __ISupportVSProperties_INTERFACE_DEFINED__

/* interface ISupportVSProperties */
/* [object][hidden][uuid][oleautomation] */ 


EXTERN_C const IID IID_ISupportVSProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6659ed14-2ab6-47f3-a890-00c8aba43b84")
    ISupportVSProperties : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE NotifyPropertiesDelete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISupportVSPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISupportVSProperties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISupportVSProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISupportVSProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyPropertiesDelete )( 
            ISupportVSProperties * This);
        
        END_INTERFACE
    } ISupportVSPropertiesVtbl;

    interface ISupportVSProperties
    {
        CONST_VTBL struct ISupportVSPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISupportVSProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISupportVSProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISupportVSProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISupportVSProperties_NotifyPropertiesDelete(This)	\
    ( (This)->lpVtbl -> NotifyPropertiesDelete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISupportVSProperties_INTERFACE_DEFINED__ */


#ifndef __SelectedItems_INTERFACE_DEFINED__
#define __SelectedItems_INTERFACE_DEFINED__

/* interface SelectedItems */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SelectedItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6caa67cf-43ae-4184-aaab-0200ddf6b240")
    SelectedItems : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt SelectedItem **lplppReturn) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *lplReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MultiSelect( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfMultiSelect) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectionContainer( 
            /* [retval][out] */ __RPC__deref_out_opt SelectionContainer **lppdispSelContainer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SelectedItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SelectedItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SelectedItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SelectedItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SelectedItems * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SelectedItems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SelectedItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SelectedItems * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            SelectedItems * This,
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt SelectedItem **lplppReturn);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            SelectedItems * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SelectedItems * This,
            /* [retval][out] */ __RPC__out long *lplReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SelectedItems * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SelectedItems * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MultiSelect )( 
            SelectedItems * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfMultiSelect);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionContainer )( 
            SelectedItems * This,
            /* [retval][out] */ __RPC__deref_out_opt SelectionContainer **lppdispSelContainer);
        
        END_INTERFACE
    } SelectedItemsVtbl;

    interface SelectedItems
    {
        CONST_VTBL struct SelectedItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SelectedItems_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SelectedItems_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SelectedItems_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SelectedItems_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SelectedItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SelectedItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SelectedItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SelectedItems_Item(This,index,lplppReturn)	\
    ( (This)->lpVtbl -> Item(This,index,lplppReturn) ) 

#define SelectedItems__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define SelectedItems_get_Count(This,lplReturn)	\
    ( (This)->lpVtbl -> get_Count(This,lplReturn) ) 

#define SelectedItems_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define SelectedItems_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define SelectedItems_get_MultiSelect(This,pfMultiSelect)	\
    ( (This)->lpVtbl -> get_MultiSelect(This,pfMultiSelect) ) 

#define SelectedItems_get_SelectionContainer(This,lppdispSelContainer)	\
    ( (This)->lpVtbl -> get_SelectionContainer(This,lppdispSelContainer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SelectedItems_INTERFACE_DEFINED__ */


#ifndef __SelectedItem_INTERFACE_DEFINED__
#define __SelectedItem_INTERFACE_DEFINED__

/* interface SelectedItem */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SelectedItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("049d2cdf-3731-4cb6-a233-be97bce922d3")
    SelectedItem : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt SelectedItems **lppReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Project( 
            /* [retval][out] */ __RPC__deref_out_opt Project **lppReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **lppReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][restricted][hidden][id] */ HRESULT STDMETHODCALLTYPE get_InfoCount( 
            /* [retval][out] */ __RPC__out short *lpnCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][restricted][hidden][id] */ HRESULT STDMETHODCALLTYPE get_Info( 
            /* [in] */ short Index,
            /* [retval][out] */ __RPC__out VARIANT *lpbstrReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SelectedItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SelectedItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SelectedItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SelectedItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SelectedItem * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SelectedItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SelectedItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SelectedItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            SelectedItem * This,
            /* [retval][out] */ __RPC__deref_out_opt SelectedItems **lppReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SelectedItem * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            SelectedItem * This,
            /* [retval][out] */ __RPC__deref_out_opt Project **lppReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            SelectedItem * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **lppReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            SelectedItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstrReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][restricted][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoCount )( 
            SelectedItem * This,
            /* [retval][out] */ __RPC__out short *lpnCount);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][restricted][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *get_Info )( 
            SelectedItem * This,
            /* [in] */ short Index,
            /* [retval][out] */ __RPC__out VARIANT *lpbstrReturn);
        
        END_INTERFACE
    } SelectedItemVtbl;

    interface SelectedItem
    {
        CONST_VTBL struct SelectedItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SelectedItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SelectedItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SelectedItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SelectedItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SelectedItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SelectedItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SelectedItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SelectedItem_get_Collection(This,lppReturn)	\
    ( (This)->lpVtbl -> get_Collection(This,lppReturn) ) 

#define SelectedItem_get_DTE(This,lppReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppReturn) ) 

#define SelectedItem_get_Project(This,lppReturn)	\
    ( (This)->lpVtbl -> get_Project(This,lppReturn) ) 

#define SelectedItem_get_ProjectItem(This,lppReturn)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,lppReturn) ) 

#define SelectedItem_get_Name(This,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_Name(This,lpbstrReturn) ) 

#define SelectedItem_get_InfoCount(This,lpnCount)	\
    ( (This)->lpVtbl -> get_InfoCount(This,lpnCount) ) 

#define SelectedItem_get_Info(This,Index,lpbstrReturn)	\
    ( (This)->lpVtbl -> get_Info(This,Index,lpbstrReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SelectedItem_INTERFACE_DEFINED__ */


#ifndef __SelectionContainer_INTERFACE_DEFINED__
#define __SelectionContainer_INTERFACE_DEFINED__

/* interface SelectionContainer */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SelectionContainer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("02273422-8dd4-4a9f-8a8b-d70443d510f4")
    SelectionContainer : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lplppReturn) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *lplReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt SelectedItems **lppReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SelectionContainerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SelectionContainer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SelectionContainer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SelectionContainer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SelectionContainer * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SelectionContainer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SelectionContainer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SelectionContainer * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            SelectionContainer * This,
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lplppReturn);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            SelectionContainer * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SelectionContainer * This,
            /* [retval][out] */ __RPC__out long *lplReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SelectionContainer * This,
            /* [retval][out] */ __RPC__deref_out_opt SelectedItems **lppReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SelectionContainer * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppReturn);
        
        END_INTERFACE
    } SelectionContainerVtbl;

    interface SelectionContainer
    {
        CONST_VTBL struct SelectionContainerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SelectionContainer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SelectionContainer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SelectionContainer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SelectionContainer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SelectionContainer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SelectionContainer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SelectionContainer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SelectionContainer_Item(This,index,lplppReturn)	\
    ( (This)->lpVtbl -> Item(This,index,lplppReturn) ) 

#define SelectionContainer__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define SelectionContainer_get_Count(This,lplReturn)	\
    ( (This)->lpVtbl -> get_Count(This,lplReturn) ) 

#define SelectionContainer_get_Parent(This,lppReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppReturn) ) 

#define SelectionContainer_get_DTE(This,lppReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SelectionContainer_INTERFACE_DEFINED__ */


#ifndef __Windows_INTERFACE_DEFINED__
#define __Windows_INTERFACE_DEFINED__

/* interface Windows */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Windows;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2294311A-B7BC-4789-B365-1C15FF2CD17C")
    Windows : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Window **lppcReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *lplReturn) = 0;
        
        virtual /* [restricted][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateToolWindow( 
            /* [in] */ __RPC__in_opt AddIn *AddInInst,
            /* [in] */ __RPC__in BSTR ProgId,
            /* [in] */ __RPC__in BSTR Caption,
            /* [in] */ __RPC__in BSTR GuidPosition,
            /* [out][in] */ __RPC__deref_inout_opt IDispatch **DocObj,
            /* [retval][out] */ __RPC__deref_out_opt Window **lppcReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateLinkedWindowFrame( 
            /* [in] */ __RPC__in_opt Window *Window1,
            /* [in] */ __RPC__in_opt Window *Window2,
            /* [in] */ vsLinkedWindowType Link,
            /* [retval][out] */ __RPC__deref_out_opt Window **LinkedWindowFrame) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct WindowsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Windows * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Windows * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Windows * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Windows * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Windows * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Windows * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Windows * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Windows * This,
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Window **lppcReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Windows * This,
            /* [retval][out] */ __RPC__out long *lplReturn);
        
        /* [restricted][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Windows * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateToolWindow )( 
            Windows * This,
            /* [in] */ __RPC__in_opt AddIn *AddInInst,
            /* [in] */ __RPC__in BSTR ProgId,
            /* [in] */ __RPC__in BSTR Caption,
            /* [in] */ __RPC__in BSTR GuidPosition,
            /* [out][in] */ __RPC__deref_inout_opt IDispatch **DocObj,
            /* [retval][out] */ __RPC__deref_out_opt Window **lppcReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Windows * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Windows * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateLinkedWindowFrame )( 
            Windows * This,
            /* [in] */ __RPC__in_opt Window *Window1,
            /* [in] */ __RPC__in_opt Window *Window2,
            /* [in] */ vsLinkedWindowType Link,
            /* [retval][out] */ __RPC__deref_out_opt Window **LinkedWindowFrame);
        
        END_INTERFACE
    } WindowsVtbl;

    interface Windows
    {
        CONST_VTBL struct WindowsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Windows_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Windows_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Windows_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Windows_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Windows_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Windows_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Windows_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Windows_Item(This,index,lppcReturn)	\
    ( (This)->lpVtbl -> Item(This,index,lppcReturn) ) 

#define Windows_get_Count(This,lplReturn)	\
    ( (This)->lpVtbl -> get_Count(This,lplReturn) ) 

#define Windows__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define Windows_CreateToolWindow(This,AddInInst,ProgId,Caption,GuidPosition,DocObj,lppcReturn)	\
    ( (This)->lpVtbl -> CreateToolWindow(This,AddInInst,ProgId,Caption,GuidPosition,DocObj,lppcReturn) ) 

#define Windows_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define Windows_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define Windows_CreateLinkedWindowFrame(This,Window1,Window2,Link,LinkedWindowFrame)	\
    ( (This)->lpVtbl -> CreateLinkedWindowFrame(This,Window1,Window2,Link,LinkedWindowFrame) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Windows_INTERFACE_DEFINED__ */


#ifndef __Window_INTERFACE_DEFINED__
#define __Window_INTERFACE_DEFINED__

/* interface Window */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Window;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0beab46b-4c07-4f94-a8d7-1626020e4e53")
    Window : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt Windows **lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfVisible) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL fVisible) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ __RPC__out long *plLeft) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            /* [in] */ long lLeft) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ __RPC__out long *plTop) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            /* [in] */ long lTop_r) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ __RPC__out long *plWidth) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ long lWidth) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ __RPC__out long *plHeight) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ long lHeight_r) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WindowState( 
            /* [retval][out] */ __RPC__out vsWindowState *plWindowState) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WindowState( 
            /* [in] */ vsWindowState wstWindowState) = 0;
        
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetFocus( void) = 0;
        
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__out vsWindowType *pKind) = 0;
        
        virtual /* [hidden][restricted][id] */ HRESULT STDMETHODCALLTYPE SetKind( 
            /* [in] */ vsWindowType eKind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LinkedWindows( 
            /* [retval][out] */ __RPC__deref_out_opt LinkedWindows **ppwnsCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LinkedWindowFrame( 
            /* [retval][out] */ __RPC__deref_out_opt Window **ppwinFrame) = 0;
        
        virtual /* [hidden][restricted][id] */ HRESULT STDMETHODCALLTYPE Detach( void) = 0;
        
        virtual /* [hidden][restricted][id] */ HRESULT STDMETHODCALLTYPE Attach( 
            /* [in] */ long lWindowHandle) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_HWnd( 
            /* [retval][out] */ __RPC__out long *plWindowHandle) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrType) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObjectKind( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrTypeGUID) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Object( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppToolObject) = 0;
        
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocumentData( 
            /* [defaultvalue][in] */ __RPC__in BSTR bstrWhichData,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppDataObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **ppProjItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Project( 
            /* [retval][out] */ __RPC__deref_out_opt Project **ppProj) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Document( 
            /* [retval][out] */ __RPC__deref_out_opt Document **ppDocument) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppDocument) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Linkable( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pLinkable) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Linkable( 
            /* [in] */ VARIANT_BOOL Linkable) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Activate( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [defaultvalue][in] */ vsSaveChanges SaveChanges = vsSaveChangesNo) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrTitle) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ __RPC__in BSTR pbstrTitle) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetSelectionContainer( 
            __RPC__deref_in_opt SAFEARRAY * *Objects) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsFloating( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Floating) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsFloating( 
            /* [in] */ VARIANT_BOOL Floating) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoHides( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Hides) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoHides( 
            /* [in] */ VARIANT_BOOL Hides) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetTabPicture( 
            VARIANT Picture) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContextAttributes( 
            /* [retval][out] */ __RPC__deref_out_opt ContextAttributes **ppVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct WindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Window * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Window * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Window * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Window * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Window * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Window * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Window * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt Windows **lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            Window * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfVisible);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            Window * This,
            /* [in] */ VARIANT_BOOL fVisible);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            Window * This,
            /* [retval][out] */ __RPC__out long *plLeft);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Left )( 
            Window * This,
            /* [in] */ long lLeft);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            Window * This,
            /* [retval][out] */ __RPC__out long *plTop);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Top )( 
            Window * This,
            /* [in] */ long lTop_r);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            Window * This,
            /* [retval][out] */ __RPC__out long *plWidth);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            Window * This,
            /* [in] */ long lWidth);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            Window * This,
            /* [retval][out] */ __RPC__out long *plHeight);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            Window * This,
            /* [in] */ long lHeight_r);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WindowState )( 
            Window * This,
            /* [retval][out] */ __RPC__out vsWindowState *plWindowState);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WindowState )( 
            Window * This,
            /* [in] */ vsWindowState wstWindowState);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetFocus )( 
            Window * This);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Window * This,
            /* [retval][out] */ __RPC__out vsWindowType *pKind);
        
        /* [hidden][restricted][id] */ HRESULT ( STDMETHODCALLTYPE *SetKind )( 
            Window * This,
            /* [in] */ vsWindowType eKind);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinkedWindows )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt LinkedWindows **ppwnsCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinkedWindowFrame )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **ppwinFrame);
        
        /* [hidden][restricted][id] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            Window * This);
        
        /* [hidden][restricted][id] */ HRESULT ( STDMETHODCALLTYPE *Attach )( 
            Window * This,
            /* [in] */ long lWindowHandle);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HWnd )( 
            Window * This,
            /* [retval][out] */ __RPC__out long *plWindowHandle);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrType);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectKind )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrTypeGUID);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Object )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppToolObject);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentData )( 
            Window * This,
            /* [defaultvalue][in] */ __RPC__in BSTR bstrWhichData,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppDataObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **ppProjItem);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt Project **ppProj);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt Document **ppDocument);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppDocument);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linkable )( 
            Window * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pLinkable);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linkable )( 
            Window * This,
            /* [in] */ VARIANT_BOOL Linkable);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            Window * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            Window * This,
            /* [defaultvalue][in] */ vsSaveChanges SaveChanges);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrTitle);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            Window * This,
            /* [in] */ __RPC__in BSTR pbstrTitle);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetSelectionContainer )( 
            Window * This,
            __RPC__deref_in_opt SAFEARRAY * *Objects);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsFloating )( 
            Window * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Floating);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsFloating )( 
            Window * This,
            /* [in] */ VARIANT_BOOL Floating);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoHides )( 
            Window * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Hides);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoHides )( 
            Window * This,
            /* [in] */ VARIANT_BOOL Hides);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetTabPicture )( 
            Window * This,
            VARIANT Picture);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContextAttributes )( 
            Window * This,
            /* [retval][out] */ __RPC__deref_out_opt ContextAttributes **ppVal);
        
        END_INTERFACE
    } WindowVtbl;

    interface Window
    {
        CONST_VTBL struct WindowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Window_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Window_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Window_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Window_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Window_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Window_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Window_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Window_get_Collection(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Collection(This,lppaReturn) ) 

#define Window_get_Visible(This,pfVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pfVisible) ) 

#define Window_put_Visible(This,fVisible)	\
    ( (This)->lpVtbl -> put_Visible(This,fVisible) ) 

#define Window_get_Left(This,plLeft)	\
    ( (This)->lpVtbl -> get_Left(This,plLeft) ) 

#define Window_put_Left(This,lLeft)	\
    ( (This)->lpVtbl -> put_Left(This,lLeft) ) 

#define Window_get_Top(This,plTop)	\
    ( (This)->lpVtbl -> get_Top(This,plTop) ) 

#define Window_put_Top(This,lTop_r)	\
    ( (This)->lpVtbl -> put_Top(This,lTop_r) ) 

#define Window_get_Width(This,plWidth)	\
    ( (This)->lpVtbl -> get_Width(This,plWidth) ) 

#define Window_put_Width(This,lWidth)	\
    ( (This)->lpVtbl -> put_Width(This,lWidth) ) 

#define Window_get_Height(This,plHeight)	\
    ( (This)->lpVtbl -> get_Height(This,plHeight) ) 

#define Window_put_Height(This,lHeight_r)	\
    ( (This)->lpVtbl -> put_Height(This,lHeight_r) ) 

#define Window_get_WindowState(This,plWindowState)	\
    ( (This)->lpVtbl -> get_WindowState(This,plWindowState) ) 

#define Window_put_WindowState(This,wstWindowState)	\
    ( (This)->lpVtbl -> put_WindowState(This,wstWindowState) ) 

#define Window_SetFocus(This)	\
    ( (This)->lpVtbl -> SetFocus(This) ) 

#define Window_get_Type(This,pKind)	\
    ( (This)->lpVtbl -> get_Type(This,pKind) ) 

#define Window_SetKind(This,eKind)	\
    ( (This)->lpVtbl -> SetKind(This,eKind) ) 

#define Window_get_LinkedWindows(This,ppwnsCollection)	\
    ( (This)->lpVtbl -> get_LinkedWindows(This,ppwnsCollection) ) 

#define Window_get_LinkedWindowFrame(This,ppwinFrame)	\
    ( (This)->lpVtbl -> get_LinkedWindowFrame(This,ppwinFrame) ) 

#define Window_Detach(This)	\
    ( (This)->lpVtbl -> Detach(This) ) 

#define Window_Attach(This,lWindowHandle)	\
    ( (This)->lpVtbl -> Attach(This,lWindowHandle) ) 

#define Window_get_HWnd(This,plWindowHandle)	\
    ( (This)->lpVtbl -> get_HWnd(This,plWindowHandle) ) 

#define Window_get_Kind(This,pbstrType)	\
    ( (This)->lpVtbl -> get_Kind(This,pbstrType) ) 

#define Window_get_ObjectKind(This,pbstrTypeGUID)	\
    ( (This)->lpVtbl -> get_ObjectKind(This,pbstrTypeGUID) ) 

#define Window_get_Object(This,ppToolObject)	\
    ( (This)->lpVtbl -> get_Object(This,ppToolObject) ) 

#define Window_get_DocumentData(This,bstrWhichData,ppDataObject)	\
    ( (This)->lpVtbl -> get_DocumentData(This,bstrWhichData,ppDataObject) ) 

#define Window_get_ProjectItem(This,ppProjItem)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,ppProjItem) ) 

#define Window_get_Project(This,ppProj)	\
    ( (This)->lpVtbl -> get_Project(This,ppProj) ) 

#define Window_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define Window_get_Document(This,ppDocument)	\
    ( (This)->lpVtbl -> get_Document(This,ppDocument) ) 

#define Window_get_Selection(This,ppDocument)	\
    ( (This)->lpVtbl -> get_Selection(This,ppDocument) ) 

#define Window_get_Linkable(This,pLinkable)	\
    ( (This)->lpVtbl -> get_Linkable(This,pLinkable) ) 

#define Window_put_Linkable(This,Linkable)	\
    ( (This)->lpVtbl -> put_Linkable(This,Linkable) ) 

#define Window_Activate(This)	\
    ( (This)->lpVtbl -> Activate(This) ) 

#define Window_Close(This,SaveChanges)	\
    ( (This)->lpVtbl -> Close(This,SaveChanges) ) 

#define Window_get_Caption(This,pbstrTitle)	\
    ( (This)->lpVtbl -> get_Caption(This,pbstrTitle) ) 

#define Window_put_Caption(This,pbstrTitle)	\
    ( (This)->lpVtbl -> put_Caption(This,pbstrTitle) ) 

#define Window_SetSelectionContainer(This,Objects)	\
    ( (This)->lpVtbl -> SetSelectionContainer(This,Objects) ) 

#define Window_get_IsFloating(This,Floating)	\
    ( (This)->lpVtbl -> get_IsFloating(This,Floating) ) 

#define Window_put_IsFloating(This,Floating)	\
    ( (This)->lpVtbl -> put_IsFloating(This,Floating) ) 

#define Window_get_AutoHides(This,Hides)	\
    ( (This)->lpVtbl -> get_AutoHides(This,Hides) ) 

#define Window_put_AutoHides(This,Hides)	\
    ( (This)->lpVtbl -> put_AutoHides(This,Hides) ) 

#define Window_SetTabPicture(This,Picture)	\
    ( (This)->lpVtbl -> SetTabPicture(This,Picture) ) 

#define Window_get_ContextAttributes(This,ppVal)	\
    ( (This)->lpVtbl -> get_ContextAttributes(This,ppVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Window_INTERFACE_DEFINED__ */


#ifndef __LinkedWindows_INTERFACE_DEFINED__
#define __LinkedWindows_INTERFACE_DEFINED__

/* interface LinkedWindows */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_LinkedWindows;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f00ef34a-a654-4c1b-897a-585d5bcbb35a")
    LinkedWindows : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Window **ppptReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Window **lppcReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *lplReturn) = 0;
        
        virtual /* [restricted][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ __RPC__in_opt Window *Window) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in_opt Window *Window) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct LinkedWindowsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            LinkedWindows * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            LinkedWindows * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            LinkedWindows * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            LinkedWindows * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            LinkedWindows * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            LinkedWindows * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            LinkedWindows * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            LinkedWindows * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **ppptReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            LinkedWindows * This,
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Window **lppcReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            LinkedWindows * This,
            /* [retval][out] */ __RPC__out long *lplReturn);
        
        /* [restricted][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            LinkedWindows * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            LinkedWindows * This,
            /* [in] */ __RPC__in_opt Window *Window);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            LinkedWindows * This,
            /* [in] */ __RPC__in_opt Window *Window);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            LinkedWindows * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        END_INTERFACE
    } LinkedWindowsVtbl;

    interface LinkedWindows
    {
        CONST_VTBL struct LinkedWindowsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define LinkedWindows_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define LinkedWindows_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define LinkedWindows_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define LinkedWindows_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define LinkedWindows_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define LinkedWindows_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define LinkedWindows_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define LinkedWindows_get_Parent(This,ppptReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,ppptReturn) ) 

#define LinkedWindows_Item(This,index,lppcReturn)	\
    ( (This)->lpVtbl -> Item(This,index,lppcReturn) ) 

#define LinkedWindows_get_Count(This,lplReturn)	\
    ( (This)->lpVtbl -> get_Count(This,lplReturn) ) 

#define LinkedWindows__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define LinkedWindows_Remove(This,Window)	\
    ( (This)->lpVtbl -> Remove(This,Window) ) 

#define LinkedWindows_Add(This,Window)	\
    ( (This)->lpVtbl -> Add(This,Window) ) 

#define LinkedWindows_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __LinkedWindows_INTERFACE_DEFINED__ */


#ifndef __Events_INTERFACE_DEFINED__
#define __Events_INTERFACE_DEFINED__

/* interface Events */
/* [object][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_Events;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("134170F8-93B1-42dd-9F89-A2AC7010BA07")
    Events : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandBarEvents( 
            /* [in] */ __RPC__in_opt IDispatch *CommandBarControl,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **prceNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandEvents( 
            /* [defaultvalue][in] */ __RPC__in BSTR Guid,
            /* [defaultvalue][in] */ long ID,
            /* [retval][out] */ __RPC__deref_out_opt CommandEvents	**ppceNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectionEvents( 
            /* [retval][out] */ __RPC__deref_out_opt SelectionEvents	**ppceNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SolutionEvents( 
            /* [retval][out] */ __RPC__deref_out_opt SolutionEvents	**ppceNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BuildEvents( 
            /* [retval][out] */ __RPC__deref_out_opt BuildEvents	**ppceNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WindowEvents( 
            /* [defaultvalue][in] */ __RPC__in_opt Window *WindowFilter,
            /* [retval][out] */ __RPC__deref_out_opt WindowEvents	**ppceNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutputWindowEvents( 
            /* [defaultvalue][in] */ __RPC__in BSTR Pane,
            /* [retval][out] */ __RPC__deref_out_opt OutputWindowEvents	**ppceNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FindEvents( 
            /* [retval][out] */ __RPC__deref_out_opt FindEvents	**ppFindEvents) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskListEvents( 
            /* [defaultvalue][in] */ __RPC__in BSTR Filter,
            /* [retval][out] */ __RPC__deref_out_opt TaskListEvents	**ppceNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTEEvents( 
            /* [retval][out] */ __RPC__deref_out_opt DTEEvents	**ppceNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocumentEvents( 
            /* [defaultvalue][in] */ __RPC__in_opt Document *Document,
            /* [retval][out] */ __RPC__deref_out_opt DocumentEvents	**ppceNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SolutionItemsEvents( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItemsEvents	**ppeNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MiscFilesEvents( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItemsEvents	**ppeNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DebuggerEvents( 
            /* [retval][out] */ __RPC__deref_out_opt DebuggerEvents	**ppeNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextEditorEvents( 
            /* [defaultvalue][in] */ __RPC__in_opt TextDocument *TextDocumentFilter,
            /* [retval][out] */ __RPC__deref_out_opt TextEditorEvents	**ppeNew) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetObject( 
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct EventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Events * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Events * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Events * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Events * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Events * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Events * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Events * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandBarEvents )( 
            Events * This,
            /* [in] */ __RPC__in_opt IDispatch *CommandBarControl,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **prceNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandEvents )( 
            Events * This,
            /* [defaultvalue][in] */ __RPC__in BSTR Guid,
            /* [defaultvalue][in] */ long ID,
            /* [retval][out] */ __RPC__deref_out_opt CommandEvents	**ppceNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEvents )( 
            Events * This,
            /* [retval][out] */ __RPC__deref_out_opt SelectionEvents	**ppceNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionEvents )( 
            Events * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionEvents	**ppceNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BuildEvents )( 
            Events * This,
            /* [retval][out] */ __RPC__deref_out_opt BuildEvents	**ppceNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WindowEvents )( 
            Events * This,
            /* [defaultvalue][in] */ __RPC__in_opt Window *WindowFilter,
            /* [retval][out] */ __RPC__deref_out_opt WindowEvents	**ppceNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutputWindowEvents )( 
            Events * This,
            /* [defaultvalue][in] */ __RPC__in BSTR Pane,
            /* [retval][out] */ __RPC__deref_out_opt OutputWindowEvents	**ppceNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FindEvents )( 
            Events * This,
            /* [retval][out] */ __RPC__deref_out_opt FindEvents	**ppFindEvents);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskListEvents )( 
            Events * This,
            /* [defaultvalue][in] */ __RPC__in BSTR Filter,
            /* [retval][out] */ __RPC__deref_out_opt TaskListEvents	**ppceNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTEEvents )( 
            Events * This,
            /* [retval][out] */ __RPC__deref_out_opt DTEEvents	**ppceNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentEvents )( 
            Events * This,
            /* [defaultvalue][in] */ __RPC__in_opt Document *Document,
            /* [retval][out] */ __RPC__deref_out_opt DocumentEvents	**ppceNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionItemsEvents )( 
            Events * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItemsEvents	**ppeNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MiscFilesEvents )( 
            Events * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItemsEvents	**ppeNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DebuggerEvents )( 
            Events * This,
            /* [retval][out] */ __RPC__deref_out_opt DebuggerEvents	**ppeNew);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextEditorEvents )( 
            Events * This,
            /* [defaultvalue][in] */ __RPC__in_opt TextDocument *TextDocumentFilter,
            /* [retval][out] */ __RPC__deref_out_opt TextEditorEvents	**ppeNew);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetObject )( 
            Events * This,
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppObject);
        
        END_INTERFACE
    } EventsVtbl;

    interface Events
    {
        CONST_VTBL struct EventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Events_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Events_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Events_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Events_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Events_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Events_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Events_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Events_get_CommandBarEvents(This,CommandBarControl,prceNew)	\
    ( (This)->lpVtbl -> get_CommandBarEvents(This,CommandBarControl,prceNew) ) 

#define Events_get_CommandEvents(This,Guid,ID,ppceNew)	\
    ( (This)->lpVtbl -> get_CommandEvents(This,Guid,ID,ppceNew) ) 

#define Events_get_SelectionEvents(This,ppceNew)	\
    ( (This)->lpVtbl -> get_SelectionEvents(This,ppceNew) ) 

#define Events_get_SolutionEvents(This,ppceNew)	\
    ( (This)->lpVtbl -> get_SolutionEvents(This,ppceNew) ) 

#define Events_get_BuildEvents(This,ppceNew)	\
    ( (This)->lpVtbl -> get_BuildEvents(This,ppceNew) ) 

#define Events_get_WindowEvents(This,WindowFilter,ppceNew)	\
    ( (This)->lpVtbl -> get_WindowEvents(This,WindowFilter,ppceNew) ) 

#define Events_get_OutputWindowEvents(This,Pane,ppceNew)	\
    ( (This)->lpVtbl -> get_OutputWindowEvents(This,Pane,ppceNew) ) 

#define Events_get_FindEvents(This,ppFindEvents)	\
    ( (This)->lpVtbl -> get_FindEvents(This,ppFindEvents) ) 

#define Events_get_TaskListEvents(This,Filter,ppceNew)	\
    ( (This)->lpVtbl -> get_TaskListEvents(This,Filter,ppceNew) ) 

#define Events_get_DTEEvents(This,ppceNew)	\
    ( (This)->lpVtbl -> get_DTEEvents(This,ppceNew) ) 

#define Events_get_DocumentEvents(This,Document,ppceNew)	\
    ( (This)->lpVtbl -> get_DocumentEvents(This,Document,ppceNew) ) 

#define Events_get_SolutionItemsEvents(This,ppeNew)	\
    ( (This)->lpVtbl -> get_SolutionItemsEvents(This,ppeNew) ) 

#define Events_get_MiscFilesEvents(This,ppeNew)	\
    ( (This)->lpVtbl -> get_MiscFilesEvents(This,ppeNew) ) 

#define Events_get_DebuggerEvents(This,ppeNew)	\
    ( (This)->lpVtbl -> get_DebuggerEvents(This,ppeNew) ) 

#define Events_get_TextEditorEvents(This,TextDocumentFilter,ppeNew)	\
    ( (This)->lpVtbl -> get_TextEditorEvents(This,TextDocumentFilter,ppeNew) ) 

#define Events_GetObject(This,Name,ppObject)	\
    ( (This)->lpVtbl -> GetObject(This,Name,ppObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Events_INTERFACE_DEFINED__ */


#ifndef __TaskList_INTERFACE_DEFINED__
#define __TaskList_INTERFACE_DEFINED__

/* interface TaskList */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TaskList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4e4f0569-e16a-4da1-92de-10882a4ddd8c")
    TaskList : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Window **lppReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultCommentToken( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrToken) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskItems( 
            /* [retval][out] */ __RPC__deref_out_opt TaskItems **pTaskItems) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectedItems( 
            /* [retval][out] */ __RPC__out VARIANT *Selections) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TaskListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TaskList * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TaskList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TaskList * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TaskList * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TaskList * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TaskList * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TaskList * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TaskList * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TaskList * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **lppReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultCommentToken )( 
            TaskList * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrToken);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskItems )( 
            TaskList * This,
            /* [retval][out] */ __RPC__deref_out_opt TaskItems **pTaskItems);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedItems )( 
            TaskList * This,
            /* [retval][out] */ __RPC__out VARIANT *Selections);
        
        END_INTERFACE
    } TaskListVtbl;

    interface TaskList
    {
        CONST_VTBL struct TaskListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TaskList_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TaskList_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TaskList_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TaskList_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TaskList_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TaskList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TaskList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TaskList_get_DTE(This,lppReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppReturn) ) 

#define TaskList_get_Parent(This,lppReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppReturn) ) 

#define TaskList_get_DefaultCommentToken(This,pbstrToken)	\
    ( (This)->lpVtbl -> get_DefaultCommentToken(This,pbstrToken) ) 

#define TaskList_get_TaskItems(This,pTaskItems)	\
    ( (This)->lpVtbl -> get_TaskItems(This,pTaskItems) ) 

#define TaskList_get_SelectedItems(This,Selections)	\
    ( (This)->lpVtbl -> get_SelectedItems(This,Selections) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TaskList_INTERFACE_DEFINED__ */


#ifndef __TaskItems_INTERFACE_DEFINED__
#define __TaskItems_INTERFACE_DEFINED__

/* interface TaskItems */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TaskItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4b51103d-513c-4773-b56a-354d0928fd04")
    TaskItems : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt TaskList **pTaskList) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt TaskItem **pTaskItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in BSTR Category,
            /* [in] */ __RPC__in BSTR SubCategory,
            /* [in] */ __RPC__in BSTR Description,
            /* [defaultvalue][in] */ vsTaskPriority Priority,
            /* [optional][in] */ VARIANT Icon,
            /* [defaultvalue][in] */ VARIANT_BOOL Checkable,
            /* [defaultvalue][in] */ __RPC__in BSTR File,
            /* [defaultvalue][in] */ long Line,
            /* [defaultvalue][in] */ VARIANT_BOOL CanUserDelete,
            /* [defaultvalue][in] */ VARIANT_BOOL FlushItem,
            /* [retval][out] */ __RPC__deref_out_opt TaskItem **pTaskItem) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ForceItemsToTaskList( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TaskItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TaskItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TaskItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TaskItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TaskItems * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TaskItems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TaskItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TaskItems * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TaskItems * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TaskItems * This,
            /* [retval][out] */ __RPC__deref_out_opt TaskList **pTaskList);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            TaskItems * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt TaskItem **pTaskItem);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            TaskItems * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            TaskItems * This,
            /* [in] */ __RPC__in BSTR Category,
            /* [in] */ __RPC__in BSTR SubCategory,
            /* [in] */ __RPC__in BSTR Description,
            /* [defaultvalue][in] */ vsTaskPriority Priority,
            /* [optional][in] */ VARIANT Icon,
            /* [defaultvalue][in] */ VARIANT_BOOL Checkable,
            /* [defaultvalue][in] */ __RPC__in BSTR File,
            /* [defaultvalue][in] */ long Line,
            /* [defaultvalue][in] */ VARIANT_BOOL CanUserDelete,
            /* [defaultvalue][in] */ VARIANT_BOOL FlushItem,
            /* [retval][out] */ __RPC__deref_out_opt TaskItem **pTaskItem);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            TaskItems * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ForceItemsToTaskList )( 
            TaskItems * This);
        
        END_INTERFACE
    } TaskItemsVtbl;

    interface TaskItems
    {
        CONST_VTBL struct TaskItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TaskItems_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TaskItems_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TaskItems_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TaskItems_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TaskItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TaskItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TaskItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TaskItems_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define TaskItems_get_Parent(This,pTaskList)	\
    ( (This)->lpVtbl -> get_Parent(This,pTaskList) ) 

#define TaskItems_Item(This,Index,pTaskItem)	\
    ( (This)->lpVtbl -> Item(This,Index,pTaskItem) ) 

#define TaskItems_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define TaskItems_Add(This,Category,SubCategory,Description,Priority,Icon,Checkable,File,Line,CanUserDelete,FlushItem,pTaskItem)	\
    ( (This)->lpVtbl -> Add(This,Category,SubCategory,Description,Priority,Icon,Checkable,File,Line,CanUserDelete,FlushItem,pTaskItem) ) 

#define TaskItems__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define TaskItems_ForceItemsToTaskList(This)	\
    ( (This)->lpVtbl -> ForceItemsToTaskList(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TaskItems_INTERFACE_DEFINED__ */


#ifndef __TaskItem_INTERFACE_DEFINED__
#define __TaskItem_INTERFACE_DEFINED__

/* interface TaskItem */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TaskItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("58e4d419-6b8c-4c63-92de-70161cd95890")
    TaskItem : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt TaskItems **pTaskItems) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Category( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pCategory) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SubCategory( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pSubCategory) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Priority( 
            /* [retval][out] */ __RPC__out vsTaskPriority *pPriority) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Priority( 
            /* [in] */ vsTaskPriority Priority) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDescription) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ __RPC__in BSTR Description) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFileName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FileName( 
            /* [in] */ __RPC__in BSTR FileName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsSettable( 
            /* [in] */ vsTaskListColumn Column,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pSettable) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Line( 
            /* [retval][out] */ __RPC__out long *pLine) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Line( 
            /* [in] */ long Line) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Displayed( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pDisplayed) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Checked( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pChecked) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Checked( 
            /* [in] */ VARIANT_BOOL Checked) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Navigate( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Select( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TaskItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TaskItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TaskItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TaskItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TaskItem * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TaskItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TaskItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TaskItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TaskItem * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            TaskItem * This,
            /* [retval][out] */ __RPC__deref_out_opt TaskItems **pTaskItems);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Category )( 
            TaskItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pCategory);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SubCategory )( 
            TaskItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pSubCategory);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Priority )( 
            TaskItem * This,
            /* [retval][out] */ __RPC__out vsTaskPriority *pPriority);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Priority )( 
            TaskItem * This,
            /* [in] */ vsTaskPriority Priority);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            TaskItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDescription);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            TaskItem * This,
            /* [in] */ __RPC__in BSTR Description);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            TaskItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFileName);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FileName )( 
            TaskItem * This,
            /* [in] */ __RPC__in BSTR FileName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsSettable )( 
            TaskItem * This,
            /* [in] */ vsTaskListColumn Column,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pSettable);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Line )( 
            TaskItem * This,
            /* [retval][out] */ __RPC__out long *pLine);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Line )( 
            TaskItem * This,
            /* [in] */ long Line);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Displayed )( 
            TaskItem * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pDisplayed);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Checked )( 
            TaskItem * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pChecked);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Checked )( 
            TaskItem * This,
            /* [in] */ VARIANT_BOOL Checked);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Navigate )( 
            TaskItem * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            TaskItem * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Select )( 
            TaskItem * This);
        
        END_INTERFACE
    } TaskItemVtbl;

    interface TaskItem
    {
        CONST_VTBL struct TaskItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TaskItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TaskItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TaskItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TaskItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TaskItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TaskItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TaskItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TaskItem_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define TaskItem_get_Collection(This,pTaskItems)	\
    ( (This)->lpVtbl -> get_Collection(This,pTaskItems) ) 

#define TaskItem_get_Category(This,pCategory)	\
    ( (This)->lpVtbl -> get_Category(This,pCategory) ) 

#define TaskItem_get_SubCategory(This,pSubCategory)	\
    ( (This)->lpVtbl -> get_SubCategory(This,pSubCategory) ) 

#define TaskItem_get_Priority(This,pPriority)	\
    ( (This)->lpVtbl -> get_Priority(This,pPriority) ) 

#define TaskItem_put_Priority(This,Priority)	\
    ( (This)->lpVtbl -> put_Priority(This,Priority) ) 

#define TaskItem_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define TaskItem_put_Description(This,Description)	\
    ( (This)->lpVtbl -> put_Description(This,Description) ) 

#define TaskItem_get_FileName(This,pFileName)	\
    ( (This)->lpVtbl -> get_FileName(This,pFileName) ) 

#define TaskItem_put_FileName(This,FileName)	\
    ( (This)->lpVtbl -> put_FileName(This,FileName) ) 

#define TaskItem_get_IsSettable(This,Column,pSettable)	\
    ( (This)->lpVtbl -> get_IsSettable(This,Column,pSettable) ) 

#define TaskItem_get_Line(This,pLine)	\
    ( (This)->lpVtbl -> get_Line(This,pLine) ) 

#define TaskItem_put_Line(This,Line)	\
    ( (This)->lpVtbl -> put_Line(This,Line) ) 

#define TaskItem_get_Displayed(This,pDisplayed)	\
    ( (This)->lpVtbl -> get_Displayed(This,pDisplayed) ) 

#define TaskItem_get_Checked(This,pChecked)	\
    ( (This)->lpVtbl -> get_Checked(This,pChecked) ) 

#define TaskItem_put_Checked(This,Checked)	\
    ( (This)->lpVtbl -> put_Checked(This,Checked) ) 

#define TaskItem_Navigate(This)	\
    ( (This)->lpVtbl -> Navigate(This) ) 

#define TaskItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define TaskItem_Select(This)	\
    ( (This)->lpVtbl -> Select(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TaskItem_INTERFACE_DEFINED__ */


#ifndef __ToolBox_INTERFACE_DEFINED__
#define __ToolBox_INTERFACE_DEFINED__

/* interface ToolBox */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ToolBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("56fcd5af-7f17-4c5c-aa8d-ae2bb2ddbf38")
    ToolBox : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Window **pParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveTab( 
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTab **pToolBoxTab) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToolBoxTabs( 
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTabs **pToolBoxTabs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ToolBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ToolBox * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ToolBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ToolBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ToolBox * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ToolBox * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ToolBox * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ToolBox * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ToolBox * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ToolBox * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **pParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveTab )( 
            ToolBox * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTab **pToolBoxTab);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToolBoxTabs )( 
            ToolBox * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTabs **pToolBoxTabs);
        
        END_INTERFACE
    } ToolBoxVtbl;

    interface ToolBox
    {
        CONST_VTBL struct ToolBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ToolBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ToolBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ToolBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ToolBox_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ToolBox_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ToolBox_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ToolBox_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ToolBox_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define ToolBox_get_Parent(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent(This,pParent) ) 

#define ToolBox_get_ActiveTab(This,pToolBoxTab)	\
    ( (This)->lpVtbl -> get_ActiveTab(This,pToolBoxTab) ) 

#define ToolBox_get_ToolBoxTabs(This,pToolBoxTabs)	\
    ( (This)->lpVtbl -> get_ToolBoxTabs(This,pToolBoxTabs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ToolBox_INTERFACE_DEFINED__ */


#ifndef __ToolBoxTabs_INTERFACE_DEFINED__
#define __ToolBoxTabs_INTERFACE_DEFINED__

/* interface ToolBoxTabs */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ToolBoxTabs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("cf177b52-4f2f-42a0-8da3-ce78679a0d2d")
    ToolBoxTabs : public IDispatch
    {
    public:
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTab **pItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt ToolBox **pParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTab **pToolBoxTabs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ToolBoxTabsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ToolBoxTabs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ToolBoxTabs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ToolBoxTabs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ToolBoxTabs * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ToolBoxTabs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ToolBoxTabs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ToolBoxTabs * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            ToolBoxTabs * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ToolBoxTabs * This,
            VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTab **pItem);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ToolBoxTabs * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ToolBoxTabs * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBox **pParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ToolBoxTabs * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            ToolBoxTabs * This,
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTab **pToolBoxTabs);
        
        END_INTERFACE
    } ToolBoxTabsVtbl;

    interface ToolBoxTabs
    {
        CONST_VTBL struct ToolBoxTabsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ToolBoxTabs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ToolBoxTabs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ToolBoxTabs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ToolBoxTabs_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ToolBoxTabs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ToolBoxTabs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ToolBoxTabs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ToolBoxTabs__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define ToolBoxTabs_Item(This,Index,pItem)	\
    ( (This)->lpVtbl -> Item(This,Index,pItem) ) 

#define ToolBoxTabs_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define ToolBoxTabs_get_Parent(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent(This,pParent) ) 

#define ToolBoxTabs_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define ToolBoxTabs_Add(This,Name,pToolBoxTabs)	\
    ( (This)->lpVtbl -> Add(This,Name,pToolBoxTabs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ToolBoxTabs_INTERFACE_DEFINED__ */


#ifndef __ToolBoxTab_INTERFACE_DEFINED__
#define __ToolBoxTab_INTERFACE_DEFINED__

/* interface ToolBoxTab */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ToolBoxTab;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ce2def9e-3387-4bf2-967b-a1f7f70df325")
    ToolBoxTab : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTabs **pToolBoxTabs) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Activate( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToolBoxItems( 
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItems **pToolBoxItems) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListView( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pListView) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ListView( 
            /* [in] */ VARIANT_BOOL ListView) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ToolBoxTabVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ToolBoxTab * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ToolBoxTab * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ToolBoxTab * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ToolBoxTab * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ToolBoxTab * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ToolBoxTab * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ToolBoxTab * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ToolBoxTab * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            ToolBoxTab * This,
            /* [in] */ __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            ToolBoxTab * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTabs **pToolBoxTabs);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ToolBoxTab * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            ToolBoxTab * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            ToolBoxTab * This);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToolBoxItems )( 
            ToolBoxTab * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItems **pToolBoxItems);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListView )( 
            ToolBoxTab * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pListView);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ListView )( 
            ToolBoxTab * This,
            /* [in] */ VARIANT_BOOL ListView);
        
        END_INTERFACE
    } ToolBoxTabVtbl;

    interface ToolBoxTab
    {
        CONST_VTBL struct ToolBoxTabVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ToolBoxTab_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ToolBoxTab_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ToolBoxTab_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ToolBoxTab_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ToolBoxTab_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ToolBoxTab_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ToolBoxTab_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ToolBoxTab_get_Name(This,pName)	\
    ( (This)->lpVtbl -> get_Name(This,pName) ) 

#define ToolBoxTab_put_Name(This,NewName)	\
    ( (This)->lpVtbl -> put_Name(This,NewName) ) 

#define ToolBoxTab_get_Collection(This,pToolBoxTabs)	\
    ( (This)->lpVtbl -> get_Collection(This,pToolBoxTabs) ) 

#define ToolBoxTab_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define ToolBoxTab_Activate(This)	\
    ( (This)->lpVtbl -> Activate(This) ) 

#define ToolBoxTab_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define ToolBoxTab_get_ToolBoxItems(This,pToolBoxItems)	\
    ( (This)->lpVtbl -> get_ToolBoxItems(This,pToolBoxItems) ) 

#define ToolBoxTab_get_ListView(This,pListView)	\
    ( (This)->lpVtbl -> get_ListView(This,pListView) ) 

#define ToolBoxTab_put_ListView(This,ListView)	\
    ( (This)->lpVtbl -> put_ListView(This,ListView) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ToolBoxTab_INTERFACE_DEFINED__ */


#ifndef __ToolBoxItem_INTERFACE_DEFINED__
#define __ToolBoxItem_INTERFACE_DEFINED__

/* interface ToolBoxItem */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ToolBoxItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("46538d1b-4d81-4002-8bb4-dbdb65babb23")
    ToolBoxItem : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ __RPC__in BSTR Name) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItems **pToolBoxItems) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Select( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ToolBoxItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ToolBoxItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ToolBoxItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ToolBoxItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ToolBoxItem * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ToolBoxItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ToolBoxItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ToolBoxItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ToolBoxItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            ToolBoxItem * This,
            /* [in] */ __RPC__in BSTR Name);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            ToolBoxItem * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItems **pToolBoxItems);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ToolBoxItem * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            ToolBoxItem * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Select )( 
            ToolBoxItem * This);
        
        END_INTERFACE
    } ToolBoxItemVtbl;

    interface ToolBoxItem
    {
        CONST_VTBL struct ToolBoxItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ToolBoxItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ToolBoxItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ToolBoxItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ToolBoxItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ToolBoxItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ToolBoxItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ToolBoxItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ToolBoxItem_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define ToolBoxItem_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define ToolBoxItem_get_Collection(This,pToolBoxItems)	\
    ( (This)->lpVtbl -> get_Collection(This,pToolBoxItems) ) 

#define ToolBoxItem_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define ToolBoxItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define ToolBoxItem_Select(This)	\
    ( (This)->lpVtbl -> Select(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ToolBoxItem_INTERFACE_DEFINED__ */


#ifndef __ToolBoxItems_INTERFACE_DEFINED__
#define __ToolBoxItems_INTERFACE_DEFINED__

/* interface ToolBoxItems */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ToolBoxItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("395c7dfb-f158-431c-8f43-dda83b4ef54e")
    ToolBoxItems : public IDispatch
    {
    public:
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItem **pItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTab **pParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in BSTR Name,
            /* [in] */ VARIANT Data,
            /* [defaultvalue][in] */ vsToolBoxItemFormat Format,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItem **pToolBoxItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectedItem( 
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItem **pToolBoxItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ToolBoxItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ToolBoxItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ToolBoxItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ToolBoxItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ToolBoxItems * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ToolBoxItems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ToolBoxItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ToolBoxItems * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            ToolBoxItems * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ToolBoxItems * This,
            VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItem **pItem);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ToolBoxItems * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxTab **pParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ToolBoxItems * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ToolBoxItems * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            ToolBoxItems * This,
            /* [in] */ __RPC__in BSTR Name,
            /* [in] */ VARIANT Data,
            /* [defaultvalue][in] */ vsToolBoxItemFormat Format,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItem **pToolBoxItem);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedItem )( 
            ToolBoxItems * This,
            /* [retval][out] */ __RPC__deref_out_opt ToolBoxItem **pToolBoxItem);
        
        END_INTERFACE
    } ToolBoxItemsVtbl;

    interface ToolBoxItems
    {
        CONST_VTBL struct ToolBoxItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ToolBoxItems_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ToolBoxItems_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ToolBoxItems_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ToolBoxItems_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ToolBoxItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ToolBoxItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ToolBoxItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ToolBoxItems__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define ToolBoxItems_Item(This,Index,pItem)	\
    ( (This)->lpVtbl -> Item(This,Index,pItem) ) 

#define ToolBoxItems_get_Parent(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent(This,pParent) ) 

#define ToolBoxItems_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define ToolBoxItems_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define ToolBoxItems_Add(This,Name,Data,Format,pToolBoxItem)	\
    ( (This)->lpVtbl -> Add(This,Name,Data,Format,pToolBoxItem) ) 

#define ToolBoxItems_get_SelectedItem(This,pToolBoxItem)	\
    ( (This)->lpVtbl -> get_SelectedItem(This,pToolBoxItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ToolBoxItems_INTERFACE_DEFINED__ */


#ifndef __OutputWindow_INTERFACE_DEFINED__
#define __OutputWindow_INTERFACE_DEFINED__

/* interface OutputWindow */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_OutputWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("eab0a63d-c3a8-496e-9acf-a82cef6a43b3")
    OutputWindow : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Window **pParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutputWindowPanes( 
            /* [retval][out] */ __RPC__deref_out_opt OutputWindowPanes **pOutputWindowPanes) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActivePane( 
            /* [retval][out] */ __RPC__deref_out_opt OutputWindowPane **pOutputWindowPane) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct OutputWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OutputWindow * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OutputWindow * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OutputWindow * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OutputWindow * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OutputWindow * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OutputWindow * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OutputWindow * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            OutputWindow * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            OutputWindow * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **pParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutputWindowPanes )( 
            OutputWindow * This,
            /* [retval][out] */ __RPC__deref_out_opt OutputWindowPanes **pOutputWindowPanes);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActivePane )( 
            OutputWindow * This,
            /* [retval][out] */ __RPC__deref_out_opt OutputWindowPane **pOutputWindowPane);
        
        END_INTERFACE
    } OutputWindowVtbl;

    interface OutputWindow
    {
        CONST_VTBL struct OutputWindowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OutputWindow_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OutputWindow_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OutputWindow_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OutputWindow_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OutputWindow_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OutputWindow_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OutputWindow_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define OutputWindow_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define OutputWindow_get_Parent(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent(This,pParent) ) 

#define OutputWindow_get_OutputWindowPanes(This,pOutputWindowPanes)	\
    ( (This)->lpVtbl -> get_OutputWindowPanes(This,pOutputWindowPanes) ) 

#define OutputWindow_get_ActivePane(This,pOutputWindowPane)	\
    ( (This)->lpVtbl -> get_ActivePane(This,pOutputWindowPane) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __OutputWindow_INTERFACE_DEFINED__ */


#ifndef __OutputWindowPanes_INTERFACE_DEFINED__
#define __OutputWindowPanes_INTERFACE_DEFINED__

/* interface OutputWindowPanes */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_OutputWindowPanes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b02cf62a-9470-4308-a521-9675fba395ab")
    OutputWindowPanes : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt OutputWindow **pOutputWindow) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt OutputWindowPane **pOutputWindowPane) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt OutputWindowPane **pOutputWindowPane) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct OutputWindowPanesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OutputWindowPanes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OutputWindowPanes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OutputWindowPanes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OutputWindowPanes * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OutputWindowPanes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OutputWindowPanes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OutputWindowPanes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            OutputWindowPanes * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            OutputWindowPanes * This,
            /* [retval][out] */ __RPC__deref_out_opt OutputWindow **pOutputWindow);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            OutputWindowPanes * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            OutputWindowPanes * This,
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt OutputWindowPane **pOutputWindowPane);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            OutputWindowPanes * This,
            VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt OutputWindowPane **pOutputWindowPane);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            OutputWindowPanes * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        END_INTERFACE
    } OutputWindowPanesVtbl;

    interface OutputWindowPanes
    {
        CONST_VTBL struct OutputWindowPanesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OutputWindowPanes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OutputWindowPanes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OutputWindowPanes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OutputWindowPanes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OutputWindowPanes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OutputWindowPanes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OutputWindowPanes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define OutputWindowPanes_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define OutputWindowPanes_get_Parent(This,pOutputWindow)	\
    ( (This)->lpVtbl -> get_Parent(This,pOutputWindow) ) 

#define OutputWindowPanes_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define OutputWindowPanes_Add(This,Name,pOutputWindowPane)	\
    ( (This)->lpVtbl -> Add(This,Name,pOutputWindowPane) ) 

#define OutputWindowPanes_Item(This,Index,pOutputWindowPane)	\
    ( (This)->lpVtbl -> Item(This,Index,pOutputWindowPane) ) 

#define OutputWindowPanes__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __OutputWindowPanes_INTERFACE_DEFINED__ */


#ifndef __OutputWindowPane_INTERFACE_DEFINED__
#define __OutputWindowPane_INTERFACE_DEFINED__

/* interface OutputWindowPane */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_OutputWindowPane;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ffc9dfc4-61ca-4b0c-83c2-0703a24f5c16")
    OutputWindowPane : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt OutputWindowPanes **pOutputWindowPanes) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GUID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pGUID) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE OutputString( 
            /* [in] */ __RPC__in BSTR Text) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ForceItemsToTaskList( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Activate( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE OutputTaskItemString( 
            /* [in] */ __RPC__in BSTR Text,
            /* [in] */ vsTaskPriority Priority,
            /* [in] */ __RPC__in BSTR SubCategory,
            /* [in] */ vsTaskIcon Icon,
            /* [in] */ __RPC__in BSTR FileName,
            /* [in] */ long Line,
            /* [in] */ __RPC__in BSTR Description,
            /* [defaultvalue][in] */ VARIANT_BOOL Force = -1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextDocument( 
            /* [retval][out] */ __RPC__deref_out_opt TextDocument **pDocument) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct OutputWindowPaneVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OutputWindowPane * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OutputWindowPane * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OutputWindowPane * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OutputWindowPane * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OutputWindowPane * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OutputWindowPane * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OutputWindowPane * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            OutputWindowPane * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            OutputWindowPane * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            OutputWindowPane * This,
            /* [retval][out] */ __RPC__deref_out_opt OutputWindowPanes **pOutputWindowPanes);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GUID )( 
            OutputWindowPane * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pGUID);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OutputString )( 
            OutputWindowPane * This,
            /* [in] */ __RPC__in BSTR Text);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ForceItemsToTaskList )( 
            OutputWindowPane * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            OutputWindowPane * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            OutputWindowPane * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OutputTaskItemString )( 
            OutputWindowPane * This,
            /* [in] */ __RPC__in BSTR Text,
            /* [in] */ vsTaskPriority Priority,
            /* [in] */ __RPC__in BSTR SubCategory,
            /* [in] */ vsTaskIcon Icon,
            /* [in] */ __RPC__in BSTR FileName,
            /* [in] */ long Line,
            /* [in] */ __RPC__in BSTR Description,
            /* [defaultvalue][in] */ VARIANT_BOOL Force);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextDocument )( 
            OutputWindowPane * This,
            /* [retval][out] */ __RPC__deref_out_opt TextDocument **pDocument);
        
        END_INTERFACE
    } OutputWindowPaneVtbl;

    interface OutputWindowPane
    {
        CONST_VTBL struct OutputWindowPaneVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OutputWindowPane_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OutputWindowPane_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OutputWindowPane_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OutputWindowPane_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OutputWindowPane_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OutputWindowPane_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OutputWindowPane_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define OutputWindowPane_get_Name(This,pName)	\
    ( (This)->lpVtbl -> get_Name(This,pName) ) 

#define OutputWindowPane_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define OutputWindowPane_get_Collection(This,pOutputWindowPanes)	\
    ( (This)->lpVtbl -> get_Collection(This,pOutputWindowPanes) ) 

#define OutputWindowPane_get_GUID(This,pGUID)	\
    ( (This)->lpVtbl -> get_GUID(This,pGUID) ) 

#define OutputWindowPane_OutputString(This,Text)	\
    ( (This)->lpVtbl -> OutputString(This,Text) ) 

#define OutputWindowPane_ForceItemsToTaskList(This)	\
    ( (This)->lpVtbl -> ForceItemsToTaskList(This) ) 

#define OutputWindowPane_Activate(This)	\
    ( (This)->lpVtbl -> Activate(This) ) 

#define OutputWindowPane_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define OutputWindowPane_OutputTaskItemString(This,Text,Priority,SubCategory,Icon,FileName,Line,Description,Force)	\
    ( (This)->lpVtbl -> OutputTaskItemString(This,Text,Priority,SubCategory,Icon,FileName,Line,Description,Force) ) 

#define OutputWindowPane_get_TextDocument(This,pDocument)	\
    ( (This)->lpVtbl -> get_TextDocument(This,pDocument) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __OutputWindowPane_INTERFACE_DEFINED__ */


#ifndef __IExtensibleObjectSite_INTERFACE_DEFINED__
#define __IExtensibleObjectSite_INTERFACE_DEFINED__

/* interface IExtensibleObjectSite */
/* [object][restricted][hidden][version][uuid] */ 


EXTERN_C const IID IID_IExtensibleObjectSite;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("eb5be8a7-e593-4de6-a923-c2afecb96336")
    IExtensibleObjectSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE NotifyDelete( 
            /* [in] */ __RPC__in_opt IUnknown *punkObj) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExtensibleObjectSiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IExtensibleObjectSite * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IExtensibleObjectSite * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IExtensibleObjectSite * This);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyDelete )( 
            IExtensibleObjectSite * This,
            /* [in] */ __RPC__in_opt IUnknown *punkObj);
        
        END_INTERFACE
    } IExtensibleObjectSiteVtbl;

    interface IExtensibleObjectSite
    {
        CONST_VTBL struct IExtensibleObjectSiteVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExtensibleObjectSite_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IExtensibleObjectSite_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IExtensibleObjectSite_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IExtensibleObjectSite_NotifyDelete(This,punkObj)	\
    ( (This)->lpVtbl -> NotifyDelete(This,punkObj) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IExtensibleObjectSite_INTERFACE_DEFINED__ */


#ifndef __Document_INTERFACE_DEFINED__
#define __Document_INTERFACE_DEFINED__

/* interface Document */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Document;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("63eb5c39-ca8f-498e-9a66-6dd4a27ac95b")
    Document : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pKind) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt Documents **DocumentsObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveWindow( 
            /* [out][retval] */ __RPC__deref_out_opt Window **pWindow) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReadOnly( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pRetval) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pRetval) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Saved( 
            /* [in] */ VARIANT_BOOL bSaved) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Windows( 
            /* [out][retval] */ __RPC__deref_out_opt Windows **pWindows) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [out][retval] */ __RPC__deref_out_opt ProjectItem **pRetVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Activate( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [defaultvalue][in] */ vsSaveChanges Save = vsSaveChangesPrompt) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE NewWindow( 
            /* [retval][out] */ __RPC__deref_out_opt Window **pWindow) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Redo( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Undo( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [defaultvalue][in] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__out vsSaveStatus *pStatus) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **SelectionObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Object( 
            /* [defaultvalue][in] */ __RPC__in BSTR ModelKind,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **DataModelObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_IndentSize( 
            /* [retval][out] */ __RPC__out long *pSize) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Language( 
            /* [in] */ __RPC__in BSTR Language) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReadOnly( 
            /* [in] */ VARIANT_BOOL bReadOnly) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_TabSize( 
            /* [retval][out] */ __RPC__out long *pSize) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE ClearBookmarks( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE MarkText( 
            /* [in] */ __RPC__in BSTR Pattern,
            /* [defaultvalue][in] */ long Flags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE ReplaceText( 
            /* [in] */ __RPC__in BSTR FindText,
            /* [in] */ __RPC__in BSTR ReplaceText,
            /* [defaultvalue][in] */ long Flags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][hidden][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct DocumentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Document * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Document * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Document * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Document * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Document * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Document * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Document * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Document * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            Document * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pKind);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Document * This,
            /* [retval][out] */ __RPC__deref_out_opt Documents **DocumentsObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveWindow )( 
            Document * This,
            /* [out][retval] */ __RPC__deref_out_opt Window **pWindow);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            Document * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Document * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            Document * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReadOnly )( 
            Document * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pRetval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            Document * This,
            /* [out][retval] */ __RPC__out VARIANT_BOOL *pRetval);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Saved )( 
            Document * This,
            /* [in] */ VARIANT_BOOL bSaved);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Windows )( 
            Document * This,
            /* [out][retval] */ __RPC__deref_out_opt Windows **pWindows);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            Document * This,
            /* [out][retval] */ __RPC__deref_out_opt ProjectItem **pRetVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            Document * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            Document * This,
            /* [defaultvalue][in] */ vsSaveChanges Save);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NewWindow )( 
            Document * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **pWindow);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Redo )( 
            Document * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Undo )( 
            Document * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            Document * This,
            /* [defaultvalue][in] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__out vsSaveStatus *pStatus);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            Document * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **SelectionObject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Object )( 
            Document * This,
            /* [defaultvalue][in] */ __RPC__in BSTR ModelKind,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **DataModelObject);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            Document * This,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            Document * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            Document * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            Document * This);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IndentSize )( 
            Document * This,
            /* [retval][out] */ __RPC__out long *pSize);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            Document * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            Document * This,
            /* [in] */ __RPC__in BSTR Language);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReadOnly )( 
            Document * This,
            /* [in] */ VARIANT_BOOL bReadOnly);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TabSize )( 
            Document * This,
            /* [retval][out] */ __RPC__out long *pSize);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *ClearBookmarks )( 
            Document * This);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *MarkText )( 
            Document * This,
            /* [in] */ __RPC__in BSTR Pattern,
            /* [defaultvalue][in] */ long Flags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *ReplaceText )( 
            Document * This,
            /* [in] */ __RPC__in BSTR FindText,
            /* [in] */ __RPC__in BSTR ReplaceText,
            /* [defaultvalue][in] */ long Flags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Document * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pType);
        
        END_INTERFACE
    } DocumentVtbl;

    interface Document
    {
        CONST_VTBL struct DocumentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Document_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Document_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Document_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Document_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Document_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Document_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Document_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Document_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define Document_get_Kind(This,pKind)	\
    ( (This)->lpVtbl -> get_Kind(This,pKind) ) 

#define Document_get_Collection(This,DocumentsObject)	\
    ( (This)->lpVtbl -> get_Collection(This,DocumentsObject) ) 

#define Document_get_ActiveWindow(This,pWindow)	\
    ( (This)->lpVtbl -> get_ActiveWindow(This,pWindow) ) 

#define Document_get_FullName(This,pRetval)	\
    ( (This)->lpVtbl -> get_FullName(This,pRetval) ) 

#define Document_get_Name(This,pRetval)	\
    ( (This)->lpVtbl -> get_Name(This,pRetval) ) 

#define Document_get_Path(This,pRetval)	\
    ( (This)->lpVtbl -> get_Path(This,pRetval) ) 

#define Document_get_ReadOnly(This,pRetval)	\
    ( (This)->lpVtbl -> get_ReadOnly(This,pRetval) ) 

#define Document_get_Saved(This,pRetval)	\
    ( (This)->lpVtbl -> get_Saved(This,pRetval) ) 

#define Document_put_Saved(This,bSaved)	\
    ( (This)->lpVtbl -> put_Saved(This,bSaved) ) 

#define Document_get_Windows(This,pWindows)	\
    ( (This)->lpVtbl -> get_Windows(This,pWindows) ) 

#define Document_get_ProjectItem(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,pRetVal) ) 

#define Document_Activate(This)	\
    ( (This)->lpVtbl -> Activate(This) ) 

#define Document_Close(This,Save)	\
    ( (This)->lpVtbl -> Close(This,Save) ) 

#define Document_NewWindow(This,pWindow)	\
    ( (This)->lpVtbl -> NewWindow(This,pWindow) ) 

#define Document_Redo(This,pbRetVal)	\
    ( (This)->lpVtbl -> Redo(This,pbRetVal) ) 

#define Document_Undo(This,pbRetVal)	\
    ( (This)->lpVtbl -> Undo(This,pbRetVal) ) 

#define Document_Save(This,FileName,pStatus)	\
    ( (This)->lpVtbl -> Save(This,FileName,pStatus) ) 

#define Document_get_Selection(This,SelectionObject)	\
    ( (This)->lpVtbl -> get_Selection(This,SelectionObject) ) 

#define Document_Object(This,ModelKind,DataModelObject)	\
    ( (This)->lpVtbl -> Object(This,ModelKind,DataModelObject) ) 

#define Document_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define Document_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define Document_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define Document_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define Document_get_IndentSize(This,pSize)	\
    ( (This)->lpVtbl -> get_IndentSize(This,pSize) ) 

#define Document_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define Document_put_Language(This,Language)	\
    ( (This)->lpVtbl -> put_Language(This,Language) ) 

#define Document_put_ReadOnly(This,bReadOnly)	\
    ( (This)->lpVtbl -> put_ReadOnly(This,bReadOnly) ) 

#define Document_get_TabSize(This,pSize)	\
    ( (This)->lpVtbl -> get_TabSize(This,pSize) ) 

#define Document_ClearBookmarks(This)	\
    ( (This)->lpVtbl -> ClearBookmarks(This) ) 

#define Document_MarkText(This,Pattern,Flags,pbRetVal)	\
    ( (This)->lpVtbl -> MarkText(This,Pattern,Flags,pbRetVal) ) 

#define Document_ReplaceText(This,FindText,ReplaceText,Flags,pbRetVal)	\
    ( (This)->lpVtbl -> ReplaceText(This,FindText,ReplaceText,Flags,pbRetVal) ) 

#define Document_get_Type(This,pType)	\
    ( (This)->lpVtbl -> get_Type(This,pType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Document_INTERFACE_DEFINED__ */


#ifndef __Documents_INTERFACE_DEFINED__
#define __Documents_INTERFACE_DEFINED__

/* interface Documents */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Documents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9e2cf3ea-140f-413e-bd4b-7d46740cd2f4")
    Documents : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Document **DocumentObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *CountOfDocuments) = 0;
        
        virtual /* [hidden][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in BSTR Kind,
            /* [retval][out] */ __RPC__deref_out_opt Document **ppDocument) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CloseAll( 
            /* [defaultvalue][in] */ vsSaveChanges Save = vsSaveChangesPrompt) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAll( void) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE Open( 
            __RPC__in BSTR PathName,
            /* [defaultvalue] */ __RPC__in BSTR Kind,
            /* [defaultvalue] */ VARIANT_BOOL ReadOnly,
            /* [retval][out] */ __RPC__deref_out_opt Document **ppDocument) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct DocumentsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Documents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Documents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Documents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Documents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Documents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Documents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Documents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Documents * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Documents * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Documents * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Documents * This,
            /* [in] */ VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt Document **DocumentObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Documents * This,
            /* [retval][out] */ __RPC__out long *CountOfDocuments);
        
        /* [hidden][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            Documents * This,
            /* [in] */ __RPC__in BSTR Kind,
            /* [retval][out] */ __RPC__deref_out_opt Document **ppDocument);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CloseAll )( 
            Documents * This,
            /* [defaultvalue][in] */ vsSaveChanges Save);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAll )( 
            Documents * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            Documents * This,
            __RPC__in BSTR PathName,
            /* [defaultvalue] */ __RPC__in BSTR Kind,
            /* [defaultvalue] */ VARIANT_BOOL ReadOnly,
            /* [retval][out] */ __RPC__deref_out_opt Document **ppDocument);
        
        END_INTERFACE
    } DocumentsVtbl;

    interface Documents
    {
        CONST_VTBL struct DocumentsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Documents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Documents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Documents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Documents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Documents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Documents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Documents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Documents_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define Documents_get_Parent(This,DTEObject)	\
    ( (This)->lpVtbl -> get_Parent(This,DTEObject) ) 

#define Documents__NewEnum(This,Enumerator)	\
    ( (This)->lpVtbl -> _NewEnum(This,Enumerator) ) 

#define Documents_Item(This,index,DocumentObject)	\
    ( (This)->lpVtbl -> Item(This,index,DocumentObject) ) 

#define Documents_get_Count(This,CountOfDocuments)	\
    ( (This)->lpVtbl -> get_Count(This,CountOfDocuments) ) 

#define Documents_Add(This,Kind,ppDocument)	\
    ( (This)->lpVtbl -> Add(This,Kind,ppDocument) ) 

#define Documents_CloseAll(This,Save)	\
    ( (This)->lpVtbl -> CloseAll(This,Save) ) 

#define Documents_SaveAll(This)	\
    ( (This)->lpVtbl -> SaveAll(This) ) 

#define Documents_Open(This,PathName,Kind,ReadOnly,ppDocument)	\
    ( (This)->lpVtbl -> Open(This,PathName,Kind,ReadOnly,ppDocument) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Documents_INTERFACE_DEFINED__ */


#ifndef __WindowConfigurations_INTERFACE_DEFINED__
#define __WindowConfigurations_INTERFACE_DEFINED__

/* interface WindowConfigurations */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_WindowConfigurations;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e577442a-98e1-46c5-bd2e-d25807ec81ce")
    WindowConfigurations : public IDispatch
    {
    public:
        virtual /* [restricted][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppEnum) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt WindowConfiguration **pWindowConfiguration) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt WindowConfiguration **pWindowConfiguration) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveConfigurationName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct WindowConfigurationsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            WindowConfigurations * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            WindowConfigurations * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            WindowConfigurations * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            WindowConfigurations * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            WindowConfigurations * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            WindowConfigurations * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            WindowConfigurations * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [restricted][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            WindowConfigurations * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppEnum);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            WindowConfigurations * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt WindowConfiguration **pWindowConfiguration);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            WindowConfigurations * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            WindowConfigurations * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            WindowConfigurations * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            WindowConfigurations * This,
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt WindowConfiguration **pWindowConfiguration);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveConfigurationName )( 
            WindowConfigurations * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        END_INTERFACE
    } WindowConfigurationsVtbl;

    interface WindowConfigurations
    {
        CONST_VTBL struct WindowConfigurationsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define WindowConfigurations_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define WindowConfigurations_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define WindowConfigurations_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define WindowConfigurations_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define WindowConfigurations_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define WindowConfigurations_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define WindowConfigurations_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define WindowConfigurations__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> _NewEnum(This,ppEnum) ) 

#define WindowConfigurations_Item(This,Index,pWindowConfiguration)	\
    ( (This)->lpVtbl -> Item(This,Index,pWindowConfiguration) ) 

#define WindowConfigurations_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define WindowConfigurations_get_Parent(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent(This,pParent) ) 

#define WindowConfigurations_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define WindowConfigurations_Add(This,Name,pWindowConfiguration)	\
    ( (This)->lpVtbl -> Add(This,Name,pWindowConfiguration) ) 

#define WindowConfigurations_get_ActiveConfigurationName(This,pbstrName)	\
    ( (This)->lpVtbl -> get_ActiveConfigurationName(This,pbstrName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __WindowConfigurations_INTERFACE_DEFINED__ */


#ifndef __WindowConfiguration_INTERFACE_DEFINED__
#define __WindowConfiguration_INTERFACE_DEFINED__

/* interface WindowConfiguration */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_WindowConfiguration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("41d02413-8a67-4c28-a980-ad7539ed415d")
    WindowConfiguration : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt WindowConfigurations **pWindowConfigurations) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Apply( 
            /* [defaultvalue][in] */ VARIANT_BOOL FromCustomViews = -1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Update( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct WindowConfigurationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            WindowConfiguration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            WindowConfiguration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            WindowConfiguration * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            WindowConfiguration * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            WindowConfiguration * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            WindowConfiguration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            WindowConfiguration * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            WindowConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            WindowConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            WindowConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt WindowConfigurations **pWindowConfigurations);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Apply )( 
            WindowConfiguration * This,
            /* [defaultvalue][in] */ VARIANT_BOOL FromCustomViews);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            WindowConfiguration * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            WindowConfiguration * This);
        
        END_INTERFACE
    } WindowConfigurationVtbl;

    interface WindowConfiguration
    {
        CONST_VTBL struct WindowConfigurationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define WindowConfiguration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define WindowConfiguration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define WindowConfiguration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define WindowConfiguration_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define WindowConfiguration_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define WindowConfiguration_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define WindowConfiguration_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define WindowConfiguration_get_Name(This,pName)	\
    ( (This)->lpVtbl -> get_Name(This,pName) ) 

#define WindowConfiguration_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define WindowConfiguration_get_Collection(This,pWindowConfigurations)	\
    ( (This)->lpVtbl -> get_Collection(This,pWindowConfigurations) ) 

#define WindowConfiguration_Apply(This,FromCustomViews)	\
    ( (This)->lpVtbl -> Apply(This,FromCustomViews) ) 

#define WindowConfiguration_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define WindowConfiguration_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __WindowConfiguration_INTERFACE_DEFINED__ */


#ifndef __Command_INTERFACE_DEFINED__
#define __Command_INTERFACE_DEFINED__

/* interface Command */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Command;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5fe10fb0-91a1-4e55-baaa-eccae5cceb94")
    Command : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt Commands **lppcReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GUID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ __RPC__out long *lReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsAvailable( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pAvail) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddControl( 
            /* [in] */ __RPC__in_opt IDispatch *Owner,
            /* [defaultvalue][in] */ long Position,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **pCommandBarControl) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Bindings( 
            /* [retval][out] */ __RPC__out VARIANT *pVar) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Bindings( 
            VARIANT Bindings) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LocalizedName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Command * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Command * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Command * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Command * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Command * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Command * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Command * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Command * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Command * This,
            /* [retval][out] */ __RPC__deref_out_opt Commands **lppcReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Command * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GUID )( 
            Command * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            Command * This,
            /* [retval][out] */ __RPC__out long *lReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsAvailable )( 
            Command * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pAvail);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddControl )( 
            Command * This,
            /* [in] */ __RPC__in_opt IDispatch *Owner,
            /* [defaultvalue][in] */ long Position,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **pCommandBarControl);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Command * This);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Bindings )( 
            Command * This,
            /* [retval][out] */ __RPC__out VARIANT *pVar);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Bindings )( 
            Command * This,
            VARIANT Bindings);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LocalizedName )( 
            Command * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *lpbstr);
        
        END_INTERFACE
    } CommandVtbl;

    interface Command
    {
        CONST_VTBL struct CommandVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Command_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Command_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Command_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Command_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Command_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Command_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Command_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Command_get_Name(This,lpbstr)	\
    ( (This)->lpVtbl -> get_Name(This,lpbstr) ) 

#define Command_get_Collection(This,lppcReturn)	\
    ( (This)->lpVtbl -> get_Collection(This,lppcReturn) ) 

#define Command_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define Command_get_GUID(This,lpbstr)	\
    ( (This)->lpVtbl -> get_GUID(This,lpbstr) ) 

#define Command_get_ID(This,lReturn)	\
    ( (This)->lpVtbl -> get_ID(This,lReturn) ) 

#define Command_get_IsAvailable(This,pAvail)	\
    ( (This)->lpVtbl -> get_IsAvailable(This,pAvail) ) 

#define Command_AddControl(This,Owner,Position,pCommandBarControl)	\
    ( (This)->lpVtbl -> AddControl(This,Owner,Position,pCommandBarControl) ) 

#define Command_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define Command_get_Bindings(This,pVar)	\
    ( (This)->lpVtbl -> get_Bindings(This,pVar) ) 

#define Command_put_Bindings(This,Bindings)	\
    ( (This)->lpVtbl -> put_Bindings(This,Bindings) ) 

#define Command_get_LocalizedName(This,lpbstr)	\
    ( (This)->lpVtbl -> get_LocalizedName(This,lpbstr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Command_INTERFACE_DEFINED__ */


#ifndef __Globals_INTERFACE_DEFINED__
#define __Globals_INTERFACE_DEFINED__

/* interface Globals */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Globals;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e68a3e0e-b435-4dde-86b7-f5adefc19df2")
    Globals : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VariableValue( 
            __RPC__in BSTR VariableName,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_VariableValue( 
            __RPC__in BSTR VariableName,
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_VariablePersists( 
            __RPC__in BSTR VariableName,
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VariablePersists( 
            __RPC__in BSTR VariableName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VariableExists( 
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VariableNames( 
            /* [retval][out] */ __RPC__out VARIANT *Names) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct GlobalsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Globals * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Globals * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Globals * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Globals * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Globals * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Globals * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Globals * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Globals * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Globals * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VariableValue )( 
            Globals * This,
            __RPC__in BSTR VariableName,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VariableValue )( 
            Globals * This,
            __RPC__in BSTR VariableName,
            /* [in] */ VARIANT newVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VariablePersists )( 
            Globals * This,
            __RPC__in BSTR VariableName,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VariablePersists )( 
            Globals * This,
            __RPC__in BSTR VariableName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VariableExists )( 
            Globals * This,
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VariableNames )( 
            Globals * This,
            /* [retval][out] */ __RPC__out VARIANT *Names);
        
        END_INTERFACE
    } GlobalsVtbl;

    interface Globals
    {
        CONST_VTBL struct GlobalsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Globals_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Globals_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Globals_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Globals_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Globals_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Globals_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Globals_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Globals_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define Globals_get_Parent(This,pDTE)	\
    ( (This)->lpVtbl -> get_Parent(This,pDTE) ) 

#define Globals_get_VariableValue(This,VariableName,pVal)	\
    ( (This)->lpVtbl -> get_VariableValue(This,VariableName,pVal) ) 

#define Globals_put_VariableValue(This,VariableName,newVal)	\
    ( (This)->lpVtbl -> put_VariableValue(This,VariableName,newVal) ) 

#define Globals_put_VariablePersists(This,VariableName,pVal)	\
    ( (This)->lpVtbl -> put_VariablePersists(This,VariableName,pVal) ) 

#define Globals_get_VariablePersists(This,VariableName,pVal)	\
    ( (This)->lpVtbl -> get_VariablePersists(This,VariableName,pVal) ) 

#define Globals_get_VariableExists(This,Name,pVal)	\
    ( (This)->lpVtbl -> get_VariableExists(This,Name,pVal) ) 

#define Globals_get_VariableNames(This,Names)	\
    ( (This)->lpVtbl -> get_VariableNames(This,Names) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Globals_INTERFACE_DEFINED__ */


#ifndef __StatusBar_INTERFACE_DEFINED__
#define __StatusBar_INTERFACE_DEFINED__

/* interface StatusBar */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_StatusBar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c34301a1-3ef1-41d8-932a-fea4a8a8ce0c")
    StatusBar : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Animate( 
            VARIANT_BOOL On,
            VARIANT AnimationType) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Progress( 
            VARIANT_BOOL InProgress,
            /* [defaultvalue][in] */ __RPC__in BSTR Label = L"",
            /* [defaultvalue][in] */ long AmountCompleted = 0,
            /* [defaultvalue][in] */ long Total = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetXYWidthHeight( 
            long X,
            long Y,
            long Width,
            long Height) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetLineColumnCharacter( 
            long Line,
            long Column,
            long Character) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ __RPC__in BSTR Text) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pTextc) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Highlight( 
            VARIANT_BOOL Highlight) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowTextUpdates( 
            VARIANT_BOOL TextUpdates,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *WillShowUpdates) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct StatusBarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            StatusBar * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            StatusBar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            StatusBar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            StatusBar * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            StatusBar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            StatusBar * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            StatusBar * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            StatusBar * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            StatusBar * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            StatusBar * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Animate )( 
            StatusBar * This,
            VARIANT_BOOL On,
            VARIANT AnimationType);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Progress )( 
            StatusBar * This,
            VARIANT_BOOL InProgress,
            /* [defaultvalue][in] */ __RPC__in BSTR Label,
            /* [defaultvalue][in] */ long AmountCompleted,
            /* [defaultvalue][in] */ long Total);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetXYWidthHeight )( 
            StatusBar * This,
            long X,
            long Y,
            long Width,
            long Height);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetLineColumnCharacter )( 
            StatusBar * This,
            long Line,
            long Column,
            long Character);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            StatusBar * This,
            /* [in] */ __RPC__in BSTR Text);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            StatusBar * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pTextc);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            StatusBar * This,
            VARIANT_BOOL Highlight);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowTextUpdates )( 
            StatusBar * This,
            VARIANT_BOOL TextUpdates,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *WillShowUpdates);
        
        END_INTERFACE
    } StatusBarVtbl;

    interface StatusBar
    {
        CONST_VTBL struct StatusBarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define StatusBar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define StatusBar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define StatusBar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define StatusBar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define StatusBar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define StatusBar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define StatusBar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define StatusBar_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define StatusBar_get_Parent(This,pDTE)	\
    ( (This)->lpVtbl -> get_Parent(This,pDTE) ) 

#define StatusBar_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define StatusBar_Animate(This,On,AnimationType)	\
    ( (This)->lpVtbl -> Animate(This,On,AnimationType) ) 

#define StatusBar_Progress(This,InProgress,Label,AmountCompleted,Total)	\
    ( (This)->lpVtbl -> Progress(This,InProgress,Label,AmountCompleted,Total) ) 

#define StatusBar_SetXYWidthHeight(This,X,Y,Width,Height)	\
    ( (This)->lpVtbl -> SetXYWidthHeight(This,X,Y,Width,Height) ) 

#define StatusBar_SetLineColumnCharacter(This,Line,Column,Character)	\
    ( (This)->lpVtbl -> SetLineColumnCharacter(This,Line,Column,Character) ) 

#define StatusBar_put_Text(This,Text)	\
    ( (This)->lpVtbl -> put_Text(This,Text) ) 

#define StatusBar_get_Text(This,pTextc)	\
    ( (This)->lpVtbl -> get_Text(This,pTextc) ) 

#define StatusBar_Highlight(This,Highlight)	\
    ( (This)->lpVtbl -> Highlight(This,Highlight) ) 

#define StatusBar_ShowTextUpdates(This,TextUpdates,WillShowUpdates)	\
    ( (This)->lpVtbl -> ShowTextUpdates(This,TextUpdates,WillShowUpdates) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __StatusBar_INTERFACE_DEFINED__ */


#ifndef __Find_INTERFACE_DEFINED__
#define __Find_INTERFACE_DEFINED__

/* interface Find */
/* [object][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_Find;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("40d4b9b6-739b-4965-8d65-692aec692266")
    Find : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Action( 
            /* [retval][out] */ __RPC__out vsFindAction *pAction) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Action( 
            /* [in] */ vsFindAction Action) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FindWhat( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFindWhat) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FindWhat( 
            /* [in] */ __RPC__in BSTR FindWhat) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MatchCase( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pMatchCase) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MatchCase( 
            /* [in] */ VARIANT_BOOL MatchCase) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MatchWholeWord( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pMatchWholeWord) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MatchWholeWord( 
            /* [in] */ VARIANT_BOOL MatchWholeWord) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MatchInHiddenText( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pMatchInHiddenText) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MatchInHiddenText( 
            /* [in] */ VARIANT_BOOL MatchInHiddenText) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Backwards( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pBackwards) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Backwards( 
            /* [in] */ VARIANT_BOOL Backwards) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SearchSubfolders( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pSearchSubfolders) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SearchSubfolders( 
            /* [in] */ VARIANT_BOOL SearchSubfolders) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_KeepModifiedDocumentsOpen( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pKeepModifiedDocumentsOpen) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_KeepModifiedDocumentsOpen( 
            /* [in] */ VARIANT_BOOL KeepModifiedDocumentsOpen) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PatternSyntax( 
            /* [retval][out] */ __RPC__out vsFindPatternSyntax *pPatternSyntax) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PatternSyntax( 
            /* [in] */ vsFindPatternSyntax PatternSyntax) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReplaceWith( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pReplaceWith) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReplaceWith( 
            /* [in] */ __RPC__in BSTR ReplaceWith) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ __RPC__out vsFindTarget *pTarget) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Target( 
            /* [in] */ vsFindTarget Target) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SearchPath( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pSearchPath) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SearchPath( 
            /* [in] */ __RPC__in BSTR SearchPath) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FilesOfType( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFilesOfType) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FilesOfType( 
            /* [in] */ __RPC__in BSTR FilesOfType) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ResultsLocation( 
            /* [retval][out] */ __RPC__out vsFindResultsLocation *pResultsLocation) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ResultsLocation( 
            /* [in] */ vsFindResultsLocation ResultsLocation) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Execute( 
            /* [retval][out] */ __RPC__out vsFindResult *pResult) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE FindReplace( 
            /* [in] */ vsFindAction Action,
            /* [in] */ __RPC__in BSTR FindWhat,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [defaultvalue][in] */ __RPC__in BSTR ReplaceWith,
            /* [defaultvalue][in] */ vsFindTarget Target,
            /* [defaultvalue][in] */ __RPC__in BSTR SearchPath,
            /* [defaultvalue][in] */ __RPC__in BSTR FilesOfType,
            /* [defaultvalue][in] */ vsFindResultsLocation ResultsLocation,
            /* [retval][out] */ __RPC__out vsFindResult *pResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FindVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Find * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Find * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Find * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Find * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Find * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Find * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Find * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Find * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Find * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Action )( 
            Find * This,
            /* [retval][out] */ __RPC__out vsFindAction *pAction);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Action )( 
            Find * This,
            /* [in] */ vsFindAction Action);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FindWhat )( 
            Find * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFindWhat);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FindWhat )( 
            Find * This,
            /* [in] */ __RPC__in BSTR FindWhat);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MatchCase )( 
            Find * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pMatchCase);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MatchCase )( 
            Find * This,
            /* [in] */ VARIANT_BOOL MatchCase);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MatchWholeWord )( 
            Find * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pMatchWholeWord);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MatchWholeWord )( 
            Find * This,
            /* [in] */ VARIANT_BOOL MatchWholeWord);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MatchInHiddenText )( 
            Find * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pMatchInHiddenText);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MatchInHiddenText )( 
            Find * This,
            /* [in] */ VARIANT_BOOL MatchInHiddenText);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Backwards )( 
            Find * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pBackwards);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Backwards )( 
            Find * This,
            /* [in] */ VARIANT_BOOL Backwards);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SearchSubfolders )( 
            Find * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pSearchSubfolders);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SearchSubfolders )( 
            Find * This,
            /* [in] */ VARIANT_BOOL SearchSubfolders);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_KeepModifiedDocumentsOpen )( 
            Find * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pKeepModifiedDocumentsOpen);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_KeepModifiedDocumentsOpen )( 
            Find * This,
            /* [in] */ VARIANT_BOOL KeepModifiedDocumentsOpen);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PatternSyntax )( 
            Find * This,
            /* [retval][out] */ __RPC__out vsFindPatternSyntax *pPatternSyntax);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PatternSyntax )( 
            Find * This,
            /* [in] */ vsFindPatternSyntax PatternSyntax);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReplaceWith )( 
            Find * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pReplaceWith);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReplaceWith )( 
            Find * This,
            /* [in] */ __RPC__in BSTR ReplaceWith);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            Find * This,
            /* [retval][out] */ __RPC__out vsFindTarget *pTarget);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            Find * This,
            /* [in] */ vsFindTarget Target);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SearchPath )( 
            Find * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pSearchPath);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SearchPath )( 
            Find * This,
            /* [in] */ __RPC__in BSTR SearchPath);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FilesOfType )( 
            Find * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFilesOfType);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FilesOfType )( 
            Find * This,
            /* [in] */ __RPC__in BSTR FilesOfType);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ResultsLocation )( 
            Find * This,
            /* [retval][out] */ __RPC__out vsFindResultsLocation *pResultsLocation);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ResultsLocation )( 
            Find * This,
            /* [in] */ vsFindResultsLocation ResultsLocation);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            Find * This,
            /* [retval][out] */ __RPC__out vsFindResult *pResult);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FindReplace )( 
            Find * This,
            /* [in] */ vsFindAction Action,
            /* [in] */ __RPC__in BSTR FindWhat,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [defaultvalue][in] */ __RPC__in BSTR ReplaceWith,
            /* [defaultvalue][in] */ vsFindTarget Target,
            /* [defaultvalue][in] */ __RPC__in BSTR SearchPath,
            /* [defaultvalue][in] */ __RPC__in BSTR FilesOfType,
            /* [defaultvalue][in] */ vsFindResultsLocation ResultsLocation,
            /* [retval][out] */ __RPC__out vsFindResult *pResult);
        
        END_INTERFACE
    } FindVtbl;

    interface Find
    {
        CONST_VTBL struct FindVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Find_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Find_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Find_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Find_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Find_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Find_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Find_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Find_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define Find_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define Find_get_Action(This,pAction)	\
    ( (This)->lpVtbl -> get_Action(This,pAction) ) 

#define Find_put_Action(This,Action)	\
    ( (This)->lpVtbl -> put_Action(This,Action) ) 

#define Find_get_FindWhat(This,pFindWhat)	\
    ( (This)->lpVtbl -> get_FindWhat(This,pFindWhat) ) 

#define Find_put_FindWhat(This,FindWhat)	\
    ( (This)->lpVtbl -> put_FindWhat(This,FindWhat) ) 

#define Find_get_MatchCase(This,pMatchCase)	\
    ( (This)->lpVtbl -> get_MatchCase(This,pMatchCase) ) 

#define Find_put_MatchCase(This,MatchCase)	\
    ( (This)->lpVtbl -> put_MatchCase(This,MatchCase) ) 

#define Find_get_MatchWholeWord(This,pMatchWholeWord)	\
    ( (This)->lpVtbl -> get_MatchWholeWord(This,pMatchWholeWord) ) 

#define Find_put_MatchWholeWord(This,MatchWholeWord)	\
    ( (This)->lpVtbl -> put_MatchWholeWord(This,MatchWholeWord) ) 

#define Find_get_MatchInHiddenText(This,pMatchInHiddenText)	\
    ( (This)->lpVtbl -> get_MatchInHiddenText(This,pMatchInHiddenText) ) 

#define Find_put_MatchInHiddenText(This,MatchInHiddenText)	\
    ( (This)->lpVtbl -> put_MatchInHiddenText(This,MatchInHiddenText) ) 

#define Find_get_Backwards(This,pBackwards)	\
    ( (This)->lpVtbl -> get_Backwards(This,pBackwards) ) 

#define Find_put_Backwards(This,Backwards)	\
    ( (This)->lpVtbl -> put_Backwards(This,Backwards) ) 

#define Find_get_SearchSubfolders(This,pSearchSubfolders)	\
    ( (This)->lpVtbl -> get_SearchSubfolders(This,pSearchSubfolders) ) 

#define Find_put_SearchSubfolders(This,SearchSubfolders)	\
    ( (This)->lpVtbl -> put_SearchSubfolders(This,SearchSubfolders) ) 

#define Find_get_KeepModifiedDocumentsOpen(This,pKeepModifiedDocumentsOpen)	\
    ( (This)->lpVtbl -> get_KeepModifiedDocumentsOpen(This,pKeepModifiedDocumentsOpen) ) 

#define Find_put_KeepModifiedDocumentsOpen(This,KeepModifiedDocumentsOpen)	\
    ( (This)->lpVtbl -> put_KeepModifiedDocumentsOpen(This,KeepModifiedDocumentsOpen) ) 

#define Find_get_PatternSyntax(This,pPatternSyntax)	\
    ( (This)->lpVtbl -> get_PatternSyntax(This,pPatternSyntax) ) 

#define Find_put_PatternSyntax(This,PatternSyntax)	\
    ( (This)->lpVtbl -> put_PatternSyntax(This,PatternSyntax) ) 

#define Find_get_ReplaceWith(This,pReplaceWith)	\
    ( (This)->lpVtbl -> get_ReplaceWith(This,pReplaceWith) ) 

#define Find_put_ReplaceWith(This,ReplaceWith)	\
    ( (This)->lpVtbl -> put_ReplaceWith(This,ReplaceWith) ) 

#define Find_get_Target(This,pTarget)	\
    ( (This)->lpVtbl -> get_Target(This,pTarget) ) 

#define Find_put_Target(This,Target)	\
    ( (This)->lpVtbl -> put_Target(This,Target) ) 

#define Find_get_SearchPath(This,pSearchPath)	\
    ( (This)->lpVtbl -> get_SearchPath(This,pSearchPath) ) 

#define Find_put_SearchPath(This,SearchPath)	\
    ( (This)->lpVtbl -> put_SearchPath(This,SearchPath) ) 

#define Find_get_FilesOfType(This,pFilesOfType)	\
    ( (This)->lpVtbl -> get_FilesOfType(This,pFilesOfType) ) 

#define Find_put_FilesOfType(This,FilesOfType)	\
    ( (This)->lpVtbl -> put_FilesOfType(This,FilesOfType) ) 

#define Find_get_ResultsLocation(This,pResultsLocation)	\
    ( (This)->lpVtbl -> get_ResultsLocation(This,pResultsLocation) ) 

#define Find_put_ResultsLocation(This,ResultsLocation)	\
    ( (This)->lpVtbl -> put_ResultsLocation(This,ResultsLocation) ) 

#define Find_Execute(This,pResult)	\
    ( (This)->lpVtbl -> Execute(This,pResult) ) 

#define Find_FindReplace(This,Action,FindWhat,vsFindOptionsValue,ReplaceWith,Target,SearchPath,FilesOfType,ResultsLocation,pResult)	\
    ( (This)->lpVtbl -> FindReplace(This,Action,FindWhat,vsFindOptionsValue,ReplaceWith,Target,SearchPath,FilesOfType,ResultsLocation,pResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Find_INTERFACE_DEFINED__ */


#ifndef __ItemOperations_INTERFACE_DEFINED__
#define __ItemOperations_INTERFACE_DEFINED__

/* interface ItemOperations */
/* [object][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_ItemOperations;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d5dbe57b-c074-4e95-b015-abeeaa391693")
    ItemOperations : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE OpenFile( 
            /* [in] */ __RPC__in BSTR FileName,
            /* [defaultvalue][in] */ __RPC__in BSTR ViewKind,
            /* [retval][out] */ __RPC__deref_out_opt Window **Window) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE NewFile( 
            /* [defaultvalue][in] */ __RPC__in BSTR Item,
            /* [defaultvalue][in] */ __RPC__in BSTR Name,
            /* [defaultvalue][in] */ __RPC__in BSTR ViewKind,
            /* [retval][out] */ __RPC__deref_out_opt Window **Window) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsFileOpen( 
            /* [in] */ __RPC__in BSTR FileName,
            /* [defaultvalue][in] */ __RPC__in BSTR ViewKind,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfRetval) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddExistingItem( 
            /* [in] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **ProjectItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddNewItem( 
            /* [defaultvalue][in] */ __RPC__in BSTR Item,
            /* [defaultvalue][in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **ProjectItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Navigate( 
            /* [defaultvalue][in] */ __RPC__in BSTR URL,
            /* [defaultvalue][in] */ vsNavigateOptions Options,
            /* [retval][out] */ __RPC__deref_out_opt Window **Window) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PromptToSave( 
            /* [retval][out] */ __RPC__out vsPromptResult *Saved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ItemOperationsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ItemOperations * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ItemOperations * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ItemOperations * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ItemOperations * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ItemOperations * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ItemOperations * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ItemOperations * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ItemOperations * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ItemOperations * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OpenFile )( 
            ItemOperations * This,
            /* [in] */ __RPC__in BSTR FileName,
            /* [defaultvalue][in] */ __RPC__in BSTR ViewKind,
            /* [retval][out] */ __RPC__deref_out_opt Window **Window);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NewFile )( 
            ItemOperations * This,
            /* [defaultvalue][in] */ __RPC__in BSTR Item,
            /* [defaultvalue][in] */ __RPC__in BSTR Name,
            /* [defaultvalue][in] */ __RPC__in BSTR ViewKind,
            /* [retval][out] */ __RPC__deref_out_opt Window **Window);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsFileOpen )( 
            ItemOperations * This,
            /* [in] */ __RPC__in BSTR FileName,
            /* [defaultvalue][in] */ __RPC__in BSTR ViewKind,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfRetval);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddExistingItem )( 
            ItemOperations * This,
            /* [in] */ __RPC__in BSTR FileName,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **ProjectItem);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddNewItem )( 
            ItemOperations * This,
            /* [defaultvalue][in] */ __RPC__in BSTR Item,
            /* [defaultvalue][in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **ProjectItem);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Navigate )( 
            ItemOperations * This,
            /* [defaultvalue][in] */ __RPC__in BSTR URL,
            /* [defaultvalue][in] */ vsNavigateOptions Options,
            /* [retval][out] */ __RPC__deref_out_opt Window **Window);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PromptToSave )( 
            ItemOperations * This,
            /* [retval][out] */ __RPC__out vsPromptResult *Saved);
        
        END_INTERFACE
    } ItemOperationsVtbl;

    interface ItemOperations
    {
        CONST_VTBL struct ItemOperationsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ItemOperations_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ItemOperations_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ItemOperations_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ItemOperations_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ItemOperations_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ItemOperations_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ItemOperations_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ItemOperations_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define ItemOperations_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define ItemOperations_OpenFile(This,FileName,ViewKind,Window)	\
    ( (This)->lpVtbl -> OpenFile(This,FileName,ViewKind,Window) ) 

#define ItemOperations_NewFile(This,Item,Name,ViewKind,Window)	\
    ( (This)->lpVtbl -> NewFile(This,Item,Name,ViewKind,Window) ) 

#define ItemOperations_IsFileOpen(This,FileName,ViewKind,pfRetval)	\
    ( (This)->lpVtbl -> IsFileOpen(This,FileName,ViewKind,pfRetval) ) 

#define ItemOperations_AddExistingItem(This,FileName,ProjectItem)	\
    ( (This)->lpVtbl -> AddExistingItem(This,FileName,ProjectItem) ) 

#define ItemOperations_AddNewItem(This,Item,Name,ProjectItem)	\
    ( (This)->lpVtbl -> AddNewItem(This,Item,Name,ProjectItem) ) 

#define ItemOperations_Navigate(This,URL,Options,Window)	\
    ( (This)->lpVtbl -> Navigate(This,URL,Options,Window) ) 

#define ItemOperations_get_PromptToSave(This,Saved)	\
    ( (This)->lpVtbl -> get_PromptToSave(This,Saved) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ItemOperations_INTERFACE_DEFINED__ */


#ifndef __IVsProfferCommands_INTERFACE_DEFINED__
#define __IVsProfferCommands_INTERFACE_DEFINED__

/* interface IVsProfferCommands */
/* [object][restricted][hidden][version][uuid] */ 


EXTERN_C const IID IID_IVsProfferCommands;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8cc0cde1-c16a-4749-99af-6f7523c34a57")
    IVsProfferCommands : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddNamedCommand( 
            /* [in] */ __RPC__in const GUID *pguidPackage,
            /* [in] */ __RPC__in const GUID *pguidCmdGroup,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameCanonical,
            /* [out] */ __RPC__out DWORD *pdwCmdId,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameLocalized,
            /* [string][in] */ __RPC__in const LPCOLESTR pszBtnText,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdTooltip,
            /* [string][in] */ __RPC__in const LPCOLESTR pszSatelliteDLL,
            /* [in] */ DWORD dwBitmapResourceId,
            /* [in] */ DWORD dwBitmapImageIndex,
            /* [in] */ DWORD dwCmdFlagsDefault,
            /* [in] */ DWORD cUIContexts,
            /* [size_is][in] */ __RPC__in_ecount_full(cUIContexts) const GUID *rgguidUIContexts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveNamedCommand( 
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameCanonical) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RenameNamedCommand( 
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameCanonical,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameCanonicalNew,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameLocalizedNew) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddCommandBarControl( 
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameCanonical,
            /* [in] */ __RPC__in_opt IDispatch *pCmdBarParent,
            /* [in] */ DWORD dwIndex,
            /* [in] */ DWORD dwCmdType,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppCmdBarCtrl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveCommandBarControl( 
            /* [in] */ __RPC__in_opt IDispatch *pCmdBarCtrl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddCommandBar( 
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdBarName,
            /* [in] */ vsCommandBarType dwType,
            /* [in] */ __RPC__in_opt IDispatch *pCmdBarParent,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppCmdBar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveCommandBar( 
            /* [in] */ __RPC__in_opt IDispatch *pCmdBar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FindCommandBar( 
            /* [in] */ __RPC__in void *pToolbarSet,
            /* [in] */ __RPC__in const GUID *pguidCmdGroup,
            /* [in] */ DWORD dwMenuId,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppdispCmdBar) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVsProfferCommandsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IVsProfferCommands * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IVsProfferCommands * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IVsProfferCommands * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddNamedCommand )( 
            IVsProfferCommands * This,
            /* [in] */ __RPC__in const GUID *pguidPackage,
            /* [in] */ __RPC__in const GUID *pguidCmdGroup,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameCanonical,
            /* [out] */ __RPC__out DWORD *pdwCmdId,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameLocalized,
            /* [string][in] */ __RPC__in const LPCOLESTR pszBtnText,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdTooltip,
            /* [string][in] */ __RPC__in const LPCOLESTR pszSatelliteDLL,
            /* [in] */ DWORD dwBitmapResourceId,
            /* [in] */ DWORD dwBitmapImageIndex,
            /* [in] */ DWORD dwCmdFlagsDefault,
            /* [in] */ DWORD cUIContexts,
            /* [size_is][in] */ __RPC__in_ecount_full(cUIContexts) const GUID *rgguidUIContexts);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveNamedCommand )( 
            IVsProfferCommands * This,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameCanonical);
        
        HRESULT ( STDMETHODCALLTYPE *RenameNamedCommand )( 
            IVsProfferCommands * This,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameCanonical,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameCanonicalNew,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameLocalizedNew);
        
        HRESULT ( STDMETHODCALLTYPE *AddCommandBarControl )( 
            IVsProfferCommands * This,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdNameCanonical,
            /* [in] */ __RPC__in_opt IDispatch *pCmdBarParent,
            /* [in] */ DWORD dwIndex,
            /* [in] */ DWORD dwCmdType,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppCmdBarCtrl);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveCommandBarControl )( 
            IVsProfferCommands * This,
            /* [in] */ __RPC__in_opt IDispatch *pCmdBarCtrl);
        
        HRESULT ( STDMETHODCALLTYPE *AddCommandBar )( 
            IVsProfferCommands * This,
            /* [string][in] */ __RPC__in const LPCOLESTR pszCmdBarName,
            /* [in] */ vsCommandBarType dwType,
            /* [in] */ __RPC__in_opt IDispatch *pCmdBarParent,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppCmdBar);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveCommandBar )( 
            IVsProfferCommands * This,
            /* [in] */ __RPC__in_opt IDispatch *pCmdBar);
        
        HRESULT ( STDMETHODCALLTYPE *FindCommandBar )( 
            IVsProfferCommands * This,
            /* [in] */ __RPC__in void *pToolbarSet,
            /* [in] */ __RPC__in const GUID *pguidCmdGroup,
            /* [in] */ DWORD dwMenuId,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppdispCmdBar);
        
        END_INTERFACE
    } IVsProfferCommandsVtbl;

    interface IVsProfferCommands
    {
        CONST_VTBL struct IVsProfferCommandsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVsProfferCommands_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVsProfferCommands_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVsProfferCommands_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVsProfferCommands_AddNamedCommand(This,pguidPackage,pguidCmdGroup,pszCmdNameCanonical,pdwCmdId,pszCmdNameLocalized,pszBtnText,pszCmdTooltip,pszSatelliteDLL,dwBitmapResourceId,dwBitmapImageIndex,dwCmdFlagsDefault,cUIContexts,rgguidUIContexts)	\
    ( (This)->lpVtbl -> AddNamedCommand(This,pguidPackage,pguidCmdGroup,pszCmdNameCanonical,pdwCmdId,pszCmdNameLocalized,pszBtnText,pszCmdTooltip,pszSatelliteDLL,dwBitmapResourceId,dwBitmapImageIndex,dwCmdFlagsDefault,cUIContexts,rgguidUIContexts) ) 

#define IVsProfferCommands_RemoveNamedCommand(This,pszCmdNameCanonical)	\
    ( (This)->lpVtbl -> RemoveNamedCommand(This,pszCmdNameCanonical) ) 

#define IVsProfferCommands_RenameNamedCommand(This,pszCmdNameCanonical,pszCmdNameCanonicalNew,pszCmdNameLocalizedNew)	\
    ( (This)->lpVtbl -> RenameNamedCommand(This,pszCmdNameCanonical,pszCmdNameCanonicalNew,pszCmdNameLocalizedNew) ) 

#define IVsProfferCommands_AddCommandBarControl(This,pszCmdNameCanonical,pCmdBarParent,dwIndex,dwCmdType,ppCmdBarCtrl)	\
    ( (This)->lpVtbl -> AddCommandBarControl(This,pszCmdNameCanonical,pCmdBarParent,dwIndex,dwCmdType,ppCmdBarCtrl) ) 

#define IVsProfferCommands_RemoveCommandBarControl(This,pCmdBarCtrl)	\
    ( (This)->lpVtbl -> RemoveCommandBarControl(This,pCmdBarCtrl) ) 

#define IVsProfferCommands_AddCommandBar(This,pszCmdBarName,dwType,pCmdBarParent,dwIndex,ppCmdBar)	\
    ( (This)->lpVtbl -> AddCommandBar(This,pszCmdBarName,dwType,pCmdBarParent,dwIndex,ppCmdBar) ) 

#define IVsProfferCommands_RemoveCommandBar(This,pCmdBar)	\
    ( (This)->lpVtbl -> RemoveCommandBar(This,pCmdBar) ) 

#define IVsProfferCommands_FindCommandBar(This,pToolbarSet,pguidCmdGroup,dwMenuId,ppdispCmdBar)	\
    ( (This)->lpVtbl -> FindCommandBar(This,pToolbarSet,pguidCmdGroup,dwMenuId,ppdispCmdBar) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVsProfferCommands_INTERFACE_DEFINED__ */


#ifndef __ObjectExtenders_INTERFACE_DEFINED__
#define __ObjectExtenders_INTERFACE_DEFINED__

/* interface ObjectExtenders */
/* [object][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_ObjectExtenders;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8d0aa9cc-8465-42f3-ad6e-dfde28ccc75d")
    ObjectExtenders : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RegisterExtenderProvider( 
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IExtenderProvider *ExtenderProvider,
            /* [defaultvalue][in] */ __RPC__in BSTR LocalizedName,
            /* [retval][out] */ __RPC__out long *Cookie) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE UnregisterExtenderProvider( 
            /* [in] */ long Cookie) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExtender( 
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IUnknown *ExtendeeObject,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExtenderNames( 
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in_opt IUnknown *ExtendeeObject,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetContextualExtenderCATIDs( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderCATIDs) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE GetLocalizedExtenderName( 
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLocalizedName) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RegisterExtenderProviderUnk( 
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IExtenderProviderUnk *ExtenderProvider,
            /* [defaultvalue][in] */ __RPC__in BSTR LocalizedName,
            /* [retval][out] */ __RPC__out long *Cookie) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ObjectExtendersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ObjectExtenders * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ObjectExtenders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ObjectExtenders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ObjectExtenders * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ObjectExtenders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ObjectExtenders * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ObjectExtenders * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ObjectExtenders * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ObjectExtenders * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RegisterExtenderProvider )( 
            ObjectExtenders * This,
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IExtenderProvider *ExtenderProvider,
            /* [defaultvalue][in] */ __RPC__in BSTR LocalizedName,
            /* [retval][out] */ __RPC__out long *Cookie);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *UnregisterExtenderProvider )( 
            ObjectExtenders * This,
            /* [in] */ long Cookie);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtender )( 
            ObjectExtenders * This,
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IUnknown *ExtendeeObject,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtenderNames )( 
            ObjectExtenders * This,
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in_opt IUnknown *ExtendeeObject,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetContextualExtenderCATIDs )( 
            ObjectExtenders * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderCATIDs);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *GetLocalizedExtenderName )( 
            ObjectExtenders * This,
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLocalizedName);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RegisterExtenderProviderUnk )( 
            ObjectExtenders * This,
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IExtenderProviderUnk *ExtenderProvider,
            /* [defaultvalue][in] */ __RPC__in BSTR LocalizedName,
            /* [retval][out] */ __RPC__out long *Cookie);
        
        END_INTERFACE
    } ObjectExtendersVtbl;

    interface ObjectExtenders
    {
        CONST_VTBL struct ObjectExtendersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ObjectExtenders_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ObjectExtenders_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ObjectExtenders_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ObjectExtenders_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ObjectExtenders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ObjectExtenders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ObjectExtenders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ObjectExtenders_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define ObjectExtenders_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define ObjectExtenders_RegisterExtenderProvider(This,ExtenderCATID,ExtenderName,ExtenderProvider,LocalizedName,Cookie)	\
    ( (This)->lpVtbl -> RegisterExtenderProvider(This,ExtenderCATID,ExtenderName,ExtenderProvider,LocalizedName,Cookie) ) 

#define ObjectExtenders_UnregisterExtenderProvider(This,Cookie)	\
    ( (This)->lpVtbl -> UnregisterExtenderProvider(This,Cookie) ) 

#define ObjectExtenders_GetExtender(This,ExtenderCATID,ExtenderName,ExtendeeObject,Extender)	\
    ( (This)->lpVtbl -> GetExtender(This,ExtenderCATID,ExtenderName,ExtendeeObject,Extender) ) 

#define ObjectExtenders_GetExtenderNames(This,ExtenderCATID,ExtendeeObject,ExtenderNames)	\
    ( (This)->lpVtbl -> GetExtenderNames(This,ExtenderCATID,ExtendeeObject,ExtenderNames) ) 

#define ObjectExtenders_GetContextualExtenderCATIDs(This,ExtenderCATIDs)	\
    ( (This)->lpVtbl -> GetContextualExtenderCATIDs(This,ExtenderCATIDs) ) 

#define ObjectExtenders_GetLocalizedExtenderName(This,ExtenderCATID,ExtenderName,pLocalizedName)	\
    ( (This)->lpVtbl -> GetLocalizedExtenderName(This,ExtenderCATID,ExtenderName,pLocalizedName) ) 

#define ObjectExtenders_RegisterExtenderProviderUnk(This,ExtenderCATID,ExtenderName,ExtenderProvider,LocalizedName,Cookie)	\
    ( (This)->lpVtbl -> RegisterExtenderProviderUnk(This,ExtenderCATID,ExtenderName,ExtenderProvider,LocalizedName,Cookie) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ObjectExtenders_INTERFACE_DEFINED__ */


#ifndef __IExtenderSite_INTERFACE_DEFINED__
#define __IExtenderSite_INTERFACE_DEFINED__

/* interface IExtenderSite */
/* [object][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_IExtenderSite;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e57c510b-968b-4a3c-a467-ee4013157dc9")
    IExtenderSite : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE NotifyDelete( 
            /* [in] */ long Cookie) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetObject( 
            /* [defaultvalue][in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExtenderSiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IExtenderSite * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IExtenderSite * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IExtenderSite * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IExtenderSite * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IExtenderSite * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IExtenderSite * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IExtenderSite * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NotifyDelete )( 
            IExtenderSite * This,
            /* [in] */ long Cookie);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetObject )( 
            IExtenderSite * This,
            /* [defaultvalue][in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppObject);
        
        END_INTERFACE
    } IExtenderSiteVtbl;

    interface IExtenderSite
    {
        CONST_VTBL struct IExtenderSiteVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExtenderSite_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IExtenderSite_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IExtenderSite_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IExtenderSite_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IExtenderSite_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IExtenderSite_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IExtenderSite_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IExtenderSite_NotifyDelete(This,Cookie)	\
    ( (This)->lpVtbl -> NotifyDelete(This,Cookie) ) 

#define IExtenderSite_GetObject(This,Name,ppObject)	\
    ( (This)->lpVtbl -> GetObject(This,Name,ppObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IExtenderSite_INTERFACE_DEFINED__ */


#ifndef __IExtenderProvider_INTERFACE_DEFINED__
#define __IExtenderProvider_INTERFACE_DEFINED__

/* interface IExtenderProvider */
/* [object][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_IExtenderProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4db06329-23f4-443b-9abd-9cf611e8ae07")
    IExtenderProvider : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExtender( 
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IDispatch *ExtendeeObject,
            /* [in] */ __RPC__in_opt IExtenderSite *ExtenderSite,
            /* [in] */ long Cookie,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CanExtend( 
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IDispatch *ExtendeeObject,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *fRetval) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExtenderProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IExtenderProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IExtenderProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IExtenderProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IExtenderProvider * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IExtenderProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IExtenderProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IExtenderProvider * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtender )( 
            IExtenderProvider * This,
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IDispatch *ExtendeeObject,
            /* [in] */ __RPC__in_opt IExtenderSite *ExtenderSite,
            /* [in] */ long Cookie,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanExtend )( 
            IExtenderProvider * This,
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IDispatch *ExtendeeObject,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *fRetval);
        
        END_INTERFACE
    } IExtenderProviderVtbl;

    interface IExtenderProvider
    {
        CONST_VTBL struct IExtenderProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExtenderProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IExtenderProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IExtenderProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IExtenderProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IExtenderProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IExtenderProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IExtenderProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IExtenderProvider_GetExtender(This,ExtenderCATID,ExtenderName,ExtendeeObject,ExtenderSite,Cookie,Extender)	\
    ( (This)->lpVtbl -> GetExtender(This,ExtenderCATID,ExtenderName,ExtendeeObject,ExtenderSite,Cookie,Extender) ) 

#define IExtenderProvider_CanExtend(This,ExtenderCATID,ExtenderName,ExtendeeObject,fRetval)	\
    ( (This)->lpVtbl -> CanExtend(This,ExtenderCATID,ExtenderName,ExtendeeObject,fRetval) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IExtenderProvider_INTERFACE_DEFINED__ */


#ifndef __IExtenderProviderUnk_INTERFACE_DEFINED__
#define __IExtenderProviderUnk_INTERFACE_DEFINED__

/* interface IExtenderProviderUnk */
/* [object][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_IExtenderProviderUnk;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F69B64A3-9017-4e48-9784-E152B51AA722")
    IExtenderProviderUnk : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExtender( 
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IUnknown *ExtendeeObject,
            /* [in] */ __RPC__in_opt IExtenderSite *ExtenderSite,
            /* [in] */ long Cookie,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CanExtend( 
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IUnknown *ExtendeeObject,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *fRetval) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExtenderProviderUnkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IExtenderProviderUnk * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IExtenderProviderUnk * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IExtenderProviderUnk * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IExtenderProviderUnk * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IExtenderProviderUnk * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IExtenderProviderUnk * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IExtenderProviderUnk * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtender )( 
            IExtenderProviderUnk * This,
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IUnknown *ExtendeeObject,
            /* [in] */ __RPC__in_opt IExtenderSite *ExtenderSite,
            /* [in] */ long Cookie,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanExtend )( 
            IExtenderProviderUnk * This,
            /* [in] */ __RPC__in BSTR ExtenderCATID,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [in] */ __RPC__in_opt IUnknown *ExtendeeObject,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *fRetval);
        
        END_INTERFACE
    } IExtenderProviderUnkVtbl;

    interface IExtenderProviderUnk
    {
        CONST_VTBL struct IExtenderProviderUnkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExtenderProviderUnk_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IExtenderProviderUnk_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IExtenderProviderUnk_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IExtenderProviderUnk_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IExtenderProviderUnk_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IExtenderProviderUnk_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IExtenderProviderUnk_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IExtenderProviderUnk_GetExtender(This,ExtenderCATID,ExtenderName,ExtendeeObject,ExtenderSite,Cookie,Extender)	\
    ( (This)->lpVtbl -> GetExtender(This,ExtenderCATID,ExtenderName,ExtendeeObject,ExtenderSite,Cookie,Extender) ) 

#define IExtenderProviderUnk_CanExtend(This,ExtenderCATID,ExtenderName,ExtendeeObject,fRetval)	\
    ( (This)->lpVtbl -> CanExtend(This,ExtenderCATID,ExtenderName,ExtendeeObject,fRetval) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IExtenderProviderUnk_INTERFACE_DEFINED__ */


#ifndef __IFilterProperties_INTERFACE_DEFINED__
#define __IFilterProperties_INTERFACE_DEFINED__

/* interface IFilterProperties */
/* [object][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_IFilterProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("aade1f59-6ace-43d1-8fca-42af3a5c4f3c")
    IFilterProperties : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsPropertyHidden( 
            /* [in] */ __RPC__in BSTR PropertyName,
            /* [retval][out] */ __RPC__out vsFilterProperties *pRetval) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFilterPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IFilterProperties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IFilterProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IFilterProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IFilterProperties * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IFilterProperties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IFilterProperties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IFilterProperties * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsPropertyHidden )( 
            IFilterProperties * This,
            /* [in] */ __RPC__in BSTR PropertyName,
            /* [retval][out] */ __RPC__out vsFilterProperties *pRetval);
        
        END_INTERFACE
    } IFilterPropertiesVtbl;

    interface IFilterProperties
    {
        CONST_VTBL struct IFilterPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFilterProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IFilterProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IFilterProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IFilterProperties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IFilterProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IFilterProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IFilterProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IFilterProperties_IsPropertyHidden(This,PropertyName,pRetval)	\
    ( (This)->lpVtbl -> IsPropertyHidden(This,PropertyName,pRetval) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IFilterProperties_INTERFACE_DEFINED__ */


#ifndef ___dispDTEEvents_DISPINTERFACE_DEFINED__
#define ___dispDTEEvents_DISPINTERFACE_DEFINED__

/* dispinterface _dispDTEEvents */
/* [helpstringcontext][helpstring][helpcontext][uuid] */ 


EXTERN_C const IID DIID__dispDTEEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("b50c9708-c909-4b87-a03d-af6cc4bfb422")
    _dispDTEEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _dispDTEEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _dispDTEEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _dispDTEEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _dispDTEEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _dispDTEEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _dispDTEEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _dispDTEEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _dispDTEEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _dispDTEEventsVtbl;

    interface _dispDTEEvents
    {
        CONST_VTBL struct _dispDTEEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _dispDTEEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _dispDTEEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _dispDTEEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _dispDTEEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _dispDTEEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _dispDTEEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _dispDTEEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___dispDTEEvents_DISPINTERFACE_DEFINED__ */


#ifndef __BuildDependencies_INTERFACE_DEFINED__
#define __BuildDependencies_INTERFACE_DEFINED__

/* interface BuildDependencies */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_BuildDependencies;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ead260eb-1e5b-450a-b628-4cfada11b4a1")
    BuildDependencies : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt SolutionBuild **ppSolutionBuild) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt BuildDependency **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct BuildDependenciesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            BuildDependencies * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            BuildDependencies * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            BuildDependencies * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            BuildDependencies * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            BuildDependencies * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            BuildDependencies * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            BuildDependencies * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            BuildDependencies * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            BuildDependencies * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionBuild **ppSolutionBuild);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            BuildDependencies * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            BuildDependencies * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt BuildDependency **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            BuildDependencies * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        END_INTERFACE
    } BuildDependenciesVtbl;

    interface BuildDependencies
    {
        CONST_VTBL struct BuildDependenciesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define BuildDependencies_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define BuildDependencies_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define BuildDependencies_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define BuildDependencies_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define BuildDependencies_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define BuildDependencies_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define BuildDependencies_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define BuildDependencies_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define BuildDependencies_get_Parent(This,ppSolutionBuild)	\
    ( (This)->lpVtbl -> get_Parent(This,ppSolutionBuild) ) 

#define BuildDependencies__NewEnum(This,Enumerator)	\
    ( (This)->lpVtbl -> _NewEnum(This,Enumerator) ) 

#define BuildDependencies_Item(This,Index,ppOut)	\
    ( (This)->lpVtbl -> Item(This,Index,ppOut) ) 

#define BuildDependencies_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __BuildDependencies_INTERFACE_DEFINED__ */


#ifndef __BuildDependency_INTERFACE_DEFINED__
#define __BuildDependency_INTERFACE_DEFINED__

/* interface BuildDependency */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_BuildDependency;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9c5ceaac-062f-4434-a2ed-78ab4d6134fe")
    BuildDependency : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt BuildDependencies **ppBuildDependencies) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Project( 
            /* [retval][out] */ __RPC__deref_out_opt Project **ppProject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RequiredProjects( 
            /* [retval][out] */ __RPC__out VARIANT *pProjects) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddProject( 
            __RPC__in BSTR ProjectUniqueName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveProject( 
            __RPC__in BSTR ProjectUniqueName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveAllProjects( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct BuildDependencyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            BuildDependency * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            BuildDependency * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            BuildDependency * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            BuildDependency * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            BuildDependency * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            BuildDependency * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            BuildDependency * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            BuildDependency * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            BuildDependency * This,
            /* [retval][out] */ __RPC__deref_out_opt BuildDependencies **ppBuildDependencies);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            BuildDependency * This,
            /* [retval][out] */ __RPC__deref_out_opt Project **ppProject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RequiredProjects )( 
            BuildDependency * This,
            /* [retval][out] */ __RPC__out VARIANT *pProjects);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddProject )( 
            BuildDependency * This,
            __RPC__in BSTR ProjectUniqueName);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveProject )( 
            BuildDependency * This,
            __RPC__in BSTR ProjectUniqueName);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveAllProjects )( 
            BuildDependency * This);
        
        END_INTERFACE
    } BuildDependencyVtbl;

    interface BuildDependency
    {
        CONST_VTBL struct BuildDependencyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define BuildDependency_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define BuildDependency_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define BuildDependency_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define BuildDependency_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define BuildDependency_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define BuildDependency_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define BuildDependency_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define BuildDependency_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define BuildDependency_get_Collection(This,ppBuildDependencies)	\
    ( (This)->lpVtbl -> get_Collection(This,ppBuildDependencies) ) 

#define BuildDependency_get_Project(This,ppProject)	\
    ( (This)->lpVtbl -> get_Project(This,ppProject) ) 

#define BuildDependency_get_RequiredProjects(This,pProjects)	\
    ( (This)->lpVtbl -> get_RequiredProjects(This,pProjects) ) 

#define BuildDependency_AddProject(This,ProjectUniqueName)	\
    ( (This)->lpVtbl -> AddProject(This,ProjectUniqueName) ) 

#define BuildDependency_RemoveProject(This,ProjectUniqueName)	\
    ( (This)->lpVtbl -> RemoveProject(This,ProjectUniqueName) ) 

#define BuildDependency_RemoveAllProjects(This)	\
    ( (This)->lpVtbl -> RemoveAllProjects(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __BuildDependency_INTERFACE_DEFINED__ */


#ifndef __SolutionConfigurations_INTERFACE_DEFINED__
#define __SolutionConfigurations_INTERFACE_DEFINED__

/* interface SolutionConfigurations */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SolutionConfigurations;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("23e78ed7-c9e1-462d-8bc6-366003486ed9")
    SolutionConfigurations : public IDispatch
    {
    public:
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfiguration **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt SolutionBuild **ppBuild) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in BSTR NewName,
            /* [in] */ __RPC__in BSTR ExistingName,
            /* [in] */ VARIANT_BOOL Propagate,
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfiguration **ppSolutionConfiguration) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SolutionConfigurationsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SolutionConfigurations * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SolutionConfigurations * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SolutionConfigurations * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SolutionConfigurations * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SolutionConfigurations * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SolutionConfigurations * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SolutionConfigurations * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            SolutionConfigurations * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            SolutionConfigurations * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfiguration **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SolutionConfigurations * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SolutionConfigurations * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionBuild **ppBuild);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            SolutionConfigurations * This,
            /* [in] */ __RPC__in BSTR NewName,
            /* [in] */ __RPC__in BSTR ExistingName,
            /* [in] */ VARIANT_BOOL Propagate,
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfiguration **ppSolutionConfiguration);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SolutionConfigurations * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        END_INTERFACE
    } SolutionConfigurationsVtbl;

    interface SolutionConfigurations
    {
        CONST_VTBL struct SolutionConfigurationsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SolutionConfigurations_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SolutionConfigurations_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SolutionConfigurations_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SolutionConfigurations_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SolutionConfigurations_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SolutionConfigurations_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SolutionConfigurations_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SolutionConfigurations__NewEnum(This,Enumerator)	\
    ( (This)->lpVtbl -> _NewEnum(This,Enumerator) ) 

#define SolutionConfigurations_Item(This,Index,ppOut)	\
    ( (This)->lpVtbl -> Item(This,Index,ppOut) ) 

#define SolutionConfigurations_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define SolutionConfigurations_get_Parent(This,ppBuild)	\
    ( (This)->lpVtbl -> get_Parent(This,ppBuild) ) 

#define SolutionConfigurations_Add(This,NewName,ExistingName,Propagate,ppSolutionConfiguration)	\
    ( (This)->lpVtbl -> Add(This,NewName,ExistingName,Propagate,ppSolutionConfiguration) ) 

#define SolutionConfigurations_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SolutionConfigurations_INTERFACE_DEFINED__ */


#ifndef __SolutionConfiguration_INTERFACE_DEFINED__
#define __SolutionConfiguration_INTERFACE_DEFINED__

/* interface SolutionConfiguration */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SolutionConfiguration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("60aaad75-cb8d-4c62-9959-24d6a6a50de7")
    SolutionConfiguration : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfigurations **ppSolutionConfigurations) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SolutionContexts( 
            /* [retval][out] */ __RPC__deref_out_opt SolutionContexts **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Activate( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SolutionConfigurationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SolutionConfiguration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SolutionConfiguration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SolutionConfiguration * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SolutionConfiguration * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SolutionConfiguration * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SolutionConfiguration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SolutionConfiguration * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SolutionConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            SolutionConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfigurations **ppSolutionConfigurations);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            SolutionConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionContexts )( 
            SolutionConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionContexts **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            SolutionConfiguration * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            SolutionConfiguration * This);
        
        END_INTERFACE
    } SolutionConfigurationVtbl;

    interface SolutionConfiguration
    {
        CONST_VTBL struct SolutionConfigurationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SolutionConfiguration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SolutionConfiguration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SolutionConfiguration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SolutionConfiguration_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SolutionConfiguration_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SolutionConfiguration_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SolutionConfiguration_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SolutionConfiguration_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define SolutionConfiguration_get_Collection(This,ppSolutionConfigurations)	\
    ( (This)->lpVtbl -> get_Collection(This,ppSolutionConfigurations) ) 

#define SolutionConfiguration_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define SolutionConfiguration_get_SolutionContexts(This,ppOut)	\
    ( (This)->lpVtbl -> get_SolutionContexts(This,ppOut) ) 

#define SolutionConfiguration_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define SolutionConfiguration_Activate(This)	\
    ( (This)->lpVtbl -> Activate(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SolutionConfiguration_INTERFACE_DEFINED__ */


#ifndef __SolutionContext_INTERFACE_DEFINED__
#define __SolutionContext_INTERFACE_DEFINED__

/* interface SolutionContext */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SolutionContext;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fc6a1a82-9c8a-47bb-a046-6e965df5a99b")
    SolutionContext : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt SolutionContexts **ppSolutionContexts) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConfigurationName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pConfigurationName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ConfigurationName( 
            /* [in] */ __RPC__in BSTR Name) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlatformName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pPlatformName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShouldBuild( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pPlatformName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShouldBuild( 
            /* [in] */ VARIANT_BOOL IsBuilt) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShouldDeploy( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pPlatformName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShouldDeploy( 
            /* [in] */ VARIANT_BOOL IsDeployed) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SolutionContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SolutionContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SolutionContext * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SolutionContext * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SolutionContext * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SolutionContext * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SolutionContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SolutionContext * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SolutionContext * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            SolutionContext * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionContexts **ppSolutionContexts);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectName )( 
            SolutionContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigurationName )( 
            SolutionContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pConfigurationName);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ConfigurationName )( 
            SolutionContext * This,
            /* [in] */ __RPC__in BSTR Name);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlatformName )( 
            SolutionContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pPlatformName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShouldBuild )( 
            SolutionContext * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pPlatformName);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShouldBuild )( 
            SolutionContext * This,
            /* [in] */ VARIANT_BOOL IsBuilt);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShouldDeploy )( 
            SolutionContext * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pPlatformName);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShouldDeploy )( 
            SolutionContext * This,
            /* [in] */ VARIANT_BOOL IsDeployed);
        
        END_INTERFACE
    } SolutionContextVtbl;

    interface SolutionContext
    {
        CONST_VTBL struct SolutionContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SolutionContext_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SolutionContext_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SolutionContext_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SolutionContext_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SolutionContext_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SolutionContext_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SolutionContext_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SolutionContext_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define SolutionContext_get_Collection(This,ppSolutionContexts)	\
    ( (This)->lpVtbl -> get_Collection(This,ppSolutionContexts) ) 

#define SolutionContext_get_ProjectName(This,pName)	\
    ( (This)->lpVtbl -> get_ProjectName(This,pName) ) 

#define SolutionContext_get_ConfigurationName(This,pConfigurationName)	\
    ( (This)->lpVtbl -> get_ConfigurationName(This,pConfigurationName) ) 

#define SolutionContext_put_ConfigurationName(This,Name)	\
    ( (This)->lpVtbl -> put_ConfigurationName(This,Name) ) 

#define SolutionContext_get_PlatformName(This,pPlatformName)	\
    ( (This)->lpVtbl -> get_PlatformName(This,pPlatformName) ) 

#define SolutionContext_get_ShouldBuild(This,pPlatformName)	\
    ( (This)->lpVtbl -> get_ShouldBuild(This,pPlatformName) ) 

#define SolutionContext_put_ShouldBuild(This,IsBuilt)	\
    ( (This)->lpVtbl -> put_ShouldBuild(This,IsBuilt) ) 

#define SolutionContext_get_ShouldDeploy(This,pPlatformName)	\
    ( (This)->lpVtbl -> get_ShouldDeploy(This,pPlatformName) ) 

#define SolutionContext_put_ShouldDeploy(This,IsDeployed)	\
    ( (This)->lpVtbl -> put_ShouldDeploy(This,IsDeployed) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SolutionContext_INTERFACE_DEFINED__ */


#ifndef __SolutionBuild_INTERFACE_DEFINED__
#define __SolutionBuild_INTERFACE_DEFINED__

/* interface SolutionBuild */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SolutionBuild;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a3c1c40c-9218-4d4c-9daa-075f64f6922c")
    SolutionBuild : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Solution	**ppSolution) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveConfiguration( 
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfiguration **ppSolutionConfiguration) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BuildDependencies( 
            /* [retval][out] */ __RPC__deref_out_opt BuildDependencies **ppBuildDependencies) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BuildState( 
            /* [retval][out] */ __RPC__out vsBuildState *pvsBuildState) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastBuildInfo( 
            /* [retval][out] */ __RPC__out long *pBuiltSuccessfully) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartupProjects( 
            /* [in] */ VARIANT Projects) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartupProjects( 
            /* [retval][out] */ __RPC__out VARIANT *pProject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Build( 
            /* [defaultvalue][in] */ VARIANT_BOOL WaitForBuildToFinish = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Debug( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Deploy( 
            /* [defaultvalue][in] */ VARIANT_BOOL WaitForDeployToFinish = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Clean( 
            /* [defaultvalue][in] */ VARIANT_BOOL WaitForCleanToFinish = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Run( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SolutionConfigurations( 
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfigurations **ppSolutionConfigurations) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE BuildProject( 
            __RPC__in BSTR SolutionConfiguration,
            __RPC__in BSTR ProjectUniqueName,
            /* [defaultvalue] */ VARIANT_BOOL WaitForBuildToFinish = 0) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SolutionBuildVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SolutionBuild * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SolutionBuild * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SolutionBuild * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SolutionBuild * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SolutionBuild * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SolutionBuild * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SolutionBuild * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SolutionBuild * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SolutionBuild * This,
            /* [retval][out] */ __RPC__deref_out_opt Solution	**ppSolution);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveConfiguration )( 
            SolutionBuild * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfiguration **ppSolutionConfiguration);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BuildDependencies )( 
            SolutionBuild * This,
            /* [retval][out] */ __RPC__deref_out_opt BuildDependencies **ppBuildDependencies);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BuildState )( 
            SolutionBuild * This,
            /* [retval][out] */ __RPC__out vsBuildState *pvsBuildState);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastBuildInfo )( 
            SolutionBuild * This,
            /* [retval][out] */ __RPC__out long *pBuiltSuccessfully);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartupProjects )( 
            SolutionBuild * This,
            /* [in] */ VARIANT Projects);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartupProjects )( 
            SolutionBuild * This,
            /* [retval][out] */ __RPC__out VARIANT *pProject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Build )( 
            SolutionBuild * This,
            /* [defaultvalue][in] */ VARIANT_BOOL WaitForBuildToFinish);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Debug )( 
            SolutionBuild * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Deploy )( 
            SolutionBuild * This,
            /* [defaultvalue][in] */ VARIANT_BOOL WaitForDeployToFinish);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Clean )( 
            SolutionBuild * This,
            /* [defaultvalue][in] */ VARIANT_BOOL WaitForCleanToFinish);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            SolutionBuild * This);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionConfigurations )( 
            SolutionBuild * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfigurations **ppSolutionConfigurations);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *BuildProject )( 
            SolutionBuild * This,
            __RPC__in BSTR SolutionConfiguration,
            __RPC__in BSTR ProjectUniqueName,
            /* [defaultvalue] */ VARIANT_BOOL WaitForBuildToFinish);
        
        END_INTERFACE
    } SolutionBuildVtbl;

    interface SolutionBuild
    {
        CONST_VTBL struct SolutionBuildVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SolutionBuild_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SolutionBuild_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SolutionBuild_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SolutionBuild_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SolutionBuild_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SolutionBuild_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SolutionBuild_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SolutionBuild_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define SolutionBuild_get_Parent(This,ppSolution)	\
    ( (This)->lpVtbl -> get_Parent(This,ppSolution) ) 

#define SolutionBuild_get_ActiveConfiguration(This,ppSolutionConfiguration)	\
    ( (This)->lpVtbl -> get_ActiveConfiguration(This,ppSolutionConfiguration) ) 

#define SolutionBuild_get_BuildDependencies(This,ppBuildDependencies)	\
    ( (This)->lpVtbl -> get_BuildDependencies(This,ppBuildDependencies) ) 

#define SolutionBuild_get_BuildState(This,pvsBuildState)	\
    ( (This)->lpVtbl -> get_BuildState(This,pvsBuildState) ) 

#define SolutionBuild_get_LastBuildInfo(This,pBuiltSuccessfully)	\
    ( (This)->lpVtbl -> get_LastBuildInfo(This,pBuiltSuccessfully) ) 

#define SolutionBuild_put_StartupProjects(This,Projects)	\
    ( (This)->lpVtbl -> put_StartupProjects(This,Projects) ) 

#define SolutionBuild_get_StartupProjects(This,pProject)	\
    ( (This)->lpVtbl -> get_StartupProjects(This,pProject) ) 

#define SolutionBuild_Build(This,WaitForBuildToFinish)	\
    ( (This)->lpVtbl -> Build(This,WaitForBuildToFinish) ) 

#define SolutionBuild_Debug(This)	\
    ( (This)->lpVtbl -> Debug(This) ) 

#define SolutionBuild_Deploy(This,WaitForDeployToFinish)	\
    ( (This)->lpVtbl -> Deploy(This,WaitForDeployToFinish) ) 

#define SolutionBuild_Clean(This,WaitForCleanToFinish)	\
    ( (This)->lpVtbl -> Clean(This,WaitForCleanToFinish) ) 

#define SolutionBuild_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define SolutionBuild_get_SolutionConfigurations(This,ppSolutionConfigurations)	\
    ( (This)->lpVtbl -> get_SolutionConfigurations(This,ppSolutionConfigurations) ) 

#define SolutionBuild_BuildProject(This,SolutionConfiguration,ProjectUniqueName,WaitForBuildToFinish)	\
    ( (This)->lpVtbl -> BuildProject(This,SolutionConfiguration,ProjectUniqueName,WaitForBuildToFinish) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SolutionBuild_INTERFACE_DEFINED__ */


#ifndef __UIHierarchyItem_INTERFACE_DEFINED__
#define __UIHierarchyItem_INTERFACE_DEFINED__

/* interface UIHierarchyItem */
/* [object][helpstringcontext][helpstring][helpcontext][dual][uuid] */ 


EXTERN_C const IID IID_UIHierarchyItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fbd0d024-09cd-4d9f-9e2b-cacd628426a5")
    UIHierarchyItem : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt UIHierarchyItems **ppUIHierarchyItems) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UIHierarchyItems( 
            /* [retval][out] */ __RPC__deref_out_opt UIHierarchyItems **ppUIHierarchyItems) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Object( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppDispatch) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Select( 
            /* [in] */ vsUISelectionType How) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsSelected( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfSelected) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct UIHierarchyItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            UIHierarchyItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            UIHierarchyItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            UIHierarchyItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            UIHierarchyItem * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            UIHierarchyItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            UIHierarchyItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            UIHierarchyItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            UIHierarchyItem * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            UIHierarchyItem * This,
            /* [retval][out] */ __RPC__deref_out_opt UIHierarchyItems **ppUIHierarchyItems);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            UIHierarchyItem * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UIHierarchyItems )( 
            UIHierarchyItem * This,
            /* [retval][out] */ __RPC__deref_out_opt UIHierarchyItems **ppUIHierarchyItems);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Object )( 
            UIHierarchyItem * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppDispatch);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Select )( 
            UIHierarchyItem * This,
            /* [in] */ vsUISelectionType How);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsSelected )( 
            UIHierarchyItem * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfSelected);
        
        END_INTERFACE
    } UIHierarchyItemVtbl;

    interface UIHierarchyItem
    {
        CONST_VTBL struct UIHierarchyItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define UIHierarchyItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define UIHierarchyItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define UIHierarchyItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define UIHierarchyItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define UIHierarchyItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define UIHierarchyItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define UIHierarchyItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define UIHierarchyItem_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define UIHierarchyItem_get_Collection(This,ppUIHierarchyItems)	\
    ( (This)->lpVtbl -> get_Collection(This,ppUIHierarchyItems) ) 

#define UIHierarchyItem_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define UIHierarchyItem_get_UIHierarchyItems(This,ppUIHierarchyItems)	\
    ( (This)->lpVtbl -> get_UIHierarchyItems(This,ppUIHierarchyItems) ) 

#define UIHierarchyItem_get_Object(This,ppDispatch)	\
    ( (This)->lpVtbl -> get_Object(This,ppDispatch) ) 

#define UIHierarchyItem_Select(This,How)	\
    ( (This)->lpVtbl -> Select(This,How) ) 

#define UIHierarchyItem_get_IsSelected(This,pfSelected)	\
    ( (This)->lpVtbl -> get_IsSelected(This,pfSelected) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __UIHierarchyItem_INTERFACE_DEFINED__ */


#ifndef __UIHierarchyItems_INTERFACE_DEFINED__
#define __UIHierarchyItems_INTERFACE_DEFINED__

/* interface UIHierarchyItems */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_UIHierarchyItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("db8406b0-a916-449c-a277-bb04028f4394")
    UIHierarchyItems : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppDispatch) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt UIHierarchyItem **ppUIHierarchyItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Expanded( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfExpanded) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Expanded( 
            /* [in] */ VARIANT_BOOL Expanded) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppUnknown) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct UIHierarchyItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            UIHierarchyItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            UIHierarchyItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            UIHierarchyItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            UIHierarchyItems * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            UIHierarchyItems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            UIHierarchyItems * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            UIHierarchyItems * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            UIHierarchyItems * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            UIHierarchyItems * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppDispatch);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            UIHierarchyItems * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            UIHierarchyItems * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt UIHierarchyItem **ppUIHierarchyItem);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Expanded )( 
            UIHierarchyItems * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfExpanded);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Expanded )( 
            UIHierarchyItems * This,
            /* [in] */ VARIANT_BOOL Expanded);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            UIHierarchyItems * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppUnknown);
        
        END_INTERFACE
    } UIHierarchyItemsVtbl;

    interface UIHierarchyItems
    {
        CONST_VTBL struct UIHierarchyItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define UIHierarchyItems_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define UIHierarchyItems_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define UIHierarchyItems_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define UIHierarchyItems_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define UIHierarchyItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define UIHierarchyItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define UIHierarchyItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define UIHierarchyItems_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define UIHierarchyItems_get_Parent(This,ppDispatch)	\
    ( (This)->lpVtbl -> get_Parent(This,ppDispatch) ) 

#define UIHierarchyItems_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define UIHierarchyItems_Item(This,Index,ppUIHierarchyItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppUIHierarchyItem) ) 

#define UIHierarchyItems_get_Expanded(This,pfExpanded)	\
    ( (This)->lpVtbl -> get_Expanded(This,pfExpanded) ) 

#define UIHierarchyItems_put_Expanded(This,Expanded)	\
    ( (This)->lpVtbl -> put_Expanded(This,Expanded) ) 

#define UIHierarchyItems__NewEnum(This,ppUnknown)	\
    ( (This)->lpVtbl -> _NewEnum(This,ppUnknown) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __UIHierarchyItems_INTERFACE_DEFINED__ */


#ifndef __UIHierarchy_INTERFACE_DEFINED__
#define __UIHierarchy_INTERFACE_DEFINED__

/* interface UIHierarchy */
/* [uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_UIHierarchy;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("72a2a2ef-c209-408c-a377-76871774adb7")
    UIHierarchy : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Window **ppwin) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UIHierarchyItems( 
            /* [retval][out] */ __RPC__deref_out_opt UIHierarchyItems **ppUIHierarchyItems) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectedItems( 
            /* [retval][out] */ __RPC__out VARIANT *pvarSel) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetItem( 
            /* [in] */ __RPC__in BSTR Names,
            /* [retval][out] */ __RPC__deref_out_opt UIHierarchyItem **ppUIHierarchyItem) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectUp( 
            /* [in] */ vsUISelectionType How,
            /* [in] */ long Count) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectDown( 
            /* [in] */ vsUISelectionType How,
            /* [in] */ long Count) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DoDefaultAction( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct UIHierarchyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            UIHierarchy * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            UIHierarchy * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            UIHierarchy * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            UIHierarchy * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            UIHierarchy * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            UIHierarchy * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            UIHierarchy * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            UIHierarchy * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            UIHierarchy * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **ppwin);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UIHierarchyItems )( 
            UIHierarchy * This,
            /* [retval][out] */ __RPC__deref_out_opt UIHierarchyItems **ppUIHierarchyItems);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedItems )( 
            UIHierarchy * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarSel);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            UIHierarchy * This,
            /* [in] */ __RPC__in BSTR Names,
            /* [retval][out] */ __RPC__deref_out_opt UIHierarchyItem **ppUIHierarchyItem);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectUp )( 
            UIHierarchy * This,
            /* [in] */ vsUISelectionType How,
            /* [in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectDown )( 
            UIHierarchy * This,
            /* [in] */ vsUISelectionType How,
            /* [in] */ long Count);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DoDefaultAction )( 
            UIHierarchy * This);
        
        END_INTERFACE
    } UIHierarchyVtbl;

    interface UIHierarchy
    {
        CONST_VTBL struct UIHierarchyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define UIHierarchy_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define UIHierarchy_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define UIHierarchy_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define UIHierarchy_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define UIHierarchy_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define UIHierarchy_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define UIHierarchy_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define UIHierarchy_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define UIHierarchy_get_Parent(This,ppwin)	\
    ( (This)->lpVtbl -> get_Parent(This,ppwin) ) 

#define UIHierarchy_get_UIHierarchyItems(This,ppUIHierarchyItems)	\
    ( (This)->lpVtbl -> get_UIHierarchyItems(This,ppUIHierarchyItems) ) 

#define UIHierarchy_get_SelectedItems(This,pvarSel)	\
    ( (This)->lpVtbl -> get_SelectedItems(This,pvarSel) ) 

#define UIHierarchy_GetItem(This,Names,ppUIHierarchyItem)	\
    ( (This)->lpVtbl -> GetItem(This,Names,ppUIHierarchyItem) ) 

#define UIHierarchy_SelectUp(This,How,Count)	\
    ( (This)->lpVtbl -> SelectUp(This,How,Count) ) 

#define UIHierarchy_SelectDown(This,How,Count)	\
    ( (This)->lpVtbl -> SelectDown(This,How,Count) ) 

#define UIHierarchy_DoDefaultAction(This)	\
    ( (This)->lpVtbl -> DoDefaultAction(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __UIHierarchy_INTERFACE_DEFINED__ */


#ifndef __UndoContext_INTERFACE_DEFINED__
#define __UndoContext_INTERFACE_DEFINED__

/* interface UndoContext */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_UndoContext;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d8dec44d-caf2-4b39-a539-b91ae921ba92")
    UndoContext : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [in] */ __RPC__in BSTR Name,
            /* [defaultvalue][in] */ VARIANT_BOOL Strict = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetAborted( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsStrict( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsStrict) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsAborted( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsAborted) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsOpen( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsOpen) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct UndoContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            UndoContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            UndoContext * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            UndoContext * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            UndoContext * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            UndoContext * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            UndoContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            UndoContext * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            UndoContext * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            UndoContext * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            UndoContext * This,
            /* [in] */ __RPC__in BSTR Name,
            /* [defaultvalue][in] */ VARIANT_BOOL Strict);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            UndoContext * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetAborted )( 
            UndoContext * This);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsStrict )( 
            UndoContext * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsStrict);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsAborted )( 
            UndoContext * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsAborted);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpen )( 
            UndoContext * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsOpen);
        
        END_INTERFACE
    } UndoContextVtbl;

    interface UndoContext
    {
        CONST_VTBL struct UndoContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define UndoContext_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define UndoContext_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define UndoContext_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define UndoContext_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define UndoContext_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define UndoContext_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define UndoContext_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define UndoContext_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define UndoContext_get_Parent(This,DTEObject)	\
    ( (This)->lpVtbl -> get_Parent(This,DTEObject) ) 

#define UndoContext_Open(This,Name,Strict)	\
    ( (This)->lpVtbl -> Open(This,Name,Strict) ) 

#define UndoContext_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#define UndoContext_SetAborted(This)	\
    ( (This)->lpVtbl -> SetAborted(This) ) 

#define UndoContext_get_IsStrict(This,pIsStrict)	\
    ( (This)->lpVtbl -> get_IsStrict(This,pIsStrict) ) 

#define UndoContext_get_IsAborted(This,pIsAborted)	\
    ( (This)->lpVtbl -> get_IsAborted(This,pIsAborted) ) 

#define UndoContext_get_IsOpen(This,pIsOpen)	\
    ( (This)->lpVtbl -> get_IsOpen(This,pIsOpen) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __UndoContext_INTERFACE_DEFINED__ */


#ifndef __Configuration_INTERFACE_DEFINED__
#define __Configuration_INTERFACE_DEFINED__

/* interface Configuration */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Configuration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("90813589-fe21-4aa4-a2e5-053fd274e980")
    Configuration : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt ConfigurationManager **ppConfigurationManager) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConfigurationName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlatformName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__out vsConfigurationType *pType) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Owner( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppOwner) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Properties( 
            /* [retval][out] */ __RPC__deref_out_opt Properties **ppProperties) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsBuildable( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pBuildable) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsRunable( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pRunable) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsDeployable( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pDeployable) = 0;
        
        virtual /* [propget][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE get_Object( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppDisp) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutputGroups( 
            /* [retval][out] */ __RPC__deref_out_opt OutputGroups **ppOutputGroups) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ConfigurationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Configuration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Configuration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Configuration * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Configuration * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Configuration * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Configuration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Configuration * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Configuration * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            Configuration * This,
            /* [retval][out] */ __RPC__deref_out_opt ConfigurationManager **ppConfigurationManager);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigurationName )( 
            Configuration * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlatformName )( 
            Configuration * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Configuration * This,
            /* [retval][out] */ __RPC__out vsConfigurationType *pType);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Owner )( 
            Configuration * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppOwner);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            Configuration * This,
            /* [retval][out] */ __RPC__deref_out_opt Properties **ppProperties);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsBuildable )( 
            Configuration * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pBuildable);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsRunable )( 
            Configuration * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pRunable);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsDeployable )( 
            Configuration * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pDeployable);
        
        /* [propget][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *get_Object )( 
            Configuration * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppDisp);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            Configuration * This,
            /* [in] */ __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            Configuration * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            Configuration * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutputGroups )( 
            Configuration * This,
            /* [retval][out] */ __RPC__deref_out_opt OutputGroups **ppOutputGroups);
        
        END_INTERFACE
    } ConfigurationVtbl;

    interface Configuration
    {
        CONST_VTBL struct ConfigurationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Configuration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Configuration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Configuration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Configuration_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Configuration_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Configuration_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Configuration_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Configuration_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define Configuration_get_Collection(This,ppConfigurationManager)	\
    ( (This)->lpVtbl -> get_Collection(This,ppConfigurationManager) ) 

#define Configuration_get_ConfigurationName(This,pName)	\
    ( (This)->lpVtbl -> get_ConfigurationName(This,pName) ) 

#define Configuration_get_PlatformName(This,pName)	\
    ( (This)->lpVtbl -> get_PlatformName(This,pName) ) 

#define Configuration_get_Type(This,pType)	\
    ( (This)->lpVtbl -> get_Type(This,pType) ) 

#define Configuration_get_Owner(This,ppOwner)	\
    ( (This)->lpVtbl -> get_Owner(This,ppOwner) ) 

#define Configuration_get_Properties(This,ppProperties)	\
    ( (This)->lpVtbl -> get_Properties(This,ppProperties) ) 

#define Configuration_get_IsBuildable(This,pBuildable)	\
    ( (This)->lpVtbl -> get_IsBuildable(This,pBuildable) ) 

#define Configuration_get_IsRunable(This,pRunable)	\
    ( (This)->lpVtbl -> get_IsRunable(This,pRunable) ) 

#define Configuration_get_IsDeployable(This,pDeployable)	\
    ( (This)->lpVtbl -> get_IsDeployable(This,pDeployable) ) 

#define Configuration_get_Object(This,ppDisp)	\
    ( (This)->lpVtbl -> get_Object(This,ppDisp) ) 

#define Configuration_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define Configuration_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define Configuration_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define Configuration_get_OutputGroups(This,ppOutputGroups)	\
    ( (This)->lpVtbl -> get_OutputGroups(This,ppOutputGroups) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Configuration_INTERFACE_DEFINED__ */


#ifndef __SolutionContexts_INTERFACE_DEFINED__
#define __SolutionContexts_INTERFACE_DEFINED__

/* interface SolutionContexts */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SolutionContexts;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0685b546-fb84-4917-ab98-98d40f892d61")
    SolutionContexts : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfiguration **ppSolutionConfiguration) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt SolutionContext **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SolutionContextsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SolutionContexts * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SolutionContexts * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SolutionContexts * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SolutionContexts * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SolutionContexts * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SolutionContexts * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SolutionContexts * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SolutionContexts * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SolutionContexts * This,
            /* [retval][out] */ __RPC__deref_out_opt SolutionConfiguration **ppSolutionConfiguration);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            SolutionContexts * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            SolutionContexts * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt SolutionContext **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SolutionContexts * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        END_INTERFACE
    } SolutionContextsVtbl;

    interface SolutionContexts
    {
        CONST_VTBL struct SolutionContextsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SolutionContexts_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SolutionContexts_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SolutionContexts_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SolutionContexts_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SolutionContexts_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SolutionContexts_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SolutionContexts_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SolutionContexts_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define SolutionContexts_get_Parent(This,ppSolutionConfiguration)	\
    ( (This)->lpVtbl -> get_Parent(This,ppSolutionConfiguration) ) 

#define SolutionContexts__NewEnum(This,Enumerator)	\
    ( (This)->lpVtbl -> _NewEnum(This,Enumerator) ) 

#define SolutionContexts_Item(This,Index,ppOut)	\
    ( (This)->lpVtbl -> Item(This,Index,ppOut) ) 

#define SolutionContexts_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SolutionContexts_INTERFACE_DEFINED__ */


#ifndef __Configurations_INTERFACE_DEFINED__
#define __Configurations_INTERFACE_DEFINED__

/* interface Configurations */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Configurations;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b6b4c8d6-4d27-43b9-b45c-52bd16b6ba38")
    Configurations : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppParent) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt Configuration **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__out vsConfigurationType *pType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ConfigurationsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Configurations * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Configurations * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Configurations * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Configurations * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Configurations * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Configurations * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Configurations * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Configurations * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Configurations * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppParent);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            Configurations * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Configurations * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt Configuration **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Configurations * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Configurations * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Configurations * This,
            /* [retval][out] */ __RPC__out vsConfigurationType *pType);
        
        END_INTERFACE
    } ConfigurationsVtbl;

    interface Configurations
    {
        CONST_VTBL struct ConfigurationsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Configurations_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Configurations_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Configurations_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Configurations_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Configurations_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Configurations_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Configurations_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Configurations_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define Configurations_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define Configurations__NewEnum(This,Enumerator)	\
    ( (This)->lpVtbl -> _NewEnum(This,Enumerator) ) 

#define Configurations_Item(This,Index,ppOut)	\
    ( (This)->lpVtbl -> Item(This,Index,ppOut) ) 

#define Configurations_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define Configurations_get_Name(This,pName)	\
    ( (This)->lpVtbl -> get_Name(This,pName) ) 

#define Configurations_get_Type(This,pType)	\
    ( (This)->lpVtbl -> get_Type(This,pType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Configurations_INTERFACE_DEFINED__ */


#ifndef __ConfigurationManager_INTERFACE_DEFINED__
#define __ConfigurationManager_INTERFACE_DEFINED__

/* interface ConfigurationManager */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ConfigurationManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9043fda1-345b-4364-900f-bc8598eb8e4f")
    ConfigurationManager : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppParent) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [defaultvalue] */ __RPC__in BSTR Platform,
            /* [retval][out] */ __RPC__deref_out_opt Configuration **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ConfigurationRow( 
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt Configurations **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddConfigurationRow( 
            __RPC__in BSTR NewName,
            __RPC__in BSTR ExistingName,
            /* [in] */ VARIANT_BOOL Propagate,
            /* [retval][out] */ __RPC__deref_out_opt Configurations **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeleteConfigurationRow( 
            __RPC__in BSTR Name) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConfigurationRowNames( 
            /* [retval][out] */ __RPC__out VARIANT *pNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Platform( 
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt Configurations **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddPlatform( 
            __RPC__in BSTR NewName,
            __RPC__in BSTR ExistingName,
            /* [in] */ VARIANT_BOOL Propagate,
            /* [retval][out] */ __RPC__deref_out_opt Configurations **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeletePlatform( 
            __RPC__in BSTR Name) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlatformNames( 
            /* [retval][out] */ __RPC__out VARIANT *pNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SupportedPlatforms( 
            /* [retval][out] */ __RPC__out VARIANT *pPlatforms) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveConfiguration( 
            /* [retval][out] */ __RPC__deref_out_opt Configuration **ppOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ConfigurationManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ConfigurationManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ConfigurationManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ConfigurationManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ConfigurationManager * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ConfigurationManager * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ConfigurationManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ConfigurationManager * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ConfigurationManager * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ConfigurationManager * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppParent);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            ConfigurationManager * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ConfigurationManager * This,
            /* [in] */ VARIANT Index,
            /* [defaultvalue] */ __RPC__in BSTR Platform,
            /* [retval][out] */ __RPC__deref_out_opt Configuration **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ConfigurationManager * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ConfigurationRow )( 
            ConfigurationManager * This,
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt Configurations **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddConfigurationRow )( 
            ConfigurationManager * This,
            __RPC__in BSTR NewName,
            __RPC__in BSTR ExistingName,
            /* [in] */ VARIANT_BOOL Propagate,
            /* [retval][out] */ __RPC__deref_out_opt Configurations **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteConfigurationRow )( 
            ConfigurationManager * This,
            __RPC__in BSTR Name);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigurationRowNames )( 
            ConfigurationManager * This,
            /* [retval][out] */ __RPC__out VARIANT *pNames);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Platform )( 
            ConfigurationManager * This,
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt Configurations **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddPlatform )( 
            ConfigurationManager * This,
            __RPC__in BSTR NewName,
            __RPC__in BSTR ExistingName,
            /* [in] */ VARIANT_BOOL Propagate,
            /* [retval][out] */ __RPC__deref_out_opt Configurations **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeletePlatform )( 
            ConfigurationManager * This,
            __RPC__in BSTR Name);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlatformNames )( 
            ConfigurationManager * This,
            /* [retval][out] */ __RPC__out VARIANT *pNames);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SupportedPlatforms )( 
            ConfigurationManager * This,
            /* [retval][out] */ __RPC__out VARIANT *pPlatforms);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveConfiguration )( 
            ConfigurationManager * This,
            /* [retval][out] */ __RPC__deref_out_opt Configuration **ppOut);
        
        END_INTERFACE
    } ConfigurationManagerVtbl;

    interface ConfigurationManager
    {
        CONST_VTBL struct ConfigurationManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ConfigurationManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ConfigurationManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ConfigurationManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ConfigurationManager_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ConfigurationManager_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ConfigurationManager_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ConfigurationManager_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ConfigurationManager_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define ConfigurationManager_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define ConfigurationManager__NewEnum(This,Enumerator)	\
    ( (This)->lpVtbl -> _NewEnum(This,Enumerator) ) 

#define ConfigurationManager_Item(This,Index,Platform,ppOut)	\
    ( (This)->lpVtbl -> Item(This,Index,Platform,ppOut) ) 

#define ConfigurationManager_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define ConfigurationManager_ConfigurationRow(This,Name,ppOut)	\
    ( (This)->lpVtbl -> ConfigurationRow(This,Name,ppOut) ) 

#define ConfigurationManager_AddConfigurationRow(This,NewName,ExistingName,Propagate,ppOut)	\
    ( (This)->lpVtbl -> AddConfigurationRow(This,NewName,ExistingName,Propagate,ppOut) ) 

#define ConfigurationManager_DeleteConfigurationRow(This,Name)	\
    ( (This)->lpVtbl -> DeleteConfigurationRow(This,Name) ) 

#define ConfigurationManager_get_ConfigurationRowNames(This,pNames)	\
    ( (This)->lpVtbl -> get_ConfigurationRowNames(This,pNames) ) 

#define ConfigurationManager_Platform(This,Name,ppOut)	\
    ( (This)->lpVtbl -> Platform(This,Name,ppOut) ) 

#define ConfigurationManager_AddPlatform(This,NewName,ExistingName,Propagate,ppOut)	\
    ( (This)->lpVtbl -> AddPlatform(This,NewName,ExistingName,Propagate,ppOut) ) 

#define ConfigurationManager_DeletePlatform(This,Name)	\
    ( (This)->lpVtbl -> DeletePlatform(This,Name) ) 

#define ConfigurationManager_get_PlatformNames(This,pNames)	\
    ( (This)->lpVtbl -> get_PlatformNames(This,pNames) ) 

#define ConfigurationManager_get_SupportedPlatforms(This,pPlatforms)	\
    ( (This)->lpVtbl -> get_SupportedPlatforms(This,pPlatforms) ) 

#define ConfigurationManager_get_ActiveConfiguration(This,ppOut)	\
    ( (This)->lpVtbl -> get_ActiveConfiguration(This,ppOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ConfigurationManager_INTERFACE_DEFINED__ */


#ifndef __Macros_INTERFACE_DEFINED__
#define __Macros_INTERFACE_DEFINED__

/* interface Macros */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_Macros;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f9f99155-6d4d-49b1-ad63-c78c3e8a5916")
    Macros : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsRecording( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *vbIsRecording) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE EmitMacroCode( 
            __RPC__in BSTR Code) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Pause( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Resume( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct MacrosVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Macros * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Macros * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Macros * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Macros * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Macros * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Macros * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Macros * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            Macros * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Macros * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**pDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsRecording )( 
            Macros * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *vbIsRecording);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EmitMacroCode )( 
            Macros * This,
            __RPC__in BSTR Code);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            Macros * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Resume )( 
            Macros * This);
        
        END_INTERFACE
    } MacrosVtbl;

    interface Macros
    {
        CONST_VTBL struct MacrosVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Macros_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Macros_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Macros_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Macros_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Macros_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Macros_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Macros_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Macros_get_DTE(This,pDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,pDTE) ) 

#define Macros_get_Parent(This,pDTE)	\
    ( (This)->lpVtbl -> get_Parent(This,pDTE) ) 

#define Macros_get_IsRecording(This,vbIsRecording)	\
    ( (This)->lpVtbl -> get_IsRecording(This,vbIsRecording) ) 

#define Macros_EmitMacroCode(This,Code)	\
    ( (This)->lpVtbl -> EmitMacroCode(This,Code) ) 

#define Macros_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define Macros_Resume(This)	\
    ( (This)->lpVtbl -> Resume(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Macros_INTERFACE_DEFINED__ */


#ifndef __OutputGroups_INTERFACE_DEFINED__
#define __OutputGroups_INTERFACE_DEFINED__

/* interface OutputGroups */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_OutputGroups;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f9fa748e-e302-44cf-891b-e263189d585e")
    OutputGroups : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Configuration **ppConfiguration) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt OutputGroup **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct OutputGroupsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OutputGroups * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OutputGroups * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OutputGroups * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OutputGroups * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OutputGroups * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OutputGroups * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OutputGroups * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            OutputGroups * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            OutputGroups * This,
            /* [retval][out] */ __RPC__deref_out_opt Configuration **ppConfiguration);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            OutputGroups * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **Enumerator);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            OutputGroups * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt OutputGroup **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            OutputGroups * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        END_INTERFACE
    } OutputGroupsVtbl;

    interface OutputGroups
    {
        CONST_VTBL struct OutputGroupsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OutputGroups_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OutputGroups_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OutputGroups_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OutputGroups_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OutputGroups_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OutputGroups_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OutputGroups_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define OutputGroups_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define OutputGroups_get_Parent(This,ppConfiguration)	\
    ( (This)->lpVtbl -> get_Parent(This,ppConfiguration) ) 

#define OutputGroups__NewEnum(This,Enumerator)	\
    ( (This)->lpVtbl -> _NewEnum(This,Enumerator) ) 

#define OutputGroups_Item(This,Index,ppOut)	\
    ( (This)->lpVtbl -> Item(This,Index,ppOut) ) 

#define OutputGroups_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __OutputGroups_INTERFACE_DEFINED__ */


#ifndef __OutputGroup_INTERFACE_DEFINED__
#define __OutputGroup_INTERFACE_DEFINED__

/* interface OutputGroup */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_OutputGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a3a80783-875f-435b-9639-e5ce888df737")
    OutputGroup : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt OutputGroups **ppOutputGroups) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileNames( 
            /* [retval][out] */ __RPC__out VARIANT *pNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileCount( 
            /* [retval][out] */ __RPC__out long *pCountNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CanonicalName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileURLs( 
            /* [retval][out] */ __RPC__out VARIANT *pURLs) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDesc) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct OutputGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OutputGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OutputGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OutputGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OutputGroup * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OutputGroup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OutputGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OutputGroup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            OutputGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            OutputGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt OutputGroups **ppOutputGroups);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileNames )( 
            OutputGroup * This,
            /* [retval][out] */ __RPC__out VARIANT *pNames);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileCount )( 
            OutputGroup * This,
            /* [retval][out] */ __RPC__out long *pCountNames);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayName )( 
            OutputGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CanonicalName )( 
            OutputGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileURLs )( 
            OutputGroup * This,
            /* [retval][out] */ __RPC__out VARIANT *pURLs);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            OutputGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDesc);
        
        END_INTERFACE
    } OutputGroupVtbl;

    interface OutputGroup
    {
        CONST_VTBL struct OutputGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OutputGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OutputGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OutputGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OutputGroup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OutputGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OutputGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OutputGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define OutputGroup_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define OutputGroup_get_Collection(This,ppOutputGroups)	\
    ( (This)->lpVtbl -> get_Collection(This,ppOutputGroups) ) 

#define OutputGroup_get_FileNames(This,pNames)	\
    ( (This)->lpVtbl -> get_FileNames(This,pNames) ) 

#define OutputGroup_get_FileCount(This,pCountNames)	\
    ( (This)->lpVtbl -> get_FileCount(This,pCountNames) ) 

#define OutputGroup_get_DisplayName(This,pName)	\
    ( (This)->lpVtbl -> get_DisplayName(This,pName) ) 

#define OutputGroup_get_CanonicalName(This,pName)	\
    ( (This)->lpVtbl -> get_CanonicalName(This,pName) ) 

#define OutputGroup_get_FileURLs(This,pURLs)	\
    ( (This)->lpVtbl -> get_FileURLs(This,pURLs) ) 

#define OutputGroup_get_Description(This,pDesc)	\
    ( (This)->lpVtbl -> get_Description(This,pDesc) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __OutputGroup_INTERFACE_DEFINED__ */


#ifndef __ContextAttributes_INTERFACE_DEFINED__
#define __ContextAttributes_INTERFACE_DEFINED__

/* interface ContextAttributes */
/* [uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_ContextAttributes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33c5ebb8-244e-449d-9cee-fad70a774e59")
    ContextAttributes : public IDispatch
    {
    public:
        virtual /* [restricted][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt ContextAttribute **ppVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *Count) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            __RPC__in BSTR AttributeName,
            __RPC__in BSTR AttributeValue,
            vsContextAttributeType Type,
            /* [retval][out] */ __RPC__deref_out_opt ContextAttribute **ppVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__out vsContextAttributes *Type) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HighPriorityAttributes( 
            /* [retval][out] */ __RPC__deref_out_opt ContextAttributes **ppVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Refresh( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ContextAttributesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ContextAttributes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ContextAttributes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ContextAttributes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ContextAttributes * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ContextAttributes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ContextAttributes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ContextAttributes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [restricted][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            ContextAttributes * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ContextAttributes * This,
            VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt ContextAttribute **ppVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            ContextAttributes * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ContextAttributes * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ContextAttributes * This,
            /* [retval][out] */ __RPC__out long *Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            ContextAttributes * This,
            __RPC__in BSTR AttributeName,
            __RPC__in BSTR AttributeValue,
            vsContextAttributeType Type,
            /* [retval][out] */ __RPC__deref_out_opt ContextAttribute **ppVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            ContextAttributes * This,
            /* [retval][out] */ __RPC__out vsContextAttributes *Type);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HighPriorityAttributes )( 
            ContextAttributes * This,
            /* [retval][out] */ __RPC__deref_out_opt ContextAttributes **ppVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            ContextAttributes * This);
        
        END_INTERFACE
    } ContextAttributesVtbl;

    interface ContextAttributes
    {
        CONST_VTBL struct ContextAttributesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ContextAttributes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ContextAttributes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ContextAttributes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ContextAttributes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ContextAttributes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ContextAttributes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ContextAttributes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ContextAttributes__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define ContextAttributes_Item(This,Index,ppVal)	\
    ( (This)->lpVtbl -> Item(This,Index,ppVal) ) 

#define ContextAttributes_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define ContextAttributes_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define ContextAttributes_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define ContextAttributes_Add(This,AttributeName,AttributeValue,Type,ppVal)	\
    ( (This)->lpVtbl -> Add(This,AttributeName,AttributeValue,Type,ppVal) ) 

#define ContextAttributes_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define ContextAttributes_get_HighPriorityAttributes(This,ppVal)	\
    ( (This)->lpVtbl -> get_HighPriorityAttributes(This,ppVal) ) 

#define ContextAttributes_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ContextAttributes_INTERFACE_DEFINED__ */


#ifndef __SourceControl_INTERFACE_DEFINED__
#define __SourceControl_INTERFACE_DEFINED__

/* interface SourceControl */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_SourceControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f1ddc2c2-df76-4ebb-9de8-48ad2557062c")
    SourceControl : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsItemUnderSCC( 
            /* [in] */ __RPC__in BSTR ItemName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfControlled) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsItemCheckedOut( 
            /* [in] */ __RPC__in BSTR ItemName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfCheckedOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CheckOutItem( 
            /* [in] */ __RPC__in BSTR ItemName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfCheckedOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CheckOutItems( 
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *ItemNames,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfCheckedOut) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ExcludeItem( 
            /* [in] */ __RPC__in BSTR ProjectFile,
            /* [in] */ __RPC__in BSTR ItemName) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ExcludeItems( 
            /* [in] */ __RPC__in BSTR ProjectFile,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *ItemNames) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SourceControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SourceControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SourceControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SourceControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SourceControl * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SourceControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SourceControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SourceControl * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            SourceControl * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SourceControl * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsItemUnderSCC )( 
            SourceControl * This,
            /* [in] */ __RPC__in BSTR ItemName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfControlled);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsItemCheckedOut )( 
            SourceControl * This,
            /* [in] */ __RPC__in BSTR ItemName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfCheckedOut);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckOutItem )( 
            SourceControl * This,
            /* [in] */ __RPC__in BSTR ItemName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfCheckedOut);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckOutItems )( 
            SourceControl * This,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *ItemNames,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfCheckedOut);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ExcludeItem )( 
            SourceControl * This,
            /* [in] */ __RPC__in BSTR ProjectFile,
            /* [in] */ __RPC__in BSTR ItemName);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ExcludeItems )( 
            SourceControl * This,
            /* [in] */ __RPC__in BSTR ProjectFile,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * *ItemNames);
        
        END_INTERFACE
    } SourceControlVtbl;

    interface SourceControl
    {
        CONST_VTBL struct SourceControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SourceControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SourceControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SourceControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SourceControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SourceControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SourceControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SourceControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SourceControl_get_DTE(This,ppDTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTEObject) ) 

#define SourceControl_get_Parent(This,ppDTEObject)	\
    ( (This)->lpVtbl -> get_Parent(This,ppDTEObject) ) 

#define SourceControl_IsItemUnderSCC(This,ItemName,pfControlled)	\
    ( (This)->lpVtbl -> IsItemUnderSCC(This,ItemName,pfControlled) ) 

#define SourceControl_IsItemCheckedOut(This,ItemName,pfCheckedOut)	\
    ( (This)->lpVtbl -> IsItemCheckedOut(This,ItemName,pfCheckedOut) ) 

#define SourceControl_CheckOutItem(This,ItemName,pfCheckedOut)	\
    ( (This)->lpVtbl -> CheckOutItem(This,ItemName,pfCheckedOut) ) 

#define SourceControl_CheckOutItems(This,ItemNames,pfCheckedOut)	\
    ( (This)->lpVtbl -> CheckOutItems(This,ItemNames,pfCheckedOut) ) 

#define SourceControl_ExcludeItem(This,ProjectFile,ItemName)	\
    ( (This)->lpVtbl -> ExcludeItem(This,ProjectFile,ItemName) ) 

#define SourceControl_ExcludeItems(This,ProjectFile,ItemNames)	\
    ( (This)->lpVtbl -> ExcludeItems(This,ProjectFile,ItemNames) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SourceControl_INTERFACE_DEFINED__ */


#ifndef __TextPoint_INTERFACE_DEFINED__
#define __TextPoint_INTERFACE_DEFINED__

/* interface TextPoint */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TextPoint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7f59e94e-4939-40d2-9f7f-b7651c25905d")
    TextPoint : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt TextDocument **lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Line( 
            /* [retval][out] */ __RPC__out long *lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LineCharOffset( 
            /* [retval][out] */ __RPC__out long *lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AbsoluteCharOffset( 
            /* [retval][out] */ __RPC__out long *lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayColumn( 
            /* [retval][out] */ __RPC__out long *lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AtEndOfDocument( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AtStartOfDocument( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AtEndOfLine( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AtStartOfLine( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LineLength( 
            /* [retval][out] */ __RPC__out long *lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE EqualTo( 
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LessThan( 
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GreaterThan( 
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE TryToShow( 
            /* [defaultvalue][in] */ vsPaneShowHow How,
            /* [optional][in] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbResult) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CodeElement( 
            /* [in] */ vsCMElement Scope,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppResult) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateEditPoint( 
            /* [retval][out] */ __RPC__deref_out_opt EditPoint **lppaReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextPointVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextPoint * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TextPoint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TextPoint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextPoint * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextPoint * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextPoint * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextPoint * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TextPoint * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TextPoint * This,
            /* [retval][out] */ __RPC__deref_out_opt TextDocument **lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Line )( 
            TextPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineCharOffset )( 
            TextPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AbsoluteCharOffset )( 
            TextPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayColumn )( 
            TextPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AtEndOfDocument )( 
            TextPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AtStartOfDocument )( 
            TextPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AtEndOfLine )( 
            TextPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AtStartOfLine )( 
            TextPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineLength )( 
            TextPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EqualTo )( 
            TextPoint * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LessThan )( 
            TextPoint * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GreaterThan )( 
            TextPoint * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TryToShow )( 
            TextPoint * This,
            /* [defaultvalue][in] */ vsPaneShowHow How,
            /* [optional][in] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbResult);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CodeElement )( 
            TextPoint * This,
            /* [in] */ vsCMElement Scope,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppResult);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateEditPoint )( 
            TextPoint * This,
            /* [retval][out] */ __RPC__deref_out_opt EditPoint **lppaReturn);
        
        END_INTERFACE
    } TextPointVtbl;

    interface TextPoint
    {
        CONST_VTBL struct TextPointVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextPoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TextPoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TextPoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TextPoint_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TextPoint_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TextPoint_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TextPoint_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TextPoint_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define TextPoint_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define TextPoint_get_Line(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Line(This,lppaReturn) ) 

#define TextPoint_get_LineCharOffset(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_LineCharOffset(This,lppaReturn) ) 

#define TextPoint_get_AbsoluteCharOffset(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AbsoluteCharOffset(This,lppaReturn) ) 

#define TextPoint_get_DisplayColumn(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DisplayColumn(This,lppaReturn) ) 

#define TextPoint_get_AtEndOfDocument(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AtEndOfDocument(This,lppaReturn) ) 

#define TextPoint_get_AtStartOfDocument(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AtStartOfDocument(This,lppaReturn) ) 

#define TextPoint_get_AtEndOfLine(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AtEndOfLine(This,lppaReturn) ) 

#define TextPoint_get_AtStartOfLine(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AtStartOfLine(This,lppaReturn) ) 

#define TextPoint_get_LineLength(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_LineLength(This,lppaReturn) ) 

#define TextPoint_EqualTo(This,Point,lppaReturn)	\
    ( (This)->lpVtbl -> EqualTo(This,Point,lppaReturn) ) 

#define TextPoint_LessThan(This,Point,lppaReturn)	\
    ( (This)->lpVtbl -> LessThan(This,Point,lppaReturn) ) 

#define TextPoint_GreaterThan(This,Point,lppaReturn)	\
    ( (This)->lpVtbl -> GreaterThan(This,Point,lppaReturn) ) 

#define TextPoint_TryToShow(This,How,PointOrCount,pbResult)	\
    ( (This)->lpVtbl -> TryToShow(This,How,PointOrCount,pbResult) ) 

#define TextPoint_get_CodeElement(This,Scope,ppResult)	\
    ( (This)->lpVtbl -> get_CodeElement(This,Scope,ppResult) ) 

#define TextPoint_CreateEditPoint(This,lppaReturn)	\
    ( (This)->lpVtbl -> CreateEditPoint(This,lppaReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextPoint_INTERFACE_DEFINED__ */


#ifndef __EditPoint_INTERFACE_DEFINED__
#define __EditPoint_INTERFACE_DEFINED__

/* interface EditPoint */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_EditPoint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c1ffe800-028b-4475-a907-14f51f19bb7d")
    EditPoint : public TextPoint
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CharLeft( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CharRight( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE EndOfLine( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StartOfLine( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE EndOfDocument( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StartOfDocument( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE WordLeft( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE WordRight( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LineUp( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LineDown( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE MoveToPoint( 
            /* [in] */ __RPC__in_opt TextPoint *Point) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE MoveToLineAndOffset( 
            /* [in] */ long Line,
            /* [in] */ long Offset) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE MoveToAbsoluteOffset( 
            /* [in] */ long Offset) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetBookmark( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearBookmark( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE NextBookmark( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbFound) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PreviousBookmark( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbFound) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PadToColumn( 
            /* [in] */ long Column) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ __RPC__in BSTR Text) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE InsertFromFile( 
            /* [in] */ __RPC__in BSTR File) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetText( 
            /* [in] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetLines( 
            /* [in] */ long Start,
            /* [in] */ long ExclusiveEnd,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrText) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [in] */ VARIANT PointOrCount,
            /* [defaultvalue][in] */ VARIANT_BOOL Append = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Cut( 
            /* [in] */ VARIANT PointOrCount,
            /* [defaultvalue][in] */ VARIANT_BOOL Append = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [in] */ VARIANT PointOrCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Paste( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReadOnly( 
            /* [in] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lfResult) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE FindPattern( 
            /* [in] */ __RPC__in BSTR Pattern,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt EditPoint **EndPoint,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt TextRanges **Tags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbFound) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReplacePattern( 
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [in] */ __RPC__in BSTR Pattern,
            /* [in] */ __RPC__in BSTR Replace,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt TextRanges **Tags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbFound) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Indent( 
            /* [defaultvalue][in] */ __RPC__in_opt TextPoint *Point = 0,
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Unindent( 
            /* [defaultvalue][in] */ __RPC__in_opt TextPoint *Point = 0,
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SmartFormat( 
            /* [in] */ __RPC__in_opt TextPoint *Point) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE OutlineSection( 
            /* [in] */ VARIANT PointOrCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReplaceText( 
            /* [in] */ VARIANT PointOrCount,
            /* [in] */ __RPC__in BSTR Text,
            /* [in] */ long Flags) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ChangeCase( 
            /* [in] */ VARIANT PointOrCount,
            /* [in] */ vsCaseOptions How) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeleteWhitespace( 
            /* [defaultvalue][in] */ vsWhitespaceOptions Direction = vsWhitespaceOptionsHorizontal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct EditPointVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            EditPoint * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            EditPoint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            EditPoint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            EditPoint * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            EditPoint * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            EditPoint * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            EditPoint * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__deref_out_opt TextDocument **lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Line )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineCharOffset )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AbsoluteCharOffset )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayColumn )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AtEndOfDocument )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AtStartOfDocument )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AtEndOfLine )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AtStartOfLine )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineLength )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EqualTo )( 
            EditPoint * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LessThan )( 
            EditPoint * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GreaterThan )( 
            EditPoint * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TryToShow )( 
            EditPoint * This,
            /* [defaultvalue][in] */ vsPaneShowHow How,
            /* [optional][in] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbResult);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CodeElement )( 
            EditPoint * This,
            /* [in] */ vsCMElement Scope,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppResult);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateEditPoint )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__deref_out_opt EditPoint **lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CharLeft )( 
            EditPoint * This,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CharRight )( 
            EditPoint * This,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EndOfLine )( 
            EditPoint * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartOfLine )( 
            EditPoint * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EndOfDocument )( 
            EditPoint * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartOfDocument )( 
            EditPoint * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *WordLeft )( 
            EditPoint * This,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *WordRight )( 
            EditPoint * This,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LineUp )( 
            EditPoint * This,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LineDown )( 
            EditPoint * This,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveToPoint )( 
            EditPoint * This,
            /* [in] */ __RPC__in_opt TextPoint *Point);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveToLineAndOffset )( 
            EditPoint * This,
            /* [in] */ long Line,
            /* [in] */ long Offset);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveToAbsoluteOffset )( 
            EditPoint * This,
            /* [in] */ long Offset);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetBookmark )( 
            EditPoint * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearBookmark )( 
            EditPoint * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextBookmark )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbFound);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousBookmark )( 
            EditPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbFound);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PadToColumn )( 
            EditPoint * This,
            /* [in] */ long Column);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            EditPoint * This,
            /* [in] */ __RPC__in BSTR Text);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *InsertFromFile )( 
            EditPoint * This,
            /* [in] */ __RPC__in BSTR File);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetText )( 
            EditPoint * This,
            /* [in] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetLines )( 
            EditPoint * This,
            /* [in] */ long Start,
            /* [in] */ long ExclusiveEnd,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrText);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            EditPoint * This,
            /* [in] */ VARIANT PointOrCount,
            /* [defaultvalue][in] */ VARIANT_BOOL Append);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Cut )( 
            EditPoint * This,
            /* [in] */ VARIANT PointOrCount,
            /* [defaultvalue][in] */ VARIANT_BOOL Append);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            EditPoint * This,
            /* [in] */ VARIANT PointOrCount);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Paste )( 
            EditPoint * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReadOnly )( 
            EditPoint * This,
            /* [in] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lfResult);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FindPattern )( 
            EditPoint * This,
            /* [in] */ __RPC__in BSTR Pattern,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt EditPoint **EndPoint,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt TextRanges **Tags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbFound);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReplacePattern )( 
            EditPoint * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [in] */ __RPC__in BSTR Pattern,
            /* [in] */ __RPC__in BSTR Replace,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt TextRanges **Tags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbFound);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Indent )( 
            EditPoint * This,
            /* [defaultvalue][in] */ __RPC__in_opt TextPoint *Point,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Unindent )( 
            EditPoint * This,
            /* [defaultvalue][in] */ __RPC__in_opt TextPoint *Point,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SmartFormat )( 
            EditPoint * This,
            /* [in] */ __RPC__in_opt TextPoint *Point);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OutlineSection )( 
            EditPoint * This,
            /* [in] */ VARIANT PointOrCount);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReplaceText )( 
            EditPoint * This,
            /* [in] */ VARIANT PointOrCount,
            /* [in] */ __RPC__in BSTR Text,
            /* [in] */ long Flags);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ChangeCase )( 
            EditPoint * This,
            /* [in] */ VARIANT PointOrCount,
            /* [in] */ vsCaseOptions How);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteWhitespace )( 
            EditPoint * This,
            /* [defaultvalue][in] */ vsWhitespaceOptions Direction);
        
        END_INTERFACE
    } EditPointVtbl;

    interface EditPoint
    {
        CONST_VTBL struct EditPointVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define EditPoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define EditPoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define EditPoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define EditPoint_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define EditPoint_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define EditPoint_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define EditPoint_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define EditPoint_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define EditPoint_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define EditPoint_get_Line(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Line(This,lppaReturn) ) 

#define EditPoint_get_LineCharOffset(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_LineCharOffset(This,lppaReturn) ) 

#define EditPoint_get_AbsoluteCharOffset(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AbsoluteCharOffset(This,lppaReturn) ) 

#define EditPoint_get_DisplayColumn(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DisplayColumn(This,lppaReturn) ) 

#define EditPoint_get_AtEndOfDocument(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AtEndOfDocument(This,lppaReturn) ) 

#define EditPoint_get_AtStartOfDocument(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AtStartOfDocument(This,lppaReturn) ) 

#define EditPoint_get_AtEndOfLine(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AtEndOfLine(This,lppaReturn) ) 

#define EditPoint_get_AtStartOfLine(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AtStartOfLine(This,lppaReturn) ) 

#define EditPoint_get_LineLength(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_LineLength(This,lppaReturn) ) 

#define EditPoint_EqualTo(This,Point,lppaReturn)	\
    ( (This)->lpVtbl -> EqualTo(This,Point,lppaReturn) ) 

#define EditPoint_LessThan(This,Point,lppaReturn)	\
    ( (This)->lpVtbl -> LessThan(This,Point,lppaReturn) ) 

#define EditPoint_GreaterThan(This,Point,lppaReturn)	\
    ( (This)->lpVtbl -> GreaterThan(This,Point,lppaReturn) ) 

#define EditPoint_TryToShow(This,How,PointOrCount,pbResult)	\
    ( (This)->lpVtbl -> TryToShow(This,How,PointOrCount,pbResult) ) 

#define EditPoint_get_CodeElement(This,Scope,ppResult)	\
    ( (This)->lpVtbl -> get_CodeElement(This,Scope,ppResult) ) 

#define EditPoint_CreateEditPoint(This,lppaReturn)	\
    ( (This)->lpVtbl -> CreateEditPoint(This,lppaReturn) ) 


#define EditPoint_CharLeft(This,Count)	\
    ( (This)->lpVtbl -> CharLeft(This,Count) ) 

#define EditPoint_CharRight(This,Count)	\
    ( (This)->lpVtbl -> CharRight(This,Count) ) 

#define EditPoint_EndOfLine(This)	\
    ( (This)->lpVtbl -> EndOfLine(This) ) 

#define EditPoint_StartOfLine(This)	\
    ( (This)->lpVtbl -> StartOfLine(This) ) 

#define EditPoint_EndOfDocument(This)	\
    ( (This)->lpVtbl -> EndOfDocument(This) ) 

#define EditPoint_StartOfDocument(This)	\
    ( (This)->lpVtbl -> StartOfDocument(This) ) 

#define EditPoint_WordLeft(This,Count)	\
    ( (This)->lpVtbl -> WordLeft(This,Count) ) 

#define EditPoint_WordRight(This,Count)	\
    ( (This)->lpVtbl -> WordRight(This,Count) ) 

#define EditPoint_LineUp(This,Count)	\
    ( (This)->lpVtbl -> LineUp(This,Count) ) 

#define EditPoint_LineDown(This,Count)	\
    ( (This)->lpVtbl -> LineDown(This,Count) ) 

#define EditPoint_MoveToPoint(This,Point)	\
    ( (This)->lpVtbl -> MoveToPoint(This,Point) ) 

#define EditPoint_MoveToLineAndOffset(This,Line,Offset)	\
    ( (This)->lpVtbl -> MoveToLineAndOffset(This,Line,Offset) ) 

#define EditPoint_MoveToAbsoluteOffset(This,Offset)	\
    ( (This)->lpVtbl -> MoveToAbsoluteOffset(This,Offset) ) 

#define EditPoint_SetBookmark(This)	\
    ( (This)->lpVtbl -> SetBookmark(This) ) 

#define EditPoint_ClearBookmark(This)	\
    ( (This)->lpVtbl -> ClearBookmark(This) ) 

#define EditPoint_NextBookmark(This,pbFound)	\
    ( (This)->lpVtbl -> NextBookmark(This,pbFound) ) 

#define EditPoint_PreviousBookmark(This,pbFound)	\
    ( (This)->lpVtbl -> PreviousBookmark(This,pbFound) ) 

#define EditPoint_PadToColumn(This,Column)	\
    ( (This)->lpVtbl -> PadToColumn(This,Column) ) 

#define EditPoint_Insert(This,Text)	\
    ( (This)->lpVtbl -> Insert(This,Text) ) 

#define EditPoint_InsertFromFile(This,File)	\
    ( (This)->lpVtbl -> InsertFromFile(This,File) ) 

#define EditPoint_GetText(This,PointOrCount,pbstrText)	\
    ( (This)->lpVtbl -> GetText(This,PointOrCount,pbstrText) ) 

#define EditPoint_GetLines(This,Start,ExclusiveEnd,pbstrText)	\
    ( (This)->lpVtbl -> GetLines(This,Start,ExclusiveEnd,pbstrText) ) 

#define EditPoint_Copy(This,PointOrCount,Append)	\
    ( (This)->lpVtbl -> Copy(This,PointOrCount,Append) ) 

#define EditPoint_Cut(This,PointOrCount,Append)	\
    ( (This)->lpVtbl -> Cut(This,PointOrCount,Append) ) 

#define EditPoint_Delete(This,PointOrCount)	\
    ( (This)->lpVtbl -> Delete(This,PointOrCount) ) 

#define EditPoint_Paste(This)	\
    ( (This)->lpVtbl -> Paste(This) ) 

#define EditPoint_ReadOnly(This,PointOrCount,lfResult)	\
    ( (This)->lpVtbl -> ReadOnly(This,PointOrCount,lfResult) ) 

#define EditPoint_FindPattern(This,Pattern,vsFindOptionsValue,EndPoint,Tags,pbFound)	\
    ( (This)->lpVtbl -> FindPattern(This,Pattern,vsFindOptionsValue,EndPoint,Tags,pbFound) ) 

#define EditPoint_ReplacePattern(This,Point,Pattern,Replace,vsFindOptionsValue,Tags,pbFound)	\
    ( (This)->lpVtbl -> ReplacePattern(This,Point,Pattern,Replace,vsFindOptionsValue,Tags,pbFound) ) 

#define EditPoint_Indent(This,Point,Count)	\
    ( (This)->lpVtbl -> Indent(This,Point,Count) ) 

#define EditPoint_Unindent(This,Point,Count)	\
    ( (This)->lpVtbl -> Unindent(This,Point,Count) ) 

#define EditPoint_SmartFormat(This,Point)	\
    ( (This)->lpVtbl -> SmartFormat(This,Point) ) 

#define EditPoint_OutlineSection(This,PointOrCount)	\
    ( (This)->lpVtbl -> OutlineSection(This,PointOrCount) ) 

#define EditPoint_ReplaceText(This,PointOrCount,Text,Flags)	\
    ( (This)->lpVtbl -> ReplaceText(This,PointOrCount,Text,Flags) ) 

#define EditPoint_ChangeCase(This,PointOrCount,How)	\
    ( (This)->lpVtbl -> ChangeCase(This,PointOrCount,How) ) 

#define EditPoint_DeleteWhitespace(This,Direction)	\
    ( (This)->lpVtbl -> DeleteWhitespace(This,Direction) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __EditPoint_INTERFACE_DEFINED__ */


#ifndef __TextSelection_INTERFACE_DEFINED__
#define __TextSelection_INTERFACE_DEFINED__

/* interface TextSelection */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TextSelection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1fa0e135-399a-4d2c-a4fe-d21e2480f921")
    TextSelection : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt TextDocument **ppParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AnchorPoint( 
            /* [retval][out] */ __RPC__deref_out_opt VirtualPoint **ppPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActivePoint( 
            /* [retval][out] */ __RPC__deref_out_opt VirtualPoint **ppPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_AnchorColumn( 
            /* [retval][out] */ __RPC__out long *pColumn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_BottomLine( 
            /* [retval][out] */ __RPC__out long *pLine) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BottomPoint( 
            /* [retval][out] */ __RPC__deref_out_opt VirtualPoint **ppPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentColumn( 
            /* [retval][out] */ __RPC__out long *pColumn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentLine( 
            /* [retval][out] */ __RPC__out long *pLine) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsEmpty( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfEmpty) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsActiveEndGreater( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfGreater) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pText) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ __RPC__in BSTR Text) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_TopLine( 
            /* [retval][out] */ __RPC__out long *pLine) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TopPoint( 
            /* [retval][out] */ __RPC__deref_out_opt VirtualPoint **ppPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ChangeCase( 
            /* [in] */ vsCaseOptions How) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CharLeft( 
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0,
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CharRight( 
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0,
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearBookmark( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Collapse( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE OutlineSection( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Cut( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Paste( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeleteLeft( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeleteWhitespace( 
            /* [defaultvalue][in] */ vsWhitespaceOptions Direction = vsWhitespaceOptionsHorizontal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE EndOfLine( 
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StartOfLine( 
            /* [defaultvalue][in] */ vsStartOfLineOptions Where = vsStartOfLineOptionsFirstColumn,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE EndOfDocument( 
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StartOfDocument( 
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE FindPattern( 
            /* [in] */ __RPC__in BSTR Pattern,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt TextRanges **Tags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfFound) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReplacePattern( 
            /* [in] */ __RPC__in BSTR Pattern,
            /* [in] */ __RPC__in BSTR Replace,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt TextRanges **Tags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfFound) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE FindText( 
            /* [in] */ __RPC__in BSTR Pattern,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfFound) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE ReplaceText( 
            /* [in] */ __RPC__in BSTR Pattern,
            /* [in] */ __RPC__in BSTR Replace,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfFound) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GotoLine( 
            /* [in] */ long Line,
            /* [defaultvalue][in] */ VARIANT_BOOL Select = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Indent( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Unindent( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ __RPC__in BSTR Text,
            /* [defaultvalue][in] */ long vsInsertFlagsCollapseToEndValue = vsInsertFlagsCollapseToEnd) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE InsertFromFile( 
            /* [in] */ __RPC__in BSTR File) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LineDown( 
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0,
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LineUp( 
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0,
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE MoveToPoint( 
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE MoveToLineAndOffset( 
            /* [in] */ long Line,
            /* [in] */ long Offset,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE MoveToAbsoluteOffset( 
            /* [in] */ long Offset,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE NewLine( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetBookmark( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE NextBookmark( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbFound) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PreviousBookmark( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbFound) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PadToColumn( 
            /* [in] */ long Column) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SmartFormat( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectAll( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectLine( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SwapAnchor( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Tabify( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Untabify( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE WordLeft( 
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0,
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE WordRight( 
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0,
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextPane( 
            /* [retval][out] */ __RPC__deref_out_opt TextPane **ppPane) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mode( 
            /* [retval][out] */ __RPC__out vsSelectionMode *pMode) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mode( 
            /* [in] */ vsSelectionMode Mode) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextRanges( 
            /* [retval][out] */ __RPC__deref_out_opt TextRanges **ppRanges) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Backspace( 
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Cancel( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DestructiveInsert( 
            /* [in] */ __RPC__in BSTR Text) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE MoveTo( 
            /* [in] */ long Line,
            /* [in] */ long Column,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE MoveToDisplayColumn( 
            /* [in] */ long Line,
            /* [in] */ long Column,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PageUp( 
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0,
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PageDown( 
            /* [defaultvalue][in] */ VARIANT_BOOL Extend = 0,
            /* [defaultvalue][in] */ long Count = 1) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextSelectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextSelection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TextSelection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TextSelection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextSelection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextSelection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextSelection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextSelection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__deref_out_opt TextDocument **ppParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AnchorPoint )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__deref_out_opt VirtualPoint **ppPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActivePoint )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__deref_out_opt VirtualPoint **ppPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AnchorColumn )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__out long *pColumn);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BottomLine )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__out long *pLine);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BottomPoint )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__deref_out_opt VirtualPoint **ppPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentColumn )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__out long *pColumn);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentLine )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__out long *pLine);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsEmpty )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfEmpty);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsActiveEndGreater )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfGreater);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pText);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            TextSelection * This,
            /* [in] */ __RPC__in BSTR Text);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TopLine )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__out long *pLine);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TopPoint )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__deref_out_opt VirtualPoint **ppPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ChangeCase )( 
            TextSelection * This,
            /* [in] */ vsCaseOptions How);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CharLeft )( 
            TextSelection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CharRight )( 
            TextSelection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearBookmark )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Collapse )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OutlineSection )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Cut )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Paste )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            TextSelection * This,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteLeft )( 
            TextSelection * This,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteWhitespace )( 
            TextSelection * This,
            /* [defaultvalue][in] */ vsWhitespaceOptions Direction);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EndOfLine )( 
            TextSelection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartOfLine )( 
            TextSelection * This,
            /* [defaultvalue][in] */ vsStartOfLineOptions Where,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EndOfDocument )( 
            TextSelection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartOfDocument )( 
            TextSelection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FindPattern )( 
            TextSelection * This,
            /* [in] */ __RPC__in BSTR Pattern,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt TextRanges **Tags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfFound);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReplacePattern )( 
            TextSelection * This,
            /* [in] */ __RPC__in BSTR Pattern,
            /* [in] */ __RPC__in BSTR Replace,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt TextRanges **Tags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfFound);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FindText )( 
            TextSelection * This,
            /* [in] */ __RPC__in BSTR Pattern,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfFound);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *ReplaceText )( 
            TextSelection * This,
            /* [in] */ __RPC__in BSTR Pattern,
            /* [in] */ __RPC__in BSTR Replace,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfFound);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GotoLine )( 
            TextSelection * This,
            /* [in] */ long Line,
            /* [defaultvalue][in] */ VARIANT_BOOL Select);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Indent )( 
            TextSelection * This,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Unindent )( 
            TextSelection * This,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            TextSelection * This,
            /* [in] */ __RPC__in BSTR Text,
            /* [defaultvalue][in] */ long vsInsertFlagsCollapseToEndValue);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *InsertFromFile )( 
            TextSelection * This,
            /* [in] */ __RPC__in BSTR File);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LineDown )( 
            TextSelection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LineUp )( 
            TextSelection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveToPoint )( 
            TextSelection * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveToLineAndOffset )( 
            TextSelection * This,
            /* [in] */ long Line,
            /* [in] */ long Offset,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveToAbsoluteOffset )( 
            TextSelection * This,
            /* [in] */ long Offset,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NewLine )( 
            TextSelection * This,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetBookmark )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextBookmark )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbFound);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousBookmark )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbFound);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PadToColumn )( 
            TextSelection * This,
            /* [in] */ long Column);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SmartFormat )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectAll )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectLine )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SwapAnchor )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Tabify )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Untabify )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *WordLeft )( 
            TextSelection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *WordRight )( 
            TextSelection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPane )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPane **ppPane);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__out vsSelectionMode *pMode);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mode )( 
            TextSelection * This,
            /* [in] */ vsSelectionMode Mode);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextRanges )( 
            TextSelection * This,
            /* [retval][out] */ __RPC__deref_out_opt TextRanges **ppRanges);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Backspace )( 
            TextSelection * This,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            TextSelection * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DestructiveInsert )( 
            TextSelection * This,
            /* [in] */ __RPC__in BSTR Text);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *MoveTo )( 
            TextSelection * This,
            /* [in] */ long Line,
            /* [in] */ long Column,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveToDisplayColumn )( 
            TextSelection * This,
            /* [in] */ long Line,
            /* [in] */ long Column,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PageUp )( 
            TextSelection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend,
            /* [defaultvalue][in] */ long Count);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PageDown )( 
            TextSelection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL Extend,
            /* [defaultvalue][in] */ long Count);
        
        END_INTERFACE
    } TextSelectionVtbl;

    interface TextSelection
    {
        CONST_VTBL struct TextSelectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextSelection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TextSelection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TextSelection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TextSelection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TextSelection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TextSelection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TextSelection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TextSelection_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define TextSelection_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define TextSelection_get_AnchorPoint(This,ppPoint)	\
    ( (This)->lpVtbl -> get_AnchorPoint(This,ppPoint) ) 

#define TextSelection_get_ActivePoint(This,ppPoint)	\
    ( (This)->lpVtbl -> get_ActivePoint(This,ppPoint) ) 

#define TextSelection_get_AnchorColumn(This,pColumn)	\
    ( (This)->lpVtbl -> get_AnchorColumn(This,pColumn) ) 

#define TextSelection_get_BottomLine(This,pLine)	\
    ( (This)->lpVtbl -> get_BottomLine(This,pLine) ) 

#define TextSelection_get_BottomPoint(This,ppPoint)	\
    ( (This)->lpVtbl -> get_BottomPoint(This,ppPoint) ) 

#define TextSelection_get_CurrentColumn(This,pColumn)	\
    ( (This)->lpVtbl -> get_CurrentColumn(This,pColumn) ) 

#define TextSelection_get_CurrentLine(This,pLine)	\
    ( (This)->lpVtbl -> get_CurrentLine(This,pLine) ) 

#define TextSelection_get_IsEmpty(This,pfEmpty)	\
    ( (This)->lpVtbl -> get_IsEmpty(This,pfEmpty) ) 

#define TextSelection_get_IsActiveEndGreater(This,pfGreater)	\
    ( (This)->lpVtbl -> get_IsActiveEndGreater(This,pfGreater) ) 

#define TextSelection_get_Text(This,pText)	\
    ( (This)->lpVtbl -> get_Text(This,pText) ) 

#define TextSelection_put_Text(This,Text)	\
    ( (This)->lpVtbl -> put_Text(This,Text) ) 

#define TextSelection_get_TopLine(This,pLine)	\
    ( (This)->lpVtbl -> get_TopLine(This,pLine) ) 

#define TextSelection_get_TopPoint(This,ppPoint)	\
    ( (This)->lpVtbl -> get_TopPoint(This,ppPoint) ) 

#define TextSelection_ChangeCase(This,How)	\
    ( (This)->lpVtbl -> ChangeCase(This,How) ) 

#define TextSelection_CharLeft(This,Extend,Count)	\
    ( (This)->lpVtbl -> CharLeft(This,Extend,Count) ) 

#define TextSelection_CharRight(This,Extend,Count)	\
    ( (This)->lpVtbl -> CharRight(This,Extend,Count) ) 

#define TextSelection_ClearBookmark(This)	\
    ( (This)->lpVtbl -> ClearBookmark(This) ) 

#define TextSelection_Collapse(This)	\
    ( (This)->lpVtbl -> Collapse(This) ) 

#define TextSelection_OutlineSection(This)	\
    ( (This)->lpVtbl -> OutlineSection(This) ) 

#define TextSelection_Copy(This)	\
    ( (This)->lpVtbl -> Copy(This) ) 

#define TextSelection_Cut(This)	\
    ( (This)->lpVtbl -> Cut(This) ) 

#define TextSelection_Paste(This)	\
    ( (This)->lpVtbl -> Paste(This) ) 

#define TextSelection_Delete(This,Count)	\
    ( (This)->lpVtbl -> Delete(This,Count) ) 

#define TextSelection_DeleteLeft(This,Count)	\
    ( (This)->lpVtbl -> DeleteLeft(This,Count) ) 

#define TextSelection_DeleteWhitespace(This,Direction)	\
    ( (This)->lpVtbl -> DeleteWhitespace(This,Direction) ) 

#define TextSelection_EndOfLine(This,Extend)	\
    ( (This)->lpVtbl -> EndOfLine(This,Extend) ) 

#define TextSelection_StartOfLine(This,Where,Extend)	\
    ( (This)->lpVtbl -> StartOfLine(This,Where,Extend) ) 

#define TextSelection_EndOfDocument(This,Extend)	\
    ( (This)->lpVtbl -> EndOfDocument(This,Extend) ) 

#define TextSelection_StartOfDocument(This,Extend)	\
    ( (This)->lpVtbl -> StartOfDocument(This,Extend) ) 

#define TextSelection_FindPattern(This,Pattern,vsFindOptionsValue,Tags,pfFound)	\
    ( (This)->lpVtbl -> FindPattern(This,Pattern,vsFindOptionsValue,Tags,pfFound) ) 

#define TextSelection_ReplacePattern(This,Pattern,Replace,vsFindOptionsValue,Tags,pfFound)	\
    ( (This)->lpVtbl -> ReplacePattern(This,Pattern,Replace,vsFindOptionsValue,Tags,pfFound) ) 

#define TextSelection_FindText(This,Pattern,vsFindOptionsValue,pfFound)	\
    ( (This)->lpVtbl -> FindText(This,Pattern,vsFindOptionsValue,pfFound) ) 

#define TextSelection_ReplaceText(This,Pattern,Replace,vsFindOptionsValue,pfFound)	\
    ( (This)->lpVtbl -> ReplaceText(This,Pattern,Replace,vsFindOptionsValue,pfFound) ) 

#define TextSelection_GotoLine(This,Line,Select)	\
    ( (This)->lpVtbl -> GotoLine(This,Line,Select) ) 

#define TextSelection_Indent(This,Count)	\
    ( (This)->lpVtbl -> Indent(This,Count) ) 

#define TextSelection_Unindent(This,Count)	\
    ( (This)->lpVtbl -> Unindent(This,Count) ) 

#define TextSelection_Insert(This,Text,vsInsertFlagsCollapseToEndValue)	\
    ( (This)->lpVtbl -> Insert(This,Text,vsInsertFlagsCollapseToEndValue) ) 

#define TextSelection_InsertFromFile(This,File)	\
    ( (This)->lpVtbl -> InsertFromFile(This,File) ) 

#define TextSelection_LineDown(This,Extend,Count)	\
    ( (This)->lpVtbl -> LineDown(This,Extend,Count) ) 

#define TextSelection_LineUp(This,Extend,Count)	\
    ( (This)->lpVtbl -> LineUp(This,Extend,Count) ) 

#define TextSelection_MoveToPoint(This,Point,Extend)	\
    ( (This)->lpVtbl -> MoveToPoint(This,Point,Extend) ) 

#define TextSelection_MoveToLineAndOffset(This,Line,Offset,Extend)	\
    ( (This)->lpVtbl -> MoveToLineAndOffset(This,Line,Offset,Extend) ) 

#define TextSelection_MoveToAbsoluteOffset(This,Offset,Extend)	\
    ( (This)->lpVtbl -> MoveToAbsoluteOffset(This,Offset,Extend) ) 

#define TextSelection_NewLine(This,Count)	\
    ( (This)->lpVtbl -> NewLine(This,Count) ) 

#define TextSelection_SetBookmark(This)	\
    ( (This)->lpVtbl -> SetBookmark(This) ) 

#define TextSelection_NextBookmark(This,pbFound)	\
    ( (This)->lpVtbl -> NextBookmark(This,pbFound) ) 

#define TextSelection_PreviousBookmark(This,pbFound)	\
    ( (This)->lpVtbl -> PreviousBookmark(This,pbFound) ) 

#define TextSelection_PadToColumn(This,Column)	\
    ( (This)->lpVtbl -> PadToColumn(This,Column) ) 

#define TextSelection_SmartFormat(This)	\
    ( (This)->lpVtbl -> SmartFormat(This) ) 

#define TextSelection_SelectAll(This)	\
    ( (This)->lpVtbl -> SelectAll(This) ) 

#define TextSelection_SelectLine(This)	\
    ( (This)->lpVtbl -> SelectLine(This) ) 

#define TextSelection_SwapAnchor(This)	\
    ( (This)->lpVtbl -> SwapAnchor(This) ) 

#define TextSelection_Tabify(This)	\
    ( (This)->lpVtbl -> Tabify(This) ) 

#define TextSelection_Untabify(This)	\
    ( (This)->lpVtbl -> Untabify(This) ) 

#define TextSelection_WordLeft(This,Extend,Count)	\
    ( (This)->lpVtbl -> WordLeft(This,Extend,Count) ) 

#define TextSelection_WordRight(This,Extend,Count)	\
    ( (This)->lpVtbl -> WordRight(This,Extend,Count) ) 

#define TextSelection_get_TextPane(This,ppPane)	\
    ( (This)->lpVtbl -> get_TextPane(This,ppPane) ) 

#define TextSelection_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define TextSelection_put_Mode(This,Mode)	\
    ( (This)->lpVtbl -> put_Mode(This,Mode) ) 

#define TextSelection_get_TextRanges(This,ppRanges)	\
    ( (This)->lpVtbl -> get_TextRanges(This,ppRanges) ) 

#define TextSelection_Backspace(This,Count)	\
    ( (This)->lpVtbl -> Backspace(This,Count) ) 

#define TextSelection_Cancel(This)	\
    ( (This)->lpVtbl -> Cancel(This) ) 

#define TextSelection_DestructiveInsert(This,Text)	\
    ( (This)->lpVtbl -> DestructiveInsert(This,Text) ) 

#define TextSelection_MoveTo(This,Line,Column,Extend)	\
    ( (This)->lpVtbl -> MoveTo(This,Line,Column,Extend) ) 

#define TextSelection_MoveToDisplayColumn(This,Line,Column,Extend)	\
    ( (This)->lpVtbl -> MoveToDisplayColumn(This,Line,Column,Extend) ) 

#define TextSelection_PageUp(This,Extend,Count)	\
    ( (This)->lpVtbl -> PageUp(This,Extend,Count) ) 

#define TextSelection_PageDown(This,Extend,Count)	\
    ( (This)->lpVtbl -> PageDown(This,Extend,Count) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextSelection_INTERFACE_DEFINED__ */


#ifndef __TextRanges_INTERFACE_DEFINED__
#define __TextRanges_INTERFACE_DEFINED__

/* interface TextRanges */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TextRanges;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b6422e9c-9efd-4f87-bddc-c7fd8f2fd303")
    TextRanges : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt TextDocument **ppParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt TextRange **ppRange) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextRangesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextRanges * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TextRanges * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TextRanges * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextRanges * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextRanges * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextRanges * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextRanges * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TextRanges * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TextRanges * This,
            /* [retval][out] */ __RPC__deref_out_opt TextDocument **ppParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            TextRanges * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            TextRanges * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt TextRange **ppRange);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            TextRanges * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        END_INTERFACE
    } TextRangesVtbl;

    interface TextRanges
    {
        CONST_VTBL struct TextRangesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextRanges_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TextRanges_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TextRanges_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TextRanges_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TextRanges_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TextRanges_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TextRanges_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TextRanges_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define TextRanges_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define TextRanges_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define TextRanges_Item(This,Index,ppRange)	\
    ( (This)->lpVtbl -> Item(This,Index,ppRange) ) 

#define TextRanges__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextRanges_INTERFACE_DEFINED__ */


#ifndef __TextRange_INTERFACE_DEFINED__
#define __TextRange_INTERFACE_DEFINED__

/* interface TextRange */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TextRange;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("72767524-e3b3-43d0-bb46-bbe1d556a9ff")
    TextRange : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt TextRanges **ppParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt EditPoint **ppPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt EditPoint **ppPoint) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextRangeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextRange * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TextRange * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TextRange * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextRange * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextRange * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextRange * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextRange * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TextRange * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            TextRange * This,
            /* [retval][out] */ __RPC__deref_out_opt TextRanges **ppParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            TextRange * This,
            /* [retval][out] */ __RPC__deref_out_opt EditPoint **ppPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            TextRange * This,
            /* [retval][out] */ __RPC__deref_out_opt EditPoint **ppPoint);
        
        END_INTERFACE
    } TextRangeVtbl;

    interface TextRange
    {
        CONST_VTBL struct TextRangeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextRange_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TextRange_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TextRange_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TextRange_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TextRange_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TextRange_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TextRange_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TextRange_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define TextRange_get_Collection(This,ppParent)	\
    ( (This)->lpVtbl -> get_Collection(This,ppParent) ) 

#define TextRange_get_StartPoint(This,ppPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppPoint) ) 

#define TextRange_get_EndPoint(This,ppPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,ppPoint) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextRange_INTERFACE_DEFINED__ */


#ifndef __TextDocument_INTERFACE_DEFINED__
#define __TextDocument_INTERFACE_DEFINED__

/* interface TextDocument */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TextDocument;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("cb218890-1382-472b-9118-782700c88115")
    TextDocument : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Document **ppParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [out][retval] */ __RPC__deref_out_opt TextSelection **ppSel) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearBookmarks( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE MarkText( 
            /* [in] */ __RPC__in BSTR Pattern,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReplacePattern( 
            /* [in] */ __RPC__in BSTR Pattern,
            /* [in] */ __RPC__in BSTR Replace,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt TextRanges **Tags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateEditPoint( 
            /* [defaultvalue][in] */ __RPC__in_opt TextPoint *TextPoint,
            /* [retval][out] */ __RPC__deref_out_opt EditPoint **lppaReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [out][retval] */ __RPC__deref_out_opt TextPoint **pStartPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [out][retval] */ __RPC__deref_out_opt TextPoint **pEndPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Language( 
            /* [in] */ __RPC__in BSTR Language) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][hidden][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pType) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_IndentSize( 
            /* [retval][out] */ __RPC__out long *pSize) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_TabSize( 
            /* [retval][out] */ __RPC__out long *pSize) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE ReplaceText( 
            /* [in] */ __RPC__in BSTR FindText,
            /* [in] */ __RPC__in BSTR ReplaceText,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextDocumentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextDocument * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TextDocument * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TextDocument * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextDocument * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextDocument * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextDocument * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextDocument * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TextDocument * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TextDocument * This,
            /* [retval][out] */ __RPC__deref_out_opt Document **ppParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            TextDocument * This,
            /* [out][retval] */ __RPC__deref_out_opt TextSelection **ppSel);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearBookmarks )( 
            TextDocument * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkText )( 
            TextDocument * This,
            /* [in] */ __RPC__in BSTR Pattern,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReplacePattern )( 
            TextDocument * This,
            /* [in] */ __RPC__in BSTR Pattern,
            /* [in] */ __RPC__in BSTR Replace,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt TextRanges **Tags,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateEditPoint )( 
            TextDocument * This,
            /* [defaultvalue][in] */ __RPC__in_opt TextPoint *TextPoint,
            /* [retval][out] */ __RPC__deref_out_opt EditPoint **lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            TextDocument * This,
            /* [out][retval] */ __RPC__deref_out_opt TextPoint **pStartPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            TextDocument * This,
            /* [out][retval] */ __RPC__deref_out_opt TextPoint **pEndPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            TextDocument * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            TextDocument * This,
            /* [in] */ __RPC__in BSTR Language);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            TextDocument * This,
            /* [out][retval] */ __RPC__deref_out_opt BSTR *pType);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IndentSize )( 
            TextDocument * This,
            /* [retval][out] */ __RPC__out long *pSize);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TabSize )( 
            TextDocument * This,
            /* [retval][out] */ __RPC__out long *pSize);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *ReplaceText )( 
            TextDocument * This,
            /* [in] */ __RPC__in BSTR FindText,
            /* [in] */ __RPC__in BSTR ReplaceText,
            /* [defaultvalue][in] */ long vsFindOptionsValue,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbRetVal);
        
        /* [helpstringcontext][helpstring][helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            TextDocument * This);
        
        END_INTERFACE
    } TextDocumentVtbl;

    interface TextDocument
    {
        CONST_VTBL struct TextDocumentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextDocument_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TextDocument_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TextDocument_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TextDocument_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TextDocument_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TextDocument_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TextDocument_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TextDocument_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define TextDocument_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define TextDocument_get_Selection(This,ppSel)	\
    ( (This)->lpVtbl -> get_Selection(This,ppSel) ) 

#define TextDocument_ClearBookmarks(This)	\
    ( (This)->lpVtbl -> ClearBookmarks(This) ) 

#define TextDocument_MarkText(This,Pattern,vsFindOptionsValue,pbRetVal)	\
    ( (This)->lpVtbl -> MarkText(This,Pattern,vsFindOptionsValue,pbRetVal) ) 

#define TextDocument_ReplacePattern(This,Pattern,Replace,vsFindOptionsValue,Tags,pbRetVal)	\
    ( (This)->lpVtbl -> ReplacePattern(This,Pattern,Replace,vsFindOptionsValue,Tags,pbRetVal) ) 

#define TextDocument_CreateEditPoint(This,TextPoint,lppaReturn)	\
    ( (This)->lpVtbl -> CreateEditPoint(This,TextPoint,lppaReturn) ) 

#define TextDocument_get_StartPoint(This,pStartPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,pStartPoint) ) 

#define TextDocument_get_EndPoint(This,pEndPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,pEndPoint) ) 

#define TextDocument_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define TextDocument_put_Language(This,Language)	\
    ( (This)->lpVtbl -> put_Language(This,Language) ) 

#define TextDocument_get_Type(This,pType)	\
    ( (This)->lpVtbl -> get_Type(This,pType) ) 

#define TextDocument_get_IndentSize(This,pSize)	\
    ( (This)->lpVtbl -> get_IndentSize(This,pSize) ) 

#define TextDocument_get_TabSize(This,pSize)	\
    ( (This)->lpVtbl -> get_TabSize(This,pSize) ) 

#define TextDocument_ReplaceText(This,FindText,ReplaceText,vsFindOptionsValue,pbRetVal)	\
    ( (This)->lpVtbl -> ReplaceText(This,FindText,ReplaceText,vsFindOptionsValue,pbRetVal) ) 

#define TextDocument_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextDocument_INTERFACE_DEFINED__ */


#ifndef __VirtualPoint_INTERFACE_DEFINED__
#define __VirtualPoint_INTERFACE_DEFINED__

/* interface VirtualPoint */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_VirtualPoint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("42320454-626c-4dd0-9ecb-357c4f1966d8")
    VirtualPoint : public TextPoint
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_VirtualCharOffset( 
            /* [retval][out] */ __RPC__out long *pOffset) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_VirtualDisplayColumn( 
            /* [retval][out] */ __RPC__out long *lppaReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct VirtualPointVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            VirtualPoint * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            VirtualPoint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            VirtualPoint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            VirtualPoint * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            VirtualPoint * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            VirtualPoint * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            VirtualPoint * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__deref_out_opt TextDocument **lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Line )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineCharOffset )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AbsoluteCharOffset )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayColumn )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AtEndOfDocument )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AtStartOfDocument )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AtEndOfLine )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AtStartOfLine )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineLength )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EqualTo )( 
            VirtualPoint * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LessThan )( 
            VirtualPoint * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GreaterThan )( 
            VirtualPoint * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TryToShow )( 
            VirtualPoint * This,
            /* [defaultvalue][in] */ vsPaneShowHow How,
            /* [optional][in] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbResult);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CodeElement )( 
            VirtualPoint * This,
            /* [in] */ vsCMElement Scope,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppResult);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateEditPoint )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__deref_out_opt EditPoint **lppaReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VirtualCharOffset )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__out long *pOffset);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VirtualDisplayColumn )( 
            VirtualPoint * This,
            /* [retval][out] */ __RPC__out long *lppaReturn);
        
        END_INTERFACE
    } VirtualPointVtbl;

    interface VirtualPoint
    {
        CONST_VTBL struct VirtualPointVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define VirtualPoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define VirtualPoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define VirtualPoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define VirtualPoint_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define VirtualPoint_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define VirtualPoint_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define VirtualPoint_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define VirtualPoint_get_DTE(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DTE(This,lppaReturn) ) 

#define VirtualPoint_get_Parent(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,lppaReturn) ) 

#define VirtualPoint_get_Line(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_Line(This,lppaReturn) ) 

#define VirtualPoint_get_LineCharOffset(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_LineCharOffset(This,lppaReturn) ) 

#define VirtualPoint_get_AbsoluteCharOffset(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AbsoluteCharOffset(This,lppaReturn) ) 

#define VirtualPoint_get_DisplayColumn(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_DisplayColumn(This,lppaReturn) ) 

#define VirtualPoint_get_AtEndOfDocument(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AtEndOfDocument(This,lppaReturn) ) 

#define VirtualPoint_get_AtStartOfDocument(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AtStartOfDocument(This,lppaReturn) ) 

#define VirtualPoint_get_AtEndOfLine(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AtEndOfLine(This,lppaReturn) ) 

#define VirtualPoint_get_AtStartOfLine(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_AtStartOfLine(This,lppaReturn) ) 

#define VirtualPoint_get_LineLength(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_LineLength(This,lppaReturn) ) 

#define VirtualPoint_EqualTo(This,Point,lppaReturn)	\
    ( (This)->lpVtbl -> EqualTo(This,Point,lppaReturn) ) 

#define VirtualPoint_LessThan(This,Point,lppaReturn)	\
    ( (This)->lpVtbl -> LessThan(This,Point,lppaReturn) ) 

#define VirtualPoint_GreaterThan(This,Point,lppaReturn)	\
    ( (This)->lpVtbl -> GreaterThan(This,Point,lppaReturn) ) 

#define VirtualPoint_TryToShow(This,How,PointOrCount,pbResult)	\
    ( (This)->lpVtbl -> TryToShow(This,How,PointOrCount,pbResult) ) 

#define VirtualPoint_get_CodeElement(This,Scope,ppResult)	\
    ( (This)->lpVtbl -> get_CodeElement(This,Scope,ppResult) ) 

#define VirtualPoint_CreateEditPoint(This,lppaReturn)	\
    ( (This)->lpVtbl -> CreateEditPoint(This,lppaReturn) ) 


#define VirtualPoint_get_VirtualCharOffset(This,pOffset)	\
    ( (This)->lpVtbl -> get_VirtualCharOffset(This,pOffset) ) 

#define VirtualPoint_get_VirtualDisplayColumn(This,lppaReturn)	\
    ( (This)->lpVtbl -> get_VirtualDisplayColumn(This,lppaReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __VirtualPoint_INTERFACE_DEFINED__ */


#ifndef __TextPane_INTERFACE_DEFINED__
#define __TextPane_INTERFACE_DEFINED__

/* interface TextPane */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TextPane;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0a3bf283-05f8-4669-9bcb-a84b6423349a")
    TextPane : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt TextPanes **ppPanes) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Window( 
            /* [retval][out] */ __RPC__deref_out_opt Window **ppWin) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ __RPC__out long *pHeight) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ __RPC__out long *pWidth) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ __RPC__deref_out_opt TextSelection **ppSel) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Activate( void) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsVisible( 
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [optional][in] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbResult) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE TryToShow( 
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [defaultvalue][in] */ vsPaneShowHow How,
            /* [optional][in] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextPaneVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextPane * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TextPane * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TextPane * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextPane * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextPane * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextPane * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextPane * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TextPane * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            TextPane * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPanes **ppPanes);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            TextPane * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **ppWin);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            TextPane * This,
            /* [retval][out] */ __RPC__out long *pHeight);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            TextPane * This,
            /* [retval][out] */ __RPC__out long *pWidth);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            TextPane * This,
            /* [retval][out] */ __RPC__deref_out_opt TextSelection **ppSel);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            TextPane * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            TextPane * This);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsVisible )( 
            TextPane * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [optional][in] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbResult);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TryToShow )( 
            TextPane * This,
            /* [in] */ __RPC__in_opt TextPoint *Point,
            /* [defaultvalue][in] */ vsPaneShowHow How,
            /* [optional][in] */ VARIANT PointOrCount,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbResult);
        
        END_INTERFACE
    } TextPaneVtbl;

    interface TextPane
    {
        CONST_VTBL struct TextPaneVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextPane_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TextPane_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TextPane_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TextPane_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TextPane_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TextPane_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TextPane_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TextPane_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define TextPane_get_Collection(This,ppPanes)	\
    ( (This)->lpVtbl -> get_Collection(This,ppPanes) ) 

#define TextPane_get_Window(This,ppWin)	\
    ( (This)->lpVtbl -> get_Window(This,ppWin) ) 

#define TextPane_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define TextPane_get_Width(This,pWidth)	\
    ( (This)->lpVtbl -> get_Width(This,pWidth) ) 

#define TextPane_get_Selection(This,ppSel)	\
    ( (This)->lpVtbl -> get_Selection(This,ppSel) ) 

#define TextPane_get_StartPoint(This,ppPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppPoint) ) 

#define TextPane_Activate(This)	\
    ( (This)->lpVtbl -> Activate(This) ) 

#define TextPane_IsVisible(This,Point,PointOrCount,pbResult)	\
    ( (This)->lpVtbl -> IsVisible(This,Point,PointOrCount,pbResult) ) 

#define TextPane_TryToShow(This,Point,How,PointOrCount,pbResult)	\
    ( (This)->lpVtbl -> TryToShow(This,Point,How,PointOrCount,pbResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextPane_INTERFACE_DEFINED__ */


#ifndef __TextWindow_INTERFACE_DEFINED__
#define __TextWindow_INTERFACE_DEFINED__

/* interface TextWindow */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TextWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2fc54dc9-922b-44eb-8cc0-ba182584dc4b")
    TextWindow : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Window **ppParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ __RPC__deref_out_opt TextSelection **ppSel) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActivePane( 
            /* [retval][out] */ __RPC__deref_out_opt TextPane **ppPane) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Panes( 
            /* [retval][out] */ __RPC__deref_out_opt TextPanes **ppPanes) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextWindow * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TextWindow * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TextWindow * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextWindow * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextWindow * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextWindow * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextWindow * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TextWindow * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TextWindow * This,
            /* [retval][out] */ __RPC__deref_out_opt Window **ppParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            TextWindow * This,
            /* [retval][out] */ __RPC__deref_out_opt TextSelection **ppSel);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActivePane )( 
            TextWindow * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPane **ppPane);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Panes )( 
            TextWindow * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPanes **ppPanes);
        
        END_INTERFACE
    } TextWindowVtbl;

    interface TextWindow
    {
        CONST_VTBL struct TextWindowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextWindow_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TextWindow_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TextWindow_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TextWindow_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TextWindow_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TextWindow_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TextWindow_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TextWindow_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define TextWindow_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define TextWindow_get_Selection(This,ppSel)	\
    ( (This)->lpVtbl -> get_Selection(This,ppSel) ) 

#define TextWindow_get_ActivePane(This,ppPane)	\
    ( (This)->lpVtbl -> get_ActivePane(This,ppPane) ) 

#define TextWindow_get_Panes(This,ppPanes)	\
    ( (This)->lpVtbl -> get_Panes(This,ppPanes) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextWindow_INTERFACE_DEFINED__ */


#ifndef __TextPanes_INTERFACE_DEFINED__
#define __TextPanes_INTERFACE_DEFINED__

/* interface TextPanes */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TextPanes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d9013d31-3652-46b2-a25a-29a881b9f86b")
    TextPanes : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt TextWindow **ppParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt TextPane **ppPane) = 0;
        
        virtual /* [id][restricted] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextPanesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextPanes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TextPanes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TextPanes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextPanes * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextPanes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextPanes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextPanes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            TextPanes * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppDTE);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TextPanes * This,
            /* [retval][out] */ __RPC__deref_out_opt TextWindow **ppParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            TextPanes * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            TextPanes * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt TextPane **ppPane);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            TextPanes * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        END_INTERFACE
    } TextPanesVtbl;

    interface TextPanes
    {
        CONST_VTBL struct TextPanesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextPanes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TextPanes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TextPanes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TextPanes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TextPanes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TextPanes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TextPanes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TextPanes_get_DTE(This,ppDTE)	\
    ( (This)->lpVtbl -> get_DTE(This,ppDTE) ) 

#define TextPanes_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define TextPanes_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define TextPanes_Item(This,Index,ppPane)	\
    ( (This)->lpVtbl -> Item(This,Index,ppPane) ) 

#define TextPanes__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextPanes_INTERFACE_DEFINED__ */


#ifndef __TextEditor_INTERFACE_DEFINED__
#define __TextEditor_INTERFACE_DEFINED__

/* interface TextEditor */
/* [hidden][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_TextEditor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9ff3ddca-1795-4191-a5b1-02d1ae35d074")
    TextEditor : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppApp) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Emulation( 
            /* [retval][out] */ __RPC__out long *pEditorType) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Emulation( 
            /* [in] */ long EditorType) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Overtype( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbOT) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Overtype( 
            /* [in] */ VARIANT_BOOL bOT) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_VisibleWhitespace( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbVW) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_VisibleWhitespace( 
            /* [in] */ VARIANT_BOOL bVW) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextEditorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextEditor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TextEditor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TextEditor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextEditor * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextEditor * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextEditor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextEditor * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            TextEditor * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppApp);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TextEditor * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**ppParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Emulation )( 
            TextEditor * This,
            /* [retval][out] */ __RPC__out long *pEditorType);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Emulation )( 
            TextEditor * This,
            /* [in] */ long EditorType);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Overtype )( 
            TextEditor * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbOT);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Overtype )( 
            TextEditor * This,
            /* [in] */ VARIANT_BOOL bOT);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VisibleWhitespace )( 
            TextEditor * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbVW);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VisibleWhitespace )( 
            TextEditor * This,
            /* [in] */ VARIANT_BOOL bVW);
        
        END_INTERFACE
    } TextEditorVtbl;

    interface TextEditor
    {
        CONST_VTBL struct TextEditorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextEditor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TextEditor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TextEditor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TextEditor_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TextEditor_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TextEditor_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TextEditor_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TextEditor_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define TextEditor_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define TextEditor_get_Emulation(This,pEditorType)	\
    ( (This)->lpVtbl -> get_Emulation(This,pEditorType) ) 

#define TextEditor_put_Emulation(This,EditorType)	\
    ( (This)->lpVtbl -> put_Emulation(This,EditorType) ) 

#define TextEditor_get_Overtype(This,pbOT)	\
    ( (This)->lpVtbl -> get_Overtype(This,pbOT) ) 

#define TextEditor_put_Overtype(This,bOT)	\
    ( (This)->lpVtbl -> put_Overtype(This,bOT) ) 

#define TextEditor_get_VisibleWhitespace(This,pbVW)	\
    ( (This)->lpVtbl -> get_VisibleWhitespace(This,pbVW) ) 

#define TextEditor_put_VisibleWhitespace(This,bVW)	\
    ( (This)->lpVtbl -> put_VisibleWhitespace(This,bVW) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextEditor_INTERFACE_DEFINED__ */


#ifndef __CodeModel_INTERFACE_DEFINED__
#define __CodeModel_INTERFACE_DEFINED__

/* interface CodeModel */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeModel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CFBC2B4-0D4E-11D3-8997-00C04F688DDE")
    CodeModel : public IDispatch
    {
    public:
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt Project **pProj) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CodeElements( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CodeTypeFromFullName( 
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt CodeType **ppCodeType) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddNamespace( 
            __RPC__in BSTR Name,
            VARIANT Location,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **ppCodeNamespace) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddClass( 
            __RPC__in BSTR Name,
            VARIANT Location,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [optional] */ VARIANT ImplementedInterfaces,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **ppCodeClass) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddInterface( 
            __RPC__in BSTR Name,
            VARIANT Location,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeInterface **ppCodeInterface) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFunction( 
            __RPC__in BSTR Name,
            VARIANT Location,
            enum vsCMFunction Kind,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **ppCodeFunction) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddVariable( 
            __RPC__in BSTR Name,
            VARIANT Location,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeVariable **ppCodeVariable) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddStruct( 
            __RPC__in BSTR Name,
            VARIANT Location,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [optional] */ VARIANT ImplementedInterfaces,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeStruct **ppCodeStruct) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddEnum( 
            __RPC__in BSTR Name,
            VARIANT Location,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEnum **ppCodeEnum) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddDelegate( 
            __RPC__in BSTR Name,
            VARIANT Location,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeDelegate **ppCodeDelegate) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            __RPC__in BSTR Name,
            VARIANT Location,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            VARIANT Element) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsValidID( 
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pValid) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCaseSensitive( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pSensitive) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateCodeTypeRef( 
            VARIANT Type,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **ppCodeTypeRef) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeModelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeModel * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeModel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeModel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeModel * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeModel * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeModel * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeModel * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeModel * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeModel * This,
            /* [retval][out] */ __RPC__deref_out_opt Project **pProj);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeModel * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CodeElements )( 
            CodeModel * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CodeTypeFromFullName )( 
            CodeModel * This,
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt CodeType **ppCodeType);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddNamespace )( 
            CodeModel * This,
            __RPC__in BSTR Name,
            VARIANT Location,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **ppCodeNamespace);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddClass )( 
            CodeModel * This,
            __RPC__in BSTR Name,
            VARIANT Location,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [optional] */ VARIANT ImplementedInterfaces,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **ppCodeClass);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddInterface )( 
            CodeModel * This,
            __RPC__in BSTR Name,
            VARIANT Location,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeInterface **ppCodeInterface);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFunction )( 
            CodeModel * This,
            __RPC__in BSTR Name,
            VARIANT Location,
            enum vsCMFunction Kind,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **ppCodeFunction);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddVariable )( 
            CodeModel * This,
            __RPC__in BSTR Name,
            VARIANT Location,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeVariable **ppCodeVariable);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddStruct )( 
            CodeModel * This,
            __RPC__in BSTR Name,
            VARIANT Location,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [optional] */ VARIANT ImplementedInterfaces,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeStruct **ppCodeStruct);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddEnum )( 
            CodeModel * This,
            __RPC__in BSTR Name,
            VARIANT Location,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEnum **ppCodeEnum);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddDelegate )( 
            CodeModel * This,
            __RPC__in BSTR Name,
            VARIANT Location,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeDelegate **ppCodeDelegate);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeModel * This,
            __RPC__in BSTR Name,
            VARIANT Location,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            CodeModel * This,
            VARIANT Element);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsValidID )( 
            CodeModel * This,
            __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pValid);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCaseSensitive )( 
            CodeModel * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pSensitive);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateCodeTypeRef )( 
            CodeModel * This,
            VARIANT Type,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **ppCodeTypeRef);
        
        END_INTERFACE
    } CodeModelVtbl;

    interface CodeModel
    {
        CONST_VTBL struct CodeModelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeModel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeModel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeModel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeModel_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeModel_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeModel_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeModel_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeModel_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeModel_get_Parent(This,pProj)	\
    ( (This)->lpVtbl -> get_Parent(This,pProj) ) 

#define CodeModel_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define CodeModel_get_CodeElements(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_CodeElements(This,ppCodeElements) ) 

#define CodeModel_CodeTypeFromFullName(This,Name,ppCodeType)	\
    ( (This)->lpVtbl -> CodeTypeFromFullName(This,Name,ppCodeType) ) 

#define CodeModel_AddNamespace(This,Name,Location,Position,ppCodeNamespace)	\
    ( (This)->lpVtbl -> AddNamespace(This,Name,Location,Position,ppCodeNamespace) ) 

#define CodeModel_AddClass(This,Name,Location,Position,Bases,ImplementedInterfaces,Access,ppCodeClass)	\
    ( (This)->lpVtbl -> AddClass(This,Name,Location,Position,Bases,ImplementedInterfaces,Access,ppCodeClass) ) 

#define CodeModel_AddInterface(This,Name,Location,Position,Bases,Access,ppCodeInterface)	\
    ( (This)->lpVtbl -> AddInterface(This,Name,Location,Position,Bases,Access,ppCodeInterface) ) 

#define CodeModel_AddFunction(This,Name,Location,Kind,Type,Position,Access,ppCodeFunction)	\
    ( (This)->lpVtbl -> AddFunction(This,Name,Location,Kind,Type,Position,Access,ppCodeFunction) ) 

#define CodeModel_AddVariable(This,Name,Location,Type,Position,Access,ppCodeVariable)	\
    ( (This)->lpVtbl -> AddVariable(This,Name,Location,Type,Position,Access,ppCodeVariable) ) 

#define CodeModel_AddStruct(This,Name,Location,Position,Bases,ImplementedInterfaces,Access,ppCodeStruct)	\
    ( (This)->lpVtbl -> AddStruct(This,Name,Location,Position,Bases,ImplementedInterfaces,Access,ppCodeStruct) ) 

#define CodeModel_AddEnum(This,Name,Location,Position,Bases,Access,ppCodeEnum)	\
    ( (This)->lpVtbl -> AddEnum(This,Name,Location,Position,Bases,Access,ppCodeEnum) ) 

#define CodeModel_AddDelegate(This,Name,Location,Type,Position,Access,ppCodeDelegate)	\
    ( (This)->lpVtbl -> AddDelegate(This,Name,Location,Type,Position,Access,ppCodeDelegate) ) 

#define CodeModel_AddAttribute(This,Name,Location,Value,Position,ppCodeAttribute)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Location,Value,Position,ppCodeAttribute) ) 

#define CodeModel_Remove(This,Element)	\
    ( (This)->lpVtbl -> Remove(This,Element) ) 

#define CodeModel_IsValidID(This,Name,pValid)	\
    ( (This)->lpVtbl -> IsValidID(This,Name,pValid) ) 

#define CodeModel_get_IsCaseSensitive(This,pSensitive)	\
    ( (This)->lpVtbl -> get_IsCaseSensitive(This,pSensitive) ) 

#define CodeModel_CreateCodeTypeRef(This,Type,ppCodeTypeRef)	\
    ( (This)->lpVtbl -> CreateCodeTypeRef(This,Type,ppCodeTypeRef) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeModel_INTERFACE_DEFINED__ */


#ifndef __CodeElements_INTERFACE_DEFINED__
#define __CodeElements_INTERFACE_DEFINED__

/* interface CodeElements */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeElements;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CFBC2B5-0D4E-11D3-8997-00C04F688DDE")
    CodeElements : public IDispatch
    {
    public:
        virtual /* [restricted][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppCodeElement) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *CountOfCodeElements) = 0;
        
        virtual /* [restricted][hidden][id] */ HRESULT STDMETHODCALLTYPE Reserved1( 
            VARIANT Element) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateUniqueID( 
            /* [in] */ __RPC__in BSTR Prefix,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt BSTR *NewName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pRootUnique) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeElementsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeElements * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeElements * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeElements * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeElements * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeElements * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeElements * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeElements * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [restricted][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            CodeElements * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **lppiuReturn);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeElements * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeElements * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            CodeElements * This,
            VARIANT index,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppCodeElement);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            CodeElements * This,
            /* [retval][out] */ __RPC__out long *CountOfCodeElements);
        
        /* [restricted][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved1 )( 
            CodeElements * This,
            VARIANT Element);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateUniqueID )( 
            CodeElements * This,
            /* [in] */ __RPC__in BSTR Prefix,
            /* [defaultvalue][out][in] */ __RPC__deref_inout_opt BSTR *NewName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pRootUnique);
        
        END_INTERFACE
    } CodeElementsVtbl;

    interface CodeElements
    {
        CONST_VTBL struct CodeElementsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeElements_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeElements_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeElements_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeElements_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeElements_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeElements_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeElements_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeElements__NewEnum(This,lppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,lppiuReturn) ) 

#define CodeElements_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeElements_get_Parent(This,ParentObject)	\
    ( (This)->lpVtbl -> get_Parent(This,ParentObject) ) 

#define CodeElements_Item(This,index,ppCodeElement)	\
    ( (This)->lpVtbl -> Item(This,index,ppCodeElement) ) 

#define CodeElements_get_Count(This,CountOfCodeElements)	\
    ( (This)->lpVtbl -> get_Count(This,CountOfCodeElements) ) 

#define CodeElements_Reserved1(This,Element)	\
    ( (This)->lpVtbl -> Reserved1(This,Element) ) 

#define CodeElements_CreateUniqueID(This,Prefix,NewName,pRootUnique)	\
    ( (This)->lpVtbl -> CreateUniqueID(This,Prefix,NewName,pRootUnique) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeElements_INTERFACE_DEFINED__ */


#ifndef __CodeElement_INTERFACE_DEFINED__
#define __CodeElement_INTERFACE_DEFINED__

/* interface CodeElement */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CFBC2B6-0D4E-11D3-8997-00C04F688DDE")
    CodeElement : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCodeType( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InfoLocation( 
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStartPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetEndPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeElement * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeElement * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeElement * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeElement * This,
            __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeElement * This,
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeElement * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeElement * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeElement * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        END_INTERFACE
    } CodeElementVtbl;

    interface CodeElement
    {
        CONST_VTBL struct CodeElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeElement_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeElement_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeElement_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeElement_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeElement_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeElement_get_Collection(This,ppCollection)	\
    ( (This)->lpVtbl -> get_Collection(This,ppCollection) ) 

#define CodeElement_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define CodeElement_put_Name(This,NewName)	\
    ( (This)->lpVtbl -> put_Name(This,NewName) ) 

#define CodeElement_get_FullName(This,pVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pVal) ) 

#define CodeElement_get_ProjectItem(This,pProjItem)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,pProjItem) ) 

#define CodeElement_get_Kind(This,pCodeEltKind)	\
    ( (This)->lpVtbl -> get_Kind(This,pCodeEltKind) ) 

#define CodeElement_get_IsCodeType(This,pIsCodeType)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,pIsCodeType) ) 

#define CodeElement_get_InfoLocation(This,pInfoLocation)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,pInfoLocation) ) 

#define CodeElement_get_Children(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Children(This,ppCodeElements) ) 

#define CodeElement_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define CodeElement_get_StartPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppTextPoint) ) 

#define CodeElement_get_EndPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,ppTextPoint) ) 

#define CodeElement_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define CodeElement_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define CodeElement_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define CodeElement_GetStartPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,ppTextPoint) ) 

#define CodeElement_GetEndPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,ppTextPoint) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeElement_INTERFACE_DEFINED__ */


#ifndef __CodeType_INTERFACE_DEFINED__
#define __CodeType_INTERFACE_DEFINED__

/* interface CodeType */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CFBC2B7-0D4E-11D3-8997-00C04F688DDE")
    CodeType : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCodeType( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InfoLocation( 
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStartPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetEndPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Namespace( 
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **ppCodeNamespace) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Bases( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Members( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Access( 
            enum vsCMAccess Access) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Access( 
            /* [retval][out] */ __RPC__out enum vsCMAccess *pAccess) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocComment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocComment( 
            __RPC__in BSTR DocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comment( 
            __RPC__in BSTR Comment) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddBase( 
            VARIANT Base,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveBase( 
            VARIANT Element) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveMember( 
            VARIANT Element) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsDerivedFrom( 
            __RPC__in BSTR FullName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DerivedTypes( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeType * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeType * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeType * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeType * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeType * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeType * This,
            __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeType * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeType * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeType * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeType * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeType * This,
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeType * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeType * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Namespace )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **ppCodeNamespace);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Bases )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeType * This,
            enum vsCMAccess Access);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeType * This,
            /* [retval][out] */ __RPC__out enum vsCMAccess *pAccess);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeType * This,
            __RPC__in BSTR DocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeType * This,
            __RPC__in BSTR Comment);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddBase )( 
            CodeType * This,
            VARIANT Base,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeType * This,
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveBase )( 
            CodeType * This,
            VARIANT Element);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveMember )( 
            CodeType * This,
            VARIANT Element);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsDerivedFrom )( 
            CodeType * This,
            __RPC__in BSTR FullName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedTypes )( 
            CodeType * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        END_INTERFACE
    } CodeTypeVtbl;

    interface CodeType
    {
        CONST_VTBL struct CodeTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeType_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeType_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeType_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeType_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeType_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeType_get_Collection(This,ppCollection)	\
    ( (This)->lpVtbl -> get_Collection(This,ppCollection) ) 

#define CodeType_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define CodeType_put_Name(This,NewName)	\
    ( (This)->lpVtbl -> put_Name(This,NewName) ) 

#define CodeType_get_FullName(This,pVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pVal) ) 

#define CodeType_get_ProjectItem(This,pProjItem)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,pProjItem) ) 

#define CodeType_get_Kind(This,pCodeEltKind)	\
    ( (This)->lpVtbl -> get_Kind(This,pCodeEltKind) ) 

#define CodeType_get_IsCodeType(This,pIsCodeType)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,pIsCodeType) ) 

#define CodeType_get_InfoLocation(This,pInfoLocation)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,pInfoLocation) ) 

#define CodeType_get_Children(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Children(This,ppCodeElements) ) 

#define CodeType_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define CodeType_get_StartPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppTextPoint) ) 

#define CodeType_get_EndPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,ppTextPoint) ) 

#define CodeType_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define CodeType_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define CodeType_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define CodeType_GetStartPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,ppTextPoint) ) 

#define CodeType_GetEndPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,ppTextPoint) ) 

#define CodeType_get_Parent(This,ParentObject)	\
    ( (This)->lpVtbl -> get_Parent(This,ParentObject) ) 

#define CodeType_get_Namespace(This,ppCodeNamespace)	\
    ( (This)->lpVtbl -> get_Namespace(This,ppCodeNamespace) ) 

#define CodeType_get_Bases(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Bases(This,ppCodeElements) ) 

#define CodeType_get_Members(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Members(This,ppCodeElements) ) 

#define CodeType_put_Access(This,Access)	\
    ( (This)->lpVtbl -> put_Access(This,Access) ) 

#define CodeType_get_Access(This,pAccess)	\
    ( (This)->lpVtbl -> get_Access(This,pAccess) ) 

#define CodeType_get_Attributes(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Attributes(This,ppCodeElements) ) 

#define CodeType_get_DocComment(This,pDocComment)	\
    ( (This)->lpVtbl -> get_DocComment(This,pDocComment) ) 

#define CodeType_put_DocComment(This,DocComment)	\
    ( (This)->lpVtbl -> put_DocComment(This,DocComment) ) 

#define CodeType_get_Comment(This,pComment)	\
    ( (This)->lpVtbl -> get_Comment(This,pComment) ) 

#define CodeType_put_Comment(This,Comment)	\
    ( (This)->lpVtbl -> put_Comment(This,Comment) ) 

#define CodeType_AddBase(This,Base,Position,ppOut)	\
    ( (This)->lpVtbl -> AddBase(This,Base,Position,ppOut) ) 

#define CodeType_AddAttribute(This,Name,Value,Position,ppCodeAttribute)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,ppCodeAttribute) ) 

#define CodeType_RemoveBase(This,Element)	\
    ( (This)->lpVtbl -> RemoveBase(This,Element) ) 

#define CodeType_RemoveMember(This,Element)	\
    ( (This)->lpVtbl -> RemoveMember(This,Element) ) 

#define CodeType_get_IsDerivedFrom(This,FullName,pVal)	\
    ( (This)->lpVtbl -> get_IsDerivedFrom(This,FullName,pVal) ) 

#define CodeType_get_DerivedTypes(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_DerivedTypes(This,ppCodeElements) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeType_INTERFACE_DEFINED__ */


#ifndef __CodeNamespace_INTERFACE_DEFINED__
#define __CodeNamespace_INTERFACE_DEFINED__

/* interface CodeNamespace */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeNamespace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CFBC2B8-0D4E-11D3-8997-00C04F688DDE")
    CodeNamespace : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCodeType( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InfoLocation( 
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStartPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetEndPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Members( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocComment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocComment( 
            __RPC__in BSTR DocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comment( 
            __RPC__in BSTR Comment) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddNamespace( 
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **ppCodeNamespace) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddClass( 
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [optional] */ VARIANT ImplementedInterfaces,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **ppCodeClass) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddInterface( 
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeInterface **ppCodeInterface) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddStruct( 
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [optional] */ VARIANT ImplementedInterfaces,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeStruct **ppCodeStruct) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddEnum( 
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEnum **ppCodeEnum) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddDelegate( 
            __RPC__in BSTR Name,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeDelegate **ppCodeDelegate) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            VARIANT Element) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeNamespaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeNamespace * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeNamespace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeNamespace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeNamespace * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeNamespace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeNamespace * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeNamespace * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeNamespace * This,
            __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeNamespace * This,
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeNamespace * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeNamespace * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeNamespace * This,
            __RPC__in BSTR DocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeNamespace * This,
            __RPC__in BSTR Comment);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddNamespace )( 
            CodeNamespace * This,
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **ppCodeNamespace);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddClass )( 
            CodeNamespace * This,
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [optional] */ VARIANT ImplementedInterfaces,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **ppCodeClass);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddInterface )( 
            CodeNamespace * This,
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeInterface **ppCodeInterface);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddStruct )( 
            CodeNamespace * This,
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [optional] */ VARIANT ImplementedInterfaces,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeStruct **ppCodeStruct);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddEnum )( 
            CodeNamespace * This,
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEnum **ppCodeEnum);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddDelegate )( 
            CodeNamespace * This,
            __RPC__in BSTR Name,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeDelegate **ppCodeDelegate);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            CodeNamespace * This,
            VARIANT Element);
        
        END_INTERFACE
    } CodeNamespaceVtbl;

    interface CodeNamespace
    {
        CONST_VTBL struct CodeNamespaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeNamespace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeNamespace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeNamespace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeNamespace_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeNamespace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeNamespace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeNamespace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeNamespace_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeNamespace_get_Collection(This,ppCollection)	\
    ( (This)->lpVtbl -> get_Collection(This,ppCollection) ) 

#define CodeNamespace_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define CodeNamespace_put_Name(This,NewName)	\
    ( (This)->lpVtbl -> put_Name(This,NewName) ) 

#define CodeNamespace_get_FullName(This,pVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pVal) ) 

#define CodeNamespace_get_ProjectItem(This,pProjItem)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,pProjItem) ) 

#define CodeNamespace_get_Kind(This,pCodeEltKind)	\
    ( (This)->lpVtbl -> get_Kind(This,pCodeEltKind) ) 

#define CodeNamespace_get_IsCodeType(This,pIsCodeType)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,pIsCodeType) ) 

#define CodeNamespace_get_InfoLocation(This,pInfoLocation)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,pInfoLocation) ) 

#define CodeNamespace_get_Children(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Children(This,ppCodeElements) ) 

#define CodeNamespace_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define CodeNamespace_get_StartPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppTextPoint) ) 

#define CodeNamespace_get_EndPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,ppTextPoint) ) 

#define CodeNamespace_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define CodeNamespace_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define CodeNamespace_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define CodeNamespace_GetStartPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,ppTextPoint) ) 

#define CodeNamespace_GetEndPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,ppTextPoint) ) 

#define CodeNamespace_get_Parent(This,ParentObject)	\
    ( (This)->lpVtbl -> get_Parent(This,ParentObject) ) 

#define CodeNamespace_get_Members(This,ppMembers)	\
    ( (This)->lpVtbl -> get_Members(This,ppMembers) ) 

#define CodeNamespace_get_DocComment(This,pDocComment)	\
    ( (This)->lpVtbl -> get_DocComment(This,pDocComment) ) 

#define CodeNamespace_put_DocComment(This,DocComment)	\
    ( (This)->lpVtbl -> put_DocComment(This,DocComment) ) 

#define CodeNamespace_get_Comment(This,pComment)	\
    ( (This)->lpVtbl -> get_Comment(This,pComment) ) 

#define CodeNamespace_put_Comment(This,Comment)	\
    ( (This)->lpVtbl -> put_Comment(This,Comment) ) 

#define CodeNamespace_AddNamespace(This,Name,Position,ppCodeNamespace)	\
    ( (This)->lpVtbl -> AddNamespace(This,Name,Position,ppCodeNamespace) ) 

#define CodeNamespace_AddClass(This,Name,Position,Bases,ImplementedInterfaces,Access,ppCodeClass)	\
    ( (This)->lpVtbl -> AddClass(This,Name,Position,Bases,ImplementedInterfaces,Access,ppCodeClass) ) 

#define CodeNamespace_AddInterface(This,Name,Position,Bases,Access,ppCodeInterface)	\
    ( (This)->lpVtbl -> AddInterface(This,Name,Position,Bases,Access,ppCodeInterface) ) 

#define CodeNamespace_AddStruct(This,Name,Position,Bases,ImplementedInterfaces,Access,ppCodeStruct)	\
    ( (This)->lpVtbl -> AddStruct(This,Name,Position,Bases,ImplementedInterfaces,Access,ppCodeStruct) ) 

#define CodeNamespace_AddEnum(This,Name,Position,Bases,Access,ppCodeEnum)	\
    ( (This)->lpVtbl -> AddEnum(This,Name,Position,Bases,Access,ppCodeEnum) ) 

#define CodeNamespace_AddDelegate(This,Name,Type,Position,Access,ppCodeDelegate)	\
    ( (This)->lpVtbl -> AddDelegate(This,Name,Type,Position,Access,ppCodeDelegate) ) 

#define CodeNamespace_Remove(This,Element)	\
    ( (This)->lpVtbl -> Remove(This,Element) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeNamespace_INTERFACE_DEFINED__ */


#ifndef __CodeFunction_INTERFACE_DEFINED__
#define __CodeFunction_INTERFACE_DEFINED__

/* interface CodeFunction */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeFunction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CFBC2B9-0D4E-11D3-8997-00C04F688DDE")
    CodeFunction : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCodeType( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InfoLocation( 
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStartPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetEndPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FunctionKind( 
            /* [retval][out] */ __RPC__out enum vsCMFunction *ppFunctionKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Prototype( 
            /* [defaultvalue][in] */ long Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullName) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **ppCodeTypeRef) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            __RPC__in_opt CodeTypeRef *pCodeTypeRef) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parameters( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Access( 
            enum vsCMAccess Access) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Access( 
            /* [retval][out] */ __RPC__out enum vsCMAccess *Access) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsOverloaded( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pvbOverloaded) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsShared( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Shared) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsShared( 
            VARIANT_BOOL Shared) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MustImplement( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *MustImplement) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MustImplement( 
            VARIANT_BOOL MustImplement) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Overloads( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocComment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocComment( 
            __RPC__in BSTR DocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comment( 
            __RPC__in BSTR Comment) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddParameter( 
            __RPC__in BSTR Name,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeParameter **ppCodeParameter) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveParameter( 
            VARIANT Element) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CanOverride( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pCanOverride) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CanOverride( 
            VARIANT_BOOL CanOverride) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeFunctionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeFunction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeFunction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeFunction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeFunction * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeFunction * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeFunction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeFunction * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeFunction * This,
            __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeFunction * This,
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeFunction * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeFunction * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FunctionKind )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__out enum vsCMFunction *ppFunctionKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Prototype )( 
            CodeFunction * This,
            /* [defaultvalue][in] */ long Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullName);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **ppCodeTypeRef);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            CodeFunction * This,
            __RPC__in_opt CodeTypeRef *pCodeTypeRef);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parameters )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeFunction * This,
            enum vsCMAccess Access);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__out enum vsCMAccess *Access);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsOverloaded )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pvbOverloaded);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsShared )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *Shared);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsShared )( 
            CodeFunction * This,
            VARIANT_BOOL Shared);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MustImplement )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *MustImplement);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MustImplement )( 
            CodeFunction * This,
            VARIANT_BOOL MustImplement);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Overloads )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeFunction * This,
            __RPC__in BSTR DocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeFunction * This,
            __RPC__in BSTR Comment);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddParameter )( 
            CodeFunction * This,
            __RPC__in BSTR Name,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeParameter **ppCodeParameter);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeFunction * This,
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveParameter )( 
            CodeFunction * This,
            VARIANT Element);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CanOverride )( 
            CodeFunction * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pCanOverride);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CanOverride )( 
            CodeFunction * This,
            VARIANT_BOOL CanOverride);
        
        END_INTERFACE
    } CodeFunctionVtbl;

    interface CodeFunction
    {
        CONST_VTBL struct CodeFunctionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeFunction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeFunction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeFunction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeFunction_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeFunction_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeFunction_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeFunction_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeFunction_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeFunction_get_Collection(This,ppCollection)	\
    ( (This)->lpVtbl -> get_Collection(This,ppCollection) ) 

#define CodeFunction_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define CodeFunction_put_Name(This,NewName)	\
    ( (This)->lpVtbl -> put_Name(This,NewName) ) 

#define CodeFunction_get_FullName(This,pVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pVal) ) 

#define CodeFunction_get_ProjectItem(This,pProjItem)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,pProjItem) ) 

#define CodeFunction_get_Kind(This,pCodeEltKind)	\
    ( (This)->lpVtbl -> get_Kind(This,pCodeEltKind) ) 

#define CodeFunction_get_IsCodeType(This,pIsCodeType)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,pIsCodeType) ) 

#define CodeFunction_get_InfoLocation(This,pInfoLocation)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,pInfoLocation) ) 

#define CodeFunction_get_Children(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Children(This,ppCodeElements) ) 

#define CodeFunction_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define CodeFunction_get_StartPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppTextPoint) ) 

#define CodeFunction_get_EndPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,ppTextPoint) ) 

#define CodeFunction_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define CodeFunction_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define CodeFunction_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define CodeFunction_GetStartPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,ppTextPoint) ) 

#define CodeFunction_GetEndPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,ppTextPoint) ) 

#define CodeFunction_get_Parent(This,ParentObject)	\
    ( (This)->lpVtbl -> get_Parent(This,ParentObject) ) 

#define CodeFunction_get_FunctionKind(This,ppFunctionKind)	\
    ( (This)->lpVtbl -> get_FunctionKind(This,ppFunctionKind) ) 

#define CodeFunction_get_Prototype(This,Flags,pFullName)	\
    ( (This)->lpVtbl -> get_Prototype(This,Flags,pFullName) ) 

#define CodeFunction_get_Type(This,ppCodeTypeRef)	\
    ( (This)->lpVtbl -> get_Type(This,ppCodeTypeRef) ) 

#define CodeFunction_put_Type(This,pCodeTypeRef)	\
    ( (This)->lpVtbl -> put_Type(This,pCodeTypeRef) ) 

#define CodeFunction_get_Parameters(This,ppMembers)	\
    ( (This)->lpVtbl -> get_Parameters(This,ppMembers) ) 

#define CodeFunction_put_Access(This,Access)	\
    ( (This)->lpVtbl -> put_Access(This,Access) ) 

#define CodeFunction_get_Access(This,Access)	\
    ( (This)->lpVtbl -> get_Access(This,Access) ) 

#define CodeFunction_get_IsOverloaded(This,pvbOverloaded)	\
    ( (This)->lpVtbl -> get_IsOverloaded(This,pvbOverloaded) ) 

#define CodeFunction_get_IsShared(This,Shared)	\
    ( (This)->lpVtbl -> get_IsShared(This,Shared) ) 

#define CodeFunction_put_IsShared(This,Shared)	\
    ( (This)->lpVtbl -> put_IsShared(This,Shared) ) 

#define CodeFunction_get_MustImplement(This,MustImplement)	\
    ( (This)->lpVtbl -> get_MustImplement(This,MustImplement) ) 

#define CodeFunction_put_MustImplement(This,MustImplement)	\
    ( (This)->lpVtbl -> put_MustImplement(This,MustImplement) ) 

#define CodeFunction_get_Overloads(This,ppMembers)	\
    ( (This)->lpVtbl -> get_Overloads(This,ppMembers) ) 

#define CodeFunction_get_Attributes(This,ppMembers)	\
    ( (This)->lpVtbl -> get_Attributes(This,ppMembers) ) 

#define CodeFunction_get_DocComment(This,pDocComment)	\
    ( (This)->lpVtbl -> get_DocComment(This,pDocComment) ) 

#define CodeFunction_put_DocComment(This,DocComment)	\
    ( (This)->lpVtbl -> put_DocComment(This,DocComment) ) 

#define CodeFunction_get_Comment(This,pComment)	\
    ( (This)->lpVtbl -> get_Comment(This,pComment) ) 

#define CodeFunction_put_Comment(This,Comment)	\
    ( (This)->lpVtbl -> put_Comment(This,Comment) ) 

#define CodeFunction_AddParameter(This,Name,Type,Position,ppCodeParameter)	\
    ( (This)->lpVtbl -> AddParameter(This,Name,Type,Position,ppCodeParameter) ) 

#define CodeFunction_AddAttribute(This,Name,Value,Position,ppCodeAttribute)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,ppCodeAttribute) ) 

#define CodeFunction_RemoveParameter(This,Element)	\
    ( (This)->lpVtbl -> RemoveParameter(This,Element) ) 

#define CodeFunction_get_CanOverride(This,pCanOverride)	\
    ( (This)->lpVtbl -> get_CanOverride(This,pCanOverride) ) 

#define CodeFunction_put_CanOverride(This,CanOverride)	\
    ( (This)->lpVtbl -> put_CanOverride(This,CanOverride) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeFunction_INTERFACE_DEFINED__ */


#ifndef __CodeVariable_INTERFACE_DEFINED__
#define __CodeVariable_INTERFACE_DEFINED__

/* interface CodeVariable */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeVariable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CFBC2BA-0D4E-11D3-8997-00C04F688DDE")
    CodeVariable : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCodeType( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InfoLocation( 
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStartPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetEndPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InitExpression( 
            /* [retval][out] */ __RPC__out VARIANT *pExpr) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InitExpression( 
            VARIANT Expr) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Prototype( 
            /* [defaultvalue][in] */ long Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            __RPC__in_opt CodeTypeRef *pCodeTypeRef) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **pCodeTypeRef) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Access( 
            enum vsCMAccess Access) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Access( 
            /* [retval][out] */ __RPC__out enum vsCMAccess *Access) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConstant( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsConstant) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsConstant( 
            VARIANT_BOOL IsConstant) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocComment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocComment( 
            __RPC__in BSTR DocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comment( 
            __RPC__in BSTR Comment) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsShared( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pShared) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsShared( 
            VARIANT_BOOL Shared) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeVariableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeVariable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeVariable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeVariable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeVariable * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeVariable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeVariable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeVariable * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeVariable * This,
            __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeVariable * This,
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeVariable * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeVariable * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InitExpression )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__out VARIANT *pExpr);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InitExpression )( 
            CodeVariable * This,
            VARIANT Expr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Prototype )( 
            CodeVariable * This,
            /* [defaultvalue][in] */ long Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            CodeVariable * This,
            __RPC__in_opt CodeTypeRef *pCodeTypeRef);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **pCodeTypeRef);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeVariable * This,
            enum vsCMAccess Access);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__out enum vsCMAccess *Access);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConstant )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsConstant);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsConstant )( 
            CodeVariable * This,
            VARIANT_BOOL IsConstant);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeVariable * This,
            __RPC__in BSTR DocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeVariable * This,
            __RPC__in BSTR Comment);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeVariable * This,
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsShared )( 
            CodeVariable * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pShared);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsShared )( 
            CodeVariable * This,
            VARIANT_BOOL Shared);
        
        END_INTERFACE
    } CodeVariableVtbl;

    interface CodeVariable
    {
        CONST_VTBL struct CodeVariableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeVariable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeVariable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeVariable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeVariable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeVariable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeVariable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeVariable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeVariable_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeVariable_get_Collection(This,ppCollection)	\
    ( (This)->lpVtbl -> get_Collection(This,ppCollection) ) 

#define CodeVariable_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define CodeVariable_put_Name(This,NewName)	\
    ( (This)->lpVtbl -> put_Name(This,NewName) ) 

#define CodeVariable_get_FullName(This,pVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pVal) ) 

#define CodeVariable_get_ProjectItem(This,pProjItem)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,pProjItem) ) 

#define CodeVariable_get_Kind(This,pCodeEltKind)	\
    ( (This)->lpVtbl -> get_Kind(This,pCodeEltKind) ) 

#define CodeVariable_get_IsCodeType(This,pIsCodeType)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,pIsCodeType) ) 

#define CodeVariable_get_InfoLocation(This,pInfoLocation)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,pInfoLocation) ) 

#define CodeVariable_get_Children(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Children(This,ppCodeElements) ) 

#define CodeVariable_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define CodeVariable_get_StartPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppTextPoint) ) 

#define CodeVariable_get_EndPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,ppTextPoint) ) 

#define CodeVariable_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define CodeVariable_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define CodeVariable_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define CodeVariable_GetStartPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,ppTextPoint) ) 

#define CodeVariable_GetEndPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,ppTextPoint) ) 

#define CodeVariable_get_Parent(This,ParentObject)	\
    ( (This)->lpVtbl -> get_Parent(This,ParentObject) ) 

#define CodeVariable_get_InitExpression(This,pExpr)	\
    ( (This)->lpVtbl -> get_InitExpression(This,pExpr) ) 

#define CodeVariable_put_InitExpression(This,Expr)	\
    ( (This)->lpVtbl -> put_InitExpression(This,Expr) ) 

#define CodeVariable_get_Prototype(This,Flags,pVal)	\
    ( (This)->lpVtbl -> get_Prototype(This,Flags,pVal) ) 

#define CodeVariable_put_Type(This,pCodeTypeRef)	\
    ( (This)->lpVtbl -> put_Type(This,pCodeTypeRef) ) 

#define CodeVariable_get_Type(This,pCodeTypeRef)	\
    ( (This)->lpVtbl -> get_Type(This,pCodeTypeRef) ) 

#define CodeVariable_put_Access(This,Access)	\
    ( (This)->lpVtbl -> put_Access(This,Access) ) 

#define CodeVariable_get_Access(This,Access)	\
    ( (This)->lpVtbl -> get_Access(This,Access) ) 

#define CodeVariable_get_IsConstant(This,pIsConstant)	\
    ( (This)->lpVtbl -> get_IsConstant(This,pIsConstant) ) 

#define CodeVariable_put_IsConstant(This,IsConstant)	\
    ( (This)->lpVtbl -> put_IsConstant(This,IsConstant) ) 

#define CodeVariable_get_Attributes(This,ppMembers)	\
    ( (This)->lpVtbl -> get_Attributes(This,ppMembers) ) 

#define CodeVariable_get_DocComment(This,pDocComment)	\
    ( (This)->lpVtbl -> get_DocComment(This,pDocComment) ) 

#define CodeVariable_put_DocComment(This,DocComment)	\
    ( (This)->lpVtbl -> put_DocComment(This,DocComment) ) 

#define CodeVariable_get_Comment(This,pComment)	\
    ( (This)->lpVtbl -> get_Comment(This,pComment) ) 

#define CodeVariable_put_Comment(This,Comment)	\
    ( (This)->lpVtbl -> put_Comment(This,Comment) ) 

#define CodeVariable_AddAttribute(This,Name,Value,Position,ppCodeAttribute)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,ppCodeAttribute) ) 

#define CodeVariable_get_IsShared(This,pShared)	\
    ( (This)->lpVtbl -> get_IsShared(This,pShared) ) 

#define CodeVariable_put_IsShared(This,Shared)	\
    ( (This)->lpVtbl -> put_IsShared(This,Shared) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeVariable_INTERFACE_DEFINED__ */


#ifndef __CodeProperty_INTERFACE_DEFINED__
#define __CodeProperty_INTERFACE_DEFINED__

/* interface CodeProperty */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CFBC2BB-0D4E-11D3-8997-00C04F688DDE")
    CodeProperty : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCodeType( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InfoLocation( 
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStartPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetEndPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **ParentObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Prototype( 
            /* [defaultvalue][in] */ long Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullName) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            __RPC__in_opt CodeTypeRef *pCodeTypeRef) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **pCodeTypeRef) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Getter( 
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **ppCodeFunction) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Getter( 
            __RPC__in_opt CodeFunction *pCodeFunction) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Setter( 
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **ppCodeFunction) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Setter( 
            __RPC__in_opt CodeFunction *pCodeFunction) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Access( 
            enum vsCMAccess Access) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Access( 
            /* [retval][out] */ __RPC__out enum vsCMAccess *Access) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocComment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocComment( 
            __RPC__in BSTR DocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comment( 
            __RPC__in BSTR Comment) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodePropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeProperty * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeProperty * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeProperty * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeProperty * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeProperty * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeProperty * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeProperty * This,
            __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeProperty * This,
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeProperty * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeProperty * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **ParentObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Prototype )( 
            CodeProperty * This,
            /* [defaultvalue][in] */ long Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFullName);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            CodeProperty * This,
            __RPC__in_opt CodeTypeRef *pCodeTypeRef);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **pCodeTypeRef);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Getter )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **ppCodeFunction);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Getter )( 
            CodeProperty * This,
            __RPC__in_opt CodeFunction *pCodeFunction);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Setter )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **ppCodeFunction);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Setter )( 
            CodeProperty * This,
            __RPC__in_opt CodeFunction *pCodeFunction);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeProperty * This,
            enum vsCMAccess Access);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__out enum vsCMAccess *Access);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeProperty * This,
            __RPC__in BSTR DocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeProperty * This,
            __RPC__in BSTR Comment);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeProperty * This,
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute);
        
        END_INTERFACE
    } CodePropertyVtbl;

    interface CodeProperty
    {
        CONST_VTBL struct CodePropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeProperty_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeProperty_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeProperty_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeProperty_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeProperty_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeProperty_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeProperty_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeProperty_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeProperty_get_Collection(This,ppCollection)	\
    ( (This)->lpVtbl -> get_Collection(This,ppCollection) ) 

#define CodeProperty_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define CodeProperty_put_Name(This,NewName)	\
    ( (This)->lpVtbl -> put_Name(This,NewName) ) 

#define CodeProperty_get_FullName(This,pVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pVal) ) 

#define CodeProperty_get_ProjectItem(This,pProjItem)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,pProjItem) ) 

#define CodeProperty_get_Kind(This,pCodeEltKind)	\
    ( (This)->lpVtbl -> get_Kind(This,pCodeEltKind) ) 

#define CodeProperty_get_IsCodeType(This,pIsCodeType)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,pIsCodeType) ) 

#define CodeProperty_get_InfoLocation(This,pInfoLocation)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,pInfoLocation) ) 

#define CodeProperty_get_Children(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Children(This,ppCodeElements) ) 

#define CodeProperty_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define CodeProperty_get_StartPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppTextPoint) ) 

#define CodeProperty_get_EndPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,ppTextPoint) ) 

#define CodeProperty_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define CodeProperty_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define CodeProperty_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define CodeProperty_GetStartPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,ppTextPoint) ) 

#define CodeProperty_GetEndPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,ppTextPoint) ) 

#define CodeProperty_get_Parent(This,ParentObject)	\
    ( (This)->lpVtbl -> get_Parent(This,ParentObject) ) 

#define CodeProperty_get_Prototype(This,Flags,pFullName)	\
    ( (This)->lpVtbl -> get_Prototype(This,Flags,pFullName) ) 

#define CodeProperty_put_Type(This,pCodeTypeRef)	\
    ( (This)->lpVtbl -> put_Type(This,pCodeTypeRef) ) 

#define CodeProperty_get_Type(This,pCodeTypeRef)	\
    ( (This)->lpVtbl -> get_Type(This,pCodeTypeRef) ) 

#define CodeProperty_get_Getter(This,ppCodeFunction)	\
    ( (This)->lpVtbl -> get_Getter(This,ppCodeFunction) ) 

#define CodeProperty_put_Getter(This,pCodeFunction)	\
    ( (This)->lpVtbl -> put_Getter(This,pCodeFunction) ) 

#define CodeProperty_get_Setter(This,ppCodeFunction)	\
    ( (This)->lpVtbl -> get_Setter(This,ppCodeFunction) ) 

#define CodeProperty_put_Setter(This,pCodeFunction)	\
    ( (This)->lpVtbl -> put_Setter(This,pCodeFunction) ) 

#define CodeProperty_put_Access(This,Access)	\
    ( (This)->lpVtbl -> put_Access(This,Access) ) 

#define CodeProperty_get_Access(This,Access)	\
    ( (This)->lpVtbl -> get_Access(This,Access) ) 

#define CodeProperty_get_Attributes(This,ppMembers)	\
    ( (This)->lpVtbl -> get_Attributes(This,ppMembers) ) 

#define CodeProperty_get_DocComment(This,pDocComment)	\
    ( (This)->lpVtbl -> get_DocComment(This,pDocComment) ) 

#define CodeProperty_put_DocComment(This,DocComment)	\
    ( (This)->lpVtbl -> put_DocComment(This,DocComment) ) 

#define CodeProperty_get_Comment(This,pComment)	\
    ( (This)->lpVtbl -> get_Comment(This,pComment) ) 

#define CodeProperty_put_Comment(This,Comment)	\
    ( (This)->lpVtbl -> put_Comment(This,Comment) ) 

#define CodeProperty_AddAttribute(This,Name,Value,Position,ppCodeAttribute)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,ppCodeAttribute) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeProperty_INTERFACE_DEFINED__ */


#ifndef __CodeParameter_INTERFACE_DEFINED__
#define __CodeParameter_INTERFACE_DEFINED__

/* interface CodeParameter */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeParameter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CFBC2BD-0D4E-11D3-8997-00C04F688DDE")
    CodeParameter : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCodeType( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InfoLocation( 
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStartPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetEndPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppCodeElement) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            __RPC__in_opt CodeTypeRef *Type) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **pCodeTypeRef) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocComment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocComment( 
            __RPC__in BSTR DocComment) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeParameterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeParameter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeParameter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeParameter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeParameter * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeParameter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeParameter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeParameter * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeParameter * This,
            __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeParameter * This,
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeParameter * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeParameter * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppCodeElement);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            CodeParameter * This,
            __RPC__in_opt CodeTypeRef *Type);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeTypeRef **pCodeTypeRef);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppMembers);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeParameter * This,
            __RPC__in BSTR DocComment);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeParameter * This,
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute);
        
        END_INTERFACE
    } CodeParameterVtbl;

    interface CodeParameter
    {
        CONST_VTBL struct CodeParameterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeParameter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeParameter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeParameter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeParameter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeParameter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeParameter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeParameter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeParameter_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeParameter_get_Collection(This,ppCollection)	\
    ( (This)->lpVtbl -> get_Collection(This,ppCollection) ) 

#define CodeParameter_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define CodeParameter_put_Name(This,NewName)	\
    ( (This)->lpVtbl -> put_Name(This,NewName) ) 

#define CodeParameter_get_FullName(This,pVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pVal) ) 

#define CodeParameter_get_ProjectItem(This,pProjItem)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,pProjItem) ) 

#define CodeParameter_get_Kind(This,pCodeEltKind)	\
    ( (This)->lpVtbl -> get_Kind(This,pCodeEltKind) ) 

#define CodeParameter_get_IsCodeType(This,pIsCodeType)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,pIsCodeType) ) 

#define CodeParameter_get_InfoLocation(This,pInfoLocation)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,pInfoLocation) ) 

#define CodeParameter_get_Children(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Children(This,ppCodeElements) ) 

#define CodeParameter_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define CodeParameter_get_StartPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppTextPoint) ) 

#define CodeParameter_get_EndPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,ppTextPoint) ) 

#define CodeParameter_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define CodeParameter_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define CodeParameter_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define CodeParameter_GetStartPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,ppTextPoint) ) 

#define CodeParameter_GetEndPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,ppTextPoint) ) 

#define CodeParameter_get_Parent(This,ppCodeElement)	\
    ( (This)->lpVtbl -> get_Parent(This,ppCodeElement) ) 

#define CodeParameter_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#define CodeParameter_get_Type(This,pCodeTypeRef)	\
    ( (This)->lpVtbl -> get_Type(This,pCodeTypeRef) ) 

#define CodeParameter_get_Attributes(This,ppMembers)	\
    ( (This)->lpVtbl -> get_Attributes(This,ppMembers) ) 

#define CodeParameter_get_DocComment(This,pDocComment)	\
    ( (This)->lpVtbl -> get_DocComment(This,pDocComment) ) 

#define CodeParameter_put_DocComment(This,DocComment)	\
    ( (This)->lpVtbl -> put_DocComment(This,DocComment) ) 

#define CodeParameter_AddAttribute(This,Name,Value,Position,ppCodeAttribute)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,ppCodeAttribute) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeParameter_INTERFACE_DEFINED__ */


#ifndef __CodeAttribute_INTERFACE_DEFINED__
#define __CodeAttribute_INTERFACE_DEFINED__

/* interface CodeAttribute */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CFBC2BE-0D4E-11D3-8997-00C04F688DDE")
    CodeAttribute : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCodeType( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InfoLocation( 
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStartPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetEndPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppParent) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pValue) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            __RPC__in BSTR Value) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeAttribute * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeAttribute * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeAttribute * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeAttribute * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeAttribute * This,
            __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeAttribute * This,
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeAttribute * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeAttribute * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppParent);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            CodeAttribute * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pValue);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            CodeAttribute * This,
            __RPC__in BSTR Value);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            CodeAttribute * This);
        
        END_INTERFACE
    } CodeAttributeVtbl;

    interface CodeAttribute
    {
        CONST_VTBL struct CodeAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeAttribute_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeAttribute_get_Collection(This,ppCollection)	\
    ( (This)->lpVtbl -> get_Collection(This,ppCollection) ) 

#define CodeAttribute_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define CodeAttribute_put_Name(This,NewName)	\
    ( (This)->lpVtbl -> put_Name(This,NewName) ) 

#define CodeAttribute_get_FullName(This,pVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pVal) ) 

#define CodeAttribute_get_ProjectItem(This,pProjItem)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,pProjItem) ) 

#define CodeAttribute_get_Kind(This,pCodeEltKind)	\
    ( (This)->lpVtbl -> get_Kind(This,pCodeEltKind) ) 

#define CodeAttribute_get_IsCodeType(This,pIsCodeType)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,pIsCodeType) ) 

#define CodeAttribute_get_InfoLocation(This,pInfoLocation)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,pInfoLocation) ) 

#define CodeAttribute_get_Children(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Children(This,ppCodeElements) ) 

#define CodeAttribute_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define CodeAttribute_get_StartPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppTextPoint) ) 

#define CodeAttribute_get_EndPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,ppTextPoint) ) 

#define CodeAttribute_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define CodeAttribute_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define CodeAttribute_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define CodeAttribute_GetStartPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,ppTextPoint) ) 

#define CodeAttribute_GetEndPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,ppTextPoint) ) 

#define CodeAttribute_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define CodeAttribute_get_Value(This,pValue)	\
    ( (This)->lpVtbl -> get_Value(This,pValue) ) 

#define CodeAttribute_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define CodeAttribute_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeAttribute_INTERFACE_DEFINED__ */


#ifndef __CodeInterface_INTERFACE_DEFINED__
#define __CodeInterface_INTERFACE_DEFINED__

/* interface CodeInterface */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeInterface;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B1F42510-91CD-4D3A-8B25-A317D8032B24")
    CodeInterface : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCodeType( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InfoLocation( 
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStartPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetEndPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Namespace( 
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **ppCodeNamespace) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Bases( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Members( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Access( 
            enum vsCMAccess Access) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Access( 
            /* [retval][out] */ __RPC__out enum vsCMAccess *pAccess) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocComment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocComment( 
            __RPC__in BSTR DocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comment( 
            __RPC__in BSTR Comment) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddBase( 
            VARIANT Base,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveBase( 
            VARIANT Element) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveMember( 
            VARIANT Element) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsDerivedFrom( 
            __RPC__in BSTR FullName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DerivedTypes( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFunction( 
            __RPC__in BSTR Name,
            enum vsCMFunction Kind,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **ppCodeFunction) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddProperty( 
            __RPC__in BSTR GetterName,
            __RPC__in BSTR PutterName,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [optional] */ VARIANT Location,
            /* [retval][out] */ __RPC__deref_out_opt CodeProperty **ppCodeProperty) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeInterfaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeInterface * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeInterface * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeInterface * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeInterface * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeInterface * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeInterface * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeInterface * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeInterface * This,
            __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderNames )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extender )( 
            CodeInterface * This,
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender);
        
        /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtenderCATID )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStartPoint )( 
            CodeInterface * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetEndPoint )( 
            CodeInterface * This,
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Namespace )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **ppCodeNamespace);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Bases )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Access )( 
            CodeInterface * This,
            enum vsCMAccess Access);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Access )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__out enum vsCMAccess *pAccess);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocComment )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocComment )( 
            CodeInterface * This,
            __RPC__in BSTR DocComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            CodeInterface * This,
            __RPC__in BSTR Comment);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddBase )( 
            CodeInterface * This,
            VARIANT Base,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppOut);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            CodeInterface * This,
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveBase )( 
            CodeInterface * This,
            VARIANT Element);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveMember )( 
            CodeInterface * This,
            VARIANT Element);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsDerivedFrom )( 
            CodeInterface * This,
            __RPC__in BSTR FullName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedTypes )( 
            CodeInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddFunction )( 
            CodeInterface * This,
            __RPC__in BSTR Name,
            enum vsCMFunction Kind,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **ppCodeFunction);
        
        /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddProperty )( 
            CodeInterface * This,
            __RPC__in BSTR GetterName,
            __RPC__in BSTR PutterName,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [optional] */ VARIANT Location,
            /* [retval][out] */ __RPC__deref_out_opt CodeProperty **ppCodeProperty);
        
        END_INTERFACE
    } CodeInterfaceVtbl;

    interface CodeInterface
    {
        CONST_VTBL struct CodeInterfaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CodeInterface_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CodeInterface_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CodeInterface_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CodeInterface_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CodeInterface_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CodeInterface_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CodeInterface_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CodeInterface_get_DTE(This,DTEObject)	\
    ( (This)->lpVtbl -> get_DTE(This,DTEObject) ) 

#define CodeInterface_get_Collection(This,ppCollection)	\
    ( (This)->lpVtbl -> get_Collection(This,ppCollection) ) 

#define CodeInterface_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define CodeInterface_put_Name(This,NewName)	\
    ( (This)->lpVtbl -> put_Name(This,NewName) ) 

#define CodeInterface_get_FullName(This,pVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pVal) ) 

#define CodeInterface_get_ProjectItem(This,pProjItem)	\
    ( (This)->lpVtbl -> get_ProjectItem(This,pProjItem) ) 

#define CodeInterface_get_Kind(This,pCodeEltKind)	\
    ( (This)->lpVtbl -> get_Kind(This,pCodeEltKind) ) 

#define CodeInterface_get_IsCodeType(This,pIsCodeType)	\
    ( (This)->lpVtbl -> get_IsCodeType(This,pIsCodeType) ) 

#define CodeInterface_get_InfoLocation(This,pInfoLocation)	\
    ( (This)->lpVtbl -> get_InfoLocation(This,pInfoLocation) ) 

#define CodeInterface_get_Children(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Children(This,ppCodeElements) ) 

#define CodeInterface_get_Language(This,pLanguage)	\
    ( (This)->lpVtbl -> get_Language(This,pLanguage) ) 

#define CodeInterface_get_StartPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,ppTextPoint) ) 

#define CodeInterface_get_EndPoint(This,ppTextPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,ppTextPoint) ) 

#define CodeInterface_get_ExtenderNames(This,ExtenderNames)	\
    ( (This)->lpVtbl -> get_ExtenderNames(This,ExtenderNames) ) 

#define CodeInterface_get_Extender(This,ExtenderName,Extender)	\
    ( (This)->lpVtbl -> get_Extender(This,ExtenderName,Extender) ) 

#define CodeInterface_get_ExtenderCATID(This,pRetval)	\
    ( (This)->lpVtbl -> get_ExtenderCATID(This,pRetval) ) 

#define CodeInterface_GetStartPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetStartPoint(This,Part,ppTextPoint) ) 

#define CodeInterface_GetEndPoint(This,Part,ppTextPoint)	\
    ( (This)->lpVtbl -> GetEndPoint(This,Part,ppTextPoint) ) 

#define CodeInterface_get_Parent(This,ParentObject)	\
    ( (This)->lpVtbl -> get_Parent(This,ParentObject) ) 

#define CodeInterface_get_Namespace(This,ppCodeNamespace)	\
    ( (This)->lpVtbl -> get_Namespace(This,ppCodeNamespace) ) 

#define CodeInterface_get_Bases(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Bases(This,ppCodeElements) ) 

#define CodeInterface_get_Members(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Members(This,ppCodeElements) ) 

#define CodeInterface_put_Access(This,Access)	\
    ( (This)->lpVtbl -> put_Access(This,Access) ) 

#define CodeInterface_get_Access(This,pAccess)	\
    ( (This)->lpVtbl -> get_Access(This,pAccess) ) 

#define CodeInterface_get_Attributes(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_Attributes(This,ppCodeElements) ) 

#define CodeInterface_get_DocComment(This,pDocComment)	\
    ( (This)->lpVtbl -> get_DocComment(This,pDocComment) ) 

#define CodeInterface_put_DocComment(This,DocComment)	\
    ( (This)->lpVtbl -> put_DocComment(This,DocComment) ) 

#define CodeInterface_get_Comment(This,pComment)	\
    ( (This)->lpVtbl -> get_Comment(This,pComment) ) 

#define CodeInterface_put_Comment(This,Comment)	\
    ( (This)->lpVtbl -> put_Comment(This,Comment) ) 

#define CodeInterface_AddBase(This,Base,Position,ppOut)	\
    ( (This)->lpVtbl -> AddBase(This,Base,Position,ppOut) ) 

#define CodeInterface_AddAttribute(This,Name,Value,Position,ppCodeAttribute)	\
    ( (This)->lpVtbl -> AddAttribute(This,Name,Value,Position,ppCodeAttribute) ) 

#define CodeInterface_RemoveBase(This,Element)	\
    ( (This)->lpVtbl -> RemoveBase(This,Element) ) 

#define CodeInterface_RemoveMember(This,Element)	\
    ( (This)->lpVtbl -> RemoveMember(This,Element) ) 

#define CodeInterface_get_IsDerivedFrom(This,FullName,pVal)	\
    ( (This)->lpVtbl -> get_IsDerivedFrom(This,FullName,pVal) ) 

#define CodeInterface_get_DerivedTypes(This,ppCodeElements)	\
    ( (This)->lpVtbl -> get_DerivedTypes(This,ppCodeElements) ) 

#define CodeInterface_AddFunction(This,Name,Kind,Type,Position,Access,ppCodeFunction)	\
    ( (This)->lpVtbl -> AddFunction(This,Name,Kind,Type,Position,Access,ppCodeFunction) ) 

#define CodeInterface_AddProperty(This,GetterName,PutterName,Type,Position,Access,Location,ppCodeProperty)	\
    ( (This)->lpVtbl -> AddProperty(This,GetterName,PutterName,Type,Position,Access,Location,ppCodeProperty) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CodeInterface_INTERFACE_DEFINED__ */


#ifndef __CodeStruct_INTERFACE_DEFINED__
#define __CodeStruct_INTERFACE_DEFINED__

/* interface CodeStruct */
/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */ 


EXTERN_C const IID IID_CodeStruct;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B1F42511-91CD-4D3A-8B25-A317D8032B24")
    CodeStruct : public IDispatch
    {
    public:
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DTE( 
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProjectItem( 
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCodeType( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InfoLocation( 
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pLanguage) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderNames( 
            /* [retval][out] */ __RPC__out VARIANT *ExtenderNames) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extender( 
            __RPC__in BSTR ExtenderName,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **Extender) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtenderCATID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pRetval) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStartPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetEndPoint( 
            /* [defaultvalue][in] */ enum vsCMPart Part,
            /* [retval][out] */ __RPC__deref_out_opt TextPoint **ppTextPoint) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ParentObject) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Namespace( 
            /* [retval][out] */ __RPC__deref_out_opt CodeNamespace **ppCodeNamespace) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Bases( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Members( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Access( 
            enum vsCMAccess Access) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Access( 
            /* [retval][out] */ __RPC__out enum vsCMAccess *pAccess) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocComment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pDocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocComment( 
            __RPC__in BSTR DocComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comment( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pComment) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comment( 
            __RPC__in BSTR Comment) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddBase( 
            VARIANT Base,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeElement **ppOut) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            __RPC__in BSTR Name,
            __RPC__in BSTR Value,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeAttribute **ppCodeAttribute) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveBase( 
            VARIANT Element) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveMember( 
            VARIANT Element) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsDerivedFrom( 
            __RPC__in BSTR FullName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DerivedTypes( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ImplementedInterfaces( 
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCodeElements) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsAbstract( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsAbstract) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsAbstract( 
            VARIANT_BOOL Abstract) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddImplementedInterface( 
            VARIANT Base,
            /* [optional] */ VARIANT Position,
            /* [retval][out] */ __RPC__deref_out_opt CodeInterface **ppCodeInterface) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddFunction( 
            __RPC__in BSTR Name,
            enum vsCMFunction Kind,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [optional] */ VARIANT Location,
            /* [retval][out] */ __RPC__deref_out_opt CodeFunction **ppCodeFunction) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddVariable( 
            __RPC__in BSTR Name,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [optional] */ VARIANT Location,
            /* [retval][out] */ __RPC__deref_out_opt CodeVariable **ppCodeVariable) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddProperty( 
            __RPC__in BSTR GetterName,
            __RPC__in BSTR PutterName,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [optional] */ VARIANT Location,
            /* [retval][out] */ __RPC__deref_out_opt CodeProperty **ppCodeProperty) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddClass( 
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [optional] */ VARIANT ImplementedInterfaces,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeClass **ppCodeClass) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddStruct( 
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [optional] */ VARIANT ImplementedInterfaces,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeStruct **ppCodeStruct) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddEnum( 
            __RPC__in BSTR Name,
            /* [optional] */ VARIANT Position,
            /* [optional] */ VARIANT Bases,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeEnum **ppCodeEnum) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddDelegate( 
            __RPC__in BSTR Name,
            VARIANT Type,
            /* [optional] */ VARIANT Position,
            /* [defaultvalue] */ enum vsCMAccess Access,
            /* [retval][out] */ __RPC__deref_out_opt CodeDelegate **ppCodeDelegate) = 0;
        
        virtual /* [helpstringcontext][helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveInterface( 
            VARIANT Element) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CodeStructVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CodeStruct * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CodeStruct * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CodeStruct * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CodeStruct * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CodeStruct * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CodeStruct * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CodeStruct * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DTE )( 
            CodeStruct * This,
            /* [retval][out] */ __RPC__deref_out_opt DTE	**DTEObject);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            CodeStruct * This,
            /* [retval][out] */ __RPC__deref_out_opt CodeElements **ppCollection);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CodeStruct * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstringcontext][helpstring][helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CodeStruct * This,
            __RPC__in BSTR NewName);
        
        /* [helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            CodeStruct * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectItem )( 
            CodeStruct * This,
            /* [retval][out] */ __RPC__deref_out_opt ProjectItem **pProjItem);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            CodeStruct * This,
            /* [retval][out] */ __RPC__out enum vsCMElement *pCodeEltKind);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCodeType )( 
            CodeStruct * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsCodeType);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InfoLocation )( 
            CodeStruct * This,
            /* [retval][out] */ __RPC__out enum vsCMInfoLocation *pInfoLocation);
        
        /* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */ HRESUL